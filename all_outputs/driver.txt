_dl_map_object$$$push    r15^^^mov     r15d, r8d^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, r9^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 3C8h^^^test    r9, r9^^^mov     [rsp+3F8h+var_3D0], edx^^^mov     [rsp+3F8h+var_3C4], ecx^^^js      loc_4517E7^^^cmp     r9, cs:_dl_nns^^^jnb     loc_45199E^^^lea     rax, [r9+r9*8]^^^shl     rax, 4^^^mov     r14, ds:_dl_ns[rax]^^^test    r14, r14^^^jnz     short loc_45117F^^^jmp     short loc_4511B8^^^test    byte ptr [r14+315h], 1^^^jz      loc_451758^^^mov     r14, [r14+18h]^^^test    r14, r14^^^jz      short loc_4511B8^^^movzx   eax, byte ptr [r14+315h]^^^test    al, 2^^^jnz     short loc_451176^^^test    al, 20h^^^jnz     short loc_451176^^^mov     rsi, r14^^^mov     rdi, rbx^^^call    _dl_name_match_p^^^test    eax, eax^^^jz      short loc_451168^^^add     rsp, 3C8h^^^mov     rax, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    r12, r12^^^setnz   [rsp+3F8h+var_3C9]^^^jnz     loc_4512B0^^^mov     eax, r15d^^^and     eax, 10000000h^^^mov     [rsp+3F8h+var_3C8], eax^^^mov     esi, 2Fh^^^mov     rdi, rbx^^^mov     [rsp+3F8h+var_39], 0^^^call    sub_4003C0^^^test    rax, rax^^^jz      loc_451305^^^cmp     [rsp+3F8h+var_3C9], 0^^^jz      loc_4513C8^^^xor     edx, edx^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    expand_dynamic_string_token^^^test    rax, rax^^^mov     [rsp+3F8h+var_58], rax^^^mov     r13d, 0FFFFFFFFh^^^jz      short loc_451241^^^lea     rdx, [rsp+3F8h+var_39]^^^lea     rsi, [rsp+3F8h+var_3A8]^^^mov     ecx, 1^^^mov     rdi, rax^^^call    open_verify_isra_4^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jz      loc_4519E7^^^mov     edi, [rsp+3F8h+var_3C8]^^^mov     eax, 0^^^test    edi, edi^^^cmovnz  r12, rax^^^cmp     r13d, 0FFFFFFFFh^^^jz      loc_451800^^^mov     rax, cs:__libc_stack_end^^^mov     r9d, [rsp+3F8h+var_3D0]^^^lea     rdx, [rsp+3F8h+var_3A8]^^^mov     rcx, [rsp+3F8h+var_58]^^^mov     r8, r12^^^mov     esi, r13d^^^mov     rdi, rbx^^^mov     [rsp+3F8h+var_3E8], rbp^^^mov     dword ptr [rsp+3F8h+var_3F8], r15d^^^mov     [rsp+3F8h+var_48], rax^^^lea     rax, [rsp+3F8h+var_48]^^^mov     [rsp+3F8h+var_3F0], rax^^^call    _dl_map_object_from_fd^^^mov     r14, rax^^^jmp     loc_45119E^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jz      loc_4511C6^^^mov     rcx, [r12+8]^^^mov     r8, [r12+30h]^^^cmp     byte ptr [rcx], 0^^^jz      short loc_4512F9^^^mov     edx, r15d^^^mov     eax, offset aFileSLuNeededB^^^mov     edi, offset aFileSLuDynamic^^^and     edx, 10000000h^^^mov     rsi, rbx^^^mov     [rsp+3F8h+var_3C8], edx^^^cmovz   rdi, rax^^^mov     rdx, rbp^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_4511D2^^^mov     rax, cs:_dl_argv^^^mov     rcx, [rax]^^^jmp     short loc_4512CC^^^mov     rdi, rbx^^^call    strlen^^^add     rax, 1^^^test    byte ptr cs:_dl_debug_mask, 1^^^mov     [rsp+3F8h+var_3B8], rax^^^jnz     loc_4519B7^^^test    r12, r12^^^jz      loc_4515AA^^^cmp     qword ptr [r12+128h], 0^^^jz      loc_4515AA^^^cmp     cs:env_path_list, 0FFFFFFFFFFFFFFFFh^^^jz      loc_4513FA^^^cmp     [rsp+3F8h+var_3C9], 0^^^mov     rax, r12^^^lea     rcx, [rsp+3F8h+var_39]^^^cmovz   rax, cs:_dl_ns^^^mov     rsi, [rsp+3F8h+var_3B8]^^^mov     edx, r15d^^^lea     r9, [rsp+3F8h+var_3A8]^^^lea     r8, [rsp+3F8h+var_58]^^^and     edx, 4000000h^^^mov     [rsp+3F8h+var_3F0], rcx^^^mov     rdi, rbx^^^mov     ecx, offset env_path_list^^^mov     [rsp+3F8h+var_3F8], rax^^^call    open_path_isra_5^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jz      short loc_451400^^^cmp     r13d, 0FFFFFFFFh^^^jz      loc_451493^^^test    byte ptr cs:_dl_debug_mask, 1^^^jz      loc_451241^^^mov     edi, (offset aCallingFiniSLu+18h)^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_451241^^^mov     rdi, rbx^^^call    strlen^^^lea     r13, [rax+1]^^^mov     rdi, r13^^^call    malloc^^^mov     rdi, rax^^^xor     eax, eax^^^test    rdi, rdi^^^jz      loc_451208^^^mov     rdx, r13^^^mov     rsi, rbx^^^call    memcpy^^^jmp     loc_451208^^^mov     r13d, 0FFFFFFFFh^^^cmp     [rsp+3F8h+var_3C9], 0^^^jz      short loc_45139A^^^mov     rax, [r12+3A8h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_451493^^^test    rax, rax^^^lea     r13, [r12+3A8h]^^^jz      short loc_451461^^^mov     rsi, [rsp+3F8h+var_3B8]^^^lea     rax, [rsp+3F8h+var_39]^^^mov     edx, r15d^^^lea     r9, [rsp+3F8h+var_3A8]^^^lea     r8, [rsp+3F8h+var_58]^^^mov     rcx, r13^^^and     edx, 4000000h^^^mov     rdi, rbx^^^mov     [rsp+3F8h+var_3F0], rax^^^mov     [rsp+3F8h+var_3F8], r12^^^call    open_path_isra_5^^^mov     r13d, eax^^^jmp     loc_45139A^^^mov     rax, [r12+128h]^^^test    rax, rax^^^jz      loc_4517C5^^^mov     rdx, [r12+68h]^^^mov     rsi, [rax+8]^^^mov     ecx, offset aRunpath^^^mov     rdi, r13^^^add     rsi, [rdx+8]^^^mov     rdx, r12^^^call    decompose_rpath^^^test    al, al^^^jnz     short loc_451422^^^mov     edx, r15d^^^and     edx, 4000000h^^^mov     dword ptr [rsp+3F8h+var_3C0], edx^^^jnz     loc_4518A7^^^mov     rdi, rbx^^^call    _dl_load_cache_lookup^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_45153A^^^cmp     [rsp+3F8h+var_3C9], 0^^^jz      short loc_4514D0^^^test    byte ptr [r12+3D5h], 8^^^jnz     loc_4518BC^^^lea     rdx, [rsp+3F8h+var_39]^^^lea     rsi, [rsp+3F8h+var_3A8]^^^xor     ecx, ecx^^^mov     rdi, r14^^^call    open_verify_isra_4^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jz      short loc_45153A^^^mov     rdi, r14^^^call    strlen^^^lea     rdx, [rax+1]^^^mov     rdi, rdx^^^mov     [rsp+3F8h+var_3D8], rdx^^^call    malloc^^^test    rax, rax^^^mov     rdx, [rsp+3F8h+var_3D8]^^^jz      loc_4517D6^^^mov     rsi, r14^^^mov     rdi, rax^^^call    memcpy^^^test    rax, rax^^^mov     [rsp+3F8h+var_58], rax^^^jnz     loc_4513A4^^^mov     edi, r13d^^^call    close^^^cmp     [rsp+3F8h+var_3C9], 0^^^mov     rax, r12^^^jz      loc_4517B0^^^test    rax, rax^^^mov     r13d, 0FFFFFFFFh^^^jz      short loc_451560^^^test    byte ptr [rax+3D5h], 8^^^jnz     loc_4513A4^^^cmp     cs:rtld_search_dirs, 0FFFFFFFFFFFFFFFFh^^^jz      loc_4513A4^^^lea     rdx, [rsp+3F8h+var_39]^^^mov     rsi, [rsp+3F8h+var_3B8]^^^lea     r9, [rsp+3F8h+var_3A8]^^^lea     r8, [rsp+3F8h+var_58]^^^mov     ecx, offset rtld_search_dirs^^^mov     rdi, rbx^^^mov     [rsp+3F8h+var_3F0], rdx^^^mov     edx, dword ptr [rsp+3F8h+var_3C0]^^^mov     [rsp+3F8h+var_3F8], rax^^^call    open_path_isra_5^^^mov     r13d, eax^^^jmp     loc_4513A4^^^cmp     [rsp+3F8h+var_3C9], 0^^^mov     rcx, cs:_dl_ns^^^mov     [rsp+3F8h+var_3C0], rcx^^^jz      loc_4516A6^^^mov     edx, r15d^^^xor     eax, eax^^^mov     [rsp+3F8h+var_3AC], r15d^^^and     edx, 4000000h^^^mov     r13, rbp^^^mov     r14, r12^^^mov     [rsp+3F8h+var_3B0], edx^^^mov     r15d, eax^^^mov     rbp, rbx^^^jmp     short loc_45163C^^^lea     rcx, [rsp+3F8h+var_39]^^^mov     edx, [rsp+3F8h+var_3B0]^^^mov     rsi, [rsp+3F8h+var_3B8]^^^lea     r9, [rsp+3F8h+var_3A8]^^^lea     r8, [rsp+3F8h+var_58]^^^mov     rdi, rbp^^^mov     [rsp+3F8h+var_3F0], rcx^^^mov     rcx, rbx^^^mov     [rsp+3F8h+var_3F8], r12^^^call    open_path_isra_5^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_45179D^^^xor     eax, eax^^^cmp     r14, [rsp+3F8h+var_3C0]^^^setz    al^^^or      r15d, eax^^^mov     r14, [r14+2D8h]^^^test    r14, r14^^^jz      short loc_451690^^^mov     rax, [r14+318h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_451630^^^test    rax, rax^^^lea     rbx, [r14+318h]^^^jnz     short loc_4515E8^^^mov     rdx, [r14+0B8h]^^^test    rdx, rdx^^^jz      loc_451748^^^mov     rax, [r14+68h]^^^mov     rsi, [rdx+8]^^^mov     ecx, offset aRpath^^^mov     rdx, r14^^^mov     rdi, rbx^^^add     rsi, [rax+8]^^^call    decompose_rpath^^^test    al, al^^^jz      short loc_451630^^^jmp     loc_4515E8^^^mov     eax, r15d^^^mov     rbx, rbp^^^mov     r15d, [rsp+3F8h+var_3AC]^^^test    al, al^^^mov     rbp, r13^^^jnz     loc_45133B^^^cmp     [rsp+3F8h+var_3C0], 0^^^jz      loc_45133B^^^mov     rdx, [rsp+3F8h+var_3C0]^^^movzx   eax, byte ptr [rdx+314h]^^^and     eax, 3^^^cmp     al, 2^^^jz      loc_45133B^^^mov     rax, [rdx+318h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_45133B^^^mov     r13, rdx^^^add     r13, 318h^^^test    rax, rax^^^jz      loc_45195E^^^cmp     [rsp+3F8h+var_3C9], 0^^^mov     rax, [rsp+3F8h+var_3C0]^^^lea     rcx, [rsp+3F8h+var_39]^^^mov     rsi, [rsp+3F8h+var_3B8]^^^mov     edx, r15d^^^lea     r9, [rsp+3F8h+var_3A8]^^^lea     r8, [rsp+3F8h+var_58]^^^mov     [rsp+3F8h+var_3F0], rcx^^^mov     rdi, rbx^^^mov     rcx, r13^^^cmovnz  rax, r12^^^and     edx, 4000000h^^^mov     [rsp+3F8h+var_3F8], rax^^^call    open_path_isra_5^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jnz     loc_4513A4^^^jmp     loc_45133B^^^mov     qword ptr [r14+318h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_451630^^^mov     rax, [r14+0B0h]^^^test    rax, rax^^^jz      loc_451176^^^mov     rdx, [r14+68h]^^^mov     rdi, rbx^^^mov     rsi, [rdx+8]^^^add     rsi, [rax+8]^^^call    sub_4003A0^^^test    eax, eax^^^jnz     loc_451176^^^mov     rdi, [r14+38h]^^^mov     rsi, rbx^^^call    add_name_to_object_isra_3^^^or      byte ptr [r14+315h], 1^^^jmp     loc_45119E^^^mov     rbx, rbp^^^mov     r15d, [rsp+3F8h+var_3AC]^^^mov     rbp, r13^^^mov     r13d, eax^^^jmp     loc_4513A4^^^lea     rax, [rbp+rbp*8+0]^^^shl     rax, 4^^^mov     rax, ds:_dl_ns[rax]^^^jmp     loc_451548^^^mov     qword ptr [r12+3A8h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_451493^^^mov     [rsp+3F8h+var_58], 0^^^jmp     loc_451532^^^mov     ecx, offset __PRETTY_FUNCTION___11317^^^mov     edx, 8EBh^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aNsid0^^^call    __assert_fail^^^mov     esi, [rsp+3F8h+var_3C4]^^^test    esi, esi^^^jz      loc_45193F^^^test    byte ptr cs:_dl_debug_mask+1, 8^^^jnz     loc_45193F^^^mov     rdi, rbx^^^call    strlen^^^lea     r13, [rax+1]^^^mov     rdi, r13^^^call    malloc^^^test    rax, rax^^^jz      loc_451920^^^mov     rdx, r13^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    memcpy^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_451923^^^mov     edx, [rsp+3F8h+var_3D0]^^^mov     r9, rbp^^^mov     r8d, r15d^^^mov     rcx, r12^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    _dl_new_object^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_451923^^^or      byte ptr [rax+315h], 2^^^or      byte ptr [rax+314h], 4^^^mov     rsi, rbp^^^mov     qword ptr [rax+308h], offset dummy_bucket_11344^^^mov     dword ptr [rax+2ECh], 1^^^mov     rdi, rax^^^call    _dl_add_to_namespace_list^^^jmp     loc_45119E^^^mov     r8d, cs:__libc_enable_secure^^^test    r8d, r8d^^^jnz     loc_45153A^^^jmp     loc_4514A6^^^mov     edx, 16h^^^mov     esi, offset system_dirs^^^mov     rdi, rax^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_451918^^^mov     edx, 1Ah^^^mov     esi, offset aUsrLibX86_64Li^^^mov     rdi, r14^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_451918^^^mov     edx, 5^^^mov     esi, offset aLib^^^mov     rdi, r14^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_451918^^^mov     edx, 9^^^mov     esi, offset aUsrLib^^^mov     rdi, r14^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_4514D0^^^mov     rax, r12^^^jmp     loc_451548^^^xor     r13d, r13d^^^mov     rdi, r13^^^call    free^^^mov     ecx, offset aCannotCreateSh^^^xor     edx, edx^^^mov     rsi, rbx^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^cmp     [rsp+3F8h+var_39], 0^^^jz      loc_4519CE^^^mov     ecx, offset aWrongElfClassE^^^xor     edx, edx^^^mov     rsi, rbx^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     rax, [rdx+0B8h]^^^test    rax, rax^^^jz      loc_4519F9^^^mov     rcx, [rsp+3F8h+var_3C0]^^^mov     rsi, [rax+8]^^^mov     rdi, r13^^^mov     rdx, [rcx+68h]^^^mov     ecx, offset aRpath^^^add     rsi, [rdx+8]^^^mov     rdx, [rsp+3F8h+var_3C0]^^^call    decompose_rpath^^^test    al, al^^^jz      loc_45133B^^^jmp     loc_4516ED^^^mov     ecx, offset __PRETTY_FUNCTION___11317^^^mov     edx, 8ECh^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aNsid_dl_nns^^^call    __assert_fail^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     edi, offset aFindLibrarySLu^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_451323^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, offset aCannotOpenShar^^^xor     edx, edx^^^mov     rsi, rbx^^^mov     edi, fs:[rax]^^^call    _dl_signal_error^^^mov     rdi, [rsp+3F8h+var_58]^^^call    free^^^jmp     loc_451241^^^mov     qword ptr [rdx+318h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_45133B^^^
_IO_file_open$$$mov     [rsp+var_18], rbx^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^mov     [rsp+var_10], rbp^^^xor     eax, eax^^^sub     rsp, 18h^^^test    byte ptr [rbx+74h], 2^^^mov     rdi, rsi^^^mov     r12d, r8d^^^mov     esi, edx^^^mov     edx, ecx^^^jnz     loc_42A554^^^call    open64^^^mov     ebp, eax^^^test    ebp, ebp^^^js      loc_42A550^^^mov     edx, [rbx]^^^mov     eax, r12d^^^and     r12d, 1004h^^^and     eax, 100Ch^^^mov     [rbx+70h], ebp^^^and     edx, 0FFFFEFF3h^^^or      eax, edx^^^cmp     r12d, 1004h^^^mov     [rbx], eax^^^jz      short loc_42A510^^^mov     rdi, rbx^^^call    _IO_link_in^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rax, [rbx+0D8h]^^^xor     esi, esi^^^mov     ecx, 3^^^mov     edx, 2^^^mov     rdi, rbx^^^call    qword ptr [rax+48h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_42A4F2^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 1Dh^^^jz      short loc_42A4F2^^^mov     edi, ebp^^^xor     ebx, ebx^^^call    __close_nocancel^^^jmp     short loc_42A4FA^^^xor     ebx, ebx^^^jmp     short loc_42A4FA^^^call    __open_nocancel^^^mov     ebp, eax^^^jmp     loc_42A4C3^^^
_dl_debug_vdprintf$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^xor     r15d, r15d^^^push    r14^^^mov     r14d, esi^^^push    r13^^^lea     r13, [rbp+var_40]^^^push    r12^^^lea     rax, [r13+0Ah]^^^mov     r12, rdx^^^push    rbx^^^xor     ebx, ebx^^^sub     rsp, 448h^^^mov     [rbp+var_450], rax^^^movzx   eax, byte ptr [r12]^^^mov     [rbp+var_454], edi^^^mov     [rbp+var_448], rcx^^^test    al, al^^^jz      loc_455912^^^nop     dword ptr [rax+rax+00000000h]^^^test    r14d, r14d^^^jle     short loc_455890^^^test    r15d, r15d^^^jz      loc_455A50^^^cmp     ebx, 3Fh^^^jg      loc_455D17^^^movsxd  rax, ebx^^^mov     r14d, 0FFFFFFFFh^^^add     ebx, 1^^^shl     rax, 4^^^mov     [rbp+rax+var_438], 0Ch^^^mov     [rbp+rax+var_440], r13^^^movzx   eax, byte ptr [r12]^^^cmp     al, 25h^^^mov     rdx, r12^^^jz      short loc_4558C8^^^test    al, al^^^jz      short loc_4558C8^^^test    r14d, r14d^^^jz      loc_455944^^^jmp     short loc_4558BF^^^add     rdx, 1^^^movzx   eax, byte ptr [rdx]^^^cmp     al, 25h^^^jz      short loc_4558C8^^^test    al, al^^^jz      short loc_4558C8^^^cmp     al, 0Ah^^^jnz     short loc_4558B0^^^nop     dword ptr [rax+rax+00h]^^^cmp     ebx, 3Fh^^^jg      loc_455D49^^^mov     rsi, rdx^^^movsxd  rcx, ebx^^^sub     rsi, r12^^^shl     rcx, 4^^^test    rsi, rsi^^^mov     [rbp+rcx+var_438], rsi^^^jz      short loc_4558F6^^^mov     [rbp+rcx+var_440], r12^^^add     ebx, 1^^^cmp     al, 25h^^^jz      short loc_455958^^^cmp     al, 0Ah^^^jz      loc_455AA0^^^mov     r12, rdx^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jnz     loc_455850^^^movsxd  rdi, [rbp+var_454]^^^movsxd  rdx, ebx^^^lea     rsi, [rbp+var_440]^^^mov     eax, 14h^^^syscall^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^test    al, al^^^jz      short loc_4558C8^^^add     rdx, 1^^^movzx   eax, byte ptr [rdx]^^^cmp     al, 25h^^^jnz     short loc_455940^^^jmp     loc_4558C8^^^movzx   eax, byte ptr [rdx+1]^^^lea     r12, [rdx+1]^^^mov     r8d, 20h^^^cmp     al, 30h^^^jz      loc_455C40^^^cmp     al, 2Ah^^^mov     r10d, 0FFFFFFFFh^^^jz      loc_455BC8^^^cmp     al, 2Eh^^^mov     edx, 0FFFFFFFFh^^^jz      loc_455BFF^^^cmp     al, 5Ah^^^jnz     loc_455AD0^^^movzx   eax, byte ptr [r12+1]^^^add     r12, 1^^^mov     ecx, 1^^^cmp     al, 75h^^^jz      loc_455AE8^^^jg      loc_455BB8^^^cmp     al, 25h^^^jz      loc_455C53^^^cmp     al, 73h^^^jz      short loc_4559D3^^^mov     ecx, offset __PRETTY_FUNCTION___10726^^^mov     edx, 0DCh^^^mov     esi, offset aDlMisc_c^^^mov     edi, offset aInvalidFormatS^^^call    __assert_fail^^^mov     rax, [rbp+var_448]^^^mov     ecx, [rax]^^^cmp     ecx, 30h^^^jnb     loc_455CA3^^^mov     rsi, rax^^^mov     eax, ecx^^^add     ecx, 8^^^add     rax, [rsi+10h]^^^mov     [rsi], ecx^^^mov     rdi, [rax]^^^movsxd  rcx, ebx^^^shl     rcx, 4^^^mov     [rbp+rcx+var_440], rdi^^^mov     [rbp+var_460], edx^^^mov     [rbp+var_468], rcx^^^call    strlen^^^mov     edx, [rbp+var_460]^^^mov     rcx, [rbp+var_468]^^^cmp     edx, 0FFFFFFFFh^^^mov     [rbp+rcx+var_438], rax^^^jz      loc_455C6E^^^movsxd  rdx, edx^^^cmp     rax, rdx^^^cmova   rax, rdx^^^mov     [rbp+rcx+var_438], rax^^^jmp     loc_455C6E^^^call    getpid^^^test    eax, eax^^^mov     r15d, eax^^^js      loc_455D30^^^mov     rsi, [rbp+var_450]^^^xor     ecx, ecx^^^movsxd  rdi, eax^^^mov     edx, 0Ah^^^call    _itoa_word^^^cmp     rax, r13^^^jbe     short loc_455A8C^^^nop     dword ptr [rax+rax+00h]^^^sub     rax, 1^^^cmp     rax, r13^^^mov     byte ptr [rax], 20h^^^jnz     short loc_455A80^^^mov     [rbp+var_36], 3Ah^^^mov     [rbp+var_35], 9^^^jmp     loc_45585E^^^cmp     rdx, r12^^^jz      loc_455CB7^^^lea     eax, [rbx-1]^^^cdqe^^^shl     rax, 4^^^add     [rbp+rax+var_438], 1^^^add     rdx, 1^^^mov     r14d, 1^^^jmp     loc_455902^^^xor     ecx, ecx^^^cmp     al, 6Ch^^^jz      loc_455991^^^cmp     al, 75h^^^jnz     loc_4559A8^^^nop     word ptr [rax+rax+00h]^^^test    ecx, ecx^^^mov     rcx, [rbp+var_448]^^^mov     edx, [rcx]^^^jz      loc_455C8C^^^cmp     edx, 30h^^^jnb     loc_455CE2^^^mov     eax, edx^^^add     rax, [rcx+10h]^^^add     edx, 8^^^mov     [rcx], edx^^^mov     rdi, [rax]^^^sub     rsp, 30h^^^mov     esi, 10h^^^mov     edx, 0Ah^^^lea     r9, [rsp+4A0h+var_491]^^^and     r9, 0FFFFFFFFFFFFFFF0h^^^add     r9, 18h^^^cmp     byte ptr [r12], 78h^^^mov     byte ptr [rbp+var_460], r8b^^^mov     [rbp+var_470], r9^^^mov     dword ptr [rbp+var_468], r10d^^^cmovz   edx, esi^^^xor     ecx, ecx^^^mov     rsi, r9^^^call    _itoa_word^^^mov     r10d, dword ptr [rbp+var_468]^^^mov     r9, [rbp+var_470]^^^movzx   r8d, byte ptr [rbp+var_460]^^^cmp     r10d, 0FFFFFFFFh^^^mov     rdx, r9^^^jz      loc_455CDA^^^sub     rdx, rax^^^movsxd  r10, r10d^^^cmp     rdx, r10^^^jge     short loc_455B92^^^sub     rax, 1^^^mov     rdx, r9^^^sub     rdx, rax^^^mov     [rax], r8b^^^cmp     rdx, r10^^^jl      short loc_455B80^^^movsxd  rcx, ebx^^^add     ebx, 1^^^shl     rcx, 4^^^mov     [rbp+rcx+var_440], rax^^^mov     [rbp+rcx+var_438], rdx^^^jmp     loc_455C71^^^cmp     al, 78h^^^jnz     loc_4559BA^^^jmp     loc_455AE8^^^mov     rcx, [rbp+var_448]^^^mov     edx, [rcx]^^^cmp     edx, 30h^^^jnb     loc_455C7B^^^mov     eax, edx^^^add     rax, [rcx+10h]^^^add     edx, 8^^^mov     [rcx], edx^^^mov     r10d, [rax]^^^movzx   eax, byte ptr [r12+1]^^^add     r12, 1^^^mov     edx, 0FFFFFFFFh^^^cmp     al, 2Eh^^^jnz     loc_455989^^^cmp     byte ptr [r12+1], 2Ah^^^jnz     loc_4559BA^^^mov     rcx, [rbp+var_448]^^^mov     edx, [rcx]^^^cmp     edx, 30h^^^jnb     loc_455D06^^^mov     eax, edx^^^add     rax, [rcx+10h]^^^add     edx, 8^^^mov     [rcx], edx^^^mov     edx, [rax]^^^movzx   eax, byte ptr [r12+2]^^^add     r12, 2^^^jmp     loc_455989^^^lea     r12, [rdx+2]^^^movzx   eax, byte ptr [rdx+2]^^^mov     r8d, 30h^^^jmp     loc_45596E^^^movsxd  rax, ebx^^^shl     rax, 4^^^mov     [rbp+rax+var_440], r12^^^mov     [rbp+rax+var_438], 1^^^add     ebx, 1^^^lea     rdx, [r12+1]^^^jmp     loc_455902^^^mov     rax, [rcx+8]^^^lea     rdx, [rax+8]^^^mov     [rcx+8], rdx^^^jmp     loc_455BE5^^^cmp     edx, 30h^^^jnb     short loc_455CF3^^^mov     eax, edx^^^add     rax, [rcx+10h]^^^add     edx, 8^^^mov     [rcx], edx^^^mov     edi, [rax]^^^jmp     loc_455B10^^^mov     rsi, rax^^^mov     rax, [rax+8]^^^lea     rcx, [rax+8]^^^mov     [rsi+8], rcx^^^jmp     loc_4559F3^^^movsxd  rax, ebx^^^add     ebx, 1^^^shl     rax, 4^^^mov     [rbp+rax+var_440], rdx^^^mov     [rbp+rax+var_438], 1^^^jmp     loc_455ABB^^^sub     rdx, rax^^^jmp     loc_455B92^^^mov     rax, [rcx+8]^^^lea     rdx, [rax+8]^^^mov     [rcx+8], rdx^^^jmp     loc_455B0D^^^mov     rax, [rcx+8]^^^lea     rdx, [rax+8]^^^mov     [rcx+8], rdx^^^mov     edi, [rax]^^^jmp     loc_455B10^^^mov     rax, [rcx+8]^^^lea     rdx, [rax+8]^^^mov     [rcx+8], rdx^^^jmp     loc_455C28^^^mov     ecx, offset __PRETTY_FUNCTION___10726^^^mov     edx, 6Fh^^^mov     esi, offset aDlMisc_c^^^mov     edi, offset aNiov64^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10726^^^mov     edx, 66h^^^mov     esi, offset aDlMisc_c^^^mov     edi, offset aPid0SizeofPid_^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10726^^^mov     edx, 7Ch^^^mov     esi, offset aDlMisc_c^^^mov     edi, offset aNiov64^^^call    __assert_fail^^^
__openat_nocancel$$$mov     r10d, ecx^^^movsxd  rdx, edx^^^movsxd  rdi, edi^^^mov     eax, 101h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44CDBA^^^rep retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_IO_wdefault_xsputn$$$push    r15^^^xor     eax, eax^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^test    rdx, rdx^^^jz      loc_427166^^^mov     rbp, rdx^^^mov     rbx, rsi^^^nop     dword ptr [rax]^^^mov     r13, [r12+0A0h]^^^mov     rdi, [r13+20h]^^^mov     rax, [r13+28h]^^^sub     rax, rdi^^^sar     rax, 2^^^test    rax, rax^^^jle     loc_4270F2^^^cmp     rbp, rax^^^mov     r8, rbp^^^cmovnb  r8, rax^^^cmp     r8, 14h^^^jg      loc_427140^^^xor     r14d, r14d^^^test    r8, r8^^^jle     loc_4270EF^^^mov     rsi, r8^^^lea     rdx, [r8-1]^^^mov     r14, r8^^^shr     rsi, 2^^^lea     r10, ds:0[rsi*4]^^^test    r10, r10^^^jz      loc_427175^^^lea     rax, [rbx+10h]^^^cmp     r8, 0Bh^^^lea     r9, [rdi+10h]^^^setnbe  cl^^^cmp     rdi, rax^^^setnbe  al^^^cmp     rbx, r9^^^setnbe  r9b^^^or      eax, r9d^^^test    cl, al^^^jz      loc_427175^^^xor     eax, eax^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movdqu  xmm0, xmmword ptr [rbx+rax]^^^add     rcx, 1^^^movdqu  xmmword ptr [rdi+rax], xmm0^^^add     rax, 10h^^^cmp     rsi, rcx^^^ja      short loc_427098^^^lea     r9, ds:0[r10*4]^^^sub     rdx, r10^^^lea     rsi, [rbx+r9]^^^add     r9, rdi^^^cmp     r8, r10^^^jz      short loc_4270E1^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00000000h]^^^mov     ecx, [rsi+rax]^^^mov     [r9+rax], ecx^^^add     rax, 4^^^sub     rdx, 1^^^jns     short loc_4270D0^^^shl     r8, 2^^^add     rbx, r8^^^add     r8, rdi^^^mov     [r13+20h], r8^^^sub     rbp, r14^^^test    rbp, rbp^^^jz      short loc_427160^^^mov     edx, [r12+0C0h]^^^mov     r13d, [rbx]^^^test    edx, edx^^^jnz     short loc_427113^^^mov     esi, 1^^^mov     rdi, r12^^^call    _IO_fwide^^^mov     rax, [r12+0D8h]^^^mov     esi, r13d^^^mov     rdi, r12^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_427160^^^add     rbx, 4^^^sub     rbp, 1^^^jmp     loc_427008^^^mov     r14, r8^^^mov     rsi, rbx^^^mov     rdx, r8^^^call    wmempcpy^^^lea     rbx, [rbx+r14*4]^^^mov     [r13+20h], rax^^^jmp     short loc_4270EF^^^mov     rax, r15^^^sub     rax, rbp^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r9, rdi^^^mov     rsi, rbx^^^jmp     loc_4270C6^^^
fclose$$$push    r12             ^^^push    rbp^^^push    rbx^^^mov     ecx, [rdi]^^^mov     rbx, rdi^^^test    ch, 20h^^^mov     edx, ecx^^^jnz     loc_425550^^^mov     eax, ecx^^^and     eax, 8000h^^^jnz     short loc_425429^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_425423^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42540D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_37_0^^^jmp     short loc_425416^^^cmpxchg [rdx], esi^^^jnz     _L_lock_37_0^^^mov     rdx, [rbx+88h]^^^mov     ecx, [rbx]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     edx, ecx^^^mov     ebp, ecx^^^shl     ebp, 1Ah^^^sar     ebp, 1Fh^^^and     ch, 20h^^^jnz     loc_425538^^^and     dh, 80h^^^jnz     short loc_425460^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jz      loc_425560^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rbx+0D8h]^^^xor     esi, esi^^^mov     rdi, rbx^^^call    qword ptr [rax+10h]^^^mov     eax, [rbx+0C0h]^^^test    eax, eax^^^jle     loc_425520^^^mov     r12, [rbx+98h]^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4254A4^^^lock cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_101^^^jmp     short loc_4254B1^^^cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_101^^^mov     rdi, [r12+48h]^^^call    __gconv_release_step^^^mov     rdi, [r12+90h]^^^call    __gconv_release_step^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4254E0^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_110^^^jmp     short loc_4254EC^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_110^^^cmp     rbx, cs:stdin^^^jz      short loc_425515^^^cmp     rbx, cs:stdout^^^jz      short loc_425515^^^cmp     rbx, cs:stderr^^^jz      short loc_425515^^^mov     dword ptr [rbx], 0^^^mov     rdi, rbx^^^call    free^^^pop     rbx^^^mov     eax, ebp^^^pop     rbp^^^pop     r12^^^retn^^^cmp     qword ptr [rbx+48h], 0^^^jz      short loc_4254EC^^^mov     rdi, rbx^^^call    _IO_free_backup_area^^^jmp     short loc_4254EC^^^mov     rdi, rbx^^^call    _IO_new_file_close_it^^^mov     ebp, eax^^^mov     edx, [rbx]^^^jmp     loc_42543A^^^call    _IO_un_link^^^mov     ecx, [rbx]^^^mov     edx, ecx^^^jmp     loc_4253D4^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42557C^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_195^^^jmp     short loc_425584^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_195^^^jmp     loc_425460^^^
_L_lock_647$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_46E748^^^
_L_unlock_5611$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4050D4^^^
_IO_list_unlock$$$mov     eax, cs:dword_6C5624^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C5624, eax^^^jnz     short locret_42D342^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42D336^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_4145^^^jmp     short locret_42D342^^^dec     cs:list_all_lock^^^jnz     _L_unlock_4145^^^rep retn^^^
_dl_tls_setup$$$mov     rax, cs:_dl_tls_static_size^^^mov     cs:static_slotinfo, 40h^^^mov     cs:_dl_tls_max_dtv_idx, 1^^^mov     cs:_dl_tls_dtv_slotinfo_list, offset static_slotinfo^^^mov     cs:_dl_tls_static_used, 900h^^^mov     cs:_dl_tls_static_align, 40h^^^add     rax, 93Fh^^^mov     cs:_dl_tls_static_nelem, 1^^^and     rax, 0FFFFFFFFFFFFFFC0h^^^add     rax, 900h^^^mov     cs:_dl_tls_static_size, rax^^^xor     eax, eax^^^retn^^^
__new_exitfn$$$push    rbp^^^mov     esi, 1^^^xor     eax, eax^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_401E29^^^lock cmpxchg cs:lock, esi^^^jnz     _L_lock_324^^^jmp     short loc_401E36^^^cmpxchg cs:lock, esi^^^jnz     _L_lock_324^^^mov     rbp, [rbx]^^^xor     eax, eax^^^test    rbp, rbp^^^mov     rdi, rbp^^^jz      loc_401F25^^^nop     word ptr [rax+rax+00000000h]^^^mov     rsi, [rdi+8]^^^test    rsi, rsi^^^jz      short loc_401E97^^^lea     rdx, [rsi-1]^^^mov     rcx, rdx^^^shl     rcx, 5^^^cmp     qword ptr [rdi+rcx+10h], 0^^^jnz     short loc_401EB0^^^shl     rsi, 5^^^lea     rcx, [rdi+rsi-30h]^^^jmp     short loc_401E8F^^^sub     rcx, 20h^^^cmp     qword ptr [rcx+20h], 0^^^jnz     short loc_401EB0^^^sub     rdx, 1^^^test    rdx, rdx^^^mov     rsi, rdx^^^jnz     short loc_401E80^^^mov     rdx, [rdi]^^^mov     qword ptr [rdi+8], 0^^^mov     rax, rdi^^^test    rdx, rdx^^^jz      short loc_401F27^^^mov     rdi, rdx^^^jmp     short loc_401E50^^^cmp     rsi, 20h^^^jz      short loc_401F10^^^mov     rax, rsi^^^add     rsi, 1^^^shl     rax, 5^^^mov     [rdi+8], rsi^^^lea     rdx, [rdi+rax+10h]^^^mov     qword ptr [rdx], 1^^^add     cs:__new_exitfn_called, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_401EF1^^^lock dec cs:lock^^^jnz     _L_unlock_426^^^jmp     short loc_401EFD^^^dec     cs:lock^^^jnz     _L_unlock_426^^^add     rsp, 8^^^mov     rax, rdx^^^pop     rbx^^^pop     rbp^^^retn^^^xor     edx, edx^^^test    rax, rax^^^jz      short loc_401F2E^^^lea     rdx, [rax+10h]^^^mov     qword ptr [rax+8], 1^^^jmp     short loc_401ECA^^^xor     eax, eax^^^mov     edx, 1^^^jmp     short loc_401F12^^^test    dl, dl^^^jnz     short loc_401F50^^^mov     esi, 410h^^^mov     edi, 1^^^call    calloc^^^xor     edx, edx^^^test    rax, rax^^^jz      short loc_401ED9^^^mov     [rax], rbp^^^mov     [rbx], rax^^^jmp     short loc_401F17^^^mov     ecx, offset __PRETTY_FUNCTION___9516^^^mov     edx, 64h^^^mov     esi, offset aCxa_atexit_c^^^mov     edi, offset aLVoid0^^^call    __assert_fail^^^
sub_437C20$$$lea     rax, [rsi-30h]^^^mov     rsi, [rsi-8]^^^sub     rdi, 28h^^^mov     rcx, rdi^^^add     rdx, 2^^^mov     r8, [rax+20h]^^^mov     [rcx+20h], rsi^^^nop     dword ptr [rax+rax+00h]^^^
mALLOPt$$$push    rbp^^^mov     ebp, edi^^^push    rbx^^^mov     ebx, esi^^^sub     rsp, 8^^^mov     esi, cs:__libc_malloc_initialized^^^test    esi, esi^^^js      loc_403E6F^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403CB8^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_2758^^^jmp     short loc_403CC5^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_2758^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_403D20^^^mov     edi, offset main_arena^^^add     ebp, 8^^^call    malloc_consolidate_part_3^^^cmp     ebp, 9^^^jbe     short loc_403D62^^^mov     edx, 1          ^^^nop     dword ptr [rax]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403D08^^^lock dec cs:main_arena^^^jnz     _L_unlock_2788^^^jmp     short loc_403D14^^^dec     cs:main_arena^^^jnz     _L_unlock_2788^^^add     rsp, 8^^^mov     eax, edx^^^pop     rbx^^^pop     rbp^^^retn^^^lea     rax, qword_6C2148[rdx*8]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_403D20^^^add     ebp, 8^^^or      cs:dword_6C20E4, 1^^^mov     cs:global_max_fast, 80h^^^cmp     ebp, 9          ^^^mov     cs:qword_6C2138, offset qword_6C2138^^^ja      short loc_403CE8^^^jmp     ds:off_498008[rbp*8]^^^xor     edx, edx        ^^^cmp     ebx, 0A0h^^^ja      loc_403CF0^^^test    ebx, ebx^^^mov     eax, 10h^^^jz      short loc_403D8B^^^movsxd  rax, ebx^^^add     rax, 8^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     cs:global_max_fast, rax^^^mov     edx, 1^^^jmp     loc_403CF0^^^test    ebx, ebx        ^^^mov     edx, 1^^^jle     loc_403CF0^^^movsxd  rbx, ebx^^^mov     cs:qword_6C29A0, rbx^^^jmp     loc_403CF0^^^mov     cs:dword_6C29AC, ebx^^^mov     cs:dword_6C29B4, 1^^^mov     edx, 1^^^jmp     loc_403CF0^^^xor     edx, edx        ^^^cmp     ebx, 2000000h^^^ja      short loc_403DE8^^^movsxd  rbx, ebx^^^mov     dl, 1^^^mov     cs:qword_6C2990, rbx^^^mov     cs:dword_6C29B4, 1^^^jmp     loc_403CF0^^^movsxd  rbx, ebx        ^^^mov     cs:dword_6C29B4, 1^^^mov     edx, 1^^^mov     cs:qword_6C2988, rbx^^^jmp     loc_403CF0^^^movsxd  rbx, ebx        ^^^mov     cs:dword_6C29B4, 1^^^mov     edx, 1^^^mov     cs:mp_, rbx^^^jmp     loc_403CF0^^^mov     cs:perturb_byte, ebx^^^mov     edx, 1^^^jmp     loc_403CF0^^^mov     cs:check_action, ebx^^^mov     edx, 1^^^jmp     loc_403CF0^^^test    ebx, ebx        ^^^mov     edx, 1^^^jle     loc_403CF0^^^movsxd  rbx, ebx^^^mov     cs:qword_6C2998, rbx^^^jmp     loc_403CF0^^^call    ptmalloc_init_part_8^^^jmp     loc_403C98^^^
sub_4733F9$$$lea     rsi, [rbp-0B0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-1138h]^^^mov     r8d, [rbp-1130h]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, [rbp-10F4h]^^^mov     [rbp-0B0h], r8d^^^and     edx, 1^^^mov     r8d, [rbp-1148h]^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-1170h]^^^mov     [rbp-0A8h], eax^^^movzx   eax, byte ptr [rbp-1154h]^^^mov     [rbp-0ACh], r8d^^^mov     r8d, [rbp-1164h]^^^and     edx, 1^^^and     eax, 1^^^mov     [rbp-0A0h], r8d^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-1144h]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-116Ch]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-1158h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-1168h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-1178h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^mov     [rbp-0A4h], al^^^movzx   eax, byte ptr [rbp-1188h]^^^and     eax, 1^^^shl     eax, 3^^^or      eax, 4^^^cmp     dword ptr [rbp-1144h], 0^^^mov     [rbp-0A3h], al^^^jz      loc_4738BA^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-88h], edx^^^mov     [rbp-90h], rax^^^lea     rax, [rbp-90h]^^^lea     rdx, [rbp-70h]^^^mov     rdi, rbx^^^mov     [rbp-70h], rax^^^call    __printf_fp^^^test    eax, eax^^^js      loc_4736CF^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471EA0^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^ja      loc_473691^^^add     r14d, eax^^^jmp     loc_46F40A^^^lea     rsi, [rbp-0B0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-1138h]^^^mov     r8d, [rbp-1130h]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, [rbp-10F4h]^^^mov     [rbp-0B0h], r8d^^^and     edx, 1^^^mov     r8d, [rbp-1148h]^^^mov     byte ptr [rbp-0A3h], 4^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-1170h]^^^mov     [rbp-0A8h], eax^^^movzx   eax, byte ptr [rbp-1154h]^^^mov     [rbp-0ACh], r8d^^^mov     r8d, [rbp-1164h]^^^and     edx, 1^^^and     eax, 1^^^mov     [rbp-0A0h], r8d^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-1144h]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-116Ch]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-1158h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-1168h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-1178h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^cmp     dword ptr [rbp-1144h], 0^^^mov     [rbp-0A4h], al^^^jz      short loc_4736A3^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-88h], edx^^^mov     [rbp-90h], rax^^^lea     rax, [rbp-90h]^^^lea     rdx, [rbp-70h]^^^mov     rdi, rbx^^^mov     [rbp-70h], rax^^^call    __printf_fphex^^^test    eax, eax^^^js      short loc_47369A^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471EA0^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_473548^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     loc_4738E5^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-90h], rax^^^jmp     short loc_473650^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     short loc_4738F8^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-90h], rax^^^jmp     loc_47350C^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_4736C3^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4738D6^^^
munmap_chunk.part.4$$$lea     rdx, [rdi+10h]^^^mov     edi, cs:check_action^^^mov     esi, offset aMunmap_chunkIn^^^jmp     malloc_printerr^^^
_nl_intern_locale_data$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdx^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     ebx, edi^^^sub     rsp, 8^^^cmp     rdx, 7^^^jbe     loc_461FBB^^^cmp     edi, 3^^^mov     edx, [rsi]^^^mov     eax, 20051017h^^^jz      short loc_461D2E^^^mov     ecx, edi^^^mov     eax, 20090720h^^^xor     ecx, 20031115h^^^test    edi, edi^^^cmovnz  eax, ecx^^^cmp     eax, edx^^^jnz     loc_461FBB^^^mov     r15d, [rbp+4]^^^movsxd  r14, ebx^^^mov     r12d, r15d^^^cmp     r12, ds:_nl_category_num_items[r14*8]^^^jb      loc_461FBB^^^lea     rax, ds:8[r12*4]^^^cmp     r13, rax^^^jbe     loc_461FBB^^^lea     rdi, ds:40h[r12*8]^^^call    malloc^^^test    rax, rax^^^jz      loc_461FD0^^^test    r12, r12^^^mov     [rax+8], rbp^^^mov     [rax+10h], r13^^^mov     qword ptr [rax+28h], 0^^^mov     qword ptr [rax+20h], 0^^^mov     dword ptr [rax+30h], 0^^^mov     dword ptr [rax+34h], 0^^^mov     [rax+38h], r15d^^^jz      loc_461FD0^^^mov     ecx, [rbp+8]^^^cmp     r13, rcx^^^jb      loc_461FB3^^^xor     edx, edx^^^mov     edi, ebx^^^jmp     short loc_461DF2^^^test    ebx, ebx^^^jnz     loc_461FF8^^^cmp     rdx, 46h^^^jbe     short loc_461E10^^^xchg    ax, ax^^^add     rcx, rbp^^^mov     [rax+rdx*8+40h], rcx^^^add     rdx, 1^^^cmp     r12, rdx^^^jbe     loc_461FD0^^^mov     ecx, [rbp+rdx*4+8]^^^cmp     r13, rcx^^^jb      loc_461FB3^^^cmp     ebx, 0Ch^^^ja      short loc_461DC0^^^jmp     ds:off_4A1E60[rdi*8]^^^cmp     rdx, 0Fh^^^ja      loc_461FDF^^^nop     word ptr [rax+rax+00h]^^^mov     rsi, ds:_nl_value_types[r14*8]^^^cmp     dword ptr [rsi+rdx*4], 5^^^jnz     short loc_461DD0^^^test    cl, 3^^^jnz     loc_461FB3^^^mov     ecx, [rbp+rcx+0]^^^mov     [rax+rdx*8+40h], ecx^^^jmp     short loc_461DD8^^^cmp     rdx, 1^^^jbe     short loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 8Ah^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_0^^^call    __assert_fail^^^cmp     rdx, 4^^^jbe     short loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 89h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_1^^^call    __assert_fail^^^cmp     rdx, 0Ch^^^jbe     short loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 88h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_2^^^call    __assert_fail^^^cmp     rdx, 6^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 87h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_3^^^call    __assert_fail^^^cmp     rdx, 2^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 86h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_4^^^call    __assert_fail^^^cmp     rdx, 4^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 85h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_5^^^call    __assert_fail^^^cmp     rdx, 2Dh^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 84h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_6^^^call    __assert_fail^^^cmp     rdx, 12h^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 83h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_7^^^call    __assert_fail^^^cmp     rdx, 5^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 81h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_8^^^call    __assert_fail^^^cmp     rdx, 6Eh^^^jbe     loc_461E10^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 82h^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_9^^^call    __assert_fail^^^mov     rdi, rax^^^call    free^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00h]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 8Bh^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCntSizeof_nl_v^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10041^^^mov     edx, 8Dh^^^mov     esi, offset aLoadlocale_c^^^mov     edi, offset aCategory__lc_c^^^call    __assert_fail^^^
__mpn_addmul_1$$$push    rbx^^^push    rbp^^^lea     rbx, [rdx]^^^neg     rbx^^^mov     rax, [rsi]^^^mov     r10, [rdi]^^^lea     rdi, [rdi+rdx*8-10h]^^^lea     rsi, [rsi+rdx*8]^^^mul     rcx^^^bt      ebx, 0^^^jb      short loc_47AF44^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^lea     rbp, [rdx]^^^mul     rcx^^^add     rbx, 2^^^jns     loc_47AFC8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^lea     r9, [rdx]^^^jmp     short loc_47AF90^^^add     rbx, 1^^^jns     loc_47AFD8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^lea     r9, [rdx]^^^mul     rcx^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^lea     rbp, [rdx]^^^jmp     short loc_47AFB1^^^mul     rcx^^^add     r10, r8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^adc     r11, r9^^^mov     [rdi+rbx*8-8], r10^^^mov     r10, [rdi+rbx*8]^^^lea     r9, [rdx]^^^adc     rbp, 0^^^mul     rcx^^^add     r10, r11^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^adc     r8, rbp^^^mov     [rdi+rbx*8], r10^^^mov     r10, [rdi+rbx*8+8]^^^lea     rbp, [rdx]^^^adc     r9, 0^^^add     rbx, 2^^^js      short loc_47AF70^^^mul     rcx^^^add     r10, r8^^^adc     r11, r9^^^mov     [rdi-8], r10^^^adc     rbp, 0^^^mov     r10, [rdi]^^^add     r10, r11^^^adc     rax, rbp^^^mov     [rdi], r10^^^adc     rdx, 0^^^mov     r10, [rdi+8]^^^add     r10, rax^^^mov     [rdi+8], r10^^^mov     eax, ebx^^^adc     rax, rdx^^^pop     rbp^^^pop     rbx^^^retn^^^
_dl_build_local_scope$$$push    r15^^^mov     rax, rdi^^^add     rax, 8^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 78h^^^mov     [rdi], rsi^^^mov     rdx, [rsi+3B8h]^^^mov     [rsp+0A8h+var_40], rdi^^^mov     [rsp+0A8h+var_70], rax^^^movzx   eax, byte ptr [rsi+314h]^^^and     eax, 0FFFFFF9Fh^^^or      eax, 20h^^^test    rdx, rdx^^^mov     [rsi+314h], al^^^jz      loc_48DB7D^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB7D^^^add     rdx, 8^^^mov     [rsp+0A8h+var_50], rdx^^^jmp     short loc_48D777^^^add     [rsp+0A8h+var_50], 8^^^mov     rdx, [rsp+0A8h+var_50]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB7D^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D760^^^mov     rdx, [rsp+0A8h+var_70]^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     [rsp+0A8h+var_68], rdx^^^movzx   edx, byte ptr [rax+314h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^mov     [rax+314h], dl^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jz      loc_48DB65^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB65^^^add     rdx, 8^^^mov     [rsp+0A8h+var_48], rdx^^^jmp     short loc_48D7E3^^^add     [rsp+0A8h+var_48], 8^^^mov     rdx, [rsp+0A8h+var_48]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB65^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D7CC^^^mov     rdx, [rsp+0A8h+var_68]^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     [rsp+0A8h+var_58], rdx^^^movzx   edx, byte ptr [rax+314h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^mov     [rax+314h], dl^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jz      loc_48DB4D^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB4D^^^add     rdx, 8^^^mov     [rsp+0A8h+var_60], rdx^^^jmp     short loc_48D84F^^^add     [rsp+0A8h+var_60], 8^^^mov     rdx, [rsp+0A8h+var_60]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB4D^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D838^^^mov     rdx, [rsp+0A8h+var_58]^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     [rsp+0A8h+var_78], rdx^^^movzx   edx, byte ptr [rax+314h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^mov     [rax+314h], dl^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jz      loc_48DB35^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB35^^^add     rdx, 8^^^mov     [rsp+0A8h+var_80], rdx^^^jmp     short loc_48D8BB^^^add     [rsp+0A8h+var_80], 8^^^mov     rdx, [rsp+0A8h+var_80]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB35^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D8A4^^^mov     rdx, [rsp+0A8h+var_78]^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     [rsp+0A8h+var_88], rdx^^^movzx   edx, byte ptr [rax+314h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^mov     [rax+314h], dl^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jz      loc_48DB1D^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB1D^^^add     rdx, 8^^^mov     [rsp+0A8h+var_90], rdx^^^jmp     short loc_48D927^^^add     [rsp+0A8h+var_90], 8^^^mov     rdx, [rsp+0A8h+var_90]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB1D^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D910^^^mov     rdx, [rsp+0A8h+var_88]^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     [rsp+0A8h+var_98], rdx^^^movzx   edx, byte ptr [rax+314h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^mov     [rax+314h], dl^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jz      loc_48DB05^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      loc_48DB05^^^add     rdx, 8^^^mov     [rsp+0A8h+var_A0], rdx^^^jmp     short loc_48D997^^^add     [rsp+0A8h+var_A0], 8^^^mov     rdx, [rsp+0A8h+var_A0]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      loc_48DB05^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D980^^^mov     rdx, [rsp+0A8h+var_98]^^^mov     [rdx], rax^^^mov     r15, rdx^^^movzx   edx, byte ptr [rax+314h]^^^mov     r14, [rax+3B8h]^^^add     r15, 8^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^test    r14, r14^^^mov     [rax+314h], dl^^^jz      loc_48DAF2^^^mov     rax, [r14+8]^^^test    rax, rax^^^jz      loc_48DAF2^^^add     r14, 8^^^jmp     short loc_48D9F8^^^add     r14, 8^^^mov     rax, [r14]^^^test    rax, rax^^^jz      loc_48DAF2^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48D9E8^^^mov     [r15], rax^^^movzx   edx, byte ptr [rax+314h]^^^lea     r13, [r15+8]^^^mov     rbp, [rax+3B8h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^test    rbp, rbp^^^mov     [rax+314h], dl^^^jz      loc_48DAD8^^^mov     rax, [rbp+8]^^^test    rax, rax^^^jz      loc_48DAD8^^^add     rbp, 8^^^jmp     short loc_48DA51^^^add     rbp, 8^^^mov     rax, [rbp+0]^^^test    rax, rax^^^jz      loc_48DAD8^^^test    byte ptr [rax+314h], 60h^^^jnz     short loc_48DA40^^^mov     [r13+0], rax^^^movzx   edx, byte ptr [rax+314h]^^^lea     r12, [r13+8]^^^mov     rbx, [rax+3B8h]^^^and     edx, 0FFFFFF9Fh^^^or      edx, 20h^^^test    rbx, rbx^^^mov     [rax+314h], dl^^^jz      short loc_48DABD^^^mov     rsi, [rbx+8]^^^test    rsi, rsi^^^jz      short loc_48DABD^^^add     rbx, 8^^^jmp     short loc_48DA9C^^^add     rbx, 8^^^mov     rsi, [rbx]^^^test    rsi, rsi^^^jz      short loc_48DABD^^^test    byte ptr [rsi+314h], 60h^^^jnz     short loc_48DA90^^^mov     rdi, r12^^^add     rbx, 8^^^call    _dl_build_local_scope^^^mov     rsi, [rbx]^^^lea     r12, [r12+rax*8]^^^test    rsi, rsi^^^jnz     short loc_48DA9C^^^add     rbp, 8^^^sub     r12, r13^^^mov     rax, [rbp+0]^^^and     r12, 0FFFFFFFFFFFFFFF8h^^^add     r13, r12^^^test    rax, rax^^^jnz     loc_48DA51^^^add     r14, 8^^^sub     r13, r15^^^mov     rax, [r14]^^^and     r13, 0FFFFFFFFFFFFFFF8h^^^add     r15, r13^^^test    rax, rax^^^jnz     loc_48D9F8^^^sub     r15, [rsp+0A8h+var_98]^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_98], r15^^^jmp     loc_48D980^^^mov     rax, [rsp+0A8h+var_98]^^^sub     rax, [rsp+0A8h+var_88]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_88], rax^^^jmp     loc_48D910^^^mov     rax, [rsp+0A8h+var_88]^^^sub     rax, [rsp+0A8h+var_78]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_78], rax^^^jmp     loc_48D8A4^^^mov     rax, [rsp+0A8h+var_78]^^^sub     rax, [rsp+0A8h+var_58]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_58], rax^^^jmp     loc_48D838^^^mov     rax, [rsp+0A8h+var_58]^^^sub     rax, [rsp+0A8h+var_68]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_68], rax^^^jmp     loc_48D7CC^^^mov     rax, [rsp+0A8h+var_68]^^^sub     rax, [rsp+0A8h+var_70]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     [rsp+0A8h+var_70], rax^^^jmp     loc_48D760^^^mov     rax, [rsp+0A8h+var_70]^^^sub     rax, [rsp+0A8h+var_40]^^^add     rsp, 78h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^sar     rax, 3^^^pop     r15^^^retn^^^
_IO_wdefault_xsgetn$$$push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rbx, rsi^^^nop     dword ptr [rax+00h]^^^mov     r8, [r12+0A0h]^^^mov     rsi, [r8]^^^mov     rax, [r8+8]^^^sub     rax, rsi^^^sar     rax, 2^^^test    rax, rax^^^jle     loc_42760A^^^cmp     rbp, rax^^^mov     r9, rbp^^^cmovnb  r9, rax^^^cmp     r9, 14h^^^jg      loc_427630^^^xor     r13d, r13d^^^test    r9, r9^^^jz      loc_427607^^^mov     edi, r9d^^^lea     ecx, [r9-1]^^^mov     r10d, r9d^^^shr     edi, 2^^^lea     r13d, ds:0[rdi*4]^^^test    r13d, r13d^^^jz      loc_427656^^^lea     rax, [rsi+10h]^^^cmp     r9d, 0Bh^^^lea     r11, [rbx+10h]^^^setnbe  dl^^^cmp     rbx, rax^^^setnbe  al^^^cmp     rsi, r11^^^setnbe  r11b^^^or      eax, r11d^^^test    dl, al^^^jz      loc_427656^^^xor     eax, eax^^^xor     edx, edx^^^movdqu  xmm0, xmmword ptr [rsi+rax]^^^add     edx, 1^^^movdqu  xmmword ptr [rbx+rax], xmm0^^^add     rax, 10h^^^cmp     edi, edx^^^ja      short loc_4275B0^^^mov     r11d, r13d^^^sub     ecx, r13d^^^shl     r11, 2^^^lea     rdi, [rbx+r11]^^^add     r11, rsi^^^cmp     r10d, r13d^^^jz      short loc_4275EF^^^xor     eax, eax^^^nop     dword ptr [rax]^^^mov     edx, [r11+rax*4]^^^mov     [rdi+rax*4], edx^^^add     rax, 1^^^cmp     ecx, eax^^^jns     short loc_4275E0^^^sub     r10d, 1^^^mov     r13, r9^^^lea     rax, ds:4[r10*4]^^^add     rsi, rax^^^add     rbx, rax^^^mov     [r8], rsi^^^sub     rbp, r13^^^test    rbp, rbp^^^jz      short loc_427620^^^mov     rdi, r12^^^call    __wunderflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_427528^^^pop     rbx^^^mov     rax, r14^^^sub     rax, rbp^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rdx, r9^^^mov     rdi, rbx^^^mov     r13, r9^^^call    wmempcpy^^^mov     rbx, rax^^^mov     rax, [r12+0A0h]^^^lea     rdx, ds:0[r13*4]^^^add     [rax], rdx^^^jmp     short loc_427607^^^mov     r11, rsi^^^mov     rdi, rbx^^^jmp     loc_4275DB^^^
pvalloc$$$push    r15             ^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 8^^^mov     eax, cs:__libc_malloc_initialized^^^test    eax, eax^^^js      loc_408940^^^mov     r12, cs:_dl_pagesize^^^lea     r15, [r12+r12]^^^mov     rax, r15^^^not     rax^^^sub     rax, 20h^^^cmp     rbp, rax^^^ja      loc_408904^^^lea     rax, [r12-1]^^^lea     r13, [rbp+rax+0]^^^not     rax^^^and     r13, rax^^^mov     rax, cs:__memalign_hook^^^test    rax, rax^^^jnz     loc_4089D5^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rbx, fs:[rax]^^^test    rbx, rbx^^^jz      loc_40891A^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40878D^^^lock cmpxchg [rbx], esi^^^jnz     _L_lock_12712^^^jmp     short loc_408796^^^cmpxchg [rbx], esi^^^jnz     _L_lock_12712^^^mov     ecx, [rbx+4]^^^test    cl, 1^^^jz      loc_408820^^^mov     rsi, cs:_dl_pagesize^^^mov     rdi, rbx^^^lea     rdx, [rsi+rbp-1]^^^mov     rax, rsi^^^neg     rax^^^and     rdx, rax^^^call    _int_memalign^^^mov     r14, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4087D6^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_12750^^^jmp     short loc_4087DE^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_12750^^^test    r14, r14^^^jz      loc_408880^^^mov     rax, [r14-8]^^^test    al, 2^^^jnz     short loc_40880E^^^test    al, 4^^^mov     edx, offset main_arena^^^jz      short loc_408805^^^lea     rax, [r14-10h]^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdx, [rax]^^^cmp     rdx, rbx^^^jnz     loc_4089BC^^^add     rsp, 8^^^mov     rax, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_408840^^^mov     rdi, rbx^^^call    malloc_consolidate_part_3^^^jmp     loc_4087A2^^^lea     rax, [rbx+rdx*8+68h]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_408840^^^cmp     rbx, offset main_arena^^^jz      loc_40898F^^^or      ecx, 2^^^lea     rax, [rbx+58h]^^^or      ecx, 1^^^mov     [rbx+4], ecx^^^mov     [rbx+58h], rax^^^jmp     loc_4087A2^^^cmp     rbx, offset main_arena^^^jz      loc_40894A^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4088AD^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_12872^^^jmp     short loc_4088BA^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_12872^^^mov     edi, offset main_arena^^^mov     rdx, r13^^^mov     rsi, r12^^^call    _int_memalign^^^mov     r14, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4088E5^^^lock dec cs:main_arena^^^jnz     _L_unlock_12881^^^jmp     short loc_4088F1^^^dec     cs:main_arena^^^jnz     _L_unlock_12881^^^mov     ebx, offset main_arena^^^test    r14, r14^^^jz      loc_40880E^^^jmp     loc_4087E7^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r14d, r14d^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_40880E^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_408796^^^lea     rdi, [r15+rbp+20h]^^^xor     esi, esi^^^call    arena_get2_isra_5_part_6^^^mov     rbx, rax^^^jmp     loc_408796^^^call    ptmalloc_init_part_8^^^jmp     loc_40871F^^^nop     word ptr [rax+rax+00h]^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_40899F^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    _int_memalign^^^mov     r14, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408982^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_13005^^^jmp     short loc_40898A^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_13005^^^jmp     loc_4088F6^^^mov     cs:global_max_fast, 80h^^^jmp     loc_40886A^^^lea     rdi, [r15+rbp+20h]^^^mov     esi, offset main_arena^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_40880E^^^jmp     short loc_40895D^^^mov     ecx, offset __func___12527^^^mov     edx, 0CB4h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPMchunkptrChar^^^call    __malloc_assert^^^mov     rdx, [rsp+38h]^^^add     rsp, 8^^^mov     rdi, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^mov     rsi, r13^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     rax^^^
do_dlsym$$$push    rbx^^^lea     rdx, [rdi+18h]^^^mov     rbx, rdi^^^xor     r9d, r9d^^^xor     r8d, r8d^^^sub     rsp, 10h^^^mov     rsi, [rdi]^^^mov     qword ptr [rdi+18h], 0^^^mov     rdi, [rdi+8]^^^mov     [rsp+18h+var_10], 0^^^mov     [rsp+18h+var_18], 2^^^lea     rcx, [rsi+388h]^^^call    _dl_lookup_symbol_x^^^mov     [rbx+10h], rax^^^add     rsp, 10h^^^pop     rbx^^^retn^^^
strncmp$$$test    rdx, rdx^^^jz      loc_431DB4^^^cmp     rdx, 1^^^jz      loc_431DC0^^^mov     r11, rdx^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^cmp     ecx, 30h^^^ja      short loc_4305F0^^^cmp     eax, 30h^^^ja      short loc_4305F0^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431DA0^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rsi, 10h^^^add     rdi, 10h^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_430630^^^ja      short loc_430613^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49CA30^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax+rax+00000000h]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^jmp     short loc_430690^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_430830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_430830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430780^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_430860^^^cmp     r11, 0Fh^^^jbe     short loc_430860^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43078A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4309B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4309B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430900^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_4309E0^^^cmp     r11, 0Eh^^^jbe     short loc_4309E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43090A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_430B30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_430B30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430A80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_430B60^^^cmp     r11, 0Dh^^^jbe     short loc_430B60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_430A8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_430CB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_430CB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430C00^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_430CE0^^^cmp     r11, 0Ch^^^jbe     short loc_430CE0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_430C0A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_430E30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_430E30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430D80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_430E60^^^cmp     r11, 0Bh^^^jbe     short loc_430E60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_430D8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_430FB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_430FB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_430F00^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_430FE0^^^cmp     r11, 0Ah^^^jbe     short loc_430FE0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_430F0A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431130^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431130^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431080^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_431160^^^cmp     r11, 9^^^jbe     short loc_431160^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43108A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4312B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4312B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431200^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_4312E0^^^cmp     r11, 8^^^jbe     short loc_4312E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43120A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431430^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431430^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431380^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_431460^^^cmp     r11, 7^^^jbe     short loc_431460^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43138A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4315B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4315B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431500^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_4315E0^^^cmp     r11, 6^^^jbe     short loc_4315E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43150A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431730^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431730^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431680^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_431760^^^cmp     r11, 5^^^jbe     short loc_431760^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43168A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4318B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4318B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431800^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_4318E0^^^cmp     r11, 4^^^jbe     short loc_4318E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43180A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431A30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431A30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431980^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_431A60^^^cmp     r11, 3^^^jbe     short loc_431A60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43198A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431BB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431BB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431B00^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_431BE0^^^cmp     r11, 2^^^jbe     short loc_431BE0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_431B0A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_431D70^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_431D85^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_431DB4^^^test    r9, r9^^^jz      loc_431DB4^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_431D30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_431D30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     short loc_431D80^^^sub     r11, 10h^^^jbe     loc_431DB4^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_431C80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_431D60^^^cmp     r11, 1^^^jbe     short loc_431D60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_431C8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^xchg    ax, ax^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_431DA0^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^sub     r11, rdx^^^jbe     short loc_431DB4^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^movzx   ecx, byte ptr [rsi]^^^movzx   eax, byte ptr [rdi]^^^sub     eax, ecx^^^retn^^^
_IO_default_imbue$$$rep retn^^^
_L_lock_658$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42B8F0^^^
send$$$push    rbx             ^^^sub     rsp, 20h^^^mov     eax, cs:__libc_multiple_threads^^^test    eax, eax^^^jnz     short loc_4108F0^^^xor     r9d, r9d^^^xor     r8d, r8d^^^movsxd  r10, ecx^^^movsxd  rdi, edi^^^mov     eax, 2Ch^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_410947^^^add     rsp, 20h^^^pop     rbx^^^retn^^^mov     [rsp+28h+var_20], rdx^^^mov     [rsp+28h+var_28], ecx^^^mov     [rsp+28h+var_18], rsi^^^mov     dword ptr [rsp+28h+var_10], edi^^^call    __libc_enable_asynccancel^^^mov     ecx, [rsp+28h+var_28]^^^mov     edi, dword ptr [rsp+28h+var_10]^^^mov     ebx, eax^^^xor     r9d, r9d^^^xor     r8d, r8d^^^mov     rdx, [rsp+28h+var_20]^^^mov     rsi, [rsp+28h+var_18]^^^mov     eax, 2Ch^^^movsxd  r10, ecx^^^movsxd  rdi, edi^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_410959^^^mov     edi, ebx^^^mov     [rsp+28h+var_10], rax^^^call    __libc_disable_asynccancel^^^mov     rax, [rsp+28h+var_10]^^^jmp     short loc_4108EA^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_4108EA^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_410934^^^
sub_482A80$$$mov     rax, [rbx+18h]^^^mov     [rax], rdi^^^pop     rbx^^^retn^^^
sub_41D028$$$movsxd  rax, dword ptr [rbp-5A8h]^^^mov     rsi, [rbp-540h]^^^imul    rax, 48h^^^add     rsi, rax^^^jz      loc_41DF6C^^^movsxd  rax, dword ptr [rsi+30h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^shl     rax, 4^^^add     rax, [rbp-578h]^^^mov     [rbp-0A0h], rax^^^call    __printf_fphex^^^lea     rsi, [rbp-0F0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-5B0h]^^^mov     r8d, [rbp-580h]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, [rbp-588h]^^^mov     [rbp-0F0h], r8d^^^and     edx, 1^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-62Ch]^^^mov     [rbp-0ECh], eax^^^movsx   eax, byte ptr [rbp-621h]^^^and     edx, 1^^^mov     [rbp-0E8h], eax^^^movzx   eax, byte ptr [rbp-620h]^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-634h]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-618h]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-628h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-5E0h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-638h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^cmp     dword ptr [rbp-634h], 0^^^mov     [rbp-0E4h], al^^^movsx   eax, byte ptr [rbp-622h]^^^mov     [rbp-0E0h], eax^^^jz      loc_41FAFC^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-0B8h], edx^^^mov     [rbp-0C0h], rax^^^
init$$$mov     eax, 0^^^sub     rsp, 8^^^test    rax, rax^^^jnz     short loc_4825BE^^^mov     cs:static_buf, offset last_result^^^add     rsp, 8^^^retn^^^mov     esi, offset free_key_mem^^^mov     edi, offset key^^^call    near ptr 0^^^test    eax, eax^^^jnz     short loc_4825AE^^^jmp     short loc_4825B9^^^
__readonly_area$$$push    r14^^^push    r13^^^lea     r13, [rdi+rsi]^^^push    r12^^^mov     r12, rsi^^^mov     esi, offset aRce^^^push    rbp^^^mov     rbp, rdi^^^mov     edi, offset aProcSelfMaps^^^push    rbx^^^sub     rsp, 30h^^^call    fopen64^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_44E880^^^mov     eax, [rax]^^^or      ah, 80h^^^test    al, 10h^^^mov     [rbx], eax^^^mov     [rsp+58h+var_38], 0^^^mov     [rsp+58h+var_30], 0^^^jnz     loc_44E7D0^^^nop     word ptr [rax+rax+00h]^^^lea     rsi, [rsp+58h+var_30]^^^lea     rdi, [rsp+58h+var_38]^^^mov     rcx, rbx^^^mov     edx, 0Ah^^^call    getdelim^^^test    rax, rax^^^jle     short loc_44E7D0^^^mov     rdi, [rsp+58h+var_38]^^^mov     edx, 10h^^^mov     rsi, rsp^^^call    strtouq^^^mov     rdi, [rsp+58h+var_58]^^^cmp     rdi, [rsp+58h+var_38]^^^mov     r14, rax^^^jz      short loc_44E7D0^^^movzx   eax, byte ptr [rdi]^^^add     rdi, 1^^^mov     [rsp+58h+var_58], rdi^^^cmp     al, 2Dh^^^jnz     short loc_44E7D0^^^lea     rsi, [rsp+58h+var_48]^^^mov     edx, 10h^^^call    strtouq^^^mov     rdx, [rsp+58h+var_48]^^^cmp     rdx, [rsp+58h+var_58]^^^jz      short loc_44E7D0^^^movzx   esi, byte ptr [rdx]^^^lea     rcx, [rdx+1]^^^mov     [rsp+58h+var_48], rcx^^^cmp     sil, 20h^^^jnz     short loc_44E7D0^^^cmp     rbp, rax^^^jb      short loc_44E800^^^mov     eax, [rbx]^^^test    al, 10h^^^jz      loc_44E748^^^xchg    ax, ax^^^mov     rdi, rbx^^^call    fclose^^^mov     rdi, [rsp+58h+var_38]^^^call    free^^^cmp     r12, 1^^^sbb     eax, eax^^^and     eax, 2^^^sub     eax, 1^^^add     rsp, 30h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^cmp     r13, r14^^^jbe     short loc_44E7C4^^^movzx   esi, byte ptr [rdx+1]^^^lea     rdi, [rdx+2]^^^mov     [rsp+58h+var_48], rdi^^^cmp     sil, 72h^^^jnz     short loc_44E7D0^^^movzx   ecx, byte ptr [rcx+1]^^^add     rdx, 3^^^mov     [rsp+58h+var_48], rdx^^^cmp     cl, 2Dh^^^jnz     short loc_44E7D0^^^cmp     r14, rbp^^^setbe   dl^^^cmp     r13, rax^^^jbe     short loc_44E8A0^^^test    dl, dl^^^jz      short loc_44E870^^^add     r12, rbp^^^sub     r12, rax^^^test    r12, r12^^^jnz     short loc_44E7C4^^^mov     rdi, rbx^^^call    fclose^^^mov     rdi, [rsp+58h+var_38]^^^call    free^^^add     rsp, 30h^^^mov     eax, 1^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^add     r12, r14^^^sub     r12, rax^^^jmp     short loc_44E83F^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, fs:[rax]^^^cmp     edx, 0Dh^^^jz      short loc_44E856^^^cmp     edx, 2^^^mov     eax, 0FFFFFFFFh^^^jz      short loc_44E856^^^jmp     loc_44E7EE^^^test    dl, dl^^^jnz     short loc_44E844^^^add     r12, r14^^^sub     r12, r13^^^jmp     short loc_44E83F^^^
__correctly_grouped_prefixmb$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    rcx, rcx^^^jz      loc_41A2EA^^^mov     rdi, rdx^^^mov     [rsp+58h+var_50], rdx^^^mov     [rsp+58h+var_58], rcx^^^mov     [rsp+58h+var_48], rsi^^^call    strlen^^^mov     rsi, [rsp+58h+var_48]^^^mov     rbp, rax^^^mov     rdx, [rsp+58h+var_50]^^^mov     rcx, [rsp+58h+var_58]^^^cmp     rsi, rbx^^^jbe     loc_41A2E3^^^lea     rax, [rax-1]^^^mov     [rsp+58h+var_40], rax^^^lea     r8, [rsi-1]^^^cmp     rbx, r8^^^ja      loc_41A2EA^^^mov     r11, [rsp+58h+var_40]^^^movzx   r12d, byte ptr [rdx]^^^add     r11, rsi^^^jmp     short loc_41A26D^^^sub     r8, 1^^^sub     r11, 1^^^cmp     rbx, r8^^^ja      short loc_41A2EA^^^cmp     r12b, [r11-1]^^^jnz     short loc_41A260^^^movzx   eax, byte ptr [rdx+1]^^^test    al, al^^^jz      short loc_41A2AC^^^cmp     al, [r11-2]^^^jnz     short loc_41A260^^^mov     rax, rdx^^^mov     rdi, r11^^^jmp     short loc_41A2A2^^^movzx   r10d, byte ptr [rdi-3]^^^add     rax, 1^^^sub     rdi, 1^^^cmp     r9b, r10b^^^jnz     short loc_41A260^^^movzx   r9d, byte ptr [rax+2]^^^test    r9b, r9b^^^jnz     short loc_41A290^^^cmp     rbx, r8^^^mov     r15, r8^^^ja      short loc_41A2EA^^^movzx   r13d, byte ptr [rcx]^^^mov     rdi, rsi^^^sub     rdi, r8^^^movsx   eax, r13b^^^add     eax, 1^^^cdqe^^^cmp     rdi, rax^^^jz      short loc_41A2FC^^^mov     rsi, r8^^^jle     short loc_41A2DA^^^movsx   r13, r13b^^^lea     rsi, [r8+r13+1]^^^cmp     rbx, rsi^^^jb      loc_41A243^^^cmp     rsi, rbx^^^cmovb   rsi, rbx^^^add     rsp, 28h^^^mov     rax, rsi^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r14, rcx^^^nop^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jz      short loc_41A310^^^add     r14, 1^^^mov     r13d, eax^^^test    r13b, r13b^^^lea     r10, [r8-1]^^^js      short loc_41A398^^^cmp     r13b, 7Fh^^^jz      short loc_41A398^^^cmp     rbx, r10^^^ja      loc_41A440^^^test    r12b, r12b^^^jz      loc_41A426^^^mov     r11, r10^^^cmp     r12b, [r11+rbp-1]^^^mov     rax, rdx^^^lea     r8, [r11+rbp]^^^jz      short loc_41A366^^^jmp     loc_41A400^^^movzx   r9d, byte ptr [r8-2]^^^add     rax, 1^^^sub     r8, 1^^^cmp     dil, r9b^^^jnz     loc_41A400^^^movzx   edi, byte ptr [rax+1]^^^test    dil, dil^^^jnz     short loc_41A350^^^cmp     rbx, r11^^^mov     r8, r11^^^ja      loc_41A435^^^sub     r10, r11^^^movsx   rax, r13b^^^cmp     r10, rax^^^jz      loc_41A300^^^lea     rsi, [r15-1]^^^jmp     loc_41A2DA^^^cmp     rbx, r10^^^ja      loc_41A2EA^^^test    r12b, r12b^^^jz      short loc_41A3DB^^^cmp     r12b, [r10+rbp-1]^^^mov     rax, rdx^^^lea     r8, [r10+rbp]^^^jz      short loc_41A3D2^^^jmp     short loc_41A3F0^^^movzx   r9d, byte ptr [r8-2]^^^add     rax, 1^^^sub     r8, 1^^^cmp     dil, r9b^^^jnz     short loc_41A3F0^^^movzx   edi, byte ptr [rax+1]^^^test    dil, dil^^^jnz     short loc_41A3C0^^^cmp     rbx, r10^^^mov     r8, r10^^^jbe     loc_41A300^^^jmp     loc_41A2EA^^^sub     r10, 1^^^cmp     rbx, r10^^^jbe     short loc_41A3A6^^^jmp     loc_41A2EA^^^sub     r11, 1^^^cmp     rbx, r11^^^jbe     loc_41A334^^^sub     r10, r11^^^movsx   r13, r13b^^^cmp     r13, r10^^^jge     loc_41A2EA^^^lea     rsi, [r15-1]^^^jmp     loc_41A2DA^^^mov     r11, r10^^^mov     r8, r10^^^cmp     rbx, r11^^^jbe     loc_41A37B^^^sub     r10, r8^^^jmp     short loc_41A410^^^xor     r10d, r10d^^^jmp     short loc_41A410^^^
msort_with_tmp.part.0$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdx^^^shr     r13, 1^^^push    r12^^^mov     r12, rdx^^^sub     r12, r13^^^push    rbp^^^push    rbx^^^mov     rbx, r13^^^sub     rsp, 38h^^^imul    rbx, [rdi]^^^mov     [rsp+68h+var_50], rdi^^^mov     [rsp+68h+var_48], rsi^^^mov     [rsp+68h+var_40], rdx^^^add     rbx, rsi^^^cmp     r13, 1^^^jbe     short loc_417C21^^^mov     rdx, r13^^^call    msort_with_tmp_part_0^^^cmp     r12, 1^^^jbe     short loc_417C37^^^mov     rdi, [rsp+68h+var_50]^^^mov     rdx, r12^^^mov     rsi, rbx^^^call    msort_with_tmp_part_0^^^mov     rax, [rsp+68h+var_50]^^^mov     rdx, [rax+10h]^^^mov     rbp, [rax+20h]^^^mov     r15, [rax]^^^mov     rax, [rax+18h]^^^mov     [rsp+68h+var_60], rdx^^^mov     rdx, [rsp+68h+var_50]^^^mov     [rsp+68h+var_58], rax^^^mov     rax, [rdx+8]^^^cmp     rax, 1^^^jz      loc_417DF0^^^jb      loc_417D00^^^cmp     rax, 2^^^jz      loc_417E58^^^cmp     rax, 3^^^mov     r14, [rsp+68h+var_48]^^^jz      loc_417D50^^^test    r12, r12^^^jz      short loc_417CC8^^^test    r13, r13^^^jz      short loc_417CC8^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, rbx^^^mov     rdi, r14^^^call    [rsp+68h+var_60]^^^test    eax, eax^^^mov     rdx, r15^^^jle     loc_417DB8^^^mov     rsi, rbx^^^mov     rdi, rbp^^^sub     r12, 1^^^call    mempcpy^^^add     rbx, r15^^^test    r12, r12^^^mov     rbp, rax^^^jnz     short loc_417C8C^^^nop     dword ptr [rax]^^^test    r13, r13^^^jnz     loc_417DD8^^^mov     rax, [rsp+68h+var_50]^^^mov     rdx, [rsp+68h+var_40]^^^mov     rdi, [rsp+68h+var_48]^^^mov     rsi, [rax+20h]^^^add     rsp, 38h^^^sub     rdx, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^imul    rdx, r15^^^pop     r15^^^jmp     memcpy^^^test    r12, r12^^^mov     r14, [rsp+68h+var_48]^^^jnz     short loc_417D26^^^jmp     short loc_417CC8^^^mov     eax, [rbx]^^^sub     r12, 1^^^add     rbx, 4^^^mov     [rbp+0], eax^^^add     rbp, 4^^^test    r12, r12^^^jz      short loc_417CC8^^^test    r13, r13^^^jz      short loc_417CC8^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, rbx^^^mov     rdi, r14^^^call    [rsp+68h+var_60]^^^test    eax, eax^^^jg      short loc_417D10^^^mov     eax, [r14]^^^sub     r13, 1^^^add     r14, 4^^^jmp     short loc_417D1A^^^test    r12, r12^^^jz      loc_417ED0^^^test    r13, r13^^^mov     r14, [rsp+68h+var_48]^^^jnz     short loc_417D95^^^jmp     loc_417ED0^^^mov     rax, [rbx]^^^sub     r12, 1^^^add     rbx, 8^^^mov     [rbp+0], rax^^^add     rbp, 8^^^test    r12, r12^^^jz      loc_417CC8^^^test    r13, r13^^^jz      loc_417CC8^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, [rbx]^^^mov     rdi, [r14]^^^call    [rsp+68h+var_60]^^^test    eax, eax^^^jg      short loc_417D70^^^mov     rax, [r14]^^^sub     r13, 1^^^add     r14, 8^^^jmp     short loc_417D7B^^^mov     rsi, r14^^^mov     rdi, rbp^^^add     r14, r15^^^call    mempcpy^^^sub     r13, 1^^^mov     rbp, rax^^^jmp     loc_417C87^^^mov     rdx, r13^^^mov     rsi, r14^^^mov     rdi, rbp^^^imul    rdx, r15^^^call    memcpy^^^jmp     loc_417CD1^^^test    r12, r12^^^jz      loc_417ED0^^^test    r13, r13^^^mov     r14, [rsp+68h+var_48]^^^jnz     short loc_417E35^^^jmp     loc_417ED0^^^mov     rax, [rbx]^^^sub     r12, 1^^^add     rbx, 8^^^mov     [rbp+0], rax^^^add     rbp, 8^^^test    r12, r12^^^jz      loc_417CC8^^^test    r13, r13^^^jz      loc_417CC8^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, rbx^^^mov     rdi, r14^^^call    [rsp+68h+var_60]^^^test    eax, eax^^^jg      short loc_417E10^^^mov     rax, [r14]^^^sub     r13, 1^^^add     r14, 8^^^jmp     short loc_417E1B^^^mov     r14, [rsp+68h+var_48]^^^jmp     short loc_417E72^^^sub     r12, 1^^^mov     rax, rbx^^^add     rbx, r15^^^cmp     rbp, rcx^^^jb      short loc_417EB3^^^mov     rbp, rcx^^^test    r12, r12^^^jz      loc_417CC8^^^test    r13, r13^^^jz      loc_417CC8^^^lea     rcx, [rbp+r15+0]^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, rbx^^^mov     rdi, r14^^^mov     [rsp+68h+var_68], rcx^^^call    [rsp+68h+var_60]^^^test    eax, eax^^^mov     rcx, [rsp+68h+var_68]^^^jg      short loc_417E60^^^sub     r13, 1^^^mov     rax, r14^^^add     r14, r15^^^cmp     rbp, rcx^^^jnb     short loc_417E6F^^^mov     rdx, [rax]^^^add     rax, 8^^^mov     [rbp+0], rdx^^^add     rbp, 8^^^cmp     rcx, rbp^^^jbe     short loc_417E6F^^^jmp     short loc_417EB3^^^mov     r14, [rsp+68h+var_48]^^^jmp     loc_417CC8^^^
do_length$$$push    rbp^^^shl     r8, 2^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_18], r13^^^mov     r13, rdx^^^mov     [rbp+var_10], r14^^^mov     [rbp+var_8], r15^^^mov     r14, rdi^^^mov     [rbp+var_20], r12^^^sub     rsp, 50h^^^mov     [rbp+var_40], rdx^^^lea     rdx, [r8+1Eh]^^^mov     r12, [rdi+48h]^^^mov     [rdi+70h], rsi^^^mov     r15, rcx^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^lea     rax, [rsp+50h+var_31]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     [rdi+50h], rax^^^add     rax, r8^^^mov     [rdi+58h], rax^^^cmp     qword ptr [r12], 0^^^mov     rbx, [r12+28h]^^^jz      short loc_474E0D^^^ror     rbx, 11h^^^xor     rbx, fs:30h^^^mov     rdi, rbx^^^call    _dl_mcount_wrapper_check^^^lea     rsi, [r14+50h]^^^mov     [rsp+50h+var_48], 0^^^mov     [rsp+50h+var_50], 0^^^lea     r9, [rbp+var_38]^^^mov     rcx, r15^^^lea     rdx, [rbp+var_40]^^^mov     rdi, r12^^^xor     r8d, r8d^^^call    rbx^^^mov     rax, [rbp+var_40]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^sub     rax, r13^^^mov     r13, [rbp+var_18]^^^leave^^^retn^^^
_IO_file_seekoff_mmap$$$push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^test    ecx, ecx^^^jz      loc_429DB8^^^cmp     edx, 1^^^jz      short loc_429DA8^^^cmp     edx, 2^^^jnz     short loc_429D49^^^mov     rax, [rdi+40h]^^^sub     rax, [rdi+38h]^^^add     rbp, rax^^^test    rbp, rbp^^^js      loc_429DE8^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^test    rax, rax^^^js      loc_429DFF^^^mov     rcx, [rbx+40h]^^^mov     rdx, [rbx+38h]^^^mov     rsi, rcx^^^mov     [rbx+18h], rdx^^^sub     rsi, rdx^^^cmp     rbp, rsi^^^jle     short loc_429DD8^^^mov     [rbx+8], rcx^^^mov     [rbx+10h], rcx^^^and     dword ptr [rbx], 0FFFFFFEFh^^^mov     [rbx+90h], rax^^^add     rsp, 8^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rdi+8]^^^sub     rax, [rdi+18h]^^^add     rbp, rax^^^jmp     short loc_429D49^^^mov     rbp, [rdi+8]^^^sub     rbp, [rdi+10h]^^^add     rbp, [rdi+90h]^^^add     rsp, 8^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^retn^^^add     rdx, rbp^^^mov     [rbx+8], rdx^^^mov     [rbx+10h], rdx^^^jmp     short loc_429D8F^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     short loc_429D99^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_429D99^^^
localtime$$$mov     edx, offset _tmbuf^^^mov     esi, 1^^^jmp     __tz_convert^^^
_L_lock_13666$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_408E5C^^^
__memcmp_sse2$$$test    rdx, rdx^^^jz      loc_409FD0^^^cmp     rdx, 1^^^jle     loc_409FA0^^^sub     rsi, rdi^^^mov     r10, rdx^^^cmp     r10, 20h^^^jge     loc_409FD3^^^test    r10, 1^^^jz      short loc_409F19^^^movzx   eax, byte ptr [rdi]^^^movzx   edx, byte ptr [rdi+rsi]^^^sub     r10, 1^^^jz      loc_409FA6^^^add     rdi, 1^^^sub     eax, edx^^^jnz     locret_409FA8^^^test    r10, 2^^^jz      short loc_409F37^^^movzx   eax, word ptr [rdi]^^^movzx   edx, word ptr [rdi+rsi]^^^sub     r10, 2^^^jz      short loc_409FA9^^^add     rdi, 2^^^cmp     eax, edx^^^jnz     short loc_409FA9^^^test    r10, 4^^^jz      short loc_409F53^^^mov     eax, [rdi]^^^mov     edx, [rdi+rsi]^^^sub     r10, 4^^^jz      short loc_409FA9^^^add     rdi, 4^^^cmp     eax, edx^^^jnz     short loc_409FA9^^^test    r10, 8^^^jz      short loc_409F72^^^mov     rax, [rdi]^^^mov     rdx, [rdi+rsi]^^^sub     r10, 8^^^jz      short loc_409FA9^^^add     rdi, 8^^^cmp     rax, rdx^^^jnz     short loc_409FA9^^^movdqu  xmm1, xmmword ptr [rdi]^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm1, xmm0^^^pmovmskb edx, xmm1^^^xor     eax, eax^^^sub     edx, 0FFFFh^^^jz      short loc_409FD0^^^bsf     ecx, edx^^^lea     rcx, [rdi+rcx]^^^movzx   eax, byte ptr [rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^jmp     short loc_409FA6^^^movzx   eax, byte ptr [rdi]^^^movzx   edx, byte ptr [rsi]^^^sub     eax, edx^^^retn^^^cmp     rax, rdx^^^jz      short loc_409FD0^^^mov     r11, rax^^^sub     r11, rdx^^^bsf     rcx, r11^^^sar     rcx, 3^^^shl     rcx, 3^^^sar     rax, cl^^^movzx   eax, al^^^sar     rdx, cl^^^movzx   edx, dl^^^sub     eax, edx^^^retn^^^xor     eax, eax^^^retn^^^mov     r11, rdx^^^add     r11, rdi^^^mov     r8, rdi^^^and     r8, 0Fh^^^jz      short loc_40A007^^^movdqu  xmm1, xmmword ptr [rdi]^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^neg     r8^^^lea     rdi, [rdi+r8+10h]^^^test    rsi, 0Fh^^^jz      loc_40A173^^^test    rdi, 10h^^^jz      short loc_40A03A^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFE0h^^^cmp     rdi, r10^^^jge     loc_40A14D^^^test    rdi, 20h^^^jz      short loc_40A08D^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFC0h^^^cmp     rdi, r10^^^jge     short loc_40A10A^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^cmp     r10, rdi^^^jnz     short loc_40A099^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFE0h^^^cmp     rdi, r10^^^jge     short loc_40A14D^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^movdqu  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^cmp     r10, rdi^^^jnz     short loc_40A116^^^sub     r11, rdi^^^jz      loc_409FD0^^^mov     r10, r11^^^jmp     loc_409EF3^^^bsf     ecx, edx^^^movzx   eax, byte ptr [rdi+rcx]^^^add     rsi, rdi^^^movzx   edx, byte ptr [rsi+rcx]^^^jmp     loc_409FA6^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFE0h^^^cmp     rdi, r10^^^jge     short loc_40A14D^^^test    rdi, 10h^^^jz      short loc_40A1A6^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^cmp     r10, rdi^^^jz      short loc_40A14D^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFC0h^^^test    rdi, 20h^^^jz      short loc_40A1EC^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     short loc_40A160^^^add     rdi, 10h^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^cmp     r10, rdi^^^jz      loc_40A10A^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^cmp     r10, rdi^^^jnz     short loc_40A1F5^^^mov     r10, r11^^^and     r10, 0FFFFFFFFFFFFFFE0h^^^cmp     rdi, r10^^^jge     loc_40A14D^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^movdqa  xmm0, xmmword ptr [rdi+rsi]^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^pmovmskb edx, xmm0^^^sub     edx, 0FFFFh^^^jnz     loc_40A160^^^add     rdi, 10h^^^cmp     rdi, r10^^^jnz     short loc_40A27E^^^sub     r11, rdi^^^jz      loc_409FD0^^^mov     r10, r11^^^jmp     loc_409EF3^^^
_dl_signal_error$$$push    r15^^^mov     eax, offset aDynamicLinkerB^^^push    r14^^^push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12d, edi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 428h^^^test    rcx, rcx^^^cmovz   r13, rax^^^call    cs:_dl_error_catch_tsd^^^mov     r14, [rax]^^^test    rbp, rbp^^^mov     eax, offset unk_49A0C9^^^cmovz   rbp, rax^^^test    r14, r14^^^jz      short loc_4554EF^^^mov     rdi, rbp^^^call    strlen^^^mov     rdi, r13^^^lea     rbx, [rax+1]^^^call    strlen^^^lea     r15, [rax+1]^^^lea     rdi, [r15+rbx]^^^call    malloc^^^test    rax, rax^^^mov     [r14+8], rax^^^jz      short loc_4554D9^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^call    mempcpy^^^mov     rdx, rbx^^^mov     rsi, rbp^^^mov     rdi, rax^^^call    memcpy^^^mov     byte ptr [r14+10h], 1^^^mov     [r14], rax^^^test    r12d, r12d^^^mov     eax, 0FFFFFFFFh^^^lea     rdi, [r14+18h]  ^^^cmovz   r12d, eax^^^mov     esi, r12d       ^^^call    __longjmp^^^mov     qword ptr [r14], offset unk_49A0C9^^^mov     qword ptr [r14+8], offset _dl_out_of_memory^^^mov     byte ptr [r14+10h], 0^^^jmp     short loc_4554C1^^^test    r12d, r12d^^^jnz     short loc_455560^^^mov     eax, offset unk_49A0C9^^^mov     rcx, rax^^^cmp     byte ptr [rbp+0], 0^^^mov     edx, offset unk_49A0C9^^^mov     r9d, offset asc_496B02^^^mov     esi, offset aProgramNameUnk^^^mov     edi, 2^^^mov     r8, rbp^^^cmovz   r9, rdx^^^test    rbx, rbx^^^mov     edx, offset aErrorWhileLoad^^^cmovz   rbx, rdx^^^mov     rdx, cs:_dl_argv^^^mov     rdx, [rdx]^^^mov     [rsp+458h+var_448], rax^^^mov     [rsp+458h+var_450], rcx^^^mov     rcx, rbx^^^mov     [rsp+458h+var_458], r13^^^test    rdx, rdx^^^cmovz   rdx, rsi^^^mov     esi, offset aSSSSSSS^^^xor     eax, eax^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^lea     rsi, [rsp+458h+var_438]^^^mov     edx, 400h^^^mov     edi, r12d^^^call    strerror_r^^^mov     ecx, offset asc_496B02^^^jmp     short loc_4554FC^^^
sub_437D20$$$sub     rdi, 10h^^^lea     rax, [rsi-18h]^^^mov     r8, [rsi-8]^^^add     rdx, 5^^^mov     rcx, rdi^^^jmp     loc_437C50^^^
sub_482AC8$$$mov     rax, [rbx+18h]^^^mov     qword ptr [rax], 0^^^mov     rdx, [rdi+448h]^^^mov     [rax], rdx^^^pop     rbx^^^retn^^^
register_printf_type$$$push    rbx^^^mov     esi, 1^^^mov     rbx, rdi^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_424784^^^lock cmpxchg cs:lock_4, esi^^^jnz     _L_lock_14^^^jmp     short loc_424791^^^cmpxchg cs:lock_4, esi^^^jnz     _L_lock_14^^^cmp     cs:__printf_va_arg_table, 0^^^jz      short loc_4247E8^^^mov     edx, cs:pa_next_type^^^cmp     edx, 100h^^^jz      short loc_424810^^^lea     eax, [rdx+1]^^^movsxd  rcx, edx^^^mov     cs:pa_next_type, eax^^^mov     rax, cs:__printf_va_arg_table^^^mov     [rax+rcx*8-40h], rbx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4247D5^^^lock dec cs:lock_4^^^jnz     short _L_unlock_38^^^jmp     short loc_4247DD^^^dec     cs:lock_4^^^jnz     short _L_unlock_38^^^mov     eax, edx^^^pop     rbx^^^retn^^^mov     esi, 8^^^mov     edi, 0F8h^^^call    calloc^^^test    rax, rax^^^mov     cs:__printf_va_arg_table, rax^^^jnz     short loc_42479B^^^or      edx, 0FFFFFFFFh^^^jmp     short loc_4247C1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 1Ch^^^jmp     short loc_4247C1^^^
__opendirat$$$sub     rsp, 8^^^cmp     byte ptr [rsi], 0^^^jz      short loc_44BE24^^^xor     ecx, ecx^^^mov     edx, 90800h^^^call    __openat_nocancel^^^test    eax, eax^^^js      short loc_44BE32^^^mov     edi, eax^^^add     rsp, 8^^^jmp     __alloc_dir_constprop_1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 2^^^xor     eax, eax^^^pop     rdx^^^retn^^^
_nl_find_domain$$$push    rbp^^^mov     eax, 0^^^mov     rbp, rsp^^^mov     [rbp+var_20], r12^^^mov     [rbp+var_18], r13^^^mov     r12, rdi^^^mov     [rbp+var_8], r15^^^mov     [rbp+var_28], rbx^^^mov     r15, rsi^^^mov     [rbp+var_10], r14^^^sub     rsp, 0A0h^^^test    rax, rax^^^mov     r13, rdx^^^mov     [rbp+var_68], rcx^^^jz      short loc_4138B0^^^mov     edi, offset lock_11429^^^call    near ptr 0^^^mov     rdi, r12^^^mov     r14d, 0^^^call    strlen^^^lea     rdx, [rax+1]^^^xor     r9d, r9d^^^xor     ecx, ecx^^^mov     r8, r15^^^mov     rsi, r12^^^mov     edi, offset _nl_loaded_domains^^^mov     [rsp+0A0h+var_80], 0^^^mov     [rsp+0A0h+var_88], r13^^^mov     [rsp+0A0h+var_90], 0^^^mov     [rsp+0A0h+var_98], 0^^^mov     [rsp+0A0h+var_A0], 0^^^call    _nl_make_l10nflist^^^test    r14, r14^^^mov     rbx, rax^^^jz      short loc_413910^^^mov     edi, offset lock_11429^^^call    near ptr 0^^^test    rbx, rbx^^^jz      loc_4139A0^^^mov     esi, [rbx+8]^^^test    esi, esi^^^jle     short loc_413990^^^cmp     qword ptr [rbx+10h], 0^^^jz      short loc_413940^^^mov     rax, rbx^^^mov     r12, [rbp+var_20]^^^mov     rbx, [rbp+var_28]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     rdi, [rbx+20h]^^^test    rdi, rdi^^^jz      short loc_413927^^^xor     r13d, r13d^^^xor     r12d, r12d^^^jmp     short loc_413975^^^mov     rax, [rbx+r12*8+20h]^^^cmp     qword ptr [rax+10h], 0^^^jnz     short loc_413927^^^add     r13d, 1^^^movsxd  r12, r13d^^^mov     rdi, [rbx+r12*8+20h]^^^test    rdi, rdi^^^jz      short loc_413927^^^mov     ecx, [rdi+8]^^^test    ecx, ecx^^^jg      short loc_413958^^^mov     rsi, [rbp+var_68]^^^call    _nl_load_domain^^^jmp     short loc_413958^^^mov     rsi, [rbp+var_68]^^^mov     rdi, rbx^^^call    _nl_load_domain^^^jmp     short loc_413920^^^mov     rdi, r15^^^call    _nl_expand_alias^^^test    rax, rax^^^jz      short loc_4139DD^^^mov     rdi, rax^^^mov     [rbp+var_70], rax^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, [rbp+var_70]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0A0h+var_70+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     r15, rax^^^lea     r9, [rbp+var_38]^^^lea     r8, [rbp+var_40]^^^lea     rcx, [rbp+var_48]^^^lea     rdx, [rbp+var_50]^^^lea     rsi, [rbp+var_58]^^^mov     rdi, r15^^^call    _nl_explode_name^^^cmp     eax, 0FFFFFFFFh^^^mov     r15d, eax^^^jz      loc_413927^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_413A19^^^mov     edi, offset lock_11429^^^call    near ptr 0^^^mov     rdi, r12^^^call    strlen^^^lea     rdx, [rax+1]^^^mov     rax, [rbp+var_50]^^^mov     r9, [rbp+var_48]^^^mov     r8, [rbp+var_58]^^^mov     ecx, r15d^^^mov     rsi, r12^^^mov     edi, offset _nl_loaded_domains^^^mov     [rsp+0A0h+var_80], 1^^^mov     [rsp+0A0h+var_88], r13^^^mov     [rsp+0A0h+var_90], rax^^^mov     rax, [rbp+var_38]^^^mov     [rsp+0A0h+var_98], rax^^^mov     rax, [rbp+var_40]^^^mov     [rsp+0A0h+var_A0], rax^^^call    _nl_make_l10nflist^^^test    r14, r14^^^mov     rbx, rax^^^jz      short loc_413A76^^^mov     edi, offset lock_11429^^^call    near ptr 0^^^test    rbx, rbx^^^jz      short loc_413A89^^^mov     edx, [rbx+8]^^^test    edx, edx^^^jle     short loc_413AE7^^^cmp     qword ptr [rbx+10h], 0^^^jz      short loc_413AA1^^^and     r15d, 1^^^jz      loc_413927^^^mov     rdi, [rbp+var_38]^^^call    free^^^jmp     loc_413927^^^mov     rdi, [rbx+20h]^^^test    rdi, rdi^^^jz      short loc_413A89^^^xor     r13d, r13d^^^xor     r12d, r12d^^^jmp     short loc_413AD5^^^mov     rax, [rbx+r12*8+20h]^^^cmp     qword ptr [rax+10h], 0^^^jnz     short loc_413A89^^^add     r13d, 1^^^movsxd  r12, r13d^^^mov     rdi, [rbx+r12*8+20h]^^^test    rdi, rdi^^^jz      short loc_413A89^^^mov     eax, [rdi+8]^^^test    eax, eax^^^jg      short loc_413AB8^^^mov     rsi, [rbp+var_68]^^^call    _nl_load_domain^^^jmp     short loc_413AB8^^^mov     rsi, [rbp+var_68]^^^mov     rdi, rbx^^^call    _nl_load_domain^^^jmp     short loc_413A82^^^
_IO_wdefault_uflow$$$mov     rax, [rdi+0D8h]^^^push    rbx^^^mov     rbx, rdi^^^call    qword ptr [rax+20h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_426F86^^^mov     rdx, [rbx+0A0h]^^^mov     rcx, [rdx]^^^mov     eax, [rcx]^^^add     rcx, 4^^^mov     [rdx], rcx^^^pop     rbx^^^retn^^^
_L_lock_3954$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4589FB^^^
call_init.part.0$$$push    r14^^^test    byte ptr cs:_dl_debug_mask, 2^^^push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     ebx, esi^^^jnz     short loc_48EE27^^^mov     rax, [r12+0A0h]^^^test    rax, rax^^^jz      short loc_48EDCB^^^mov     rax, [rax+8]^^^add     rax, [r12]^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     edi, ebx^^^call    rax^^^mov     rdx, [r12+108h]^^^test    rdx, rdx^^^jz      short loc_48EE1E^^^mov     rax, [r12+118h]^^^mov     rcx, [rax+8]^^^mov     rax, [r12]^^^add     rax, [rdx+8]^^^shr     rcx, 3^^^test    ecx, ecx^^^jz      short loc_48EE1E^^^lea     r12, [rax+8]^^^sub     ecx, 1^^^lea     r14, [r12+rcx*8]^^^jmp     short loc_48EE0C^^^add     r12, 8^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     edi, ebx^^^call    qword ptr [rax]^^^cmp     r12, r14^^^mov     rax, r12^^^jnz     short loc_48EE08^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rsi, [rdi+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48EE3A^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     edi, offset aCallingInitS^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48EDAC^^^
_L_lock_44$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_41868C^^^
__libc_sigaction$$$sub     rsp, 0C8h^^^test    rsi, rsi^^^mov     r8, rdx^^^jz      loc_462BD8^^^mov     rax, [rsi]^^^mov     [rsp+0C8h+var_140], rax^^^mov     rax, [rsi+8]^^^mov     [rsp+0C8h+var_128], rax^^^mov     rax, [rsi+10h]^^^mov     [rsp+0C8h+var_120], rax^^^mov     rax, [rsi+18h]^^^mov     [rsp+0C8h+var_118], rax^^^mov     rax, [rsi+20h]^^^mov     [rsp+0C8h+var_110], rax^^^mov     rax, [rsi+28h]^^^mov     [rsp+0C8h+var_108], rax^^^mov     rax, [rsi+30h]^^^mov     [rsp+0C8h+var_100], rax^^^mov     rax, [rsi+38h]^^^mov     [rsp+0C8h+var_F8], rax^^^mov     rax, [rsi+40h]^^^mov     [rsp+0C8h+var_F0], rax^^^mov     rax, [rsi+48h]^^^mov     [rsp+0C8h+var_E8], rax^^^mov     rax, [rsi+50h]^^^mov     [rsp+0C8h+var_E0], rax^^^mov     rax, [rsi+58h]^^^mov     [rsp+0C8h+var_D8], rax^^^mov     rax, [rsi+60h]^^^mov     [rsp+0C8h+var_D0], rax^^^mov     rax, [rsi+68h]^^^mov     [rsp+0C8h+var_C8], rax^^^mov     rax, [rsi+70h]^^^mov     [rsp+0C8h+var_C0], rax^^^mov     rax, [rsi+78h]^^^mov     [rsp+0C8h+var_B8], rax^^^mov     rax, [rsi+80h]^^^mov     [rsp+0C8h+var_B0], rax^^^mov     eax, [rsi+88h]^^^mov     [rsp+0C8h+var_130], offset __restore_rt^^^or      eax, 4000000h^^^cdqe^^^mov     [rsp+0C8h+var_138], rax^^^lea     rdx, [rsp+0C8h+var_A0]^^^xor     eax, eax^^^lea     rcx, [rsp+0C8h+var_140]^^^test    r8, r8^^^mov     r10d, 8^^^movsxd  rdi, edi^^^cmovz   rdx, rax^^^test    rsi, rsi^^^mov     rsi, rax^^^cmovnz  rsi, rcx^^^mov     al, 0Dh^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      loc_462CF2^^^test    eax, eax^^^js      loc_462CEA^^^test    r8, r8^^^jz      loc_462CEA^^^mov     rdx, [rsp+0C8h+var_A0]^^^mov     [r8], rdx^^^mov     rdx, [rsp+0C8h+var_88]^^^mov     [r8+8], rdx^^^mov     rdx, [rsp+0C8h+var_80]^^^mov     [r8+10h], rdx^^^mov     rdx, [rsp+0C8h+var_78]^^^mov     [r8+18h], rdx^^^mov     rdx, [rsp+0C8h+var_70]^^^mov     [r8+20h], rdx^^^mov     rdx, [rsp+0C8h+var_68]^^^mov     [r8+28h], rdx^^^mov     rdx, [rsp+0C8h+var_60]^^^mov     [r8+30h], rdx^^^mov     rdx, [rsp+0C8h+var_58]^^^mov     [r8+38h], rdx^^^mov     rdx, [rsp+0C8h+var_50]^^^mov     [r8+40h], rdx^^^mov     rdx, [rsp+0C8h+var_48]^^^mov     [r8+48h], rdx^^^mov     rdx, [rsp+0C8h+var_40]^^^mov     [r8+50h], rdx^^^mov     rdx, [rsp+0C8h+var_38]^^^mov     [r8+58h], rdx^^^mov     rdx, [rsp+0C8h+var_30]^^^mov     [r8+60h], rdx^^^mov     rdx, [rsp+0C8h+var_28]^^^mov     [r8+68h], rdx^^^mov     rdx, [rsp+0C8h+var_20]^^^mov     [r8+70h], rdx^^^mov     rdx, [rsp+0C8h+var_18]^^^mov     [r8+78h], rdx^^^mov     rdx, [rsp+0C8h+var_10]^^^mov     [r8+80h], rdx^^^mov     rdx, [rsp+0C8h+var_98]^^^mov     [r8+88h], edx^^^mov     rdx, [rsp+0C8h+var_90]^^^mov     [r8+90h], rdx^^^add     rsp, 0C8h^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      eax, 0FFFFFFFFh^^^jmp     short loc_462CEA^^^
__deregister_frame$$$sub     rsp, 8^^^mov     eax, [rdi]^^^test    eax, eax^^^jnz     short loc_4946D0^^^add     rsp, 8^^^retn^^^call    __deregister_frame_info_bases^^^add     rsp, 8^^^mov     rdi, rax^^^jmp     free^^^
sub_40A690$$$mov     [rdi-0Fh], dl^^^
sub_40A693$$$mov     [rdi-0Eh], dx^^^mov     [rdi-0Ch], edx^^^mov     [rdi-8], rdx^^^jmp     short sub_40A6AA^^^
_Unwind_IteratePhdrCallback$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 68h^^^cmp     rsi, 2Fh^^^mov     rax, [rdi+10h]^^^mov     r9, [rdi]^^^setnbe  [rsp+98h+var_89]^^^jbe     loc_494068^^^mov     r10d, [rdx+28h]^^^test    r10d, r10d^^^jz      loc_494068^^^mov     rdx, [rdi+20h]^^^cmp     rdx, cs:adds_8480^^^mov     rcx, [rdi+28h]^^^jz      loc_494178^^^lea     r8, frame_hdr_cache^^^mov     cs:adds_8480, rdx^^^mov     cs:subs_8481, rcx^^^mov     edx, 1^^^mov     rcx, r8^^^nop     word ptr [rax+rax+00000000h]^^^lea     rsi, [rdx+rdx*2]^^^add     rdx, 1^^^mov     qword ptr [rcx], 0^^^mov     qword ptr [rcx+8], 0^^^shl     rsi, 4^^^add     rsi, r8^^^mov     [rcx+28h], rsi^^^add     rcx, 30h^^^cmp     rdx, 9^^^jnz     short loc_494010^^^lea     rdx, frame_hdr_cache^^^mov     cs:qword_6C5E58, 0^^^xor     r13d, r13d^^^mov     dword ptr [rbx+28h], 0^^^xor     r15d, r15d^^^mov     cs:frame_hdr_cache_head, rdx^^^jmp     short loc_494078^^^cmp     rsi, 19h^^^jbe     loc_494303^^^xor     r13d, r13d^^^xor     r15d, r15d^^^movzx   edx, word ptr [rdi+18h]^^^sub     rdx, 1^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_494170^^^xor     ebp, ebp^^^xor     r12d, r12d^^^xor     r10d, r10d^^^xor     ecx, ecx^^^xor     r11d, r11d^^^mov     r14d, 1^^^jmp     short loc_4940C1^^^cmp     esi, 6474E550h^^^jz      loc_494168^^^cmp     esi, 2^^^cmovz   rcx, rax^^^sub     rdx, 1^^^add     rax, 38h^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_494100^^^mov     esi, [rax]^^^cmp     esi, 1^^^jnz     short loc_4940A0^^^mov     rdi, r9^^^add     rdi, [rax+10h]^^^mov     rsi, [rbx]^^^cmp     rdi, rsi^^^ja      short loc_4940B3^^^mov     r8, rdi^^^add     r8, [rax+28h]^^^cmp     rsi, r8^^^cmovb   rbp, r8^^^cmovb   r12, rdi^^^cmovb   r10, r14^^^sub     rdx, 1^^^add     rax, 38h^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4940C1^^^nop     dword ptr [rax+rax+00h]^^^test    r10, r10^^^jz      short loc_494170^^^cmp     [rsp+98h+var_89], 0^^^jz      short loc_494135^^^test    r15, r15^^^jz      short loc_49411A^^^test    r13, r13^^^jnz     loc_494200^^^mov     r13, cs:frame_hdr_cache_head^^^mov     [r13+10h], r9^^^mov     [r13+18h], r11^^^mov     [r13+20h], rcx^^^mov     [r13+0], r12^^^mov     [r13+8], rbp^^^test    r11, r11^^^jz      short loc_494170^^^mov     r12, r9^^^add     r12, [r11+10h]^^^mov     ebp, 1^^^cmp     byte ptr [r12], 1^^^jz      loc_494220^^^add     rsp, 68h^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r11, rax^^^jmp     loc_4940B3^^^xor     ebp, ebp^^^jmp     short loc_494151^^^cmp     rcx, cs:subs_8481^^^jnz     loc_493FE9^^^mov     r8, cs:frame_hdr_cache_head^^^test    r8, r8^^^jz      loc_494072^^^mov     rsi, [rbx]^^^mov     r13, r8^^^xor     r15d, r15d^^^jmp     short loc_4941BC^^^or      rcx, rdx^^^jz      loc_494078^^^mov     rdx, [r13+28h]^^^test    rdx, rdx^^^jz      loc_494078^^^mov     r15, r13^^^mov     r13, rdx^^^mov     rdx, [r13+0]^^^mov     rcx, [r13+8]^^^cmp     rdx, rsi^^^ja      short loc_4941A0^^^cmp     rcx, rsi^^^jbe     short loc_4941A0^^^cmp     r8, r13^^^mov     r9, [r13+10h]^^^mov     r11, [r13+18h]^^^jz      loc_494135^^^mov     rax, [r13+28h]^^^mov     cs:frame_hdr_cache_head, r13^^^mov     [r15+28h], rax^^^mov     [r13+28h], r8^^^jmp     loc_494135^^^mov     rax, [r13+28h]^^^mov     [r15+28h], rax^^^mov     rax, cs:frame_hdr_cache_head^^^mov     cs:frame_hdr_cache_head, r13^^^mov     [r13+28h], rax^^^jmp     loc_494121^^^movzx   r13d, byte ptr [r12+1]^^^lea     r15, [rbx+8]^^^lea     r14, [rbx+10h]^^^mov     rsi, r15^^^mov     rdx, r14^^^mov     edi, r13d^^^call    base_from_cb_data_isra_4^^^lea     rdx, [r12+4]^^^lea     rcx, [rsp+98h+var_50]^^^mov     edi, r13d^^^mov     rsi, rax^^^call    read_encoded_value_with_base_0^^^movzx   r13d, byte ptr [r12+2]^^^cmp     r13b, 0FFh^^^jz      short loc_494269^^^cmp     byte ptr [r12+3], 3Bh^^^jz      loc_49430D^^^mov     rax, [rbx+8]^^^mov     rsi, [rsp+98h+var_50]^^^lea     rdi, [rsp+98h+var_88]^^^mov     rdx, [rbx]^^^mov     [rsp+98h+var_68], 0^^^mov     ebp, 1^^^mov     [rsp+98h+var_88], 0^^^mov     byte ptr [rsp+98h+var_68], 4^^^mov     [rsp+98h+var_80], rax^^^mov     rax, [rbx+10h]^^^mov     [rsp+98h+var_70], rsi^^^mov     [rsp+98h+var_78], rax^^^call    linear_search_fdes^^^test    rax, rax^^^mov     [rbx+20h], rax^^^jz      loc_494151^^^lea     rdi, [rax+4]^^^movsxd  rax, dword ptr [rax+4]^^^sub     rdi, rax^^^call    get_cie_encoding^^^movzx   r12d, al^^^mov     rdx, r14^^^mov     rsi, r15^^^mov     edi, r12d^^^call    base_from_cb_data_isra_4^^^mov     rdx, [rbx+20h]^^^lea     rcx, [rsp+98h+var_40]^^^mov     rsi, rax^^^mov     edi, r12d^^^add     rdx, 8^^^call    read_encoded_value_with_base_0^^^mov     rax, [rsp+98h+var_40]^^^mov     [rbx+18h], rax^^^jmp     loc_494151^^^mov     ebp, 0FFFFFFFFh^^^jmp     loc_494151^^^movzx   r13d, r13b^^^mov     rdx, r14^^^mov     rsi, r15^^^mov     edi, r13d^^^mov     [rsp+98h+var_98], rax^^^call    base_from_cb_data_isra_4^^^mov     r8, [rsp+98h+var_98]^^^lea     rcx, [rsp+98h+var_48]^^^mov     rsi, rax^^^mov     edi, r13d^^^mov     rdx, r8^^^call    read_encoded_value_with_base_0^^^mov     rsi, [rsp+98h+var_48]^^^test    rsi, rsi^^^jz      loc_494151^^^test    al, 3^^^jnz     loc_494269^^^movsxd  rdx, dword ptr [rax]^^^mov     rdi, [rbx]^^^add     rdx, r12^^^cmp     rdi, rdx^^^jb      loc_494151^^^sub     rsi, 1^^^lea     rbp, [rax+rsi*8]^^^movsxd  rdx, dword ptr [rbp+0]^^^add     rdx, r12^^^cmp     rdi, rdx^^^jnb     short loc_4943C0^^^test    rsi, rsi^^^jz      loc_494422^^^xor     ecx, ecx^^^jmp     short loc_49439F^^^add     rdx, 1^^^movsxd  r8, dword ptr [rax+rdx*8]^^^add     r8, r12^^^cmp     rdi, r8^^^jb      short loc_4943BB^^^mov     rcx, rdx^^^cmp     rcx, rsi^^^jnb     loc_494422^^^lea     rdx, [rcx+rsi]^^^shr     rdx, 1^^^lea     rbp, [rax+rdx*8]^^^movsxd  r8, dword ptr [rbp+0]^^^add     r8, r12^^^cmp     rdi, r8^^^jnb     short loc_494383^^^mov     rsi, rdx^^^jmp     short loc_494396^^^cmp     rsi, rcx^^^jbe     short loc_494422^^^movsxd  r13, dword ptr [rbp+4]^^^add     r13, r12^^^movsxd  rax, dword ptr [r13+4]^^^lea     rdi, [r13+4]^^^sub     rdi, rax^^^call    get_cie_encoding^^^movzx   r14d, al^^^mov     edi, r14d^^^call    size_of_encoded_value^^^mov     eax, eax^^^mov     edi, r14d^^^lea     rcx, [rsp+98h+var_40]^^^lea     rdx, [r13+rax+8]^^^and     edi, 0Fh^^^xor     esi, esi^^^call    read_encoded_value_with_base_0^^^movsxd  rax, dword ptr [rbp+0]^^^add     r12, rax^^^mov     rax, r12^^^add     rax, [rsp+98h+var_40]^^^cmp     [rbx], rax^^^jnb     short loc_494414^^^mov     [rbx+20h], r13^^^mov     [rbx+18h], r12^^^mov     ebp, 1^^^jmp     loc_494151^^^call    abort^^^
__strtof_internal$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^jmp     ____strtof_l_internal^^^
free_atfork$$$test    rdi, rdi^^^jz      short locret_404FA0^^^mov     rax, [rdi-8]^^^lea     rsi, [rdi-10h]^^^test    al, 2^^^jnz     short loc_404F60^^^test    al, 4^^^mov     edi, offset main_arena^^^jz      short loc_404F46^^^mov     rax, rsi^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdi, [rax]^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^xor     edx, edx^^^cmp     qword ptr fs:[rax], 0FFFFFFFFFFFFFFFFh^^^setz    dl^^^jmp     _int_free^^^mov     rdx, [rdi-10h]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^mov     rdi, rsi^^^sub     rdi, rdx^^^add     rax, rdx^^^mov     rdx, cs:_dl_pagesize^^^mov     rcx, rdi^^^or      rcx, rax^^^sub     rdx, 1^^^test    rcx, rdx^^^jnz     short loc_404FA2^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rax^^^mov     rsi, rax^^^jmp     munmap^^^rep retn^^^mov     rdi, rsi^^^jmp     munmap_chunk_part_4^^^
opendir$$$sub     rsp, 8^^^cmp     byte ptr [rdi], 0^^^jz      short loc_44BE6C^^^xor     ecx, ecx^^^mov     rsi, rdi^^^mov     edx, 90800h^^^mov     edi, 0FFFFFF9Ch^^^call    __openat_nocancel^^^test    eax, eax^^^js      short loc_44BE7A^^^mov     edi, eax^^^add     rsp, 8^^^jmp     __alloc_dir_constprop_1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 2^^^xor     eax, eax^^^pop     rcx^^^retn^^^
argz_add_sep$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     rdi, rdx^^^mov     [rsp+var_8], r14^^^sub     rsp, 28h^^^mov     r12, rdx^^^mov     rbp, rsi^^^mov     r14d, ecx^^^call    strlen^^^lea     r13, [rax+1]^^^xor     edx, edx^^^cmp     r13, 1^^^jbe     short loc_4763E6^^^mov     rsi, r13^^^add     rsi, [rbp+0]^^^mov     rdi, [rbx]^^^call    realloc^^^test    rax, rax^^^mov     [rbx], rax^^^mov     edx, 0Ch^^^jz      short loc_4763E6^^^add     rax, [rbp+0]^^^jmp     short loc_4763B3^^^mov     [rax], dl^^^movzx   edx, byte ptr [r12]^^^add     rax, 1^^^add     r12, 1^^^test    dl, dl^^^jz      short loc_4763E0^^^movzx   edx, byte ptr [r12]^^^movsx   ecx, dl^^^cmp     ecx, r14d^^^jnz     short loc_4763A0^^^cmp     rax, [rbx]^^^jbe     short loc_476408^^^cmp     byte ptr [rax-1], 0^^^jz      short loc_476408^^^mov     byte ptr [rax], 0^^^movzx   edx, byte ptr [r12]^^^add     rax, 1^^^add     r12, 1^^^test    dl, dl^^^jnz     short loc_4763B3^^^nop^^^add     [rbp+0], r13^^^xor     edx, edx^^^mov     eax, edx^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^sub     r13, 1^^^jmp     short loc_4763AB^^^
__strcasecmp_l_avx$$$mov     rax, [rdx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strcasecmp_l_nonascii^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^vmovdqa xmm4, cs:xmmword_49CA70^^^vmovdqa xmm5, cs:xmmword_49CAA0^^^vmovdqa xmm6, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      short loc_4363F0^^^cmp     eax, 30h^^^ja      short loc_4363F0^^^vmovdqu xmm1, xmmword ptr [rdi]^^^vmovdqu xmm2, xmmword ptr [rsi]^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpxor   xmm0, xmm0, xmm0^^^vpcmpeqb xmm0, xmm0, xmm1^^^vpcmpeqb xmm1, xmm1, xmm2^^^vpsubb  xmm1, xmm1, xmm0^^^vpmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_437970^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     word ptr [rax+rax+00h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^vpxor   xmm0, xmm0, xmm0^^^cmp     ecx, eax^^^jz      short loc_436440^^^ja      short loc_436417^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^vmovdqa xmm2, xmmword ptr [rdi]^^^vmovdqa xmm1, xmmword ptr [rsi]^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49CAF0^^^movsxd  r9, dword ptr [r10+r9*4]^^^vpcmpeqb xmm0, xmm0, xmm1^^^lea     r10, [r10+r9]^^^jmp     r10^^^vmovdqa xmm1, xmmword ptr [rsi]^^^vpcmpeqb xmm0, xmm0, xmm1^^^vmovdqa xmm2, xmmword ptr [rdi]^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm1, xmm1, xmm2^^^vpsubb  xmm1, xmm1, xmm0^^^vpmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^mov     rcx, 10h^^^mov     r9, 10h^^^mov     rdx, rcx^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_436520^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_436520^^^jmp     short loc_4364A0^^^jnb     loc_43798C^^^lea     rcx, [rdx+rcx-10h]^^^movzx   eax, byte ptr [rdi+rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^lea     rcx, unk_4A3180^^^mov     eax, [rcx+rax*4]^^^mov     edx, [rcx+rdx*4]^^^sub     eax, edx^^^retn^^^vpslldq xmm2, xmm2, 0Fh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436670^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 1^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436670^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 1^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_4365C0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 1^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Eh^^^ja      loc_4365CA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 0Eh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_4367C0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 2^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4367C0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 2^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_436710^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 2^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Dh^^^ja      loc_43671A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 0Dh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^add     r10, 10h^^^jg      loc_436910^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 3^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436910^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 3^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_43685E^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 3^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ch^^^ja      loc_436868^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 0Ch^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436A60^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 4^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436A60^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 4^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_4369B0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 4^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Bh^^^ja      loc_4369BA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 0Bh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436BB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 5^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436BB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 5^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_436B00^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 5^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ah^^^ja      loc_436B0A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 0Ah^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436D00^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 6^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436D00^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 6^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_436C50^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 6^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 9^^^ja      loc_436C5A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 9^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436E50^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 7^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436E50^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 7^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_436DA0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 7^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 8^^^ja      loc_436DAA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 8^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_436FA0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 8^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436FA0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 8^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_436EF0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 8^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 7^^^ja      loc_436EFA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 7^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_4370F0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 9^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4370F0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 9^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_437040^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 9^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 6^^^ja      loc_43704A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 6^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_437240^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_437240^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_437190^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Ah^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 5^^^ja      loc_43719A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 5^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_437390^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_437390^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_4372E0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Bh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 4^^^ja      loc_4372EA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 4^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_4374E0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4374E0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_437430^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Ch^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 3^^^ja      loc_43743A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 3^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_437630^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_437630^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_437580^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Dh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 2^^^ja      loc_43758A^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 2^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_437780^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_437780^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^jmp     loc_4376D0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Eh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 1^^^ja      loc_4376DA^^^jmp     loc_4378F1^^^vpslldq xmm2, xmm2, 1^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_437958^^^vmovdqa xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^xchg    ax, ax^^^add     r10, 10h^^^jg      loc_4378D0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_437930^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4378D0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     short loc_437930^^^add     rdx, 10h^^^jmp     loc_437820^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Fh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0^^^ja      loc_43782A^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^nop     dword ptr [rax+rax+00000000h]^^^jnb     short loc_43798C^^^add     rdx, rcx^^^lea     rdi, [rdi+r9-10h]^^^movzx   eax, byte ptr [rdi+rdx]^^^movzx   edx, byte ptr [rsi+rdx]^^^test    r8d, r8d^^^jz      short loc_437948^^^xchg    eax, edx^^^lea     rcx, unk_4A3180^^^mov     edx, [rcx+rdx*4]^^^mov     eax, [rcx+rax*4]^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_437970^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^
_L_lock_2118$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_447BF1^^^
__libc_register_dl_open_hook$$$sub     rsp, 48h^^^mov     ecx, offset do_dlsym_private^^^mov     [rsp+48h+var_48], rdi^^^lea     rdx, [rsp+48h+var_9]^^^lea     rsi, [rsp+48h+var_28]^^^lea     rdi, [rsp+48h+var_18]^^^mov     r8, rsp^^^mov     [rsp+48h+var_40], offset a_dl_open_hook^^^mov     [rsp+48h+var_28], 0^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     short loc_47AC20^^^cmp     [rsp+48h+var_28], 0^^^jnz     short loc_47AC20^^^mov     rdx, [rsp+48h+var_38]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_47AC01^^^mov     rax, [rdx]^^^mov     rdx, [rsp+48h+var_30]^^^add     rax, [rdx+8]^^^jz      short loc_47AC13^^^mov     qword ptr [rax], offset _dl_open_hook^^^add     rsp, 48h^^^retn^^^cmp     [rsp+48h+var_9], 0^^^jz      short loc_47AC13^^^mov     rdi, [rsp+48h+var_28]^^^call    free^^^add     rsp, 48h^^^retn^^^
add_module.isra.1$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdx^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 68h^^^mov     [rbp+var_58], rsi^^^movzx   edx, byte ptr [rdi]^^^mov     rsi, cs:off_499B08^^^movsx   rax, dl^^^test    byte ptr [rsi+rax*2+1], 20h^^^jz      short loc_458ED2^^^add     rbx, 1^^^movzx   edx, byte ptr [rbx]^^^movsx   rax, dl^^^test    byte ptr [rsi+rax*2+1], 20h^^^jnz     short loc_458EC0^^^test    dl, dl^^^jz      short loc_458F04^^^mov     rdi, cs:off_499B18^^^mov     rdx, rbx^^^jmp     short loc_458EF7^^^movsx   rax, al^^^add     rdx, 1^^^test    byte ptr [rsi+rax*2+1], 20h^^^jnz     short loc_458F18^^^mov     eax, [rdi+rax*4]^^^mov     [rdx], al^^^movzx   eax, byte ptr [rdx+1]^^^test    al, al^^^jnz     short loc_458EE8^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     byte ptr [rdx], 0^^^lea     r15, [rdx+1]^^^movzx   edx, byte ptr [rdx+1]^^^mov     r13, r15^^^movsx   rax, dl^^^test    byte ptr [rsi+rax*2+1], 20h^^^jz      short loc_458F4C^^^nop     dword ptr [rax+00000000h]^^^add     r13, 1^^^movzx   edx, byte ptr [r13+0]^^^movsx   rax, dl^^^test    byte ptr [rsi+rax*2+1], 20h^^^jnz     short loc_458F38^^^test    dl, dl^^^jz      short loc_458F04^^^mov     r14, r15^^^jmp     short loc_458F6B^^^movsx   rax, al^^^add     r13, 1^^^add     r14, 1^^^test    byte ptr [rsi+rax*2+1], 20h^^^jnz     short loc_458F80^^^mov     eax, [rdi+rax*4]^^^mov     [r14], al^^^movzx   eax, byte ptr [r13+1]^^^test    al, al^^^jnz     short loc_458F58^^^jmp     short loc_458F04^^^lea     rax, [r14+1]^^^mov     byte ptr [r14], 0^^^mov     [rbp+var_60], rax^^^nop     dword ptr [rax+00h]^^^add     r13, 1^^^movzx   eax, byte ptr [r13+0]^^^movsx   rdx, al^^^test    byte ptr [rsi+rdx*2+1], 20h^^^jnz     short loc_458F90^^^test    al, al^^^mov     rdx, [rbp+var_60]^^^jnz     short loc_458FC3^^^jmp     short loc_458FD2^^^movsx   rdi, al^^^add     r13, 1^^^test    byte ptr [rsi+rdi*2+1], 20h^^^jnz     loc_459150^^^mov     [rdx], al^^^movzx   eax, byte ptr [r13+1]^^^add     rdx, 1^^^test    al, al^^^jnz     short loc_458FB0^^^mov     byte ptr [rdx], 0^^^add     rdx, 1^^^mov     [rbp+var_6C], 1^^^mov     [rbp+var_68], rdx^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jz      loc_458F04^^^cmp     al, 2Fh^^^mov     eax, 0^^^mov     rdx, [rbp+var_68]^^^cmovz   r12, rax^^^sub     rdx, [rbp+var_60]^^^mov     r13d, 3^^^mov     r14d, 3^^^cmp     rdx, 3^^^mov     [rbp+var_78], rdx^^^jle     short loc_459057^^^mov     rdi, [rbp+var_68]^^^mov     edx, 4^^^mov     esi, offset gconv_module_ext^^^mov     [rbp+var_88], ecx^^^sub     rdi, 4^^^call    sub_400370^^^cmp     eax, 1^^^mov     ecx, [rbp+var_88]^^^sbb     r13, r13^^^not     r13^^^and     r13d, 3^^^cmp     eax, 1^^^sbb     r14d, r14d^^^not     r14d^^^and     r14d, 3^^^mov     rdx, r15^^^mov     rdi, rbx^^^mov     [rbp+var_88], ecx^^^sub     rdx, rbx^^^mov     rsi, rdx^^^mov     [rbp+var_80], rdx^^^call    sub_400330^^^lea     rdx, [rax+1Fh]^^^mov     rsi, rbx^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^mov     rdx, rax^^^lea     rdi, [rsp+90h+var_81]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     byte ptr [rdi+rax], 0^^^call    memcpy^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jnz     loc_458F04^^^mov     rax, [rbp+var_68]^^^mov     edi, 1^^^sub     rax, rbx^^^lea     rsi, [r12+rax+38h]^^^add     rsi, r13^^^call    calloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_458F04^^^lea     rdi, [rax+38h]^^^mov     rdx, [rbp+var_80]^^^mov     rsi, rbx^^^mov     [rax], rdi^^^call    mempcpy^^^mov     rdx, [rbp+var_60]^^^mov     [r13+8], rax^^^mov     rsi, r15^^^mov     rdi, rax^^^sub     rdx, r15^^^call    mempcpy^^^mov     ecx, [rbp+var_88]^^^mov     edx, [rbp+var_6C]^^^test    r12, r12^^^mov     [r13+18h], rax^^^mov     [r13+10h], edx^^^mov     [r13+14h], ecx^^^jnz     short loc_459195^^^mov     rdx, [rbp+var_78]^^^mov     rsi, [rbp+var_60]^^^mov     rdi, rax^^^call    mempcpy^^^test    r14d, r14d^^^jz      short loc_459139^^^mov     dword ptr [rax-1], 6F732Eh^^^mov     esi, 1^^^mov     rdi, r13^^^call    insert_module^^^jmp     loc_458F04^^^mov     byte ptr [rdx], 0^^^lea     rsi, [rbp+var_38]^^^add     rdx, 1^^^mov     [rbp+var_68], rdx^^^mov     rdi, r13^^^mov     edx, 0Ah^^^mov     [rbp+var_88], ecx^^^call    strtoq^^^test    eax, eax^^^mov     [rbp+var_6C], eax^^^mov     ecx, [rbp+var_88]^^^jle     short loc_459189^^^cmp     [rbp+var_38], r13^^^jnz     loc_458FE4^^^mov     [rbp+var_6C], 1^^^jmp     loc_458FE4^^^mov     rsi, [rbp+var_58]^^^mov     rdx, r12^^^mov     rdi, rax^^^call    mempcpy^^^jmp     loc_45911D^^^
mremap_chunk$$$mov     [rsp+var_10], rbp^^^mov     [rsp+var_8], r12^^^mov     [rsp+var_18], rbx^^^sub     rsp, 18h^^^mov     r12, [rdi+8]^^^mov     rax, cs:_dl_pagesize^^^mov     rbp, [rdi]^^^test    r12b, 2^^^jz      loc_40320D^^^and     r12, 0FFFFFFFFFFFFFFF8h^^^sub     rax, 1^^^add     r12, rbp^^^test    r12, rax^^^jnz     loc_4031F4^^^lea     rbx, [rax+rbp+8]^^^not     rax^^^add     rbx, rsi^^^and     rbx, rax^^^cmp     r12, rbx^^^jz      short loc_4031D9^^^sub     rdi, rbp^^^xor     eax, eax^^^mov     ecx, 1^^^mov     rdx, rbx^^^mov     rsi, r12^^^call    mremap^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_4031F0^^^lea     rdi, [rax+rbp]^^^test    dil, 0Fh^^^jnz     loc_40323F^^^mov     rax, [rdi]^^^cmp     rax, rbp^^^jnz     loc_403226^^^mov     rdx, rbx^^^sub     rbx, r12^^^add     rbx, cs:qword_6C29B8^^^sub     rdx, rax^^^mov     rax, rdx^^^or      rax, 2^^^cmp     rbx, cs:qword_6C29C0^^^mov     [rdi+8], rax^^^mov     cs:qword_6C29B8, rbx^^^jbe     short loc_4031D9^^^mov     cs:qword_6C29C0, rbx^^^mov     rax, rdi^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^xor     edi, edi^^^jmp     short loc_4031D9^^^mov     ecx, offset __func___12383^^^mov     edx, 0B3Ch^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aSizeOffset_dl_^^^call    __malloc_assert^^^mov     ecx, offset __func___12383^^^mov     edx, 0B3Bh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPSize0x2^^^call    __malloc_assert^^^mov     ecx, offset __func___12383^^^mov     edx, 0B4Eh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPPrev_sizeOffs^^^call    __malloc_assert^^^mov     ecx, offset __func___12383^^^mov     edx, 0B4Ch^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aUnsignedLongVo^^^call    __malloc_assert^^^
_L_unlock_110$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4254EC^^^
sub_472833$$$cmp     dword ptr [rbp-1120h], 0^^^jnz     loc_46F485^^^mov     r8d, [rbp-10F0h]^^^sub     r8d, 1^^^cmp     dword ptr [rbp-1198h], 0^^^mov     [rbp-10F0h], r8d^^^jnz     short loc_472892^^^test    r8d, r8d^^^jle     short loc_472892^^^movsxd  rdx, r8d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_472989^^^add     r14d, edx^^^movsxd  rax, dword ptr [rbp-10F8h]^^^imul    rax, 48h^^^add     rax, [rbp-10E0h]^^^jz      loc_4729C8^^^movsxd  rax, dword ptr [rax+30h]^^^mov     r8, [rbp-1118h]^^^shl     rax, 4^^^movzx   edi, byte ptr [r8+rax]^^^call    btowc^^^mov     rdx, [rbx+0A0h]^^^mov     esi, eax^^^test    rdx, rdx^^^jz      loc_4729AF^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4729AF^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      loc_4729A7^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_47299E^^^add     r14d, 1^^^cmp     dword ptr [rbp-1198h], 0^^^jz      loc_46F0FA^^^cmp     dword ptr [rbp-10F0h], 0^^^jle     loc_46F0FA^^^movsxd  rdx, dword ptr [rbp-10F0h]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_46F591^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_4728F6^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_473979^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   edi, byte ptr [rax]^^^call    btowc^^^mov     rdx, [rbx+0A0h]^^^mov     esi, eax^^^test    rdx, rdx^^^jz      loc_4738A1^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4738A1^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      loc_473946^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_472903^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_472A1E^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_4729E3^^^
_dl_init$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12, rdx^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     r14, [rdi+140h]^^^mov     r15, [rdi+148h]^^^mov     rdi, cs:_dl_initfirst^^^test    rdi, rdi^^^jnz     loc_48EF85^^^test    r15, r15^^^jz      short loc_48EE91^^^test    r14, r14^^^jnz     short loc_48EF08^^^mov     r14d, [rbx+2C0h]^^^nop     dword ptr [rax+rax+00000000h]^^^test    r14d, r14d^^^jz      short loc_48EEF4^^^mov     rax, [rbx+3B8h]^^^sub     r14d, 1^^^mov     edx, r14d^^^mov     rdi, [rax+rdx*8]^^^movzx   eax, byte ptr [rdi+314h]^^^test    al, 8^^^jnz     short loc_48EEA0^^^mov     rdx, [rdi+8]^^^or      eax, 8^^^mov     [rdi+314h], al^^^cmp     byte ptr [rdx], 0^^^jz      loc_48EF78^^^cmp     qword ptr [rdi+0A0h], 0^^^jz      short loc_48EF60^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     esi, ebp^^^call    call_init_part_0^^^test    r14d, r14d^^^jnz     short loc_48EEA5^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r15, [r15+8]^^^shr     r15, 3^^^test    r15d, r15d^^^jz      loc_48EE91^^^test    byte ptr cs:_dl_debug_mask, 2^^^jnz     loc_48EFC9^^^mov     rax, [rbx]^^^add     rax, [r14+8]^^^sub     r15d, 1^^^lea     r14, [rax+8]^^^lea     r15, [r14+r15*8]^^^jmp     short loc_48EF44^^^add     r14, 8^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     edi, ebp^^^call    qword ptr [rax]^^^cmp     r14, r15^^^mov     rax, r14^^^jnz     short loc_48EF40^^^jmp     loc_48EE91^^^cmp     qword ptr [rdi+108h], 0^^^jz      loc_48EEA0^^^xchg    ax, ax^^^jmp     loc_48EEE2^^^test    al, 3^^^jnz     loc_48EED8^^^jmp     loc_48EEA0^^^movzx   eax, byte ptr [rdi+314h]^^^test    al, 8^^^jnz     short loc_48EFB9^^^mov     rdx, [rdi+8]^^^or      eax, 8^^^mov     [rdi+314h], al^^^cmp     byte ptr [rdx], 0^^^jz      short loc_48EFF9^^^cmp     qword ptr [rdi+0A0h], 0^^^jz      short loc_48EFED^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     esi, ebp^^^call    call_init_part_0^^^mov     cs:_dl_initfirst, 0^^^jmp     loc_48EE87^^^mov     rsi, [rbx+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48EFDC^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     edi, offset aCallingPreinit^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48EF26^^^cmp     qword ptr [rdi+108h], 0^^^jz      short loc_48EFB9^^^jmp     short loc_48EFAC^^^test    al, 3^^^jnz     short loc_48EFA2^^^nop     dword ptr [rax]^^^jmp     short loc_48EFB9^^^
__wcsmbs_load_conv$$$push    rbp^^^mov     eax, 0^^^mov     rbp, rsp^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    rax, rax^^^jz      short loc_446754^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^cmp     qword ptr [rbx+28h], 0^^^jnz     loc_446872^^^mov     edi, 20h^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^jz      loc_44686A^^^mov     r8d, [rbx+34h]^^^mov     rsi, [rbx+0B0h]^^^cmp     r8d, 1^^^mov     rax, rsi^^^sbb     r9, r9^^^and     r9, 0FFFFFFFFFFFFFFF8h^^^add     r9, 0Bh^^^cmp     r8d, 1^^^sbb     rdx, rdx^^^xor     edi, edi^^^not     rdx^^^and     edx, 8^^^jmp     short loc_4467B8^^^add     rax, 1^^^cmp     cl, 2Fh^^^setz    cl^^^movzx   ecx, cl^^^add     rdi, rcx^^^movzx   ecx, byte ptr [rax]^^^test    cl, cl^^^jnz     short loc_4467A8^^^sub     rax, rsi^^^movzx   ecx, byte ptr [rsi]^^^lea     rax, [r9+rax+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+40h+var_31]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^test    cl, cl^^^mov     rax, r13^^^jz      short loc_446809^^^mov     r9, cs:off_499B18^^^nop     dword ptr [rax+rax+00000000h]^^^movsx   rcx, cl^^^add     rsi, 1^^^mov     ecx, [r9+rcx*4]^^^mov     [rax], cl^^^movzx   ecx, byte ptr [rsi]^^^add     rax, 1^^^test    cl, cl^^^jnz     short loc_4467F0^^^cmp     rdi, 1^^^jbe     loc_446918^^^lea     rcx, [rbp+var_40]^^^lea     rdx, [rbp+var_30]^^^xor     r8d, r8d^^^mov     byte ptr [rax], 0^^^mov     rsi, r13^^^mov     edi, offset aInternal^^^call    __gconv_find_transform^^^test    eax, eax^^^jnz     loc_446959^^^mov     rsi, [rbp+var_40]^^^cmp     rsi, 1^^^jbe     short loc_446898^^^mov     rdi, [rbp+var_30]^^^call    __gconv_close_transform^^^mov     [rbp+var_30], 0^^^mov     qword ptr [r12], 0^^^mov     qword ptr [r12+10h], 0^^^mov     rdi, r12^^^call    free^^^mov     qword ptr [rbx+28h], offset __wcsmbs_gconv_fcts_c^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_446886^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^lea     rsp, [rbp-18h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^mov     rax, [rbp+var_30]^^^mov     [r12+8], rsi^^^test    rax, rax^^^mov     [r12], rax^^^jz      short loc_446859^^^lea     rcx, [rbp+var_40]^^^lea     rdx, [rbp+var_30]^^^xor     r8d, r8d^^^mov     esi, offset aInternal^^^mov     rdi, r13^^^call    __gconv_find_transform^^^test    eax, eax^^^jnz     loc_446966^^^mov     rsi, [rbp+var_40]^^^cmp     rsi, 1^^^jbe     short loc_446908^^^mov     rdi, [rbp+var_30]^^^call    __gconv_close_transform^^^mov     [rbp+var_30], 0^^^xor     eax, eax^^^test    rax, rax^^^mov     [r12+10h], rax^^^jz      short loc_44696F^^^mov     [rbx+28h], r12^^^mov     qword ptr [rbx+20h], offset _nl_cleanup_ctype^^^jmp     loc_446872^^^mov     [r12+18h], rsi^^^mov     rax, [rbp+var_30]^^^jmp     short loc_4468E7^^^test    rdi, rdi^^^mov     byte ptr [rax], 2Fh^^^jnz     short loc_446950^^^mov     byte ptr [rax+1], 2Fh^^^add     rax, 2^^^test    rdx, rdx^^^jz      loc_446813^^^test    r8d, r8d^^^mov     ecx, offset unk_49A0C9^^^mov     esi, offset aTranslit^^^cmovz   rsi, rcx^^^mov     rdi, rax^^^call    mempcpy^^^jmp     loc_446813^^^add     rax, 1^^^jmp     loc_446813^^^mov     qword ptr [r12], 0^^^jmp     loc_446859^^^mov     qword ptr [r12+10h], 0^^^mov     rdi, [r12]^^^test    rdi, rdi^^^jz      loc_446862^^^mov     rsi, [r12+8]^^^call    __gconv_close_transform^^^jmp     loc_446862^^^
__gconv_release_cache$$$cmp     cs:gconv_cache, 0^^^jz      short locret_460900^^^jmp     free^^^rep retn^^^
wcschr$$$movq    xmm1, rsi^^^pxor    xmm2, xmm2^^^mov     rcx, rdi^^^punpckldq xmm1, xmm1^^^punpckldq xmm1, xmm1^^^and     rcx, 3Fh^^^cmp     rcx, 30h^^^ja      short loc_476476^^^movdqu  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     loc_476560^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     loc_476560^^^jmp     short loc_4764E0^^^and     rcx, 0Fh^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^sar     rdx, cl^^^sar     rax, cl^^^test    rax, rax^^^jz      short loc_4764C0^^^bsf     rax, rax^^^test    rdx, rdx^^^jz      short loc_4764B3^^^bsf     rdx, rdx^^^cmp     rax, rdx^^^ja      loc_476590^^^add     rax, rdi^^^add     rax, rcx^^^retn^^^test    rdx, rdx^^^jnz     loc_476590^^^pxor    xmm2, xmm2^^^add     rdi, 10h^^^nop     dword ptr [rax+rax+00000000h]^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     short loc_476560^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     short loc_476560^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     short loc_476560^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqd xmm2, xmm0^^^add     rdi, 10h^^^pcmpeqd xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm0^^^or      rdx, rax^^^jnz     short loc_476560^^^jmp     short loc_4764E0^^^pmovmskb edx, xmm2^^^test    rax, rax^^^jz      short loc_476590^^^bsf     rax, rax^^^test    rdx, rdx^^^jz      short loc_47657B^^^bsf     rcx, rdx^^^cmp     rax, rcx^^^ja      short loc_476590^^^sub     rdi, 10h^^^add     rax, rdi^^^retn^^^xor     rax, rax^^^retn^^^
sub_42B0F0$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
__linkin_atfork$$$mov     rdx, cs:__fork_handlers^^^mov     [rdi], rdx^^^mov     rax, rdx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_410C49^^^lock^^^cmpxchg cs:__fork_handlers, rdi^^^cmp     rdx, rax^^^jnz     short __linkin_atfork^^^rep retn^^^
_dl_vsym$$$sub     rsp, 28h^^^movzx   r8d, byte ptr [rdx]^^^mov     rax, rcx^^^xor     ecx, ecx^^^mov     [rsp+28h+var_28], rdx^^^mov     [rsp+28h+var_1C], 1^^^test    r8, r8^^^jz      loc_4903F0^^^movzx   r9d, byte ptr [rdx+1]^^^mov     ecx, r8d^^^test    r9b, r9b^^^jz      loc_4903F0^^^movzx   r10d, byte ptr [rdx+2]^^^mov     rcx, r8^^^movzx   r9d, r9b^^^shl     rcx, 4^^^add     rcx, r9^^^test    r10b, r10b^^^jz      short loc_4903F0^^^movzx   r9d, byte ptr [rdx+3]^^^shl     rcx, 4^^^movzx   r10d, r10b^^^add     rcx, r10^^^test    r9b, r9b^^^jz      short loc_4903F0^^^movzx   r11d, byte ptr [rdx+4]^^^shl     rcx, 4^^^movzx   r9d, r9b^^^add     rcx, r9^^^test    r11b, r11b^^^jz      short loc_4903F0^^^movzx   r8d, byte ptr [rdx+5]^^^shl     rcx, 4^^^movzx   r11d, r11b^^^add     rcx, r11^^^test    r8b, r8b^^^jz      short loc_4903E8^^^add     rdx, 5^^^xchg    ax, ax^^^shl     rcx, 4^^^movzx   r8d, r8b^^^add     rdx, 1^^^add     r8, rcx^^^mov     rcx, r8^^^and     ecx, 0F0000000h^^^shr     rcx, 18h^^^xor     rcx, r8^^^movzx   r8d, byte ptr [rdx]^^^test    r8b, r8b^^^jnz     short loc_4903C0^^^and     ecx, 0FFFFFFFh^^^xchg    ax, ax^^^mov     [rsp+28h+var_20], ecx^^^xor     r8d, r8d^^^mov     rcx, rsp^^^mov     rdx, rax^^^mov     [rsp+28h+var_18], 0^^^call    do_sym^^^add     rsp, 28h^^^retn^^^
_dl_mcount_wrapper$$$mov     rsi, rdi^^^mov     rdi, [rsp+0]^^^jmp     _dl_mcount^^^
syslog$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_40FF66^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rcx, [rsp+0D8h+var_D0]^^^mov     rdx, rsi^^^mov     esi, 0FFFFFFFFh^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    __vsyslog_chk^^^add     rsp, 0D8h^^^retn^^^
uname$$$mov     eax, 3Fh        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_L_lock_18$$$lea     rdi, lock_1^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_417886^^^
_IO_default_seek$$$mov     rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_L_lock_14$$$lea     rdi, lock_4^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_424791^^^
__strtoull_internal$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     r8, fs:[rax]^^^jmp     ____strtoull_l_internal^^^
_L_unlock_238$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_41A86F^^^
_wordcopy_fwd_aligned$$$mov     rax, rdx^^^and     eax, 7^^^jmp     ds:off_49CB70[rax*8]^^^
tcgetattr$$$mov     r8, rsi^^^lea     rdx, [rsp+var_30]^^^mov     esi, 5401h^^^movsxd  rdi, edi^^^mov     eax, 10h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_479AC4^^^test    eax, eax^^^jnz     short locret_479AC3^^^mov     edx, [rsp+var_30]^^^mov     ecx, [rsp+var_24]^^^mov     qword ptr [r8+24h], 0^^^mov     dword ptr [r8+2Ch], 0^^^mov     byte ptr [r8+30h], 0^^^mov     [r8], edx^^^mov     edx, [rsp+var_2C]^^^mov     [r8+0Ch], ecx^^^movzx   ecx, [rsp+var_20]^^^mov     [r8+4], edx^^^mov     edx, [rsp+var_28]^^^mov     [r8+10h], cl^^^mov     [r8+8], edx^^^and     edx, 100Fh^^^mov     [r8+34h], edx^^^mov     [r8+38h], edx^^^mov     rdx, [rsp+var_1F]^^^mov     [r8+11h], rdx^^^mov     rdx, [rsp+var_17]^^^mov     [r8+19h], rdx^^^movzx   edx, [rsp+var_F]^^^mov     [r8+21h], dx^^^movzx   edx, [rsp+var_D]^^^mov     [r8+23h], dl^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      eax, 0FFFFFFFFh^^^retn^^^
__gconv_get_builtin_trans$$$mov     rax, rdi^^^sub     rsp, 8^^^mov     rdx, rsi^^^mov     edi, offset aInternalUcs4^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459E80^^^mov     edi, offset aUcs4Internal^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459EF0^^^mov     edi, offset aInternalUcs4le^^^mov     ecx, 12h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F00^^^mov     edi, offset aUcs4leInternal^^^mov     ecx, 12h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F10^^^mov     edi, offset aInternalUtf8^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F20^^^mov     edi, offset aUtf8Internal^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F30^^^mov     edi, offset unk_4A0B7F^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F40^^^mov     edi, offset aInternalUcs2^^^mov     ecx, 10h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F50^^^mov     edi, offset aAsciiInternal^^^mov     ecx, 11h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F60^^^mov     edi, offset aInternalAscii^^^mov     ecx, 11h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F70^^^mov     edi, offset aUcs2reverseInt^^^mov     ecx, 17h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F80^^^mov     edi, offset aInternalUcs2re^^^mov     ecx, 17h^^^mov     rsi, rax^^^repe cmpsb^^^jz      loc_459F90^^^mov     ecx, offset __PRETTY_FUNCTION___10503^^^mov     edx, 48h^^^mov     esi, offset aGconv_builtin_^^^mov     edi, offset aCntSizeofMapSi^^^call    __assert_fail^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^shl     rcx, 5^^^mov     qword ptr [rdx+38h], 0^^^mov     qword ptr [rdx+40h], 0^^^mov     rax, ds:off_4A1088[rcx]^^^mov     qword ptr [rdx], 0^^^mov     qword ptr [rdx+8], 0^^^mov     dword ptr [rdx+58h], 0^^^mov     [rdx+28h], rax^^^lea     rax, qword_4A1090[rcx]^^^mov     rcx, ds:qword_4A1090[rcx]^^^mov     [rdx+30h], rcx^^^movsx   ecx, byte ptr [rax+8]^^^mov     [rdx+48h], ecx^^^movsx   ecx, byte ptr [rax+9]^^^mov     [rdx+4Ch], ecx^^^movsx   ecx, byte ptr [rax+0Ah]^^^movsx   eax, byte ptr [rax+0Bh]^^^mov     [rdx+50h], ecx^^^mov     [rdx+54h], eax^^^add     rsp, 8^^^retn^^^mov     ecx, 1^^^jmp     short loc_459E88^^^mov     ecx, 2^^^jmp     short loc_459E88^^^mov     ecx, 3^^^jmp     loc_459E88^^^mov     ecx, 4^^^jmp     loc_459E88^^^mov     ecx, 5^^^jmp     loc_459E88^^^mov     ecx, 6^^^jmp     loc_459E88^^^mov     ecx, 7^^^jmp     loc_459E88^^^mov     ecx, 8^^^jmp     loc_459E88^^^mov     ecx, 9^^^jmp     loc_459E88^^^mov     ecx, 0Ah^^^jmp     loc_459E88^^^mov     ecx, 0Bh^^^jmp     loc_459E88^^^
openlog$$$mov     r9d, esi^^^sub     rsp, 18h^^^mov     r8, rdi^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40FFEA^^^lock cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_1183^^^jmp     short loc_40FFF7^^^cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_1183^^^mov     esi, r9d^^^mov     rdi, r8^^^call    openlog_internal^^^xor     edi, edi^^^add     rsp, 18h^^^jmp     cancel_handler^^^
sub_40EAFE$$$and     eax, 0Fh^^^pop     rbx^^^retn^^^
_L_unlock_182$$$lea     rdi, lock_3^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_424549^^^
sub_41E3AB$$$mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_41F032^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^test    rax, rax^^^jz      loc_41E4AA^^^mov     [rbp-5C0h], rax^^^mov     byte ptr [rbp-558h], 78h^^^xor     r8d, r8d^^^mov     dword ptr [rbp-600h], 0^^^mov     dword ptr [rbp-5F8h], 1^^^mov     dword ptr [rbp-5B8h], 10h^^^jmp     loc_41C441^^^test    byte ptr [rbx+74h], 4^^^jz      short loc_41E415^^^cmp     dword ptr [rbp-5C4h], 0^^^jz      short loc_41E443^^^cmp     dword ptr [rbp-590h], 0^^^mov     edx, [r12]^^^jz      short loc_41E47B^^^cmp     edx, 30h^^^jnb     short loc_41E46B^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^movsxd  rdx, r14d^^^mov     [rax], rdx^^^jmp     loc_41C308^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, r13^^^repne scasb^^^mov     rdi, r13^^^not     rcx^^^mov     rsi, rcx^^^call    __readonly_area^^^test    eax, eax^^^mov     [rbp-5C4h], eax^^^jns     short loc_41E415^^^jmp     loc_41E0F6^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41E435^^^cmp     dword ptr [rbp-604h], 0^^^jz      loc_41E87F^^^cmp     edx, 30h^^^jnb     loc_41E86C^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14b^^^jmp     loc_41C308^^^cmp     dword ptr [rbp-5A0h], 4^^^jg      short loc_41E4BD^^^mov     dword ptr [rbp-5A0h], 5^^^mov     dword ptr [rbp-590h], 0^^^mov     qword ptr [rbp-548h], offset aNil^^^mov     edi, offset aNInWritableSeg^^^call    __libc_fatal^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E49F^^^cmp     dword ptr [rbp-5C0h], 0^^^jnz     loc_41F56C^^^cmp     edx, 30h^^^jnb     loc_41F535^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14d^^^jmp     loc_41C308^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E3C6^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E8A3^^^cmp     edx, 30h^^^jnb     short loc_41F59B^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14w^^^jmp     loc_41C308^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F57F^^^
access$$$mov     eax, 15h        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
phys_pages_info$$$push    rbp^^^mov     esi, offset aRce^^^mov     rbp, rdi^^^mov     edi, offset aProcMeminfo^^^push    rbx^^^sub     rsp, 2018h^^^mov     [rsp+2028h+var_28], 0FFFFFFFFFFFFFFFFh^^^call    fopen64^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4102B2^^^or      dword ptr [rax], 8000h^^^mov     [rsp+2028h+var_28], 0^^^nop     dword ptr [rax]^^^mov     rdx, rbx^^^mov     esi, 2000h^^^mov     rdi, rsp^^^call    fgets_unlocked^^^test    rax, rax^^^jz      short loc_4102AA^^^lea     rdx, [rsp+2028h+var_28]^^^xor     eax, eax^^^mov     rsi, rbp^^^mov     rdi, rsp^^^call    sscanf^^^cmp     eax, 1^^^jnz     short loc_410248^^^call    getpagesize^^^mov     rbp, [rsp+2028h+var_28]^^^lea     ecx, [rax+3FFh]^^^test    eax, eax^^^cmovns  ecx, eax^^^sar     ecx, 0Ah^^^mov     rdx, rbp^^^mov     rax, rbp^^^movsxd  rcx, ecx^^^sar     rdx, 3Fh^^^idiv    rcx^^^mov     [rsp+2028h+var_28], rax^^^mov     rdi, rbx^^^call    fclose^^^mov     rax, [rsp+2028h+var_28]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4102CE^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rdx], 26h^^^add     rsp, 2018h^^^pop     rbx^^^pop     rbp^^^retn^^^
setlogmask$$$test    edi, edi^^^mov     eax, cs:LogMask^^^jz      short locret_4100E0^^^mov     cs:LogMask, edi^^^rep retn^^^
_L_lock_437$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42B6AF^^^
asprintf$$$sub     rsp, 0D8h       ^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_424956^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rdx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    vasprintf^^^add     rsp, 0D8h^^^retn^^^
sub_475328$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
_Unwind_Find_FDE$$$push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^sub     rsp, 40h^^^mov     r14, cs:qword_6C1FD0^^^test    r14, r14^^^jz      short loc_49471A^^^lea     rdi, object_mutex^^^call    near ptr 0^^^mov     r13, cs:seen_objects^^^test    r13, r13^^^jnz     short loc_49473D^^^jmp     loc_4947F0^^^mov     r13, [r13+28h]^^^test    r13, r13^^^jz      loc_4947F0^^^cmp     r12, [r13+0]^^^jb      short loc_494730^^^mov     rsi, r12^^^mov     rdi, r13^^^call    search_object^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4947F0^^^test    r14, r14^^^jz      short loc_49476B^^^lea     rdi, object_mutex^^^call    near ptr 0^^^test    rbx, rbx^^^jz      loc_494877^^^mov     rax, [r13+8]^^^mov     [rbp+0], rax^^^mov     rax, [r13+10h]^^^mov     [rbp+8], rax^^^movzx   eax, word ptr [r13+20h]^^^shr     ax, 3^^^test    byte ptr [r13+20h], 4^^^movzx   eax, al^^^jnz     loc_49485B^^^movzx   r12d, al^^^lea     rdx, [r13+10h]^^^lea     rsi, [r13+8]^^^mov     edi, r12d^^^call    base_from_object_isra_3^^^lea     rdx, [rbx+8]^^^lea     rcx, [rsp+68h+var_30]^^^mov     rsi, rax^^^mov     edi, r12d^^^call    read_encoded_value_with_base_0^^^mov     rax, [rsp+68h+var_30]^^^mov     [rbp+10h], rax^^^add     rsp, 40h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^test    rbx, rbx^^^mov     [r13+28h], rax^^^mov     [rdx], r13^^^jnz     loc_49475A^^^mov     r13, cs:unseen_objects^^^test    r13, r13^^^jz      short loc_494870^^^mov     rax, [r13+28h]^^^mov     rsi, r12^^^mov     rdi, r13^^^mov     cs:unseen_objects, rax^^^call    search_object^^^mov     rbx, rax^^^mov     rax, cs:seen_objects^^^lea     rdx, seen_objects^^^test    rax, rax^^^jz      short loc_4947E0^^^mov     rcx, [r13+0]^^^cmp     rcx, [rax]^^^jbe     short loc_49483D^^^jmp     short loc_4947E0^^^cmp     rcx, [rax]^^^ja      short loc_4947E0^^^lea     rdx, [rax+28h]^^^mov     rax, [rax+28h]^^^test    rax, rax^^^jnz     short loc_494838^^^test    rbx, rbx^^^mov     [r13+28h], rax^^^mov     [rdx], r13^^^jz      short loc_4947F0^^^jmp     loc_49475A^^^movsxd  rax, dword ptr [rbx+4]^^^lea     rdi, [rbx+4]^^^sub     rdi, rax^^^call    get_cie_encoding^^^jmp     loc_49479B^^^xor     ebx, ebx^^^jmp     loc_49475A^^^lea     rdi, _Unwind_IteratePhdrCallback^^^mov     rsi, rsp^^^mov     [rsp+68h+var_68], r12^^^mov     [rsp+68h+var_60], 0^^^mov     [rsp+68h+var_58], 0^^^mov     [rsp+68h+var_50], 0^^^mov     [rsp+68h+var_48], 0^^^mov     [rsp+68h+var_40], 1^^^call    dl_iterate_phdr^^^test    eax, eax^^^js      loc_4947CC^^^mov     rbx, [rsp+68h+var_48]^^^test    rbx, rbx^^^jz      loc_4947CC^^^mov     rax, [rsp+68h+var_60]^^^mov     [rbp+0], rax^^^mov     rax, [rsp+68h+var_58]^^^mov     [rbp+8], rax^^^mov     rax, [rsp+68h+var_50]^^^mov     [rbp+10h], rax^^^jmp     loc_4947CC^^^
munmap$$$mov     eax, 0Bh        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
fde_unencoded_compare$$$mov     rcx, [rdx+8]^^^cmp     [rsi+8], rcx^^^mov     eax, 1^^^mov     rdi, [rdx+8]^^^sbb     ecx, ecx^^^cmp     [rsi+8], rdi^^^cmovbe  eax, ecx^^^retn^^^
__parse_one_specmb$$$push    r12^^^mov     r12, rsi^^^push    rbp^^^push    rbx^^^mov     rbx, rdx^^^lea     rdx, [rdi+1]^^^sub     rsp, 10h^^^movzx   r9d, byte ptr [rbx+0Ch]^^^movzx   eax, byte ptr [rbx+0Dh]^^^mov     [rsp+28h+var_20], rdx^^^mov     dword ptr [rbx+30h], 0FFFFFFFFh^^^mov     dword ptr [rbx+10h], 20h^^^and     eax, 0FFFFFFF2h^^^and     r9d, 7^^^mov     [rbx+0Ch], r9b^^^mov     [rbx+0Dh], al^^^movzx   eax, byte ptr [rdi+1]^^^movzx   r8d, al^^^sub     r8d, 30h^^^cmp     r8d, 9^^^ja      short loc_424BB8^^^lea     r11, [rdi+2]^^^mov     [rsp+28h+var_20], r11^^^movzx   esi, byte ptr [rdi+2]^^^movzx   eax, sil^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      short loc_424B9A^^^lea     rax, [rdi+3]^^^nop     dword ptr [rax+rax+00h]^^^lea     r8d, [r8+r8*4]^^^movzx   esi, sil^^^mov     [rsp+28h+var_20], rax^^^mov     r11, rax^^^lea     r8d, [rsi+r8*2-30h]^^^movzx   esi, byte ptr [rax]^^^add     rax, 1^^^movzx   r10d, sil^^^sub     r10d, 30h^^^cmp     r10d, 9^^^jbe     short loc_424B70^^^test    r8d, r8d^^^jz      short loc_424BA9^^^cmp     sil, 24h^^^jz      loc_424FA8^^^mov     [rsp+28h+var_20], rdx^^^movzx   eax, byte ptr [rdi+1]^^^nop     word ptr [rax+rax+00h]^^^sub     eax, 20h^^^cmp     al, 29h         ^^^jbe     loc_424CE0^^^and     r9d, 20h        ^^^jz      short loc_424BD0^^^mov     dword ptr [rbx+10h], 20h^^^mov     dword ptr [rbx+2Ch], 0FFFFFFFFh^^^mov     dword ptr [rbx+4], 0^^^movzx   esi, byte ptr [rdx]^^^cmp     sil, 2Ah^^^jz      loc_424E18^^^movzx   esi, sil^^^xor     ebp, ebp^^^sub     esi, 30h^^^cmp     esi, 9^^^jbe     loc_424D90^^^mov     dword ptr [rbx+28h], 0FFFFFFFFh^^^mov     dword ptr [rbx], 0FFFFFFFFh^^^cmp     byte ptr [rdx], 2Eh^^^jz      loc_424EA0^^^and     byte ptr [rbx+0Ch], 0F8h^^^and     byte ptr [rbx+0Dh], 0FDh^^^mov     rax, cs:__printf_modifier_table^^^mov     word ptr [rbx+0Eh], 0^^^test    rax, rax^^^jnz     loc_4251E5^^^movzx   ecx, byte ptr [rdx]^^^lea     rax, [rdx+1]^^^mov     [rsp+28h+var_20], rax^^^sub     ecx, 4Ch^^^cmp     cl, 2Eh         ^^^jbe     loc_424D80^^^mov     [rsp+28h+var_20], rdx^^^movzx   ecx, byte ptr [rdx]^^^nop     dword ptr [rax+00000000h]^^^cmp     cs:__printf_function_table, 0^^^movzx   edx, cl^^^mov     [rsp+28h+var_20], rax^^^mov     [rbx+8], edx^^^mov     dword ptr [rbx+40h], 0FFFFFFFFh^^^jnz     loc_425219^^^sub     edx, 41h^^^mov     qword ptr [rbx+38h], 1^^^cmp     edx, 37h        ^^^jbe     loc_424D78^^^mov     qword ptr [rbx+38h], 0^^^xor     edx, edx^^^nop     word ptr [rax+rax+00000000h]^^^cmp     dword ptr [rbx+30h], 0FFFFFFFFh^^^jz      loc_424F10^^^mov     eax, [rbx+8]^^^mov     r12, [rsp+28h+var_20]^^^test    eax, eax^^^jz      loc_424E08^^^mov     esi, 25h^^^mov     rdi, r12^^^call    strchrnul^^^mov     [rbx+18h], r12^^^mov     [rbx+20h], rax^^^add     rsp, 10h^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^retn^^^movzx   eax, al^^^jmp     ds:off_49BD90[rax*8]^^^or      byte ptr [rbx+0Dh], 8^^^nop     dword ptr [rax+00h]^^^add     rdx, 1^^^mov     [rsp+28h+var_20], rdx^^^movzx   eax, byte ptr [rdx]^^^test    al, al^^^jnz     loc_424BB8^^^jmp     loc_424BC3      ^^^mov     dword ptr [rbx+10h], 30h^^^jmp     short loc_424CF8^^^or      r9d, 20h        ^^^mov     [rbx+0Ch], r9b^^^jmp     short loc_424CF8^^^or      r9d, 40h        ^^^mov     [rbx+0Ch], r9b^^^jmp     short loc_424CF8^^^or      r9d, 0FFFFFF80h ^^^mov     [rbx+0Ch], r9b^^^jmp     short loc_424CF8^^^or      r9d, 8          ^^^mov     [rbx+0Ch], r9b^^^jmp     short loc_424CF8^^^or      r9d, 10h        ^^^mov     [rbx+0Ch], r9b^^^jmp     short loc_424CF8^^^jmp     ds:off_49BEE0[rdx*8]^^^movzx   ecx, cl^^^jmp     ds:off_49C0A0[rcx*8]^^^lea     rax, [rdx+1]^^^mov     [rsp+28h+var_20], rax^^^movzx   edi, byte ptr [rdx+1]^^^movzx   r8d, dil^^^sub     r8d, 30h^^^cmp     r8d, 9^^^ja      loc_4251DD^^^lea     rax, [rdx+2]^^^nop     dword ptr [rax+rax+00h]^^^lea     esi, [rsi+rsi*4]^^^movzx   edi, dil^^^mov     [rsp+28h+var_20], rax^^^mov     rdx, rax^^^lea     esi, [rdi+rsi*2-30h]^^^movzx   edi, byte ptr [rax]^^^add     rax, 1^^^movzx   r8d, dil^^^sub     r8d, 30h^^^cmp     r8d, 9^^^jbe     short loc_424DB8^^^mov     [rbx+4], esi^^^xor     ebp, ebp^^^jmp     loc_424BFD^^^or      byte ptr [rbx+0Ch], 4^^^lea     rax, [rdx+2]^^^movzx   ecx, byte ptr [rdx+1]^^^jmp     loc_424C58^^^sub     r12, 1^^^mov     rax, r12^^^jmp     loc_424CC7^^^lea     r8, [rdx+1]^^^mov     [rsp+28h+var_20], r8^^^movzx   esi, byte ptr [rdx+1]^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_424E80^^^lea     rax, [rdx+2]^^^mov     [rsp+28h+var_20], rax^^^movzx   edx, byte ptr [rdx+2]^^^movzx   edi, dl^^^sub     edi, 30h^^^cmp     edi, 9^^^ja      short loc_424E69^^^nop     dword ptr [rax]^^^lea     esi, [rsi+rsi*4]^^^add     rax, 1^^^movzx   edx, dl^^^mov     [rsp+28h+var_20], rax^^^lea     esi, [rdx+rsi*2-30h]^^^movzx   edx, byte ptr [rax]^^^movzx   edi, dl^^^sub     edi, 30h^^^cmp     edi, 9^^^jbe     short loc_424E48^^^test    esi, esi^^^jz      short loc_424E80^^^cmp     dl, 24h^^^jz      loc_425198^^^nop     word ptr [rax+rax+00000000h]^^^mov     [rbx+2Ch], r12d^^^mov     [rsp+28h+var_20], r8^^^add     r12, 1^^^mov     rdx, r8^^^mov     ebp, 1^^^jmp     loc_424BFD^^^lea     rsi, [rdx+1]^^^mov     [rsp+28h+var_20], rsi^^^movzx   eax, byte ptr [rdx+1]^^^cmp     al, 2Ah^^^jz      loc_4250A8^^^movzx   eax, al^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      short loc_424F28^^^lea     rsi, [rdx+2]^^^mov     [rsp+28h+var_20], rsi^^^movzx   ecx, byte ptr [rdx+2]^^^mov     rdx, rsi^^^movzx   edi, cl^^^sub     edi, 30h^^^cmp     edi, 9^^^ja      short loc_424F01^^^nop     dword ptr [rax+rax+00h]^^^lea     eax, [rax+rax*4]^^^add     rdx, 1^^^movzx   ecx, cl^^^mov     [rsp+28h+var_20], rdx^^^lea     eax, [rcx+rax*2-30h]^^^movzx   ecx, byte ptr [rdx]^^^movzx   esi, cl^^^sub     esi, 30h^^^cmp     esi, 9^^^jbe     short loc_424EE0^^^mov     [rbx], eax^^^jmp     loc_424C13^^^test    rdx, rdx^^^jz      loc_424CAA^^^mov     [rbx+30h], r12d^^^add     rbp, rdx^^^jmp     loc_424CAA^^^mov     dword ptr [rbx], 0^^^mov     rdx, rsi^^^jmp     loc_424C13^^^movzx   r9d, byte ptr [rbx+0Ch]^^^lea     rax, [rdx+2]^^^or      r9d, 4^^^mov     [rbx+0Ch], r9b^^^movzx   ecx, byte ptr [rdx+1]^^^cmp     cl, 6Ch^^^jnz     loc_424C58^^^mov     [rsp+28h+var_20], rax^^^jmp     short loc_424F8D^^^cmp     byte ptr [rdx+1], 68h^^^jz      loc_4251C3^^^or      byte ptr [rbx+0Ch], 2^^^lea     rax, [rdx+2]^^^movzx   ecx, byte ptr [rdx+1]^^^jmp     loc_424C58^^^movzx   r9d, byte ptr [rbx+0Ch]^^^or      r9d, 1^^^mov     [rbx+0Ch], r9b^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^jmp     loc_424C58^^^lea     eax, [r8-1]^^^lea     rdx, [r11+1]^^^mov     [rbx+30h], eax^^^mov     rax, [rcx]^^^mov     [rsp+28h+var_20], rdx^^^cmp     r8, rax^^^cmovnb  rax, r8^^^mov     [rcx], rax^^^movzx   eax, byte ptr [r11+1]^^^movzx   r9d, byte ptr [rbx+0Ch]^^^jmp     loc_424BB8^^^mov     dword ptr [rbx+34h], 1^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 2^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 4^^^mov     edx, 1^^^jmp     loc_424CA0^^^test    byte ptr [rbx+0Ch], 1^^^jz      loc_425150^^^mov     dword ptr [rbx+34h], 107h^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 800h^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 3^^^mov     edx, 1^^^jmp     loc_424CA0^^^movzx   eax, byte ptr [rbx+0Ch]^^^test    al, 4^^^jz      loc_425168^^^mov     dword ptr [rbx+34h], 200h^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 5^^^mov     edx, 1^^^jmp     loc_424CA0^^^lea     r8, [rdx+2]^^^mov     [rsp+28h+var_20], r8^^^movzx   esi, byte ptr [rdx+2]^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_425130^^^lea     rax, [rdx+3]^^^mov     [rsp+28h+var_20], rax^^^movzx   edx, byte ptr [rdx+3]^^^movzx   edi, dl^^^sub     edi, 30h^^^cmp     edi, 9^^^ja      short loc_4250F9^^^nop     dword ptr [rax]^^^lea     esi, [rsi+rsi*4]^^^add     rax, 1^^^movzx   edx, dl^^^mov     [rsp+28h+var_20], rax^^^lea     esi, [rdx+rsi*2-30h]^^^movzx   edx, byte ptr [rax]^^^movzx   edi, dl^^^sub     edi, 30h^^^cmp     edi, 9^^^jbe     short loc_4250D8^^^test    esi, esi^^^jz      short loc_425130^^^cmp     dl, 24h^^^jnz     short loc_425130^^^mov     rdx, [rcx]^^^lea     edi, [rsi-1]^^^mov     [rbx+28h], edi^^^cmp     rsi, rdx^^^cmovnb  rdx, rsi^^^test    edi, edi^^^mov     [rcx], rdx^^^lea     rdx, [rax+1]^^^mov     [rsp+28h+var_20], rdx^^^jns     loc_424C13^^^nop     word ptr [rax+rax+00000000h]^^^mov     [rbx+28h], r12d^^^add     rbp, 1^^^add     r12, 1^^^mov     [rsp+28h+var_20], r8^^^mov     rdx, r8^^^jmp     loc_424C13^^^mov     dword ptr [rbx+34h], 7^^^mov     edx, 1^^^jmp     loc_424CA0^^^test    al, 2^^^jnz     short loc_425187^^^test    byte ptr [rbx+0Dh], 2^^^jnz     loc_424FD8      ^^^mov     dword ptr [rbx+34h], 0^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     dword ptr [rbx+34h], 400h^^^mov     edx, 1^^^jmp     loc_424CA0^^^mov     rdx, [rcx]^^^lea     edi, [rsi-1]^^^mov     [rbx+2Ch], edi^^^cmp     rsi, rdx^^^cmovnb  rdx, rsi^^^test    edi, edi^^^mov     [rcx], rdx^^^lea     rdx, [rax+1]^^^mov     [rsp+28h+var_20], rdx^^^js      loc_424E80^^^xor     ebp, ebp^^^jmp     loc_424BFD^^^lea     rax, [rdx+2]^^^or      byte ptr [rbx+0Dh], 2^^^mov     [rsp+28h+var_20], rax^^^lea     rax, [rdx+3]^^^movzx   ecx, byte ptr [rdx+2]^^^jmp     loc_424C58^^^mov     rdx, rax^^^jmp     loc_424DE0^^^movzx   ecx, byte ptr [rdx]^^^cmp     qword ptr [rax+rcx*8], 0^^^jz      loc_424C31^^^lea     rdi, [rsp+28h+var_20]^^^mov     rsi, rbx^^^call    __handle_registered_modifier_mb^^^test    eax, eax^^^mov     rdx, [rsp+28h+var_20]^^^jnz     loc_424C31^^^movzx   ecx, byte ptr [rdx]^^^lea     rax, [rdx+1]^^^jmp     loc_424C58^^^mov     rax, cs:__printf_arginfo_table^^^movsxd  rcx, edx^^^mov     rax, [rax+rcx*8]^^^test    rax, rax^^^jz      loc_424C78^^^lea     rdx, [rbx+34h]^^^lea     rcx, [rbx+40h]^^^mov     esi, 1^^^mov     rdi, rbx^^^call    rax^^^movsxd  rdx, eax^^^test    eax, eax^^^mov     [rbx+38h], rdx^^^jns     loc_424CA0^^^mov     edx, [rbx+8]^^^jmp     loc_424C78^^^
_Unwind_GetRegionStart$$$mov     rax, [rdi+0B8h]^^^retn^^^
_L_lock_532$$$lea     rdi, lock_0^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_415745^^^
_Unwind_GetTextRelBase$$$mov     rax, [rdi+0A8h]^^^retn^^^
_L_unlock_4570$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42AFB0^^^
_dl_allocate_tls_init$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^test    rdi, rdi^^^mov     [rsp+58h+var_40], rdi^^^jz      loc_4564E8^^^mov     rax, [rdi+8]^^^mov     rsi, cs:_dl_tls_dtv_slotinfo_list^^^xor     r12d, r12d^^^mov     rcx, cs:_dl_tls_max_dtv_idx^^^xor     r15d, r15d^^^mov     [rsp+58h+var_48], rax^^^mov     [rsp+58h+var_50], rsi^^^mov     rax, rsi^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, [rax]^^^xor     ebx, ebx^^^test    r15, r15^^^setz    bl^^^cmp     rbx, rdx^^^jnb     loc_4564A8^^^lea     rax, [rbx+r15]^^^cmp     rcx, rax^^^jb      loc_4564E0^^^lea     rax, [rbx+1]^^^mov     rsi, [rsp+58h+var_50]^^^shl     rax, 4^^^lea     rbp, [rsi+rax+8]^^^jmp     loc_456450^^^cmp     [rax+448h], rbx^^^jnz     loc_4564FC^^^mov     r14, [rax+428h]^^^mov     r13, [rax+420h]^^^cmp     r14, r13^^^jb      loc_456515^^^cmp     rdx, r14^^^jb      loc_45652E^^^mov     rdi, [rsp+58h+var_40]^^^sub     rdi, rdx^^^mov     rdx, rbx^^^shl     rdx, 4^^^add     rdx, [rsp+58h+var_48]^^^mov     [rdx], rdi^^^mov     byte ptr [rdx+8], 1^^^mov     rdx, r13^^^mov     rsi, [rax+418h]^^^call    mempcpy^^^mov     rdx, r14^^^xor     esi, esi^^^mov     rdi, rax^^^sub     rdx, r13^^^call    sub_400390^^^mov     rsi, [rsp+58h+var_50]^^^mov     rcx, cs:_dl_tls_max_dtv_idx^^^mov     rdx, [rsi]^^^add     rbx, 1^^^cmp     rbx, rdx^^^jnb     short loc_4564A8^^^lea     rax, [rbx+r15]^^^add     rbp, 10h^^^cmp     rax, rcx^^^ja      loc_4564E0^^^mov     rax, [rbp+0]^^^test    rax, rax^^^jz      short loc_456436^^^mov     rdx, [rbp-8]^^^cmp     r12, rdx^^^cmovb   r12, rdx^^^mov     rdx, [rax+440h]^^^cmp     rdx, 1^^^ja      loc_4563C0^^^mov     rax, [rax+448h]^^^add     rbx, 1^^^shl     rax, 4^^^add     rax, [rsp+58h+var_48]^^^mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh^^^mov     byte ptr [rax+8], 0^^^mov     rax, [rsp+58h+var_50]^^^mov     rcx, cs:_dl_tls_max_dtv_idx^^^mov     rdx, [rax]^^^cmp     rbx, rdx^^^jb      short loc_45643F^^^add     r15, rbx^^^cmp     r15, rcx^^^jnb     short loc_4564E0^^^mov     rax, [rsp+58h+var_50]^^^mov     rax, [rax+8]^^^test    rax, rax^^^mov     [rsp+58h+var_50], rax^^^jnz     loc_456388^^^mov     ecx, offset __PRETTY_FUNCTION___11191^^^mov     edx, 1BFh^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aListpVoid0^^^call    __assert_fail^^^mov     rsi, [rsp+58h+var_48]^^^mov     [rsi], r12^^^mov     rax, [rsp+58h+var_40]^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___11191^^^mov     edx, 1A7h^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aMapL_tls_mod_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11191^^^mov     edx, 1A8h^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aMapL_tls_block^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11191^^^mov     edx, 1AAh^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aSize_tMapL_tls^^^call    __assert_fail^^^
localtime_r$$$mov     rdx, rsi^^^mov     esi, 1^^^jmp     __tz_convert^^^
__deregister_frame_info$$$jmp     __deregister_frame_info_bases^^^
_nl_cleanup_time$$$push    rbx^^^mov     rbx, [rdi+28h]^^^test    rbx, rbx^^^jz      short loc_44BD60^^^mov     qword ptr [rdi+28h], 0^^^mov     qword ptr [rdi+20h], 0^^^mov     rdi, [rbx]^^^call    free^^^mov     rdi, [rbx+18h]^^^call    free^^^mov     rdi, [rbx+20h]^^^call    free^^^mov     rdi, rbx^^^pop     rbx^^^jmp     free^^^pop     rbx^^^retn^^^
open_verify.isra.4$$$push    rbp^^^xor     eax, eax^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^mov     r13, rdx^^^push    r12^^^mov     r12, rsi^^^mov     esi, 80000h^^^push    rbx^^^sub     rsp, 38h^^^mov     [rbp+var_40], rdi^^^mov     [rbp+var_41], cl^^^call    open64^^^cmp     eax, 0FFFFFFFFh^^^mov     ebx, eax^^^jz      loc_44FF58^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^lea     r15, [r12+8]^^^mov     edx, 340h^^^mov     edi, ebx^^^mov     rsi, r15^^^mov     dword ptr fs:[rax], 0^^^call    read^^^cmp     rax, 3Fh^^^mov     r14, rax^^^mov     [r12], rax^^^jle     loc_450080^^^mov     edx, 8^^^mov     esi, offset expected_11238^^^mov     rdi, r15^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_450061^^^movzx   eax, byte ptr [r12+10h]^^^test    al, al^^^jnz     loc_44FF69^^^lea     rdi, [r12+11h]^^^mov     edx, 7^^^mov     esi, offset unk_49FC99^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_44FF79^^^cmp     dword ptr [r12+1Ch], 1^^^jnz     loc_45015F^^^cmp     word ptr [r12+1Ah], 3Eh^^^jnz     loc_44FF99^^^movzx   eax, word ptr [r12+18h]^^^cmp     ax, 3^^^jnz     loc_450147^^^cmp     word ptr [r12+3Eh], 38h^^^jnz     loc_450123^^^movzx   edx, word ptr [r12+40h]^^^mov     rsi, [r12+28h]^^^lea     rax, ds:0[rdx*8]^^^mov     r13, rdx^^^shl     r13, 6^^^sub     r13, rax^^^lea     rax, [r13+rsi+0]^^^cmp     rax, r14^^^ja      loc_450010^^^lea     rsi, [r12+rsi+8]^^^mov     [rbp+var_38], rsi^^^add     r13, [rbp+var_38]^^^cmp     [rbp+var_38], r13^^^jnb     loc_44FF58^^^mov     r13, [rbp+var_38]^^^jmp     short loc_44FE93^^^lea     rcx, ds:0[rdx*8]^^^mov     rax, rdx^^^add     r13, 38h^^^shl     rax, 6^^^sub     rax, rcx^^^add     rax, [rbp+var_38]^^^cmp     r13, rax^^^jnb     loc_44FF58^^^cmp     dword ptr [r13+0], 4^^^jnz     short loc_44FE70^^^mov     r15, [r13+20h]^^^cmp     r15, 1Fh^^^jbe     short loc_44FE70^^^cmp     qword ptr [r13+30h], 3^^^jbe     short loc_44FE70^^^mov     rsi, [r13+8]^^^lea     rax, [rsi+r15]^^^cmp     rax, [r12]^^^lea     r14, [r12+rsi+8]^^^jbe     short loc_44FEF7^^^jmp     loc_44FFC3^^^mov     edx, [r14]^^^mov     eax, [r14+4]^^^add     rdx, 3^^^add     rax, 3^^^and     rdx, 0FFFFFFFFFFFFFFFCh^^^and     rax, 0FFFFFFFFFFFFFFFCh^^^lea     rax, [rdx+rax+0Ch]^^^lea     rdx, [r15-20h]^^^cmp     rax, rdx^^^ja      loc_44FFB8^^^sub     r15, rax^^^add     r14, rax^^^mov     edx, 10h^^^mov     esi, offset expected_note_11244^^^mov     rdi, r14^^^call    sub_400370^^^test    eax, eax^^^jnz     short loc_44FEC8^^^test    r15, r15^^^jz      loc_44FFB8^^^mov     edi, [r14+10h]^^^mov     ecx, [r14+14h]^^^mov     edx, [r14+18h]^^^mov     esi, [r14+1Ch]^^^test    edi, edi^^^jnz     short loc_44FF99^^^mov     eax, cs:_dl_osversion^^^test    eax, eax^^^jz      short loc_44FF58^^^and     ecx, 0FFh^^^and     edx, 0FFh^^^and     esi, 0FFh^^^shl     ecx, 8^^^add     edx, ecx^^^shl     edx, 8^^^add     edx, esi^^^cmp     edx, eax^^^ja      short loc_44FF99^^^nop     dword ptr [rax+00h]^^^lea     rsp, [rbp-28h]^^^mov     eax, ebx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     byte ptr [r12+0Fh], 3^^^jnz     short loc_44FF79^^^cmp     al, 2^^^jbe     loc_44FDD0^^^cmp     dword ptr [r12+8], 464C457Fh^^^jnz     loc_4500C1^^^cmp     byte ptr [r12+0Ch], 2^^^jz      loc_45010D^^^mov     byte ptr [r13+0], 1^^^mov     edi, ebx^^^mov     ebx, 0FFFFFFFFh^^^call    close^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 2^^^jmp     short loc_44FF58^^^movzx   edx, word ptr [r12+40h]^^^jmp     loc_44FE70^^^lea     rax, [r15+1Eh]^^^xor     edx, edx^^^mov     edi, ebx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+60h+var_49]^^^call    lseek64^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, r15^^^mov     edi, ebx^^^mov     rsi, r14^^^call    read^^^cmp     r15, rax^^^jz      loc_44FEF7^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, offset aCannotReadFile^^^mov     r13d, fs:[rax]^^^jmp     loc_45009D^^^lea     rax, [r13+1Eh]^^^xor     edx, edx^^^mov     edi, ebx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+60h+var_49]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_38], rax^^^call    lseek64^^^mov     rsi, [rbp+var_38]^^^mov     rdx, r13^^^mov     edi, ebx^^^call    read^^^cmp     r13, rax^^^jnz     short loc_44FFF6^^^movzx   edx, word ptr [r12+40h]^^^lea     rax, ds:0[rdx*8]^^^mov     r13, rdx^^^shl     r13, 6^^^sub     r13, rax^^^jmp     loc_44FE56^^^mov     edx, 8^^^mov     esi, offset expected2_11237^^^mov     rdi, r15^^^call    sub_400370^^^test    eax, eax^^^jz      loc_44FDC2^^^jmp     loc_44FF79^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, offset aFileTooShort^^^mov     r13d, fs:[rax]^^^mov     eax, offset aCannotReadFile^^^test    r13d, r13d^^^cmovnz  r12, rax^^^cmp     [rbp+var_41], 0^^^jnz     short loc_4500CC^^^mov     rdx, [rbp+var_40]^^^mov     [rsp+60h+var_60], 0^^^mov     r9, r12^^^xor     r8d, r8d^^^xor     ecx, ecx^^^mov     esi, ebx^^^mov     edi, r13d^^^call    lose^^^xor     r13d, r13d^^^mov     r12d, offset aInvalidElfHead^^^jmp     short loc_45009D^^^mov     rdi, [rbp+var_40]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rsi, [rbp+var_40]^^^repne scasb^^^not     rcx^^^lea     rax, [rcx+1Eh]^^^mov     rdx, rcx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+60h+var_49]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     rdi, [rbp+var_40]^^^mov     r14, rax^^^call    free^^^mov     [rbp+var_40], r14^^^jmp     short loc_4500A3^^^cmp     byte ptr [r12+0Dh], 1^^^jz      short loc_450131^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileDataEnc^^^jmp     loc_45009D^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileSPhents^^^jmp     loc_45009D^^^cmp     byte ptr [r12+0Eh], 1^^^jz      short loc_45016D^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileVersion^^^jmp     loc_45009D^^^cmp     ax, 2^^^jz      loc_44FE15^^^xor     r13d, r13d^^^mov     r12d, offset aOnlyEt_dynAndE^^^jmp     loc_45009D^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileVersi_0^^^jmp     loc_45009D^^^movzx   eax, byte ptr [r12+0Fh]^^^cmp     al, 3^^^setnz   dl^^^jz      short loc_45017E^^^test    al, al^^^jnz     short loc_45019A^^^movzx   eax, byte ptr [r12+10h]^^^test    al, al^^^jz      short loc_4501AC^^^test    dl, dl^^^jz      short loc_4501A8^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileAbiVers^^^jmp     loc_45009D^^^xor     r13d, r13d^^^mov     r12d, offset aElfFileOsAbiIn^^^jmp     loc_45009D^^^cmp     al, 2^^^ja      short loc_45018C^^^lea     rdi, [r12+11h]^^^mov     edx, 7^^^mov     esi, offset unk_49FC99^^^xor     r13d, r13d^^^mov     r12d, offset aNonzeroPadding^^^call    sub_400370^^^test    eax, eax^^^mov     eax, offset aInternalError^^^cmovz   r12, rax^^^jmp     loc_45009D^^^
__internal_atexit$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^mov     rdi, rcx^^^sub     rsp, 18h^^^mov     rbp, rsi^^^mov     r12, rdx^^^call    __new_exitfn^^^test    rax, rax^^^jz      short loc_401FCE^^^xor     rbx, fs:30h^^^rol     rbx, 11h^^^mov     [rax+10h], rbp^^^mov     [rax+8], rbx^^^mov     [rax+18h], r12^^^mov     qword ptr [rax], 4^^^xor     eax, eax^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_401FBB^^^
__gconv_lookup_cache$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     rdi, rsi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 88h^^^mov     r13, cs:gconv_cache^^^mov     rbp, rdx^^^mov     r12, rcx^^^mov     r15d, r8d^^^mov     r14d, 2^^^test    r13, r13^^^jz      short loc_4604E0^^^movzx   edx, word ptr [r13+4]^^^lea     rsi, [rsp+88h+var_58]^^^mov     r14b, 1^^^mov     word ptr [rsp+88h+var_68], dx^^^movzx   edx, word ptr [r13+0Ah]^^^mov     word ptr [rsp+88h+var_60], dx^^^call    find_module_idx^^^test    eax, eax^^^jnz     short loc_4604E0^^^mov     rdx, [rsp+88h+var_58]^^^movzx   eax, word ptr [r13+0Ah]^^^lea     rcx, [rdx+rdx*2+3]^^^lea     rax, [rax+rcx*4]^^^cmp     rax, cs:cache_size^^^jbe     short loc_460510^^^nop     word ptr [rax+rax+00000000h]^^^mov     eax, r14d^^^mov     rbx, [rsp+88h+var_30]^^^mov     rbp, [rsp+88h+var_28]^^^mov     r12, [rsp+88h+var_20]^^^mov     r13, [rsp+88h+var_18]^^^mov     r14, [rsp+88h+var_10]^^^mov     r15, [rsp+88h+var_8]^^^add     rsp, 88h^^^retn^^^lea     rsi, [rsp+88h+var_48]^^^mov     rdi, rbx^^^mov     [rsp+88h+var_78], rdx^^^call    find_module_idx^^^test    eax, eax^^^mov     rdx, [rsp+88h+var_78]^^^jnz     short loc_4604E0^^^mov     rbx, [rsp+88h+var_48]^^^movzx   eax, word ptr [r13+0Ah]^^^lea     rcx, [rbx+rbx*2+3]^^^lea     rax, [rax+rcx*4]^^^cmp     rax, cs:cache_size^^^ja      short loc_4604E0^^^and     r15d, 1^^^jnz     loc_46075C^^^movzx   eax, word ptr [rsp+88h+var_68]^^^movzx   r15d, word ptr [rsp+88h+var_60]^^^mov     rsi, [rsp+88h+var_58]^^^add     rax, r13^^^add     r15, r13^^^test    rsi, rsi^^^mov     [rsp+88h+var_68], rax^^^lea     rax, [rdx+rdx*2]^^^mov     rdx, rbx^^^lea     rcx, [r15+rax*4]^^^jz      short loc_46059E^^^test    rbx, rbx^^^jz      short loc_46058E^^^movzx   eax, word ptr [rcx+0Ah]^^^test    ax, ax^^^jnz     loc_460770^^^cmp     word ptr [rcx+4], 0^^^jz      loc_460725^^^mov     rdx, [rsp+88h+var_48]^^^lea     rax, [rbx+rbx*2]^^^test    rdx, rdx^^^lea     r13, [r15+rax*4]^^^jz      short loc_4605B7^^^cmp     word ptr [r13+8], 0^^^jz      loc_460725^^^test    rsi, rsi^^^jnz     short loc_4605CB^^^test    rdx, rdx^^^mov     r14d, 1^^^jz      loc_4604E0^^^mov     edi, 0D0h^^^mov     [rsp+88h+var_78], rdx^^^mov     [rsp+88h+var_80], rcx^^^mov     [rsp+88h+var_70], rsi^^^mov     r14d, 3^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rdx, [rsp+88h+var_78]^^^mov     rcx, [rsp+88h+var_80]^^^mov     rsi, [rsp+88h+var_70]^^^jz      loc_4604E0^^^mov     [rbp+0], rax^^^xor     ebp, ebp^^^test    rsi, rsi^^^mov     qword ptr [r12], 0^^^jz      short loc_46067A^^^movzx   eax, word ptr [rcx]^^^movzx   edi, word ptr [rcx+6]^^^add     rax, [rsp+88h+var_68]^^^add     rdi, [rsp+88h+var_68]^^^mov     qword ptr [rbx+20h], offset aInternal^^^mov     dword ptr [rbx+10h], 1^^^mov     qword ptr [rbx+60h], 0^^^mov     [rbx+18h], rax^^^cmp     byte ptr [rdi], 0^^^jz      loc_4606FD^^^movzx   esi, word ptr [rcx+8]^^^mov     rdx, rbx^^^add     rsi, [rsp+88h+var_68]^^^call    find_module^^^test    eax, eax^^^mov     r14d, eax^^^jnz     loc_460713^^^mov     rbp, [r12]^^^mov     rdx, [rsp+88h+var_48]^^^add     rbp, 1^^^mov     [r12], rbp^^^xor     r14d, r14d^^^test    rdx, rdx^^^jz      loc_4604E0^^^movsxd  rax, ebp^^^movzx   edi, word ptr [r13+2]^^^lea     rdx, [rax+rax*2]^^^add     rdi, [rsp+88h+var_68]^^^lea     rax, [rax+rdx*4]^^^lea     rdx, [rbx+rax*8]^^^movzx   eax, word ptr [r13+0]^^^add     rax, [rsp+88h+var_68]^^^mov     qword ptr [rdx+18h], offset aInternal^^^mov     dword ptr [rdx+10h], 1^^^mov     qword ptr [rdx+60h], 0^^^mov     [rdx+20h], rax^^^cmp     byte ptr [rdi], 0^^^jz      short loc_4606E9^^^movzx   esi, word ptr [r13+4]^^^add     rsi, [rsp+88h+var_68]^^^call    find_module^^^test    eax, eax^^^jnz     short loc_460730^^^add     qword ptr [r12], 1^^^xor     r14d, r14d^^^jmp     loc_4604E0^^^movzx   edi, word ptr [r13+4]^^^mov     rsi, rdx^^^add     rdi, [rsp+88h+var_68]^^^call    __gconv_get_builtin_trans^^^jmp     short loc_4606DC^^^movzx   edi, word ptr [rcx+8]^^^mov     rsi, rbx^^^add     rdi, [rsp+88h+var_68]^^^call    __gconv_get_builtin_trans^^^jmp     loc_460669^^^mov     rdi, rbx^^^call    free^^^nop     dword ptr [rax+rax+00h]^^^jmp     loc_4604E0^^^mov     r14d, 1^^^jmp     loc_4604E0^^^test    ebp, ebp^^^jz      short loc_460744^^^mov     rdi, rbx^^^mov     dword ptr [rsp+88h+var_70], eax^^^call    __gconv_release_step^^^mov     eax, dword ptr [rsp+88h+var_70]^^^mov     rdi, rbx^^^mov     dword ptr [rsp+88h+var_70], eax^^^call    free^^^mov     eax, dword ptr [rsp+88h+var_70]^^^mov     r14d, eax^^^jmp     loc_4604E0^^^or      r14d, 0FFFFFFFFh^^^cmp     rbx, [rsp+88h+var_58]^^^jnz     loc_460551^^^jmp     loc_4604E0^^^movzx   edx, word ptr [r13+0Ch]^^^movzx   eax, ax^^^lea     r13, [rdx+rax-1]^^^add     r13, cs:gconv_cache^^^movzx   eax, word ptr [r13+0]^^^test    ax, ax^^^jz      loc_46058E^^^movzx   edx, ax^^^sub     edx, 1^^^movsxd  rdx, edx^^^imul    rdx, 6^^^movzx   edx, word ptr [r13+rdx+2]^^^cmp     rbx, rdx^^^jz      short loc_4607B8^^^movzx   eax, ax^^^imul    rax, 6^^^lea     r13, [r13+rax+2]^^^jmp     short loc_460784^^^movzx   eax, ax^^^mov     [rsp+88h+var_80], rcx^^^mov     r14d, 3^^^imul    rdi, rax, 68h^^^mov     [r12], rax^^^call    malloc^^^test    rax, rax^^^mov     r8, rax^^^mov     [rbp+0], rax^^^mov     rcx, [rsp+88h+var_80]^^^jz      loc_4604E0^^^movzx   eax, word ptr [rcx]^^^mov     r14, r8^^^xor     r9d, r9d^^^add     rax, [rsp+88h+var_68]^^^mov     [rsp+88h+var_60], rax^^^mov     rax, [rsp+88h+var_60]^^^mov     [r14+18h], rax^^^movsxd  rax, r9d^^^imul    rax, 6^^^add     rax, r13^^^movzx   edx, word ptr [rax+2]^^^movzx   edi, word ptr [rax+4]^^^add     rdi, [rsp+88h+var_68]^^^imul    rdx, 0Ch^^^movzx   edx, word ptr [r15+rdx]^^^mov     dword ptr [r14+10h], 1^^^add     rdx, [rsp+88h+var_68]^^^mov     qword ptr [r14+60h], 0^^^mov     [r14+20h], rdx^^^cmp     byte ptr [rdi], 0^^^mov     [rsp+88h+var_60], rdx^^^jz      short loc_460895^^^movzx   esi, word ptr [rax+6]^^^mov     rdx, r14^^^mov     [rsp+88h+var_80], rcx^^^add     rsi, [rsp+88h+var_68]^^^mov     [rsp+88h+var_78], r8^^^mov     dword ptr [rsp+88h+var_70], r9d^^^call    find_module^^^test    eax, eax^^^mov     rcx, [rsp+88h+var_80]^^^mov     r8, [rsp+88h+var_78]^^^mov     r9d, dword ptr [rsp+88h+var_70]^^^jnz     short loc_4608C6^^^movzx   eax, word ptr [r13+0]^^^add     r9d, 1^^^add     r14, 68h^^^cmp     r9d, eax^^^jl      loc_4607FB^^^jmp     loc_4606E1^^^movzx   edi, word ptr [rax+6]^^^mov     rsi, r14^^^mov     [rsp+88h+var_80], rcx^^^add     rdi, [rsp+88h+var_68]^^^mov     [rsp+88h+var_78], r8^^^mov     dword ptr [rsp+88h+var_70], r9d^^^call    __gconv_get_builtin_trans^^^mov     r9d, dword ptr [rsp+88h+var_70]^^^mov     r8, [rsp+88h+var_78]^^^mov     rcx, [rsp+88h+var_80]^^^jmp     short loc_46087A^^^mov     rdi, r8^^^call    free^^^mov     rsi, [rsp+88h+var_58]^^^mov     rcx, [rsp+88h+var_80]^^^test    rsi, rsi^^^jnz     loc_46058E^^^jmp     loc_460599^^^
open_memstream$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbp, rsi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_8], r14^^^mov     r12, rdi^^^mov     [rsp+var_10], r13^^^mov     edi, 258h^^^sub     rsp, 28h^^^call    malloc^^^xor     r14d, r14d^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_42641F^^^lea     rax, [rax+100h]^^^mov     esi, 2000h^^^mov     edi, 1^^^mov     [rbx+88h], rax^^^call    calloc^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_42641F^^^xor     esi, esi^^^mov     rdi, rbx^^^mov     r14, rbx^^^call    _IO_init^^^mov     rcx, r13^^^mov     edx, 2000h^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     qword ptr [rbx+0D8h], offset _IO_mem_jumps^^^call    _IO_str_init_static_internal^^^and     dword ptr [rbx], 0FFFFFFFEh^^^mov     qword ptr [rbx+0E0h], offset malloc^^^mov     qword ptr [rbx+0E8h], offset free^^^mov     [rbx+0F0h], r12^^^mov     [rbx+0F8h], rbp^^^mov     rax, r14^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^
sub_40EAF7$$$mov     eax, 8^^^pop     rbx^^^retn^^^
_dl_allocate_tls_storage$$$push    r12^^^mov     rdi, cs:_dl_tls_static_align^^^push    rbp^^^push    rbx^^^mov     rbx, cs:_dl_tls_static_size^^^mov     rsi, rbx^^^call    memalign^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_456332^^^lea     rbx, [rax+rbx-900h]^^^mov     edx, 900h^^^test    bl, 1^^^mov     rdi, rbx^^^jnz     loc_4562F0^^^test    dil, 2^^^jnz     loc_456308^^^test    dil, 4^^^jnz     loc_456320^^^mov     ecx, edx^^^xor     eax, eax^^^shr     ecx, 3^^^test    dl, 4^^^rep stosq^^^jnz     short loc_4562C0^^^test    dl, 2^^^jnz     short loc_4562A8^^^and     edx, 1^^^jnz     short loc_4562A0^^^mov     r12, cs:_dl_tls_max_dtv_idx^^^mov     esi, 10h^^^lea     rdi, [r12+10h]^^^call    calloc^^^test    rax, rax^^^jz      short loc_4562D8^^^add     r12, 0Eh^^^mov     [rax], r12^^^add     rax, 10h^^^mov     [rbx+8], rax^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     byte ptr [rdi], 0^^^jmp     short loc_45626C^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^and     edx, 1^^^jz      short loc_45626C^^^jmp     short loc_4562A0^^^mov     dword ptr [rdi], 0^^^add     rdi, 4^^^test    dl, 2^^^jz      short loc_456267^^^jmp     short loc_4562A8^^^mov     rdi, rbp^^^xor     ebx, ebx^^^call    free^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^lea     rdi, [rbx+1]^^^mov     byte ptr [rbx], 0^^^mov     dx, 8FFh^^^test    dil, 2^^^jz      loc_456249^^^nop     dword ptr [rax]^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^sub     edx, 2^^^test    dil, 4^^^jz      loc_456253^^^xchg    ax, ax^^^mov     dword ptr [rdi], 0^^^sub     edx, 4^^^add     rdi, 4^^^jmp     loc_456253^^^xor     ebx, ebx^^^jmp     loc_456296^^^
sub_40EAF0$$$mov     eax, 60h^^^pop     rbx^^^retn^^^
_L_lock_20$$$lea     rdi, [rbx+4]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_44C000^^^
sub_41B7DE$$$mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41B879^^^movsx   eax, dil^^^mov     dword ptr [rbp-5F4h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^mov     [rbp-560h], rdx^^^jmp     rax^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41B88A^^^movsx   eax, dil^^^mov     dword ptr [rbp-5D8h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     short loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-5F4h], 1^^^jmp     short loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-5D8h], 1^^^jmp     short loc_41B826^^^
_L_unlock_1272$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4190E0^^^
malloc_trim$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 38h^^^mov     eax, cs:__libc_malloc_initialized^^^mov     [rsp+68h+var_40], rdi^^^test    eax, eax^^^js      loc_409103^^^mov     [rsp+68h+var_50], offset main_arena^^^mov     [rsp+68h+var_44], 0^^^mov     esi, 1^^^xor     eax, eax^^^mov     rdx, [rsp+68h+var_50]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408E53^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_13666^^^jmp     short loc_408E5C^^^cmpxchg [rdx], esi^^^jnz     _L_lock_13666^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^mov     rcx, [rsp+68h+var_50]^^^jz      loc_408FD8^^^mov     rdi, [rsp+68h+var_50]^^^call    malloc_consolidate_part_3^^^mov     rbp, cs:_dl_pagesize^^^cmp     rbp, 3FFh^^^ja      loc_409031^^^mov     eax, ebp^^^shr     eax, 4^^^mov     [rsp+68h+var_48], eax^^^lea     r14, [rbp-1]^^^mov     [rsp+68h+var_58], 0FFFFFFFFFFFFFFFEh^^^xor     ecx, ecx^^^mov     r15d, 1^^^add     rbp, 2Fh^^^mov     r13, r14^^^not     r13^^^nop     dword ptr [rax+00h]^^^cmp     r15d, [rsp+68h+var_48]^^^jge     short loc_408ED1^^^cmp     r15d, 1^^^jnz     loc_408F58^^^mov     rdx, [rsp+68h+var_58]^^^mov     rax, [rsp+68h+var_50]^^^lea     r12, [rax+rdx*8+68h]^^^mov     rbx, [r12+18h]^^^cmp     r12, rbx^^^jnz     short loc_408EF9^^^jmp     short loc_408F58^^^mov     rbx, [rbx+18h]^^^cmp     r12, rbx^^^jz      short loc_408F58^^^mov     rax, [rbx+8]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, rbp^^^jbe     short loc_408EF0^^^lea     rdi, [rbx+rbp]^^^lea     rdx, [rbx+30h]^^^and     rdi, r13^^^cmp     rdi, rdx^^^jb      loc_40907C^^^lea     rdx, [rbx+rax]^^^cmp     rdi, rdx^^^jnb     loc_409063^^^mov     rsi, rbx^^^sub     rsi, rdi^^^add     rax, rsi^^^cmp     r14, rax^^^jnb     short loc_408EF0^^^mov     rsi, rax^^^mov     edx, 4^^^and     rsi, r13^^^call    madvise^^^mov     rbx, [rbx+18h]^^^mov     ecx, 1^^^cmp     r12, rbx^^^jnz     short loc_408EF9^^^nop     dword ptr [rax+rax+00h]^^^add     r15d, 1^^^add     [rsp+68h+var_58], 2^^^cmp     r15d, 80h^^^jnz     loc_408EC0^^^xor     eax, eax^^^cmp     [rsp+68h+var_50], offset main_arena^^^jz      loc_409095^^^or      eax, ecx^^^mov     rdx, [rsp+68h+var_50]^^^or      [rsp+68h+var_44], eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408F9F^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_13845^^^jmp     short loc_408FA7^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_13845^^^mov     rax, [rdx+868h]^^^cmp     rax, offset main_arena^^^mov     [rsp+68h+var_50], rax^^^jnz     loc_408E32^^^mov     eax, [rsp+68h+var_44]^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     rax, [rcx+rdx*8+68h]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_408FD8^^^cmp     [rsp+68h+var_50], offset main_arena^^^jz      loc_4090B6^^^mov     rdx, [rsp+68h+var_50]^^^mov     eax, [rdx+4]^^^or      eax, 2^^^mov     rbp, cs:_dl_pagesize^^^or      eax, 1^^^mov     [rdx+4], eax^^^mov     rax, rdx^^^add     rax, 58h^^^cmp     rbp, 3FFh^^^mov     [rdx+58h], rax^^^jbe     loc_408E94^^^mov     rax, rbp^^^shr     rax, 6^^^cmp     rax, 30h^^^ja      short loc_40904A^^^add     eax, 30h^^^mov     [rsp+68h+var_48], eax^^^jmp     loc_408E9D^^^mov     rax, rbp^^^shr     rax, 9^^^cmp     rax, 14h^^^ja      short loc_4090D1^^^add     eax, 5Bh^^^mov     [rsp+68h+var_48], eax^^^jmp     loc_408E9D^^^mov     ecx, offset __func___12789^^^mov     edx, 122Eh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aCharPSizePalig^^^call    __malloc_assert^^^mov     ecx, offset __func___12789^^^mov     edx, 122Dh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aCharVoidCharP2^^^call    __malloc_assert^^^mov     rdi, [rsp+68h+var_40]^^^mov     edx, offset qword_6C2958^^^mov     esi, offset qword_6C2138^^^mov     [rsp+68h+var_60], ecx^^^call    sYSTRIm_isra_1^^^mov     ecx, [rsp+68h+var_60]^^^jmp     loc_408F80^^^mov     cs:global_max_fast, 80h^^^mov     eax, cs:dword_6C20E4^^^mov     rdx, [rsp+68h+var_50]^^^jmp     loc_40900C^^^mov     rax, rbp^^^shr     rax, 0Ch^^^cmp     rax, 0Ah^^^ja      short loc_4090EA^^^add     eax, 6Eh^^^mov     [rsp+68h+var_48], eax^^^jmp     loc_408E9D^^^mov     rax, rbp^^^shr     rax, 0Fh^^^cmp     rax, 4^^^ja      short loc_40910D^^^add     eax, 77h^^^mov     [rsp+68h+var_48], eax^^^jmp     loc_408E9D^^^call    ptmalloc_init_part_8^^^jmp     loc_408E21^^^mov     rax, rbp^^^mov     [rsp+68h+var_48], 7Eh^^^shr     rax, 12h^^^lea     edx, [rax+7Ch]^^^cmp     rax, 2^^^cmova   edx, [rsp+68h+var_48]^^^mov     [rsp+68h+var_48], edx^^^jmp     loc_408E9D^^^
memalign_hook_ini$$$sub     rsp, 18h^^^mov     eax, cs:__libc_malloc_initialized^^^mov     cs:__memalign_hook, 0^^^test    eax, eax^^^jns     short loc_408410^^^mov     [rsp+18h+var_18], rsi^^^mov     [rsp+18h+var_10], rdi^^^call    ptmalloc_init_part_8^^^mov     rdi, [rsp+18h+var_10]^^^mov     rsi, [rsp+18h+var_18]^^^add     rsp, 18h^^^jmp     memalign^^^
_IO_link_in$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^mov     eax, [rdi]^^^test    al, 80h^^^jnz     loc_42B992^^^or      al, 80h^^^xor     ebp, ebp^^^mov     [rdi], eax^^^mov     eax, 0^^^test    rax, rax^^^setnz   bpl^^^jnz     loc_42B9C0^^^mov     [rsp+38h+var_38], offset flush_cleanup^^^mov     [rsp+38h+var_30], 0^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C5628^^^jz      short loc_42B892^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B87E^^^lock cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_619^^^jmp     short loc_42B88B^^^cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_619^^^mov     cs:qword_6C5628, rdx^^^mov     esi, [rbx]^^^mov     ecx, cs:dword_6C5624^^^mov     cs:run_fp, rbx^^^mov     eax, esi^^^add     ecx, 1^^^and     eax, 8000h^^^mov     cs:dword_6C5624, ecx^^^jnz     loc_42B9A0^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_42B8FD^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B8E7^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_658^^^jmp     short loc_42B8F0^^^cmpxchg [rdx], esi^^^jnz     _L_lock_658^^^mov     rdx, [rbx+88h]^^^mov     esi, [rbx]^^^mov     [rdx+8], r8^^^mov     rax, cs:_IO_list_all^^^add     dword ptr [rdx+4], 1^^^add     cs:_IO_list_all_stamp, 1^^^and     esi, 8000h^^^mov     cs:_IO_list_all, rbx^^^mov     [rbx+68h], rax^^^jnz     loc_42B9FC^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^mov     ecx, cs:dword_6C5624^^^jz      loc_42B9D8^^^sub     ecx, 1^^^mov     cs:run_fp, 0^^^test    ecx, ecx^^^mov     cs:dword_6C5624, ecx^^^jnz     short loc_42B984^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B978^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_698^^^jmp     short loc_42B984^^^dec     cs:list_all_lock^^^jnz     _L_unlock_698^^^test    ebp, ebp^^^jz      short loc_42B992^^^xor     esi, esi^^^mov     rdi, rsp^^^call    near ptr 0^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, cs:_IO_list_all^^^add     cs:_IO_list_all_stamp, 1^^^mov     cs:_IO_list_all, rbx^^^mov     [rbx+68h], rax^^^jmp     short loc_42B93D^^^xor     edx, edx^^^mov     esi, offset flush_cleanup^^^mov     rdi, rsp^^^call    near ptr 0^^^jmp     loc_42B84C^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B9F4^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_754^^^jmp     short loc_42B9FC^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_754^^^mov     ecx, cs:dword_6C5624^^^jmp     loc_42B93D^^^
enlarge_userbuf.part.0$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_18], r13^^^mov     rbx, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^mov     r14d, edx^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^sub     rsp, 58h^^^test    byte ptr [rdi], 1^^^mov     rax, [rdi+20h]^^^mov     r13, rsi^^^mov     r15, [rdi+30h]^^^mov     edx, 1^^^mov     [rsp+58h+var_48], rax^^^jz      short loc_42D8A0^^^mov     eax, edx^^^mov     rbx, [rsp+58h+var_30]^^^mov     rbp, [rsp+58h+var_28]^^^mov     r12, [rsp+58h+var_20]^^^mov     r13, [rsp+58h+var_18]^^^mov     r14, [rsp+58h+var_10]^^^mov     r15, [rsp+58h+var_8]^^^add     rsp, 58h^^^retn^^^lea     rax, [rsi+64h]^^^mov     r12, [rdi+38h]^^^mov     [rsp+58h+var_50], edx^^^mov     [rsp+58h+var_40], rax^^^mov     rdi, rax^^^call    qword ptr [rbx+0E0h]^^^test    rax, rax^^^mov     rbp, rax^^^mov     edx, [rsp+58h+var_50]^^^jz      short loc_42D872^^^test    r12, r12^^^jz      short loc_42D8EF^^^mov     rdx, [rbx+40h]^^^sub     rdx, [rbx+38h]^^^mov     rsi, r12^^^mov     rdi, rax^^^call    memcpy^^^mov     rdi, r12^^^call    qword ptr [rbx+0E8h]^^^mov     qword ptr [rbx+38h], 0^^^mov     rdx, [rsp+58h+var_40]^^^mov     ecx, 1^^^mov     rsi, rbp^^^mov     rdi, rbx^^^add     rdx, rbp^^^call    _IO_setb^^^test    r14d, r14d^^^jnz     short loc_42D970^^^mov     rdx, rbp^^^mov     rax, rbp^^^mov     [rbx+20h], rbp^^^sub     rdx, r12^^^add     [rbx+8], rdx^^^mov     rdx, rbp^^^sub     rdx, r12^^^sub     rax, r12^^^add     [rbx+10h], rdx^^^add     rax, [rbx+18h]^^^mov     rdx, rbp^^^mov     rdi, rbp^^^sub     rdx, r12^^^add     [rbx+28h], rdx^^^mov     rdx, [rbx+40h]^^^mov     [rbx+18h], rax^^^mov     rbp, rax^^^mov     [rbx+30h], rdx^^^sub     r15, [rsp+58h+var_48]^^^cmp     r15, r13^^^jg      short loc_42D9C3^^^mov     rdx, r13^^^sub     rdx, r15^^^test    r14d, r14d^^^jnz     short loc_42D9B0^^^add     rdi, r15^^^xor     esi, esi^^^call    sub_400390^^^xor     edx, edx^^^jmp     loc_42D872^^^mov     rax, rbp^^^mov     rdi, rbp^^^mov     [rbx+18h], rbp^^^sub     rax, r12^^^add     [rbx+28h], rax^^^mov     rax, rbp^^^sub     rax, r12^^^sub     rdi, r12^^^add     [rbx+30h], rax^^^add     rdi, [rbx+20h]^^^mov     rax, rbp^^^sub     rax, r12^^^add     [rbx+8], rax^^^mov     rax, [rbx+40h]^^^mov     [rbx+20h], rdi^^^mov     [rbx+10h], rax^^^jmp     short loc_42D94A^^^lea     rdi, [rbp+r15+0]^^^xor     esi, esi^^^call    sub_400390^^^xor     edx, edx^^^jmp     loc_42D872^^^mov     ecx, offset __PRETTY_FUNCTION___11664^^^mov     edx, 0EFh^^^mov     esi, offset aStrops_c^^^mov     edi, offset aOffsetOldend^^^call    __assert_fail^^^
_L_lock_1258$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_41295E^^^
intel_02_known_compare$$$movzx   edx, byte ptr [rsi]^^^xor     eax, eax^^^cmp     [rdi], dl^^^jz      short locret_40E9AE^^^sbb     eax, eax^^^or      eax, 1^^^rep retn^^^
_L_unlock_1442$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4032DC^^^
sub_4718B0$$$mov     rdi, [rbp-1100h]^^^mov     rdx, [rbp-1100h]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp-10F4h], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_471940^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     dword ptr [rbp-1138h], 1^^^mov     rax, ds:step3b_jumps_13289[rax*8]^^^jmp     loc_47047C^^^mov     rdi, [rbp-1100h]^^^mov     rdx, [rbp-1100h]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp-10F4h], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_471954^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     dword ptr [rbp-1138h], 1^^^mov     dword ptr [rbp-1144h], 1^^^mov     rax, ds:step4_jumps_13290[rax*8]^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     dword ptr [rbp-1138h], 1^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     dword ptr [rbp-1138h], 1^^^mov     dword ptr [rbp-1144h], 1^^^jmp     loc_47047C^^^
_Unwind_GetCFA$$$mov     rax, [rdi+90h]^^^retn^^^
_L_lock_9727$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_406E56^^^
_L_unlock_13005$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40898A^^^
_L_unlock_186_0$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_475328^^^
_L_lock_625$$$lea     rdi, syslog_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40FB0C^^^
____strtold_l_internal$$$push    r15^^^mov     r11, rsi^^^mov     r8, rcx^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 10F8h^^^test    edx, edx^^^mov     rax, [rcx+8]^^^mov     [rsp+1128h+var_1100], rdi^^^jnz     loc_4822EE^^^mov     [rsp+1128h+var_10F0], 0^^^mov     [rsp+1128h+var_10F8], 0^^^mov     r12, [rax+40h]^^^mov     [rsp+1128h+var_1108], r8^^^mov     [rsp+1128h+var_1118], r11^^^mov     rdi, r12^^^call    strlen^^^test    rax, rax^^^mov     [rsp+1128h+var_10E8], rax^^^mov     r8, [rsp+1128h+var_1108]^^^mov     r11, [rsp+1128h+var_1118]^^^jz      loc_4822C0^^^mov     rdx, [rsp+1128h+var_1100]^^^mov     [rsp+1128h+var_58], 0^^^mov     rax, [r8+68h]^^^sub     rdx, 1^^^jmp     short loc_48054B^^^mov     rdx, rbx^^^movzx   ebp, byte ptr [rdx+1]^^^lea     rbx, [rdx+1]^^^movsx   rcx, bpl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_480548^^^cmp     bpl, 2Dh^^^jz      loc_481088^^^cmp     bpl, 2Bh^^^mov     ecx, ebp^^^mov     [rsp+1128h+var_10C0], 0^^^jz      loc_48109F^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      loc_481587^^^cmp     al, bpl^^^mov     edx, 1^^^jz      short loc_4805AF^^^jmp     loc_480830^^^add     rdx, 1^^^cmp     sil, [rbx+rdx-1]^^^jnz     loc_480830^^^movzx   esi, byte ptr [r12+rdx]^^^test    sil, sil^^^jnz     short loc_4805A0^^^movzx   edx, byte ptr [rbx+rdx]^^^cmp     dl, 2Fh^^^jle     loc_480830^^^cmp     dl, 39h^^^jg      loc_480830^^^cmp     bpl, 30h^^^mov     rdx, [r8+70h]^^^jz      loc_481179^^^mov     byte ptr [rsp+1128h+var_10D8], 0^^^mov     r10d, 1^^^mov     dword ptr [rsp+1128h+var_10E0], 0Ah^^^cmp     [rsp+1128h+var_10F8], 0^^^jnz     loc_48231D^^^cmp     bpl, 30h^^^mov     r14, rbx^^^jnz     short loc_480618^^^nop     dword ptr [rax]^^^add     r14, 1^^^movzx   ebp, byte ptr [r14]^^^cmp     bpl, 30h^^^jz      short loc_480608^^^mov     ecx, ebp^^^movsx   rsi, bpl^^^xor     r15d, r15d^^^mov     r13, r14^^^mov     edi, [rdx+rsi*4]^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^ja      loc_4808A8^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^jbe     loc_480894^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^jz      loc_480880^^^cmp     [rsp+1128h+var_10F8], 0^^^jnz     loc_482286^^^cmp     rbx, r13^^^jb      loc_4811B0^^^cmp     r15, 1^^^sbb     rcx, rcx^^^test    al, al^^^jz      short loc_480699^^^cmp     [r13+0], al^^^mov     rbx, r15^^^jnz     loc_4806F8^^^xor     eax, eax^^^jmp     short loc_48068F^^^add     rax, 1^^^cmp     dl, [r13+rax+0]^^^jnz     loc_4813E2^^^movzx   edx, byte ptr [r12+rax+1]^^^test    dl, dl^^^jnz     short loc_480680^^^add     r13, [rsp+1128h+var_10E8]^^^xor     eax, eax^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^movzx   ebp, byte ptr [r13+0]^^^jnz     loc_480951^^^mov     rdx, [r8+70h]^^^jmp     short loc_4806DB^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4806CE^^^cmp     bpl, 30h^^^cmovnz  rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     esi, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     sil, 9^^^jbe     short loc_4806C0^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     short loc_4806C0^^^test    rbx, rbx^^^js      loc_482376^^^mov     rax, [r8+70h]^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 70h^^^jnz     loc_4809D0^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^jz      loc_4809D0^^^movzx   r9d, byte ptr [r13+1]^^^cmp     r9b, 2Dh^^^jz      loc_4813FC^^^cmp     r9b, 2Bh^^^jz      loc_4813C1^^^lea     rdi, [r13+1]^^^mov     dword ptr [rsp+1128h+var_10F0], 0^^^lea     eax, [r9-30h]^^^cmp     al, 9^^^ja      loc_4809D8^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^jnz     loc_481532^^^mov     eax, dword ptr [rsp+1128h+var_10F0]^^^test    eax, eax^^^jz      loc_4814F6^^^mov     rax, 7FFFFFFFFFFFEC7Ch^^^cmp     r15, rax^^^ja      loc_482431^^^lea     rbp, [r15+1383h]^^^mov     r10, 6666666666666667h^^^mov     rax, rbp^^^imul    r10^^^mov     rax, rbp^^^sar     rax, 3Fh^^^mov     r10, rdx^^^sar     r10, 2^^^sub     r10, rax^^^mov     rax, 6666666666666667h^^^mov     rsi, [rsp+1128h+var_58]^^^imul    rbp^^^mov     rax, rbp^^^sar     rax, 3Fh^^^sar     rdx, 2^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^add     rax, rax^^^sub     rbp, rax^^^mov     [rsp+1128h+var_1100], rbp^^^nop     dword ptr [rax]^^^cmp     r10, rsi^^^jl      loc_481E3B^^^movsx   eax, r9b^^^jz      loc_481E2B^^^sub     eax, 30h^^^cdqe^^^lea     rdx, [rsi+rsi*4]^^^add     rdi, 1^^^lea     rsi, [rax+rdx*2]^^^mov     [rsp+1128h+var_58], rsi^^^movzx   r9d, byte ptr [rdi]^^^lea     eax, [r9-30h]^^^cmp     al, 9^^^jbe     short loc_4807D8^^^mov     ebp, dword ptr [rsp+1128h+var_10F0]^^^test    ebp, ebp^^^jz      loc_4809DB^^^neg     rsi^^^mov     [rsp+1128h+var_58], rsi^^^jmp     loc_4809DB^^^lea     edx, [rbp-30h]^^^cmp     dl, 9^^^jbe     loc_4805CF^^^mov     rax, cs:off_499B10^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 69h^^^jz      loc_481482^^^cmp     al, 6Eh^^^jz      loc_48142A^^^test    r11, r11^^^jz      loc_481423^^^mov     rdi, [rsp+1128h+var_1100]^^^fldz^^^mov     [r11], rdi^^^add     rsp, 10F8h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^ja      loc_48064A^^^add     r15, 1^^^movzx   ebp, byte ptr [r13+1]^^^add     r13, 1^^^mov     ecx, ebp^^^jmp     loc_480632^^^cmp     dil, 60h^^^mov     r9d, edi^^^jg      loc_48123D^^^test    al, al^^^jz      loc_480981^^^xor     esi, esi^^^cmp     al, cl^^^jz      loc_480976^^^test    r10b, r10b^^^jz      loc_481ECD^^^cmp     r9b, 65h^^^jnz     short loc_4808E7^^^xor     r15d, r15d^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^mov     r13, r14^^^jz      loc_480632^^^mov     rcx, [rsp+1128h+var_10F0]^^^mov     rdx, [rsp+1128h+var_10F8]^^^mov     rsi, r14^^^mov     rdi, rbx^^^mov     [rsp+1128h+var_1118], r11^^^call    __correctly_grouped_prefixmb^^^mov     r11, [rsp+1128h+var_1118]^^^test    r11, r11^^^jz      short loc_48091F^^^cmp     rbx, rax^^^jz      loc_482257^^^mov     [rsp+1128h+var_1100], rax^^^mov     rdi, rax^^^mov     [r11], rdi^^^mov     r9d, [rsp+1128h+var_10C0]^^^fldz^^^test    r9d, r9d^^^jz      loc_48086E^^^fchs^^^jmp     loc_48086E^^^cmp     bpl, 30h^^^jz      short loc_480944^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^cmovz   rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     edx, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     dl, 9^^^ja      loc_4806F8^^^jmp     short loc_480936^^^add     rsi, 1^^^cmp     dil, [r14+rsi]^^^jnz     loc_4808C7^^^movzx   edi, byte ptr [r12+rsi+1]^^^test    dil, dil^^^jnz     short loc_480968^^^cmp     rbx, r14^^^jnz     loc_4813D7^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^jz      loc_4813D7^^^mov     rdi, [rsp+1128h+var_10E8]^^^xor     r15d, r15d^^^mov     r13, r14^^^movzx   esi, byte ptr [r14+rdi]^^^lea     edi, [rsi-30h]^^^cmp     dil, 9^^^jbe     loc_480632^^^movsx   rsi, sil^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     loc_480632^^^jmp     loc_4808D0^^^cmp     al, 65h^^^jz      loc_481255^^^mov     rdi, r13^^^cmp     rbx, r15^^^xchg    ax, ax^^^ja      loc_481058^^^test    rbx, rbx^^^jnz     loc_4810AE^^^test    r11, r11^^^jz      short loc_4809F7^^^mov     [r11], rdi^^^test    rbx, rbx^^^jz      loc_48091F^^^test    rcx, rcx^^^mov     rbp, r14^^^jz      loc_480ACE^^^movzx   esi, byte ptr [r12]^^^movzx   edi, byte ptr [r12+1]^^^jmp     short loc_480A24^^^add     r14, 1^^^cmp     [r14], sil^^^jnz     short loc_480A20^^^test    dil, dil^^^jz      short loc_480A55^^^xor     eax, eax^^^cmp     [r14+1], dil^^^jz      short loc_480A4B^^^jmp     short loc_480A20^^^add     rax, 1^^^cmp     dl, [r14+rax+1]^^^jnz     short loc_480A20^^^movzx   edx, byte ptr [r12+rax+2]^^^test    dl, dl^^^jnz     short loc_480A40^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^mov     rdx, 7FFFFFFFFFFFFFFFh^^^cmovnz  rax, rdx^^^cmp     rcx, rax^^^ja      loc_48216F^^^mov     rax, [rsp+1128h+var_58]^^^mov     rdx, 8000000000000000h^^^add     rdx, rax^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^jz      loc_481DBE^^^cmp     rcx, rdx^^^ja      loc_48223E^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^lea     rdx, ds:0[rcx*4]^^^mov     rbp, [rsp+1128h+var_10E8]^^^cmovnz  rdx, rcx^^^add     rbp, rcx^^^sub     rbx, rcx^^^sub     rax, rdx^^^add     rbp, r14^^^mov     [rsp+1128h+var_58], rax^^^cmp     dword ptr [rsp+1128h+var_10E0], 10h^^^jz      loc_481265^^^mov     rax, [rsp+1128h+var_58]^^^test    rax, rax^^^js      loc_481575^^^mov     rdx, rbx^^^sub     rdx, r15^^^cmp     rdx, rax^^^cmovg   rdx, rax^^^lea     r14, [rdx+r15]^^^sub     rax, rdx^^^mov     edx, 1345h^^^mov     [rsp+1128h+var_58], rax^^^sub     rdx, r14^^^cmp     rax, rdx^^^jg      loc_481E96^^^cmp     rax, 0FFFFFFFFFFFFECAAh^^^jl      loc_48256E^^^test    r14, r14^^^mov     dword ptr [rsp+1128h+var_1100], 0^^^jnz     loc_48158E^^^cmp     rbx, r14^^^jbe     loc_482555^^^mov     rcx, [rsp+1128h+var_58]^^^test    rcx, rcx^^^jg      loc_482555^^^mov     esi, 42h^^^sub     esi, dword ptr [rsp+1128h+var_1100]^^^mov     edx, 55555556h^^^mov     byte ptr [rsp+1128h+var_10D0], 0^^^mov     [rsp+1128h+var_10BC], 0^^^mov     eax, esi^^^sar     esi, 1Fh^^^imul    edx^^^sub     edx, esi^^^movsxd  rdx, edx^^^lea     rax, [r14+rdx+2]^^^cmp     rbx, rax^^^jle     short loc_480B8F^^^mov     rbx, rax^^^mov     byte ptr [rsp+1128h+var_10D0], 1^^^mov     [rsp+1128h+var_10BC], 1^^^sub     ebx, r14d^^^lea     rdx, [rsp+1128h+var_898]^^^lea     r15, [rsp+1128h+var_10B8]^^^mov     r13d, ebx^^^xor     r10d, r10d^^^mov     dword ptr [rsp+1128h+var_10D8], ebx^^^mov     [rsp+1128h+var_10C8], rbp^^^sub     r13d, ecx^^^mov     ebx, offset _fpioconst_pow10^^^mov     [rsp+1128h+var_10F0], r15^^^mov     [rsp+1128h+var_10E0], rdx^^^mov     r14, rdx^^^mov     r12d, 1^^^mov     rbp, r10^^^jmp     short loc_480BFD^^^mov     rbp, [rbx+8]^^^mov     rax, [rbx]^^^mov     rdi, r14^^^sub     rbp, 1^^^lea     rsi, unk_4AEDC8[rax*8]^^^lea     rdx, ds:0[rbp*8]^^^call    memcpy^^^add     r12d, r12d^^^add     rbx, 18h^^^test    r13d, r13d^^^jz      short loc_480C5C^^^test    r13d, r12d^^^jz      short loc_480BF1^^^xor     r13d, r12d^^^test    rbp, rbp^^^jz      short loc_480BCE^^^mov     rax, [rbx]^^^mov     rdx, [rbx+8]^^^mov     r8, rbp^^^mov     rdi, [rsp+1128h+var_10F0]^^^mov     rcx, r14^^^lea     rsi, unk_4AEDC8[rax*8]^^^sub     rdx, 1^^^call    __mpn_mul^^^mov     rdx, [rbx+8]^^^test    rax, rax^^^lea     rbp, [rbp+rdx-1]^^^jnz     loc_4813EA^^^mov     rax, r14^^^sub     rbp, 1^^^add     r12d, r12d^^^add     rbx, 18h^^^test    r13d, r13d^^^mov     r14, [rsp+1128h+var_10F0]^^^mov     [rsp+1128h+var_10F0], rax^^^jnz     short loc_480BFD^^^cmp     r14, r15^^^mov     r10, rbp^^^mov     rbp, [rsp+1128h+var_10C8]^^^jz      loc_4820E5^^^mov     rdx, [rsp+1128h+var_10F8]^^^mov     r9, [rsp+1128h+var_10E8]^^^lea     r8, [rsp+1128h+var_58]^^^mov     esi, dword ptr [rsp+1128h+var_10D8]^^^lea     rcx, [rsp+1128h+var_68]^^^mov     rdi, rbp^^^mov     [rsp+1128h+var_1110], r10^^^mov     [rsp+1128h+var_1128], rdx^^^mov     rdx, r15^^^call    str_to_mpn_isra_0_1^^^mov     r10, [rsp+1128h+var_1110]^^^lea     rbp, [r10-1]^^^bsr     rbx, [rsp+rbp*8+1128h+var_898]^^^mov     [rsp+1128h+var_10E8], rbp^^^xor     rbx, 3Fh^^^test    ebx, ebx^^^jle     short loc_480CF3^^^mov     rsi, [rsp+1128h+var_10E0]^^^mov     rdx, r10^^^mov     ecx, ebx^^^mov     rdi, rsi^^^call    __mpn_lshift^^^mov     rdx, [rsp+1128h+var_68]^^^mov     ecx, ebx^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_lshift^^^test    rax, rax^^^mov     r10, [rsp+1128h+var_1110]^^^jnz     loc_481AD0^^^movsxd  rcx, dword ptr [rsp+1128h+var_1100]^^^cmp     r10, 1^^^mov     [rsp+1128h+var_58], rcx^^^jz      loc_481951^^^cmp     r10, 2^^^jz      loc_4817E3^^^mov     rbp, [rsp+1128h+var_10E8]^^^mov     rdx, [rsp+1128h+var_68]^^^mov     rax, r10^^^lea     r14, [r10-2]^^^mov     rdi, r15^^^mov     r12, [rsp+rbp*8+1128h+var_898]^^^mov     rbp, [rsp+1128h+var_10E0]^^^sub     rax, rdx^^^mov     r13, [rsp+r14*8+1128h+var_898]^^^mov     [rsp+1128h+var_1108], rcx^^^mov     [rsp+1128h+var_1110], r10^^^lea     rsi, [rbp+rax*8+0]^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, [rsp+1128h+var_1108]^^^mov     r10, [rsp+1128h+var_1110]^^^mov     rax, [rsp+1128h+var_68]^^^jle     short loc_480D82^^^mov     [rsp+rax*8+1128h+var_10B8], 0^^^add     rax, 1^^^mov     [rsp+1128h+var_68], rax^^^cmp     rax, r10^^^jge     loc_481BAE^^^mov     rbx, r10^^^mov     esi, dword ptr [rsp+1128h+var_1100]^^^sub     rbx, rax^^^mov     rdx, rbx^^^shl     rdx, 6^^^test    esi, esi^^^jle     loc_4820D0^^^add     rcx, rdx^^^cmp     rcx, 40h^^^jg      loc_482082^^^cmp     rbx, 1^^^jnz     loc_482203^^^mov     [rsp+1128h+var_48], 0^^^mov     dword ptr [rsp+1128h+var_10F0], 0^^^mov     edx, ebx^^^shl     edx, 6^^^add     dword ptr [rsp+1128h+var_1100], edx^^^test    eax, eax^^^mov     edx, eax^^^jle     short loc_480E07^^^lea     eax, [rdx-1]^^^movsxd  rdx, edx^^^add     rdx, rbx^^^lea     rdx, [r15+rdx*8]^^^nop     dword ptr [rax+rax+00h]^^^movsxd  rcx, eax^^^sub     eax, 1^^^mov     rcx, [rsp+rcx*8+1128h+var_10B8]^^^mov     [rdx], rcx^^^sub     rdx, 8^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_480DF0^^^test    rbx, rbx^^^js      short loc_480E69^^^lea     rsi, [rbx+1]^^^mov     rcx, rsi^^^shr     rcx, 1^^^cmp     rsi, 3^^^lea     rdi, [rcx+rcx]^^^jbe     loc_4821FC^^^test    rdi, rdi^^^jz      loc_4821FC^^^pxor    xmm0, xmm0^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, rax^^^add     rax, 1^^^shl     rdx, 4^^^cmp     rcx, rax^^^movdqa  xmmword ptr [r15+rdx], xmm0^^^ja      short loc_480E38^^^cmp     rsi, rdi^^^jz      short loc_480E69^^^nop     dword ptr [rax+rax+00h]^^^mov     qword ptr [r15+rdi*8], 0^^^add     rdi, 1^^^cmp     rbx, rdi^^^jge     short loc_480E58^^^cmp     dword ptr [rsp+1128h+var_1100], 40h^^^mov     [rsp+r10*8+1128h+var_898], 0^^^mov     rcx, [rsp+r10*8+1128h+var_10B8]^^^jg      loc_48213F^^^lea     r9, [r10+1]^^^mov     ebp, r10d^^^mov     [rsp+1128h+var_10F8], r15^^^mov     r15, r10^^^mov     [rsp+1128h+var_10D0], r9^^^lea     r9d, [rbp-1]^^^add     ebp, 1^^^sub     ebp, r10d^^^mov     dword ptr [rsp+1128h+var_10D8], r9d^^^lea     r9d, [r10-2]^^^mov     dword ptr [rsp+1128h+var_10C8], r9d^^^cmp     rcx, r12^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_480F06^^^mov     r9, [rsp+1128h+var_10E8]^^^mov     rdx, rcx^^^mov     rbx, [rsp+r9*8+1128h+var_10B8]^^^mov     rax, rbx^^^div     r12^^^mov     rbx, rax^^^mov     rcx, rdx^^^mov     rax, r13^^^mul     rbx^^^jmp     short loc_480EEF^^^xor     esi, esi^^^cmp     rax, r13^^^setb    sil^^^sub     rax, r13^^^sub     rdx, rsi^^^cmp     rdx, rcx^^^ja      short loc_480EFD^^^jnz     short loc_480F06^^^cmp     rax, [rsp+r14*8+1128h+var_10B8]^^^jbe     short loc_480F06^^^sub     rbx, 1^^^add     rcx, r12^^^jnb     short loc_480EE0^^^mov     rdx, [rsp+1128h+var_10D0]^^^mov     rsi, [rsp+1128h+var_10E0]^^^mov     rcx, rbx^^^mov     rdi, [rsp+1128h+var_10F8]^^^call    __mpn_submul_1^^^cmp     [rsp+r15*8+1128h+var_10B8], rax^^^jz      short loc_480F46^^^mov     rsi, [rsp+1128h+var_10F8]^^^mov     rdx, [rsp+1128h+var_10E0]^^^mov     rcx, r15^^^mov     rdi, rsi^^^call    __mpn_add_n^^^test    rax, rax^^^jz      loc_482156^^^sub     rbx, 1^^^mov     r9, [rsp+1128h+var_10E8]^^^mov     eax, dword ptr [rsp+1128h+var_10D8]^^^mov     rcx, [rsp+r9*8+1128h+var_10B8]^^^test    eax, eax^^^mov     [rsp+r15*8+1128h+var_10B8], rcx^^^jle     short loc_480F85^^^mov     eax, dword ptr [rsp+1128h+var_10C8]^^^jmp     short loc_480F6A^^^mov     eax, edx^^^movsxd  rdx, eax^^^test    eax, eax^^^mov     rsi, [rsp+rdx*8+1128h+var_10B8]^^^lea     edx, [rbp+rax+0]^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+1128h+var_10B8], rsi^^^lea     edx, [rax-1]^^^jg      short loc_480F68^^^cmp     dword ptr [rsp+1128h+var_1100], 0^^^mov     [rsp+1128h+var_10B8], 0^^^jnz     loc_481C40^^^test    rbx, rbx^^^jz      loc_481CB0^^^bsr     rdx, rbx^^^mov     rax, [rsp+1128h+var_58]^^^xor     edx, 3Fh^^^movsxd  rsi, edx^^^sub     rax, rsi^^^mov     esi, 40h^^^sub     esi, edx^^^mov     [rsp+1128h+var_58], rax^^^cmp     esi, 40h^^^jle     loc_48221C^^^lea     ebp, [rdx+40h]^^^neg     edx^^^mov     rsi, rbx^^^mov     ecx, edx^^^lea     r11, [rsp+1128h+var_48]^^^mov     r10, r15^^^shr     rsi, cl^^^mov     dword ptr [rsp+1128h+var_10F0], ebp^^^mov     [rsp+1128h+var_48], rsi^^^movsxd  rdx, r10d^^^mov     ecx, r10d^^^cmp     [rsp+rdx*8+1128h+var_10B8], 0^^^not     ecx^^^jnz     short loc_48102B^^^test    r10d, r10d^^^js      short loc_48102B^^^lea     edx, [r10-1]^^^jmp     short loc_481015^^^test    r10d, r10d^^^js      short loc_48102B^^^mov     r10d, edx^^^sub     edx, 1^^^movsxd  rcx, r10d^^^cmp     [rsp+rcx*8+1128h+var_10B8], 0^^^mov     ecx, r10d^^^not     ecx^^^jz      short loc_481010^^^mov     r9d, [rsp+1128h+var_10BC]^^^shr     ecx, 1Fh^^^mov     r8d, 3Fh^^^lea     rsi, [rax-1]^^^sub     r8d, dword ptr [rsp+1128h+var_10F0]^^^or      r9d, ecx^^^jmp     loc_481A11^^^sub     r13, 1^^^sub     rbx, 1^^^cmp     byte ptr [r13-1], 30h^^^jz      short loc_481050^^^cmp     rbx, r15^^^jnb     loc_4809E6^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 3C7h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aDig_noInt_no^^^call    __assert_fail^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     [rsp+1128h+var_10C0], 1^^^mov     ecx, ebp^^^jmp     loc_48057C^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     ecx, ebp^^^jmp     loc_48057C^^^cmp     rbx, r15^^^jnz     loc_4809EF^^^cmp     [rsp+1128h+var_58], 0^^^jns     loc_4809EF^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^lea     rdx, [r13-1]^^^jz      loc_481162^^^mov     rax, [r8+68h]^^^jmp     short loc_48110E^^^mov     rsi, [rsp+1128h+var_58]^^^sub     r15, 1^^^add     rsi, 4^^^sub     rbx, 1^^^mov     [rsp+1128h+var_58], rsi^^^jz      loc_4809EF^^^shr     rsi, 3Fh^^^test    sil, sil^^^jz      loc_4809EF^^^sub     rdx, 1^^^movzx   esi, byte ptr [rdx]^^^movsx   r9, sil^^^test    byte ptr [rax+r9*2+1], 10h^^^jz      short loc_48110A^^^cmp     sil, 30h^^^jz      short loc_4810DB^^^jmp     loc_4809EF^^^mov     rax, [rsp+1128h+var_58]^^^sub     r15, 1^^^add     rax, 1^^^sub     rbx, 1^^^mov     [rsp+1128h+var_58], rax^^^jz      loc_4809EF^^^shr     rax, 3Fh^^^test    al, al^^^jz      loc_4809EF^^^sub     rdx, 1^^^movzx   eax, byte ptr [rdx]^^^movsx   esi, al^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_48115E^^^cmp     al, 30h^^^jz      short loc_481130^^^jmp     loc_4809EF^^^movsx   rsi, byte ptr [rbx+1]^^^cmp     dword ptr [rdx+rsi*4], 78h^^^jnz     loc_4805DD^^^movzx   ebp, byte ptr [rbx+2]^^^mov     byte ptr [rsp+1128h+var_10D8], 1^^^add     rbx, 2^^^xor     r10d, r10d^^^mov     [rsp+1128h+var_10F0], 0^^^mov     dword ptr [rsp+1128h+var_10E0], 10h^^^mov     ecx, ebp^^^jmp     loc_4805F0^^^cmp     [rsp+1128h+var_10F0], 0^^^jz      loc_48065F^^^mov     rcx, [rsp+1128h+var_10F0]^^^mov     rdx, [rsp+1128h+var_10F8]^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     [rsp+1128h+var_1108], r8^^^mov     byte ptr [rsp+1128h+var_1110], r10b^^^mov     [rsp+1128h+var_1118], r11^^^call    __correctly_grouped_prefixmb^^^cmp     rax, r13^^^mov     r8, [rsp+1128h+var_1108]^^^movzx   r10d, byte ptr [rsp+1128h+var_1110]^^^mov     r11, [rsp+1128h+var_1118]^^^jz      loc_481E8C^^^cmp     rbx, rax^^^jz      loc_48085B^^^cmp     r14, rax^^^ja      loc_481412^^^mov     rdi, r14^^^mov     ebx, 0^^^jnb     loc_481F4E^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rbx+1]^^^sub     ecx, 30h^^^cmp     cl, 9^^^cmovbe  rbx, rdx^^^add     rdi, 1^^^cmp     rdi, rax^^^jnz     short loc_481219^^^mov     r15, rbx^^^xor     ecx, ecx^^^jmp     loc_4809EF^^^test    r10b, r10b^^^jnz     loc_4808B5^^^cmp     dil, 66h^^^jle     loc_480632^^^jmp     loc_4808B5^^^test    r10b, r10b^^^jz      loc_4809D8^^^xchg    ax, ax^^^jmp     loc_480720^^^movzx   edx, byte ptr [rbp+0]^^^mov     rdi, [r8+68h]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jnz     short loc_481298^^^add     rbp, 1^^^movzx   edx, byte ptr [rbp+0]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jz      short loc_481278^^^jmp     short loc_481298^^^add     rbp, 1^^^movzx   edx, byte ptr [rbp+0]^^^cmp     dl, 30h^^^jz      short loc_481290^^^movsx   eax, dl^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_481AEE^^^mov     rax, [r8+70h]^^^movsx   rdx, dl^^^add     rbp, 1^^^mov     eax, [rax+rdx*4]^^^sub     eax, 57h^^^cdqe^^^mov     r9d, ds:nbits_12626_0[rax*4]^^^test    r9d, r9d^^^jz      loc_482480^^^mov     edx, 40h^^^mov     rsi, [rsp+1128h+var_58]^^^sub     edx, r9d^^^mov     ecx, edx^^^shl     rax, cl^^^test    rsi, rsi^^^mov     rdx, rax^^^mov     [rsp+1128h+var_48], rax^^^js      loc_481EF6^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^movsxd  rcx, r9d^^^sub     rax, rsi^^^sub     rax, rcx^^^lea     rcx, [rax+4]^^^add     rax, 1^^^cmovs   rax, rcx^^^sar     rax, 2^^^cmp     r15, rax^^^ja      loc_482188^^^lea     eax, [r9-1]^^^cdqe^^^lea     rax, [rax+r15*4-4]^^^add     rsi, rax^^^sub     rbx, 1^^^mov     [rsp+1128h+var_58], rsi^^^jz      loc_481DC7^^^mov     eax, 3Fh^^^mov     r10, [rsp+1128h+var_10E8]^^^sub     eax, r9d^^^jmp     short loc_481383^^^movsxd  r9, r9d^^^add     rbp, 1^^^cmp     eax, 2^^^jle     loc_481DE5^^^lea     ecx, [rax-3]^^^sub     eax, 4^^^shl     r9, cl^^^or      rdx, r9^^^sub     rbx, 1^^^mov     [rsp+1128h+var_48], rdx^^^jz      loc_481DC7^^^movzx   ecx, byte ptr [rbp+0]^^^movsx   r9, cl^^^test    byte ptr [rdi+r9*2+1], 10h^^^jnz     short loc_48139A^^^add     rbp, r10^^^movzx   ecx, byte ptr [rbp+0]^^^movsx   r9d, cl^^^sub     r9d, 30h^^^cmp     r9d, 9^^^jbe     short loc_481355^^^mov     r9, [r8+70h]^^^movsx   rcx, cl^^^add     rbp, 1^^^mov     r9d, [r9+rcx*4]^^^sub     r9d, 57h^^^movsxd  r9, r9d^^^jmp     short loc_48135C^^^lea     rdi, [r13+2]^^^movzx   r9d, byte ptr [r13+2]^^^mov     dword ptr [rsp+1128h+var_10F0], 0^^^jmp     loc_480745^^^mov     r13, r14^^^xor     r15d, r15d^^^jmp     loc_480632^^^mov     rbx, r15^^^jmp     loc_4806F8^^^mov     rax, r14^^^mov     r14, [rsp+1128h+var_10F0]^^^mov     [rsp+1128h+var_10F0], rax^^^jmp     loc_480BF1^^^lea     rdi, [r13+2]^^^movzx   r9d, byte ptr [r13+2]^^^mov     dword ptr [rsp+1128h+var_10F0], 1^^^jmp     loc_480745^^^test    r11, r11^^^jz      loc_48091F^^^mov     [r11], rax^^^jmp     loc_48091F^^^fldz^^^jmp     loc_48086E^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aNan^^^mov     rdi, rbx^^^mov     [rsp+1128h+var_1108], r8^^^mov     [rsp+1128h+var_1118], r11^^^call    sub_4003B0^^^test    eax, eax^^^mov     r8, [rsp+1128h+var_1108]^^^mov     r11, [rsp+1128h+var_1118]^^^jnz     loc_48085B^^^cmp     byte ptr [rbx+3], 28h^^^lea     rcx, [rbx+3]^^^jz      loc_481F5B^^^fld     cs:dword_4B27C8^^^test    r11, r11^^^jz      loc_48086E^^^mov     [r11], rcx^^^jmp     loc_48086E^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aInf^^^mov     rdi, rbx^^^mov     [rsp+1128h+var_1118], r11^^^call    sub_4003B0^^^test    eax, eax^^^mov     r11, [rsp+1128h+var_1118]^^^jnz     loc_48085B^^^test    r11, r11^^^jz      short loc_4814DD^^^lea     rbp, [rbx+3]^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 5^^^mov     esi, offset aInity^^^add     rbx, 8^^^mov     rdi, rbp^^^call    sub_4003B0^^^mov     r11, [rsp+1128h+var_1118]^^^test    eax, eax^^^cmovz   rbp, rbx^^^mov     [r11], rbp^^^mov     r8d, [rsp+1128h+var_10C0]^^^test    r8d, r8d^^^jnz     loc_481EB2^^^fld     cs:dword_4B27C0^^^jmp     loc_48086E^^^test    r15, r15^^^jz      loc_481AF9^^^test    rcx, rcx^^^jnz     loc_482467^^^mov     rax, r15^^^shr     rax, 3Fh^^^test    al, al^^^jnz     loc_482467^^^mov     ebp, 1345h^^^sub     rbp, r15^^^test    rbp, rbp^^^jns     loc_480782^^^xor     r10d, r10d^^^xor     ebp, ebp^^^jmp     loc_4807A3^^^mov     eax, dword ptr [rsp+1128h+var_10F0]^^^test    eax, eax^^^jnz     loc_481C02^^^test    r15, r15^^^jz      loc_482119^^^test    rcx, rcx^^^jnz     loc_4821E3^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^cmp     r15, rax^^^ja      loc_4821E3^^^mov     eax, 1000h^^^sub     rax, r15^^^lea     rbp, ds:3[rax*4]^^^jmp     short loc_48151F^^^mov     rdx, r15^^^neg     rdx^^^cmp     rdx, rax^^^cmovl   rdx, rax^^^jmp     loc_480AF7^^^xor     edx, edx^^^jmp     loc_4805B9^^^mov     rdx, [rsp+1128h+var_10F8]^^^lea     r15, [rsp+1128h+var_10B8]^^^mov     r9, [rsp+1128h+var_10E8]^^^lea     r8, [rsp+1128h+var_58]^^^lea     rcx, [rsp+1128h+var_68]^^^mov     rdi, rbp^^^mov     esi, r14d^^^mov     [rsp+1128h+var_1128], rdx^^^mov     rdx, r15^^^call    str_to_mpn_isra_0_1^^^mov     rbp, rax^^^mov     rax, [rsp+1128h+var_58]^^^mov     r12, [rsp+1128h+var_68]^^^test    rax, rax^^^jle     loc_4816E2^^^lea     rcx, [rsp+1128h+var_898]^^^mov     r11d, 1^^^mov     [rsp+1128h+var_10F0], rbx^^^mov     [rsp+1128h+var_10D8], rbp^^^mov     rdx, r12^^^mov     r13d, offset _fpioconst_pow10^^^mov     r12, r14^^^mov     [rsp+1128h+var_10E0], rcx^^^mov     rbx, r15^^^mov     rbp, rcx^^^mov     r14d, r11d^^^jmp     short loc_481668^^^lea     rcx, unk_4AEDC8[rax*8]^^^mov     r8, rsi^^^mov     rdi, rbp^^^mov     rsi, rbx^^^call    __mpn_mul^^^mov     rdx, [rsp+1128h+var_1100]^^^add     rdx, [rsp+1128h+var_68]^^^test    rax, rax^^^mov     [rsp+1128h+var_68], rdx^^^jnz     short loc_48164B^^^sub     rdx, 1^^^mov     [rsp+1128h+var_68], rdx^^^mov     rax, [rsp+1128h+var_58]^^^mov     rcx, rbx^^^mov     rbx, rbp^^^mov     rbp, rcx^^^add     r14d, r14d^^^add     r13, 18h^^^test    rax, rax^^^jz      short loc_4816B5^^^movsxd  rcx, r14d^^^test    rcx, rax^^^jz      short loc_48165C^^^mov     rsi, [r13+8]^^^xor     rax, rcx^^^mov     [rsp+1128h+var_58], rax^^^mov     rax, [r13+0]^^^sub     rsi, 1^^^cmp     rsi, rdx^^^mov     [rsp+1128h+var_1100], rsi^^^jle     loc_48160F^^^mov     r8, rdx^^^mov     rdx, [rsp+1128h+var_1100]^^^lea     rsi, unk_4AEDC8[rax*8]^^^mov     rcx, rbx^^^mov     rdi, rbp^^^call    __mpn_mul^^^jmp     loc_481625^^^mov     r9, rbx^^^cmp     r9, [rsp+1128h+var_10E0]^^^mov     r14, r12^^^mov     rbx, [rsp+1128h+var_10F0]^^^mov     rbp, [rsp+1128h+var_10D8]^^^mov     r12, rdx^^^jnz     short loc_4816E2^^^lea     rdx, ds:0[rdx*8]^^^mov     rsi, r9^^^mov     rdi, r15^^^call    memcpy^^^lea     rsi, [r12-1]^^^mov     edx, r12d^^^mov     ecx, r12d^^^shl     edx, 6^^^bsr     rax, [rsp+rsi*8+1128h+var_10B8]^^^xor     eax, 3Fh^^^sub     edx, eax^^^cmp     edx, 4000h^^^mov     dword ptr [rsp+1128h+var_1100], edx^^^jg      loc_482273^^^cmp     edx, 40h^^^jg      loc_481B22^^^cmp     rbx, r14^^^jnz     loc_482062^^^lea     ebx, [rdx-1]^^^mov     edx, ebx^^^sar     edx, 1Fh^^^shr     edx, 1Ah^^^lea     eax, [rbx+rdx]^^^and     eax, 3Fh^^^sub     eax, edx^^^cmp     eax, 3Fh^^^jz      loc_48239F^^^mov     ebp, 1^^^mov     ecx, 3Fh^^^lea     r11, [rsp+1128h+var_48]^^^sub     ecx, eax^^^mov     rax, rbp^^^mov     rdx, r12^^^sub     rax, r12^^^mov     rsi, r15^^^mov     [rsp+1128h+var_1118], r11^^^lea     rdi, [r11+rax*8]^^^call    __mpn_lshift^^^sub     rbp, [rsp+1128h+var_68]^^^mov     r11, [rsp+1128h+var_1118]^^^test    rbp, rbp^^^jle     short loc_4817C7^^^mov     rcx, rbp^^^shr     rcx, 1^^^mov     rax, rcx^^^add     rax, rax^^^jz      loc_482520^^^cmp     rbp, 3^^^jbe     loc_482520^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rcx, rdx^^^movdqa  xmmword ptr [r11+rsi], xmm0^^^ja      short loc_48179B^^^cmp     rbp, rax^^^jz      short loc_4817C7^^^mov     qword ptr [r11+rax*8], 0^^^add     rax, 1^^^cmp     rax, rbp^^^jl      short loc_4817B6^^^mov     edx, [rsp+1128h+var_10C0]^^^movsxd  rsi, ebx^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^mov     rdi, r11^^^call    round_and_return_1^^^jmp     loc_48086E^^^cmp     [rsp+1128h+var_68], 1^^^mov     r12, [rsp+1128h+var_898]^^^mov     rbp, [rsp+1128h+var_890]^^^jg      loc_481C22^^^mov     r13, [rsp+1128h+var_10B8]^^^xor     r14d, r14d^^^cmp     rbp, r13^^^jbe     loc_481C2C^^^mov     edi, dword ptr [rsp+1128h+var_1100]^^^test    edi, edi^^^jle     loc_482499^^^mov     r15d, 40h^^^sub     r15d, dword ptr [rsp+1128h+var_1100]^^^lea     r11, [rsp+1128h+var_48]^^^jz      short loc_481856^^^mov     rsi, r11^^^mov     rdi, r11^^^mov     ecx, r15d^^^mov     edx, 1^^^mov     [rsp+1128h+var_1118], r11^^^call    __mpn_lshift^^^mov     r13, [rsp+1128h+var_10B8]^^^mov     r11, [rsp+1128h+var_1118]^^^add     dword ptr [rsp+1128h+var_1100], 40h^^^cmp     dword ptr [rsp+1128h+var_1100], 40h^^^jg      loc_482527^^^mov     r14, r13^^^xor     r13d, r13d^^^mov     r9d, dword ptr [rsp+1128h+var_1100]^^^mov     rdi, r12^^^xor     ecx, ecx^^^neg     rdi^^^mov     esi, 40h^^^mov     r8, r14^^^cmp     r8, rbp^^^jz      loc_481D40^^^mov     rdx, r8^^^mov     rax, r13^^^div     rbp^^^mov     rbx, rax^^^mov     r8, rdx^^^mov     rax, r12^^^mul     rbx^^^nop^^^cmp     rdx, r8^^^ja      short loc_4818AF^^^test    rax, rax^^^jz      short loc_4818BF^^^cmp     rdx, r8^^^jnz     short loc_4818BF^^^sub     rbx, 1^^^sub     rax, r12^^^sbb     rdx, 0^^^add     r8, rbp^^^jnb     short loc_4818A0^^^mov     r13, rcx^^^sub     r13, rax^^^sbb     r8, rdx^^^cmp     r9d, 0^^^jnz     loc_481CE0^^^test    rbx, rbx^^^jz      loc_481D70^^^bsr     rdx, rbx^^^mov     rax, [rsp+1128h+var_58]^^^xor     edx, 3Fh^^^movsxd  r9, edx^^^sub     rax, r9^^^mov     r9d, esi^^^sub     r9d, edx^^^mov     [rsp+1128h+var_58], rax^^^cmp     r9d, 40h^^^jle     loc_481D79^^^lea     r15d, [rdx+40h]^^^neg     edx^^^mov     rsi, rbx^^^mov     ecx, edx^^^mov     r14, r8^^^shr     rsi, cl^^^mov     [rsp+1128h+var_48], rsi^^^test    r14, r14^^^jnz     loc_481EEB^^^cmp     byte ptr [rsp+1128h+var_10D0], 0^^^jnz     loc_481EEB^^^xor     r9d, r9d^^^test    r13, r13^^^setnz   r9b^^^mov     r8d, 3Fh^^^lea     rsi, [rax-1]^^^sub     r8d, r15d^^^jmp     loc_481A11^^^mov     rax, [rsp+1128h+var_10B8]^^^mov     rcx, [rsp+1128h+var_898]^^^cmp     rax, rcx^^^jnb     loc_48244E^^^cmp     [rsp+1128h+var_68], 1^^^jnz     loc_48244E^^^mov     esi, dword ptr [rsp+1128h+var_1100]^^^xor     edi, edi^^^mov     r8d, 40h^^^mov     r9, rax^^^mov     rdx, r9^^^mov     rax, rdi^^^div     rcx^^^cmp     esi, 0^^^mov     r9, rdx^^^jnz     loc_481A28^^^test    rax, rax^^^jz      loc_481A90^^^bsr     r10, rax^^^mov     rsi, [rsp+1128h+var_58]^^^xor     r10d, 3Fh^^^movsxd  r11, r10d^^^sub     rsi, r11^^^mov     r11d, r8d^^^sub     r11d, r10d^^^mov     [rsp+1128h+var_58], rsi^^^cmp     r11d, 40h^^^jle     loc_4824B5^^^mov     rbp, rdx^^^mov     edx, r10d^^^mov     rbx, rax^^^lea     r12d, [rdx+40h]^^^neg     edx^^^lea     r11, [rsp+1128h+var_48]^^^mov     ecx, edx^^^shr     rax, cl^^^mov     [rsp+1128h+var_48], rax^^^xor     r9d, r9d^^^test    rbp, rbp^^^mov     r8d, 3Fh^^^setnz   r9b^^^or      r9d, [rsp+1128h+var_10BC]^^^sub     r8d, r12d^^^sub     rsi, 1^^^mov     edx, [rsp+1128h+var_10C0]^^^movsxd  r8, r8d^^^mov     rcx, rbx^^^mov     rdi, r11^^^call    round_and_return_1^^^jmp     loc_48086E^^^jle     loc_481AC0^^^mov     r13d, 40h^^^mov     rbx, rax^^^mov     rbp, rdx^^^mov     r12d, r13d^^^lea     r11, [rsp+1128h+var_48]^^^sub     r12d, esi^^^test    r12d, r12d^^^jle     short loc_481A7E^^^mov     ecx, r12d^^^mov     rsi, r11^^^mov     rdi, r11^^^mov     edx, 1^^^mov     [rsp+1128h+var_1118], r11^^^call    __mpn_lshift^^^mov     ecx, r13d^^^mov     rax, rbx^^^mov     r11, [rsp+1128h+var_1118]^^^sub     ecx, r12d^^^shr     rax, cl^^^or      [rsp+1128h+var_48], rax^^^mov     rsi, [rsp+1128h+var_58]^^^jmp     loc_4819F5^^^sub     [rsp+1128h+var_58], 40h^^^cmp     esi, 40h^^^mov     [rsp+1128h+var_48], rax^^^jle     loc_481985^^^mov     rbx, rax^^^mov     rbp, rdx^^^xor     r12d, r12d^^^lea     r11, [rsp+1128h+var_48]^^^jmp     short loc_481A7E^^^mov     [rsp+1128h+var_48], rax^^^add     esi, 40h^^^jmp     loc_481985^^^mov     rdx, [rsp+1128h+var_68]^^^mov     [rsp+rdx*8+1128h+var_10B8], rax^^^add     rdx, 1^^^mov     [rsp+1128h+var_68], rdx^^^jmp     loc_480CF3^^^cdqe^^^add     rbp, 1^^^jmp     loc_4812C0^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_482109^^^mov     rax, 7FFFFFFFFFFFECBAh^^^cmp     rcx, rax^^^ja      loc_4821CA^^^lea     rbp, [rcx+1345h]^^^jmp     loc_480782^^^lea     r10d, [rdx-40h]^^^mov     r9d, r10d^^^and     r10d, 3Fh^^^movsxd  r8, r10d^^^sar     r9d, 6^^^test    r8, r8^^^movsxd  rax, r9d^^^jnz     loc_481F1B^^^lea     rcx, [rax-1]^^^mov     rax, [r15+rax*8]^^^mov     r8b, 3Fh^^^mov     [rsp+1128h+var_48], rax^^^cmp     [rsp+1128h+var_10B8], 0^^^jnz     loc_4824BD^^^add     r15, 8^^^xor     eax, eax^^^nop     dword ptr [rax]^^^add     r15, 8^^^add     eax, 1^^^cmp     qword ptr [r15-8], 0^^^jz      short loc_481B68^^^cmp     rbx, r14^^^mov     r9d, 1^^^ja      short loc_481B8D^^^cdqe^^^xor     r9d, r9d^^^cmp     rax, rcx^^^setl    r9b^^^sub     edx, 1^^^mov     rcx, [rsp+rcx*8+1128h+var_10B8]^^^lea     rdi, [rsp+1128h+var_48]^^^movsxd  rsi, edx^^^mov     edx, [rsp+1128h+var_10C0]^^^call    round_and_return_1^^^jmp     loc_48086E^^^jnz     loc_482225^^^test    r10d, r10d^^^mov     eax, r10d^^^jle     short loc_481BDB^^^sub     eax, 1^^^nop^^^movsxd  rdx, eax^^^mov     rcx, [rsp+rdx*8+1128h+var_10B8]^^^lea     edx, [rax+1]^^^sub     eax, 1^^^cmp     eax, 0FFFFFFFFh^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+1128h+var_10B8], rcx^^^jnz     short loc_481BC0^^^mov     [rsp+1128h+var_10B8], 0^^^mov     [rsp+r10*8+1128h+var_898], 0^^^mov     rcx, [rsp+r10*8+1128h+var_10B8]^^^mov     dword ptr [rsp+1128h+var_10F0], 0^^^jmp     loc_480E85^^^mov     rax, 1FFFFFFFFFFFEFF0h^^^cmp     r15, rax^^^ja      loc_48253C^^^lea     rbp, ds:403Dh[r15*4]^^^jmp     loc_480782^^^mov     r14, [rsp+1128h+var_10B0]^^^mov     r13, [rsp+1128h+var_10B8]^^^xor     r15d, r15d^^^lea     r11, [rsp+1128h+var_48]^^^jmp     loc_48186C^^^jle     loc_481D5E^^^mov     ebp, 40h^^^mov     r10, r15^^^lea     r11, [rsp+1128h+var_48]^^^mov     r9d, ebp^^^sub     r9d, dword ptr [rsp+1128h+var_1100]^^^mov     dword ptr [rsp+1128h+var_10F0], r9d^^^jz      short loc_481CA0^^^mov     ecx, r9d^^^mov     rsi, r11^^^mov     rdi, r11^^^mov     edx, 1^^^mov     [rsp+1128h+var_1118], r11^^^mov     [rsp+1128h+var_1110], r15^^^call    __mpn_lshift^^^mov     ecx, ebp^^^sub     ecx, dword ptr [rsp+1128h+var_10F0]^^^mov     rax, rbx^^^mov     r11, [rsp+1128h+var_1118]^^^mov     r10, [rsp+1128h+var_1110]^^^shr     rax, cl^^^or      [rsp+1128h+var_48], rax^^^mov     rax, [rsp+1128h+var_58]^^^jmp     loc_480FF3^^^sub     [rsp+1128h+var_58], 40h^^^cmp     dword ptr [rsp+1128h+var_1100], 40h^^^mov     [rsp+1128h+var_48], rbx^^^jle     loc_480EB1^^^mov     r10, r15^^^lea     r11, [rsp+1128h+var_48]^^^jmp     short loc_481CA0^^^jle     loc_481DAD^^^mov     ebp, 40h^^^mov     dword ptr [rsp+1128h+var_1100], r9d^^^mov     r14, r8^^^mov     r15d, ebp^^^sub     r15d, r9d^^^jz      short loc_481D2B^^^mov     ecx, r15d^^^mov     rsi, r11^^^mov     rdi, r11^^^mov     edx, 1^^^mov     [rsp+1128h+var_1118], r11^^^call    __mpn_lshift^^^mov     ecx, ebp^^^mov     rax, rbx^^^mov     r11, [rsp+1128h+var_1118]^^^sub     ecx, r15d^^^shr     rax, cl^^^or      [rsp+1128h+var_48], rax^^^mov     rax, [rsp+1128h+var_58]^^^jmp     loc_481921^^^add     r8, r13^^^jnb     short loc_481D90^^^sub     r8, r12^^^mov     r13, rcx^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^add     r13, r12^^^adc     r8, 0^^^jmp     loc_4818C8^^^mov     [rsp+1128h+var_48], rbx^^^add     dword ptr [rsp+1128h+var_1100], 40h^^^jmp     loc_480EB1^^^sub     [rsp+1128h+var_58], 40h^^^cmp     r9d, 40h^^^mov     [rsp+1128h+var_48], rbx^^^jle     loc_481881^^^mov     r14, r8^^^jmp     short loc_481D2B^^^xor     eax, eax^^^test    r12, r12^^^mov     rdx, r12^^^setnz   al^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^sub     rdx, rax^^^mov     rax, rdi^^^jmp     loc_4818A0^^^mov     [rsp+1128h+var_48], rbx^^^add     r9d, 40h^^^jmp     loc_481881^^^shr     rdx, 2^^^jmp     loc_480A9B^^^mov     edx, [rsp+1128h+var_10C0]^^^lea     rdi, [rsp+1128h+var_48]^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^call    round_and_return_1^^^jmp     loc_48086E^^^mov     ecx, 3^^^mov     rdi, r9^^^mov     r8d, 3Fh^^^sub     ecx, eax^^^shr     rdi, cl^^^mov     rcx, rdi^^^lea     rdi, [rsp+1128h+var_48]^^^or      rcx, rdx^^^mov     edx, [rsp+1128h+var_10C0]^^^mov     [rsp+1128h+var_48], rcx^^^lea     ecx, [rax+3Dh]^^^shl     r9, cl^^^mov     rcx, r9^^^mov     r9d, 1^^^call    round_and_return_1^^^jmp     loc_48086E^^^sub     eax, 30h^^^cdqe^^^cmp     rax, [rsp+1128h+var_1100]^^^jle     loc_4807F0^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_481EBD^^^mov     r14d, dword ptr [rsp+1128h+var_10F0]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^test    r14d, r14d^^^mov     dword ptr fs:[rax], 22h^^^jnz     short loc_481EBD^^^mov     r12d, [rsp+1128h+var_10C0]^^^test    r12d, r12d^^^jz      loc_481F43^^^fld     cs:dword_4B27C4^^^add     rdi, 1^^^movzx   eax, byte ptr [rdi]^^^sub     eax, 30h^^^cmp     al, 9^^^jbe     short loc_481E6D^^^test    r11, r11^^^jz      loc_48086E^^^mov     [r11], rdi^^^jmp     loc_48086E^^^movzx   eax, byte ptr [r12]^^^jmp     loc_48065F^^^mov     r10d, [rsp+1128h+var_10C0]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^test    r10d, r10d^^^mov     dword ptr fs:[rax], 22h^^^jz      loc_4814EB^^^fld     cs:dword_4B27C4^^^jmp     loc_48086E^^^mov     r13d, [rsp+1128h+var_10C0]^^^fldz^^^test    r13d, r13d^^^jz      short loc_481E6D^^^fchs^^^jmp     short loc_481E6D^^^cmp     rbx, r14^^^jz      loc_4808D0^^^xor     r15d, r15d^^^cmp     r9b, 70h^^^mov     r13, r14^^^jz      loc_480632^^^jmp     loc_4808D0^^^mov     r9d, 1^^^jmp     loc_48193F^^^movsxd  rax, r9d^^^mov     rcx, 7FFFFFFFFFFFFFFFh^^^sub     rcx, rax^^^lea     rax, [rcx+4]^^^add     rcx, 1^^^cmovns  rax, rcx^^^sar     rax, 2^^^jmp     loc_48131D^^^sub     r8, 1^^^cmp     rsi, rax^^^jg      loc_481FD8^^^mov     rdi, [rsp+rax*8+1128h+var_10B8]^^^mov     ecx, r10d^^^shr     rdi, cl^^^mov     rcx, rax^^^mov     [rsp+1128h+var_48], rdi^^^jmp     loc_481B53^^^fld     cs:dword_4B27C0^^^jmp     loc_481E6D^^^mov     rdi, rax^^^xor     ecx, ecx^^^xor     r15d, r15d^^^jmp     loc_4809EF^^^mov     rsi, [r8+70h]^^^mov     rbp, rcx^^^jmp     short loc_481F6B^^^mov     rbp, r12^^^movzx   eax, byte ptr [rbp+1]^^^lea     r12, [rbp+1]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_481F68^^^movsx   rdx, al^^^mov     edx, [rsi+rdx*4]^^^sub     edx, 61h^^^cmp     dl, 19h^^^jbe     short loc_481F68^^^cmp     al, 5Fh^^^jz      short loc_481F68^^^cmp     al, 29h^^^jnz     loc_48146B^^^lea     rdi, [rbx+4]^^^lea     rsi, [rsp+1128h+var_40]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     [rsp+1128h+var_1118], r11^^^call    ____strtoull_l_internal^^^cmp     [rsp+1128h+var_40], r12^^^mov     r11, [rsp+1128h+var_1118]^^^jz      loc_4824C4^^^fld     cs:dword_4B27C8^^^lea     rcx, [rbp+2]^^^jmp     loc_481471^^^lea     r13, [rax+1]^^^mov     rdi, [rsp+rax*8+1128h+var_10B8]^^^mov     r11d, 40h^^^sub     ecx, 1^^^sub     r11d, r10d^^^mov     rbp, rax^^^mov     r12, r13^^^mov     dword ptr [rsp+1128h+var_10F8], ecx^^^mov     ecx, r10d^^^add     r9d, 1^^^sub     rbp, rax^^^shr     rdi, cl^^^movsxd  rcx, r9d^^^mov     [rsp+1128h+var_10E8], rbp^^^mov     [rsp+1128h+var_1100], rdi^^^mov     rdi, [rsp+rcx*8+1128h+var_10B8]^^^mov     ecx, r11d^^^mov     rbp, rdi^^^shl     rbp, cl^^^mov     rcx, [rsp+1128h+var_1100]^^^or      rbp, rcx^^^mov     rcx, [rsp+1128h+var_10E8]^^^mov     [rsp+rcx*8+1128h+var_48], rbp^^^mov     rbp, r12^^^add     r12, 1^^^cmp     r9d, dword ptr [rsp+1128h+var_10F8]^^^jnz     short loc_481FF7^^^mov     rcx, rax^^^not     rcx^^^add     rsi, rcx^^^add     r13, rsi^^^sub     r13, rax^^^test    r13, r13^^^jle     loc_481F2D^^^mov     rcx, rax^^^jmp     loc_481B53^^^lea     r11, [rsp+1128h+var_48]^^^lea     rdx, ds:0[r12*8]^^^mov     rsi, r15^^^mov     rdi, r11^^^call    memcpy^^^jmp     loc_480B34^^^mov     edx, 40h^^^sub     edx, dword ptr [rsp+1128h+var_1100]^^^mov     dword ptr [rsp+1128h+var_10F0], edx^^^jz      loc_480DCF^^^lea     r11, [rsp+1128h+var_48]^^^mov     ecx, edx^^^mov     edx, 1^^^mov     [rsp+1128h+var_1110], r10^^^mov     rsi, r11^^^mov     rdi, r11^^^call    __mpn_lshift^^^mov     rax, [rsp+1128h+var_68]^^^mov     r10, [rsp+1128h+var_1110]^^^jmp     loc_480DCF^^^sub     [rsp+1128h+var_58], rdx^^^mov     dword ptr [rsp+1128h+var_10F0], 0^^^jmp     loc_480DD8^^^mov     rdi, [rsp+1128h+var_10E0]^^^lea     rdx, ds:0[r10*8]^^^mov     rsi, r15^^^mov     [rsp+1128h+var_1110], r10^^^call    memcpy^^^mov     r10, [rsp+1128h+var_1110]^^^jmp     loc_480C6D^^^mov     r10d, 1EDh^^^mov     ebp, 1345h^^^jmp     loc_4807A3^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_4821BA^^^mov     rax, 1FFFFFFFFFFFEFFFh^^^cmp     rcx, rax^^^ja      short loc_4821A1^^^lea     rbp, ds:4003h[rcx*4]^^^jmp     loc_480782^^^mov     rax, [rsp+1128h+var_58]^^^xor     ebx, ebx^^^lea     r11, [rsp+1128h+var_48]^^^jmp     loc_480FF3^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 670h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aCy0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 3FAh^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zeroBase1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 42Bh^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aInt_noUintma_1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 368h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zeroUin_3^^^call    __assert_fail^^^mov     r10d, 666h^^^mov     ebp, 4003h^^^jmp     loc_4807A3^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 388h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zeroUin_4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 35Ch^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zero0Int_^^^call    __assert_fail^^^xor     edi, edi^^^jmp     loc_480E58^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 621h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aEmpty1^^^call    __assert_fail^^^mov     dword ptr [rsp+1128h+var_1100], esi^^^jmp     loc_481CB9^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 646h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aNumsizeDensize^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 3FEh^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zeroBas_0^^^call    __assert_fail^^^sub     r14, 1^^^cmp     byte ptr [rsp+1128h+var_10D8], 0^^^cmovz   r14, [rsp+1128h+var_1100]^^^mov     [rsp+1128h+var_1100], r14^^^mov     rdi, r14^^^jmp     loc_48091C^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_4814DD^^^mov     r9, [rsp+1128h+var_10F8]^^^movzx   esi, byte ptr [r9]^^^test    sil, sil^^^jz      short loc_4822E5^^^cmp     sil, cl^^^jnz     loc_480656^^^mov     ecx, 1^^^mov     rdi, [rsp+1128h+var_10F8]^^^movzx   esi, byte ptr [rdi+rcx]^^^test    sil, sil^^^jz      short loc_4822D9^^^add     rcx, 1^^^cmp     sil, [r13+rcx-1]^^^jz      short loc_4822A2^^^jmp     loc_480656^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 202h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aDecimal_len0^^^call    __assert_fail^^^sub     rcx, 1^^^add     r13, rcx^^^jmp     loc_480898^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_4822DD^^^mov     rcx, [rax+50h]^^^movzx   edx, byte ptr [rcx]^^^mov     [rsp+1128h+var_10F0], rcx^^^sub     edx, 1^^^cmp     dl, 7Dh^^^ja      loc_4804E8^^^mov     rdx, [rax+48h]^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+1128h+var_10F8], rdx^^^jz      loc_4804E8^^^jmp     loc_4804FA^^^mov     r9, [rsp+1128h+var_10F8]^^^mov     r14, rbx^^^movzx   esi, byte ptr [r9]^^^cmp     bpl, 30h^^^jz      short loc_482369^^^test    sil, sil^^^jz      short loc_482396^^^cmp     sil, bpl^^^jnz     loc_480618^^^mov     ecx, 1^^^jmp     short loc_482353^^^add     rcx, 1^^^cmp     dil, [r14+rcx-1]^^^jnz     short loc_48238F^^^mov     r9, [rsp+1128h+var_10F8]^^^movzx   edi, byte ptr [r9+rcx]^^^test    dil, dil^^^jnz     short loc_482348^^^sub     rcx, 1^^^add     r14, rcx^^^movzx   ebp, byte ptr [r14+1]^^^add     r14, 1^^^mov     ecx, ebp^^^jmp     short loc_482329^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 335h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aDig_noUintmax_^^^call    __assert_fail^^^mov     ecx, esi^^^jmp     loc_480618^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_482366^^^mov     ebp, 1^^^lea     r11, [rsp+1128h+var_48]^^^lea     rdx, ds:0[r12*8]^^^mov     rax, rbp^^^mov     rsi, r15^^^sub     rax, r12^^^mov     [rsp+1128h+var_1118], r11^^^lea     rdi, [r11+rax*8]^^^call    memcpy^^^sub     rbp, [rsp+1128h+var_68]^^^mov     r11, [rsp+1128h+var_1118]^^^test    rbp, rbp^^^jle     loc_4817C7^^^mov     rcx, rbp^^^shr     rcx, 1^^^cmp     rbp, 3^^^lea     rax, [rcx+rcx]^^^jbe     short loc_48244A^^^test    rax, rax^^^jz      short loc_48244A^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rdx, rcx^^^movdqa  xmmword ptr [r11+rsi], xmm0^^^jb      short loc_4823FC^^^cmp     rbp, rax^^^jz      loc_4817C7^^^mov     qword ptr [r11+rax*8], 0^^^add     rax, 1^^^cmp     rax, rbp^^^jl      short loc_48241B^^^jmp     loc_4817C7^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 374h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aInt_noUintma_4^^^call    __assert_fail^^^xor     eax, eax^^^jmp     short loc_48241B^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 573h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aNumsize1ND^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 37Ch^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aLead_zero0In_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 416h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aBits0^^^call    __assert_fail^^^sub     rcx, 40h^^^xor     r15d, r15d^^^lea     r11, [rsp+1128h+var_48]^^^mov     [rsp+1128h+var_58], rcx^^^jmp     loc_48185B^^^mov     esi, r11d^^^jmp     loc_481A99^^^xor     eax, eax^^^jmp     loc_481B76^^^mov     rdx, 0C000000000000000h^^^mov     rsi, 7FFFFFFFFFFFFFFFh^^^mov     dword ptr [rsp+1128h+var_78+8], 7FFFh^^^mov     qword ptr [rsp+1128h+var_78], rdx^^^xor     edx, edx^^^test    rax, rsi^^^mov     ecx, 0C0000000h^^^jz      short loc_482506^^^mov     rcx, rax^^^mov     edx, eax^^^shr     rcx, 20h^^^or      ecx, 80000000h^^^mov     dword ptr [rsp+1128h+var_78+4], ecx^^^mov     dword ptr [rsp+1128h+var_78], edx^^^fld     [rsp+1128h+var_78]^^^jmp     loc_481FC9^^^xor     eax, eax^^^jmp     loc_4817B6^^^mov     r14, r13^^^mov     rax, [rsp+1128h+var_58]^^^xor     ebx, ebx^^^xor     r13d, r13d^^^jmp     loc_481921^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 354h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aInt_noUintma_5^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529_0^^^mov     edx, 50Ch^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aDig_noInt_noEx^^^call    __assert_fail^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_48091F^^^
sub_40F03D$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 2^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_L_unlock_698$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42B984^^^
__cxa_atexit$$$push    r12^^^xor     eax, eax^^^push    rbp^^^mov     rbp, rsi^^^mov     esi, 1^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_401C5E^^^lock cmpxchg cs:lock, esi^^^jnz     _L_lock_50^^^jmp     short loc_401C6B^^^cmpxchg cs:lock, esi^^^jnz     _L_lock_50^^^mov     r12, cs:__exit_funcs^^^xor     eax, eax^^^test    r12, r12^^^mov     r8, r12^^^jz      loc_401D90^^^mov     rsi, [r8+8]^^^test    rsi, rsi^^^jz      short loc_401CC7^^^lea     rcx, [rsi-1]^^^mov     rdi, rcx^^^shl     rdi, 5^^^cmp     qword ptr [r8+rdi+10h], 0^^^jnz     short loc_401CE3^^^shl     rsi, 5^^^lea     rsi, [r8+rsi-30h]^^^jmp     short loc_401CC2^^^sub     rsi, 20h^^^lea     rdi, [rcx-1]^^^cmp     qword ptr [rsi+20h], 0^^^jnz     short loc_401CF0^^^mov     rcx, rdi^^^test    rcx, rcx^^^jnz     short loc_401CB0^^^mov     rcx, [r8]^^^mov     qword ptr [r8+8], 0^^^test    rcx, rcx^^^jz      loc_401D93^^^mov     rax, r8^^^mov     r8, rcx^^^jmp     short loc_401C80^^^mov     rcx, rsi^^^nop     word ptr [rax+rax+00000000h]^^^cmp     rcx, 20h^^^jz      loc_401D78^^^mov     rax, rcx^^^add     rcx, 1^^^shl     rax, 5^^^mov     [r8+8], rcx^^^lea     rsi, [r8+rax+10h]^^^mov     qword ptr [rsi], 1^^^add     cs:__new_exitfn_called, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_401D35^^^lock dec cs:lock^^^jnz     _L_unlock_164^^^jmp     short loc_401D41^^^dec     cs:lock^^^jnz     _L_unlock_164^^^test    rsi, rsi^^^jz      loc_401DD1^^^xor     rbx, fs:30h^^^rol     rbx, 11h^^^mov     [rsi+10h], rbp^^^mov     [rsi+8], rbx^^^mov     [rsi+18h], rdx^^^xor     eax, eax^^^mov     qword ptr [rsi], 4^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^xor     ecx, ecx^^^test    rax, rax^^^jz      short loc_401D9D^^^lea     rsi, [rax+10h]^^^mov     qword ptr [rax+8], 1^^^jmp     loc_401D0E^^^xor     r8d, r8d^^^mov     rax, r8^^^mov     ecx, 1^^^jmp     short loc_401D7A^^^test    cl, cl^^^jnz     short loc_401DD8^^^mov     esi, 410h^^^mov     edi, 1^^^mov     [rsp+28h+var_20], rdx^^^call    calloc^^^xor     esi, esi^^^test    rax, rax^^^mov     rdx, [rsp+28h+var_20]^^^jz      loc_401D1D^^^mov     [rax], r12^^^mov     cs:__exit_funcs, rax^^^jmp     short loc_401D7F^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_401D6C^^^mov     ecx, offset __PRETTY_FUNCTION___9516^^^mov     edx, 64h^^^mov     esi, offset aCxa_atexit_c^^^mov     edi, offset aLVoid0^^^call    __assert_fail^^^
_L_unlock_12750$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4087DE^^^
__tzfile_read$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rsi^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 128h^^^test    rdi, rdi^^^mov     r13d, cs:__use_tzfile^^^mov     [rbp+var_108], rdx^^^mov     cs:__use_tzfile, 0^^^jz      loc_448288^^^movzx   r14d, byte ptr [rdi]^^^test    r14b, r14b^^^jnz     short loc_447FC0^^^mov     rdi, cs:transitions^^^call    free^^^mov     cs:transitions, 0^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jz      short loc_447FF0^^^cmp     r14b, 2Fh^^^jz      loc_448238^^^mov     esi, offset unk_49D719^^^mov     rdi, rbx^^^call    sub_400360^^^test    rax, rax^^^jnz     short loc_447F94^^^nop     word ptr [rax+rax+00000000h]^^^cmp     r14b, 2Fh^^^jz      loc_44809C^^^mov     edi, offset aTzdir^^^call    getenv^^^test    rax, rax^^^jz      loc_448270^^^cmp     byte ptr [rax], 0^^^jz      loc_448270^^^mov     rdi, rax^^^mov     [rbp+var_148], rax^^^call    strlen^^^mov     rsi, [rbp+var_148]^^^lea     r14d, [rax+1]^^^mov     edx, eax^^^mov     rdi, rbx^^^mov     [rbp+var_140], rdx^^^mov     [rbp+var_148], rsi^^^call    strlen^^^lea     ecx, [rax+1]^^^mov     rdx, [rbp+var_140]^^^mov     rsi, [rbp+var_148]^^^add     r14d, ecx^^^mov     dword ptr [rbp+var_128], ecx^^^add     r14, 1Eh^^^shr     r14, 4^^^shl     r14, 4^^^sub     rsp, r14^^^lea     r14, [rsp+150h+var_148+7]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r14^^^call    mempcpy^^^mov     byte ptr [rax], 2Fh^^^mov     ecx, dword ptr [rbp+var_128]^^^lea     rdi, [rax+1]^^^mov     rsi, rbx^^^mov     rbx, r14^^^mov     edx, ecx^^^call    memcpy^^^test    r13d, r13d^^^jz      short loc_4480D0^^^lea     rdx, [rbp+var_100]^^^mov     rsi, rbx^^^mov     edi, 1^^^call    _xstat^^^test    eax, eax^^^jnz     short loc_4480D0^^^mov     rax, cs:tzfile_ino^^^cmp     [rbp+var_F8], rax^^^jz      loc_4482A0^^^nop     dword ptr [rax]^^^mov     rdi, rbx^^^mov     esi, offset aRce^^^call    fopen64^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_447F94^^^mov     rdi, rax^^^call    fileno_unlocked^^^lea     rdx, [rbp+var_100]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^jnz     loc_448224^^^mov     rdi, cs:transitions^^^mov     r14d, 4^^^call    free^^^mov     rax, [rbp+var_100]^^^mov     cs:transitions, 0^^^mov     cs:tzfile_dev, rax^^^mov     rax, [rbp+var_F8]^^^mov     cs:tzfile_ino, rax^^^mov     rax, [rbp+var_A8]^^^or      dword ptr [rbx], 8000h^^^mov     cs:tzfile_mtime, rax^^^jmp     short loc_448163^^^mov     r14b, 8^^^lea     rdi, [rbp+var_70]^^^mov     rcx, rbx^^^mov     edx, 1^^^mov     esi, 2Ch^^^call    fread_unlocked^^^cmp     rax, 1^^^jnz     loc_448224^^^lea     rdi, [rbp+var_70]^^^mov     edx, 4^^^mov     esi, offset aTzif^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_448224^^^mov     eax, [rbp+var_50]^^^mov     esi, [rbp+var_54]^^^bswap   eax^^^bswap   esi^^^movsxd  rdx, eax^^^movsxd  rsi, esi^^^mov     eax, [rbp+var_4C]^^^bswap   eax^^^movsxd  rcx, eax^^^mov     eax, [rbp+var_48]^^^mov     cs:num_transitions, rdx^^^bswap   eax^^^movsxd  r13, eax^^^mov     eax, [rbp+var_58]^^^mov     cs:num_types, rcx^^^bswap   eax^^^movsxd  rdi, eax^^^mov     eax, [rbp+var_5C]^^^mov     cs:num_leaps, rsi^^^bswap   eax^^^cmp     r14d, 4^^^cdqe^^^jnz     loc_4482E0^^^cmp     [rbp+var_6C], 0^^^jz      loc_4482E0^^^add     r13, rdi^^^lea     rdx, [rdx+rdx*4]^^^mov     rdi, rbx^^^add     rax, r13^^^add     rax, rdx^^^lea     rdx, [rcx+rcx*2]^^^lea     rax, [rax+rdx*2]^^^mov     edx, 1^^^lea     rsi, [rax+rsi*8]^^^call    fseek^^^test    eax, eax^^^jz      loc_448160^^^mov     rdi, rbx^^^call    fclose^^^jmp     loc_447F94^^^mov     edx, 0Fh^^^mov     esi, offset byte_49D6F5^^^call    sub_400370^^^test    eax, eax^^^jz      loc_447FD4^^^mov     edx, 13h^^^mov     esi, offset default_tzdir_5686^^^mov     rdi, rbx^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_447F94^^^jmp     loc_447FD4^^^mov     edx, 13h^^^mov     r14d, 14h^^^mov     esi, offset default_tzdir_5686^^^jmp     loc_448032^^^movzx   r14d, cs:byte_49D6F5^^^mov     ebx, offset byte_49D6F5^^^jmp     loc_447FF0^^^mov     rdx, cs:tzfile_dev^^^cmp     [rbp+var_100], rdx^^^jnz     loc_4480D0^^^mov     rcx, cs:tzfile_mtime^^^cmp     [rbp+var_A8], rcx^^^jnz     loc_4480D0^^^nop     dword ptr [rax+rax+00000000h]^^^mov     cs:__use_tzfile, 1^^^jmp     loc_447FAB^^^mov     [rbp+var_120], rax^^^mov     rax, 1C71C71C71C71C70h^^^mov     [rbp+var_118], rdi^^^cmp     rdx, rax^^^ja      loc_448224^^^lea     r8, [rdx+rdx*8+7]^^^and     r8, 0FFFFFFFFFFFFFFF8h^^^mov     rax, r8^^^not     rax^^^shr     rax, 4^^^cmp     rax, rcx^^^jb      loc_448224^^^mov     r9, rcx^^^shl     r9, 4^^^add     r9, r8^^^mov     rax, r9^^^not     rax^^^cmp     rax, r13^^^jb      loc_448224^^^add     r9, r13^^^cmp     r9, 0FFFFFFFFFFFFFFF8h^^^ja      loc_448224^^^add     r9, 7^^^and     r9, 0FFFFFFFFFFFFFFF8h^^^mov     rax, r9^^^not     rax^^^shr     rax, 4^^^cmp     rax, rsi^^^jb      loc_448224^^^mov     r10, rsi^^^shl     r10, 4^^^add     r10, r9^^^cmp     r14d, 8^^^jz      loc_448B47^^^mov     rax, r10^^^mov     [rbp+var_110], 0^^^not     rax^^^sub     rax, [rbp+var_110]^^^cmp     rax, r15^^^jb      loc_448224^^^lea     rdi, [r10+r15]^^^add     rdi, [rbp+var_110]^^^mov     [rbp+var_140], rdx^^^mov     [rbp+var_128], rcx^^^mov     [rbp+var_148], rsi^^^mov     [rbp+var_130], r8^^^mov     [rbp+var_138], r9^^^call    malloc^^^test    rax, rax^^^mov     cs:transitions, rax^^^mov     rdx, [rbp+var_140]^^^mov     rcx, [rbp+var_128]^^^mov     rsi, [rbp+var_148]^^^mov     r8, [rbp+var_130]^^^mov     r9, [rbp+var_138]^^^jz      loc_448224^^^add     r8, rax^^^shl     rcx, 4^^^lea     rdi, [rax+rdx*8]^^^add     rcx, r8^^^add     r9, rax^^^mov     cs:types, r8^^^mov     cs:zone_names, rcx^^^xor     ecx, ecx^^^cmp     r14d, 8^^^mov     cs:type_idxs, rdi^^^mov     cs:leaps, r9^^^jz      loc_448AE0^^^test    r15, r15^^^mov     cs:tzspec, rcx^^^jz      short loc_44844F^^^mov     rcx, [rbp+var_108]^^^shl     rsi, 4^^^add     r9, rsi^^^mov     [rcx], r9^^^cmp     r14d, 8^^^mov     rcx, rbx^^^jnz     loc_448DD7^^^mov     esi, 9^^^mov     rdi, rax^^^call    fread_unlocked^^^mov     rdx, cs:num_transitions^^^cmp     rax, rdx^^^jnz     loc_448224^^^test    rdx, rdx^^^mov     rsi, cs:num_types^^^jz      short loc_4484BE^^^mov     rdi, cs:type_idxs^^^mov     rsi, cs:num_types^^^movzx   eax, byte ptr [rdi]^^^cmp     rsi, rax^^^jbe     loc_448224^^^xor     eax, eax^^^jmp     short loc_4484B5^^^movzx   ecx, byte ptr [rdi+rax]^^^cmp     rcx, rsi^^^jnb     loc_448224^^^add     rax, 1^^^cmp     rax, rdx^^^jnz     short loc_4484A8^^^cmp     r14d, 4^^^jz      loc_448AB5^^^xor     eax, eax^^^test    rdx, rdx^^^mov     rdi, cs:transitions^^^jz      short loc_4484F4^^^nop     word ptr [rax+rax+00000000h]^^^mov     rcx, [rdi+rax*8]^^^bswap   rcx^^^mov     [rdi+rax*8], rcx^^^add     rax, 1^^^cmp     rax, rdx^^^jnz     short loc_4484E0^^^xor     edx, edx^^^test    rsi, rsi^^^jz      loc_448607^^^mov     eax, r12d^^^mov     r12, rdx^^^mov     edx, eax^^^nop     word ptr [rax+rax+00000000h]^^^mov     rsi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^cmp     rsi, rcx^^^jnb     loc_448CF9^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^cmp     rcx, rsi^^^mov     dl, al^^^jbe     loc_448CCF^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^cmp     rcx, rsi^^^mov     dh, al^^^jbe     loc_448CA5^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^movzx   eax, al^^^mov     r15d, edx^^^shl     eax, 10h^^^and     r15d, 0FF00FFFFh^^^or      r15d, eax^^^cmp     rcx, rsi^^^jbe     loc_448C87^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^shl     eax, 18h^^^and     r15d, 0FFFFFFh^^^or      r15d, eax^^^cmp     rsi, rcx^^^mov     edx, r15d^^^jnb     loc_448DBE^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^cmp     eax, 1^^^ja      loc_448224^^^mov     rsi, cs:types^^^mov     rcx, r12^^^shl     rcx, 4^^^mov     [rsi+rcx+8], al^^^mov     rsi, [rbx+8]^^^cmp     rsi, [rbx+10h]^^^jnb     loc_448D97^^^movzx   eax, byte ptr [rsi]^^^add     rsi, 1^^^mov     [rbx+8], rsi^^^movsxd  rsi, eax^^^cmp     rsi, r13^^^ja      loc_448224^^^add     rcx, cs:types^^^add     r12, 1^^^bswap   r15d^^^cmp     cs:num_types, r12^^^movsxd  r15, r15d^^^mov     [rcx+9], al^^^mov     [rcx], r15^^^ja      loc_448510^^^mov     rdi, cs:zone_names^^^mov     rcx, rbx^^^mov     rdx, r13^^^mov     esi, 1^^^call    fread_unlocked^^^cmp     rax, r13^^^jnz     loc_448224^^^cmp     cs:num_leaps, 0^^^jz      loc_448737^^^movsxd  rax, r14d^^^mov     [rbp+var_108], r13^^^xor     r12d, r12d^^^xor     r15d, r15d^^^mov     r13, rax^^^jmp     loc_4486EA^^^mov     rdx, cs:leaps^^^mov     rax, [rbp+var_40]^^^bswap   rax^^^mov     [rdx+r12], rax^^^mov     rdx, [rbx+8]^^^mov     rcx, [rbx+10h]^^^cmp     rdx, rcx^^^jnb     loc_448D79^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^cmp     rdx, rcx^^^mov     byte ptr [rbp+var_40], al^^^jnb     loc_448D5B^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^cmp     rcx, rdx^^^mov     byte ptr [rbp+var_40+1], al^^^jbe     loc_448D39^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^cmp     rdx, rcx^^^mov     byte ptr [rbp+var_40+2], al^^^jnb     loc_448D23^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^mov     rdx, cs:leaps^^^mov     byte ptr [rbp+var_40+3], al^^^add     r15, 1^^^mov     eax, dword ptr [rbp+var_40]^^^bswap   eax^^^cdqe^^^mov     [rdx+r12+8], rax^^^add     r12, 10h^^^cmp     cs:num_leaps, r15^^^jbe     short loc_448730^^^lea     rdi, [rbp+var_40]^^^mov     rcx, rbx^^^mov     rdx, r13^^^mov     esi, 1^^^call    fread_unlocked^^^cmp     rax, r13^^^jnz     loc_448224^^^cmp     r14d, 4^^^jnz     loc_448650^^^mov     rdx, cs:leaps^^^mov     eax, dword ptr [rbp+var_40]^^^bswap   eax^^^cdqe^^^mov     [rdx+r12], rax^^^jmp     loc_448662^^^mov     r13, [rbp+var_108]^^^xor     r12d, r12d^^^cmp     [rbp+var_118], 0^^^jz      short loc_448786^^^mov     r14, [rbp+var_118]^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, [rbx+8]^^^cmp     rdx, [rbx+10h]^^^jnb     loc_448E40^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^mov     rdx, r12^^^shl     rdx, 4^^^add     rdx, cs:types^^^test    eax, eax^^^setnz   byte ptr [rdx+0Ah]^^^add     r12, 1^^^cmp     r12, r14^^^jnz     short loc_448750^^^mov     rdx, cs:num_types^^^cmp     rdx, r12^^^jbe     short loc_4487B8^^^mov     rax, r12^^^shl     rax, 4^^^add     rax, cs:types^^^add     rax, 0Ah^^^nop     dword ptr [rax+00h]^^^add     r12, 1^^^mov     byte ptr [rax], 0^^^add     rax, 10h^^^cmp     r12, rdx^^^jb      short loc_4487A8^^^xor     r12d, r12d^^^cmp     [rbp+var_120], 0^^^jz      short loc_44880D^^^mov     r14, [rbp+var_120]^^^nop     dword ptr [rax+00h]^^^mov     rdx, [rbx+8]^^^cmp     rdx, [rbx+10h]^^^jnb     loc_448E2A^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^mov     rdx, r12^^^shl     rdx, 4^^^add     rdx, cs:types^^^test    eax, eax^^^setnz   byte ptr [rdx+0Bh]^^^add     r12, 1^^^cmp     r12, r14^^^jnz     short loc_4487D0^^^mov     rdx, cs:num_types^^^cmp     r12, rdx^^^jnb     short loc_448838^^^mov     rax, r12^^^shl     rax, 4^^^add     rax, cs:types^^^add     rax, 0Bh^^^nop     dword ptr [rax+00h]^^^add     r12, 1^^^mov     byte ptr [rax], 0^^^add     rax, 10h^^^cmp     r12, rdx^^^jb      short loc_448828^^^cmp     cs:tzspec, 0^^^jz      short loc_44886F^^^mov     rdx, [rbx+8]^^^cmp     rdx, [rbx+10h]^^^jnb     loc_448E1D^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^cmp     eax, 0Ah^^^jz      loc_448AF2^^^mov     cs:tzspec, 0^^^mov     rdi, rbx^^^call    fclose^^^cmp     cs:num_types, 0^^^jz      short loc_4488B3^^^xor     ebx, ebx^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, rbx^^^add     rbx, 1^^^shl     rax, 4^^^add     rax, cs:types^^^movzx   edi, byte ptr [rax+9]^^^add     rdi, cs:zone_names^^^call    __tzstring^^^cmp     cs:num_types, rbx^^^ja      short loc_448888^^^mov     rbx, cs:num_transitions^^^mov     cs:tzname, 0^^^mov     cs:off_6C3298, 0^^^test    rbx, rbx^^^jz      loc_448C48^^^mov     r15d, 1^^^jmp     short loc_4488ED^^^test    rbx, rbx^^^jz      short loc_448948^^^mov     rax, cs:type_idxs^^^sub     rbx, 1^^^movzx   eax, byte ptr [rax+rbx]^^^shl     rax, 4^^^add     rax, cs:types^^^movzx   r12d, byte ptr [rax+8]^^^movsxd  r14, r12d^^^cmp     tzname[r14*8], 0^^^jnz     short loc_4488E8^^^movzx   edi, byte ptr [rax+9]^^^add     rdi, cs:zone_names^^^call    __tzstring^^^mov     tzname[r14*8], rax^^^mov     eax, r15d^^^sub     eax, r12d^^^cdqe^^^cmp     tzname[rax*8], 0^^^jz      short loc_4488E8^^^nop     dword ptr [rax]^^^mov     rax, cs:tzname^^^test    rax, rax^^^jz      loc_448C48^^^cmp     cs:off_6C3298, 0^^^jz      loc_448C6E^^^mov     rdx, cs:zone_names^^^mov     rcx, cs:__tzname_cur_max^^^add     r13, rdx^^^nop     word ptr [rax+rax+00000000h]^^^cmp     byte ptr [rdx], 0^^^mov     rax, rdx^^^jz      short loc_4489AE^^^nop     dword ptr [rax+rax+00000000h]^^^add     rax, 1^^^cmp     byte ptr [rax], 0^^^jnz     short loc_448990^^^mov     rsi, rax^^^sub     rsi, rdx^^^cmp     rcx, rsi^^^jnb     short loc_4489AE^^^mov     cs:__tzname_cur_max, rsi^^^mov     rcx, rsi^^^lea     rdx, [rax+1]^^^cmp     r13, rdx^^^ja      short loc_448980^^^mov     rax, cs:num_transitions^^^test    rax, rax^^^jnz     short loc_4489F2^^^mov     rax, cs:types^^^xor     edx, edx^^^mov     rax, [rax]^^^mov     cs:rule_dstoff, rax^^^mov     cs:rule_stdoff, rax^^^neg     rax^^^mov     cs:daylight, edx^^^mov     cs:timezone, rax^^^jmp     loc_4482D0^^^mov     cs:rule_dstoff, 0^^^mov     cs:rule_stdoff, 0^^^xor     r10d, r10d^^^mov     r8, cs:types^^^mov     rdi, cs:type_idxs^^^xor     r9d, r9d^^^xor     esi, esi^^^xor     ecx, ecx^^^jmp     short loc_448A49^^^movzx   edx, byte ptr [rdi+rax-1]^^^shl     rdx, 4^^^add     rdx, r8^^^cmp     byte ptr [rdx+8], 0^^^jnz     short loc_448A4D^^^test    esi, esi^^^mov     r9, [rdx]^^^mov     cl, 1^^^jnz     short loc_448A70^^^sub     rax, 1^^^jz      short loc_448A8E^^^test    ecx, ecx^^^jz      short loc_448A28^^^test    esi, esi^^^nop^^^jnz     short loc_448A67^^^movzx   edx, byte ptr [rdi+rax-1]^^^shl     rdx, 4^^^add     rdx, r8^^^cmp     byte ptr [rdx+8], 0^^^jz      short loc_448A43^^^mov     r10, [rdx]^^^test    cl, cl^^^mov     esi, 1^^^jz      short loc_448A43^^^xor     edx, edx^^^cmp     r10, r9^^^mov     cs:rule_stdoff, r9^^^mov     cs:rule_dstoff, r10^^^mov     rax, r9^^^setnz   dl^^^jmp     loc_4489DD^^^test    esi, esi^^^mov     cs:rule_stdoff, r9^^^mov     cs:rule_dstoff, r10^^^mov     rax, r9^^^jnz     loc_448C7A^^^mov     cs:rule_dstoff, r9^^^xor     edx, edx^^^jmp     loc_4489DD^^^test    rdx, rdx^^^jz      loc_4484F4^^^mov     rcx, cs:transitions^^^nop     dword ptr [rax]^^^mov     eax, [rcx+rdx*4-4]^^^bswap   eax^^^cdqe^^^mov     [rcx+rdx*8-8], rax^^^sub     rdx, 1^^^jnz     short loc_448AC8^^^jmp     loc_4484F4^^^mov     rcx, rsi^^^shl     rcx, 4^^^add     rcx, r15^^^add     rcx, r9^^^jmp     loc_448432^^^mov     r12, [rbp+var_110]^^^mov     rdi, cs:tzspec^^^mov     rcx, rbx^^^mov     esi, 1^^^sub     r12, 1^^^mov     rdx, r12^^^call    fread_unlocked^^^cmp     r12, rax^^^jnz     loc_448864^^^mov     rax, cs:tzspec^^^mov     rsi, [rbp+var_110]^^^test    rax, rax^^^mov     byte ptr [rax+rsi-1], 0^^^jz      loc_44886F^^^cmp     byte ptr [rax], 0^^^jnz     loc_44886F^^^jmp     loc_448864^^^mov     rsi, [rbp+var_D0]^^^mov     rdi, rbx^^^mov     [rbp+var_130], r8^^^mov     [rbp+var_138], r9^^^mov     [rbp+var_128], r10^^^mov     [rbp+var_110], rsi^^^call    ftello64^^^mov     rdi, [rbp+var_110]^^^mov     r8, [rbp+var_130]^^^mov     r9, [rbp+var_138]^^^mov     r10, [rbp+var_128]^^^sub     rdi, rax^^^js      loc_448224^^^mov     rdx, cs:num_transitions^^^mov     rcx, cs:num_types^^^lea     rax, [rdx+rdx*8]^^^lea     rsi, [rcx+rcx*2]^^^lea     rax, [rax+rsi*2]^^^add     rax, r13^^^cmp     rdi, rax^^^jb      loc_448224^^^mov     rsi, cs:num_leaps^^^mov     r11, 1555555555555555h^^^cmp     rsi, r11^^^ja      loc_448224^^^sub     rdi, rax^^^lea     rax, [rsi+rsi*2]^^^shl     rax, 2^^^cmp     rdi, rax^^^jb      loc_448224^^^sub     rdi, rax^^^cmp     rdi, [rbp+var_118]^^^mov     rax, rdi^^^jb      loc_448224^^^sub     rax, [rbp+var_118]^^^jz      loc_448224^^^lea     rdi, [rax-1]^^^cmp     rdi, [rbp+var_120]^^^jb      loc_448224^^^mov     rdi, [rbp+var_120]^^^not     rdi^^^add     rdi, rax^^^mov     rax, r10^^^not     rax^^^mov     [rbp+var_110], rdi^^^cmp     rdi, rax^^^jbe     loc_448383^^^jmp     loc_448224^^^cmp     cs:num_types, 1^^^jnz     loc_448E56^^^mov     rdi, cs:zone_names^^^call    __tzstring^^^mov     cs:tzname, rax^^^jmp     loc_448958^^^mov     cs:off_6C3298, rax^^^jmp     loc_448966^^^xor     edx, edx^^^cmp     r9, r10^^^setnz   dl^^^jmp     loc_4489DD^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^mov     rsi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_44857F^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_140], edx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_140]^^^jz      loc_448224^^^mov     rsi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_448558^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_140], edx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_140]^^^jz      loc_448224^^^mov     rsi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_448542^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_140], edx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_140]^^^jz      loc_448224^^^mov     rsi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_44852C^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^jmp     loc_4486C3^^^mov     rdi, rbx^^^nop     dword ptr [rax+00h]^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^mov     rdx, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_4486AC^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^mov     rdx, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_448695^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^mov     rdx, [rbx+8]^^^mov     rcx, [rbx+10h]^^^jmp     loc_44867E^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_140], edx^^^mov     [rbp+var_128], rcx^^^call    __uflow^^^mov     edx, dword ptr [rbp+var_140]^^^mov     rcx, [rbp+var_128]^^^jmp     loc_4485D7^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_140], edx^^^call    __uflow^^^mov     edx, dword ptr [rbp+var_140]^^^jmp     loc_4485A3^^^mov     esi, 4^^^mov     rdi, rax^^^call    fread_unlocked^^^cmp     rax, cs:num_transitions^^^jnz     loc_448224^^^mov     rdi, cs:type_idxs^^^mov     rdx, rax^^^mov     rcx, rbx^^^mov     esi, 1^^^call    fread_unlocked^^^mov     rdx, cs:num_transitions^^^cmp     rax, rdx^^^jz      loc_448479^^^jmp     loc_448224^^^mov     rdi, rbx^^^call    __uflow^^^jmp     loc_44885B^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_448224^^^jmp     loc_4487E9^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_448769^^^jmp     loc_448224^^^mov     ecx, offset __PRETTY_FUNCTION___5850^^^mov     edx, 1EBh^^^mov     esi, offset aTzfile_c^^^mov     edi, offset aNum_types1^^^call    __assert_fail^^^
_IO_file_read$$$sub     rsp, 8^^^test    byte ptr [rdi+74h], 2^^^mov     edi, [rdi+70h]^^^jnz     short loc_42A0E6^^^add     rsp, 8^^^jmp     read^^^call    __read_nocancel^^^pop     r8^^^cdqe^^^retn^^^
sub_41F312$$$movsxd  rax, dword ptr [rbp-5A8h]^^^mov     rsi, [rbp-540h]^^^imul    rax, 48h^^^add     rsi, rax^^^jz      loc_41F3B4^^^movsxd  rax, dword ptr [rsi+30h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^shl     rax, 4^^^add     rax, [rbp-578h]^^^mov     [rbp-0A0h], rax^^^call    __printf_fp^^^test    eax, eax^^^js      short loc_41F3AB^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF18^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_41B3A4^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^lea     rsi, [rbp-0F0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-5B0h]^^^mov     rdi, rsi^^^rep stosd^^^movsx   eax, byte ptr [rbp-621h]^^^mov     ecx, [rbp-580h]^^^mov     edi, [rbp-588h]^^^and     edx, 1^^^mov     [rbp-0F0h], ecx^^^mov     [rbp-0E8h], eax^^^movzx   eax, byte ptr [rbp-620h]^^^mov     [rbp-0ECh], edi^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-62Ch]^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-634h]^^^and     edx, 1^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-618h]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-628h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-5E0h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-638h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^mov     [rbp-0E4h], al^^^movzx   eax, byte ptr [rbp-63Ch]^^^and     eax, 1^^^shl     eax, 3^^^cmp     dword ptr [rbp-634h], 0^^^mov     [rbp-0E3h], al^^^movsx   eax, byte ptr [rbp-622h]^^^mov     [rbp-0E0h], eax^^^jz      short loc_41F4E7^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-0B8h], edx^^^mov     [rbp-0C0h], rax^^^lea     rax, [rbp-0C0h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^mov     [rbp-0A0h], rax^^^call    __printf_fp^^^jmp     loc_41F352^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     short loc_41F55C^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-0C0h], rax^^^jmp     short loc_41F4BC^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F503^^^
_dl_tlsdesc_resolve_hold_fixup$$$sub     rsp, 8^^^mov     rax, [rdi]^^^cmp     rax, rsi^^^jz      short loc_47ADF8^^^add     rsp, 8^^^retn^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_47AE0C^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_47ADEC^^^mov     edi, offset _dl_load_lock^^^add     rsp, 8^^^jmp     near ptr 0^^^
realloc$$$mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     rbp, rdi^^^mov     [rsp+var_30], rbx^^^mov     [rsp+var_18], r13^^^mov     r12, rsi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 38h^^^mov     rax, cs:__realloc_hook^^^test    rax, rax^^^jnz     loc_408031^^^test    rsi, rsi^^^jz      loc_407FC0^^^test    rbp, rbp^^^jz      loc_407FE0^^^mov     rax, [rbp-8]^^^lea     r13, [rbp-10h]^^^mov     r15, rax^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^mov     rdx, r15^^^neg     rdx^^^cmp     r13, rdx^^^ja      loc_408017^^^test    r13b, 0Fh^^^jnz     loc_408017^^^cmp     r12, 0FFFFFFFFFFFFFFBFh^^^ja      loc_407F70^^^lea     rdx, [r12+17h]^^^mov     r14d, 20h^^^mov     rcx, rdx^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^cmp     rdx, 20h^^^cmovnb  r14, rcx^^^test    al, 2^^^jnz     loc_407EB0^^^test    al, 4^^^mov     ebx, offset main_arena^^^jz      short loc_407E03^^^mov     rax, r13^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rbx, [rax]^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407E1F^^^lock cmpxchg [rbx], esi^^^jnz     _L_lock_11417^^^jmp     short loc_407E28^^^cmpxchg [rbx], esi^^^jnz     _L_lock_11417^^^mov     rdx, r15^^^mov     rcx, r14^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    _int_realloc^^^mov     rdx, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407E50^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_11428^^^jmp     short loc_407E58^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_11428^^^test    rdx, rdx^^^jz      loc_407F88^^^mov     rax, [rdx-8]^^^mov     rbp, rdx^^^test    al, 2^^^jnz     short loc_407E81^^^test    al, 4^^^mov     ecx, offset main_arena^^^jnz     short loc_407ED0^^^cmp     rbx, rcx^^^jnz     loc_40805A^^^mov     rbp, rdx^^^mov     rax, rbp^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^mov     rsi, r14^^^mov     rdi, r13^^^call    mremap_chunk^^^test    rax, rax^^^jz      short loc_407EE8^^^lea     rbp, [rax+10h]^^^jmp     short loc_407E81^^^sub     rbp, 10h^^^and     rbp, 0FFFFFFFFFC000000h^^^mov     rcx, [rbp+0]^^^jmp     short loc_407E75^^^lea     rax, [r15-8]^^^cmp     r14, rax^^^jbe     short loc_407E81^^^mov     rdi, r12^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_408010^^^lea     rdx, [r15-10h]^^^mov     rsi, rbp^^^mov     rdi, rax^^^call    memcpy^^^mov     rsi, [rbp-8]^^^test    sil, 2^^^jz      loc_408083^^^mov     rax, [rbp-10h]^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^mov     rdi, r13^^^sub     rdi, rax^^^add     rsi, rax^^^mov     rax, cs:_dl_pagesize^^^mov     rdx, rdi^^^or      rdx, rsi^^^sub     rax, 1^^^test    rdx, rax^^^jnz     loc_408073^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rsi^^^mov     rbp, rbx^^^call    munmap^^^jmp     loc_407E81^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebp, ebp^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_407E81^^^mov     rdi, r12^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^jz      short loc_408010^^^lea     rdx, [r15-8]^^^mov     rsi, rbp^^^mov     rdi, rax^^^mov     rbp, r12^^^call    memcpy^^^xor     edx, edx^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    _int_free^^^jmp     loc_407E81^^^test    rdi, rdi^^^jz      loc_407D91^^^nop     dword ptr [rax+00000000h]^^^call    free^^^xor     ebp, ebp^^^jmp     loc_407E81^^^mov     rdi, r12^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     malloc^^^xor     ebp, ebp^^^jmp     loc_407E81^^^mov     edi, cs:check_action^^^mov     rdx, rbp^^^mov     esi, offset aReallocInval_1^^^xor     ebp, ebp^^^call    malloc_printerr^^^jmp     loc_407E81^^^mov     rdx, [rsp+38h]^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     rax^^^mov     ecx, offset __func___12441^^^mov     edx, 0BFAh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNewpMchunkptrC^^^call    __malloc_assert^^^mov     rdi, r13^^^mov     rbp, rbx^^^call    munmap_chunk_part_4^^^jmp     loc_407E81^^^mov     ecx, offset __func___12372^^^mov     edx, 0B17h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPSize0x2^^^call    __malloc_assert^^^
_L_unlock_8968$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_406866^^^
__run_exit_handlers$$$push    r13^^^mov     r13d, edx^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     ebx, edi^^^sub     rsp, 8^^^mov     r12, [rbp+0]^^^test    r12, r12^^^jz      loc_401BD5^^^nop^^^mov     rax, [r12+8]^^^test    rax, rax^^^jz      loc_401BC8^^^sub     rax, 1^^^mov     rdx, rax^^^mov     [r12+8], rax^^^shl     rdx, 5^^^lea     rdx, [r12+rdx+10h]^^^mov     rcx, [rdx]^^^cmp     rcx, 3^^^jz      short loc_401BA8^^^cmp     rcx, 4^^^jz      short loc_401B88^^^cmp     rcx, 2^^^jnz     short loc_401B35^^^mov     rax, [rdx+8]^^^mov     rsi, [rdx+10h]^^^mov     edi, ebx^^^ror     rax, 11h^^^xor     rax, fs:30h^^^call    rax^^^jmp     short loc_401B30^^^mov     rax, [rdx+8]^^^mov     rdi, [rdx+10h]^^^mov     esi, ebx^^^ror     rax, 11h^^^xor     rax, fs:30h^^^call    rax^^^jmp     short loc_401B30^^^mov     rax, [rdx+8]^^^ror     rax, 11h^^^xor     rax, fs:30h^^^call    rax^^^nop     dword ptr [rax+rax+00h]^^^jmp     loc_401B30^^^mov     rax, [r12]^^^test    rax, rax^^^mov     [rbp+0], rax^^^jnz     short loc_401C01^^^test    r13b, r13b^^^jz      short loc_401BFA^^^mov     eax, offset __elf_set___libc_atexit_element__IO_cleanup__^^^cmp     rax, offset __EH_FRAME_BEGIN__^^^jnb     short loc_401BFA^^^mov     rbp, rax^^^call    qword ptr [rbp+0]^^^add     rbp, 8^^^cmp     rbp, offset __EH_FRAME_BEGIN__^^^jb      short loc_401BEA^^^mov     edi, ebx        ^^^call    _exit^^^mov     rdi, r12^^^call    free^^^jmp     loc_401B22^^^
sub_40A640$$$mov     [rdi-9], dl^^^mov     [rdi-8], rdx^^^jmp     short sub_40A6AA^^^
_dl_debug_printf_c$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_B0], rsi^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_455F2B^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^mov     rdx, rdi^^^mov     edi, cs:_dl_debug_fd^^^lea     rcx, [rsp+0D8h+var_D0]^^^mov     esi, 0FFFFFFFFh^^^mov     [rsp+0D8h+var_D0], 8^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C0], rax^^^call    _dl_debug_vdprintf^^^add     rsp, 0D8h^^^retn^^^
brk$$$mov     rdx, rdi^^^mov     eax, 0Ch^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^mov     rsi, rax^^^ja      short loc_44D6AC^^^mov     cs:__curbrk, rax^^^xor     eax, eax^^^cmp     rdx, rsi^^^ja      short loc_44D698^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 0Ch^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^neg     esi^^^mov     cs:__curbrk, 0FFFFFFFFFFFFFFFFh^^^mov     fs:[rax], esi^^^xor     eax, eax^^^retn^^^
sub_4379C0$$$mov     rax, [rsi]^^^sub     rdi, 18h^^^sub     rsi, 10h^^^mov     rcx, [rsi+18h]^^^add     rdx, 2^^^mov     [rdi+18h], rax^^^nop     word ptr [rax+rax+00000000h]^^^
_L_lock_2658$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_403BB8^^^
_lxstat$$$cmp     edi, 1          ^^^mov     rax, rsi^^^ja      short loc_479990^^^mov     rdi, rax^^^mov     rsi, rdx^^^mov     eax, 6^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_4799A4^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
____strtod_l_internal$$$push    r15^^^mov     r9, rsi^^^mov     r8, rcx^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 208h^^^test    edx, edx^^^mov     rax, [rcx+8]^^^mov     [rsp+238h+var_1F0], rdi^^^jnz     loc_47FEB6^^^mov     [rsp+238h+var_1D8], 0^^^mov     [rsp+238h+var_1E0], 0^^^mov     r12, [rax+40h]^^^mov     [rsp+238h+var_210], r8^^^mov     [rsp+238h+var_218], r9^^^mov     rdi, r12^^^call    strlen^^^test    rax, rax^^^mov     r11, rax^^^mov     r8, [rsp+238h+var_210]^^^mov     r9, [rsp+238h+var_218]^^^jz      loc_47FDB7^^^mov     rdx, [rsp+238h+var_1F0]^^^mov     [rsp+238h+var_58], 0^^^mov     rax, [r8+68h]^^^sub     rdx, 1^^^jmp     short loc_47DD4B^^^mov     rdx, rbx^^^movzx   ebp, byte ptr [rdx+1]^^^lea     rbx, [rdx+1]^^^movsx   rcx, bpl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_47DD48^^^cmp     bpl, 2Dh^^^jz      loc_47E908^^^cmp     bpl, 2Bh^^^mov     ecx, ebp^^^mov     [rsp+238h+var_1BC], 0^^^jz      loc_47E920^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      loc_47EEF2^^^cmp     al, bpl^^^mov     edx, 1^^^jz      short loc_47DDAF^^^jmp     loc_47E038^^^add     rdx, 1^^^cmp     sil, [rbx+rdx-1]^^^jnz     loc_47E038^^^movzx   esi, byte ptr [r12+rdx]^^^test    sil, sil^^^jnz     short loc_47DDA0^^^movzx   edx, byte ptr [rbx+rdx]^^^cmp     dl, 2Fh^^^jle     loc_47E038^^^cmp     dl, 39h^^^jg      loc_47E038^^^cmp     bpl, 30h^^^mov     rdx, [r8+70h]^^^jz      loc_47E9F9^^^mov     byte ptr [rsp+238h+var_1D0], 0^^^mov     byte ptr [rsp+238h+var_1C8], 1^^^mov     dword ptr [rsp+238h+var_1E8], 0Ah^^^cmp     [rsp+238h+var_1E0], 0^^^jnz     loc_47FF39^^^cmp     bpl, 30h^^^mov     r14, rbx^^^jnz     short loc_47DE18^^^nop     dword ptr [rax+00h]^^^add     r14, 1^^^movzx   ebp, byte ptr [r14]^^^cmp     bpl, 30h^^^jz      short loc_47DE08^^^mov     ecx, ebp^^^movsx   rsi, bpl^^^xor     r15d, r15d^^^mov     r13, r14^^^mov     edi, [rdx+rsi*4]^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^ja      loc_47E0C0^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^jbe     loc_47E0A8^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^jz      loc_47E090^^^cmp     [rsp+238h+var_1E0], 0^^^jnz     loc_47FEE5^^^cmp     rbx, r13^^^jb      loc_47EA32^^^cmp     r15, 1^^^sbb     rcx, rcx^^^test    al, al^^^jz      short loc_47DE99^^^cmp     [r13+0], al^^^mov     rbx, r15^^^jnz     short loc_47DEF0^^^xor     eax, eax^^^jmp     short loc_47DE8F^^^add     rax, 1^^^cmp     dl, [r13+rax+0]^^^jnz     loc_47EC80^^^movzx   edx, byte ptr [r12+rax+1]^^^test    dl, dl^^^jnz     short loc_47DE80^^^add     r13, r11^^^xor     eax, eax^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^movzx   ebp, byte ptr [r13+0]^^^jnz     loc_47E17A^^^mov     rdx, [r8+70h]^^^jmp     short loc_47DED3^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_47DEC6^^^cmp     bpl, 30h^^^cmovnz  rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     esi, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     sil, 9^^^jbe     short loc_47DEB8^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     short loc_47DEB8^^^test    rbx, rbx^^^js      loc_47FDD0^^^mov     rax, [r8+70h]^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 70h^^^jnz     loc_47E1F0^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^jz      loc_47E1F0^^^movzx   r10d, byte ptr [r13+1]^^^cmp     r10b, 2Dh^^^jz      loc_47EC9A^^^cmp     r10b, 2Bh^^^jz      loc_47EAEE^^^lea     rdi, [r13+1]^^^mov     dword ptr [rsp+238h+var_1D8], 0^^^lea     eax, [r10-30h]^^^cmp     al, 9^^^ja      loc_47E1F8^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^jnz     loc_47F13A^^^mov     eax, dword ptr [rsp+238h+var_1D8]^^^test    eax, eax^^^jz      loc_47ED99^^^mov     rax, 7FFFFFFFFFFFFE97h^^^cmp     r15, rax^^^ja      loc_47FD5C^^^lea     rax, [r15+168h]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+238h+var_1F0], rax^^^imul    rbp^^^mov     rax, [rsp+238h+var_1F0]^^^sar     rax, 3Fh^^^mov     rbp, rdx^^^sar     rbp, 2^^^sub     rbp, rax^^^mov     rax, [rsp+238h+var_1F0]^^^mov     rdx, 6666666666666667h^^^mov     rsi, [rsp+238h+var_58]^^^imul    rdx^^^mov     rax, [rsp+238h+var_1F0]^^^sar     rax, 3Fh^^^sar     rdx, 2^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^mov     rdx, [rsp+238h+var_1F0]^^^add     rax, rax^^^sub     rdx, rax^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     rbp, rsi^^^jl      loc_47F5D8^^^movsx   eax, r10b^^^jz      loc_47F5CA^^^sub     eax, 30h^^^cdqe^^^lea     rsi, [rsi+rsi*4]^^^add     rdi, 1^^^lea     rsi, [rax+rsi*2]^^^mov     [rsp+238h+var_58], rsi^^^movzx   r10d, byte ptr [rdi]^^^lea     eax, [r10-30h]^^^cmp     al, 9^^^jbe     short loc_47DFE0^^^mov     ebp, dword ptr [rsp+238h+var_1D8]^^^test    ebp, ebp^^^jz      loc_47E1FB^^^neg     rsi^^^mov     [rsp+238h+var_58], rsi^^^jmp     loc_47E1FB^^^lea     edx, [rbp-30h]^^^cmp     dl, 9^^^jbe     loc_47DDCF^^^mov     rax, cs:off_499B10^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 69h^^^jz      loc_47ECB0^^^cmp     al, 6Eh^^^jz      loc_47ED2E^^^test    r9, r9^^^xorpd   xmm0, xmm0^^^jz      short loc_47E074^^^mov     rdi, [rsp+238h+var_1F0]^^^mov     [r9], rdi^^^add     rsp, 208h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^ja      loc_47DE4A^^^nop     dword ptr [rax+00h]^^^add     r15, 1^^^movzx   ebp, byte ptr [r13+1]^^^add     r13, 1^^^mov     ecx, ebp^^^jmp     loc_47DE32^^^cmp     dil, 60h^^^mov     r10d, edi^^^jg      loc_47EAC4^^^test    al, al^^^jz      loc_47E1A9^^^xor     esi, esi^^^cmp     al, cl^^^jz      loc_47E19E^^^cmp     byte ptr [rsp+238h+var_1C8], 0^^^jz      loc_47F7E9^^^cmp     r10b, 65h^^^jnz     short loc_47E101^^^xor     r15d, r15d^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^mov     r13, r14^^^jz      loc_47DE32^^^mov     rcx, [rsp+238h+var_1D8]^^^mov     rdx, [rsp+238h+var_1E0]^^^mov     rsi, r14^^^mov     rdi, rbx^^^mov     [rsp+238h+var_218], r9^^^call    __correctly_grouped_prefixmb^^^mov     r9, [rsp+238h+var_218]^^^test    r9, r9^^^jz      short loc_47E140^^^cmp     rbx, rax^^^jz      loc_47FA8A^^^mov     [rsp+238h+var_1F0], rax^^^mov     rdi, rax^^^mov     [r9], rdi^^^nop     dword ptr [rax+00000000h]^^^mov     r9d, [rsp+238h+var_1BC]^^^xorpd   xmm0, xmm0^^^test    r9d, r9d^^^jz      loc_47E074^^^movsd   xmm0, cs:qword_4B29B8^^^jmp     loc_47E074^^^cmp     bpl, 30h^^^jz      short loc_47E16D^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^cmovz   rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     edx, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     dl, 9^^^ja      loc_47DEF0^^^jmp     short loc_47E15F^^^add     rsi, 1^^^cmp     dil, [r14+rsi]^^^jnz     loc_47E0DF^^^movzx   edi, byte ptr [r12+rsi+1]^^^test    dil, dil^^^jnz     short loc_47E190^^^cmp     rbx, r14^^^jnz     loc_47EC6C^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^jz      loc_47EC6C^^^movzx   esi, byte ptr [r14+r11]^^^xor     r15d, r15d^^^mov     r13, r14^^^lea     edi, [rsi-30h]^^^cmp     dil, 9^^^jbe     loc_47DE32^^^movsx   rsi, sil^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     loc_47DE32^^^jmp     loc_47E0EA^^^cmp     al, 65h^^^jz      loc_47EADE^^^mov     rdi, r13^^^cmp     rbx, r15^^^xchg    ax, ax^^^ja      loc_47E8D8^^^test    rbx, rbx^^^jnz     loc_47E930^^^test    r9, r9^^^jz      short loc_47E217^^^mov     [r9], rdi^^^test    rbx, rbx^^^jz      loc_47E140^^^test    rcx, rcx^^^mov     rbp, r14^^^jz      loc_47E2EA^^^movzx   esi, byte ptr [r12]^^^movzx   edi, byte ptr [r12+1]^^^jmp     short loc_47E244^^^add     r14, 1^^^cmp     [r14], sil^^^jnz     short loc_47E240^^^test    dil, dil^^^jz      short loc_47E275^^^xor     eax, eax^^^cmp     [r14+1], dil^^^jz      short loc_47E26B^^^jmp     short loc_47E240^^^add     rax, 1^^^cmp     dl, [r14+rax+1]^^^jnz     short loc_47E240^^^movzx   edx, byte ptr [r12+rax+2]^^^test    dl, dl^^^jnz     short loc_47E260^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^mov     rdx, 7FFFFFFFFFFFFFFFh^^^cmovnz  rax, rdx^^^cmp     rcx, rax^^^ja      loc_47FE03^^^mov     rax, [rsp+238h+var_58]^^^mov     rdx, 8000000000000000h^^^add     rdx, rax^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^jz      loc_47F55D^^^cmp     rcx, rdx^^^ja      loc_47FCFE^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^lea     rdx, ds:0[rcx*4]^^^lea     rbp, [rcx+r11]^^^cmovnz  rdx, rcx^^^add     rbp, r14^^^sub     rbx, rcx^^^sub     rax, rdx^^^mov     [rsp+238h+var_58], rax^^^cmp     dword ptr [rsp+238h+var_1E8], 10h^^^jz      loc_47EB04^^^mov     rax, [rsp+238h+var_58]^^^test    rax, rax^^^js      loc_47F175^^^mov     rdx, rbx^^^sub     rdx, r15^^^cmp     rdx, rax^^^cmovg   rdx, rax^^^lea     r14, [rdx+r15]^^^sub     rax, rdx^^^mov     edx, 135h^^^mov     [rsp+238h+var_58], rax^^^sub     rdx, r14^^^cmp     rax, rdx^^^jg      loc_47FD75^^^cmp     rax, 0FFFFFFFFFFFFFEBDh^^^jl      loc_47FD49^^^test    r14, r14^^^mov     dword ptr [rsp+238h+var_1F0], 0^^^jnz     loc_47EEF9^^^cmp     rbx, r14^^^jbe     loc_47FE1C^^^mov     rcx, [rsp+238h+var_58]^^^test    rcx, rcx^^^jg      loc_47FE1C^^^mov     esi, 37h^^^sub     esi, dword ptr [rsp+238h+var_1F0]^^^mov     edx, 55555556h^^^mov     byte ptr [rsp+238h+var_1B0], 0^^^mov     [rsp+238h+var_1AC], 0^^^mov     eax, esi^^^sar     esi, 1Fh^^^imul    edx^^^sub     edx, esi^^^movsxd  rdx, edx^^^lea     rax, [r14+rdx+2]^^^cmp     rbx, rax^^^jle     short loc_47E3B7^^^mov     rbx, rax^^^mov     byte ptr [rsp+238h+var_1B0], 1^^^mov     [rsp+238h+var_1AC], 1^^^sub     ebx, r14d^^^lea     rdx, [rsp+238h+var_1A8]^^^lea     r10, [rsp+238h+var_108]^^^mov     r13d, ebx^^^mov     dword ptr [rsp+238h+var_1C8], ebx^^^mov     r12d, 1^^^sub     r13d, ecx^^^mov     ebx, offset _fpioconst_pow10^^^mov     [rsp+238h+var_1E8], rdx^^^mov     [rsp+238h+var_1D0], rdx^^^mov     [rsp+238h+var_1D8], r10^^^mov     r14, r10^^^xor     r15d, r15d^^^mov     [rsp+238h+var_1B8], r11^^^jmp     short loc_47E42F^^^mov     r15, [rbx+8]^^^mov     rax, [rbx]^^^mov     rdi, r14^^^sub     r15, 1^^^lea     rsi, unk_4AEDC8[rax*8]^^^lea     rdx, ds:0[r15*8]^^^call    memcpy^^^add     r12d, r12d^^^add     rbx, 18h^^^test    r13d, r13d^^^jz      short loc_47E48E^^^test    r13d, r12d^^^jz      short loc_47E423^^^xor     r13d, r12d^^^test    r15, r15^^^jz      short loc_47E400^^^mov     rax, [rbx]^^^mov     rdx, [rbx+8]^^^mov     r8, r15^^^mov     rdi, [rsp+238h+var_1D0]^^^mov     rcx, r14^^^lea     rsi, unk_4AEDC8[rax*8]^^^sub     rdx, 1^^^call    __mpn_mul^^^mov     rdx, [rbx+8]^^^test    rax, rax^^^lea     r15, [r15+rdx-1]^^^jnz     loc_47EC88^^^mov     rax, r14^^^sub     r15, 1^^^add     r12d, r12d^^^add     rbx, 18h^^^test    r13d, r13d^^^mov     r14, [rsp+238h+var_1D0]^^^mov     [rsp+238h+var_1D0], rax^^^jnz     short loc_47E42F^^^cmp     r14, [rsp+238h+var_1E8]^^^mov     r11, [rsp+238h+var_1B8]^^^jz      loc_47F8E6^^^mov     rdx, [rsp+238h+var_1E0]^^^mov     esi, dword ptr [rsp+238h+var_1C8]^^^lea     r8, [rsp+238h+var_58]^^^lea     rcx, [rsp+238h+var_68]^^^mov     r9, r11^^^mov     rdi, rbp^^^mov     [rsp+238h+var_238], rdx^^^mov     rdx, [rsp+238h+var_1E8]^^^call    str_to_mpn_isra_0_0^^^lea     r10, [r15-1]^^^bsr     rbx, [rsp+r10*8+238h+var_108]^^^mov     [rsp+238h+var_1E0], r10^^^xor     rbx, 3Fh^^^test    ebx, ebx^^^jle     short loc_47E51A^^^mov     rsi, [rsp+238h+var_1D8]^^^mov     ecx, ebx^^^mov     rdx, r15^^^mov     rdi, rsi^^^call    __mpn_lshift^^^mov     rsi, [rsp+238h+var_1E8]^^^mov     rdx, [rsp+238h+var_68]^^^mov     ecx, ebx^^^mov     rdi, rsi^^^call    __mpn_lshift^^^test    rax, rax^^^jnz     loc_47EDE0^^^movsxd  rcx, dword ptr [rsp+238h+var_1F0]^^^cmp     r15, 1^^^mov     [rsp+238h+var_58], rcx^^^jz      loc_47F187^^^cmp     r15, 2^^^jz      loc_47F2F5^^^mov     r10, [rsp+238h+var_1E0]^^^mov     rdx, [rsp+238h+var_68]^^^mov     rax, r15^^^mov     rdi, [rsp+238h+var_1E8]^^^lea     r14, [r15-2]^^^mov     rbp, [rsp+r10*8+238h+var_108]^^^mov     r10, [rsp+238h+var_1D8]^^^sub     rax, rdx^^^mov     r12, [rsp+r14*8+238h+var_108]^^^mov     [rsp+238h+var_208], rcx^^^lea     rsi, [r10+rax*8]^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, [rsp+238h+var_208]^^^mov     rax, [rsp+238h+var_68]^^^jle     short loc_47E5A3^^^mov     [rsp+rax*8+238h+var_1A8], 0^^^add     rax, 1^^^mov     [rsp+238h+var_68], rax^^^cmp     rax, r15^^^jge     loc_47F780^^^mov     rbx, r15^^^mov     esi, dword ptr [rsp+238h+var_1F0]^^^sub     rbx, rax^^^mov     rdx, rbx^^^shl     rdx, 6^^^test    esi, esi^^^jle     loc_47FA72^^^add     rcx, rdx^^^cmp     rcx, 35h^^^jg      loc_47FA28^^^cmp     rbx, 1^^^jnz     loc_47FC5A^^^mov     [rsp+238h+var_48], 0^^^mov     [rsp+238h+var_1B0], 0^^^mov     edx, ebx^^^shl     edx, 6^^^add     dword ptr [rsp+238h+var_1F0], edx^^^test    eax, eax^^^mov     edx, eax^^^jle     short loc_47E632^^^mov     rcx, [rsp+238h+var_1E8]^^^lea     eax, [rdx-1]^^^movsxd  rdx, edx^^^add     rdx, rbx^^^lea     rdx, [rcx+rdx*8]^^^nop     dword ptr [rax+00h]^^^movsxd  rcx, eax^^^sub     eax, 1^^^mov     rcx, [rsp+rcx*8+238h+var_1A8]^^^mov     [rdx], rcx^^^sub     rdx, 8^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_47E618^^^test    rbx, rbx^^^js      short loc_47E6A1^^^lea     rsi, [rbx+1]^^^mov     rcx, rsi^^^shr     rcx, 1^^^cmp     rsi, 3^^^lea     rdi, [rcx+rcx]^^^jbe     loc_47FFC0^^^test    rdi, rdi^^^jz      loc_47FFC0^^^pxor    xmm0, xmm0^^^mov     r8, [rsp+238h+var_1E8]^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, rax^^^add     rax, 1^^^shl     rdx, 4^^^cmp     rcx, rax^^^movdqa  xmmword ptr [r8+rdx], xmm0^^^ja      short loc_47E668^^^cmp     rsi, rdi^^^jz      short loc_47E6A1^^^mov     rax, [rsp+238h+var_1E8]^^^nop     dword ptr [rax+rax+00000000h]^^^mov     qword ptr [rax+rdi*8], 0^^^add     rdi, 1^^^cmp     rbx, rdi^^^jge     short loc_47E690^^^cmp     dword ptr [rsp+238h+var_1F0], 35h^^^mov     [rsp+r15*8+238h+var_108], 0^^^mov     rcx, [rsp+r15*8+238h+var_1A8]^^^jg      loc_47FC23^^^lea     r10, [r15+1]^^^mov     r13d, r15d^^^mov     [rsp+238h+var_1C8], r10^^^lea     r10d, [r13-1]^^^add     r13d, 1^^^sub     r13d, r15d^^^mov     dword ptr [rsp+238h+var_1D0], r10d^^^lea     r10d, [r15-2]^^^mov     dword ptr [rsp+238h+var_1B8], r10d^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     rcx, rbp^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_47E749^^^mov     r10, [rsp+238h+var_1E0]^^^mov     rdx, rcx^^^mov     rbx, [rsp+r10*8+238h+var_1A8]^^^mov     rax, rbx^^^div     rbp^^^mov     rbx, rax^^^mov     rcx, rdx^^^mov     rax, r12^^^mul     rbx^^^jmp     short loc_47E72F^^^xor     esi, esi^^^cmp     rax, r12^^^setb    sil^^^sub     rax, r12^^^sub     rdx, rsi^^^cmp     rdx, rcx^^^ja      short loc_47E740^^^jnz     short loc_47E749^^^cmp     rax, [rsp+r14*8+238h+var_1A8]^^^jbe     short loc_47E749^^^sub     rbx, 1^^^add     rcx, rbp^^^jnb     short loc_47E720^^^mov     rdx, [rsp+238h+var_1C8]^^^mov     rsi, [rsp+238h+var_1D8]^^^mov     rcx, rbx^^^mov     rdi, [rsp+238h+var_1E8]^^^call    __mpn_submul_1^^^cmp     [rsp+r15*8+238h+var_1A8], rax^^^jz      short loc_47E78C^^^mov     rsi, [rsp+238h+var_1E8]^^^mov     rdx, [rsp+238h+var_1D8]^^^mov     rcx, r15^^^mov     rdi, rsi^^^call    __mpn_add_n^^^test    rax, rax^^^jz      loc_47FFCC^^^sub     rbx, 1^^^mov     r10, [rsp+238h+var_1E0]^^^mov     edx, dword ptr [rsp+238h+var_1D0]^^^mov     eax, dword ptr [rsp+238h+var_1B8]^^^mov     rcx, [rsp+r10*8+238h+var_1A8]^^^test    edx, edx^^^mov     [rsp+r15*8+238h+var_1A8], rcx^^^jg      short loc_47E7BA^^^jmp     short loc_47E7DC^^^mov     eax, edx^^^movsxd  rdx, eax^^^test    eax, eax^^^mov     rsi, [rsp+rdx*8+238h+var_1A8]^^^lea     edx, [r13+rax+0]^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+238h+var_1A8], rsi^^^lea     edx, [rax-1]^^^jg      short loc_47E7B8^^^mov     eax, dword ptr [rsp+238h+var_1F0]^^^mov     [rsp+238h+var_1A8], 0^^^test    eax, eax^^^jnz     loc_47EE48^^^test    rbx, rbx^^^jz      loc_47EE68^^^bsr     rdx, rbx^^^mov     rax, [rsp+238h+var_58]^^^xor     edx, 3Fh^^^movsxd  rsi, edx^^^sub     rax, rsi^^^mov     esi, 40h^^^sub     esi, edx^^^mov     [rsp+238h+var_58], rax^^^cmp     esi, 35h^^^jle     loc_47FEAD^^^lea     r10d, [rdx+35h]^^^mov     ecx, 0Bh^^^sub     ecx, edx^^^mov     rdx, rbx^^^mov     [rsp+238h+var_1B0], r10d^^^shr     rdx, cl^^^lea     r10, [rsp+238h+var_48]^^^mov     [rsp+238h+var_48], rdx^^^movsxd  rdx, r15d^^^mov     ecx, r15d^^^cmp     [rsp+rdx*8+238h+var_1A8], 0^^^not     ecx^^^jnz     short loc_47E896^^^mov     edx, ecx^^^shr     edx, 1Fh^^^test    dl, dl^^^jz      short loc_47E896^^^lea     edx, [r15-1]^^^jmp     short loc_47E87D^^^test    r15d, r15d^^^js      short loc_47E896^^^mov     r15d, edx^^^sub     edx, 1^^^movsxd  rcx, r15d^^^cmp     [rsp+rcx*8+238h+var_1A8], 0^^^mov     ecx, r15d^^^not     ecx^^^jz      short loc_47E878^^^mov     r8d, 3Fh^^^mov     r9d, [rsp+238h+var_1AC]^^^sub     r8d, [rsp+238h+var_1B0]^^^shr     ecx, 1Fh^^^lea     rsi, [rax-1]^^^or      r9d, ecx^^^mov     edx, [rsp+238h+var_1BC]^^^movsxd  r8, r8d^^^mov     rcx, rbx^^^mov     rdi, r10^^^call    round_and_return_0^^^jmp     loc_47E074^^^sub     r13, 1^^^sub     rbx, 1^^^cmp     byte ptr [r13-1], 30h^^^jz      short loc_47E8D0^^^cmp     rbx, r15^^^jnb     loc_47E206^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 3C7h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noInt_no^^^call    __assert_fail^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     [rsp+238h+var_1BC], 1^^^mov     ecx, ebp^^^jmp     loc_47DD7C^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     ecx, ebp^^^jmp     loc_47DD7C^^^cmp     rbx, r15^^^jnz     loc_47E20F^^^cmp     [rsp+238h+var_58], 0^^^jns     loc_47E20F^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^lea     rdx, [r13-1]^^^jz      loc_47E9E2^^^mov     rax, [r8+68h]^^^jmp     short loc_47E993^^^mov     rsi, [rsp+238h+var_58]^^^sub     r15, 1^^^add     rsi, 4^^^sub     rbx, 1^^^mov     [rsp+238h+var_58], rsi^^^jz      loc_47E20F^^^shr     rsi, 3Fh^^^test    sil, sil^^^jz      loc_47E20F^^^sub     rdx, 1^^^movzx   esi, byte ptr [rdx]^^^movsx   r10, sil^^^test    byte ptr [rax+r10*2+1], 10h^^^jz      short loc_47E98F^^^cmp     sil, 30h^^^jz      short loc_47E960^^^jmp     loc_47E20F^^^mov     rax, [rsp+238h+var_58]^^^sub     r15, 1^^^add     rax, 1^^^sub     rbx, 1^^^mov     [rsp+238h+var_58], rax^^^jz      loc_47E20F^^^shr     rax, 3Fh^^^test    al, al^^^jz      loc_47E20F^^^sub     rdx, 1^^^movzx   eax, byte ptr [rdx]^^^movsx   esi, al^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_47E9DE^^^cmp     al, 30h^^^jz      short loc_47E9B0^^^jmp     loc_47E20F^^^movsx   rsi, byte ptr [rbx+1]^^^cmp     dword ptr [rdx+rsi*4], 78h^^^jnz     loc_47DDDD^^^movzx   ebp, byte ptr [rbx+2]^^^mov     byte ptr [rsp+238h+var_1D0], 1^^^add     rbx, 2^^^mov     byte ptr [rsp+238h+var_1C8], 0^^^mov     [rsp+238h+var_1D8], 0^^^mov     dword ptr [rsp+238h+var_1E8], 10h^^^mov     ecx, ebp^^^jmp     loc_47DDEF^^^cmp     [rsp+238h+var_1D8], 0^^^jz      loc_47DE5F^^^mov     rcx, [rsp+238h+var_1D8]^^^mov     rdx, [rsp+238h+var_1E0]^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     [rsp+238h+var_210], r8^^^mov     [rsp+238h+var_218], r9^^^mov     [rsp+238h+var_208], r11^^^call    __correctly_grouped_prefixmb^^^cmp     rax, r13^^^mov     r8, [rsp+238h+var_210]^^^mov     r9, [rsp+238h+var_218]^^^mov     r11, [rsp+238h+var_208]^^^jz      loc_47F737^^^cmp     rbx, rax^^^jz      loc_47E063^^^cmp     r14, rax^^^ja      loc_47ED88^^^mov     rdi, r14^^^mov     ebx, 0^^^jnb     loc_47FA65^^^nop     word ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rbx+1]^^^sub     ecx, 30h^^^cmp     cl, 9^^^cmovbe  rbx, rdx^^^add     rdi, 1^^^cmp     rdi, rax^^^jnz     short loc_47EAA0^^^mov     r15, rbx^^^xor     ecx, ecx^^^jmp     loc_47E20F^^^cmp     byte ptr [rsp+238h+var_1C8], 0^^^jnz     loc_47E0CD^^^cmp     dil, 66h^^^jle     loc_47DE32^^^jmp     loc_47E0CD^^^cmp     byte ptr [rsp+238h+var_1C8], 0^^^jz      loc_47E1F8^^^jmp     loc_47DF18^^^lea     rdi, [r13+2]^^^movzx   r10d, byte ptr [r13+2]^^^mov     dword ptr [rsp+238h+var_1D8], 0^^^jmp     loc_47DF3D^^^movzx   edx, byte ptr [rbp+0]^^^mov     rdi, [r8+68h]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jnz     short loc_47EB40^^^nop     word ptr [rax+rax+00000000h]^^^add     rbp, 1^^^movzx   edx, byte ptr [rbp+0]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jz      short loc_47EB20^^^jmp     short loc_47EB40^^^add     rbp, 1^^^movzx   edx, byte ptr [rbp+0]^^^cmp     dl, 30h^^^jz      short loc_47EB38^^^movsx   eax, dl^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_47EE01^^^mov     rax, [r8+70h]^^^movsx   rdx, dl^^^add     rbp, 1^^^mov     eax, [rax+rdx*4]^^^sub     eax, 57h^^^cdqe^^^mov     r9d, ds:nbits_12626[rax*4]^^^test    r9d, r9d^^^jz      loc_47FE35^^^mov     ecx, 35h^^^mov     rdx, rax^^^sub     ecx, r9d^^^shl     rdx, cl^^^mov     rcx, [rsp+238h+var_58]^^^mov     [rsp+238h+var_48], rdx^^^test    rcx, rcx^^^js      loc_47F826^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^movsxd  rsi, r9d^^^sub     rax, rcx^^^sub     rax, rsi^^^lea     rsi, [rax+4]^^^add     rax, 1^^^cmovs   rax, rsi^^^sar     rax, 2^^^cmp     r15, rax^^^ja      loc_47FCDD^^^lea     eax, [r9-1]^^^cdqe^^^lea     rsi, [rax+r15*4-4]^^^add     rsi, rcx^^^sub     rbx, 1^^^mov     [rsp+238h+var_58], rsi^^^jz      loc_47F566^^^mov     eax, 34h^^^sub     eax, r9d^^^jmp     short loc_47EC2E^^^movsxd  r9, r9d^^^add     rbp, 1^^^cmp     eax, 2^^^jle     loc_47F584^^^lea     ecx, [rax-3]^^^sub     eax, 4^^^shl     r9, cl^^^or      rdx, r9^^^sub     rbx, 1^^^mov     [rsp+238h+var_48], rdx^^^jz      loc_47F566^^^movzx   ecx, byte ptr [rbp+0]^^^movsx   r9, cl^^^test    byte ptr [rdi+r9*2+1], 10h^^^jnz     short loc_47EC45^^^add     rbp, r11^^^movzx   ecx, byte ptr [rbp+0]^^^movsx   r9d, cl^^^sub     r9d, 30h^^^cmp     r9d, 9^^^jbe     short loc_47EC00^^^mov     r9, [r8+70h]^^^movsx   rcx, cl^^^add     rbp, 1^^^mov     r9d, [r9+rcx*4]^^^sub     r9d, 57h^^^movsxd  r9, r9d^^^jmp     short loc_47EC07^^^mov     r13, r14^^^xor     r15d, r15d^^^jmp     loc_47DE32^^^mov     rbx, r15^^^jmp     loc_47DEF0^^^mov     rax, r14^^^mov     r14, [rsp+238h+var_1D0]^^^mov     [rsp+238h+var_1D0], rax^^^jmp     loc_47E423^^^lea     rdi, [r13+2]^^^movzx   r10d, byte ptr [r13+2]^^^mov     dword ptr [rsp+238h+var_1D8], 1^^^jmp     loc_47DF3D^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aInf^^^mov     rdi, rbx^^^mov     [rsp+238h+var_218], r9^^^call    sub_4003B0^^^test    eax, eax^^^mov     r9, [rsp+238h+var_218]^^^jnz     loc_47E063^^^test    r9, r9^^^jz      short loc_47ED0B^^^lea     rbp, [rbx+3]^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 5^^^mov     esi, offset aInity^^^add     rbx, 8^^^mov     rdi, rbp^^^call    sub_4003B0^^^mov     r9, [rsp+238h+var_218]^^^test    eax, eax^^^cmovz   rbp, rbx^^^mov     [r9], rbp^^^mov     r8d, [rsp+238h+var_1BC]^^^movsd   xmm0, cs:qword_4B29A0^^^test    r8d, r8d^^^jz      loc_47E074^^^movsd   xmm0, cs:qword_4B29A8^^^jmp     loc_47E074^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aNan^^^mov     rdi, rbx^^^mov     [rsp+238h+var_210], r8^^^mov     [rsp+238h+var_218], r9^^^call    sub_4003B0^^^test    eax, eax^^^mov     r8, [rsp+238h+var_210]^^^mov     r9, [rsp+238h+var_218]^^^jnz     loc_47E063^^^cmp     byte ptr [rbx+3], 28h^^^lea     rsi, [rbx+3]^^^movsd   xmm0, cs:qword_4B29B0^^^jz      loc_47F9A5^^^test    r9, r9^^^jz      loc_47E074^^^mov     [r9], rsi^^^jmp     loc_47E074^^^test    r9, r9^^^jz      loc_47E140^^^mov     [r9], rax^^^jmp     loc_47E140^^^test    r15, r15^^^jz      short loc_47EE0C^^^test    rcx, rcx^^^jnz     loc_47FE94^^^mov     rax, r15^^^shr     rax, 3Fh^^^test    al, al^^^jnz     loc_47FE94^^^mov     [rsp+238h+var_1F0], 135h^^^sub     [rsp+238h+var_1F0], r15^^^cmp     [rsp+238h+var_1F0], 0^^^jns     loc_47FE80^^^xor     ebp, ebp^^^mov     [rsp+238h+var_1F0], 0^^^jmp     loc_47DF9F^^^mov     rdx, [rsp+238h+var_68]^^^mov     [rsp+rdx*8+238h+var_1A8], rax^^^add     rdx, 1^^^mov     [rsp+238h+var_68], rdx^^^jmp     loc_47E51A^^^cdqe^^^add     rbp, 1^^^jmp     loc_47EB68^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47F992^^^mov     rax, 7FFFFFFFFFFFFECAh^^^cmp     rcx, rax^^^ja      loc_47FE67^^^lea     rax, [rcx+135h]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+238h+var_1F0], rax^^^jmp     loc_47DF89^^^cmp     dword ptr [rsp+238h+var_1F0], 0FFFFFFF6h^^^jge     short loc_47EEA0^^^mov     [rsp+238h+var_48], rbx^^^add     dword ptr [rsp+238h+var_1F0], 40h^^^jmp     loc_47E6F0^^^sub     [rsp+238h+var_58], 40h^^^cmp     dword ptr [rsp+238h+var_1F0], 35h^^^mov     [rsp+238h+var_48], rbx^^^jle     loc_47E6F0^^^lea     r10, [rsp+238h+var_48]^^^nop     dword ptr [rax+00h]^^^mov     rax, [rsp+238h+var_58]^^^jmp     loc_47E853^^^mov     eax, 35h^^^sub     eax, dword ptr [rsp+238h+var_1F0]^^^lea     r10, [rsp+238h+var_48]^^^mov     [rsp+238h+var_1B0], eax^^^jz      short loc_47EE90^^^mov     ecx, eax^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+238h+var_208], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^sub     ecx, [rsp+238h+var_1B0]^^^mov     rax, rbx^^^mov     r10, [rsp+238h+var_208]^^^shr     rax, cl^^^or      [rsp+238h+var_48], rax^^^jmp     short loc_47EE90^^^xor     edx, edx^^^jmp     loc_47DDB9^^^mov     rdx, [rsp+238h+var_1E0]^^^lea     r10, [rsp+238h+var_1A8]^^^lea     r8, [rsp+238h+var_58]^^^lea     rcx, [rsp+238h+var_68]^^^mov     r9, r11^^^mov     rdi, rbp^^^mov     esi, r14d^^^mov     [rsp+238h+var_208], r11^^^mov     [rsp+238h+var_1E8], r10^^^mov     [rsp+238h+var_238], rdx^^^mov     rdx, r10^^^call    str_to_mpn_isra_0_0^^^mov     rbp, rax^^^mov     rax, [rsp+238h+var_58]^^^mov     r12, [rsp+238h+var_68]^^^mov     r11, [rsp+238h+var_208]^^^test    rax, rax^^^jle     loc_47F068^^^lea     r10, [rsp+238h+var_108]^^^mov     [rsp+238h+var_1D0], rbp^^^mov     rdx, r12^^^mov     r13d, offset _fpioconst_pow10^^^mov     r12, r14^^^mov     r15d, 1^^^mov     rcx, r10^^^mov     [rsp+238h+var_1D8], r10^^^mov     r10, [rsp+238h+var_1E8]^^^mov     [rsp+238h+var_1F0], rbx^^^mov     r14, rcx^^^mov     [rsp+238h+var_1C8], r11^^^mov     rbp, r10^^^jmp     short loc_47EFEB^^^lea     rcx, unk_4AEDC8[rax*8]^^^mov     r8, rbx^^^mov     rsi, rbp^^^mov     rdi, r14^^^call    __mpn_mul^^^mov     rdx, rbx^^^add     rdx, [rsp+238h+var_68]^^^test    rax, rax^^^mov     [rsp+238h+var_68], rdx^^^jnz     short loc_47EFCE^^^sub     rdx, 1^^^mov     [rsp+238h+var_68], rdx^^^mov     rax, [rsp+238h+var_58]^^^mov     rcx, rbp^^^mov     rbp, r14^^^mov     r14, rcx^^^add     r15d, r15d^^^add     r13, 18h^^^test    rax, rax^^^jz      short loc_47F02A^^^movsxd  rcx, r15d^^^test    rcx, rax^^^jz      short loc_47EFDF^^^mov     rbx, [r13+8]^^^xor     rax, rcx^^^mov     [rsp+238h+var_58], rax^^^mov     rax, [r13+0]^^^sub     rbx, 1^^^cmp     rbx, rdx^^^jle     short loc_47EF94^^^lea     rsi, unk_4AEDC8[rax*8]^^^mov     r8, rdx^^^mov     rcx, rbp^^^mov     rdx, rbx^^^mov     rdi, r14^^^call    __mpn_mul^^^jmp     short loc_47EFAA^^^mov     r10, rbp^^^cmp     r10, [rsp+238h+var_1D8]^^^mov     r14, r12^^^mov     rbx, [rsp+238h+var_1F0]^^^mov     rbp, [rsp+238h+var_1D0]^^^mov     r12, rdx^^^mov     r11, [rsp+238h+var_1C8]^^^jnz     short loc_47F068^^^mov     rdi, [rsp+238h+var_1E8]^^^lea     rdx, ds:0[rdx*8]^^^mov     rsi, r10^^^mov     [rsp+238h+var_208], r11^^^call    memcpy^^^mov     r11, [rsp+238h+var_208]^^^lea     rsi, [r12-1]^^^mov     eax, r12d^^^mov     r9d, r12d^^^shl     eax, 6^^^bsr     rdx, [rsp+rsi*8+238h+var_1A8]^^^xor     edx, 3Fh^^^sub     eax, edx^^^cmp     eax, 400h^^^mov     dword ptr [rsp+238h+var_1F0], eax^^^jg      loc_47FDE9^^^cmp     eax, 35h^^^jle     loc_47F64A^^^lea     r11d, [rax-35h]^^^mov     r10d, r11d^^^and     r11d, 3Fh^^^movsxd  r8, r11d^^^sar     r10d, 6^^^test    r8, r8^^^movsxd  rdx, r10d^^^jnz     loc_47F856^^^mov     r15, [rsp+238h+var_1E8]^^^lea     rsi, [rdx-1]^^^mov     r8b, 3Fh^^^mov     rdx, [r15+rdx*8]^^^mov     [rsp+238h+var_48], rdx^^^xor     ecx, ecx^^^cmp     [rsp+238h+var_1A8], 0^^^jnz     short loc_47F0FE^^^mov     rdx, [rsp+238h+var_1E8]^^^add     rdx, 8^^^nop     dword ptr [rax+rax+00000000h]^^^add     rdx, 8^^^add     ecx, 1^^^cmp     qword ptr [rdx-8], 0^^^jz      short loc_47F0F0^^^cmp     rbx, r14^^^mov     r9d, 1^^^ja      short loc_47F116^^^movsxd  rcx, ecx^^^xor     r9d, r9d^^^cmp     rcx, rsi^^^setl    r9b^^^mov     rcx, [rsp+rsi*8+238h+var_1A8]^^^mov     edx, [rsp+238h+var_1BC]^^^sub     eax, 1^^^lea     rdi, [rsp+238h+var_48]^^^movsxd  rsi, eax^^^call    round_and_return_0^^^jmp     loc_47E074^^^mov     eax, dword ptr [rsp+238h+var_1D8]^^^test    eax, eax^^^jz      loc_47F741^^^mov     rax, 1FFFFFFFFFFFFEF3h^^^cmp     r15, rax^^^ja      loc_47FD17^^^lea     rax, ds:432h[r15*4]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+238h+var_1F0], rax^^^jmp     loc_47DF89^^^mov     rdx, r15^^^neg     rdx^^^cmp     rdx, rax^^^cmovl   rdx, rax^^^jmp     loc_47E313^^^mov     rax, [rsp+238h+var_1A8]^^^mov     rcx, [rsp+238h+var_108]^^^cmp     rax, rcx^^^jnb     loc_47FD9E^^^cmp     [rsp+238h+var_68], 1^^^jnz     loc_47FD9E^^^mov     esi, dword ptr [rsp+238h+var_1F0]^^^xor     edi, edi^^^mov     r8d, 40h^^^mov     r9, rax^^^mov     rdx, r9^^^mov     rax, rdi^^^div     rcx^^^test    esi, esi^^^mov     r9, rdx^^^jnz     loc_47F255^^^test    rax, rax^^^jz      loc_47F26A^^^bsr     r10, rax^^^mov     rsi, [rsp+238h+var_58]^^^xor     r10d, 3Fh^^^movsxd  r11, r10d^^^sub     rsi, r11^^^mov     r11d, r8d^^^sub     r11d, r10d^^^mov     [rsp+238h+var_58], rsi^^^cmp     r11d, 35h^^^jle     loc_47FCF6^^^mov     ecx, 0Bh^^^mov     rbp, rdx^^^mov     edx, r10d^^^sub     ecx, r10d^^^mov     rbx, rax^^^lea     r12d, [rdx+35h]^^^shr     rax, cl^^^lea     r10, [rsp+238h+var_48]^^^mov     [rsp+238h+var_48], rax^^^xor     r9d, r9d^^^mov     r8d, 3Fh^^^test    rbp, rbp^^^setnz   r9b^^^sub     r8d, r12d^^^sub     rsi, 1^^^or      r9d, [rsp+238h+var_1AC]^^^jmp     loc_47E8B6^^^cmp     esi, 0FFFFFFF6h^^^jge     short loc_47F2A0^^^mov     [rsp+238h+var_48], rax^^^add     esi, 40h^^^jmp     loc_47F1BE^^^sub     [rsp+238h+var_58], 40h^^^cmp     esi, 35h^^^mov     [rsp+238h+var_48], rax^^^jle     loc_47F1BE^^^lea     r10, [rsp+238h+var_48]^^^mov     rbx, rax^^^mov     rbp, rdx^^^xor     r12d, r12d^^^mov     rsi, [rsp+238h+var_58]^^^jmp     short loc_47F231^^^mov     r12d, 35h^^^mov     dword ptr [rsp+238h+var_1F0], esi^^^mov     rbx, rax^^^sub     r12d, esi^^^mov     rbp, rdx^^^lea     r10, [rsp+238h+var_48]^^^test    r12d, r12d^^^jle     short loc_47F295^^^mov     ecx, r12d^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+238h+var_208], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^mov     rax, rbx^^^mov     r10, [rsp+238h+var_208]^^^sub     ecx, r12d^^^shr     rax, cl^^^or      [rsp+238h+var_48], rax^^^jmp     short loc_47F295^^^cmp     [rsp+238h+var_68], 1^^^mov     r12, [rsp+238h+var_108]^^^mov     rbp, [rsp+238h+var_100]^^^jg      loc_47F53D^^^mov     r14, [rsp+238h+var_1A8]^^^xor     r13d, r13d^^^cmp     rbp, r14^^^jbe     loc_47F54D^^^mov     edi, dword ptr [rsp+238h+var_1F0]^^^test    edi, edi^^^jle     loc_47FB59^^^mov     r15d, 35h^^^sub     r15d, dword ptr [rsp+238h+var_1F0]^^^lea     r10, [rsp+238h+var_48]^^^jz      short loc_47F36E^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     ecx, r15d^^^mov     edx, 1^^^mov     [rsp+238h+var_208], r10^^^call    __mpn_lshift^^^mov     r14, [rsp+238h+var_1A8]^^^mov     r10, [rsp+238h+var_208]^^^add     dword ptr [rsp+238h+var_1F0], 40h^^^cmp     dword ptr [rsp+238h+var_1F0], 35h^^^jg      loc_47FB44^^^mov     r13, r14^^^xor     r14d, r14d^^^mov     r8d, dword ptr [rsp+238h+var_1F0]^^^mov     rdi, r12^^^xor     ecx, ecx^^^neg     rdi^^^mov     esi, 40h^^^cmp     r13, rbp^^^jz      loc_47F48B^^^mov     rdx, r13^^^mov     rax, r14^^^div     rbp^^^mov     rbx, rax^^^mov     r13, rdx^^^mov     rax, r12^^^mul     rbx^^^nop     dword ptr [rax+00h]^^^cmp     rdx, r13^^^ja      short loc_47F3C7^^^test    rax, rax^^^jz      short loc_47F3D7^^^cmp     rdx, r13^^^jnz     short loc_47F3D7^^^sub     rbx, 1^^^sub     rax, r12^^^sbb     rdx, 0^^^add     r13, rbp^^^jnb     short loc_47F3B8^^^mov     r14, rcx^^^sub     r14, rax^^^sbb     r13, rdx^^^test    r8d, r8d^^^jnz     loc_47F470^^^test    rbx, rbx^^^jz      loc_47F500^^^bsr     rdx, rbx^^^mov     rax, [rsp+238h+var_58]^^^xor     edx, 3Fh^^^movsxd  r8, edx^^^sub     rax, r8^^^mov     r8d, esi^^^sub     r8d, edx^^^mov     [rsp+238h+var_58], rax^^^cmp     r8d, 35h^^^jle     loc_47F509^^^mov     ecx, 0Bh^^^lea     r15d, [rdx+35h]^^^sub     ecx, edx^^^mov     rdx, rbx^^^shr     rdx, cl^^^mov     [rsp+238h+var_48], rdx^^^test    r13, r13^^^jnz     loc_47F84B^^^cmp     byte ptr [rsp+238h+var_1B0], 0^^^jnz     loc_47F84B^^^xor     r9d, r9d^^^test    r14, r14^^^setnz   r9b^^^mov     r8d, 3Fh^^^lea     rsi, [rax-1]^^^sub     r8d, r15d^^^jmp     loc_47E8B6^^^cmp     r8d, 0FFFFFFF6h^^^jge     short loc_47F4AD^^^add     r8d, 40h^^^cmp     r13, rbp^^^mov     [rsp+238h+var_48], rbx^^^jnz     loc_47F39F^^^add     r13, r14^^^jnb     loc_47F520^^^sub     r13, r12^^^mov     r14, rcx^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^add     r14, r12^^^adc     r13, 0^^^jmp     loc_47F3E0^^^mov     r15d, 35h^^^mov     dword ptr [rsp+238h+var_1F0], r8d^^^sub     r15d, r8d^^^jz      short loc_47F4F0^^^mov     ecx, r15d^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+238h+var_208], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^mov     rax, rbx^^^mov     r10, [rsp+238h+var_208]^^^sub     ecx, r15d^^^shr     rax, cl^^^or      [rsp+238h+var_48], rax^^^mov     rax, [rsp+238h+var_58]^^^jmp     loc_47F438^^^sub     [rsp+238h+var_58], 40h^^^cmp     r8d, 35h^^^mov     [rsp+238h+var_48], rbx^^^jle     loc_47F396^^^jmp     short loc_47F4F0^^^xor     eax, eax^^^test    r12, r12^^^mov     rdx, r12^^^setnz   al^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^sub     rdx, rax^^^mov     rax, rdi^^^jmp     loc_47F3B8^^^mov     r13, [rsp+238h+var_1A0]^^^mov     r14, [rsp+238h+var_1A8]^^^xor     r15d, r15d^^^lea     r10, [rsp+238h+var_48]^^^jmp     loc_47F384^^^shr     rdx, 2^^^jmp     loc_47E2BB^^^mov     edx, [rsp+238h+var_1BC]^^^lea     rdi, [rsp+238h+var_48]^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^call    round_and_return_0^^^jmp     loc_47E074^^^mov     ecx, 3^^^mov     rdi, r9^^^mov     r8d, 3Fh^^^sub     ecx, eax^^^shr     rdi, cl^^^mov     rcx, rdi^^^lea     rdi, [rsp+238h+var_48]^^^or      rcx, rdx^^^mov     edx, [rsp+238h+var_1BC]^^^mov     [rsp+238h+var_48], rcx^^^lea     ecx, [rax+3Dh]^^^shl     r9, cl^^^mov     rcx, r9^^^mov     r9d, 1^^^call    round_and_return_0^^^jmp     loc_47E074^^^sub     eax, 30h^^^cdqe^^^cmp     rax, rdx^^^jle     loc_47DFF8^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47F807^^^mov     r14d, dword ptr [rsp+238h+var_1D8]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^test    r14d, r14d^^^mov     dword ptr fs:[rax], 22h^^^jnz     loc_47F807^^^mov     r12d, [rsp+238h+var_1BC]^^^mov     rdx, 7FF0000000000000h^^^test    r12d, r12d^^^jz      short loc_47F620^^^mov     rdx, 0FFF0000000000000h^^^nop     dword ptr [rax+00h]^^^add     rdi, 1^^^movzx   eax, byte ptr [rdi]^^^sub     eax, 30h^^^cmp     al, 9^^^jbe     short loc_47F620^^^mov     [rsp+238h+var_220], rdx^^^test    r9, r9^^^movsd   xmm0, [rsp+238h+var_220]^^^jz      loc_47E074^^^mov     [r9], rdi^^^jmp     loc_47E074^^^cmp     rbx, r14^^^jnz     loc_47F8BA^^^lea     ebx, [rax-1]^^^mov     edx, ebx^^^sar     edx, 1Fh^^^shr     edx, 1Ah^^^lea     eax, [rbx+rdx]^^^and     eax, 3Fh^^^sub     eax, edx^^^movsxd  rdx, eax^^^cmp     rdx, 34h^^^jz      loc_47FB88^^^cmp     rdx, 33h^^^jle     loc_47FAA6^^^test    r12, r12^^^jg      loc_47FC3A^^^lea     r10, [rsp+238h+var_48]^^^mov     edx, 1^^^mov     rsi, [rsp+238h+var_1E8]^^^sub     rdx, r12^^^lea     ecx, [rax-34h]^^^lea     rdi, [r10+rdx*8]^^^mov     rdx, r12^^^mov     [rsp+238h+var_208], r10^^^call    __mpn_rshift^^^mov     rdx, [rsp+238h+var_68]^^^mov     r10, [rsp+238h+var_208]^^^neg     rdx^^^test    rdx, rdx^^^mov     [rsp+rdx*8+238h+var_48], rax^^^jle     short loc_47F71B^^^mov     rsi, rdx^^^shr     rsi, 1^^^cmp     rdx, 3^^^lea     rax, [rsi+rsi]^^^jbe     loc_47FC53^^^test    rax, rax^^^jz      loc_47FC53^^^pxor    xmm0, xmm0^^^xor     ecx, ecx^^^mov     rdi, rcx^^^add     rcx, 1^^^shl     rdi, 4^^^cmp     rsi, rcx^^^movdqa  xmmword ptr [r10+rdi], xmm0^^^ja      short loc_47F6EF^^^cmp     rdx, rax^^^jz      short loc_47F71B^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rdx, rax^^^jg      short loc_47F70A^^^mov     edx, [rsp+238h+var_1BC]^^^movsxd  rsi, ebx^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^mov     rdi, r10^^^call    round_and_return_0^^^jmp     loc_47E074^^^movzx   eax, byte ptr [r12]^^^jmp     loc_47DE5F^^^test    r15, r15^^^jz      loc_47F881^^^test    rcx, rcx^^^jnz     loc_47FE4E^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^cmp     r15, rax^^^ja      loc_47FE4E^^^mov     eax, 100h^^^sub     rax, r15^^^lea     rax, ds:3[rax*4]^^^mov     [rsp+238h+var_1F0], rax^^^jmp     loc_47EDC4^^^jnz     loc_47FD30^^^test    r15d, r15d^^^mov     eax, r15d^^^jle     short loc_47F7B9^^^sub     eax, 1^^^nop     dword ptr [rax+00000000h]^^^movsxd  rdx, eax^^^mov     rcx, [rsp+rdx*8+238h+var_1A8]^^^lea     edx, [rax+1]^^^sub     eax, 1^^^cmp     eax, 0FFFFFFFFh^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+238h+var_1A8], rcx^^^jnz     short loc_47F798^^^mov     [rsp+238h+var_1A8], 0^^^mov     [rsp+r15*8+238h+var_108], 0^^^mov     rcx, [rsp+r15*8+238h+var_1A8]^^^mov     [rsp+238h+var_1B0], 0^^^jmp     loc_47E6C0^^^cmp     rbx, r14^^^jz      loc_47E0EA^^^xor     r15d, r15d^^^cmp     r10b, 70h^^^mov     r13, r14^^^jz      loc_47DE32^^^jmp     loc_47E0EA^^^mov     r13d, [rsp+238h+var_1BC]^^^xor     edx, edx^^^test    r13d, r13d^^^jz      loc_47F620^^^mov     rdx, 8000000000000000h^^^jmp     loc_47F620^^^movsxd  rax, r9d^^^mov     rsi, 7FFFFFFFFFFFFFFFh^^^sub     rsi, rax^^^lea     rax, [rsi+4]^^^add     rsi, 1^^^cmovns  rax, rsi^^^sar     rax, 2^^^jmp     loc_47EBC3^^^mov     r9d, 1^^^jmp     loc_47F459^^^sub     r8, 1^^^cmp     rsi, rdx^^^jg      loc_47F90C^^^mov     rdi, [rsp+rdx*8+238h+var_1A8]^^^mov     ecx, r11d^^^mov     rsi, rdx^^^shr     rdi, cl^^^mov     [rsp+238h+var_48], rdi^^^jmp     loc_47F0D2^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47FB75^^^mov     rax, 1FFFFFFFFFFFFEFFh^^^cmp     rcx, rax^^^ja      loc_47FFA7^^^lea     rax, ds:403h[rcx*4]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+238h+var_1F0], rax^^^jmp     loc_47DF89^^^lea     r10, [rsp+238h+var_48]^^^mov     rsi, [rsp+238h+var_1E8]^^^lea     rdx, ds:0[r12*8]^^^mov     [rsp+238h+var_208], r11^^^mov     rdi, r10^^^call    memcpy^^^mov     r11, [rsp+238h+var_208]^^^jmp     loc_47E350^^^mov     rsi, [rsp+238h+var_1E8]^^^mov     rdi, [rsp+238h+var_1D8]^^^lea     rdx, ds:0[r15*8]^^^mov     [rsp+238h+var_208], r11^^^call    memcpy^^^mov     r11, [rsp+238h+var_208]^^^jmp     loc_47E4A1^^^lea     r13, [rdx+1]^^^mov     rdi, [rsp+rdx*8+238h+var_1A8]^^^sub     r9d, 1^^^mov     ebp, 40h^^^mov     dword ptr [rsp+238h+var_1F0], r9d^^^mov     r9, rdx^^^sub     ebp, r11d^^^mov     r12, r13^^^mov     ecx, r11d^^^add     r10d, 1^^^sub     r9, rdx^^^shr     rdi, cl^^^movsxd  rcx, r10d^^^mov     [rsp+238h+var_1D8], rdi^^^mov     rdi, [rsp+rcx*8+238h+var_1A8]^^^mov     ecx, ebp^^^mov     r15, rdi^^^shl     r15, cl^^^mov     rcx, [rsp+238h+var_1D8]^^^or      r15, rcx^^^mov     [rsp+r9*8+238h+var_48], r15^^^mov     r9, r12^^^add     r12, 1^^^cmp     r10d, dword ptr [rsp+238h+var_1F0]^^^jnz     short loc_47F92F^^^mov     rcx, rdx^^^not     rcx^^^add     rsi, rcx^^^add     r13, rsi^^^sub     r13, rdx^^^test    r13, r13^^^jle     loc_47F86B^^^mov     rsi, rdx^^^jmp     loc_47F0D2^^^mov     ebp, 1Eh^^^mov     [rsp+238h+var_1F0], 135h^^^jmp     loc_47DF9F^^^mov     rcx, [r8+70h]^^^mov     rbp, rsi^^^jmp     short loc_47F9B3^^^mov     rbp, r12^^^movzx   eax, byte ptr [rbp+1]^^^lea     r12, [rbp+1]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_47F9B0^^^movsx   rdx, al^^^mov     edx, [rcx+rdx*4]^^^sub     edx, 61h^^^cmp     dl, 19h^^^jbe     short loc_47F9B0^^^cmp     al, 5Fh^^^jz      short loc_47F9B0^^^cmp     al, 29h^^^movsd   xmm0, cs:qword_4B29B0^^^jnz     loc_47ED77^^^lea     rdi, [rbx+4]^^^lea     rsi, [rsp+238h+var_40]^^^xor     ecx, ecx^^^xor     edx, edx^^^movsd   [rsp+238h+var_208], xmm0^^^mov     [rsp+238h+var_218], r9^^^call    ____strtoull_l_internal^^^cmp     [rsp+238h+var_40], r12^^^movsd   xmm0, [rsp+238h+var_208]^^^mov     r9, [rsp+238h+var_218]^^^jz      loc_47FC73^^^lea     rsi, [rbp+2]^^^jmp     loc_47ED77^^^mov     edx, 35h^^^sub     edx, dword ptr [rsp+238h+var_1F0]^^^mov     [rsp+238h+var_1B0], edx^^^jz      loc_47E5F3^^^lea     r10, [rsp+238h+var_48]^^^mov     ecx, edx^^^mov     edx, 1^^^mov     rsi, r10^^^mov     rdi, r10^^^call    __mpn_lshift^^^mov     rax, [rsp+238h+var_68]^^^jmp     loc_47E5F3^^^mov     rdi, rax^^^xor     ecx, ecx^^^xor     r15d, r15d^^^jmp     loc_47E20F^^^sub     [rsp+238h+var_58], rdx^^^mov     [rsp+238h+var_1B0], 0^^^jmp     loc_47E5FC^^^sub     r14, 1^^^cmp     byte ptr [rsp+238h+var_1D0], 0^^^cmovz   r14, [rsp+238h+var_1F0]^^^mov     [rsp+238h+var_1F0], r14^^^mov     rdi, r14^^^jmp     loc_47E136^^^mov     ebp, 1^^^mov     ecx, 34h^^^lea     r10, [rsp+238h+var_48]^^^sub     ecx, eax^^^mov     rax, rbp^^^mov     rsi, [rsp+238h+var_1E8]^^^sub     rax, r12^^^mov     rdx, r12^^^mov     [rsp+238h+var_208], r10^^^lea     rdi, [r10+rax*8]^^^call    __mpn_lshift^^^sub     rbp, [rsp+238h+var_68]^^^mov     r10, [rsp+238h+var_208]^^^test    rbp, rbp^^^jle     loc_47F71B^^^mov     rcx, rbp^^^shr     rcx, 1^^^cmp     rbp, 3^^^lea     rax, [rcx+rcx]^^^jbe     loc_47FDFC^^^test    rax, rax^^^jz      loc_47FDFC^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rcx, rdx^^^movdqa  xmmword ptr [r10+rsi], xmm0^^^ja      short loc_47FB0F^^^cmp     rbp, rax^^^jz      loc_47F71B^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rax, rbp^^^jl      short loc_47FB2E^^^jmp     loc_47F71B^^^mov     r13, r14^^^mov     rax, [rsp+238h+var_58]^^^xor     ebx, ebx^^^xor     r14d, r14d^^^jmp     loc_47F438^^^sub     rcx, 40h^^^xor     r15d, r15d^^^lea     r10, [rsp+238h+var_48]^^^mov     [rsp+238h+var_58], rcx^^^jmp     loc_47F373^^^mov     ebp, 66h^^^mov     [rsp+238h+var_1F0], 403h^^^jmp     loc_47DF9F^^^mov     ebp, 1^^^lea     r10, [rsp+238h+var_48]^^^mov     rsi, [rsp+238h+var_1E8]^^^mov     rax, rbp^^^lea     rdx, ds:0[r12*8]^^^sub     rax, r12^^^mov     [rsp+238h+var_208], r10^^^lea     rdi, [r10+rax*8]^^^call    memcpy^^^sub     rbp, [rsp+238h+var_68]^^^mov     r10, [rsp+238h+var_208]^^^test    rbp, rbp^^^jle     loc_47F71B^^^mov     rcx, rbp^^^shr     rcx, 1^^^mov     rax, rcx^^^add     rax, rax^^^jz      loc_47FFE5^^^cmp     rbp, 3^^^jbe     loc_47FFE5^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rdx, rcx^^^movdqa  xmmword ptr [r10+rsi], xmm0^^^jb      short loc_47FBEE^^^cmp     rax, rbp^^^jz      loc_47F71B^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rax, rbp^^^jl      short loc_47FC0D^^^jmp     loc_47F71B^^^mov     rax, [rsp+238h+var_58]^^^xor     ebx, ebx^^^lea     r10, [rsp+238h+var_48]^^^jmp     loc_47E853^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 4E3h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsize5364164^^^call    __assert_fail^^^xor     eax, eax^^^jmp     loc_47F70A^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 621h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aEmpty1^^^call    __assert_fail^^^mov     rdi, 0FFFFFFFFFFFFFh^^^xor     ecx, ecx^^^movsd   [rsp+238h+var_220], xmm0^^^test    rax, rdi^^^mov     rsi, [rsp+238h+var_220]^^^mov     edx, 80000h^^^jz      short loc_47FCA3^^^mov     rdx, rax^^^mov     ecx, eax^^^shr     rdx, 20h^^^and     edx, 0FFFFFh^^^and     edx, 0FFFFFh^^^mov     rax, 0FFF00000FFFFFFFFh^^^shl     rdx, 20h^^^and     rax, rsi^^^or      rax, rdx^^^mov     rdx, 0FFFFFFFF00000000h^^^and     rax, rdx^^^or      rax, rcx^^^mov     [rsp+238h+var_220], rax^^^movsd   xmm0, [rsp+238h+var_220]^^^jmp     loc_47FA1F^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 42Bh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintma_1^^^call    __assert_fail^^^mov     esi, r11d^^^jmp     loc_47F273^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 3FEh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroBas_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 354h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintma_2^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 646h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsizeDensize^^^call    __assert_fail^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_47E140^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 374h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintma_3^^^call    __assert_fail^^^mov     r10d, [rsp+238h+var_1BC]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^movsd   xmm0, cs:qword_4B29A0^^^test    r10d, r10d^^^mov     dword ptr fs:[rax], 22h^^^jz      loc_47E074^^^jmp     loc_47ED21^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 573h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsize1ND^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 202h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDecimal_len0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 335h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noUintmax_^^^call    __assert_fail^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_47ED0B^^^xor     eax, eax^^^jmp     loc_47FB2E^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 3FAh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroBase1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 50Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noInt_noEx^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 416h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aBits0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 35Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zero0Int_^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 388h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroUin_1^^^call    __assert_fail^^^mov     rbp, 6666666666666667h^^^mov     rax, [rsp+238h+var_1F0]^^^jmp     loc_47DF89^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 37Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zero0In_0^^^call    __assert_fail^^^mov     dword ptr [rsp+238h+var_1F0], esi^^^jmp     loc_47EE71^^^mov     rcx, [rax+50h]^^^movzx   edx, byte ptr [rcx]^^^mov     [rsp+238h+var_1D8], rcx^^^sub     edx, 1^^^cmp     dl, 7Dh^^^ja      loc_47DCE8^^^mov     rdx, [rax+48h]^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+238h+var_1E0], rdx^^^jz      loc_47DCE8^^^jmp     loc_47DCFA^^^mov     r10, [rsp+238h+var_1E0]^^^movzx   esi, byte ptr [r10]^^^test    sil, sil^^^jz      loc_47FF9E^^^cmp     sil, cl^^^jnz     loc_47DE56^^^mov     ecx, 1^^^jmp     short loc_47FF1F^^^add     rcx, 1^^^cmp     sil, [r13+rcx-1]^^^jnz     loc_47DE56^^^mov     rdi, [rsp+238h+var_1E0]^^^movzx   esi, byte ptr [rdi+rcx]^^^test    sil, sil^^^jnz     short loc_47FF10^^^sub     rcx, 1^^^add     r13, rcx^^^jmp     loc_47E0AC^^^mov     r10, [rsp+238h+var_1E0]^^^mov     r14, rbx^^^movzx   esi, byte ptr [r10]^^^cmp     bpl, 30h^^^jz      short loc_47FF81^^^test    sil, sil^^^jz      short loc_47FF95^^^cmp     sil, bpl^^^jnz     loc_47DE18^^^mov     ecx, 1^^^jmp     short loc_47FF6B^^^add     rcx, 1^^^cmp     dil, [r14+rcx-1]^^^jnz     short loc_47FF8E^^^mov     r15, [rsp+238h+var_1E0]^^^movzx   edi, byte ptr [r15+rcx]^^^test    dil, dil^^^jnz     short loc_47FF60^^^sub     rcx, 1^^^add     r14, rcx^^^movzx   ebp, byte ptr [r14+1]^^^add     r14, 1^^^mov     ecx, ebp^^^jmp     short loc_47FF45^^^mov     ecx, esi^^^jmp     loc_47DE18^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_47FF7E^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_47FF31^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 368h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroUin_2^^^call    __assert_fail^^^xor     edi, edi^^^mov     rax, [rsp+238h+var_1E8]^^^jmp     loc_47E690^^^mov     ecx, offset __PRETTY_FUNCTION___12529^^^mov     edx, 670h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aCy0^^^call    __assert_fail^^^xor     eax, eax^^^jmp     loc_47FC0D^^^
_start$$$xor     ebp, ebp^^^mov     r9, rdx^^^pop     rsi^^^mov     rdx, rsp^^^and     rsp, 0FFFFFFFFFFFFFFF0h^^^push    rax^^^push    rsp^^^mov     r8, offset __libc_csu_fini^^^mov     rcx, offset __libc_csu_init^^^mov     rdi, offset main^^^call    __libc_start_main^^^hlt^^^
_IO_default_setbuf$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     rax, [rdi+0D8h]^^^mov     rbp, rsi^^^mov     r12, rdx^^^call    qword ptr [rax+60h]^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_42C2D0^^^test    r12, r12^^^mov     eax, [rbx]^^^jz      short loc_42C1EB^^^test    rbp, rbp^^^jnz     short loc_42C260^^^mov     rdi, [rbx+38h]^^^or      eax, 2^^^lea     rbp, [rbx+84h]^^^mov     [rbx], eax^^^lea     r12, [rbx+83h]^^^test    rdi, rdi^^^jz      short loc_42C20B^^^test    al, 1^^^jz      short loc_42C288^^^or      dword ptr [rbx], 1^^^mov     [rbx+38h], r12^^^mov     [rbx+40h], rbp^^^mov     qword ptr [rbx+30h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+8], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rdi, [rbx+38h]^^^mov     edx, eax^^^add     r12, rbp^^^and     edx, 0FFFFFFFDh^^^mov     [rbx], edx^^^test    rdi, rdi^^^jz      short loc_42C277^^^test    al, 1^^^jz      short loc_42C2B0^^^mov     [rbx+38h], rbp^^^mov     [rbx+40h], r12^^^or      dword ptr [rbx], 1^^^jmp     short loc_42C216^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^jmp     loc_42C20B^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^jmp     short loc_42C277^^^xor     ebx, ebx^^^jmp     loc_42C246^^^
check_one_fd.part.0$$$push    rbp^^^mov     eax, esi^^^mov     ebp, edi^^^and     eax, 3^^^mov     edi, offset aDevFull^^^push    rbx^^^xor     ebx, ebx^^^sub     rsp, 98h^^^dec     eax^^^mov     eax, offset aDevNull^^^setz    bl^^^cmovnz  rdi, rax^^^xor     edx, edx^^^xor     eax, eax^^^lea     rbx, ds:103h[rbx*4]^^^call    __open_nocancel^^^cmp     eax, ebp^^^jnz     short loc_400434^^^mov     rdx, rsp^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^jnz     short loc_400434^^^mov     eax, [rsp+0A8h+var_90]^^^and     eax, 0F000h^^^cmp     eax, 2000h^^^jnz     short loc_400434^^^cmp     [rsp+0A8h+var_80], rbx^^^jz      short loc_400437^^^hlt^^^jmp     short loc_400434^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^retn^^^
_L_unlock_11152$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_407C5A^^^
classify_object_over_fdes$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 38h^^^mov     edx, [rsi]^^^mov     [rsp+68h+var_60], 0^^^test    edx, edx^^^jz      loc_493411^^^lea     rax, [rdi+10h]^^^xor     r15d, r15d^^^xor     r12d, r12d^^^xor     r14d, r14d^^^mov     [rsp+68h+var_58], rax^^^lea     rax, [rdi+8]^^^mov     [rsp+68h+var_50], rax^^^jmp     loc_493381^^^shr     ax, 3^^^mov     r14, rcx^^^movzx   eax, al^^^cmp     r12d, eax^^^jz      short loc_493314^^^or      byte ptr [r13+20h], 4^^^lea     rdx, [rbx+8]^^^lea     rcx, [rsp+68h+var_40]^^^mov     rsi, r15^^^mov     edi, ebp^^^call    read_encoded_value_with_base_0^^^mov     edi, ebp^^^call    size_of_encoded_value^^^mov     eax, eax^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^cmp     rax, 7^^^ja      short loc_493350^^^lea     ecx, ds:0[rax*8]^^^mov     edx, 1^^^shl     rdx, cl^^^sub     rdx, 1^^^mov     rax, [rsp+68h+var_40]^^^test    rdx, rax^^^jz      short loc_493370^^^add     [rsp+68h+var_60], 1^^^cmp     rax, [r13+0]^^^jnb     short loc_493370^^^mov     [r13+0], rax^^^nop     word ptr [rax+rax+00h]^^^mov     eax, [rbx]^^^lea     rbx, [rbx+rax+4]^^^mov     eax, [rbx]^^^test    eax, eax^^^jz      loc_493411^^^mov     eax, [rbx+4]^^^test    eax, eax^^^jz      short loc_493370^^^lea     rcx, [rbx+4]^^^cdqe^^^movzx   ebp, r12b^^^sub     rcx, rax^^^cmp     r14, rcx^^^jz      loc_493314^^^mov     rdi, rcx^^^mov     [rsp+68h+var_68], rcx^^^call    get_cie_encoding^^^cmp     eax, 0FFh^^^mov     r12d, eax^^^jz      short loc_493408^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, [rsp+68h+var_50]^^^movzx   ebp, al^^^mov     edi, ebp^^^call    base_from_object_isra_3^^^mov     r15, rax^^^movzx   eax, word ptr [r13+20h]^^^mov     rcx, [rsp+68h+var_68]^^^mov     edx, eax^^^and     dx, 7F8h^^^cmp     dx, 7F8h^^^jnz     loc_493300^^^movzx   r14d, r12b^^^and     ax, 0F807h^^^shl     r14d, 3^^^or      eax, r14d^^^mov     r14, rcx^^^mov     [r13+20h], ax^^^jmp     loc_493314^^^mov     [rsp+68h+var_60], 0FFFFFFFFFFFFFFFFh^^^mov     rax, [rsp+68h+var_60]^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
_IO_getline_info$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12d, ecx^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    r9, r9^^^mov     [rsp+58h+var_50], rsi^^^mov     [rsp+58h+var_3C], r8d^^^mov     [rsp+58h+var_48], r9^^^jz      short loc_474962^^^mov     dword ptr [r9], 0^^^mov     edi, [rbx+0C0h]^^^test    edi, edi^^^jz      loc_474AB6^^^xor     eax, eax^^^test    rbp, rbp^^^jz      loc_474A08^^^mov     r15, [rsp+58h+var_50]^^^jmp     short loc_4749C2^^^cmp     r13, rbp^^^mov     esi, r12d^^^mov     rdi, r14^^^cmovnb  r13, rbp^^^mov     rdx, r13^^^call    memchr^^^test    rax, rax^^^mov     rcx, rax^^^jnz     short loc_474A20^^^mov     rdi, r15^^^mov     rdx, r13^^^mov     rsi, r14^^^sub     rbp, r13^^^add     r15, r13^^^call    memcpy^^^add     [rbx+8], r13^^^test    rbp, rbp^^^jz      short loc_474A00^^^mov     r14, [rbx+8]^^^mov     r13, [rbx+10h]^^^sub     r13, r14^^^test    r13, r13^^^jg      short loc_474988^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_474A71^^^cmp     eax, r12d^^^jz      loc_474A8D^^^sub     rbp, 1^^^mov     [r15], al^^^add     r15, 1^^^test    rbp, rbp^^^jnz     short loc_4749C2^^^nop     dword ptr [rax+00h]^^^mov     rax, r15^^^sub     rax, [rsp+58h+var_50]^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     esi, [rsp+58h+var_3C]^^^mov     rbp, rax^^^mov     r12, r15^^^sub     rbp, r14^^^sub     r12, [rsp+58h+var_50]^^^test    esi, esi^^^js      short loc_474A43^^^add     rcx, 1^^^cmp     [rsp+58h+var_3C], 1^^^sbb     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, rbp^^^mov     rsi, r14^^^mov     rdi, r15^^^mov     [rsp+58h+var_58], rcx^^^call    memcpy^^^mov     rcx, [rsp+58h+var_58]^^^lea     rax, [rbp+r12+0]^^^mov     [rbx+8], rcx^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+58h+var_48], 0^^^jz      short loc_474A00^^^mov     rdx, [rsp+58h+var_48]^^^mov     [rdx], eax^^^mov     rax, r15^^^sub     rax, [rsp+58h+var_50]^^^jmp     loc_474A08^^^cmp     [rsp+58h+var_3C], 0^^^jle     short loc_474AA0^^^mov     [r15], r12b^^^add     r15, 1^^^jmp     loc_474A00^^^jz      loc_474A00^^^mov     esi, r12d^^^mov     rdi, rbx^^^call    _IO_sputbackc^^^jmp     loc_474A00^^^mov     dword ptr [rbx+0C0h], 0FFFFFFFFh^^^jmp     loc_474970^^^
_IO_default_stat$$$mov     eax, 0FFFFFFFFh^^^retn^^^
_dl_rtld_di_serinfo$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 28h^^^test    dl, dl^^^mov     [rsp+38h+var_30], rsi^^^mov     [rsp+38h+var_24], dl^^^jnz     loc_451AA8^^^mov     eax, [rsi+8]^^^add     rax, 1^^^mov     [rsp+38h+var_28], 0^^^shl     rax, 4^^^add     rsi, rax^^^cmp     qword ptr [rbp+128h], 0^^^mov     [rsp+38h+var_38], rsi^^^jz      loc_451B20^^^mov     rdi, cs:env_path_list^^^mov     r10, rsp^^^call    add_path_11355_isra_2_constprop_7^^^mov     rdi, [rbp+3A8h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_451A7B^^^test    rdi, rdi^^^jz      short loc_451AD8^^^mov     r10, rsp^^^call    add_path_11355_isra_2_constprop_7^^^test    byte ptr [rbp+3D5h], 8^^^jz      short loc_451AC0^^^cmp     [rsp+38h+var_24], 0^^^jz      short loc_451A9E^^^mov     rax, [rsp+38h+var_30]^^^mov     edx, [rax+8]^^^add     rdx, 1^^^shl     rdx, 4^^^add     [rax], rdx^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     dword ptr [rsi+8], 0^^^mov     qword ptr [rsi], 0^^^xor     eax, eax^^^jmp     loc_451A2D^^^mov     rdi, cs:rtld_search_dirs^^^mov     r10, rsp^^^call    add_path_11355_isra_2_constprop_7^^^jmp     short loc_451A84^^^mov     rax, [rbp+128h]^^^test    rax, rax^^^jz      loc_451C00^^^mov     rdx, [rbp+68h]^^^mov     rsi, [rax+8]^^^lea     rdi, [rbp+3A8h]^^^mov     ecx, offset aRunpath^^^add     rsi, [rdx+8]^^^mov     rdx, rbp^^^call    decompose_rpath^^^test    al, al^^^jz      loc_451A7B^^^mov     rdi, [rbp+3A8h]^^^jmp     loc_451A73^^^mov     rbx, rbp^^^jmp     short loc_451B3C^^^mov     r10, rsp^^^call    add_path_11355_isra_2_constprop_7^^^mov     rbx, [rbx+2D8h]^^^test    rbx, rbx^^^jz      short loc_451B90^^^mov     rdi, [rbx+318h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_451B30^^^test    rdi, rdi^^^jnz     short loc_451B28^^^mov     rax, [rbx+0B8h]^^^test    rax, rax^^^jz      loc_451BF0^^^mov     rdx, [rbx+68h]^^^mov     rsi, [rax+8]^^^lea     rdi, [rbx+318h]^^^mov     ecx, offset aRpath^^^add     rsi, [rdx+8]^^^mov     rdx, rbx^^^call    decompose_rpath^^^test    al, al^^^jz      short loc_451B30^^^mov     rdi, [rbx+318h]^^^jmp     short loc_451B28^^^cmp     qword ptr [rbp+30h], 0^^^jnz     loc_451A52^^^mov     rbx, cs:_dl_ns^^^test    rbx, rbx^^^jz      loc_451A52^^^cmp     rbx, rbp^^^jz      loc_451A52^^^movzx   eax, byte ptr [rbx+314h]^^^and     eax, 3^^^cmp     al, 2^^^jz      loc_451A52^^^mov     rdi, [rbx+318h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      loc_451A52^^^test    rdi, rdi^^^jz      short loc_451C10^^^mov     r10, rsp^^^call    add_path_11355_isra_2_constprop_7^^^jmp     loc_451A52^^^mov     qword ptr [rbx+318h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_451B30^^^mov     qword ptr [rbp+3A8h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_451A7B^^^mov     rax, [rbx+0B8h]^^^test    rax, rax^^^jz      short loc_451C4D^^^mov     rdx, [rbx+68h]^^^mov     rsi, [rax+8]^^^lea     rdi, [rbx+318h]^^^mov     ecx, offset aRpath^^^add     rsi, [rdx+8]^^^mov     rdx, rbx^^^call    decompose_rpath^^^test    al, al^^^jz      loc_451A52^^^mov     rdi, [rbx+318h]^^^jmp     short loc_451BDC^^^mov     qword ptr [rbx+318h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_451A52^^^
fputs_unlocked$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     rbp, rdi^^^call    strlen^^^mov     edx, [rbx+0C0h]^^^mov     r12, rax^^^test    edx, edx^^^jnz     short loc_426850^^^mov     dword ptr [rbx+0C0h], 0FFFFFFFFh^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^cmp     rax, r12^^^setz    al^^^movzx   eax, al^^^lea     eax, [rax+rax-1]^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     eax, 0FFFFFFFFh^^^cmp     edx, eax^^^jz      short loc_426815^^^jmp     short loc_426835^^^
_L_unlock_4820$$$lea     rdi, [r13+0]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_404C2B^^^
_dl_new_object$$$push    r15^^^push    r14^^^mov     r14d, r8d^^^push    r13^^^mov     r13d, edx^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^mov     rdi, rsi^^^sub     rsp, 28h^^^mov     [rsp+58h+var_50], r9^^^call    strlen^^^lea     rdi, [rax+489h]^^^mov     esi, 1^^^mov     [rsp+58h+var_48], rax^^^call    calloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rsp+58h+var_48]^^^jz      loc_453CF7^^^mov     [r15+28h], rax^^^lea     rax, [rax+468h]^^^lea     rdi, [r15+488h]^^^add     rdx, 1^^^mov     rsi, rbp^^^and     r13d, 3^^^mov     [r15+2C8h], rax^^^lea     rax, [r15+470h]^^^mov     [r15+38h], rax^^^call    memcpy^^^mov     [r15+470h], rax^^^movzx   eax, byte ptr [r15+314h]^^^mov     dword ptr [r15+480h], 1^^^mov     [r15+8], rbx^^^mov     r9, [rsp+58h+var_50]^^^and     eax, 0FFFFFFFCh^^^or      eax, r13d^^^test    byte ptr cs:_dl_debug_mask+1, 1^^^mov     [r15+314h], al^^^jz      loc_453D48^^^lea     rax, [r15+358h]^^^mov     [r15+2D8h], r12^^^mov     [r15+30h], r9^^^mov     qword ptr [r15+378h], 4^^^mov     [r15+380h], rax^^^lea     rax, [r9+r9*8]^^^shl     rax, 4^^^mov     rax, ds:_dl_ns[rax]^^^test    rax, rax^^^jz      loc_453D60^^^add     rax, 2B8h^^^test    r12, r12^^^mov     edx, 8^^^mov     [r15+358h], rax^^^mov     esi, 1^^^mov     ecx, 1^^^jnz     short loc_453C2B^^^jmp     loc_453D70^^^mov     r12, rax^^^mov     rax, [r12+2D8h]^^^test    rax, rax^^^jnz     short loc_453C28^^^test    ecx, ecx^^^lea     rax, [r12+2B8h]^^^jnz     loc_453D10^^^mov     [r15+rdx+358h], rax^^^movzx   ebp, byte ptr [rbx]^^^lea     rax, [r15+2B8h]^^^mov     [r15+388h], rax^^^test    bpl, bpl^^^jz      loc_453CF7^^^mov     rdi, rbx^^^call    strlen^^^add     rax, 1^^^cmp     bpl, 2Fh^^^mov     [rsp+58h+var_40], rax^^^jz      loc_453D85^^^mov     r12, rax^^^mov     r13d, 80h^^^xor     r14d, r14d^^^nop     dword ptr [rax+00000000h]^^^sub     r12, 0FFFFFFFFFFFFFF80h^^^mov     rdi, r14^^^mov     rsi, r12^^^call    realloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      short loc_453CD7^^^mov     rsi, r13^^^mov     rdi, rax^^^call    getcwd^^^test    rax, rax^^^jnz     loc_453DCC^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^sub     r13, 0FFFFFFFFFFFFFF80h^^^mov     r14, rbp^^^cmp     dword ptr fs:[rax], 22h^^^jz      short loc_453C98^^^mov     rdi, r14^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^call    free^^^nop     word ptr [rax+rax+00000000h]^^^mov     [r15+338h], rbp^^^add     rsp, 28h^^^mov     rax, r15^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rcx, [r15+358h]^^^cmp     rcx, rax^^^jz      loc_453C50^^^test    sil, sil^^^jz      loc_453C48^^^and     r14d, 8^^^jz      loc_453C48^^^mov     [r15+360h], rcx^^^xor     edx, edx^^^jmp     loc_453C48^^^mov     dword ptr [r15+3CCh], 1^^^jmp     loc_453BC2^^^xor     edx, edx^^^xor     esi, esi^^^xor     ecx, ecx^^^test    r12, r12^^^jnz     loc_453C2B^^^nop^^^mov     r12, r15^^^test    ecx, ecx^^^lea     rax, [r12+2B8h]^^^jz      loc_453C48^^^jmp     short loc_453D10^^^mov     rdi, rax^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^mov     rdi, rax^^^jz      short loc_453DE8^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rdx, [rsp+58h+var_40]^^^mov     rsi, rbx^^^call    mempcpy^^^jmp     short loc_453DB3^^^mov     rax, rdx^^^cmp     byte ptr [rax-1], 2Fh^^^lea     rdx, [rax-1]^^^jnz     short loc_453DB0^^^cmp     rbp, rdx^^^cmovz   rdx, rax^^^mov     byte ptr [rdx], 0^^^jmp     loc_453CF0^^^xor     esi, esi^^^mov     rdi, rbp^^^call    sub_4003C0^^^cmp     byte ptr [rax-1], 2Fh^^^mov     rdi, rax^^^jz      short loc_453DA0^^^mov     byte ptr [rdi], 2Fh^^^add     rdi, 1^^^jmp     short loc_453DA0^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_453CF0^^^
_dl_close$$$push    rbx^^^test    byte ptr [rdi+3D4h], 8^^^mov     rbx, rdi^^^jnz     short loc_48D39C^^^mov     edi, [rdi+310h]^^^test    edi, edi^^^jz      short loc_48D38A^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48D36B^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     rdi, rbx^^^call    _dl_close_worker^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48D388^^^pop     rbx^^^mov     edi, offset _dl_load_lock^^^jmp     near ptr 0^^^pop     rbx^^^retn^^^mov     rsi, [rbx+8]^^^mov     ecx, offset aSharedObjectNo^^^xor     edx, edx^^^xor     edi, edi^^^call    _dl_signal_error^^^test    byte ptr [rdi+314h], 8^^^jnz     short loc_48D388^^^mov     ecx, offset __PRETTY_FUNCTION___12047^^^mov     edx, 2F7h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aMapL_init_call^^^call    __assert_fail^^^
check_free$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 30h^^^mov     rsi, [rdi+18h]^^^test    rsi, rsi^^^jz      short loc_48279F^^^mov     edi, offset _dl_out_of_memory^^^mov     ecx, 0Eh^^^repe cmpsb^^^jnz     short loc_4827A8^^^add     rsp, 30h^^^pop     rbx^^^retn^^^lea     rdx, [rsp+38h+var_18]^^^xor     ecx, ecx^^^mov     rsi, rsp^^^mov     edi, offset check_free^^^mov     [rsp+38h+var_18], 0^^^call    _dl_addr^^^test    eax, eax^^^jz      short loc_48279F^^^mov     rax, [rsp+38h+var_18]^^^test    rax, rax^^^jz      short loc_48279F^^^cmp     qword ptr [rax+30h], 0^^^jnz     short loc_48279F^^^mov     rdi, [rbx+18h]^^^call    free^^^jmp     short loc_48279F^^^
towctrans$$$test    rsi, rsi        ^^^mov     eax, edi^^^jz      short locret_44E6D0^^^mov     ecx, [rsi]^^^mov     edx, edi^^^shr     edx, cl^^^cmp     edx, [rsi+4]^^^jnb     short locret_44E6D0^^^add     edx, 5^^^mov     edx, [rsi+rdx*4]^^^test    edx, edx^^^jz      short locret_44E6D0^^^mov     ecx, [rsi+8]^^^shr     edi, cl^^^mov     ecx, edi^^^and     ecx, [rsi+0Ch]^^^lea     rdx, [rdx+rcx*4]^^^mov     edx, [rsi+rdx]^^^test    edx, edx^^^jz      short locret_44E6D0^^^mov     ecx, eax^^^and     ecx, [rsi+10h]^^^lea     rdx, [rdx+rcx*4]^^^add     eax, [rsi+rdx]^^^nop     dword ptr [rax]^^^rep retn^^^
strdup$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^mov     rbx, rdi^^^call    strlen^^^lea     rbp, [rax+1]^^^mov     rdi, rbp^^^call    malloc^^^test    rax, rax^^^jz      short loc_430318^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^mov     rdi, rax^^^add     rsp, 18h^^^jmp     memcpy^^^xor     eax, eax^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
init_cacheinfo$$$push    r12^^^mov     eax, cs:__cpu_features^^^push    rbp^^^test    eax, eax^^^push    rbx^^^jz      short loc_400E01^^^cmp     eax, 1^^^jz      short loc_400E0E^^^cmp     eax, 2^^^jz      loc_400F68^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^call    __init_cpu_features^^^mov     eax, cs:__cpu_features^^^jmp     short loc_400DEE^^^mov     esi, cs:dword_6C60A4^^^mov     edi, 0BCh^^^call    handle_intel^^^mov     esi, cs:dword_6C60A4^^^mov     edi, 0C2h^^^mov     rbp, rax^^^call    handle_intel^^^test    rax, rax^^^mov     rsi, rax^^^mov     r8d, 3^^^jle     loc_40103A^^^mov     r10d, cs:dword_6C60A4^^^mov     r11d, cs:dword_6C60AC^^^cmp     r10d, 3^^^jle     loc_400FFD^^^xor     edi, edi^^^mov     r9d, 4^^^mov     ecx, edi^^^mov     eax, r9d^^^add     edi, 1^^^cpuid^^^test    al, 1Fh^^^jz      loc_400FFD^^^mov     edx, eax^^^shr     edx, 5^^^and     edx, 7^^^cmp     edx, r8d^^^jnz     short loc_400E63^^^shr     eax, 0Eh^^^mov     r8d, eax^^^and     r8d, 3FFh^^^jz      short loc_400EDA^^^cmp     r10d, 0Ah^^^jle     short loc_400EDA^^^xor     edi, edi^^^mov     r9d, 0Bh^^^mov     ecx, edi^^^mov     eax, r9d^^^add     edi, 1^^^cpuid^^^and     ebx, 0FFh^^^and     ecx, 0FF0h^^^jz      short loc_400EDA^^^test    ebx, ebx^^^jz      short loc_400EDA^^^cmp     ecx, 200h^^^jnz     short loc_400E9F^^^bsr     ecx, r8d^^^or      r8d, 0FFFFFFFFh^^^add     ecx, 1^^^sub     ebx, 1^^^shl     r8d, cl^^^not     r8d^^^and     r8d, ebx^^^add     r8d, 1^^^test    r8d, r8d^^^jz      short loc_400EE8^^^test    rsi, rsi^^^jg      short loc_400F53^^^test    rbp, rbp^^^jle     short loc_400F19^^^mov     rax, rbp^^^mov     cs:__x86_64_raw_data_cache_size, rbp^^^and     bpl, 0^^^sar     rax, 1^^^mov     cs:__x86_64_data_cache_size, rbp^^^mov     cs:__x86_64_raw_data_cache_size_half, rax^^^mov     rax, rbp^^^sar     rax, 1^^^mov     cs:__x86_64_data_cache_size_half, rax^^^test    rsi, rsi^^^jle     loc_400DFC^^^mov     rax, rsi^^^mov     cs:__x86_64_raw_shared_cache_size, rsi^^^and     sil, 0^^^sar     rax, 1^^^mov     cs:__x86_64_shared_cache_size, rsi^^^pop     rbx^^^mov     cs:__x86_64_raw_shared_cache_size_half, rax^^^mov     rax, rsi^^^sar     rax, 1^^^pop     rbp^^^mov     cs:__x86_64_shared_cache_size_half, rax^^^pop     r12^^^retn^^^mov     rdx, rsi^^^mov     rax, rsi^^^mov     r8d, r8d^^^sar     rdx, 3Fh^^^idiv    r8^^^mov     rsi, rax^^^jmp     short loc_400EE8^^^mov     edi, 0BCh^^^call    handle_amd^^^mov     edi, 0BFh^^^mov     rbp, rax^^^call    handle_amd^^^mov     edi, 0C2h^^^mov     r12, rax^^^call    handle_amd^^^mov     edi, 80000000h^^^mov     r8, rax^^^mov     rsi, r12^^^mov     eax, edi^^^cpuid^^^test    r8, r8^^^mov     edi, eax^^^jle     short loc_400FCB^^^cmp     eax, 80000007h^^^ja      short loc_40100A^^^mov     edi, 1^^^mov     eax, edi^^^cpuid^^^and     edx, 10000000h^^^mov     edi, eax^^^jz      short loc_400FC7^^^shr     ebx, 10h^^^and     ebx, 0FFh^^^jnz     short loc_401026^^^lea     rsi, [r8+r12]^^^cmp     edi, 80000000h^^^jbe     loc_400EE8^^^mov     eax, 80000001h^^^cpuid^^^shr     edx, 1Fh^^^test    dl, dl^^^jnz     short loc_400FEE^^^and     ch, 1^^^jz      loc_400EE8^^^mov     cs:__x86_64_prefetchw, 0FFFFFFFFh^^^jmp     loc_400EE8^^^shr     r11d, 10h^^^movzx   r8d, r11b^^^jmp     loc_400EDE^^^mov     edi, 80000008h^^^mov     eax, edi^^^cpuid^^^shr     ecx, 0Ch^^^mov     ebx, 1^^^mov     edi, eax^^^and     ecx, 0Fh^^^shl     ebx, cl^^^test    ebx, ebx^^^jz      short loc_400FA9^^^mov     rdx, r8^^^mov     rax, r8^^^mov     ebx, ebx^^^sar     rdx, 3Fh^^^idiv    rbx^^^mov     r8, rax^^^jmp     short loc_400FC7^^^mov     esi, cs:dword_6C60A4^^^mov     edi, 0BFh^^^call    handle_intel^^^mov     r8d, 2^^^mov     rsi, rax^^^jmp     loc_400E43^^^
sub_425B16$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
__fortify_fail$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     ebx, offset aUnknown^^^sub     rsp, 8^^^xchg    ax, ax^^^mov     rax, cs:__libc_argv^^^mov     rdx, rbp^^^mov     esi, offset aSSTerminated^^^mov     edi, 2^^^mov     rcx, [rax]^^^test    rcx, rcx^^^cmovz   rcx, rbx^^^xor     eax, eax^^^call    __libc_message^^^jmp     short loc_44E8C0^^^
_dl_mcount_wrapper_check$$$cmp     cs:_dl_profile_map, 0^^^jz      short locret_457160^^^mov     rsi, rdi^^^mov     rdi, [rsp+0]^^^jmp     _dl_mcount^^^rep retn^^^
_L_unlock_12106$$$lea     rdi, [rbp+0]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408384^^^
_L_lock_12712$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_408796^^^
__connect_nocancel$$$mov     eax, 2Ah^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
base_from_cb_data.isra.4$$$sub     rsp, 8^^^cmp     dil, 0FFh^^^jz      short loc_4937F4^^^and     edi, 70h^^^cmp     edi, 20h^^^jz      short loc_493800^^^jle     short loc_4937F0^^^cmp     edi, 30h^^^jz      short loc_493810^^^cmp     edi, 50h^^^nop     dword ptr [rax+00h]^^^jz      short loc_4937F4^^^call    abort^^^test    edi, edi^^^jnz     short loc_493820^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^mov     rax, [rsi]^^^add     rsp, 8^^^retn^^^mov     rax, [rdx]^^^add     rsp, 8^^^retn^^^cmp     edi, 10h^^^jz      short loc_4937F4^^^call    abort^^^
_nl_init_era_entries.part.0$$$push    r14^^^mov     eax, 0^^^test    rax, rax^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^jz      short loc_44B95F^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rbx, [rbp+28h]^^^test    rbx, rbx^^^jz      loc_44BAE0^^^mov     eax, [rbx+10h]^^^test    eax, eax^^^jnz     short loc_44B99A^^^mov     r14d, [rbp+1D0h]^^^test    r14, r14^^^jnz     short loc_44B9C0^^^mov     rdi, [rbx]^^^test    rdi, rdi^^^jz      short loc_44B993^^^call    free^^^mov     qword ptr [rbx], 0^^^mov     dword ptr [rbx+10h], 1^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_44BB34^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^mov     edi, offset __libc_setlocale_lock^^^jmp     near ptr 0^^^cmp     r14, [rbx+8]^^^mov     rax, [rbx]^^^jz      short loc_44B9D9^^^lea     rsi, [r14+r14*8]^^^mov     rdi, rax^^^shl     rsi, 3^^^call    realloc^^^test    rax, rax^^^jz      loc_44BB18^^^mov     r12, [rbp+1D8h]^^^xor     r13d, r13d^^^mov     [rbx+8], r14^^^mov     [rbx], rax^^^mov     rbp, rax^^^jmp     loc_44BA7B^^^jz      loc_44BAC0^^^xor     eax, eax^^^cmp     dword ptr [rbp+0], 2Bh^^^setnz   al^^^lea     eax, [rax+rax-1]^^^mov     [rbp+40h], eax^^^lea     rdi, [r12+20h]^^^xor     esi, esi^^^add     r13, 1^^^mov     [rbp+20h], rdi^^^call    sub_400350^^^lea     rdi, [rax+1]^^^xor     esi, esi^^^mov     [rbp+28h], rdi^^^call    sub_400350^^^lea     rdi, [rax+1]^^^xor     esi, esi^^^mov     rdx, rdi^^^sub     rdx, r12^^^add     rdx, 3^^^not     rdx^^^and     edx, 3^^^add     rdi, rdx^^^mov     [rbp+30h], rdi^^^call    wcschr^^^lea     rdi, [rax+4]^^^xor     esi, esi^^^mov     [rbp+38h], rdi^^^add     rbp, 48h^^^call    wcschr^^^cmp     r14, r13^^^lea     r12, [rax+4]^^^jbe     loc_44B993^^^mov     rax, [r12]^^^mov     [rbp+0], rax^^^mov     rax, [r12+8]^^^mov     [rbp+8], rax^^^mov     rax, [r12+10h]^^^mov     [rbp+10h], rax^^^mov     rax, [r12+18h]^^^mov     [rbp+18h], rax^^^mov     eax, [rbp+14h]^^^cmp     [rbp+8], eax^^^jge     loc_44BA00^^^xor     eax, eax^^^cmp     dword ptr [rbp+0], 2Bh^^^setz    al^^^lea     eax, [rax+rax-1]^^^mov     [rbp+40h], eax^^^jmp     loc_44BA16^^^mov     eax, [rbp+18h]^^^cmp     [rbp+0Ch], eax^^^jl      short loc_44BAAA^^^jnz     loc_44BA06^^^mov     eax, [rbp+1Ch]^^^cmp     [rbp+10h], eax^^^jg      loc_44BA06^^^jmp     short loc_44BAAA^^^mov     edi, 30h^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^mov     [rbp+28h], rax^^^jz      loc_44B99A^^^mov     rdi, rax^^^mov     ecx, 6^^^mov     rax, rbx^^^rep stosq^^^mov     rbx, rdx^^^mov     qword ptr [rbp+20h], offset _nl_cleanup_time^^^jmp     loc_44B96C^^^mov     rdi, [rbx]^^^call    free^^^mov     qword ptr [rbx+8], 0^^^mov     qword ptr [rbx], 0^^^jmp     loc_44B993^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
tdelete$$$push    rbp             ^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 38h^^^mov     [rbp+var_40], rdi^^^mov     [rbp+var_48], rdx^^^sub     rsp, 150h^^^lea     rcx, [rsp+1B0h+var_1A1]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^test    rsi, rsi^^^jz      short loc_44E149^^^mov     r13, [rsi]^^^test    r13, r13^^^jz      short loc_44E149^^^mov     rax, r13^^^mov     rbx, rsi^^^xor     r14d, r14d^^^xor     r12d, r12d^^^mov     [rbp+var_34], 28h^^^nop     dword ptr [rax+00000000h]^^^mov     rsi, [rax]^^^mov     rdi, [rbp+var_40]^^^mov     [rbp+var_50], rcx^^^call    [rbp+var_48]^^^test    eax, eax^^^mov     r15d, eax^^^mov     rcx, [rbp+var_50]^^^jz      loc_44E1A0^^^cmp     r12d, [rbp+var_34]^^^jz      short loc_44E160^^^mov     r13, [rbx]^^^mov     [rcx+r14], rbx^^^add     r12d, 1^^^test    r15d, r15d^^^lea     rax, [r13+10h]^^^lea     rbx, [r13+8]^^^cmovns  rbx, rax^^^add     r14, 8^^^mov     rax, [rbx]^^^test    rax, rax^^^jnz     short loc_44E100^^^lea     rsp, [rbp-28h]^^^xor     eax, eax^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     eax, [r12+14h]^^^mov     esi, 10h^^^xor     edx, edx^^^mov     [rbp+var_34], eax^^^lea     rax, [r14+0BEh]^^^div     rsi^^^mov     rsi, rcx^^^mov     rdx, r14^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rdi, [rsp+1B0h+var_1A1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     rcx, rax^^^jmp     short loc_44E123^^^mov     r9, [rbx]^^^mov     rsi, [r9+8]^^^mov     rdi, [r9+10h]^^^test    rsi, rsi^^^setz    al^^^test    rdi, rdi^^^jnz     loc_44E2C0^^^test    al, al^^^jnz     loc_44E2C8^^^mov     rdi, r9^^^test    r12d, r12d^^^jnz     loc_44E3F0^^^mov     [rbx], rsi^^^cmp     rdi, r9^^^jz      short loc_44E1DC^^^mov     rax, [rdi]^^^mov     [r9], rax^^^test    byte ptr [rdi+18h], 1^^^jnz     loc_44E2A5^^^test    r12d, r12d^^^jz      loc_44E331^^^test    rsi, rsi^^^jz      short loc_44E200^^^movzx   eax, byte ptr [rsi+18h]^^^test    al, 1^^^jnz     loc_44E340^^^movsxd  r9, r12d^^^mov     r8, [rcx+r9*8-8]^^^mov     rdx, [r8]^^^mov     rax, [rdx+8]^^^cmp     rax, rsi^^^jz      loc_44E350^^^movzx   esi, byte ptr [rax+18h]^^^test    sil, 1^^^jz      short loc_44E24C^^^and     esi, 0FFFFFFFEh^^^add     r12d, 1^^^mov     [rax+18h], sil^^^or      byte ptr [rdx+18h], 1^^^mov     rsi, [rax+10h]^^^mov     [rax+10h], rdx^^^mov     [rdx+8], rsi^^^mov     [r8], rax^^^lea     r8, [rax+10h]^^^mov     rax, [rdx+8]^^^mov     [rcx+r9*8], r8^^^mov     rsi, [rax+10h]^^^test    rsi, rsi^^^jz      loc_44E2E0^^^movzx   r10d, byte ptr [rsi+18h]^^^test    r10b, 1^^^jz      short loc_44E2E0^^^mov     r9, [rax+8]^^^test    r9, r9^^^jz      short loc_44E274^^^test    byte ptr [r9+18h], 1^^^jnz     short loc_44E2F0^^^movzx   ecx, byte ptr [rdx+18h]^^^and     r10d, 0FFFFFFFEh^^^and     ecx, 1^^^or      r10d, ecx^^^mov     rcx, [rsi+10h]^^^mov     [rsi+18h], r10b^^^mov     [rdx+8], rcx^^^mov     rcx, [rsi+8]^^^mov     [rsi+8], rax^^^mov     [rax+10h], rcx^^^mov     [rsi+10h], rdx^^^mov     [r8], rsi^^^and     byte ptr [rdx+18h], 0FEh^^^call    free^^^lea     rsp, [rbp-28h]^^^mov     rax, r13^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^test    al, al^^^jz      loc_44E410^^^mov     rdi, r9^^^nop     dword ptr [rax+rax+00h]^^^mov     rsi, [rdi+10h]^^^jmp     loc_44E1C5^^^mov     r9, [rax+8]^^^test    r9, r9^^^jz      short loc_44E320^^^test    byte ptr [r9+18h], 1^^^jz      short loc_44E320^^^movzx   r10d, byte ptr [rdx+18h]^^^movzx   ecx, byte ptr [rax+18h]^^^and     r10d, 1^^^and     ecx, 0FFFFFFFEh^^^or      ecx, r10d^^^mov     [rax+18h], cl^^^and     byte ptr [rdx+18h], 0FEh^^^and     byte ptr [r9+18h], 0FEh^^^mov     [rdx+8], rsi^^^mov     [rax+10h], rdx^^^mov     [r8], rax^^^jmp     short loc_44E2A5^^^or      byte ptr [rax+18h], 1^^^sub     r12d, 1^^^mov     rsi, rdx^^^jnz     loc_44E1EF^^^test    rsi, rsi^^^jz      loc_44E2A5^^^movzx   eax, byte ptr [rsi+18h]^^^xchg    ax, ax^^^and     eax, 0FFFFFFFEh^^^mov     [rsi+18h], al^^^jmp     loc_44E2A5^^^mov     rax, [rdx+10h]^^^movzx   esi, byte ptr [rax+18h]^^^test    sil, 1^^^jz      short loc_44E388^^^and     esi, 0FFFFFFFEh^^^add     r12d, 1^^^mov     [rax+18h], sil^^^or      byte ptr [rdx+18h], 1^^^mov     rsi, [rax+8]^^^mov     [rax+8], rdx^^^mov     [rdx+10h], rsi^^^mov     [r8], rax^^^lea     r8, [rax+8]^^^mov     rax, [rdx+10h]^^^mov     [rcx+r9*8], r8^^^mov     rsi, [rax+8]^^^test    rsi, rsi^^^jz      loc_44E4A0^^^movzx   r10d, byte ptr [rsi+18h]^^^test    r10b, 1^^^jz      loc_44E4A0^^^mov     r9, [rax+10h]^^^test    r9, r9^^^jz      short loc_44E3B8^^^test    byte ptr [r9+18h], 1^^^jnz     loc_44E4B8^^^movzx   ecx, byte ptr [rdx+18h]^^^and     r10d, 0FFFFFFFEh^^^and     ecx, 1^^^or      r10d, ecx^^^mov     rcx, [rsi+8]^^^mov     [rsi+18h], r10b^^^mov     [rdx+10h], rcx^^^mov     rcx, [rsi+10h]^^^mov     [rsi+10h], rax^^^mov     [rax+8], rcx^^^mov     [rsi+8], rdx^^^mov     [r8], rsi^^^and     byte ptr [rdx+18h], 0FEh^^^jmp     loc_44E2A5^^^movsxd  rax, r12d^^^mov     rax, [rcx+rax*8-8]^^^mov     rax, [rax]^^^cmp     [rax+10h], rdi^^^jz      loc_44E4E7^^^mov     [rax+8], rsi^^^jmp     loc_44E1D1^^^movsxd  r14, r12d^^^lea     r8, [r9+10h]^^^mov     r15, rbx^^^shl     r14, 3^^^jmp     short loc_44E446^^^mov     rax, [rdi+8]^^^mov     [rcx+r14], r15^^^add     r12d, 1^^^add     r14, 8^^^test    rax, rax^^^jz      loc_44E2D0^^^lea     rdx, [rdi+8]^^^mov     r15, r8^^^mov     rdi, rax^^^mov     r8, rdx^^^cmp     r12d, [rbp+var_34]^^^jnz     short loc_44E420^^^lea     eax, [r12+14h]^^^mov     esi, 10h^^^xor     edx, edx^^^mov     [rbp+var_50], r8^^^mov     [rbp+var_58], r9^^^mov     [rbp+var_34], eax^^^lea     rax, [r14+0BEh]^^^div     rsi^^^mov     rsi, rcx^^^mov     rdx, r14^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rdi, [rsp+1B0h+var_1A1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     r8, [rbp+var_50]^^^mov     rcx, rax^^^mov     r9, [rbp+var_58]^^^mov     rdi, [r8]^^^jmp     short loc_44E420^^^mov     r9, [rax+10h]^^^test    r9, r9^^^jz      loc_44E320^^^test    byte ptr [r9+18h], 1^^^jz      loc_44E320^^^movzx   r10d, byte ptr [rdx+18h]^^^movzx   ecx, byte ptr [rax+18h]^^^and     r10d, 1^^^and     ecx, 0FFFFFFFEh^^^or      ecx, r10d^^^mov     [rax+18h], cl^^^and     byte ptr [rdx+18h], 0FEh^^^and     byte ptr [r9+18h], 0FEh^^^mov     [rdx+10h], rsi^^^mov     [rax+8], rdx^^^mov     [r8], rax^^^jmp     loc_44E2A5^^^mov     [rax+10h], rsi^^^jmp     loc_44E1D1^^^
sub_41E6F2$$$cmp     dword ptr [rbp-5B0h], 0^^^jnz     loc_41FBA4^^^mov     eax, [rbp-588h]^^^sub     eax, 1^^^cmp     dword ptr [rbp-628h], 0^^^mov     [rbp-548h], eax^^^jnz     short loc_41E74D^^^test    eax, eax^^^jle     short loc_41E74D^^^movsxd  rdx, eax^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF4A^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41E7F4^^^add     r14d, edx^^^movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      loc_41E81F^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbp-578h]^^^shl     rax, 4^^^movzx   esi, byte ptr [rdx+rax]^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41E806^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_41E7FD^^^add     r14d, 1^^^cmp     dword ptr [rbp-628h], 0^^^jz      loc_41B3A7^^^cmp     dword ptr [rbp-548h], 0^^^jle     loc_41B3A7^^^movsxd  rdx, dword ptr [rbp-548h]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF4A^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_41D4E0^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41E791^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_41F067^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   esi, byte ptr [rax]^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F04E^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41E79A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41E856^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E83A^^^
_dl_debug_printf$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_B0], rsi^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_455E7B^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^mov     rdx, rdi^^^mov     edi, cs:_dl_debug_fd^^^lea     rcx, [rsp+0D8h+var_D0]^^^mov     esi, 1^^^mov     [rsp+0D8h+var_D0], 8^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C0], rax^^^call    _dl_debug_vdprintf^^^add     rsp, 0D8h^^^retn^^^
strtold$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^xor     edx, edx^^^mov     rcx, fs:[rax]^^^jmp     ____strtold_l_internal^^^
_IO_wmarker_delta$$$mov     rax, [rdi+8]^^^test    rax, rax^^^jz      short loc_4279FE^^^mov     edx, [rax]^^^mov     rax, [rax+0A0h]^^^and     dh, 1^^^mov     rdx, [rax]^^^jnz     short loc_4279F0^^^sub     rdx, [rax+10h]^^^mov     eax, [rdi+10h]^^^shr     rdx, 2^^^sub     eax, edx^^^retn^^^sub     rdx, [rax+8]^^^mov     eax, [rdi+10h]^^^shr     rdx, 2^^^sub     eax, edx^^^retn^^^mov     eax, 0FFFFFFFFh^^^retn^^^
__gconv_transform_ascii_internal$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rdx^^^mov     rdx, rsi^^^push    r14^^^add     rdx, 38h^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 88h^^^mov     [rsp+0B8h+var_68], rax^^^mov     eax, [rsi+10h]^^^mov     [rsp+0B8h+var_98], rsi^^^mov     [rsp+0B8h+var_80], r8^^^mov     [rsp+0B8h+var_78], r9^^^mov     ebx, [rsp+0B8h+arg_0]^^^test    al, 1^^^mov     [rsp+0B8h+var_60], rdx^^^mov     [rsp+0B8h+var_90], 0^^^jnz     short loc_45B357^^^cmp     qword ptr [rdi+68h], 0^^^mov     rdx, [rdi+90h]^^^mov     [rsp+0B8h+var_90], rdx^^^jz      short loc_45B357^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     [rsp+0B8h+var_90], rdx^^^test    ebx, ebx^^^jnz     loc_45B6A0^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     loc_45B705^^^mov     rdx, [rsp+0B8h+var_98]^^^mov     r14, [rdx]^^^cmp     [rsp+0B8h+var_78], 0^^^mov     [rsp+0B8h+var_70], 0^^^mov     rcx, [r15]^^^mov     r13, [rdx+8]^^^lea     rdx, [rsp+0B8h+var_58]^^^cmovz   rdx, [rsp+0B8h+var_70]^^^mov     [rsp+0B8h+var_58], 0^^^cmp     rcx, rbp^^^mov     [rsp+0B8h+var_A0], rcx^^^mov     [rsp+0B8h+var_70], rdx^^^jz      loc_45B507^^^lea     rbx, [r14+4]^^^cmp     r13, rbx^^^jb      loc_45B5A1^^^test    al, 2^^^jnz     loc_45B518^^^cmp     [rsp+0B8h+var_70], 0^^^jz      loc_45B619^^^mov     rax, rcx^^^mov     rcx, r14^^^jmp     short loc_45B3F3^^^lea     rdx, [rbx+4]^^^cmp     r13, rdx^^^jb      loc_45B5A9^^^mov     rcx, rbx^^^mov     rbx, rdx^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^js      loc_45B609^^^add     rax, 1^^^movzx   edx, dl^^^cmp     rbp, rax^^^mov     [rcx], edx^^^jnz     short loc_45B3E0^^^mov     [rsp+0B8h+var_84], 4^^^cmp     [rsp+0B8h+var_80], 0^^^mov     [r15], rax^^^jnz     loc_45B5C0^^^mov     rdx, [rsp+0B8h+var_98]^^^mov     r12, [rdx+30h]^^^test    r12, r12^^^jz      short loc_45B469^^^nop     dword ptr [rax+00000000h]^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45B45F^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r14^^^mov     rdx, [r15]^^^mov     rsi, [rsp+0B8h+var_A0]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45B438^^^mov     rcx, [rsp+0B8h+var_98]^^^add     dword ptr [rcx+14h], 1^^^test    byte ptr [rcx+10h], 1^^^jnz     loc_45B665^^^cmp     rbx, r14^^^jbe     loc_45B58B^^^mov     rcx, [rsp+0B8h+var_98]^^^mov     rdi, [rsp+0B8h+var_90]^^^mov     rax, [rcx]^^^mov     [rsp+0B8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0B8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0B8h+var_B8], 0^^^mov     r9, [rsp+0B8h+var_78]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0B8h+var_48]^^^mov     rsi, [rsp+0B8h+var_60]^^^mov     rdi, [rsp+0B8h+var_68]^^^mov     [rsp+0B8h+var_B0], eax^^^call    [rsp+0B8h+var_90]^^^cmp     eax, 4^^^jz      loc_45B580^^^mov     rdx, [rsp+0B8h+var_48]^^^cmp     rdx, rbx^^^jnz     loc_45B67A^^^test    eax, eax^^^jnz     loc_45B697^^^mov     rcx, [r15]^^^mov     rdx, [rsp+0B8h+var_98]^^^cmp     rcx, rbp^^^mov     r14, [rdx]^^^mov     eax, [rdx+10h]^^^mov     [rsp+0B8h+var_A0], rcx^^^jnz     loc_45B3B0^^^mov     rax, rbp^^^mov     rbx, r14^^^jmp     loc_45B40C^^^cmp     [rsp+0B8h+var_70], 0^^^jz      loc_45B5D0^^^mov     rdx, [rsp+0B8h+var_A0]^^^mov     rsi, rbx^^^mov     [rsp+0B8h+var_84], 4^^^mov     rbx, r14^^^add     rdx, 1^^^jmp     short loc_45B55E^^^movzx   ecx, cl^^^mov     [rbx], ecx^^^mov     rbx, rsi^^^cmp     rbp, rdx^^^jz      loc_45B414^^^lea     rsi, [rbx+4]^^^add     rdx, 1^^^cmp     r13, rsi^^^jb      short loc_45B5A9^^^movzx   ecx, byte ptr [rdx-1]^^^mov     rax, rdx^^^test    cl, cl^^^jns     short loc_45B540^^^mov     rcx, [rsp+0B8h+var_70]^^^mov     [rsp+0B8h+var_84], 6^^^add     qword ptr [rcx], 1^^^jmp     short loc_45B548^^^cmp     [rsp+0B8h+var_84], 5^^^jz      loc_45B4EB^^^mov     eax, [rsp+0B8h+var_84]^^^add     rsp, 88h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+0B8h+var_A0]^^^mov     rbx, r14^^^cmp     [rsp+0B8h+var_80], 0^^^mov     [rsp+0B8h+var_84], 5^^^mov     [r15], rax^^^jz      loc_45B423^^^mov     rax, [rsp+0B8h+var_80]^^^mov     [rax], rbx^^^jmp     short loc_45B58B^^^mov     rax, [rsp+0B8h+var_A0]^^^mov     rdx, r14^^^jmp     short loc_45B5EF^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      short loc_45B5A9^^^mov     rdx, rbx^^^mov     rbx, rcx^^^movzx   ecx, byte ptr [rax]^^^test    cl, cl^^^js      short loc_45B655^^^add     rax, 1^^^movzx   ecx, cl^^^cmp     rbp, rax^^^mov     [rdx], ecx^^^jnz     short loc_45B5E0^^^jmp     loc_45B40C^^^mov     rbx, rcx^^^mov     [rsp+0B8h+var_84], 6^^^jmp     loc_45B414^^^mov     rax, [rsp+0B8h+var_A0]^^^mov     rdx, r14^^^jmp     short loc_45B63B^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      loc_45B5A9^^^mov     rdx, rbx^^^mov     rbx, rcx^^^movzx   ecx, byte ptr [rax]^^^test    cl, cl^^^js      short loc_45B655^^^add     rax, 1^^^movzx   ecx, cl^^^cmp     rbp, rax^^^mov     [rdx], ecx^^^jnz     short loc_45B628^^^jmp     loc_45B40C^^^mov     rbx, rdx^^^mov     [rsp+0B8h+var_84], 6^^^jmp     loc_45B414^^^mov     rdx, [rsp+0B8h+var_78]^^^mov     [rcx], rbx^^^mov     rax, [rsp+0B8h+var_58]^^^add     [rdx], rax^^^jmp     loc_45B58B^^^sub     rbx, rdx^^^lea     rdx, [rbx+3]^^^test    rbx, rbx^^^cmovns  rdx, rbx^^^sar     rdx, 2^^^sub     [r15], rdx^^^test    eax, eax^^^jz      loc_45B4EB^^^mov     [rsp+0B8h+var_84], eax^^^jmp     loc_45B58B^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     short loc_45B717^^^mov     rcx, [rsp+0B8h+var_98]^^^mov     rax, [rcx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rcx+10h], 1^^^mov     [rsp+0B8h+var_84], 0^^^jnz     loc_45B58B^^^mov     rdi, [rsp+0B8h+var_90]^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0B8h+arg_8]^^^mov     [rsp+0B8h+var_B8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0B8h+var_78]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0B8h+var_60]^^^mov     rdi, [rsp+0B8h+var_68]^^^mov     [rsp+0B8h+var_B0], eax^^^call    [rsp+0B8h+var_90]^^^mov     [rsp+0B8h+var_84], eax^^^jmp     loc_45B58B^^^mov     rcx, [rsp+0B8h+var_80]^^^mov     rdx, [rsp+0B8h+var_98]^^^mov     r14, [rcx]^^^jmp     loc_45B373^^^mov     ecx, offset __PRETTY_FUNCTION___11980^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^
__fopen_maybe_mmap$$$test    byte ptr [rdi+74h], 1^^^mov     rax, rdi^^^jz      short locret_4257E9^^^test    byte ptr [rdi], 8^^^jz      short locret_4257E9^^^mov     ecx, [rdi+0C0h]^^^mov     edx, offset _IO_file_jumps_maybe_mmap^^^test    ecx, ecx^^^mov     ecx, offset _IO_wfile_jumps_maybe_mmap^^^cmovg   rdx, rcx^^^mov     [rdi+0D8h], rdx^^^mov     rdx, [rdi+0A0h]^^^mov     [rdx+140h], rcx^^^rep retn^^^
fillin_rpath$$$push    r15^^^push    r14^^^push    r13^^^xor     r13d, r13d^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 48h^^^mov     [rsp+78h+var_40], rdi^^^mov     [rsp+78h+var_68], rdx^^^mov     [rsp+78h+var_5C], ecx^^^mov     [rsp+78h+var_48], r8^^^mov     [rsp+78h+var_58], r9^^^nop     dword ptr [rax+00h]^^^mov     rsi, [rsp+78h+var_68]^^^lea     rdi, [rsp+78h+var_40]^^^call    strsep^^^test    rax, rax^^^mov     r12, rax^^^jz      loc_44EC8D^^^mov     rdi, r12^^^call    strlen^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_44EAC8^^^cmp     rax, 1^^^ja      short loc_44EA2E^^^jmp     loc_44EAD8^^^sub     rbp, 1^^^cmp     rbp, 1^^^jz      loc_44EAD8^^^cmp     byte ptr [r12+rbp-1], 2Fh^^^jz      short loc_44EA20^^^mov     byte ptr [r12+rbp], 2Fh^^^add     rbp, 1^^^mov     eax, [rsp+78h+var_5C]^^^test    eax, eax^^^jnz     loc_44ECB4^^^mov     r15, cs:_dl_all_dirs^^^test    r15, r15^^^jz      loc_44EB08^^^mov     r14, r15^^^jmp     short loc_44EA6C^^^mov     r14, [r14]^^^test    r14, r14^^^jz      loc_44EB08^^^cmp     [r14+20h], rbp^^^jnz     short loc_44EA60^^^mov     rsi, [r14+18h]^^^mov     rdx, rbp^^^mov     rdi, r12^^^call    sub_400370^^^test    eax, eax^^^jnz     short loc_44EA60^^^test    r13, r13^^^jz      loc_44ECA7^^^xor     eax, eax^^^cmp     [rbx], r14^^^jnz     short loc_44EAA6^^^jmp     loc_44E9E0^^^cmp     [rbx+rax*8], r14^^^jz      short loc_44EAF0^^^add     rax, 1^^^cmp     rax, r13^^^jnz     short loc_44EAA0^^^lea     rdx, ds:0[rax*8]^^^lea     r13, [rax+1]^^^mov     [rbx+rdx], r14^^^jmp     loc_44E9E0^^^mov     r12d, offset curwd_11054^^^jmp     loc_44EA3F^^^cmp     byte ptr [r12], 2Fh^^^mov     ebp, 1^^^jz      loc_44EA3F^^^jmp     loc_44EA36^^^cmp     r13, rax^^^jnz     loc_44E9E0^^^nop     dword ptr [rax+00000000h]^^^jmp     short loc_44EAAF^^^cmp     [rsp+78h+var_58], 0^^^mov     [rsp+78h+var_50], 0^^^jz      short loc_44EB2C^^^mov     rdi, [rsp+78h+var_58]^^^call    strlen^^^add     rax, 1^^^mov     [rsp+78h+var_50], rax^^^mov     rcx, cs:ncapstr^^^lea     rdx, ds:28h[rcx*4]^^^mov     [rsp+78h+var_78], rcx^^^lea     rdi, [rbp+rdx+1]^^^add     rdi, [rsp+78h+var_50]^^^mov     [rsp+78h+var_70], rdx^^^call    malloc^^^test    rax, rax^^^mov     r14, rax^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, [rsp+78h+var_78]^^^jz      loc_44ED00^^^lea     rdi, [rax+rdx]^^^mov     rsi, r12^^^mov     rdx, rbp^^^mov     [rax+18h], rdi^^^mov     [rsp+78h+var_78], rcx^^^call    mempcpy^^^cmp     rbp, cs:max_dirnamelen^^^mov     byte ptr [rax], 0^^^mov     [r14+20h], rbp^^^mov     rcx, [rsp+78h+var_78]^^^jbe     short loc_44EB9A^^^mov     cs:max_dirnamelen, rbp^^^xor     edi, edi^^^cmp     byte ptr [r12], 2Fh^^^setnz   dil^^^add     edi, edi^^^test    rcx, rcx^^^jz      loc_44EC46^^^lea     rdx, [r14+28h]^^^and     edx, 0Fh^^^shr     rdx, 2^^^neg     rdx^^^and     edx, 3^^^cmp     rdx, rcx^^^cmova   rdx, rcx^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_44EBE3^^^nop^^^mov     [r14+rax*4+28h], edi^^^add     rax, 1^^^cmp     rdx, rax^^^ja      short loc_44EBD0^^^cmp     rcx, rdx^^^jz      short loc_44EC46^^^mov     r10, rcx^^^sub     r10, rdx^^^mov     r8, r10^^^shr     r8, 2^^^lea     r9, ds:0[r8*4]^^^test    r9, r9^^^jz      short loc_44EC38^^^mov     [rsp+78h+var_60], edi^^^lea     rsi, [r14+rdx*4+28h]^^^xor     edx, edx^^^movd    xmm1, [rsp+78h+var_60]^^^pshufd  xmm0, xmm1, 0^^^nop     dword ptr [rax+rax+00h]^^^add     rdx, 1^^^movdqa  xmmword ptr [rsi], xmm0^^^add     rsi, 10h^^^cmp     rdx, r8^^^jb      short loc_44EC18^^^add     rax, r9^^^cmp     r10, r9^^^jz      short loc_44EC46^^^nop     dword ptr [rax+00000000h]^^^mov     [r14+rax*4+28h], edi^^^add     rax, 1^^^cmp     rcx, rax^^^ja      short loc_44EC38^^^cmp     [rsp+78h+var_58], 0^^^mov     rax, [rsp+78h+var_48]^^^mov     [r14+8], rax^^^jz      loc_44ECF3^^^lea     rdi, [rbp+rcx*4+29h]^^^mov     rdx, [rsp+78h+var_50]^^^mov     rsi, [rsp+78h+var_58]^^^add     rdi, r14^^^call    memcpy^^^mov     [r14+10h], rax^^^mov     [r14], r15^^^mov     cs:_dl_all_dirs, r14^^^mov     [rbx+r13*8], r14^^^add     r13, 1^^^jmp     loc_44E9E0^^^mov     qword ptr [rbx+r13*8], 0^^^add     rsp, 48h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r13d, 1^^^xor     edx, edx^^^jmp     loc_44EABB^^^cmp     rbp, 16h^^^jz      loc_44ED51^^^cmp     rbp, 1Ah^^^jz      short loc_44ED32^^^cmp     rbp, 5^^^jz      short loc_44ED13^^^cmp     rbp, 9^^^jnz     loc_44E9E0^^^mov     edx, 9^^^mov     rsi, r12^^^mov     edi, offset aUsrLib^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_44E9E0^^^jmp     loc_44EA4B^^^mov     qword ptr [r14+10h], 0^^^jmp     loc_44EC76^^^mov     ecx, offset aCannotCreateCa^^^xor     edx, edx^^^xor     esi, esi^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     edx, 5^^^mov     rsi, r12^^^mov     edi, offset aLib^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_44E9E0^^^jmp     loc_44EA4B^^^mov     edx, 1Ah^^^mov     rsi, r12^^^mov     edi, offset aUsrLibX86_64Li^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_44E9E0^^^jmp     loc_44EA4B^^^mov     edx, 16h^^^mov     rsi, r12^^^mov     edi, offset system_dirs^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_44E9E0^^^jmp     loc_44EA4B^^^
__uflow$$$push    rbx^^^mov     eax, [rdi+0C0h]^^^mov     rbx, rdi^^^test    eax, eax^^^jnz     short loc_42BD20^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     eax, [rbx]^^^test    ah, 8^^^jnz     loc_42BD70^^^mov     rdx, [rbx+8]^^^mov     rsi, [rbx+10h]^^^cmp     rdx, rsi^^^jb      short loc_42BD5D^^^mov     eax, [rbx]^^^test    ah, 1^^^jnz     short loc_42BD30^^^cmp     qword ptr [rbx+60h], 0^^^jz      loc_42BD88^^^mov     rdi, rbx^^^call    save_for_backup^^^test    eax, eax^^^jnz     short loc_42BD25^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+28h]^^^jmp     rax^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42BCD8^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     rcx, [rbx+58h]^^^mov     rdx, [rbx+48h]^^^and     ah, 0FEh^^^mov     [rbx+58h], rsi^^^mov     rsi, [rbx+18h]^^^mov     [rbx], eax^^^cmp     rcx, rdx^^^mov     [rbx+10h], rcx^^^mov     [rbx+18h], rdx^^^mov     [rbx+48h], rsi^^^mov     [rbx+8], rdx^^^mov     rsi, rcx^^^jbe     short loc_42BCF7^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^pop     rbx^^^retn^^^mov     rdi, rbx^^^call    _IO_switch_to_get_mode^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_42BCE3^^^pop     rbx^^^retn^^^mov     rdi, [rbx+48h]^^^test    rdi, rdi^^^jz      loc_42BD0E^^^test    ah, 1^^^jz      short loc_42BDBE^^^and     ah, 0FEh^^^mov     [rbx+8], rdi^^^mov     [rbx], eax^^^mov     rax, [rbx+58h]^^^mov     [rbx+58h], rsi^^^mov     [rbx+10h], rax^^^mov     rax, [rbx+18h]^^^mov     [rbx+18h], rdi^^^mov     [rbx+48h], rax^^^mov     rdi, rax^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     qword ptr [rbx+58h], 0^^^mov     qword ptr [rbx+50h], 0^^^jmp     loc_42BD0E^^^
__strcasecmp_l_sse2$$$mov     rax, [rdx]      ^^^test    dword ptr [rax+278h], 1^^^jnz     __strcasecmp_l_nonascii^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm5, cs:xmmword_49CA70^^^movdqa  xmm6, cs:xmmword_49CA80^^^movdqa  xmm7, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_432630^^^cmp     eax, 30h^^^ja      loc_432630^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434750^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     dword ptr [rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_432670^^^ja      short loc_432653^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49CB30^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax+rax+00000000h]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^jmp     loc_432700^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4329C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4329C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_432890^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_4329E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43289A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_432BD0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_432BD0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_432AA0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_432BF0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_432AAA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_432DE0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_432DE0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_432CB0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_432E00^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_432CBA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_432FF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_432FF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_432EC0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_433010^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_432ECA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433200^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433200^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4330D0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_433220^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4330DA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433410^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433410^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4332E0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_433430^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4332EA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433620^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433620^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4334F0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_433640^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4334FA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_433700^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_433850^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43370A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433A40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433A40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_433910^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_433A60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43391A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433C50^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433C50^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_433B20^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_433C70^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_433B2A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_433E60^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_433E60^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_433D30^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_433E80^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_433D3A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_434070^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_434070^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_433F40^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_434090^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_433F4A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_434280^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_434280^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_434150^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_4342A0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43415A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_434490^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_434490^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_434360^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_4344B0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43436A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_4346D0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_434735^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4346A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4346A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_434730^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_434570^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_4346C0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43457A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm3^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm3^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm3, xmm10^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^nop     word ptr [rax+rax+00000000h]^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_434750^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
__libc_register_dlfcn_hook$$$sub     rsp, 8^^^mov     esi, offset a_dlfcn_hook^^^call    __libc_dlsym_private^^^test    rax, rax^^^jz      short loc_4829DA^^^mov     qword ptr [rax], offset _dlfcn_hooks^^^add     rsp, 8^^^retn^^^
__add_to_environ$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbx^^^sub     rsp, 38h^^^mov     [rbp+var_38], rsi^^^mov     [rbp+var_44], ecx^^^call    strlen^^^cmp     [rbp+var_38], 0^^^mov     rbx, rax^^^mov     [rbp+var_40], 0^^^jz      short loc_418AB6^^^mov     rdi, [rbp+var_38]^^^call    strlen^^^add     rax, 1^^^mov     [rbp+var_40], rax^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_418AD6^^^lock cmpxchg cs:envlock, esi^^^jnz     _L_lock_559^^^jmp     short loc_418AE3^^^cmpxchg cs:envlock, esi^^^jnz     _L_lock_559^^^mov     rcx, cs:environ^^^test    rcx, rcx^^^jz      loc_418BE0^^^mov     r13, [rcx]^^^xor     r15d, r15d^^^test    r13, r13^^^jz      short loc_418B41^^^xchg    ax, ax^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     rdi, r13^^^mov     [rbp+var_58], rcx^^^call    strncmp^^^test    eax, eax^^^mov     rcx, [rbp+var_58]^^^jnz     short loc_418B22^^^cmp     byte ptr [r13+rbx+0], 3Dh^^^jz      short loc_418B32^^^add     rcx, 8^^^add     r15, 1^^^mov     r13, [rcx]^^^test    r13, r13^^^jnz     short loc_418B00^^^test    rcx, rcx^^^jz      short loc_418B41^^^cmp     qword ptr [rcx], 0^^^jnz     loc_418D93^^^lea     rsi, ds:10h[r15*8]^^^mov     rcx, cs:last_environ^^^mov     rdi, rcx^^^mov     [rbp+var_58], rcx^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rbp+var_58]^^^jz      loc_418CDE^^^test    r14, r14^^^jz      short loc_418BF0^^^lea     rbx, ds:0[r15*8]^^^mov     [rax+r15*8], r14^^^mov     rsi, cs:environ^^^cmp     rsi, rcx^^^jz      short loc_418B94^^^mov     rdx, rbx^^^mov     rdi, r13^^^call    memcpy^^^mov     qword ptr [r13+r15*8+8], 0^^^mov     cs:last_environ, r13^^^mov     cs:environ, r13^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_418BC3^^^lock dec cs:envlock^^^jnz     _L_unlock_668^^^jmp     short loc_418BCF^^^dec     cs:envlock^^^jnz     _L_unlock_668^^^xor     eax, eax^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     esi, 10h^^^xor     r15d, r15d^^^jmp     loc_418B49^^^mov     rax, [rbp+var_40]^^^lea     rcx, [rax+rbx+1]^^^cmp     rcx, 1000h^^^ja      loc_418D12^^^lea     rax, [rcx+1Eh]^^^mov     r8d, 1^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+60h+var_58+7]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     rdi, r14^^^mov     [rbp+var_58], rcx^^^mov     [rbp+var_50], r8d^^^lea     rbx, ds:0[r15*8]^^^call    mempcpy^^^mov     byte ptr [rax], 3Dh^^^mov     rdx, [rbp+var_40]^^^lea     rdi, [rax+1]^^^mov     rsi, [rbp+var_38]^^^lea     r12, [r13+rbx+0]^^^call    memcpy^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r14^^^call    tfind^^^test    rax, rax^^^mov     rcx, [rbp+var_58]^^^mov     r8d, [rbp+var_50]^^^jz      short loc_418CD4^^^mov     rax, [rax]^^^test    rax, rax^^^mov     [r12], rax^^^jnz     short loc_418CC8^^^test    r8d, r8d^^^jz      loc_418D0C^^^mov     rdi, rcx^^^mov     [rbp+var_58], rcx^^^call    malloc^^^test    rax, rax^^^mov     [r12], rax^^^mov     rcx, [rbp+var_58]^^^jz      short loc_418CDE^^^mov     rsi, r14^^^mov     rdx, rcx^^^mov     rdi, rax^^^call    memcpy^^^mov     r14, [r12]^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r14^^^call    tsearch^^^mov     rcx, cs:last_environ^^^jmp     loc_418B7D^^^mov     qword ptr [r12], 0^^^jmp     short loc_418C82^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_418CF6^^^lock dec cs:envlock^^^jnz     _L_unlock_820^^^jmp     short loc_418D02^^^dec     cs:envlock^^^jnz     _L_unlock_820^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_418BD1^^^mov     [r12], r14^^^jmp     short loc_418CB6^^^mov     rdi, rcx^^^mov     [rbp+var_58], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_58]^^^jnz     loc_418C06^^^mov     rdi, rcx^^^mov     [rbp+var_58], rcx^^^call    malloc^^^xor     r8d, r8d^^^test    rax, rax^^^mov     r14, rax^^^mov     rcx, [rbp+var_58]^^^jnz     loc_418C20^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_418D61^^^lock dec cs:envlock^^^jnz     _L_unlock_869^^^jmp     short loc_418D6D^^^dec     cs:envlock^^^jnz     _L_unlock_869^^^cmp     cs:last_environ, 0^^^mov     eax, 0FFFFFFFFh^^^jnz     loc_418BD1^^^mov     rdi, r13^^^mov     [rbp+var_50], eax^^^call    free^^^mov     eax, [rbp+var_50]^^^jmp     loc_418BD1^^^mov     edx, [rbp+var_44]^^^test    edx, edx^^^jz      loc_418BAB^^^test    r14, r14^^^jz      short loc_418DAB^^^mov     [rcx], r14^^^jmp     loc_418BAB^^^mov     rax, [rbp+var_40]^^^lea     r15, [rax+rbx+1]^^^cmp     r15, 1000h^^^ja      loc_418E8A^^^lea     rax, [r15+1Eh]^^^mov     r8d, 1^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+60h+var_58+7]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     rdi, r13^^^mov     [rbp+var_58], rcx^^^mov     [rbp+var_50], r8d^^^call    mempcpy^^^mov     byte ptr [rax], 3Dh^^^mov     rdx, [rbp+var_40]^^^lea     rdi, [rax+1]^^^mov     rsi, [rbp+var_38]^^^call    memcpy^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r13^^^call    tfind^^^test    rax, rax^^^mov     rcx, [rbp+var_58]^^^mov     r8d, [rbp+var_50]^^^jz      short loc_418E30^^^mov     r14, [rax]^^^test    r14, r14^^^jnz     loc_418DA3^^^test    r8d, r8d^^^jz      loc_418EC6^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    malloc^^^test    rax, rax^^^mov     r14, rax^^^mov     rcx, [rbp+var_58]^^^jz      loc_418CDE^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^mov     [rbp+var_58], rcx^^^call    memcpy^^^mov     rcx, [rbp+var_58]^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r14^^^mov     [rbp+var_58], rcx^^^call    tsearch^^^mov     rcx, [rbp+var_58]^^^jmp     loc_418DA3^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_58]^^^jnz     loc_418DC1^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rbp+var_58]^^^jz      loc_418CDE^^^xor     r8d, r8d^^^jmp     loc_418DDB^^^mov     r14, r13^^^jmp     short loc_418E6B^^^
__fopen_internal$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^xor     ebx, ebx^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^mov     r13, rdi^^^mov     edi, 238h^^^mov     rbp, rsi^^^mov     r12d, edx^^^call    malloc^^^test    rax, rax^^^jz      loc_4258AF^^^lea     rdx, [rax+0E0h]^^^lea     rcx, [rax+0F0h]^^^mov     rbx, rax^^^xor     esi, esi^^^mov     rdi, rax^^^mov     r8d, offset _IO_wfile_jumps^^^mov     [rax+88h], rdx^^^xor     edx, edx^^^call    _IO_no_init^^^mov     rdi, rbx^^^mov     qword ptr [rbx+0D8h], offset _IO_file_jumps^^^call    _IO_new_file_init^^^mov     ecx, r12d^^^mov     rdx, rbp^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    _IO_new_file_fopen^^^test    rax, rax^^^jz      short loc_4258CB^^^test    byte ptr [rbx+74h], 1^^^jz      short loc_4258AF^^^test    byte ptr [rbx], 8^^^jz      short loc_4258AF^^^mov     esi, [rbx+0C0h]^^^mov     edx, offset _IO_wfile_jumps_maybe_mmap^^^mov     eax, offset _IO_file_jumps_maybe_mmap^^^test    esi, esi^^^cmovg   rax, rdx^^^mov     [rbx+0D8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     [rax+140h], rdx^^^mov     rax, rbx^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rdi, rbx^^^call    _IO_un_link^^^mov     rdi, rbx^^^xor     ebx, ebx^^^call    free^^^jmp     short loc_4258AF^^^
__rawmemchr_sse42$$$movd    xmm1, esi^^^mov     rcx, rdi^^^pxor    xmm2, xmm2^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^or      esi, 0FFFFFFFFh^^^pshufb  xmm1, xmm2^^^movdqa  xmm0, xmmword ptr [rdi]^^^sub     rcx, rdi^^^pcmpeqb xmm0, xmm1^^^shl     esi, cl^^^pmovmskb ecx, xmm0^^^mov     eax, 10h^^^mov     edx, 10h^^^and     ecx, esi^^^jnz     short loc_438178^^^pcmpestri xmm1, xmmword ptr [rdi+10h], 8^^^lea     rdi, [rdi+10h]^^^jnb     short loc_438166^^^lea     rax, [rdi+rcx]^^^retn^^^bsf     eax, ecx^^^add     rax, rdi^^^retn^^^
_L_unlock_9769$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_406ED0^^^
_L_unlock_233$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_425E85^^^
_dl_aux_init$$$push    r15^^^mov     rdx, [rdi]^^^push    r14^^^test    rdx, rdx^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^jz      loc_4112CF^^^mov     rax, cs:_dl_random^^^mov     r15, cs:_dl_pagesize^^^lea     rcx, [rdi+10h]^^^mov     r14d, cs:_dl_clktck^^^mov     r13, cs:_dl_phdr^^^xor     r9d, r9d^^^mov     r12, cs:_dl_phnum^^^mov     rbp, cs:_dl_hwcap^^^xor     r8d, r8d^^^mov     rbx, cs:_dl_sysinfo_dso^^^mov     r11d, cs:__libc_enable_secure^^^xor     esi, esi^^^mov     r10d, cs:__libc_enable_secure_decided^^^mov     [rsp+30h+var_38], rax^^^mov     rax, rdi^^^nop     dword ptr [rax+00000000h]^^^sub     rdx, 3^^^cmp     rdx, 1Eh        ^^^ja      short loc_411250^^^jmp     ds:off_4997C0[rdx*8]^^^mov     r15, [rax+8]    ^^^nop     dword ptr [rax+00h]^^^add     rax, 10h        ^^^mov     rdx, rax^^^sub     rdx, rdi^^^mov     rdx, [rcx+rdx-10h]^^^test    rdx, rdx^^^jnz     short loc_411230^^^mov     rax, [rsp+30h+var_38]^^^cmp     esi, 0Fh^^^mov     cs:_dl_pagesize, r15^^^mov     cs:_dl_clktck, r14d^^^mov     cs:_dl_phdr, r13^^^mov     cs:_dl_phnum, r12^^^mov     cs:_dl_hwcap, rbp^^^mov     cs:_dl_sysinfo_dso, rbx^^^mov     cs:__libc_enable_secure, r11d^^^mov     cs:__libc_enable_secure_decided, r10d^^^mov     cs:_dl_random, rax^^^jnz     short loc_4112CF^^^xor     eax, eax^^^test    r9d, r9d^^^mov     cs:__libc_enable_secure_decided, 1^^^setnz   al^^^xor     edx, edx^^^test    r8d, r8d^^^setnz   dl^^^or      eax, edx^^^mov     cs:__libc_enable_secure, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rbx, [rax+8]    ^^^jmp     loc_411250      ^^^mov     rdx, [rax+8]    ^^^mov     [rsp+30h+var_38], rdx^^^jmp     loc_411250      ^^^mov     r11d, [rax+8]   ^^^mov     r10d, 1^^^mov     esi, 0FFFFFFFFh^^^jmp     loc_411250      ^^^mov     r14d, [rax+8]   ^^^jmp     loc_411250      ^^^mov     rbp, [rax+8]    ^^^jmp     loc_411250      ^^^xor     r9d, [rax+8]    ^^^or      esi, 8^^^jmp     loc_411250      ^^^xor     r9d, [rax+8]    ^^^or      esi, 4^^^jmp     loc_411250      ^^^xor     r8d, [rax+8]    ^^^or      esi, 2^^^jmp     loc_411250      ^^^xor     r8d, [rax+8]    ^^^or      esi, 1^^^jmp     loc_411250      ^^^mov     r12, [rax+8]    ^^^jmp     loc_411250      ^^^mov     r13, [rax+8]    ^^^jmp     loc_411250      ^^^
sub_425E85$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
_L_unlock_75$$$lea     rdi, lock_10964^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_413BBC^^^
__memcmp_sse4_1$$$pxor    xmm0, xmm0^^^cmp     rdx, 4Fh        ^^^ja      short loc_40B720^^^cmp     rdx, 1^^^jz      short loc_40B710^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^movzx   eax, byte ptr [rdi]^^^movzx   ecx, byte ptr [rsi]^^^sub     eax, ecx^^^retn^^^movdqu  xmm1, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^mov     rcx, rsi^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^add     rsi, 10h^^^sub     rcx, rsi^^^sub     rdi, rcx^^^add     rdx, rcx^^^test    rdi, 0Fh^^^jz      loc_40BC60^^^cmp     rdx, 80h        ^^^ja      loc_40B817      ^^^sub     rdx, 40h^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqu  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqu  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^cmp     rdx, 20h^^^jb      short loc_40B7F7^^^movdqu  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqu  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rdi, 40h^^^add     rsi, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^cmp     rdx, 200h       ^^^ja      loc_40BB50^^^cmp     rdx, 100h       ^^^ja      loc_40B948      ^^^sub     rdx, 80h^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqu  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqu  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^movdqu  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqu  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^movdqu  xmm2, xmmword ptr [rdi+60h]^^^pxor    xmm2, xmmword ptr [rsi+60h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C255^^^movdqu  xmm2, xmmword ptr [rdi+70h]^^^pxor    xmm2, xmmword ptr [rsi+70h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C245^^^add     rsi, 80h^^^add     rdi, 80h^^^cmp     rdx, 40h^^^jnb     loc_40B765^^^cmp     rdx, 20h^^^jb      short loc_40B930^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^sub     rdx, 100h       ^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqu  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqu  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^movdqu  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqu  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^movdqu  xmm2, xmmword ptr [rdi+60h]^^^pxor    xmm2, xmmword ptr [rsi+60h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C255^^^movdqu  xmm2, xmmword ptr [rdi+70h]^^^pxor    xmm2, xmmword ptr [rsi+70h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C245^^^movdqu  xmm2, xmmword ptr [rdi+80h]^^^pxor    xmm2, xmmword ptr [rsi+80h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C235^^^movdqu  xmm2, xmmword ptr [rdi+90h]^^^pxor    xmm2, xmmword ptr [rsi+90h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C225^^^movdqu  xmm2, xmmword ptr [rdi+0A0h]^^^pxor    xmm2, xmmword ptr [rsi+0A0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C215^^^movdqu  xmm2, xmmword ptr [rdi+0B0h]^^^pxor    xmm2, xmmword ptr [rsi+0B0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C202^^^movdqu  xmm2, xmmword ptr [rdi+0C0h]^^^pxor    xmm2, xmmword ptr [rsi+0C0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1EF^^^movdqu  xmm2, xmmword ptr [rdi+0D0h]^^^pxor    xmm2, xmmword ptr [rsi+0D0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1DC^^^movdqu  xmm2, xmmword ptr [rdi+0E0h]^^^pxor    xmm2, xmmword ptr [rsi+0E0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1C9^^^movdqu  xmm2, xmmword ptr [rdi+0F0h]^^^pxor    xmm2, xmmword ptr [rsi+0F0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1B6^^^add     rsi, 100h^^^add     rdi, 100h^^^cmp     rdx, 80h^^^jnb     loc_40B831^^^cmp     rdx, 40h^^^jnb     loc_40B765^^^cmp     rdx, 20h^^^jb      short loc_40BB2C^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^mov     r8, cs:__x86_64_data_cache_size_half^^^mov     r9, r8^^^shr     r8, 1^^^add     r8, r9^^^cmp     rdx, r8^^^ja      short loc_40BBDB^^^sub     rdx, 40h^^^nop     dword ptr [rax+00000000h]^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^movdqa  xmm1, xmm2^^^movdqu  xmm3, xmmword ptr [rdi+10h]^^^pxor    xmm3, xmmword ptr [rsi+10h]^^^por     xmm1, xmm3^^^movdqu  xmm4, xmmword ptr [rdi+20h]^^^pxor    xmm4, xmmword ptr [rsi+20h]^^^por     xmm1, xmm4^^^movdqu  xmm5, xmmword ptr [rdi+30h]^^^pxor    xmm5, xmmword ptr [rsi+30h]^^^por     xmm1, xmm5^^^ptest   xmm0, xmm1^^^jnb     loc_40C170^^^add     rsi, 40h^^^add     rdi, 40h^^^sub     rdx, 40h^^^jnb     short loc_40BB70^^^add     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx^^^ud2^^^sub     rdx, 40h^^^nop^^^prefetchnta byte ptr [rdi+1C0h]^^^prefetchnta byte ptr [rsi+1C0h]^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^movdqa  xmm1, xmm2^^^movdqu  xmm3, xmmword ptr [rdi+10h]^^^pxor    xmm3, xmmword ptr [rsi+10h]^^^por     xmm1, xmm3^^^movdqu  xmm4, xmmword ptr [rdi+20h]^^^pxor    xmm4, xmmword ptr [rsi+20h]^^^por     xmm1, xmm4^^^movdqu  xmm5, xmmword ptr [rdi+30h]^^^pxor    xmm5, xmmword ptr [rsi+30h]^^^por     xmm1, xmm5^^^ptest   xmm0, xmm1^^^jnb     loc_40C170^^^add     rsi, 40h^^^add     rdi, 40h^^^sub     rdx, 40h^^^jnb     short loc_40BBE0^^^add     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx^^^ud2^^^cmp     rdx, 80h        ^^^ja      loc_40BD20      ^^^sub     rdx, 40h^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqa  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqa  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^cmp     rdx, 20h^^^jb      short loc_40BCFF^^^movdqa  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqa  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rdi, 40h^^^add     rsi, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^cmp     rdx, 200h       ^^^ja      loc_40C060^^^cmp     rdx, 100h       ^^^ja      loc_40BE60      ^^^sub     rdx, 80h^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqa  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqa  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^movdqa  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqa  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^movdqa  xmm2, xmmword ptr [rdi+60h]^^^pxor    xmm2, xmmword ptr [rsi+60h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C255^^^movdqa  xmm2, xmmword ptr [rdi+70h]^^^pxor    xmm2, xmmword ptr [rsi+70h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C245^^^add     rsi, 80h^^^add     rdi, 80h^^^cmp     rdx, 40h^^^jnb     loc_40BC6D^^^cmp     rdx, 20h^^^jb      short loc_40BE39^^^movdqu  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqu  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^sub     rdx, 100h       ^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^movdqa  xmm2, xmmword ptr [rdi+20h]^^^pxor    xmm2, xmmword ptr [rsi+20h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C27D^^^movdqa  xmm2, xmmword ptr [rdi+30h]^^^pxor    xmm2, xmmword ptr [rsi+30h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C273^^^movdqa  xmm2, xmmword ptr [rdi+40h]^^^pxor    xmm2, xmmword ptr [rsi+40h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C269^^^movdqa  xmm2, xmmword ptr [rdi+50h]^^^pxor    xmm2, xmmword ptr [rsi+50h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C25F^^^movdqa  xmm2, xmmword ptr [rdi+60h]^^^pxor    xmm2, xmmword ptr [rsi+60h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C255^^^movdqa  xmm2, xmmword ptr [rdi+70h]^^^pxor    xmm2, xmmword ptr [rsi+70h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C245^^^movdqa  xmm2, xmmword ptr [rdi+80h]^^^pxor    xmm2, xmmword ptr [rsi+80h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C235^^^movdqa  xmm2, xmmword ptr [rdi+90h]^^^pxor    xmm2, xmmword ptr [rsi+90h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C225^^^movdqa  xmm2, xmmword ptr [rdi+0A0h]^^^pxor    xmm2, xmmword ptr [rsi+0A0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C215^^^movdqa  xmm2, xmmword ptr [rdi+0B0h]^^^pxor    xmm2, xmmword ptr [rsi+0B0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C202^^^movdqa  xmm2, xmmword ptr [rdi+0C0h]^^^pxor    xmm2, xmmword ptr [rsi+0C0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1EF^^^movdqa  xmm2, xmmword ptr [rdi+0D0h]^^^pxor    xmm2, xmmword ptr [rsi+0D0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1DC^^^movdqa  xmm2, xmmword ptr [rdi+0E0h]^^^pxor    xmm2, xmmword ptr [rsi+0E0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1C9^^^movdqa  xmm2, xmmword ptr [rdi+0F0h]^^^pxor    xmm2, xmmword ptr [rsi+0F0h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C1B6^^^add     rsi, 100h^^^add     rdi, 100h^^^cmp     rdx, 80h^^^jnb     loc_40BD3A^^^cmp     rdx, 40h^^^jnb     loc_40BC6D^^^cmp     rdx, 20h^^^jb      short loc_40C044^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^ptest   xmm0, xmm2^^^jnb     loc_40C28D^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pxor    xmm2, xmmword ptr [rsi+10h]^^^ptest   xmm0, xmm2^^^jnb     loc_40C285^^^sub     rdx, 20h^^^add     rdi, 20h^^^add     rsi, 20h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx             ^^^ud2^^^mov     r8, cs:__x86_64_data_cache_size_half^^^mov     r9, r8^^^shr     r8, 1^^^add     r8, r9^^^cmp     rdx, r8^^^ja      short loc_40C0EB^^^sub     rdx, 40h^^^nop     dword ptr [rax+00000000h]^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^movdqa  xmm1, xmm2^^^movdqa  xmm3, xmmword ptr [rdi+10h]^^^pxor    xmm3, xmmword ptr [rsi+10h]^^^por     xmm1, xmm3^^^movdqa  xmm4, xmmword ptr [rdi+20h]^^^pxor    xmm4, xmmword ptr [rsi+20h]^^^por     xmm1, xmm4^^^movdqa  xmm5, xmmword ptr [rdi+30h]^^^pxor    xmm5, xmmword ptr [rsi+30h]^^^por     xmm1, xmm5^^^ptest   xmm0, xmm1^^^jnb     loc_40C170^^^add     rsi, 40h^^^add     rdi, 40h^^^sub     rdx, 40h^^^jnb     short loc_40C080^^^add     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx^^^ud2^^^sub     rdx, 40h^^^nop^^^prefetchnta byte ptr [rdi+1C0h]^^^prefetchnta byte ptr [rsi+1C0h]^^^movdqa  xmm2, xmmword ptr [rdi]^^^pxor    xmm2, xmmword ptr [rsi]^^^movdqa  xmm1, xmm2^^^movdqa  xmm3, xmmword ptr [rdi+10h]^^^pxor    xmm3, xmmword ptr [rsi+10h]^^^por     xmm1, xmm3^^^movdqa  xmm4, xmmword ptr [rdi+20h]^^^pxor    xmm4, xmmword ptr [rsi+20h]^^^por     xmm1, xmm4^^^movdqa  xmm5, xmmword ptr [rdi+30h]^^^pxor    xmm5, xmmword ptr [rsi+30h]^^^por     xmm1, xmm5^^^ptest   xmm0, xmm1^^^jnb     short loc_40C170^^^add     rsi, 40h^^^add     rdi, 40h^^^sub     rdx, 40h^^^jnb     short loc_40C0F0^^^add     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_498C20^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^add     rcx, r11^^^jmp     rcx^^^ud2^^^add     rdi, 10h^^^add     rsi, 10h^^^ptest   xmm0, xmm2^^^jnb     loc_40C295      ^^^add     rdi, 10h^^^add     rsi, 10h^^^ptest   xmm0, xmm3^^^jnb     loc_40C295      ^^^add     rdi, 10h^^^add     rsi, 10h^^^ptest   xmm0, xmm4^^^jnb     loc_40C295      ^^^add     rdi, 10h^^^add     rsi, 10h^^^jmp     loc_40C295      ^^^add     rdi, 100h^^^add     rsi, 100h^^^jmp     loc_40C295      ^^^add     rdi, 0F0h^^^add     rsi, 0F0h^^^jmp     loc_40C295      ^^^add     rdi, 0E0h^^^add     rsi, 0E0h^^^jmp     loc_40C295      ^^^add     rdi, 0D0h^^^add     rsi, 0D0h^^^jmp     loc_40C295      ^^^add     rdi, 0C0h^^^add     rsi, 0C0h^^^jmp     loc_40C295      ^^^add     rdi, 0B0h^^^add     rsi, 0B0h^^^jmp     short loc_40C295^^^add     rdi, 0A0h^^^add     rsi, 0A0h^^^jmp     short loc_40C295^^^add     rdi, 90h^^^add     rsi, 90h^^^jmp     short loc_40C295^^^add     rdi, 80h^^^add     rsi, 80h^^^jmp     short loc_40C295^^^add     rdi, 70h^^^add     rsi, 70h^^^jmp     short loc_40C295^^^add     rdi, 60h^^^add     rsi, 60h^^^jmp     short loc_40C295^^^add     rdi, 50h^^^add     rsi, 50h^^^jmp     short loc_40C295^^^add     rdi, 40h^^^add     rsi, 40h^^^jmp     short loc_40C295^^^add     rdi, 10h^^^add     rsi, 10h^^^add     rdi, 10h^^^add     rsi, 10h^^^add     rdi, 10h^^^add     rsi, 10h^^^mov     rax, [rdi-10h]  ^^^mov     rcx, [rsi-10h]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]    ^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^mov     rax, [rdi-0Ch]  ^^^mov     rcx, [rsi-0Ch]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     ecx, [rsi-4]    ^^^mov     eax, [rdi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax        ^^^retn^^^movdqu  xmm1, xmmword ptr [rdi-41h]^^^movdqu  xmm2, xmmword ptr [rsi-41h]^^^mov     dl, 0BFh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rdi-31h]^^^movdqu  xmm2, xmmword ptr [rsi-31h]^^^mov     dl, 0CFh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rdi-21h]^^^movdqu  xmm2, xmmword ptr [rsi-21h]^^^mov     dl, 0DFh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-11h]  ^^^mov     rcx, [rsi-11h]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-9]    ^^^mov     rcx, [rsi-9]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^movzx   eax, byte ptr [rdi-1]^^^movzx   edx, byte ptr [rsi-1]^^^sub     eax, edx^^^retn^^^mov     rax, [rdi-0Dh]  ^^^mov     rcx, [rsi-0Dh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-5]    ^^^mov     ecx, [rsi-5]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^movzx   eax, byte ptr [rdi-1]^^^movzx   edx, byte ptr [rsi-1]^^^sub     eax, edx^^^retn^^^movdqu  xmm1, xmmword ptr [rdi-42h]^^^movdqu  xmm2, xmmword ptr [rsi-42h]^^^mov     dl, 0BEh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rdi-32h]^^^movdqu  xmm2, xmmword ptr [rsi-32h]^^^mov     dl, 0CEh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rdi-22h]^^^movdqu  xmm2, xmmword ptr [rsi-22h]^^^mov     dl, 0DEh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-12h]  ^^^mov     rcx, [rsi-12h]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-0Ah]  ^^^mov     rcx, [rsi-0Ah]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^movzx   eax, word ptr [rdi-2]^^^movzx   ecx, word ptr [rsi-2]^^^cmp     al, cl^^^jnz     loc_40CD10^^^and     eax, 0FFFFh^^^and     ecx, 0FFFFh^^^sub     eax, ecx^^^retn^^^mov     rax, [rdi-0Eh]  ^^^mov     rcx, [rsi-0Eh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-6]    ^^^mov     ecx, [rsi-6]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^movzx   ecx, word ptr [rsi-2]^^^movzx   eax, word ptr [rdi-2]^^^cmp     al, cl^^^jnz     loc_40CD10^^^and     eax, 0FFFFh^^^and     ecx, 0FFFFh^^^sub     eax, ecx^^^retn^^^movdqu  xmm2, xmmword ptr [rdi-43h]^^^movdqu  xmm1, xmmword ptr [rsi-43h]^^^mov     dl, 0BDh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-33h]^^^movdqu  xmm1, xmmword ptr [rsi-33h]^^^mov     dl, 0CDh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-23h]^^^movdqu  xmm2, xmmword ptr [rdi-23h]^^^mov     dl, 0DDh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-13h]  ^^^mov     rcx, [rsi-13h]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-0Bh]  ^^^mov     rcx, [rsi-0Bh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     eax, [rdi-4]^^^mov     ecx, [rsi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax^^^retn^^^mov     rax, [rdi-0Fh]  ^^^mov     rcx, [rsi-0Fh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-7]    ^^^mov     ecx, [rsi-7]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^mov     eax, [rdi-4]^^^mov     ecx, [rsi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax^^^retn^^^movzx   eax, word ptr [rdi-3]^^^movzx   ecx, word ptr [rsi-3]^^^cmp     ecx, eax^^^jnz     loc_40CCFA^^^movzx   eax, byte ptr [rdi-1]^^^movzx   ecx, byte ptr [rsi-1]^^^sub     eax, ecx^^^retn^^^movdqu  xmm2, xmmword ptr [rdi-44h]^^^movdqu  xmm1, xmmword ptr [rsi-44h]^^^mov     dl, 0BCh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-34h]^^^movdqu  xmm1, xmmword ptr [rsi-34h]^^^mov     dl, 0CCh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-24h]^^^movdqu  xmm1, xmmword ptr [rsi-24h]^^^mov     dl, 0DCh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-14h]^^^movdqu  xmm1, xmmword ptr [rsi-14h]^^^mov     dl, 0ECh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     ecx, [rsi-4]^^^mov     eax, [rdi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-45h]^^^movdqu  xmm2, xmmword ptr [rdi-45h]^^^mov     dl, 0BBh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-35h]^^^movdqu  xmm2, xmmword ptr [rdi-35h]^^^mov     dl, 0CBh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-25h]^^^movdqu  xmm2, xmmword ptr [rdi-25h]^^^mov     dl, 0DBh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-15h]^^^movdqu  xmm2, xmmword ptr [rdi-15h]^^^mov     dl, 0EBh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-46h]^^^movdqu  xmm2, xmmword ptr [rdi-46h]^^^mov     dl, 0BAh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-36h]^^^movdqu  xmm2, xmmword ptr [rdi-36h]^^^mov     dl, 0CAh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-26h]^^^movdqu  xmm2, xmmword ptr [rdi-26h]^^^mov     dl, 0DAh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm1, xmmword ptr [rsi-16h]^^^movdqu  xmm2, xmmword ptr [rdi-16h]^^^mov     dl, 0EAh^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-47h]^^^movdqu  xmm2, xmmword ptr [rdi-47h]^^^mov     dl, 0B9h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-37h]^^^movdqu  xmm1, xmmword ptr [rsi-37h]^^^mov     dl, 0C9h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-27h]^^^movdqu  xmm1, xmmword ptr [rsi-27h]^^^mov     dl, 0D9h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-17h]^^^movdqu  xmm1, xmmword ptr [rsi-17h]^^^mov     dl, 0E9h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-48h]^^^movdqu  xmm2, xmmword ptr [rdi-48h]^^^mov     dl, 0B8h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-38h]^^^movdqu  xmm1, xmmword ptr [rsi-38h]^^^mov     dl, 0C8h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-28h]^^^movdqu  xmm1, xmmword ptr [rsi-28h]^^^mov     dl, 0D8h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-18h]^^^movdqu  xmm1, xmmword ptr [rsi-18h]^^^mov     dl, 0E8h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rcx, [rsi-8]^^^mov     rax, [rdi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-49h]^^^movdqu  xmm2, xmmword ptr [rdi-49h]^^^mov     dl, 0B7h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-39h]^^^movdqu  xmm1, xmmword ptr [rsi-39h]^^^mov     dl, 0C7h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-29h]^^^movdqu  xmm1, xmmword ptr [rsi-29h]^^^mov     dl, 0D7h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-19h]^^^movdqu  xmm1, xmmword ptr [rsi-19h]^^^mov     dl, 0E7h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-9]^^^mov     rcx, [rsi-9]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^movzx   eax, byte ptr [rdi-1]^^^movzx   ecx, byte ptr [rsi-1]^^^sub     eax, ecx^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-4Ah]^^^movdqu  xmm2, xmmword ptr [rdi-4Ah]^^^mov     dl, 0B6h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Ah]^^^movdqu  xmm1, xmmword ptr [rsi-3Ah]^^^mov     dl, 0C6h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Ah]^^^movdqu  xmm1, xmmword ptr [rsi-2Ah]^^^mov     dl, 0D6h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Ah]^^^movdqu  xmm1, xmmword ptr [rsi-1Ah]^^^mov     dl, 0E6h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Ah]^^^mov     rcx, [rsi-0Ah]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^movzx   eax, word ptr [rdi-2]^^^movzx   ecx, word ptr [rsi-2]^^^jmp     loc_40CCFA^^^movdqu  xmm1, xmmword ptr [rsi-4Bh]^^^movdqu  xmm2, xmmword ptr [rdi-4Bh]^^^mov     dl, 0B5h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Bh]^^^movdqu  xmm1, xmmword ptr [rsi-3Bh]^^^mov     dl, 0C5h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Bh]^^^movdqu  xmm1, xmmword ptr [rsi-2Bh]^^^mov     dl, 0D5h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Bh]^^^movdqu  xmm1, xmmword ptr [rsi-1Bh]^^^mov     dl, 0E5h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Bh]^^^mov     rcx, [rsi-0Bh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     eax, [rdi-4]^^^mov     ecx, [rsi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-4Ch]^^^movdqu  xmm2, xmmword ptr [rdi-4Ch]^^^mov     dl, 0B4h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Ch]^^^movdqu  xmm1, xmmword ptr [rsi-3Ch]^^^mov     dl, 0C4h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Ch]^^^movdqu  xmm1, xmmword ptr [rsi-2Ch]^^^mov     dl, 0D4h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Ch]^^^movdqu  xmm1, xmmword ptr [rsi-1Ch]^^^mov     dl, 0E4h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Ch]^^^mov     rcx, [rsi-0Ch]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     ecx, [rsi-4]^^^mov     eax, [rdi-4]^^^cmp     ecx, eax^^^jnz     loc_40CCEF^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-4Dh]^^^movdqu  xmm2, xmmword ptr [rdi-4Dh]^^^mov     dl, 0B3h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Dh]^^^movdqu  xmm1, xmmword ptr [rsi-3Dh]^^^mov     dl, 0C3h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Dh]^^^movdqu  xmm1, xmmword ptr [rsi-2Dh]^^^mov     dl, 0D3h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Dh]^^^movdqu  xmm1, xmmword ptr [rsi-1Dh]^^^mov     dl, 0E3h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Dh]^^^mov     rcx, [rsi-0Dh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-4Eh]^^^movdqu  xmm2, xmmword ptr [rdi-4Eh]^^^mov     dl, 0B2h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Eh]^^^movdqu  xmm1, xmmword ptr [rsi-3Eh]^^^mov     dl, 0C2h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Eh]^^^movdqu  xmm1, xmmword ptr [rsi-2Eh]^^^mov     dl, 0D2h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Eh]^^^movdqu  xmm1, xmmword ptr [rsi-1Eh]^^^mov     dl, 0E2h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Eh]^^^mov     rcx, [rsi-0Eh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-4Fh]^^^movdqu  xmm2, xmmword ptr [rdi-4Fh]^^^mov     dl, 0B1h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-3Fh]^^^movdqu  xmm1, xmmword ptr [rsi-3Fh]^^^mov     dl, 0C1h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-2Fh]^^^movdqu  xmm1, xmmword ptr [rsi-2Fh]^^^mov     dl, 0D1h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-1Fh]^^^movdqu  xmm1, xmmword ptr [rsi-1Fh]^^^mov     dl, 0E1h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     loc_40CCC8^^^mov     rax, [rdi-0Fh]^^^mov     rcx, [rsi-0Fh]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     loc_40CCE3^^^xor     eax, eax^^^retn^^^movdqu  xmm2, xmmword ptr [rdi-40h]^^^movdqu  xmm1, xmmword ptr [rsi-40h]^^^mov     dl, 0C0h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     short loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-30h]^^^movdqu  xmm1, xmmword ptr [rsi-30h]^^^mov     dl, 0D0h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     short loc_40CCC8^^^movdqu  xmm2, xmmword ptr [rdi-20h]^^^movdqu  xmm1, xmmword ptr [rsi-20h]^^^mov     dl, 0E0h^^^pxor    xmm2, xmm1^^^ptest   xmm0, xmm2^^^jnb     short loc_40CCC8^^^mov     rax, [rdi-10h]^^^mov     rcx, [rsi-10h]^^^cmp     rcx, rax^^^jnz     short loc_40CCE3^^^mov     rax, [rdi-8]^^^mov     rcx, [rsi-8]^^^cmp     rcx, rax^^^jnz     short loc_40CCE3^^^xor     eax, eax^^^retn^^^movsx   rdx, dl^^^mov     rcx, [rsi+rdx]^^^mov     rax, [rdi+rdx]^^^cmp     rcx, rax^^^jnz     short loc_40CCE3^^^mov     rcx, [rsi+rdx+8]^^^mov     rax, [rdi+rdx+8]^^^cmp     ecx, eax^^^jnz     short loc_40CCEF^^^shr     rcx, 20h^^^shr     rax, 20h^^^cmp     ax, cx^^^jnz     short loc_40CCFA^^^shr     ecx, 10h^^^shr     eax, 10h^^^cmp     al, cl^^^jnz     short loc_40CD10^^^and     eax, 0FFFFh^^^and     ecx, 0FFFFh^^^sub     eax, ecx^^^retn^^^and     eax, 0FFh^^^and     ecx, 0FFh^^^sub     eax, ecx^^^retn^^^
do_in$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^mov     r13, r8^^^mov     [rsp+var_18], r12^^^sub     rsp, 48h^^^mov     r12, [rdi+48h]^^^mov     rax, [rsp+48h+arg_0]^^^mov     [rdi+50h], r9^^^mov     r14, rcx^^^mov     [rdi+70h], rsi^^^mov     [rsp+48h+var_30], rdx^^^mov     [rdi+58h], rax^^^cmp     qword ptr [r12], 0^^^mov     rbp, [r12+28h]^^^jz      short loc_474B69^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rcx, r14^^^lea     rdx, [rsp+48h+var_30]^^^lea     rsi, [rbx+50h]^^^mov     [rsp+48h+var_40], 0^^^mov     [rsp+48h+var_48], 0^^^lea     r9, [rsp+48h+var_38]^^^mov     rdi, r12^^^call    rbp^^^mov     rdx, [rsp+48h+var_30]^^^cmp     eax, 7^^^mov     [r13+0], rdx^^^mov     rdx, [rsp+48h+arg_8]^^^mov     rcx, [rbx+50h]^^^mov     [rdx], rcx^^^mov     edx, 2^^^ja      short loc_474BC1^^^mov     eax, eax^^^mov     edx, ds:CSWTCH_11[rax*4]^^^mov     eax, edx^^^mov     rbx, [rsp+48h+var_28]^^^mov     rbp, [rsp+48h+var_20]^^^mov     r12, [rsp+48h+var_18]^^^mov     r13, [rsp+48h+var_10]^^^mov     r14, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^
__libc_message$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 708h^^^test    al, al^^^mov     [rbp+var_71C], edi^^^mov     [rbp+var_D0], rdx^^^mov     [rbp+var_C8], rcx^^^mov     [rbp+var_C0], r8^^^mov     [rbp+var_B8], r9^^^jz      short loc_402163^^^movaps  [rbp+var_B0], xmm0^^^movaps  [rbp+var_A0], xmm1^^^movaps  [rbp+var_90], xmm2^^^movaps  [rbp+var_80], xmm3^^^movaps  [rbp+var_70], xmm4^^^movaps  [rbp+var_60], xmm5^^^movaps  [rbp+var_50], xmm6^^^movaps  [rbp+var_40], xmm7^^^lea     rax, [rbp+arg_0]^^^mov     dword ptr [rbp+var_110], 10h^^^mov     dword ptr [rbp+var_110+4], 30h^^^mov     edi, offset aLibc_fatal_std^^^mov     [rbp+var_718], rsi^^^mov     [rbp+var_108], rax^^^lea     rax, [rbp+var_E0]^^^mov     [rbp+var_100], rax^^^mov     rax, [rbp+var_110]^^^mov     [rbp+var_F8], rax^^^lea     rax, [rbp+arg_0]^^^mov     [rbp+var_F0], rax^^^lea     rax, [rbp+var_E0]^^^mov     [rbp+var_E8], rax^^^call    __secure_getenv^^^test    rax, rax^^^jz      loc_402278^^^cmp     byte ptr [rax], 0^^^mov     r15d, 2^^^jz      loc_402278^^^mov     rax, [rbp+var_718]^^^movzx   r13d, byte ptr [rax]^^^test    r13b, r13b^^^jz      loc_4023B7^^^mov     rbx, rax^^^mov     edx, r13d^^^xor     r12d, r12d^^^xor     r14d, r14d^^^mov     rax, rbx^^^jmp     short loc_40221D^^^lea     rdi, [rax+1]^^^mov     esi, 25h^^^call    strchrnul^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      short loc_402230^^^cmp     dl, 25h^^^jnz     short loc_402208^^^cmp     byte ptr [rax+1], 73h^^^jnz     short loc_402208^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     r13b, 25h^^^jz      short loc_4022A0^^^mov     rdx, rax^^^mov     r13, rbx^^^sub     rdx, rbx^^^sub     rsp, 30h^^^mov     esi, 10h^^^lea     ebx, [r12+1]^^^lea     rcx, [rsp+760h+var_751]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     [rcx], r13^^^mov     [rcx+8], rdx^^^mov     [rcx+10h], r14^^^movzx   r13d, byte ptr [rax]^^^test    r13b, r13b^^^jz      short loc_4022E0^^^mov     r12d, ebx^^^mov     edx, r13d^^^mov     r14, rcx^^^mov     rbx, rax^^^jmp     short loc_402200^^^xor     eax, eax^^^mov     esi, 902h^^^mov     edi, offset aDevTty^^^call    __open_nocancel^^^mov     r15d, eax^^^cmp     eax, 0FFFFFFFFh^^^mov     eax, 2^^^cmovz   r15d, eax^^^jmp     loc_4021E0^^^cmp     byte ptr [rbx+1], 73h^^^jnz     short loc_402236^^^mov     edx, dword ptr [rbp+var_110]^^^cmp     edx, 30h^^^jnb     loc_4023A0^^^mov     eax, edx^^^add     rax, [rbp+var_100]^^^add     edx, 8^^^mov     dword ptr [rbp+var_110], edx^^^mov     r13, [rax]^^^mov     rdi, r13^^^call    strlen^^^mov     rdx, rax^^^lea     rax, [rbx+2]^^^jmp     loc_40223F^^^movsxd  r8, ebx^^^xor     edx, edx^^^xor     edi, edi^^^mov     rax, r8^^^shl     rax, 4^^^add     rax, 1Eh^^^div     rsi^^^mov     esi, r12d^^^movsxd  rdx, r12d^^^neg     rsi^^^shl     rdx, 4^^^shl     rsi, 4^^^sub     rsi, 10h^^^shl     rax, 4^^^sub     rsp, rax^^^xor     eax, eax^^^lea     r14, [rsp+760h+var_751]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^add     rdx, r14^^^nop^^^mov     r9, [rcx]^^^mov     r12, [rcx+8]^^^mov     rcx, [rcx+10h]^^^mov     [rdx+rax+8], r12^^^mov     [rdx+rax], r9^^^sub     rax, 10h^^^add     r12, rdi^^^cmp     rax, rsi^^^mov     rdi, r12^^^jnz     short loc_402320^^^movsxd  r9, r15d^^^mov     r10d, 14h^^^nop     dword ptr [rax+00h]^^^mov     rdx, r8^^^mov     rsi, r14^^^mov     rdi, r9^^^mov     eax, r10d^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFFFFCh^^^mov     r13, rax^^^jnz     short loc_40236F^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_402350^^^mov     ecx, [rbp+var_71C]^^^test    ecx, ecx^^^jnz     short loc_4023D3^^^cmp     r12, r13^^^jnz     short loc_4023B7^^^mov     eax, 1^^^mov     edx, [rbp+var_71C]^^^test    edx, edx^^^jnz     loc_40247C^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rax, [rbp+var_108]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_108], rdx^^^jmp     loc_4022C7^^^mov     rsi, [rbp+var_718]^^^lea     rdx, [rbp+var_F8]^^^mov     edi, 3^^^call    vsyslog^^^xor     eax, eax^^^jmp     short loc_402383^^^mov     rax, cs:_dl_pagesize^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^lea     r10, [r12+rax]^^^neg     rax^^^and     r10, rax^^^mov     rsi, r10^^^mov     [rbp+var_730], r10^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_728], rax^^^mov     r10, [rbp+var_730]^^^jz      loc_402379^^^mov     [rax], r10d^^^xor     ecx, ecx^^^add     rax, 4^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, [r14+8]^^^mov     rsi, [r14]^^^mov     rdi, rax^^^mov     dword ptr [rbp+var_730], ecx^^^add     r14, 10h^^^call    mempcpy^^^mov     ecx, dword ptr [rbp+var_730]^^^add     ecx, 1^^^cmp     ecx, ebx^^^jl      short loc_402430^^^mov     byte ptr [rax], 0^^^mov     rdi, [rbp+var_728]^^^xchg    rdi, cs:__abort_msg^^^test    rdi, rdi^^^jz      loc_402379^^^mov     esi, [rdi]^^^call    munmap^^^jmp     loc_402379^^^cmp     [rbp+var_71C], 1^^^jle     short loc_402489^^^test    al, al^^^jnz     short loc_40248E^^^call    abort^^^lea     rdi, [rbp+var_310]^^^mov     esi, 40h^^^call    backtrace^^^cmp     eax, 2^^^mov     ebx, eax^^^jle     short loc_402489^^^mov     edx, 1Dh^^^mov     esi, offset aBacktrace^^^mov     edi, r15d^^^call    __write_nocancel^^^lea     rdi, [rbp+var_310]^^^lea     esi, [rbx-1]^^^mov     edx, r15d^^^add     rdi, 8^^^call    backtrace_symbols_fd^^^mov     edx, 1Dh^^^mov     esi, offset aMemoryMap^^^mov     edi, r15d^^^call    __write_nocancel^^^xor     esi, esi^^^mov     edi, offset aProcSelfMaps^^^xor     eax, eax^^^call    __open_nocancel^^^mov     r12d, eax^^^lea     rsi, [rbp+var_710]^^^mov     edx, 400h^^^mov     edi, r12d^^^call    __read_nocancel^^^movsxd  rbx, eax^^^test    rbx, rbx^^^jle     short loc_402526^^^lea     rsi, [rbp+var_710]^^^mov     rdx, rbx^^^mov     edi, r15d^^^call    __write_nocancel^^^cdqe^^^cmp     rax, rbx^^^jz      short loc_4024F1^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^jmp     loc_402489^^^
strerror$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^xor     edx, edx^^^mov     [rsp+var_8], r12^^^xor     esi, esi^^^sub     rsp, 18h^^^mov     ebx, edi^^^call    strerror_r^^^test    rax, rax^^^jz      short loc_482C16^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^cmp     cs:buf, 0^^^mov     rbp, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, fs:[rbp+0]^^^jz      short loc_482C5B^^^mov     rsi, cs:buf^^^mov     fs:[rbp+0], r12d^^^test    rsi, rsi^^^jz      short loc_482C6E^^^mov     edi, ebx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^mov     edx, 400h^^^add     rsp, 18h^^^jmp     strerror_r^^^mov     edi, 400h^^^call    malloc^^^mov     cs:buf, rax^^^jmp     short loc_482C2C^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     edx, 5^^^mov     r12, [rsp+18h+var_8]^^^mov     esi, offset aUnknownError_0^^^mov     edi, offset _libc_intl_domainname^^^add     rsp, 18h^^^jmp     dcgettext^^^
__libc_disable_asynccancel$$$test    edi, 2^^^jnz     short locret_410ABF^^^mov     eax, fs:308h^^^mov     r11d, eax^^^and     r11d, 0FFFFFFFDh^^^lock cmpxchg fs:308h, r11d^^^jnz     short loc_410AA0^^^mov     eax, r11d^^^and     eax, 0Ch^^^cmp     eax, 4^^^jz      short loc_410AC0^^^retn^^^mov     rdi, fs:0^^^mov     eax, 0CAh^^^xor     r10, r10^^^add     rdi, 308h^^^mov     esi, 80h^^^syscall^^^mov     eax, fs:308h^^^jmp     short loc_410AB7^^^
_L_unlock_14260$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_409276^^^
_IO_switch_to_main_wget_area$$$mov     rax, [rdi+0A0h]^^^and     dword ptr [rdi], 0FFFFFEFFh^^^mov     rdx, [rax+8]^^^mov     rcx, [rax+50h]^^^mov     [rax+50h], rdx^^^mov     rdx, [rax+40h]^^^mov     [rax+8], rcx^^^mov     rcx, [rax+10h]^^^mov     [rax], rdx^^^mov     [rax+10h], rdx^^^mov     [rax+40h], rcx^^^retn^^^
__hash_string$$$xor     eax, eax^^^nop     word ptr [rax+rax+00h]^^^movzx   edx, byte ptr [rdi]^^^test    dl, dl^^^jz      short locret_417759^^^shl     rax, 4^^^movzx   edx, dl^^^add     rdi, 1^^^add     rax, rdx^^^mov     rdx, rax^^^and     edx, 0F0000000h^^^jz      short loc_417728^^^xor     rax, rdx^^^shr     rdx, 18h^^^xor     rax, rdx^^^movzx   edx, byte ptr [rdi]^^^test    dl, dl^^^jnz     short loc_41772F^^^rep retn^^^
__dlerror$$$push    rbp^^^mov     eax, 0^^^push    rbx^^^sub     rsp, 18h^^^test    rax, rax^^^mov     [rsp+28h+var_28], 0^^^jz      loc_48274A^^^mov     esi, offset init^^^mov     edi, offset once^^^call    near ptr 0^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_482768^^^mov     edi, cs:key^^^call    near ptr 0^^^mov     rbx, rax^^^test    rax, rax^^^mov     eax, offset last_result^^^cmovz   rbx, rax^^^mov     eax, [rbx+4]^^^test    eax, eax^^^jz      short loc_482670^^^mov     rax, [rbx+18h]^^^test    rax, rax^^^jz      short loc_482664^^^mov     edi, offset _dl_out_of_memory^^^mov     ecx, 0Eh^^^mov     rsi, rax^^^repe cmpsb^^^jz      short loc_48265C^^^mov     rdi, rax^^^call    free^^^mov     qword ptr [rbx+18h], 0^^^mov     rax, [rsp+28h+var_28]^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rsi, [rbx+18h]^^^test    rsi, rsi^^^jz      short loc_482664^^^mov     edi, [rbx]^^^mov     [rsp+28h+var_28], rsi^^^test    edi, edi^^^jnz     short loc_4826F0^^^mov     edx, 5^^^mov     edi, offset _libc_intl_domainname^^^call    dcgettext^^^mov     rdx, [rbx+10h]^^^mov     r8, rax^^^mov     ecx, offset unk_49A0C9^^^mov     eax, offset asc_496B02^^^mov     esi, offset aSSS^^^mov     rdi, rsp^^^cmp     byte ptr [rdx], 0^^^cmovnz  rcx, rax^^^xor     eax, eax^^^call    asprintf^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_48273A^^^mov     rax, [rbx+18h]^^^mov     edi, offset _dl_out_of_memory^^^mov     ecx, 0Eh^^^mov     rsi, rax^^^repe cmpsb^^^jnz     short loc_482740^^^mov     rax, [rsp+28h+var_28]^^^mov     [rbx+18h], rax^^^mov     dword ptr [rbx+4], 1^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^retn^^^call    strerror^^^mov     rsi, [rbx+18h]^^^mov     edx, 5^^^mov     edi, offset _libc_intl_domainname^^^mov     rbp, rax^^^call    dcgettext^^^mov     rdx, [rbx+10h]^^^mov     r8, rax^^^mov     ecx, offset unk_49A0C9^^^mov     eax, offset asc_496B02^^^mov     r9, rbp^^^mov     esi, offset aSSSS^^^mov     rdi, rsp^^^cmp     byte ptr [rdx], 0^^^cmovnz  rcx, rax^^^xor     eax, eax^^^call    asprintf^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4826BE^^^mov     rax, [rsp+28h+var_28]^^^jmp     short loc_4826DB^^^mov     rdi, rax^^^call    free^^^jmp     short loc_4826D3^^^cmp     cs:once, 0^^^jnz     loc_48260B^^^call    init^^^or      cs:once, 2^^^jmp     loc_48260B^^^mov     ebx, offset last_result^^^jmp     loc_482633^^^
backtrace_helper$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_18], rbx^^^mov     [rbp+var_10], r12^^^mov     rbx, rdi^^^mov     [rbp+var_8], r13^^^sub     rsp, 20h^^^mov     r13d, [rsi+10h]^^^mov     r12, rsi^^^cmp     r13d, 0FFFFFFFFh^^^jz      short loc_410E73^^^mov     rax, [rsi]^^^movsxd  r13, r13d^^^lea     r13, [rax+r13*8]^^^call    _Unwind_GetIP^^^mov     rdi, rbx^^^mov     [r13+0], rax^^^call    _Unwind_GetCFA^^^mov     r13d, [r12+10h]^^^mov     rsi, rax^^^test    r13d, r13d^^^jle     short loc_410E6E^^^mov     rdx, [r12]^^^movsxd  rcx, r13d^^^mov     rax, [rdx+rcx*8]^^^cmp     [rdx+rcx*8-8], rax^^^jz      short loc_410EA0^^^mov     [r12+8], rsi^^^add     r13d, 1^^^xor     eax, eax^^^cmp     r13d, [r12+14h]^^^mov     [r12+10h], r13d^^^setz    al^^^lea     eax, [rax+rax*4]^^^mov     rbx, [rbp+var_18]^^^mov     r12, [rbp+var_10]^^^mov     r13, [rbp+var_8]^^^leave^^^retn^^^cmp     [r12+8], rsi^^^mov     eax, 5^^^jnz     short loc_410E6E^^^jmp     short loc_410E89^^^
_L_unlock_13352$$$lea     rdi, [r12]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408C18^^^
read_encoded_value_with_base$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_8], r13^^^mov     [rsp+var_10], r12^^^sub     rsp, 48h^^^cmp     dil, 50h^^^mov     r13, rcx^^^mov     ebp, edi^^^jz      loc_4905A8^^^movzx   r12d, dil^^^mov     eax, r12d^^^and     eax, 0Fh^^^cmp     eax, 0Ch        ^^^jbe     short loc_4904B0^^^call    abort           ^^^lea     rcx, off_4B3700^^^movsxd  rax, dword ptr [rcx+rax*4]^^^add     rcx, rax^^^jmp     rcx             ^^^mov     r8, [rdx]       ^^^lea     rax, [rdx+8]^^^test    r8, r8^^^jz      short loc_4904E8^^^and     r12d, 70h^^^cmp     r12d, 10h^^^cmovz   rbx, rdx^^^add     r8, rbx^^^test    bpl, bpl^^^jns     short loc_4904E8^^^mov     r8, [r8]^^^nop     dword ptr [rax+rax+00h]^^^mov     [r13+0], r8^^^mov     rbx, [rsp+48h+var_20]^^^mov     rbp, [rsp+48h+var_18]^^^mov     r12, [rsp+48h+var_10]^^^mov     r13, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^movsx   r8, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     short loc_4904C7^^^lea     rsi, [rsp+48h+var_30]^^^mov     rdi, rdx^^^mov     [rsp+48h+var_40], rdx^^^call    read_sleb128^^^mov     r8, [rsp+48h+var_30]^^^mov     rdx, [rsp+48h+var_40]^^^jmp     short loc_4904C7^^^movsxd  r8, dword ptr [rdx]^^^lea     rax, [rdx+4]^^^jmp     loc_4904C7^^^mov     r8d, [rdx]      ^^^lea     rax, [rdx+4]^^^jmp     loc_4904C7^^^movzx   r8d, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     loc_4904C7^^^mov     rax, rdx        ^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   edi, byte ptr [rax]^^^mov     esi, 7Fh^^^add     rax, 1^^^and     rsi, rdi^^^shl     rsi, cl^^^add     ecx, 7^^^or      r8, rsi^^^test    dil, dil^^^js      short loc_490580^^^jmp     loc_4904C7^^^lea     rax, [rdx+7]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^mov     r8, [rax]^^^add     rax, 8^^^jmp     loc_4904E8^^^
get_free_list$$$mov     rdx, cs:free_list^^^test    rdx, rdx^^^jz      loc_4027C0^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_402740^^^lock cmpxchg cs:list_lock, esi^^^jnz     _L_lock_136^^^jmp     short loc_40274D^^^cmpxchg cs:list_lock, esi^^^jnz     _L_lock_136^^^mov     rdx, cs:free_list^^^test    rdx, rdx^^^jz      short loc_402767^^^mov     rax, [rdx+870h]^^^mov     cs:free_list, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40277F^^^lock dec cs:list_lock^^^jnz     _L_unlock_148^^^jmp     short loc_40278B^^^dec     cs:list_lock^^^jnz     _L_unlock_148^^^test    rdx, rdx^^^jz      short loc_4027C0^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4027AC^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_156^^^jmp     short loc_4027B5^^^cmpxchg [rdx], esi^^^jnz     _L_lock_156^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     fs:[rax], rdx^^^mov     rax, rdx^^^retn^^^
_L_unlock_426$$$lea     rdi, lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_401EFD^^^
__get_cpu_features$$$mov     eax, cs:__cpu_features^^^test    eax, eax^^^jnz     short loc_411F4F^^^call    __init_cpu_features^^^mov     eax, offset __cpu_features^^^retn^^^
_dl_dprintf$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_455FD6^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rcx, [rsp+0D8h+var_D0]^^^mov     rdx, rsi^^^xor     esi, esi^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    _dl_debug_vdprintf^^^add     rsp, 0D8h^^^retn^^^
_L_unlock_38_0$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     locret_42B40D^^^
sysconf$$$mov     [rsp+var_18], rbx^^^mov     ebx, edi^^^mov     [rsp+var_10], rbp^^^lea     eax, [rbx-0B9h]^^^mov     [rsp+var_8], r12^^^sub     rsp, 58h^^^cmp     eax, 0Eh^^^jbe     short loc_44C650^^^cmp     ebx, 22h^^^jz      loc_44C6C0^^^jg      short loc_44C670^^^test    ebx, ebx^^^nop     dword ptr [rax]^^^jnz     loc_44C780^^^mov     rsi, rsp^^^mov     edi, 3^^^call    getrlimit64^^^mov     edx, eax^^^mov     eax, 20000h^^^test    edx, edx^^^jnz     short loc_44C657^^^mov     rdx, [rsp+58h+var_58]^^^mov     rcx, rdx^^^shr     rcx, 2^^^cmp     rdx, 80000h^^^cmovnb  rax, rcx^^^jmp     short loc_44C657^^^mov     edi, ebx^^^call    __cache_sysconf^^^mov     rbx, [rsp+58h+var_18]^^^mov     rbp, [rsp+58h+var_10]^^^mov     r12, [rsp+58h+var_8]^^^add     rsp, 58h^^^retn^^^cmp     ebx, 8Ah^^^jl      short loc_44C698^^^cmp     ebx, 8Bh^^^mov     eax, 31069h^^^jle     short loc_44C657^^^cmp     ebx, 95h^^^jz      loc_44C798^^^nop     dword ptr [rax+00000000h]^^^cmp     ebx, 0F6h       ^^^jbe     loc_44C770^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_44C657^^^mov     edi, 0Bh^^^mov     rsi, rsp^^^call    getrlimit64^^^test    eax, eax^^^mov     edi, offset aProcSysKernelR^^^jz      loc_44CCF0^^^xor     esi, esi^^^xor     eax, eax^^^mov     rbp, rsp^^^call    __open_nocancel^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jz      short loc_44C698^^^xchg    ax, ax^^^mov     edx, 1Fh^^^mov     rsi, rsp^^^mov     edi, r12d^^^call    __read_nocancel^^^movsxd  rdx, eax^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_44C716^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 4^^^jz      short loc_44C6F0^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^test    rdx, rdx^^^jle     loc_44C698^^^lea     rsi, [rsp+58h+var_20]^^^mov     byte ptr [rsp+rdx+58h+var_58], 0^^^mov     rdi, rsp^^^mov     edx, 0Ah^^^call    strtoq^^^mov     rdx, [rsp+58h+var_20]^^^cmp     rdx, rbp^^^jz      loc_44C698^^^movzx   edx, byte ptr [rdx]^^^cmp     dl, 0Ah^^^jz      loc_44C657^^^test    dl, dl^^^jnz     loc_44C698^^^jmp     loc_44C657^^^jmp     ds:off_49EBD0[rbx*8]^^^cmp     ebx, 3^^^jnz     loc_44C698^^^mov     edi, offset aProcSysKernelN^^^xchg    ax, ax^^^jmp     loc_44C6DA^^^lea     rsi, [rsp+58h+var_38]^^^mov     edi, 1^^^mov     eax, 0E5h^^^syscall^^^cmp     eax, 0FFFFF001h^^^sbb     rax, rax^^^and     eax, 3106Ah^^^sub     rax, 1^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     eax, 800h       ^^^jmp     loc_44C657^^^mov     eax, 1000h      ^^^jmp     loc_44C657^^^mov     eax, 0FFFFh     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 0FFFFFFFFh ^^^jmp     loc_44C657^^^mov     eax, 0FFh       ^^^jmp     loc_44C657^^^mov     rax, 0FFFFFFFFFFFF8000h^^^jmp     loc_44C657^^^mov     eax, 7FFFh      ^^^jmp     loc_44C657^^^mov     rax, 0FFFFFFFFFFFFFF80h^^^jmp     loc_44C657^^^mov     eax, 7Fh        ^^^jmp     loc_44C657^^^mov     eax, 7FFFh      ^^^jmp     loc_44C657^^^mov     eax, 14h        ^^^jmp     loc_44C657^^^mov     eax, 10h        ^^^jmp     loc_44C657^^^mov     eax, 20h        ^^^jmp     loc_44C657^^^mov     eax, 40h        ^^^jmp     loc_44C657^^^mov     rax, 0FFFFFFFF80000000h^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     rax, 0FFFFFFFFFFFFFF80h^^^jmp     loc_44C657^^^mov     eax, 7Fh        ^^^jmp     loc_44C657^^^mov     eax, 8          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 4          ^^^jmp     loc_44C657^^^mov     eax, 2BCh       ^^^jmp     loc_44C657^^^mov     eax, 2000h      ^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^call    get_avphys_pages^^^jmp     loc_44C657^^^nop                     ^^^call    get_phys_pages^^^jmp     loc_44C657^^^nop     word ptr [rax+rax+00h]^^^call    get_nprocs^^^cdqe^^^jmp     loc_44C657^^^nop     dword ptr [rax+00h]^^^call    get_nprocs_conf^^^cdqe^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 4000h      ^^^jmp     loc_44C657^^^mov     eax, 400h       ^^^jmp     loc_44C657^^^mov     eax, 4          ^^^jmp     loc_44C657^^^mov     eax, 20h        ^^^jmp     loc_44C657^^^mov     eax, 100h       ^^^jmp     loc_44C657^^^mov     eax, 400h       ^^^jmp     loc_44C657^^^mov     eax, 400h       ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_off32^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_offbig^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_44C657^^^call    getdtablesize   ^^^cdqe^^^jmp     loc_44C657^^^mov     eax, 10000h     ^^^jmp     loc_44C657^^^call    __getclktck     ^^^cdqe^^^jmp     loc_44C657^^^call    __get_child_max ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^call    __tzname_max    ^^^mov     rdx, rax^^^mov     eax, 6^^^cmp     rdx, 6^^^jle     loc_44C657^^^call    __tzname_max^^^jmp     loc_44C657^^^mov     eax, 10h        ^^^jmp     loc_44C657^^^mov     eax, 8000h      ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     eax, 14h        ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_off32^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 400h       ^^^jmp     loc_44C657^^^mov     eax, 40h        ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 1          ^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_offbig^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^xor     eax, eax        ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     eax, 800h       ^^^jmp     loc_44C657^^^mov     eax, 7FFFh      ^^^jmp     loc_44C657^^^mov     eax, 800h       ^^^jmp     loc_44C657^^^mov     eax, 20h        ^^^jmp     loc_44C657^^^mov     eax, 0FFh       ^^^jmp     loc_44C657^^^mov     eax, 3E8h       ^^^jmp     loc_44C657^^^mov     eax, 63h        ^^^jmp     loc_44C657^^^mov     eax, 800h       ^^^jmp     loc_44C657^^^mov     eax, 63h        ^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_off32^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^mov     eax, 7FFFFFFFh  ^^^jmp     loc_44C657^^^mov     edi, offset aIlp32_offbig^^^call    __sysconf_check_spec^^^jmp     loc_44C657^^^mov     eax, 20h        ^^^jmp     loc_44C657^^^call    getpagesize     ^^^cdqe^^^jmp     loc_44C657^^^mov     eax, 31069h     ^^^jmp     loc_44C657^^^mov     rax, [rsp+58h+var_58]^^^jmp     loc_44C657^^^
mprotect$$$mov     eax, 0Ah^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
base_from_object.isra.3$$$sub     rsp, 8^^^cmp     dil, 0FFh^^^jz      short loc_493274^^^and     edi, 70h^^^cmp     edi, 20h^^^jz      short loc_493280^^^jle     short loc_493270^^^cmp     edi, 30h^^^jz      short loc_493290^^^cmp     edi, 50h^^^nop     dword ptr [rax+00h]^^^jz      short loc_493274^^^call    abort^^^test    edi, edi^^^jnz     short loc_4932A0^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^mov     rax, [rsi]^^^add     rsp, 8^^^retn^^^mov     rax, [rdx]^^^add     rsp, 8^^^retn^^^cmp     edi, 10h^^^jz      short loc_493274^^^call    abort^^^
_nl_make_l10nflist.constprop.0$$$push    r15^^^push    r14^^^mov     r14d, ecx^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^xor     ebx, ebx^^^sub     rsp, 68h^^^mov     [rsp+98h+var_70], rdi^^^mov     rdi, r8^^^mov     [rsp+98h+var_50], rsi^^^mov     [rsp+98h+var_60], rdx^^^mov     [rsp+98h+var_78], r8^^^mov     [rsp+98h+var_68], r9^^^mov     r15, [rsp+98h+arg_18]^^^call    strlen^^^mov     ecx, r14d^^^mov     [rsp+98h+var_58], rax^^^and     ecx, 4^^^mov     [rsp+98h+var_48], ecx^^^jz      short loc_4158EB^^^mov     rdi, [rsp+98h+var_68]^^^call    strlen^^^lea     rbx, [rax+1]^^^mov     ecx, r14d^^^xor     ebp, ebp^^^and     ecx, 2^^^mov     [rsp+98h+var_44], ecx^^^jz      short loc_41590A^^^mov     rdi, [rsp+98h+arg_0]^^^call    strlen^^^lea     rbp, [rax+1]^^^mov     ecx, r14d^^^xor     r12d, r12d^^^and     ecx, 1^^^mov     [rsp+98h+var_40], ecx^^^jz      short loc_41592A^^^mov     rdi, [rsp+98h+arg_8]^^^call    strlen^^^lea     r12, [rax+1]^^^mov     ecx, r14d^^^xor     r13d, r13d^^^and     ecx, 8^^^mov     [rsp+98h+var_3C], ecx^^^jz      short loc_41594A^^^mov     rdi, [rsp+98h+arg_10]^^^call    strlen^^^lea     r13, [rax+1]^^^mov     rdi, r15^^^call    strlen^^^mov     rcx, [rsp+98h+var_60]^^^mov     rsi, [rsp+98h+var_58]^^^lea     rdx, [rcx+rsi+2]^^^add     rdx, rbx^^^add     rdx, rbp^^^xor     ebp, ebp^^^add     rdx, r12^^^add     rdx, r13^^^lea     rdi, [rdx+rax]^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_415BF7^^^mov     rdx, [rsp+98h+var_60]^^^mov     rsi, [rsp+98h+var_50]^^^mov     rdi, rax^^^call    memcpy^^^mov     rsi, [rsp+98h+var_60]^^^mov     edx, 3Ah^^^mov     rdi, rbx^^^call    argz_stringify^^^mov     rdx, [rsp+98h+var_60]^^^mov     rsi, [rsp+98h+var_78]^^^lea     rdi, [rbx+rdx-1]^^^mov     byte ptr [rdi], 2Fh^^^add     rdi, 1^^^call    near ptr qword_400310^^^mov     edi, [rsp+98h+var_48]^^^test    edi, edi^^^jnz     loc_415D18^^^mov     esi, [rsp+98h+var_44]^^^test    esi, esi^^^jnz     loc_415CF8^^^mov     ecx, [rsp+98h+var_40]^^^test    ecx, ecx^^^jnz     loc_415CD8^^^mov     edx, [rsp+98h+var_3C]^^^test    edx, edx^^^jnz     loc_415CB8^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Fh^^^mov     rsi, r15^^^xor     r12d, r12d^^^call    sub_400320^^^mov     rcx, [rsp+98h+var_70]^^^mov     rbp, [rcx]^^^test    rbp, rbp^^^jz      short loc_415A40^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, [rbp+0]^^^test    rdi, rdi^^^jz      short loc_415A37^^^mov     rsi, rbx^^^call    sub_4003A0^^^cmp     eax, 0^^^jz      loc_415CA8^^^jl      short loc_415A40^^^mov     r12, rbp^^^mov     rbp, [rbp+18h]^^^test    rbp, rbp^^^jnz     short loc_415A18^^^mov     rdi, [rsp+98h+var_50]^^^mov     rsi, [rsp+98h+var_60]^^^call    argz_count^^^mov     rdx, rax^^^mov     eax, r14d^^^mov     ecx, r14d^^^and     eax, 0FFFFAAAAh^^^and     ecx, 5555h^^^sar     eax, 1^^^add     ecx, eax^^^mov     eax, ecx^^^and     ecx, 3333h^^^and     eax, 0FFFFCCCCh^^^sar     eax, 2^^^add     eax, ecx^^^mov     ecx, eax^^^sar     ecx, 4^^^add     eax, ecx^^^and     eax, 0F0Fh^^^mov     ecx, eax^^^sar     ecx, 8^^^add     ecx, eax^^^mov     eax, 1^^^shl     eax, cl^^^cdqe^^^shl     rax, 4^^^imul    rax, rdx^^^lea     rdi, [rax+28h]^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_415CA8^^^mov     rsi, [rsp+98h+var_60]^^^mov     rdi, [rsp+98h+var_50]^^^mov     [rbp+0], rbx^^^call    argz_count^^^cmp     rax, 1^^^mov     edx, 1^^^jz      loc_415D2E^^^test    r12, r12^^^mov     [rbp+8], edx^^^mov     qword ptr [rbp+10h], 0^^^jz      loc_415D50^^^mov     rax, [r12+18h]^^^mov     [rbp+18h], rax^^^mov     [r12+18h], rbp^^^mov     rsi, [rsp+98h+var_60]^^^mov     rdi, [rsp+98h+var_50]^^^mov     r13d, r14d^^^call    argz_count^^^cmp     rax, 1^^^setz    al^^^xor     r12d, r12d^^^movzx   eax, al^^^sub     r13d, eax^^^js      short loc_415B6E^^^mov     eax, r14d^^^mov     [rsp+98h+var_48], r14d^^^not     eax^^^mov     dword ptr [rsp+98h+var_58], eax^^^mov     rax, [rsp+98h+var_50]^^^add     rax, [rsp+98h+var_60]^^^mov     r14, rax^^^jmp     short loc_415B4A^^^sub     r13d, 1^^^cmp     r13d, 0FFFFFFFFh^^^jz      short loc_415B69^^^test    dword ptr [rsp+98h+var_58], r13d^^^jnz     short loc_415B40^^^xor     ebx, ebx^^^cmp     [rsp+98h+var_60], 0^^^jnz     loc_415C93^^^sub     r13d, 1^^^cmp     r13d, 0FFFFFFFFh^^^jnz     short loc_415B4A^^^mov     r14d, [rsp+98h+var_48]^^^test    r14d, r14d^^^js      short loc_415BEE^^^mov     ebx, r14d^^^mov     r13, [rsp+98h+arg_10]^^^not     ebx^^^jmp     short loc_415B92^^^sub     r14d, 1^^^cmp     r14d, 0FFFFFFFFh^^^jz      short loc_415BEE^^^test    r14d, ebx^^^jnz     short loc_415B88^^^mov     rdx, [rsp+98h+arg_8]^^^mov     rcx, [rsp+98h+arg_0]^^^mov     esi, offset aUsrShareLocale^^^mov     r9, [rsp+98h+var_68]^^^mov     r8, [rsp+98h+var_78]^^^mov     rdi, [rsp+98h+var_70]^^^mov     [rsp+98h+var_80], r15^^^mov     [rsp+98h+var_90], rdx^^^mov     [rsp+98h+var_98], rcx^^^mov     edx, 1Bh^^^mov     ecx, r14d^^^sub     r14d, 1^^^mov     [rsp+98h+var_88], r13^^^call    _nl_make_l10nflist_constprop_0^^^mov     [rbp+r12*8+20h], rax^^^add     r12, 1^^^cmp     r14d, 0FFFFFFFFh^^^jnz     short loc_415B92^^^mov     qword ptr [rbp+r12*8+20h], 0^^^add     rsp, 68h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     rbx, r14^^^jnb     loc_415B40^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400350^^^lea     rbx, [rax+1]^^^cmp     r14, rbx^^^jbe     loc_415B40^^^test    rbx, rbx^^^jz      loc_415B40^^^mov     rdi, rbx^^^call    strlen^^^mov     rcx, [rsp+98h+arg_10]^^^mov     rsi, [rsp+98h+arg_8]^^^lea     rdx, [rax+1]^^^mov     r9, [rsp+98h+var_68]^^^mov     rax, [rsp+98h+arg_0]^^^mov     r8, [rsp+98h+var_78]^^^mov     rdi, [rsp+98h+var_70]^^^mov     [rsp+98h+var_88], rcx^^^mov     [rsp+98h+var_90], rsi^^^mov     ecx, r13d^^^mov     rsi, rbx^^^mov     [rsp+98h+var_80], r15^^^mov     [rsp+98h+var_98], rax^^^call    _nl_make_l10nflist_constprop_0^^^mov     [rbp+r12*8+20h], rax^^^add     r12, 1^^^test    rbx, rbx^^^jnz     loc_415C10^^^mov     rbx, [rsp+98h+var_50]^^^jmp     short loc_415C30^^^mov     rdi, rbx^^^call    free^^^jmp     loc_415BF7^^^mov     rsi, [rsp+98h+arg_10]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 40h^^^call    near ptr qword_400310^^^jmp     loc_4159F3^^^mov     rsi, [rsp+98h+arg_8]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Eh^^^call    near ptr qword_400310^^^jmp     loc_4159E7^^^mov     rsi, [rsp+98h+arg_0]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Eh^^^call    near ptr qword_400310^^^jmp     loc_4159DB^^^mov     rsi, [rsp+98h+var_68]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 5Fh^^^call    near ptr qword_400310^^^jmp     loc_4159CF^^^mov     eax, r14d^^^xor     edx, edx^^^mov     qword ptr [rbp+10h], 0^^^and     eax, 3^^^cmp     eax, 3^^^setz    dl^^^test    r12, r12^^^mov     [rbp+8], edx^^^jnz     loc_415AE8^^^mov     rsi, [rsp+98h+var_70]^^^mov     rax, [rsi]^^^mov     [rbp+18h], rax^^^mov     [rsi], rbp^^^jmp     loc_415AF6^^^
_L_unlock_11428$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_407E58^^^
__gconv_get_path$$$push    rbp^^^mov     esi, 1^^^xor     eax, eax^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 18h^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4591E1^^^lock cmpxchg cs:lock_12832, esi^^^jnz     _L_lock_676^^^jmp     short loc_4591EE^^^cmpxchg cs:lock_12832, esi^^^jnz     _L_lock_676^^^cmp     cs:__gconv_path_elem, 0^^^jz      short loc_459230^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_459210^^^lock dec cs:lock_12832^^^jnz     _L_unlock_685^^^jmp     short loc_45921C^^^dec     cs:lock_12832^^^jnz     _L_unlock_685^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     r13, cs:__gconv_path_envvar^^^test    r13, r13^^^jz      loc_459472^^^mov     rdi, r13^^^call    strlen^^^lea     rdx, [rax+3Fh]^^^mov     rsi, r13^^^lea     r12, [rax+21h]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^mov     rdx, rax^^^lea     rbx, [rsp+40h+var_31]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    mempcpy^^^mov     rdx, 62696C2F7273752Fh^^^mov     rcx, 2D34365F3638782Fh^^^mov     rsi, 6E672D78756E696Ch^^^mov     rdi, 766E6F63672F75h^^^mov     [rax+1], rdx^^^mov     [rax+9], rcx^^^mov     [rax+11h], rsi^^^mov     [rax+19h], rdi^^^xor     esi, esi^^^xor     edi, edi^^^mov     byte ptr [rax], 3Ah^^^call    getcwd^^^mov     rdi, rax^^^mov     r14, rax^^^call    strlen^^^mov     [rbp-38h], rax^^^add     rax, 1^^^mov     [rbp+var_40], rax^^^mov     esi, 3Ah^^^mov     rdi, rbx^^^mov     r15d, 1^^^call    sub_4003C0^^^xor     edx, edx^^^test    rax, rax^^^mov     r13, rax^^^jnz     short loc_4592F6^^^jmp     loc_459542^^^mov     rdx, r13^^^mov     r13, rax^^^lea     eax, [r15+1]^^^add     rdx, 1^^^lea     rdi, [r13+1]^^^cmp     r13, rdx^^^mov     esi, 3Ah^^^cmovnz  r15d, eax^^^call    sub_4003C0^^^test    rax, rax^^^jnz     short loc_4592F0^^^lea     eax, [r15+1]^^^movsxd  r13, r15d^^^sub     r15d, 1^^^movsxd  r15, r15d^^^imul    r15, [rbp+var_40]^^^cdqe^^^shl     rax, 4^^^lea     rdi, [rax+r13]^^^add     rdi, r12^^^add     rdi, r15^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_40], rax^^^jz      loc_459535^^^mov     cs:__gconv_max_path_elem_len, 0^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 3Ah^^^jnz     short loc_45936A^^^add     rbx, 1^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 3Ah^^^jz      short loc_45935F^^^test    al, al^^^jz      loc_4594D4^^^lea     rax, [rbx+1]^^^jmp     short loc_459383^^^mov     rax, rcx^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      loc_459555^^^cmp     dl, 3Ah^^^lea     rcx, [rax+1]^^^jnz     short loc_459380^^^mov     byte ptr [rax], 0^^^test    rbx, rbx^^^jz      loc_4594D4^^^lea     rdi, [r13+1]^^^mov     r12, [rbp+var_40]^^^mov     r13, rcx^^^xor     r15d, r15d^^^shl     rdi, 4^^^add     rdi, [rbp+var_40]^^^nop     dword ptr [rax+00000000h]^^^cmp     byte ptr [rbx], 2Fh^^^mov     [r12], rdi^^^jz      short loc_4593E5^^^test    r14, r14^^^jz      loc_45955D^^^mov     rdx, [rbp-38h]^^^mov     rsi, r14^^^call    mempcpy^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Fh^^^mov     rsi, rbx^^^call    near ptr qword_400310^^^cmp     byte ptr [rax-1], 2Fh^^^jz      short loc_4593FA^^^mov     byte ptr [rax], 2Fh^^^add     rax, 1^^^mov     rdx, rax^^^sub     rdx, [r12]^^^cmp     rdx, cs:__gconv_max_path_elem_len^^^mov     [r12+8], rdx^^^jbe     short loc_459416^^^mov     cs:__gconv_max_path_elem_len, rdx^^^mov     byte ptr [rax], 0^^^lea     rdi, [rax+1]^^^movzx   eax, byte ptr [r13+0]^^^add     r15d, 1^^^mov     rbx, r13^^^cmp     al, 3Ah^^^jnz     short loc_459438^^^add     rbx, 1^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 3Ah^^^jz      short loc_45942D^^^test    al, al^^^jnz     loc_4594F0^^^movsxd  r15, r15d^^^shl     r15, 4^^^add     r15, [rbp+var_40]^^^mov     qword ptr [r15], 0^^^mov     qword ptr [r15+8], 0^^^mov     rax, [rbp+var_40]^^^mov     rdi, r14^^^mov     cs:__gconv_path_elem, rax^^^call    free^^^jmp     loc_4591F8^^^sub     rsp, 30h^^^mov     r8, 62696C2F7273752Fh^^^mov     r9, 2D34365F3638782Fh^^^lea     rbx, [rsp+70h+var_61]^^^mov     r10, 6E672D78756E696Ch^^^mov     r11, 766E6F63672F75h^^^xor     r14d, r14d^^^mov     r12d, 20h^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbx], r8^^^mov     [rbx+8], r9^^^mov     [rbx+10h], r10^^^mov     [rbx+18h], r11^^^mov     [rbp+var_40], 1^^^mov     qword ptr [rbp-38h], 0^^^jmp     loc_4592C9^^^mov     ecx, offset __PRETTY_FUNCTION___12850^^^mov     edx, 1F5h^^^mov     esi, offset aGconv_conf_c^^^mov     edi, offset aElemVoid0^^^call    __assert_fail^^^lea     rax, [rbx+1]^^^jmp     short loc_459503^^^mov     rax, r13^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      short loc_459530^^^cmp     dl, 3Ah^^^lea     r13, [rax+1]^^^jnz     short loc_459500^^^mov     byte ptr [rax], 0^^^add     r12, 10h^^^test    rbx, rbx^^^jnz     loc_4593C0^^^jmp     loc_459440^^^mov     r13, rax^^^jmp     short loc_459516^^^mov     [rbp+var_40], offset empty_path_elem^^^jmp     loc_45945A^^^xor     r15d, r15d^^^mov     r13d, 1^^^mov     eax, 20h^^^jmp     loc_459331^^^mov     rcx, rax^^^jmp     loc_45939A^^^mov     ecx, offset __PRETTY_FUNCTION___12850^^^mov     edx, 1FBh^^^mov     esi, offset aGconv_conf_c^^^mov     edi, offset aCwdVoid0^^^call    __assert_fail^^^
strftime_l$$$sub     rsp, 18h^^^mov     r9, r8^^^lea     r8, [rsp+18h+var_9]^^^mov     [rsp+18h+var_9], 0^^^call    __strftime_internal^^^add     rsp, 18h^^^retn^^^
abort$$$sub     rsp, 128h^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C55A8^^^jz      short loc_41788D^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_417879^^^lock cmpxchg cs:lock_1, esi^^^jnz     _L_lock_18^^^jmp     short loc_417886^^^cmpxchg cs:lock_1, esi^^^jnz     _L_lock_18^^^mov     cs:qword_6C55A8, rdx^^^mov     eax, cs:stage^^^add     cs:dword_6C55A4, 1^^^test    eax, eax^^^jz      short loc_4178DB^^^cmp     eax, 1^^^jz      loc_417ACB^^^cmp     eax, 2^^^jz      loc_417965^^^cmp     eax, 3^^^jz      loc_417A08^^^cmp     eax, 4^^^jz      loc_41794B^^^cmp     eax, 5^^^jz      short loc_41792C^^^cmp     eax, 6^^^jz      short loc_417917^^^cmp     eax, 7^^^nop^^^jz      short loc_417918^^^nop     word ptr [rax+rax+00h]^^^hlt^^^jmp     short loc_4178D8^^^lea     rsi, [rsp+128h+var_88]^^^mov     ecx, 20h^^^xor     edx, edx^^^mov     cs:stage, 1^^^mov     rdi, rsi^^^rep stosd^^^mov     edi, 1^^^mov     [rsp+128h+var_88], 20h^^^call    sigprocmask^^^mov     eax, cs:stage^^^jmp     short loc_41789E^^^hlt^^^mov     edi, 7Fh        ^^^mov     cs:stage, 8^^^call    _exit^^^mov     edi, 6^^^mov     cs:stage, 6^^^call    raise^^^mov     eax, cs:stage^^^jmp     loc_4178C7^^^mov     cs:stage, 5^^^call    fcloseall^^^mov     eax, cs:stage^^^jmp     loc_4178C2^^^mov     eax, cs:dword_6C55A4^^^mov     cs:stage, 0^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C55A4, eax^^^jnz     short loc_4179B1^^^mov     cs:qword_6C55A8, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4179A5^^^lock dec cs:lock_1^^^jnz     _L_unlock_141^^^jmp     short loc_4179B1^^^dec     cs:lock_1^^^jnz     _L_unlock_141^^^mov     edi, 6^^^call    raise^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C55A8^^^jz      short loc_417A01^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4179ED^^^lock cmpxchg cs:lock_1, esi^^^jnz     _L_lock_160^^^jmp     short loc_4179FA^^^cmpxchg cs:lock_1, esi^^^jnz     _L_lock_160^^^mov     cs:qword_6C55A8, rdx^^^add     cs:dword_6C55A4, 1^^^xor     eax, eax^^^mov     ecx, 26h^^^mov     rdi, rsp^^^rep stosd^^^mov     rsi, rsp^^^xor     edx, edx^^^mov     edi, 6^^^mov     cs:stage, 4^^^mov     [rsp+128h+var_A8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_B0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_B8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_C0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_C8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_D0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_D8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_E0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_E8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_F0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_F8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_100], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_108], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_110], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_118], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+128h+var_120], 0FFFFFFFFFFFFFFFFh^^^call    sigaction^^^mov     eax, cs:stage^^^jmp     loc_4178B9^^^xor     edi, edi^^^mov     cs:stage, 2^^^call    _IO_flush_all_lockp^^^mov     eax, cs:stage^^^jmp     loc_4178A7^^^
fprintf$$$sub     rsp, 0D8h       ^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_4248C6^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rdx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    vfprintf^^^add     rsp, 0D8h^^^retn^^^
__gconv_load_cache$$$push    r12^^^mov     edi, offset aGconv_path^^^push    rbp^^^mov     ebp, 0FFFFFFFFh^^^push    rbx^^^sub     rsp, 90h^^^call    getenv^^^test    rax, rax^^^mov     cs:__gconv_path_envvar, rax^^^jnz     loc_4602E6^^^xor     edx, edx^^^xor     esi, esi^^^mov     edi, offset aUsrLibX86_64_0^^^call    __open_nocancel^^^cmp     eax, ebp^^^mov     ebx, eax^^^jz      loc_4602E6^^^mov     rdx, rsp^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^js      loc_460310^^^mov     rsi, [rsp+0A8h+var_78]^^^cmp     rsi, 0Fh^^^jbe     loc_460310^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, ebx^^^mov     ecx, 1^^^mov     edx, 1^^^mov     cs:cache_size, rsi^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     cs:gconv_cache, rax^^^jz      loc_46035A^^^movsxd  rdi, ebx^^^mov     eax, 3^^^syscall^^^mov     rdi, cs:gconv_cache^^^cmp     dword ptr [rdi], 20010324h^^^jnz     loc_460321^^^movzx   edx, word ptr [rdi+4]^^^mov     rax, cs:cache_size^^^cmp     rdx, rax^^^jnb     short loc_460321^^^movzx   edx, word ptr [rdi+6]^^^cmp     rax, rdx^^^jbe     short loc_460321^^^movzx   ecx, word ptr [rdi+8]^^^test    cx, cx^^^jz      short loc_460321^^^movzx   ecx, cx^^^lea     rdx, [rdx+rcx*4]^^^cmp     rax, rdx^^^jb      short loc_460321^^^movzx   edx, word ptr [rdi+0Ah]^^^cmp     rax, rdx^^^jbe     short loc_460321^^^movzx   edx, word ptr [rdi+0Ch]^^^cmp     rax, rdx^^^jb      short loc_460321^^^xor     ebp, ebp^^^add     rsp, 90h^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     rdi, cs:gconv_cache^^^call    free^^^mov     cs:gconv_cache, 0^^^nop     dword ptr [rax+rax+00h]^^^movsxd  rdi, ebx^^^mov     eax, 3^^^syscall^^^mov     ebp, 0FFFFFFFFh^^^jmp     short loc_4602E6^^^mov     edx, cs:cache_malloced^^^test    edx, edx^^^jz      short loc_46034C^^^call    free^^^mov     cs:cache_malloced, 0^^^mov     cs:gconv_cache, 0^^^mov     ebp, 0FFFFFFFFh^^^jmp     short loc_4602E6^^^mov     rsi, cs:cache_size^^^call    munmap^^^jmp     short loc_46033A^^^mov     r12, cs:cache_size^^^mov     rdi, r12^^^call    malloc^^^test    rax, rax^^^mov     cs:gconv_cache, rax^^^jz      short loc_460310^^^xor     ebp, ebp^^^mov     rsi, rbp^^^add     rsi, cs:gconv_cache^^^mov     rdx, r12^^^sub     rdx, rbp^^^mov     edi, ebx^^^call    read^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_4602F4^^^mov     r12, cs:cache_size^^^add     rbp, rax^^^cmp     rbp, r12^^^jb      short loc_460377^^^mov     cs:cache_malloced, 1^^^jmp     loc_460287^^^
_Unwind_Resume$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^lea     rsi, [rbp+arg_0]^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^lea     r12, [rbp+var_130]^^^push    rbx^^^lea     rbx, [rbp+var_220]^^^push    rdx^^^mov     rdi, rbx^^^push    rax^^^sub     rsp, 1E8h^^^mov     rdx, [rbp+8]^^^call    uw_init_context_1^^^mov     ecx, 1Eh^^^mov     rdi, r12^^^mov     rsi, rbx^^^rep movsq^^^mov     rsi, r12^^^mov     rdi, r13^^^cmp     qword ptr [r13+10h], 0^^^jnz     short loc_492B85^^^call    _Unwind_RaiseException_Phase2^^^cmp     eax, 7^^^jz      short loc_492B8C^^^nop     dword ptr [rax+00h]^^^call    abort^^^call    _Unwind_ForcedUnwind_Phase2^^^jmp     short loc_492B77^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    uw_install_context_1^^^mov     r12, [rbp+var_98]^^^mov     rdi, [rbp+var_A0]^^^mov     rbx, rax^^^mov     rsi, r12^^^call    _Unwind_DebugHook^^^mov     rcx, rbx^^^mov     [rbp+rbx+8], r12^^^mov     rax, [rbp+var_38]^^^lea     rcx, [rbp+rcx+8]^^^mov     rdx, [rbp+var_30]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^mov     rbp, [rbp+var_s0]^^^mov     rsp, rcx^^^retn^^^
check_match.11143$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^movzx   eax, byte ptr [rdi+4]^^^mov     rbp, r10^^^and     eax, 0Fh^^^cmp     eax, 6^^^jnz     loc_45253B^^^xor     edx, edx^^^cmp     word ptr [rbx+6], 0^^^setz    dl^^^test    [rbp+3Ch], edx^^^jnz     loc_452510^^^mov     edx, 467h^^^bt      edx, eax^^^jnb     loc_452510^^^cmp     rbx, [rbp+28h]^^^jz      short loc_45244C^^^mov     edi, [rbx]^^^mov     rsi, [rbp+18h]^^^add     rdi, [rbp+20h]^^^call    sub_4003A0^^^test    eax, eax^^^jnz     loc_452510^^^mov     r12, [rbp+8]^^^mov     rsi, [rbp+10h]^^^test    r12, r12^^^mov     rax, [rsi+330h]^^^jz      short loc_4524D0^^^test    rax, rax^^^jz      loc_45254D^^^mov     edx, [rbp+38h]^^^movzx   r13d, word ptr [rax+rdx*2]^^^mov     rdx, [rsi+2E0h]^^^mov     rax, r13^^^and     eax, 7FFFh^^^lea     rax, [rax+rax*2]^^^lea     rax, [rdx+rax*8]^^^mov     ebp, [rax+8]^^^cmp     ebp, [r12+8]^^^jz      loc_452518^^^mov     eax, [r12+0Ch]^^^test    eax, eax^^^jnz     short loc_452510^^^test    ebp, ebp^^^jnz     short loc_452510^^^test    r13w, r13w^^^mov     eax, 0^^^cmovs   rbx, rax^^^mov     rax, rbx^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^test    rax, rax^^^jz      short loc_4524B0^^^mov     edx, [rbp+38h]^^^movzx   edx, word ptr [rax+rdx*2]^^^mov     eax, [rbp+34h]^^^shl     eax, 1Eh^^^sar     eax, 1Fh^^^mov     ecx, edx^^^and     ecx, 7FFFh^^^add     eax, 3^^^cmp     eax, ecx^^^jg      short loc_4524B0^^^test    dx, dx^^^js      short loc_452510^^^mov     eax, [rbp+30h]^^^lea     edx, [rax+1]^^^test    eax, eax^^^mov     [rbp+30h], edx^^^jz      short loc_452530^^^nop     word ptr [rax+rax+00000000h]^^^xor     ebx, ebx^^^jmp     short loc_4524B0^^^mov     rsi, [r12]^^^mov     rdi, [rax]^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_4524B0^^^jmp     loc_452496^^^mov     [rbp+0], rbx^^^xor     ebx, ebx^^^jmp     loc_4524B0^^^cmp     qword ptr [rdi+8], 0^^^jnz     loc_45240E^^^xor     ebx, ebx^^^jmp     loc_4524B0^^^mov     rdi, [r12+10h]^^^test    rdi, rdi^^^jz      loc_4524B0^^^call    _dl_name_match_p^^^test    eax, eax^^^jz      loc_4524B0^^^mov     ecx, offset __PRETTY_FUNCTION___11146^^^mov     edx, 0A8h^^^mov     esi, offset aDlLookup_c^^^mov     edi, offset aVersionFilenam^^^call    __assert_fail^^^
_dl_initial_error_catch_tsd$$$mov     rax, fs:0^^^add     rax, 0FFFFFFFFFFFFFFF0h^^^retn^^^
_L_unlock_195$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_425584^^^
strlen$$$xor     rax, rax^^^mov     ecx, edi^^^and     ecx, 3Fh^^^pxor    xmm0, xmm0^^^cmp     ecx, 30h^^^ja      short loc_409DDA^^^movdqu  xmm1, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^test    edx, edx^^^jnz     short loc_409E4B^^^mov     rax, rdi^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_409DF7^^^mov     rax, rdi^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^pcmpeqb xmm0, xmmword ptr [rax]^^^mov     esi, 0FFFFFFFFh^^^sub     rcx, rax^^^shl     esi, cl^^^pmovmskb edx, xmm0^^^and     edx, esi^^^jnz     short loc_409E48^^^pxor    xmm0, xmm0^^^pxor    xmm1, xmm1^^^pxor    xmm2, xmm2^^^pxor    xmm3, xmm3^^^nop     word ptr [rax+rax+00000000h]^^^pcmpeqb xmm0, xmmword ptr [rax+10h]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^jnz     short loc_409E60^^^pcmpeqb xmm1, xmmword ptr [rax+20h]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^jnz     short loc_409E70^^^pcmpeqb xmm2, xmmword ptr [rax+30h]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^jnz     short loc_409E80^^^pcmpeqb xmm3, xmmword ptr [rax+40h]^^^pmovmskb edx, xmm3^^^lea     rax, [rax+40h]^^^test    edx, edx^^^jz      short loc_409E10^^^sub     rax, rdi^^^bsf     rdx, rdx^^^add     rax, rdx^^^retn^^^sub     rax, rdi^^^bsf     rdx, rdx^^^lea     rax, [rdx+rax+10h]^^^retn^^^sub     rax, rdi^^^bsf     rdx, rdx^^^lea     rax, [rdx+rax+20h]^^^retn^^^sub     rax, rdi^^^bsf     rdx, rdx^^^lea     rax, [rdx+rax+30h]^^^retn^^^
wmemset$$$cmp     rdx, 3^^^mov     rax, rdi^^^mov     r8, rdi^^^jbe     short loc_445D1F^^^mov     [rsp+var_C], esi^^^lea     r8, [rdx-4]^^^xor     ecx, ecx^^^movd    xmm1, [rsp+var_C]^^^shr     r8, 2^^^pshufd  xmm0, xmm1, 0^^^add     r8, 1^^^nop     dword ptr [rax+00000000h]^^^mov     rdi, rcx^^^add     rcx, 1^^^shl     rdi, 4^^^cmp     r8, rcx^^^movdqu  xmmword ptr [rax+rdi], xmm0^^^ja      short loc_445D00^^^shl     r8, 4^^^and     edx, 3^^^add     r8, rax^^^test    rdx, rdx^^^jz      short locret_445D3B^^^cmp     rdx, 1^^^mov     [r8], esi^^^jz      short locret_445D3B^^^cmp     rdx, 3^^^mov     [r8+4], esi^^^jnz     short locret_445D3B^^^mov     [r8+8], esi^^^rep retn^^^
_L_unlock_5530$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_405038^^^
sub_42863E$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
_IO_wdefault_finish$$$push    rbx^^^mov     rdx, [rdi+0A0h]^^^mov     rbx, rdi^^^mov     rdi, [rdx+30h]^^^test    rdi, rdi^^^jz      short loc_426EDA^^^test    byte ptr [rbx+74h], 8^^^jz      short loc_426F20^^^mov     rax, [rbx+60h]^^^test    rax, rax^^^jz      short loc_426EF8^^^nop     dword ptr [rax+rax+00h]^^^mov     qword ptr [rax+8], 0^^^mov     rax, [rax]^^^test    rax, rax^^^jnz     short loc_426EE8^^^cmp     qword ptr [rbx+48h], 0^^^jz      short loc_426F10^^^mov     rdi, [rdx+40h]^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     rdi, rbx^^^pop     rbx^^^jmp     _IO_un_link^^^mov     rax, [rdx+38h]^^^sub     rax, rdi^^^sar     rax, 2^^^lea     rsi, ds:0FFFh[rax*4]^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     rdx, [rbx+0A0h]^^^mov     qword ptr [rdx+38h], 0^^^mov     qword ptr [rdx+30h], 0^^^jmp     short loc_426EDA^^^
_xstat$$$cmp     edi, 1          ^^^mov     rax, rsi^^^ja      short loc_44CD70^^^mov     rdi, rax^^^mov     rsi, rdx^^^mov     eax, 4^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44CD84^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
sub_482AB0$$$mov     rsi, [rdi+338h]^^^mov     rdi, [rbx+18h]^^^pop     rbx^^^jmp     sub_400320^^^
__strncasecmp_l_ssse3$$$mov     rax, [rcx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strncasecmp_l_nonascii^^^test    rdx, rdx^^^jz      loc_48B2D1^^^cmp     rdx, 1^^^jz      loc_48B2E0^^^mov     r11, rdx^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm5, cs:xmmword_49CA70^^^movdqa  xmm6, cs:xmmword_49CA80^^^movdqa  xmm7, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_488EA0^^^cmp     eax, 30h^^^ja      loc_488EA0^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B2B0^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     dword ptr [rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_488EE0^^^ja      short loc_488EC3^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_4B2D98^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^jmp     loc_488F80^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_489270^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_489270^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489140^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_4892A0^^^cmp     r11, 0Fh^^^jbe     short loc_4892A0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48914A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4894B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4894B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489380^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_4894E0^^^cmp     r11, 0Eh^^^jbe     short loc_4894E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48938A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4896F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4896F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4895C0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_489720^^^cmp     r11, 0Dh^^^jbe     short loc_489720^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4895CA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_489930^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_489930^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489800^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_489960^^^cmp     r11, 0Ch^^^jbe     short loc_489960^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48980A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_489B70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_489B70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489A40^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_489BA0^^^cmp     r11, 0Bh^^^jbe     short loc_489BA0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_489A4A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_489DB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_489DB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489C80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_489DE0^^^cmp     r11, 0Ah^^^jbe     short loc_489DE0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_489C8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_489FF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_489FF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_489EC0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_48A020^^^cmp     r11, 9^^^jbe     short loc_48A020^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_489ECA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48A230^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48A230^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48A100^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_48A260^^^cmp     r11, 8^^^jbe     short loc_48A260^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48A10A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48A470^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48A470^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48A340^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_48A4A0^^^cmp     r11, 7^^^jbe     short loc_48A4A0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48A34A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48A6B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48A6B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48A580^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_48A6E0^^^cmp     r11, 6^^^jbe     short loc_48A6E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48A58A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48A8F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48A8F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48A7C0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_48A920^^^cmp     r11, 5^^^jbe     short loc_48A920^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48A7CA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48AB30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48AB30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48AA00^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_48AB60^^^cmp     r11, 4^^^jbe     short loc_48AB60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48AA0A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48AD70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48AD70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48AC40^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_48ADA0^^^cmp     r11, 3^^^jbe     short loc_48ADA0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48AC4A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48AFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48AFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48AE80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_48AFE0^^^cmp     r11, 2^^^jbe     short loc_48AFE0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48AE8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_48B230^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48B295^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_48B2D1^^^test    r9, r9^^^jz      loc_48B2D1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_48B1F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_48B1F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_48B290^^^sub     r11, 10h^^^jbe     loc_48B2D1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_48B0C0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_48B220^^^cmp     r11, 1^^^jbe     short loc_48B220^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48B0CA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm3^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm3^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm3, xmm10^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^nop     word ptr [rax+rax+00000000h]^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_48B2B0^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^sub     r11, rdx^^^jbe     short loc_48B2D1^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^movzx   ecx, byte ptr [rsi]^^^movzx   eax, byte ptr [rdi]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
add_to_global$$$push    r15^^^xor     ecx, ecx^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 18h^^^mov     esi, [rdi+2C0h]^^^test    esi, esi^^^jz      short loc_48B65A^^^mov     r8, [rdi+2B8h]^^^xor     eax, eax^^^nop     word ptr [rax+rax+00000000h]^^^mov     rdi, [r8+rax*8]^^^lea     edx, [rcx+1]^^^test    byte ptr [rdi+314h], 10h^^^cmovz   rcx, rdx^^^add     rax, 1^^^cmp     esi, eax^^^ja      short loc_48B640^^^mov     rax, [rbp+30h]^^^lea     r13, [rax+rax*8]^^^shl     r13, 4^^^add     r13, 6C5FE0h^^^mov     rdx, [r13+18h]^^^mov     rbx, [r13+10h]^^^test    rdx, rdx^^^mov     r12d, [rbx+8]^^^jz      loc_48B700^^^lea     eax, [rcx+r12]^^^cmp     rdx, rax^^^jb      loc_48B750^^^test    esi, esi^^^jz      short loc_48B6E6^^^xor     ebx, ebx^^^nop     dword ptr [rax]^^^mov     rax, [rbp+2B8h]^^^mov     edx, ebx^^^mov     rax, [rax+rdx*8]^^^movzx   edx, byte ptr [rax+314h]^^^test    dl, 10h^^^jnz     short loc_48B6DF^^^or      edx, 10h^^^mov     ecx, r12d^^^add     r12d, 1^^^mov     [rax+314h], dl^^^mov     rdx, [r13+10h]^^^test    byte ptr cs:_dl_debug_mask+1, 2^^^mov     rdx, [rdx]^^^mov     [rdx+rcx*8], rax^^^jnz     loc_48B7B5^^^mov     esi, [rbp+2C0h]^^^add     ebx, 1^^^cmp     ebx, esi^^^jb      short loc_48B698^^^mov     rax, [r13+10h]^^^mov     [rax+8], r12d^^^add     rsp, 18h^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     ecx, [rcx+r12+8]^^^lea     rdi, ds:0[rcx*8]^^^mov     [r13+18h], rcx^^^call    malloc^^^test    rax, rax^^^jz      loc_48B7CE^^^mov     rsi, [rbx]^^^mov     edx, r12d^^^mov     rdi, rax^^^shl     rdx, 3^^^call    memcpy^^^mov     [rbx], rax^^^mov     rax, [r13+10h]^^^mov     esi, [rbp+2C0h]^^^mov     r12d, [rax+8]^^^jmp     loc_48B68F^^^add     rcx, rdx^^^mov     r14, [rbx]^^^mov     [rsp+48h+var_40], rdx^^^mov     rdi, rcx^^^lea     r15, [rcx+rcx]^^^shl     rdi, 4^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     rdx, [rsp+48h+var_40]^^^jz      short loc_48B7D6^^^shl     rdx, 3^^^mov     rsi, r14^^^mov     rdi, rax^^^call    memcpy^^^mov     [r13+18h], r15^^^mov     [rbx], r12^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     short loc_48B7EE^^^mov     rdi, r14^^^call    free^^^mov     rax, [r13+10h]^^^mov     esi, [rbp+2C0h]^^^mov     r12d, [rax+8]^^^jmp     loc_48B68F^^^mov     rdx, [rax+30h]^^^mov     rsi, [rax+8]^^^mov     edi, offset aAddSLuToGlobal^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48B6D9^^^mov     qword ptr [r13+18h], 0^^^mov     rax, [rbp+38h]^^^mov     ecx, offset aCannotExtendGl^^^xor     edx, edx^^^mov     edi, 0Ch^^^mov     rsi, [rax]^^^call    _dl_signal_error^^^call    cs:_dl_wait_lookup_done^^^jmp     short loc_48B79A^^^
_dl_allocate_static_tls$$$push    rbx^^^cmp     qword ptr [rdi+440h], 1^^^mov     rbx, rdi^^^jz      short loc_453ED9^^^call    _dl_try_allocate_static_tls^^^test    eax, eax^^^jnz     short loc_453ED9^^^pop     rbx^^^retn^^^mov     rsi, [rbx+8]^^^mov     ecx, offset aCannotAlloca_2^^^xor     edx, edx^^^xor     edi, edi^^^call    _dl_signal_error^^^
_IO_default_xsputn$$$push    r14^^^xor     eax, eax^^^test    rdx, rdx^^^mov     r14, rdx^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^jz      loc_42C05E^^^mov     rbx, rdx^^^mov     r12, rsi^^^nop^^^mov     rdi, [rbp+28h]^^^mov     r13, [rbp+30h]^^^cmp     rdi, r13^^^jnb     loc_42C016^^^sub     r13, rdi^^^cmp     rbx, r13^^^cmovbe  r13, rbx^^^cmp     r13, 14h^^^ja      loc_42C040^^^test    r13, r13^^^jz      short loc_42C013^^^mov     rax, r13^^^lea     rcx, [r13-1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^jz      loc_42C067^^^lea     rdx, [r12+10h]^^^cmp     r13, 0Fh^^^lea     r8, [rdi+10h]^^^setnbe  sil^^^cmp     rdi, rdx^^^setnbe  dl^^^cmp     r12, r8^^^setnbe  r8b^^^or      edx, r8d^^^test    sil, dl^^^jz      loc_42C067^^^movdqu  xmm0, xmmword ptr [r12]^^^sub     rcx, rax^^^cmp     r13, rax^^^lea     rsi, [r12+rax]^^^lea     r8, [rdi+rax]^^^movdqu  xmmword ptr [rdi], xmm0^^^jz      short loc_42C009^^^xor     eax, eax^^^nop     dword ptr [rax+00000000h]^^^movzx   edx, byte ptr [rsi+rax]^^^mov     [r8+rax], dl^^^add     rax, 1^^^cmp     rcx, rax^^^jns     short loc_42BFF8^^^add     rdi, r13^^^add     r12, r13^^^mov     [rbp+28h], rdi^^^sub     rbx, r13^^^test    rbx, rbx^^^jz      short loc_42C058^^^mov     rax, [rbp+0D8h]^^^movzx   esi, byte ptr [r12]^^^mov     rdi, rbp^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42C058^^^add     r12, 1^^^sub     rbx, 1^^^jmp     loc_42BF70^^^mov     rsi, r12^^^mov     rdx, r13^^^add     r12, r13^^^call    mempcpy^^^mov     [rbp+28h], rax^^^jmp     short loc_42C013^^^mov     rax, r14^^^sub     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     r8, rdi^^^mov     rsi, r12^^^jmp     loc_42BFEF^^^
write$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_40F0FD^^^
__strcasecmp_sse2$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rdx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
_IO_mem_sync$$$mov     rax, [rdi+28h]^^^cmp     rax, [rdi+30h]^^^push    rbx^^^mov     rbx, rdi^^^jz      short loc_4262E8^^^mov     byte ptr [rax], 0^^^mov     rax, [rbx+0F0h]^^^mov     rdx, [rbx+20h]^^^mov     [rax], rdx^^^mov     rax, [rbx+28h]^^^sub     rax, [rbx+20h]^^^mov     rdx, [rbx+0F8h]^^^mov     [rdx], rax^^^xor     eax, eax^^^pop     rbx^^^retn^^^xor     esi, esi^^^call    _IO_str_overflow^^^sub     qword ptr [rbx+28h], 1^^^jmp     short loc_4262C1^^^
sub_40EB17$$$mov     eax, ecx^^^xor     edx, edx^^^and     ecx, 0FFh^^^shr     eax, 6^^^and     eax, 3FFFC00h^^^div     ecx^^^pop     rbx^^^mov     eax, eax^^^retn^^^
_dl_tlsdesc_undefweak$$$mov     rax, [rax+8]^^^sub     rax, fs:0^^^retn^^^
__mpn_impn_mul_n$$$push    r15^^^mov     r15, rsi^^^push    r14^^^mov     r14, rdx^^^push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12, r8^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 48h^^^test    cl, 1^^^jz      short loc_463AD8^^^lea     rbx, [rcx-1]^^^cmp     rbx, 1Fh^^^jle     loc_463D60^^^mov     rcx, rbx^^^call    __mpn_impn_mul_n^^^lea     r12, [rbp+rbx*8+0]^^^mov     rcx, [r14+rbx*8]^^^mov     rdx, rbx^^^mov     rsi, r15^^^mov     rdi, r12^^^call    __mpn_addmul_1^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r12^^^shl     rdx, 4^^^mov     [rbp+rdx+0], rax^^^mov     rcx, [r15+rbx*8]^^^mov     rdx, r13^^^add     r13, rbx^^^call    __mpn_addmul_1^^^mov     [rbp+r13*8+0], rax^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rbx, rcx^^^lea     rdx, ds:0[rcx*8]^^^sar     rbx, 1^^^lea     rax, ds:0[rbx*8]^^^mov     [rsp+78h+var_40], rdx^^^add     rdx, rdi^^^mov     [rsp+78h+var_60], rdx^^^mov     [rsp+78h+var_50], rax^^^mov     rcx, [rsp+78h+var_50]^^^add     rax, rsi^^^mov     [rsp+78h+var_70], rax^^^add     rcx, r14^^^cmp     rbx, 1Fh^^^mov     [rsp+78h+var_68], rcx^^^jle     loc_463D40^^^mov     rdx, [rsp+78h+var_68]^^^mov     rdi, [rsp+78h+var_60]^^^mov     rcx, rbx^^^mov     rsi, rax^^^call    __mpn_impn_mul_n^^^mov     rdi, [rsp+78h+var_70]^^^mov     rdx, rbx^^^mov     rsi, r15^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, rbx^^^js      loc_463E00^^^mov     rsi, [rsp+78h+var_70]^^^mov     rdx, r15^^^mov     rdi, rbp^^^call    __mpn_sub_n^^^mov     dword ptr [rsp+78h+var_58], 1^^^mov     dword ptr [rsp+78h+var_48], 0^^^mov     rdi, [rsp+78h+var_68]^^^mov     rdx, rbx^^^mov     rsi, r14^^^call    __mpn_cmp^^^test    eax, eax^^^js      loc_463DC8^^^mov     rax, [rsp+78h+var_50]^^^mov     rsi, [rsp+78h+var_68]^^^mov     rcx, rbx^^^mov     rdx, r14^^^add     rax, rbp^^^mov     rdi, rax^^^mov     [rsp+78h+var_70], rax^^^call    __mpn_sub_n^^^cmp     rbx, 1Fh^^^jg      loc_463D70^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, rbx^^^mov     rsi, rbp^^^mov     rdi, r12^^^call    __mpn_impn_mul_n_basecase^^^test    rbx, rbx^^^jle     short loc_463BE9^^^lea     rsi, [rbp+r13*8+0]^^^lea     rcx, [rbp+rbx*8+0]^^^xor     eax, eax^^^nop     dword ptr [rax]^^^mov     rdx, [rsi+rax*8]^^^mov     [rcx+rax*8], rdx^^^add     rax, 1^^^cmp     rax, rbx^^^jnz     short loc_463BD8^^^lea     rax, [r13+rbx+0]^^^mov     rsi, [rsp+78h+var_60]^^^mov     rcx, rbx^^^lea     rax, [rbp+rax*8+0]^^^mov     rdi, rsi^^^mov     rdx, rax^^^mov     [rsp+78h+var_68], rax^^^call    __mpn_add_n^^^mov     [rsp+78h+var_48], rax^^^mov     eax, dword ptr [rsp+78h+var_58]^^^mov     rcx, r13^^^mov     rsi, [rsp+78h+var_70]^^^mov     rdx, r12^^^test    eax, eax^^^mov     rdi, rsi^^^jz      loc_463DB0^^^call    __mpn_sub_n^^^mov     rdx, [rsp+78h+var_48]^^^sub     rdx, rax^^^mov     [rsp+78h+var_58], rdx^^^cmp     rbx, 1Fh^^^jg      loc_463D90^^^mov     rcx, rbx^^^mov     rdx, r14^^^mov     rsi, r15^^^mov     rdi, r12^^^call    __mpn_impn_mul_n_basecase^^^mov     rsi, [rsp+78h+var_70]^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     rdi, rsi^^^call    __mpn_add_n^^^add     rax, [rsp+78h+var_58]^^^jz      short loc_463CA8^^^mov     rcx, [rsp+78h+var_68]^^^mov     rdx, [rcx]^^^add     rax, rdx^^^cmp     rdx, rax^^^mov     [rcx], rax^^^jbe     short loc_463CA8^^^mov     rdi, rcx^^^mov     rdx, rbx^^^add     rdi, 8^^^xchg    ax, ax^^^sub     rdx, 1^^^jz      short loc_463CA8^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_463C90^^^nop     dword ptr [rax+00h]^^^test    rbx, rbx^^^jle     short loc_463CC2^^^xor     eax, eax^^^nop^^^mov     rdx, [r12+rax*8]^^^mov     [rbp+rax*8+0], rdx^^^add     rax, 1^^^cmp     rax, rbx^^^jnz     short loc_463CB0^^^mov     rdx, [rsp+78h+var_50]^^^mov     rsi, [rsp+78h+var_70]^^^mov     rcx, rbx^^^add     rdx, r12^^^mov     rdi, rsi^^^call    __mpn_add_n^^^test    rax, rax^^^jz      loc_463AC5^^^mov     rax, [rsp+78h+var_60]^^^mov     rcx, [rsp+78h+var_60]^^^mov     rdx, [rax]^^^mov     rdi, rcx^^^add     rdi, 8^^^lea     rax, [rdx+1]^^^cmp     rdx, rax^^^mov     [rcx], rax^^^jbe     loc_463AC5^^^nop     word ptr [rax+rax+00000000h]^^^sub     r13, 1^^^jz      loc_463AC5^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_463D10^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdx, [rsp+78h+var_68]^^^mov     rdi, [rsp+78h+var_60]^^^mov     rcx, rbx^^^mov     rsi, rax^^^call    __mpn_impn_mul_n_basecase^^^jmp     loc_463B34^^^mov     rcx, rbx^^^call    __mpn_impn_mul_n_basecase^^^jmp     loc_463A88^^^mov     r8, [rsp+78h+var_40]^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, rbx^^^mov     rsi, rbp^^^mov     rdi, r12^^^add     r8, r12^^^call    __mpn_impn_mul_n^^^jmp     loc_463BC9^^^mov     r8, [rsp+78h+var_40]^^^mov     rcx, rbx^^^mov     rdx, r14^^^mov     rsi, r15^^^mov     rdi, r12^^^add     r8, r12^^^call    __mpn_impn_mul_n^^^jmp     loc_463C57^^^call    __mpn_add_n^^^add     rax, [rsp+78h+var_48]^^^mov     [rsp+78h+var_58], rax^^^jmp     loc_463C3C^^^mov     rdx, [rsp+78h+var_50]^^^mov     rcx, rbx^^^mov     rsi, r14^^^add     rdx, rbp^^^mov     [rsp+78h+var_70], rdx^^^mov     rdx, [rsp+78h+var_68]^^^mov     rdi, [rsp+78h+var_70]^^^call    __mpn_sub_n^^^mov     ecx, dword ptr [rsp+78h+var_48]^^^mov     dword ptr [rsp+78h+var_58], ecx^^^jmp     loc_463BA7^^^mov     rdx, [rsp+78h+var_70]^^^mov     rsi, r15^^^mov     rdi, rbp^^^call    __mpn_sub_n^^^mov     dword ptr [rsp+78h+var_58], 0^^^mov     dword ptr [rsp+78h+var_48], 1^^^jmp     loc_463B6F^^^
__mpn_mul$$$push    rbp^^^mov     r9, rcx^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rdi^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdx^^^push    rbx^^^mov     rbx, r8^^^sub     rsp, 58h^^^cmp     r8, 1Fh^^^mov     [rbp+var_38], rsi^^^jg      loc_4634A0^^^xor     eax, eax^^^test    r8, r8^^^jz      loc_463509^^^mov     rcx, [rcx]^^^cmp     rcx, 1^^^jbe     loc_463520^^^mov     rsi, [rbp+var_38]^^^mov     [rbp+var_78], r9^^^call    __mpn_mul_1^^^mov     r9, [rbp+var_78]^^^cmp     rbx, 1^^^lea     rdx, ds:0[r12*8]^^^mov     [r15+r12*8], rax^^^jle     loc_463509^^^lea     r13, [r15+8]^^^lea     rbx, [r15+rbx*8]^^^mov     r14, r9^^^mov     r15, r12^^^mov     r12, rdx^^^jmp     short loc_463475^^^mov     rsi, [rbp+var_38]^^^mov     rdx, r15^^^mov     rdi, r13^^^call    __mpn_addmul_1^^^mov     [r13+r12+0], rax^^^add     r13, 8^^^add     r14, 8^^^cmp     r13, rbx^^^jz      loc_463509^^^mov     rcx, [r14+8]^^^cmp     rcx, 1^^^ja      short loc_463450^^^mov     eax, 0^^^jnz     short loc_46345F^^^mov     rdx, [rbp+var_38]^^^mov     rcx, r15^^^mov     rsi, r13^^^mov     rdi, r13^^^call    __mpn_add_n^^^jmp     short loc_46345F^^^mov     rax, r8^^^mov     rdx, r9^^^mov     rcx, rbx^^^shl     rax, 4^^^mov     [rbp+var_78], r9^^^mov     r14, r12^^^add     rax, 10h^^^sub     r14, rbx^^^sub     rsp, rax^^^mov     [rbp+var_48], rax^^^lea     rax, [rsp+80h+var_78+7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     r8, rax^^^mov     [rbp+var_40], rax^^^call    __mpn_impn_mul_n^^^mov     r11, [rbp+var_38]^^^lea     r10, ds:0[rbx*8]^^^mov     r9, [rbp+var_78]^^^lea     r13, [r15+r10]^^^add     r11, r10^^^cmp     rbx, r14^^^jle     loc_4636A8^^^test    r14, r14^^^jnz     loc_4635F0^^^lea     rax, [r12+rbx-1]^^^mov     rax, [r15+rax*8]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^jz      loc_4635C0^^^test    rdx, rdx^^^jle     loc_463424^^^mov     rdx, rdi^^^shl     rdx, 3Ch^^^shr     rdx, 3Fh^^^cmp     r12, rdx^^^cmovbe  rdx, r12^^^test    rdx, rdx^^^jz      loc_46379F^^^cmp     r12, rdx^^^mov     qword ptr [rdi], 0^^^jz      short loc_4635B1^^^mov     eax, 1^^^mov     r8, r12^^^sub     r8, rdx^^^mov     rsi, r8^^^shr     rsi, 1^^^mov     rdi, rsi^^^add     rdi, rdi^^^jz      short loc_4635A0^^^pxor    xmm0, xmm0^^^lea     rcx, [r15+rdx*8]^^^xor     edx, edx^^^nop     dword ptr [rax+00000000h]^^^add     rdx, 1^^^movdqa  xmmword ptr [rcx], xmm0^^^add     rcx, 10h^^^cmp     rdx, rsi^^^jb      short loc_463580^^^add     rax, rdi^^^cmp     r8, rdi^^^jz      short loc_4635B1^^^nop     dword ptr [rax+00000000h]^^^mov     qword ptr [r15+rax*8], 0^^^add     rax, 1^^^cmp     r12, rax^^^jg      short loc_4635A0^^^xor     eax, eax^^^jmp     loc_463424^^^test    rdx, rdx^^^jle     loc_463424^^^mov     rcx, [rbp+var_38]^^^xor     eax, eax^^^nop^^^mov     rdx, [rcx+rax*8]^^^mov     [r15+rax*8], rdx^^^add     rax, 1^^^cmp     rax, r12^^^jnz     short loc_4635D0^^^xor     eax, eax^^^jmp     loc_463424^^^mov     rdi, [rbp+var_40]^^^mov     rcx, r11^^^mov     rsi, r9^^^mov     r8, r14^^^mov     rdx, rbx^^^mov     [rbp+var_78], r10^^^call    __mpn_mul^^^mov     rdx, [rbp+var_40]^^^mov     rcx, rbx^^^mov     rsi, r13^^^mov     rdi, r13^^^call    __mpn_add_n^^^mov     r10, [rbp+var_78]^^^mov     rdx, [rbp+var_40]^^^add     rdx, r10^^^add     r10, r13^^^mov     rcx, [rdx]^^^add     rdx, 8^^^add     rax, rcx^^^mov     [r10], rax^^^add     r10, 8^^^cmp     rcx, rax^^^ja      short loc_463680^^^cmp     r10, rdx^^^jz      loc_463500^^^sub     r14, 1^^^test    r14, r14^^^jle     loc_463500^^^xor     eax, eax^^^nop     word ptr [rax+rax+00000000h]^^^mov     rcx, [rdx+rax*8]^^^mov     [r10+rax*8], rcx^^^add     rax, 1^^^cmp     r14, rax^^^jg      short loc_463660^^^jmp     loc_463500^^^sub     r14, 1^^^jz      loc_463500^^^mov     rax, [rdx]^^^add     rdx, 8^^^add     rax, 1^^^mov     [r10], rax^^^add     r10, 8^^^test    rax, rax^^^jz      short loc_463680^^^jmp     short loc_46363F^^^sub     rsp, [rbp-48h]^^^mov     rax, rbx^^^mov     [rbp+var_68], r15^^^neg     rax^^^mov     [rbp+var_70], r12^^^mov     r15, r10^^^mov     [rbp+var_60], rax^^^mov     r12, r11^^^mov     [rbp+var_58], r9^^^lea     rdx, [rsp+80h+var_78+7]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_38], rdx^^^add     rdx, r10^^^mov     [rbp+var_50], rdx^^^add     rdx, 8^^^mov     [rbp+var_48], rdx^^^nop     dword ptr [rax+00h]^^^mov     r8, [rbp+var_40]^^^mov     rdx, [rbp+var_58]^^^mov     rcx, rbx^^^mov     rdi, [rbp+var_38]^^^mov     rsi, r12^^^call    __mpn_impn_mul_n^^^mov     rdx, [rbp+var_38]^^^mov     rsi, r13^^^mov     rdi, r13^^^mov     rcx, rbx^^^add     r13, r15^^^call    __mpn_add_n^^^mov     rdx, [rbp+var_50]^^^lea     rcx, [r13+8]^^^mov     rsi, rbx^^^mov     rdi, [rdx]^^^mov     rdx, [rbp+var_48]^^^add     rax, rdi^^^cmp     rdi, rax^^^mov     [r13+0], rax^^^ja      short loc_463797^^^cmp     rcx, rdx^^^jz      short loc_463759^^^lea     rdi, [rsi-1]^^^test    rdi, rdi^^^jle     short loc_463759^^^xor     eax, eax^^^nop     word ptr [rax+rax+00h]^^^mov     rsi, [rdx+rax*8]^^^mov     [rcx+rax*8], rsi^^^add     rax, 1^^^cmp     rax, rdi^^^jl      short loc_463748^^^add     r14, [rbp+var_60]^^^add     r12, r15^^^cmp     rbx, r14^^^jle     short loc_4636E8^^^mov     r11, r12^^^mov     r10, r15^^^mov     r12, [rbp+var_70]^^^mov     r15, [rbp+var_68]^^^mov     r9, [rbp+var_58]^^^jmp     loc_4634F7^^^mov     rax, [rdx]^^^add     rdx, 8^^^add     rax, 1^^^mov     [rcx], rax^^^add     rcx, 8^^^test    rax, rax^^^jnz     short loc_463732^^^sub     rsi, 1^^^jnz     short loc_463780^^^jmp     short loc_463759^^^xor     eax, eax^^^jmp     loc_46355B^^^
twalk$$$test    rsi, rsi^^^jnz     short loc_44E500^^^rep retn^^^test    rdi, rdi^^^jz      short locret_44E4F5^^^xor     edx, edx^^^jmp     trecurse^^^
_IO_wfile_sync$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     rax, [rdi+0A0h]^^^mov     rdx, [rax+20h]^^^mov     rsi, [rax+18h]^^^cmp     rdx, rsi^^^jbe     short loc_428B79^^^mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jle     loc_428C00^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^test    eax, eax^^^setnz   dl^^^test    dl, dl^^^mov     eax, 0FFFFFFFFh^^^jnz     short loc_428B96^^^mov     rax, [rbx+0A0h]^^^mov     r12, [rax]^^^sub     r12, [rax+8]^^^sar     r12, 2^^^test    r12, r12^^^jnz     short loc_428BB0^^^mov     qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rbp, [rbx+98h]^^^mov     rdi, rbp^^^call    qword ptr [rbp+20h]^^^test    eax, eax^^^jle     short loc_428C40^^^cdqe^^^mov     rsi, r12^^^imul    rsi, rax^^^mov     rax, [rbx+0D8h]^^^mov     edx, 1^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_428C20^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax]^^^mov     [rax+8], rdx^^^mov     rax, [rbx+8]^^^mov     [rbx+10h], rax^^^jmp     short loc_428B89^^^mov     rsi, [rdi+20h]^^^mov     rdx, [rdi+28h]^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^test    eax, eax^^^setnz   dl^^^jmp     loc_428B69^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rdx], 1Dh^^^jnz     loc_428B96^^^jmp     loc_428B89^^^mov     rax, [rbx+0A0h]^^^mov     r8, r12^^^mov     rdi, rbp^^^mov     rdx, [rax+60h]^^^mov     [rax+58h], rdx^^^mov     rsi, [rbx+0A0h]^^^mov     rdx, [rbx+18h]^^^mov     rcx, [rbx+10h]^^^add     rsi, 58h^^^call    qword ptr [rbp+30h]^^^mov     rsi, [rbx+18h]^^^cdqe^^^lea     rdx, [rsi+rax]^^^sub     rsi, [rbx+10h]^^^mov     [rbx+8], rdx^^^add     rsi, rax^^^jmp     loc_428BCA^^^
__wcsmbs_named_conv$$$push    rbp^^^xor     r8d, r8d^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^mov     edi, offset aInternal^^^sub     rsp, 28h^^^lea     rdx, [rsp+38h+var_28]^^^mov     rcx, rsp^^^call    __gconv_find_transform^^^test    eax, eax^^^jnz     loc_446AF8^^^mov     rsi, [rsp+38h+var_38]^^^cmp     rsi, 1^^^jbe     short loc_446A60^^^mov     rdi, [rsp+38h+var_28]^^^call    __gconv_close_transform^^^mov     qword ptr [rbx], 0^^^mov     eax, 1^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rsp+38h+var_28]^^^mov     [rbx+8], rsi^^^test    rax, rax^^^mov     [rbx], rax^^^jz      loc_446B1A^^^lea     rdx, [rsp+38h+var_28]^^^xor     r8d, r8d^^^mov     rcx, rsp^^^mov     esi, offset aInternal^^^mov     rdi, rbp^^^call    __gconv_find_transform^^^test    eax, eax^^^jnz     short loc_446B10^^^mov     rsi, [rsp+38h+var_38]^^^cmp     rsi, 1^^^jbe     short loc_446AE0^^^mov     rdi, [rsp+38h+var_28]^^^call    __gconv_close_transform^^^mov     [rsp+38h+var_28], 0^^^mov     qword ptr [rbx+10h], 0^^^mov     rsi, [rbx+8]^^^mov     rdi, [rbx]^^^call    __gconv_close_transform^^^nop     word ptr [rax+rax+00h]^^^cmp     qword ptr [rbx], 0^^^jz      short loc_446B1A^^^xor     eax, eax^^^cmp     qword ptr [rbx+10h], 0^^^setz    al^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rsp+38h+var_28]^^^mov     [rbx+18h], rsi^^^test    rax, rax^^^mov     [rbx+10h], rax^^^jnz     short loc_446AC8^^^jmp     short loc_446AB6^^^mov     qword ptr [rbx], 0^^^add     rsp, 28h^^^mov     eax, 1^^^pop     rbx^^^pop     rbp^^^retn^^^mov     qword ptr [rbx+10h], 0^^^jmp     short loc_446AB6^^^mov     eax, 1^^^jmp     loc_446A59^^^
frame_heapsort$$$push    r15^^^lea     r15, [rdx+10h]^^^push    r14^^^mov     r14, rsi^^^push    r13^^^mov     r13, rdi^^^push    r12^^^mov     r12, rdx^^^push    rbp^^^push    rbx^^^sub     rsp, 18h^^^mov     rax, [rdx+8]^^^mov     rdx, rax^^^mov     [rsp+48h+var_48], rax^^^shr     rdx, 1^^^mov     ebx, edx^^^sub     ebx, 1^^^js      short loc_492EBE^^^mov     ebp, dword ptr [rsp+48h+var_48]^^^sub     edx, edx^^^mov     [rsp+48h+var_3C], edx^^^nop     dword ptr [rax+00000000h]^^^mov     ecx, ebx^^^mov     r8d, ebp^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, r13^^^sub     ebx, 1^^^call    frame_downheap^^^mov     eax, [rsp+48h+var_3C]^^^add     eax, ebx^^^jns     short loc_492EA0^^^mov     eax, dword ptr [rsp+48h+var_48]^^^lea     ebx, [rax-1]^^^test    ebx, ebx^^^jle     short loc_492F15^^^movsxd  rdx, ebx^^^lea     rbp, [r12+rdx*8+10h]^^^mov     edx, eax^^^sub     edx, eax^^^mov     dword ptr [rsp+48h+var_48], edx^^^nop     word ptr [rax+rax+00000000h]^^^mov     rdx, [rbp+0]^^^mov     rax, [r12+10h]^^^mov     r8d, ebx^^^xor     ecx, ecx^^^mov     rsi, r14^^^mov     rdi, r13^^^sub     ebx, 1^^^mov     [r12+10h], rdx^^^mov     [rbp+0], rax^^^mov     rdx, r15^^^call    frame_downheap^^^mov     eax, dword ptr [rsp+48h+var_48]^^^sub     rbp, 8^^^add     eax, ebx^^^test    eax, eax^^^jg      short loc_492EE0^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
vasprintf$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     edi, 64h^^^mov     [rsp+var_8], r14^^^sub     rsp, 118h^^^mov     rbp, rsi^^^mov     r12, rdx^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_4265C0^^^xor     r8d, r8d^^^xor     ecx, ecx^^^mov     edx, 0FFFFFFFFh^^^mov     esi, 8000h^^^mov     rdi, rsp^^^mov     [rsp+118h+var_90], 0^^^call    _IO_no_init^^^mov     rcx, r13^^^mov     edx, 64h^^^mov     rsi, r13^^^mov     rdi, rsp^^^mov     [rsp+118h+var_40], offset _IO_str_jumps^^^call    _IO_str_init_static_internal^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rsp^^^and     [rsp+118h+var_118], 0FFFFFFFEh^^^mov     [rsp+118h+var_38], offset malloc^^^mov     [rsp+118h+var_30], offset free^^^call    vfprintf^^^test    eax, eax^^^mov     r12d, eax^^^js      loc_4265A8^^^mov     rdx, [rsp+118h+var_F8]^^^mov     r14, [rsp+118h+var_F0]^^^mov     rax, [rsp+118h+var_E8]^^^sub     r14, rdx^^^sub     rax, rdx^^^lea     rbp, [r14+1]^^^shr     rax, 1^^^cmp     rbp, rax^^^jb      short loc_426568^^^mov     rdi, [rsp+118h+var_E0]^^^mov     rsi, rbp^^^call    realloc^^^test    rax, rax^^^mov     [rbx], rax^^^jz      short loc_42659B^^^mov     byte ptr [rax+rbp-1], 0^^^mov     eax, r12d^^^mov     rbx, [rsp+118h+var_28]^^^mov     rbp, [rsp+118h+var_20]^^^mov     r12, [rsp+118h+var_18]^^^mov     r13, [rsp+118h+var_10]^^^mov     r14, [rsp+118h+var_8]^^^add     rsp, 118h^^^retn^^^mov     rdi, rbp^^^call    malloc^^^test    rax, rax^^^mov     [rbx], rax^^^jz      short loc_426517^^^mov     r13, [rsp+118h+var_E0]^^^mov     rdx, r14^^^mov     rdi, rax^^^mov     rsi, r13^^^call    memcpy^^^mov     rdi, r13^^^call    free^^^mov     rax, [rbx]^^^test    rax, rax^^^jnz     short loc_42652C^^^mov     rax, [rsp+118h+var_E0]^^^mov     [rbx], rax^^^jmp     short loc_42652C^^^mov     rdi, [rsp+118h+var_E0]^^^call    free^^^jmp     loc_426531^^^mov     r12d, 0FFFFFFFFh^^^jmp     loc_426531^^^
_IO_free_backup_area$$$push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^test    ah, 1^^^jz      short loc_42BB68^^^and     ah, 0FEh^^^mov     rdx, [rdi+58h]^^^mov     [rdi], eax^^^mov     rax, [rdi+10h]^^^mov     [rdi+10h], rdx^^^mov     [rdi+58h], rax^^^mov     rax, [rbx+48h]^^^mov     rdi, [rdi+18h]^^^mov     [rbx+8], rax^^^mov     [rbx+18h], rax^^^mov     [rbx+48h], rdi^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     qword ptr [rbx+58h], 0^^^mov     qword ptr [rbx+50h], 0^^^pop     rbx^^^retn^^^mov     rdi, [rdi+48h]^^^jmp     short loc_42BB44^^^
unsetenv$$$push    r13             ^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^test    rdi, rdi^^^jz      loc_419050^^^cmp     byte ptr [rdi], 0^^^jz      loc_419050^^^mov     esi, 3Dh^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_419050^^^mov     rdi, rbx^^^call    strlen^^^mov     esi, 1^^^mov     rbp, rax^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_418FAD^^^lock cmpxchg cs:envlock, esi^^^jnz     _L_lock_1156^^^jmp     short loc_418FBA^^^cmpxchg cs:envlock, esi^^^jnz     _L_lock_1156^^^mov     r13, cs:environ^^^test    r13, r13^^^jz      short loc_418FF5^^^mov     r12, [r13+0]^^^test    r12, r12^^^jz      short loc_418FF5^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    strncmp^^^test    eax, eax^^^jnz     short loc_418FE8^^^cmp     byte ptr [r12+rbp], 3Dh^^^jz      short loc_419030^^^add     r13, 8^^^mov     r12, [r13+0]^^^test    r12, r12^^^jnz     short loc_418FCF^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41900D^^^lock dec cs:envlock^^^jnz     _L_unlock_1194^^^jmp     short loc_419019^^^dec     cs:envlock^^^jnz     _L_unlock_1194^^^add     rsp, 8^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rax, r13^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, [rax+8]^^^mov     [rax], rdx^^^add     rax, 8^^^test    rdx, rdx^^^jnz     short loc_419038^^^jmp     loc_418FC6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^add     rsp, 8^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^
dlopen_doit$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^mov     esi, [rdi+8]^^^test    esi, 0BFFFEEF0h^^^jnz     short loc_48D4C6^^^mov     rdx, [rdi+18h]^^^mov     rdi, [rdi]^^^or      esi, 80000000h^^^mov     eax, offset unk_49A0C9^^^mov     r9, cs:__libc_argv^^^mov     r8d, cs:__libc_argc^^^test    rdi, rdi^^^cmovz   rdi, rax^^^mov     rax, cs:environ^^^xor     ecx, ecx^^^mov     [rsp+18h+var_18], rax^^^call    _dl_open^^^mov     [rbx+10h], rax^^^add     rsp, 10h^^^pop     rbx^^^retn^^^mov     edx, 5^^^mov     esi, offset aInvalidModePar^^^mov     edi, offset _libc_intl_domainname^^^call    dcgettext^^^xor     edx, edx^^^mov     rcx, rax^^^xor     esi, esi^^^xor     edi, edi^^^call    _dl_signal_error^^^
_L_unlock_167$$$lea     rdi, __fork_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_410BD2^^^
__strncasecmp_l_nonascii$$$test    rdx, rdx^^^jz      short loc_48B340^^^cmp     rdi, rsi^^^jz      short loc_48B340^^^mov     r8, [rcx+70h]^^^xor     ecx, ecx^^^movzx   r10d, byte ptr [rdi+rcx]^^^movzx   r9d, byte ptr [rsi+rcx]^^^movzx   eax, r10b^^^mov     eax, [r8+rax*4]^^^sub     eax, [r8+r9*4]^^^jnz     short loc_48B348^^^test    r10b, r10b^^^jz      short locret_48B336^^^add     rcx, 1^^^cmp     rdx, rcx^^^jnz     short loc_48B310^^^rep retn^^^xor     eax, eax^^^retn^^^nop     dword ptr [rax+rax+00000000h]^^^rep retn^^^
_L_unlock_164$$$lea     rdi, lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_401D41^^^
ranged_convert$$$mov     [rsp+var_30], rbx^^^mov     rbx, rsi^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_8], r15^^^mov     [rsp+var_20], r12^^^mov     rbp, rdi^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_10], r14^^^mov     r15, rdx^^^sub     rsp, 38h^^^mov     rsi, rdx^^^mov     rdi, rbx^^^call    rbp^^^test    rax, rax^^^jz      short loc_4774D0^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^mov     r12, [rbx]^^^xor     r13d, r13d^^^test    r12, r12^^^jnz     short loc_477502^^^jmp     short loc_4774A8^^^mov     r14, r12^^^sub     r14, r13^^^sar     r14, 1^^^add     r14, r13^^^mov     [rbx], r14^^^mov     rsi, r15^^^mov     rdi, rbx^^^call    rbp^^^test    rax, rax^^^cmovnz  r13, r14^^^cmovz   r12, r14^^^mov     rdx, r12^^^sar     rdx, 3Fh^^^or      rdx, 1^^^add     rdx, r13^^^cmp     rdx, r12^^^jz      short loc_477530^^^test    r12, r12^^^jns     short loc_4774E0^^^mov     r14, r13^^^sub     r14, r12^^^sar     r14, 1^^^add     r14, r12^^^jmp     short loc_4774EC^^^test    r13, r13^^^jz      loc_4774A8^^^test    rax, rax^^^jnz     loc_4774A8^^^mov     [rbx], r13^^^mov     rsi, r15^^^mov     rdi, rbx^^^mov     rdx, rbp^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     rdx^^^
_L_unlock_10846$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_407913^^^
__gconv_transform_internal_ucs2reverse$$$push    r15^^^mov     rax, rsi^^^add     rax, 38h^^^push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 0B8h^^^mov     ebx, [rsi+10h]^^^mov     [rsp+0E8h+var_80], rdi^^^add     rdi, 68h^^^mov     [rsp+0E8h+var_C0], rsi^^^mov     [rsp+0E8h+var_A8], r8^^^mov     [rsp+0E8h+var_A0], r9^^^test    bl, 1^^^mov     r12d, [rsp+0E8h+arg_0]^^^mov     [rsp+0E8h+var_98], rdi^^^mov     [rsp+0E8h+var_90], rax^^^mov     [rsp+0E8h+var_B0], 0^^^jnz     short loc_45F2FD^^^mov     rdi, [rsp+0E8h+var_80]^^^mov     rdi, [rdi+90h]^^^mov     [rsp+0E8h+var_B0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^cmp     qword ptr [rdi+68h], 0^^^jz      short loc_45F2FD^^^mov     rax, [rsp+0E8h+var_B0]^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0E8h+var_B0], rax^^^test    r12d, r12d^^^jnz     loc_45F841^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     loc_45F8A7^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     r15, [rax]^^^mov     rdi, rax^^^cmp     [rsp+0E8h+var_A0], 0^^^mov     [rsp+0E8h+var_88], 0^^^lea     rax, [rsp+0E8h+var_78]^^^cmovz   rax, [rsp+0E8h+var_88]^^^mov     r13, [rdi+8]^^^mov     [rsp+0E8h+var_78], 0^^^mov     [rsp+0E8h+var_88], rax^^^mov     eax, [rsp+0E8h+arg_8]^^^test    eax, eax^^^jnz     loc_45F668^^^mov     rax, [r14]^^^mov     [rsp+0E8h+var_C8], rax^^^mov     rdi, rax^^^nop     dword ptr [rax+rax+00h]^^^mov     r12d, ebx^^^mov     [rsp+0E8h+var_58], rdi^^^mov     [rsp+0E8h+var_68], r15^^^and     r12d, 2^^^mov     rax, rdi^^^mov     rbx, r15^^^mov     dword ptr [rsp+0E8h+var_B8], 4^^^jmp     short loc_45F3F0^^^lea     rsi, [rax+4]^^^cmp     rbp, rsi^^^jb      loc_45F65B^^^lea     rcx, [rbx+2]^^^cmp     r13, rcx^^^jb      loc_45F64E^^^mov     edx, [rax]^^^cmp     edx, 0FFFFh^^^ja      loc_45F5B0^^^lea     edi, [rdx-0D800h]^^^cmp     edi, 7FFh^^^jbe     loc_45F57D^^^mov     rax, [rsp+0E8h+var_58]^^^ror     dx, 8^^^mov     [rbx], dx^^^mov     [rsp+0E8h+var_68], rcx^^^mov     rbx, rcx^^^add     rax, 4^^^mov     [rsp+0E8h+var_58], rax^^^cmp     rbp, rax^^^jnz     short loc_45F390^^^cmp     [rsp+0E8h+var_A8], 0^^^mov     [r14], rax^^^jnz     loc_45F5A5^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     r12, [rdx+30h]^^^test    r12, r12^^^jz      short loc_45F449^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45F43F^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r15^^^mov     rdx, [r14]^^^mov     rsi, [rsp+0E8h+var_C8]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45F418^^^mov     rdi, [rsp+0E8h+var_C0]^^^add     dword ptr [rdi+14h], 1^^^test    byte ptr [rdi+10h], 1^^^jnz     loc_45F8D2^^^cmp     r15, rbx^^^jnb     short loc_45F4C8^^^mov     rdi, [rsp+0E8h+var_C0]^^^mov     rax, [rdi]^^^mov     rdi, [rsp+0E8h+var_B0]^^^mov     [rsp+0E8h+var_68], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0E8h+arg_8]^^^xor     r8d, r8d^^^mov     dword ptr [rsp+0E8h+var_E8], 0^^^mov     r9, [rsp+0E8h+var_A0]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0E8h+var_68]^^^mov     rsi, [rsp+0E8h+var_90]^^^mov     rdi, [rsp+0E8h+var_98]^^^mov     dword ptr [rsp+0E8h+var_E0], eax^^^call    [rsp+0E8h+var_B0]^^^cmp     eax, 4^^^jz      short loc_45F4E8^^^mov     rdx, [rsp+0E8h+var_68]^^^cmp     rdx, rbx^^^jnz     loc_45F8E7^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^mov     eax, dword ptr [rsp+0E8h+var_B8]^^^test    eax, eax^^^jnz     short loc_45F4F7^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rdi, [r14]^^^mov     r15, [rdx]^^^mov     [rsp+0E8h+var_C8], rdi^^^mov     ebx, [rdx+10h]^^^jmp     loc_45F368^^^cmp     dword ptr [rsp+0E8h+var_B8], 5^^^jz      short loc_45F4D0^^^mov     eax, dword ptr [rsp+0E8h+var_B8]^^^test    eax, eax^^^jz      short loc_45F4D0^^^cmp     dword ptr [rsp+0E8h+var_B8], 7^^^jnz     short loc_45F567^^^mov     eax, [rsp+0E8h+arg_8]^^^test    eax, eax^^^jz      short loc_45F567^^^mov     rdx, [r14]^^^mov     rax, rbp^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45F8F9^^^xor     ecx, ecx^^^cmp     rbp, rdx^^^mov     rax, rdx^^^mov     r8, [rsp+0E8h+var_C0]^^^jbe     loc_45F7D3^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r8+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, rbp^^^mov     [r14], rax^^^jnz     short loc_45F52F^^^sub     eax, edx^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rcx, [rdx+20h]^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^mov     eax, dword ptr [rsp+0E8h+var_B8]^^^add     rsp, 0B8h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+0E8h+var_88], 0^^^jz      short loc_45F58E^^^test    r12d, r12d^^^jnz     loc_45F7BA^^^cmp     [rsp+0E8h+var_A8], 0^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^mov     [r14], rax^^^jz      loc_45F404^^^mov     rax, [rsp+0E8h+var_A8]^^^mov     [rax], rbx^^^jmp     short loc_45F567^^^shr     edx, 7^^^cmp     edx, 1C00h^^^jz      loc_45F818^^^cmp     [rsp+0E8h+var_88], 0^^^jz      short loc_45F58E^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     r10, [rdx+30h]^^^test    r10, r10^^^jz      loc_45F7EA^^^mov     rbx, r10^^^jmp     short loc_45F5EB^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jz      loc_45F7DA^^^mov     rdi, [rbx]^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [rsp+0E8h+var_68]^^^mov     rdx, [rbx+18h]^^^mov     r9, rbp^^^lea     r8, [rsp+0E8h+var_58]^^^mov     rcx, [r14]^^^mov     [rsp+0E8h+var_E8], rax^^^mov     rsi, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_E0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^jz      short loc_45F5DE^^^cmp     eax, 5^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^jz      loc_45FA9A^^^mov     rbx, [rsp+0E8h+var_68]^^^mov     rax, [rsp+0E8h+var_58]^^^jmp     loc_45F3F0^^^mov     dword ptr [rsp+0E8h+var_B8], 5^^^jmp     loc_45F3F5^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^jmp     loc_45F3F5^^^mov     r10, [rdi+20h]^^^mov     edx, [r10]^^^test    dl, 7^^^jz      loc_45F7AD^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     loc_45F828^^^mov     rax, [r14]^^^and     edx, 7^^^mov     [rsp+0E8h+var_58], r15^^^mov     ecx, 4^^^mov     [rsp+0E8h+var_68], rax^^^jz      short loc_45F6C6^^^lea     r12, [rsp+0E8h+var_48]^^^xor     cl, cl^^^movzx   esi, byte ptr [r10+rcx+4]^^^mov     [r12+rcx], sil^^^add     rcx, 1^^^cmp     rcx, rdx^^^jb      short loc_45F6AB^^^mov     ecx, 4^^^sub     rcx, rdx^^^add     rcx, rax^^^cmp     rbp, rcx^^^jb      loc_45FA64^^^lea     rcx, [r15+2]^^^mov     dword ptr [rsp+0E8h+var_B8], 5^^^cmp     r13, rcx^^^jb      loc_45F567^^^lea     r12, [rsp+0E8h+var_48]^^^movzx   esi, byte ptr [rax]^^^add     rax, 1^^^mov     [rsp+0E8h+var_68], rax^^^mov     [r12+rdx], sil^^^add     rdx, 1^^^cmp     rbp, rax^^^jbe     short loc_45F711^^^cmp     rdx, 3^^^jbe     short loc_45F6EF^^^mov     eax, [rsp+0E8h+var_48]^^^add     rdx, r12^^^mov     [rsp+0E8h+var_68], r12^^^mov     [rsp+0E8h+var_C8], rdx^^^cmp     eax, 0FFFFh^^^ja      loc_45F963^^^lea     edx, [rax-0D800h]^^^cmp     edx, 7FFh^^^jbe     loc_45F92B^^^ror     ax, 8^^^mov     [r15], ax^^^mov     [rsp+0E8h+var_58], rcx^^^lea     rax, [r12+4]^^^mov     [rsp+0E8h+var_68], rax^^^lea     rax, [r12+4]^^^mov     edx, [r10]^^^sub     rax, r12^^^mov     rcx, rdx^^^and     ecx, 7^^^cmp     rax, rcx^^^jle     loc_45F912^^^mov     rdi, [r14]^^^sub     rax, rcx^^^and     edx, 0FFFFFFF8h^^^mov     r15, [rsp+0E8h+var_58]^^^add     rax, rdi^^^mov     [rsp+0E8h+var_C8], rax^^^mov     [r14], rax^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     [r10], edx^^^mov     rdi, [rsp+0E8h+var_C8]^^^mov     ebx, [rax+10h]^^^jmp     loc_45F368^^^mov     rdi, [r14]^^^mov     [rsp+0E8h+var_C8], rdi^^^jmp     loc_45F368^^^mov     rdi, [rsp+0E8h+var_88]^^^mov     [rsp+0E8h+var_58], rsi^^^mov     rax, rsi^^^add     qword ptr [rdi], 1^^^jmp     loc_45F3F0^^^xor     eax, eax^^^jmp     loc_45F54D^^^mov     rax, [rsp+0E8h+var_58]^^^mov     rbx, [rsp+0E8h+var_68]^^^test    r12d, r12d^^^jz      loc_45F58E^^^mov     rdx, [rsp+0E8h+var_88]^^^add     rax, 4^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^mov     [rsp+0E8h+var_58], rax^^^add     qword ptr [rdx], 1^^^jmp     loc_45F3F0^^^mov     [rsp+0E8h+var_58], rsi^^^mov     rax, rsi^^^jmp     loc_45F3F0^^^mov     ecx, offset __PRETTY_FUNCTION___12930^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     short loc_45F8B9^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rax, [rdx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rdx+10h], 1^^^mov     dword ptr [rsp+0E8h+var_B8], 0^^^jnz     loc_45F567^^^mov     rdi, [rsp+0E8h+var_B0]^^^call    _dl_mcount_wrapper_check^^^mov     edi, [rsp+0E8h+arg_8]^^^mov     dword ptr [rsp+0E8h+var_E8], r12d^^^xor     r8d, r8d^^^mov     r9, [rsp+0E8h+var_A0]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0E8h+var_90]^^^mov     dword ptr [rsp+0E8h+var_E0], edi^^^mov     rdi, [rsp+0E8h+var_98]^^^call    [rsp+0E8h+var_B0]^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^jmp     loc_45F567^^^mov     rdx, [rsp+0E8h+var_A8]^^^mov     rdi, [rsp+0E8h+var_C0]^^^mov     r15, [rdx]^^^jmp     loc_45F31D^^^mov     ecx, offset __PRETTY_FUNCTION___12930^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0E8h+var_A0]^^^mov     [rdi], rbx^^^mov     rax, [rsp+0E8h+var_78]^^^add     [rdx], rax^^^jmp     loc_45F4F7^^^sub     rdx, rbx^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^add     rdx, rdx^^^add     [r14], rdx^^^jmp     loc_45F4C8^^^mov     ecx, offset __PRETTY_FUNCTION___12930^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12887^^^mov     edx, 1C0h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInptrBytebufSt^^^call    __assert_fail^^^cmp     [rsp+0E8h+var_88], 0^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jz      loc_45F567^^^and     ebx, 2^^^jz      loc_45F567^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [r12+4]^^^mov     [rsp+0E8h+var_68], rax^^^add     qword ptr [rdi], 1^^^jmp     loc_45F767^^^shr     eax, 7^^^cmp     eax, 1C00h^^^jz      loc_45F755^^^cmp     [rsp+0E8h+var_88], 0^^^jz      loc_45FB3D^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     r11, [rax+30h]^^^test    r11, r11^^^jz      loc_45FB35^^^mov     [rsp+0E8h+var_B8], r15^^^mov     r15, r13^^^mov     r13d, ebx^^^mov     rbx, r11^^^mov     rdi, [rbx]^^^mov     [rsp+0E8h+var_D0], r10^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [rsp+0E8h+var_58]^^^mov     rdx, [rbx+18h]^^^mov     r9, [rsp+0E8h+var_C8]^^^lea     r8, [rsp+0E8h+var_68]^^^mov     rcx, [r14]^^^mov     [rsp+0E8h+var_E8], rax^^^mov     rsi, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_E0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^mov     r10, [rsp+0E8h+var_D0]^^^jnz     loc_45FAAF^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45F99D^^^mov     ebx, r13d^^^mov     rax, [rsp+0E8h+var_68]^^^mov     r13, r15^^^mov     r15, [rsp+0E8h+var_B8]^^^and     ebx, 2^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jz      short loc_45FA2C^^^mov     rdx, [rsp+0E8h+var_88]^^^add     rax, 4^^^mov     [rsp+0E8h+var_68], rax^^^add     qword ptr [rdx], 1^^^cmp     rax, r12^^^jnz     loc_45F767^^^cmp     dword ptr [rsp+0E8h+var_B8], 7^^^jz      loc_45FAC8^^^mov     eax, dword ptr [rsp+0E8h+var_B8]^^^test    eax, eax^^^jnz     loc_45F567^^^mov     rax, [r14]^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_C8], rax^^^mov     ebx, [rdx+10h]^^^mov     rdi, rax^^^jmp     loc_45F368^^^cmp     rbp, rax^^^mov     [r14], rbp^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^jbe     loc_45F567^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^mov     [r10+rdx+4], cl^^^add     rdx, 1^^^cmp     rax, rbp^^^mov     [rsp+0E8h+var_68], rax^^^jnz     short loc_45FA78^^^jmp     loc_45F55F^^^mov     rax, [rsp+0E8h+var_58]^^^mov     rbx, [rsp+0E8h+var_68]^^^jmp     loc_45F3F5^^^mov     r13, r15^^^mov     r15, [rsp+0E8h+var_B8]^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^mov     rax, [rsp+0E8h+var_68]^^^jmp     loc_45FA2C^^^lea     rdx, [rax+4]^^^cmp     [rsp+0E8h+var_C8], rdx^^^jz      loc_45FB7C^^^mov     ecx, [r10]^^^mov     rdx, [rsp+0E8h+var_C8]^^^mov     rsi, rcx^^^sub     rdx, rax^^^and     ecx, 0FFFFFFF8h^^^and     esi, 7^^^mov     rdi, rdx^^^sub     rdi, rsi^^^movsxd  rsi, ecx^^^add     [r14], rdi^^^cmp     rdx, rsi^^^jle     short loc_45FB63^^^cmp     rdx, 7^^^jg      short loc_45FB4A^^^or      edx, ecx^^^cmp     [rsp+0E8h+var_C8], rax^^^mov     [r10], edx^^^jbe     loc_45F567^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [r10+4], dl^^^add     r10, 1^^^cmp     rax, [rsp+0E8h+var_C8]^^^mov     [rsp+0E8h+var_68], rax^^^jnz     short loc_45FB12^^^jmp     loc_45F567^^^mov     rax, r12^^^jmp     loc_45FA0A^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jmp     loc_45F567^^^mov     ecx, offset __PRETTY_FUNCTION___12887^^^mov     edx, 1DDh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptr7^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12887^^^mov     edx, 1DCh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptrStat^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12887^^^mov     edx, 1D2h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendBytebuf4^^^call    __assert_fail^^^
_L_lock_2074$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_412EAE^^^
_L_unlock_186$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_425CA8^^^
handle_amd$$$push    rbx^^^mov     eax, 80000000h^^^cpuid^^^cmp     edi, 0C4h^^^jg      short loc_40EA10^^^xor     edx, edx^^^cmp     edi, 0BFh^^^setnl   dl^^^sub     edx, 7FFFFFFBh^^^cmp     edx, eax^^^ja      short loc_40EA10^^^mov     eax, edx^^^cpuid^^^cmp     edi, 0BBh^^^jg      short loc_40E9E6^^^add     edi, 3^^^mov     ecx, edx^^^sub     edi, 0BCh^^^cmp     edi, 8          ^^^jbe     short loc_40EA18^^^mov     ecx, offset __PRETTY_FUNCTION___4179^^^mov     edx, 1DEh^^^mov     esi, offset a__SysdepsX86_6^^^mov     edi, offset aCannotHappen^^^call    __assert_fail^^^xor     eax, eax^^^pop     rbx^^^retn^^^jmp     ds:off_4992E0[rdi*8]^^^xor     eax, eax        ^^^test    ch, 0F0h^^^jz      short loc_40EA12^^^movzx   eax, cl         ^^^pop     rbx^^^retn^^^mov     eax, edx        ^^^shr     eax, 0Ch^^^mov     rcx, rax^^^and     ecx, 0Fh^^^jmp     ds:off_499328[rcx*8]^^^xor     eax, eax        ^^^test    dh, 0F0h^^^jz      short loc_40EA12^^^lea     rax, [rdx+rdx]^^^pop     rbx^^^and     eax, 7FF80000h^^^retn^^^mov     eax, ecx        ^^^shr     eax, 0Ch^^^mov     rdx, rax^^^and     edx, 0Fh^^^jmp     ds:off_4993A8[rdx*8]^^^xor     eax, eax        ^^^test    ch, 0F0h^^^jz      short loc_40EA12^^^shr     ecx, 6^^^mov     rax, rcx^^^and     eax, 3FFFC00h^^^pop     rbx^^^retn^^^shr     ecx, 0Eh        ^^^mov     rax, rcx^^^and     eax, 3FC00h^^^pop     rbx^^^retn^^^xor     eax, eax        ^^^test    dh, 0F0h^^^jz      loc_40EA12^^^movzx   eax, dl^^^pop     rbx^^^retn^^^shr     ecx, 10h        ^^^cmp     cl, 0FFh^^^movzx   eax, cl^^^jnz     loc_40EA12^^^lea     eax, ds:0[rcx*4]^^^pop     rbx^^^and     eax, 3FC00h^^^retn^^^
__gettext_extract_plural$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 48h^^^test    rdi, rdi^^^mov     r12, rsi^^^mov     rbp, rdx^^^jz      short loc_4176A0^^^mov     esi, offset aPlural^^^call    sub_400360^^^mov     esi, offset aNplurals^^^mov     rdi, rbx^^^mov     r13, rax^^^call    sub_400360^^^test    rax, rax^^^jz      short loc_4176A0^^^test    r13, r13^^^jz      short loc_4176A0^^^movzx   edx, byte ptr [rax+9]^^^test    dl, dl^^^jz      short loc_4176A0^^^lea     rbx, [rax+9]^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^mov     rcx, fs:[rax]^^^mov     eax, edx^^^movzx   edx, dl^^^test    byte ptr [rcx+rdx*2+1], 20h^^^jnz     short loc_41768E^^^jmp     short loc_4176D0^^^movzx   edx, al^^^add     rbx, 1^^^test    byte ptr [rcx+rdx*2+1], 20h^^^jz      short loc_4176D0^^^movzx   eax, byte ptr [rbx+1]^^^test    al, al^^^jnz     short loc_417680^^^nop     word ptr [rax+rax+00000000h]^^^mov     qword ptr [r12], offset __gettext_germanic_plural^^^mov     qword ptr [rbp+0], 2^^^mov     rbx, [rsp+48h+var_20]^^^mov     rbp, [rsp+48h+var_18]^^^mov     r12, [rsp+48h+var_10]^^^mov     r13, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^sub     eax, 30h^^^cmp     al, 9^^^ja      short loc_4176A0^^^lea     rsi, [rsp+48h+var_30]^^^mov     edx, 0Ah^^^mov     rdi, rbx^^^call    strtouq^^^cmp     rbx, [rsp+48h+var_30]^^^jz      short loc_4176A0^^^add     r13, 7^^^mov     [rbp+0], rax^^^mov     rdi, rsp^^^mov     [rsp+48h+var_48], r13^^^call    __gettextparse^^^test    eax, eax^^^jnz     short loc_4176A0^^^mov     rax, [rsp+48h+var_40]^^^mov     [r12], rax^^^jmp     short loc_4176B0^^^
_dl_unmap$$$mov     rax, [rdi+340h]^^^mov     rsi, [rdi+348h]^^^mov     rdi, rax^^^sub     rsi, rax^^^jmp     munmap^^^
_L_unlock_10596$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40770C^^^
__dlclose$$$sub     rsp, 8^^^mov     rsi, rdi^^^mov     edi, offset dlclose_doit^^^call    _dlerror_run^^^cmp     eax, 1^^^sbb     eax, eax^^^add     rsp, 8^^^not     eax^^^retn^^^
__secure_getenv$$$mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jnz     short loc_419290^^^jmp     getenv^^^xor     eax, eax^^^retn^^^
funlockfile$$$mov     rdx, [rdi+88h]  ^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short locret_424AE0^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_424ADC^^^lock dec dword ptr [rdx]^^^jnz     short _L_unlock_16^^^jmp     short locret_424AE0^^^dec     dword ptr [rdx]^^^jnz     short _L_unlock_16^^^rep retn^^^
_nl_get_alt_digit$$$mov     [rsp+var_18], rbx^^^mov     ebx, edi^^^mov     [rsp+var_10], rbp^^^mov     [rsp+var_8], r12^^^xor     ebp, ebp^^^sub     rsp, 18h^^^cmp     ebx, 63h^^^mov     r12, rsi^^^ja      short loc_44B6D3^^^mov     rax, [rsi+1B8h]^^^cmp     byte ptr [rax], 0^^^jz      short loc_44B6D3^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B69F^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rax, [r12+28h]^^^test    rax, rax^^^jz      short loc_44B6F0^^^mov     edx, [rax+28h]^^^test    edx, edx^^^jz      short loc_44B6F0^^^mov     rax, [rax+18h]^^^xor     ebp, ebp^^^test    rax, rax^^^jz      short loc_44B6BF^^^mov     rbp, [rax+rbx*8]^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B6D3^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rax, rbp^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rdi, r12^^^xor     ebp, ebp^^^call    _nl_init_alt_digit^^^mov     rax, [r12+28h]^^^test    rax, rax^^^jnz     short loc_44B6B0^^^jmp     short loc_44B6BF^^^
_L_unlock_4145$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     locret_42D342^^^
_L_unlock_1480$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_412B83^^^
__mpn_impn_sqr_n$$$push    r15^^^push    r14^^^mov     r14, rsi^^^push    r13^^^mov     r13, rdx^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 38h^^^test    dl, 1^^^jz      short loc_464050^^^lea     rbx, [rdx-1]^^^cmp     rbx, 1Fh^^^jle     loc_464258^^^mov     rdx, rbx^^^call    __mpn_impn_sqr_n^^^lea     r15, ds:0[rbx*8]^^^mov     rdx, rbx^^^mov     rsi, r14^^^lea     r12, [r14+r15]^^^add     r15, rbp^^^mov     rdi, r15^^^mov     rcx, [r12]^^^call    __mpn_addmul_1^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r15^^^shl     rdx, 4^^^mov     [rbp+rdx+0], rax^^^mov     rcx, [r12]^^^mov     rdx, r13^^^add     r13, rbx^^^call    __mpn_addmul_1^^^mov     [rbp+r13*8+0], rax^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rbx, rdx^^^lea     rcx, ds:0[rdx*8]^^^sar     rbx, 1^^^lea     rax, ds:0[rbx*8]^^^mov     [rsp+68h+var_40], rcx^^^add     rcx, rdi^^^mov     [rsp+68h+var_60], rcx^^^mov     r15, rax^^^mov     [rsp+68h+var_50], rax^^^add     r15, rsi^^^cmp     rbx, 1Fh^^^jle     loc_464240^^^mov     rdi, [rsp+68h+var_60]^^^mov     rcx, r12^^^mov     rdx, rbx^^^mov     rsi, r15^^^call    __mpn_impn_sqr_n^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r15^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, rbx^^^js      loc_4642E8^^^mov     rdx, r14^^^mov     rsi, r15^^^mov     rdi, rbp^^^call    __mpn_sub_n^^^cmp     rbx, 1Fh^^^jg      loc_464268^^^mov     rdx, rbx^^^mov     rsi, rbp^^^mov     rdi, r12^^^call    __mpn_impn_sqr_n_basecase^^^test    rbx, rbx^^^jle     loc_464283^^^lea     rsi, [rbp+r13*8+0]^^^lea     rcx, [rbp+rbx*8+0]^^^xor     eax, eax^^^nop^^^mov     rdx, [rsi+rax*8]^^^mov     [rcx+rax*8], rdx^^^add     rax, 1^^^cmp     rax, rbx^^^jnz     short loc_4640F0^^^lea     rax, [r13+rbx+0]^^^mov     rsi, [rsp+68h+var_60]^^^mov     rcx, rbx^^^lea     rax, [rbp+rax*8+0]^^^mov     rdi, rsi^^^mov     rdx, rax^^^mov     [rsp+68h+var_48], rax^^^call    __mpn_add_n^^^mov     r15, [rsp+68h+var_50]^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     [rsp+68h+var_58], rax^^^add     r15, rbp^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_sub_n^^^sub     [rsp+68h+var_58], rax^^^cmp     rbx, 1Fh^^^jle     loc_4642D0^^^mov     rcx, [rsp+68h+var_40]^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r12^^^add     rcx, r12^^^call    __mpn_impn_sqr_n^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_add_n^^^add     rax, [rsp+68h+var_58]^^^jz      short loc_4641B8^^^mov     rcx, [rsp+68h+var_48]^^^mov     rdx, [rcx]^^^add     rax, rdx^^^cmp     rdx, rax^^^mov     [rcx], rax^^^jbe     short loc_4641B8^^^mov     rdi, rcx^^^mov     rdx, rbx^^^add     rdi, 8^^^nop     dword ptr [rax+rax+00h]^^^sub     rdx, 1^^^jz      short loc_4641B8^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_4641A0^^^nop     dword ptr [rax+00h]^^^test    rbx, rbx^^^jle     short loc_4641D2^^^xor     eax, eax^^^nop^^^mov     rdx, [r12+rax*8]^^^mov     [rbp+rax*8+0], rdx^^^add     rax, 1^^^cmp     rax, rbx^^^jnz     short loc_4641C0^^^mov     rdx, [rsp+68h+var_50]^^^mov     rcx, rbx^^^mov     rsi, r15^^^mov     rdi, r15^^^add     rdx, r12^^^call    __mpn_add_n^^^test    rax, rax^^^jz      loc_46403C^^^mov     rax, [rsp+68h+var_60]^^^mov     rcx, [rsp+68h+var_60]^^^mov     rdx, [rax]^^^mov     rdi, rcx^^^add     rdi, 8^^^lea     rax, [rdx+1]^^^cmp     rdx, rax^^^mov     [rcx], rax^^^jbe     loc_46403C^^^nop     dword ptr [rax]^^^sub     r13, 1^^^jz      loc_46403C^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_464218^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdx, rbx^^^mov     rsi, r15^^^mov     rdi, rcx^^^call    __mpn_impn_sqr_n_basecase^^^jmp     loc_46409B^^^mov     rdx, rbx^^^call    __mpn_impn_sqr_n_basecase^^^jmp     loc_463FF5^^^mov     rcx, [rsp+68h+var_40]^^^mov     rdx, rbx^^^mov     rsi, rbp^^^mov     rdi, r12^^^add     rcx, r12^^^call    __mpn_impn_sqr_n^^^jmp     loc_4640E3^^^lea     rax, [r13+rbx+0]^^^mov     rsi, [rsp+68h+var_60]^^^mov     rcx, rbx^^^lea     rax, [rbp+rax*8+0]^^^mov     rdi, rsi^^^mov     rdx, rax^^^mov     [rsp+68h+var_48], rax^^^call    __mpn_add_n^^^mov     r15, [rsp+68h+var_50]^^^mov     rcx, r13^^^mov     rdx, r12^^^mov     [rsp+68h+var_58], rax^^^add     r15, rbp^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_sub_n^^^sub     [rsp+68h+var_58], rax^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r12^^^call    __mpn_impn_sqr_n_basecase^^^jmp     loc_464166^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, rbp^^^call    __mpn_sub_n^^^jmp     loc_4640C2^^^
strerror_r$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     ebx, edi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     rbp, rsi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 68h^^^test    edi, edi^^^mov     r12, rdx^^^js      loc_43044D^^^cmp     edi, cs:sys_nerr^^^movsxd  rbx, edi^^^jge     short loc_4303B2^^^mov     rsi, ds:sys_errlist[rbx*8]^^^test    rsi, rsi^^^jz      short loc_4303B2^^^mov     edx, 5^^^mov     edi, offset _libc_intl_domainname^^^call    dcgettext^^^mov     rbp, rax^^^mov     rax, rbp^^^mov     rbx, [rsp+68h+var_30]^^^mov     rbp, [rsp+68h+var_28]^^^mov     r12, [rsp+68h+var_20]^^^mov     r13, [rsp+68h+var_18]^^^mov     r14, [rsp+68h+var_10]^^^mov     r15, [rsp+68h+var_8]^^^add     rsp, 68h^^^retn^^^mov     edx, 5^^^mov     esi, offset aUnknownError^^^mov     edi, offset _libc_intl_domainname^^^call    dcgettext^^^mov     r15, rax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^mov     rdi, r15^^^lea     r13, [rsp+68h+var_58]^^^mov     edx, 0Ah^^^repne scasb^^^lea     rsi, [r13+14h]^^^mov     rdi, rbx^^^mov     [rsp+68h+var_44], 0^^^not     rcx^^^lea     r14, [rcx-1]^^^xor     ecx, ecx^^^call    _itoa_word^^^cmp     r14, r12^^^mov     rdx, r12^^^mov     rdi, rbp^^^cmovbe  rdx, r14^^^mov     rsi, r15^^^mov     rbx, rax^^^call    mempcpy^^^mov     rdi, rax^^^nop     dword ptr [rax+rax+00h]^^^cmp     r14, r12^^^jnb     short loc_430439^^^add     r13, 15h^^^mov     rdx, r12^^^mov     rsi, rbx^^^sub     r13, rbx^^^sub     rdx, r14^^^cmp     r13, rdx^^^cmovbe  rdx, r13^^^call    memcpy^^^test    r12, r12^^^jz      loc_43038C^^^mov     byte ptr [rbp+r12-1], 0^^^jmp     loc_43038C^^^mov     edx, 5^^^mov     esi, offset aUnknownError^^^mov     edi, offset _libc_intl_domainname^^^call    dcgettext^^^mov     r8, rax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^mov     rdi, r8^^^lea     rsi, [rsp+68h+var_44]^^^mov     edx, 0Ah^^^repne scasb^^^mov     edi, ebx^^^mov     [rsp+68h+var_60], r8^^^mov     [rsp+68h+var_44], 0^^^mov     r14, rcx^^^neg     edi^^^xor     ecx, ecx^^^movsxd  rdi, edi^^^not     r14^^^lea     r13, [rsp+68h+var_58]^^^call    _itoa_word^^^lea     r15, [r14-1]^^^mov     r8, [rsp+68h+var_60]^^^mov     rdx, r12^^^mov     rdi, rbp^^^mov     rbx, rax^^^cmp     r15, r12^^^cmovbe  rdx, r15^^^mov     rsi, r8^^^call    mempcpy^^^cmp     r15, r12^^^mov     rdi, rax^^^jnb     loc_430439^^^mov     byte ptr [rax], 2Dh^^^add     rdi, 1^^^jmp     loc_430418^^^
_wordcopy_bwd_dest_aligned$$$mov     r8d, esi^^^mov     rcx, rdx^^^mov     eax, 40h^^^and     r8d, 7^^^and     ecx, 3^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^shl     r8d, 3^^^mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^sub     eax, r8d^^^cmp     rcx, 2^^^mov     [rsp+var_8], r12^^^jz      loc_437EB0^^^cmp     rcx, 3^^^jz      short loc_437E20^^^cmp     rcx, 1^^^jz      short loc_437DE0^^^test    rdx, rdx^^^jz      short loc_437E0D^^^sub     rdi, 18h^^^lea     r9, [rsi-20h]^^^mov     rbp, [rsi]^^^mov     rbx, [rsi-8]^^^mov     r10, rdi^^^jmp     loc_437E93^^^sub     rdi, 20h^^^sub     rdx, 1^^^mov     r11, [rsi]^^^mov     rbp, [rsi-8]^^^jnz     loc_437ED0^^^nop     dword ptr [rax]^^^mov     ecx, eax^^^shl     r11, cl^^^mov     ecx, r8d^^^mov     rax, r11^^^shr     rbp, cl^^^or      rax, rbp^^^mov     [rdi+18h], rax^^^mov     rbx, [rsp+var_18]^^^mov     rbp, [rsp+var_10]^^^mov     r12, [rsp+var_8]^^^retn^^^mov     rbx, [rsi]^^^mov     r12, [rsi-8]^^^sub     rdi, 10h^^^lea     r9, [rsi-18h]^^^add     rdx, 1^^^mov     r10, rdi^^^mov     ecx, eax^^^mov     rsi, r12^^^mov     r11, [r9+8]^^^shl     rbx, cl^^^mov     ecx, r8d^^^shr     rsi, cl^^^or      rbx, rsi^^^mov     [r10+8], rbx^^^mov     ecx, eax^^^mov     rsi, r12^^^mov     rbx, r11^^^shl     rsi, cl^^^mov     ecx, r8d^^^mov     rbp, [r9]^^^shr     rbx, cl^^^or      rsi, rbx^^^sub     rdx, 4^^^mov     [rdi], rsi^^^lea     rdi, [r10-20h]^^^jz      short loc_437DF8^^^sub     r9, 20h^^^mov     ecx, eax^^^mov     rsi, rbp^^^mov     rbx, [r9+18h]^^^shl     r11, cl^^^mov     ecx, r8d^^^mov     r10, rdi^^^shr     rsi, cl^^^or      r11, rsi^^^mov     [rdi+18h], r11^^^mov     ecx, eax^^^mov     rsi, rbx^^^mov     r12, [r9+10h]^^^shl     rbp, cl^^^mov     ecx, r8d^^^shr     rsi, cl^^^or      rbp, rsi^^^mov     [r10+10h], rbp^^^jmp     short loc_437E36^^^sub     rdi, 8^^^lea     r9, [rsi-10h]^^^mov     r12, [rsi]^^^mov     r11, [rsi-8]^^^add     rdx, 2^^^mov     r10, rdi^^^jmp     short loc_437E4F^^^lea     r9, [rsi-28h]^^^jmp     short loc_437E77^^^
_IO_default_read$$$mov     rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_dl_deallocate_tls$$$push    r14^^^mov     r14d, esi^^^push    r13^^^push    r12^^^xor     r12d, r12d^^^push    rbp^^^push    rbx^^^mov     r13, [rdi+8]^^^mov     rbx, rdi^^^mov     rax, [r13-10h]^^^mov     rbp, r13^^^jmp     short loc_456711^^^add     r12, 1^^^cmp     byte ptr [rbp+18h], 0^^^jnz     short loc_45670D^^^mov     rdi, [rbp+10h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_45670D^^^call    free^^^mov     rax, [r13-10h]^^^add     rbp, 10h^^^cmp     r12, rax^^^jb      short loc_4566F0^^^lea     rdi, [r13-10h]^^^call    free^^^test    r14b, r14b^^^jnz     short loc_456730^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^sub     rbx, cs:_dl_tls_static_size^^^lea     rdi, [rbx+900h]^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^jmp     free^^^
execute_stack_op$$$push    r14^^^mov     rax, rdi^^^push    r13^^^mov     r13, rdx^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^sub     rsp, 220h^^^cmp     rdi, rsi^^^mov     [rsp+248h+var_248], rcx^^^jnb     short loc_490FB2^^^lea     r12, off_4B37F4^^^mov     ebx, 1^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rax]^^^lea     rdi, [rax+1]^^^lea     ecx, [rdx-3]^^^movzx   r14d, dl^^^cmp     cl, 0EEh        ^^^jbe     short loc_490F70^^^call    abort           ^^^movzx   ecx, cl^^^movsxd  rcx, dword ptr [r12+rcx*4]^^^add     rcx, r12^^^jmp     rcx             ^^^mov     rsi, [rax+1]    ^^^add     rax, 9^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     ebx, 3Fh^^^ja      short loc_490F63^^^movsxd  rdx, ebx^^^add     ebx, 1^^^mov     [rsp+rdx*8+248h+var_248], rsi^^^cmp     rbp, rax^^^ja      short loc_490F50^^^test    ebx, ebx^^^jz      short loc_490F63^^^sub     ebx, 1^^^movsxd  rbx, ebx^^^mov     rcx, [rsp+rbx*8+248h+var_248]^^^add     rsp, 220h^^^mov     rax, rcx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rax, rdi        ^^^jmp     short loc_490F9F^^^movsxd  rsi, dword ptr [rax+1]^^^add     rax, 5^^^jmp     short loc_490F90^^^mov     esi, [rax+1]    ^^^add     rax, 5^^^jmp     short loc_490F90^^^movsx   rsi, word ptr [rax+1]^^^add     rax, 3^^^jmp     short loc_490F90^^^movzx   esi, word ptr [rax+1]^^^add     rax, 3^^^jmp     short loc_490F90^^^movsx   rsi, byte ptr [rax+1]^^^add     rax, 2^^^jmp     loc_490F90^^^movzx   esi, byte ptr [rax+1]^^^add     rax, 2^^^jmp     loc_490F90^^^test    ebx, ebx        ^^^jz      loc_490F63      ^^^sub     ebx, 1^^^cmp     dl, 1Fh^^^movsxd  rcx, ebx^^^mov     rsi, [rsp+rcx*8+248h+var_248]^^^jz      loc_491460^^^jbe     loc_491408^^^cmp     dl, 23h^^^jz      loc_4914B5^^^cmp     dl, 94h^^^nop     dword ptr [rax]^^^jz      loc_491488^^^cmp     dl, 20h^^^jnz     loc_490F63      ^^^not     rsi^^^mov     rax, rdi^^^jmp     loc_490F90^^^movzx   edx, byte ptr [rax+1]^^^cmp     dl, 0FFh^^^movzx   edi, dl^^^jz      loc_491440^^^mov     edx, edi^^^and     edx, 70h^^^cmp     edx, 20h^^^jz      loc_491474^^^jle     loc_491430^^^cmp     edx, 40h^^^jz      loc_49146B^^^cmp     edx, 50h^^^jz      loc_491440^^^cmp     edx, 30h^^^jnz     loc_490F63      ^^^mov     rsi, [r13+0B0h]^^^jmp     loc_491442^^^xor     r14d, r14d      ^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r14, rax^^^test    dl, dl^^^js      short loc_4910D8^^^lea     rsi, [rsp+248h+var_40]^^^call    read_sleb128^^^cmp     r14d, 11h^^^jg      loc_490F63      ^^^test    byte ptr [r13+0C7h], 40h^^^lea     rdx, dwarf_reg_size_table^^^movsxd  r14, r14d^^^mov     rsi, [r13+r14*8+0]^^^movzx   edx, byte ptr [rdx+r14]^^^jz      short loc_491132^^^cmp     byte ptr [r13+r14+0D8h], 0^^^jnz     short loc_49113E^^^cmp     dl, 8^^^jnz     loc_490F63      ^^^mov     rsi, [rsi]^^^add     rsi, [rsp+248h+var_40]^^^jmp     loc_490F90^^^cmp     ebx, 2          ^^^jle     loc_490F63      ^^^lea     ecx, [rbx-1]^^^lea     edx, [rbx-2]^^^lea     eax, [rbx-3]^^^movsxd  rcx, ecx^^^cdqe^^^movsxd  rdx, edx^^^mov     r8, [rsp+rax*8+248h+var_248]^^^mov     rsi, [rsp+rcx*8+248h+var_248]^^^mov     r9, [rsp+rdx*8+248h+var_248]^^^mov     [rsp+rcx*8+248h+var_248], r9^^^mov     [rsp+rdx*8+248h+var_248], r8^^^mov     [rsp+rax*8+248h+var_248], rsi^^^mov     rax, rdi^^^jmp     loc_490F9F^^^cmp     ebx, 1          ^^^jle     loc_490F63      ^^^lea     edx, [rbx-1]^^^lea     eax, [rbx-2]^^^movsxd  rdx, edx^^^cdqe^^^mov     rsi, [rsp+rax*8+248h+var_248]^^^mov     rcx, [rsp+rdx*8+248h+var_248]^^^mov     [rsp+rdx*8+248h+var_248], rsi^^^mov     [rsp+rax*8+248h+var_248], rcx^^^mov     rax, rdi^^^jmp     loc_490F9F^^^movzx   edx, byte ptr [rax+1]^^^lea     ecx, [rbx-1]^^^movsxd  rcx, ecx^^^cmp     rdx, rcx^^^mov     [rsp+248h+var_40], rdx^^^jge     loc_490F63      ^^^sub     rcx, rdx^^^add     rax, 2^^^mov     rsi, [rsp+rcx*8+248h+var_248]^^^jmp     loc_490F90^^^cmp     ebx, 1          ^^^jle     loc_490F63      ^^^lea     eax, [rbx-2]^^^cdqe^^^mov     rsi, [rsp+rax*8+248h+var_248]^^^mov     rax, rdi^^^jmp     loc_490F90^^^test    ebx, ebx        ^^^jz      loc_490F63      ^^^sub     ebx, 1^^^mov     rax, rdi^^^jmp     loc_490F9F^^^test    ebx, ebx        ^^^jz      loc_490F63      ^^^lea     eax, [rbx-1]^^^cdqe^^^mov     rsi, [rsp+rax*8+248h+var_248]^^^mov     rax, rdi^^^jmp     loc_490F90^^^lea     rsi, [rsp+248h+var_38]^^^call    read_sleb128^^^mov     rsi, [rsp+248h+var_38]^^^jmp     loc_490F90^^^xor     esi, esi        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00h]^^^movzx   r8d, byte ptr [rdi]^^^add     rdi, 1^^^mov     rdx, r8^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      rsi, rdx^^^test    r8b, r8b^^^js      short loc_491270^^^mov     rax, rdi^^^jmp     loc_490F90^^^lea     esi, [r14-30h]  ^^^mov     rax, rdi^^^jmp     loc_490F90^^^movsx   rdx, word ptr [rax+1]^^^mov     [rsp+248h+var_40], rdx^^^lea     rax, [rax+rdx+3]^^^jmp     loc_490F9F^^^test    ebx, ebx        ^^^jz      loc_490F63      ^^^movsx   rdx, word ptr [rax+1]^^^sub     ebx, 1^^^add     rax, 3^^^movsxd  rcx, ebx^^^mov     [rsp+248h+var_40], rdx^^^add     rdx, rax^^^cmp     [rsp+rcx*8+248h+var_248], 0^^^cmovnz  rax, rdx^^^jmp     loc_490F9F^^^cmp     ebx, 1          ^^^jle     loc_490F63      ^^^lea     r8d, [rbx-2]^^^sub     edx, 1Ah^^^sub     ebx, 1^^^movsxd  rbx, ebx^^^cmp     dl, 14h         ^^^movsxd  rax, r8d^^^mov     rcx, [rsp+rbx*8+248h+var_248]^^^mov     rsi, [rsp+rax*8+248h+var_248]^^^ja      loc_490F63      ^^^lea     rax, off_4B3BB0^^^movzx   edx, dl^^^movsxd  rdx, dword ptr [rax+rdx*4]^^^add     rax, rdx^^^jmp     rax             ^^^lea     rsi, [rsp+248h+var_40]^^^sub     r14d, 70h^^^call    read_sleb128^^^cmp     r14d, 11h^^^jle     loc_491109^^^jmp     loc_490F63      ^^^sub     r14d, 50h       ^^^cmp     r14d, 11h^^^jg      loc_490F63      ^^^test    byte ptr [r13+0C7h], 40h^^^lea     rax, dwarf_reg_size_table^^^movsxd  r14, r14d^^^mov     rsi, [r13+r14*8+0]^^^movzx   eax, byte ptr [rax+r14]^^^jz      short loc_49138B^^^cmp     byte ptr [r13+r14+0D8h], 0^^^jnz     loc_49128C^^^cmp     al, 8^^^jnz     loc_490F63      ^^^mov     rsi, [rsi]^^^mov     rax, rdi^^^jmp     loc_490F90^^^xor     r8d, r8d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rdx, rsi^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      r8, rdx^^^test    sil, sil^^^js      short loc_4913A8^^^cmp     r8d, 11h^^^jg      loc_490F63      ^^^test    byte ptr [r13+0C7h], 40h^^^lea     rax, dwarf_reg_size_table^^^movsxd  r8, r8d^^^mov     rsi, [r13+r8*8+0]^^^movzx   eax, byte ptr [rax+r8]^^^jz      short loc_49138B^^^cmp     byte ptr [r13+r8+0D8h], 0^^^jnz     loc_49128C^^^cmp     al, 8^^^jnz     loc_490F63      ^^^jmp     short loc_491393^^^cmp     dl, 6^^^jz      short loc_49147D^^^cmp     dl, 19h^^^jnz     loc_490F63      ^^^mov     rdx, rsi^^^mov     rax, rdi^^^sar     rdx, 3Fh^^^xor     rsi, rdx^^^sub     rsi, rdx^^^jmp     loc_490F90^^^test    edx, edx^^^jz      short loc_491440^^^cmp     edx, 10h^^^jnz     loc_490F63      ^^^nop     dword ptr [rax]^^^xor     esi, esi^^^lea     rdx, [rax+2]^^^lea     rcx, [rsp+248h+var_30]^^^call    read_encoded_value_with_base^^^mov     rsi, [rsp+248h+var_30]^^^jmp     loc_490F90^^^neg     rsi^^^mov     rax, rdi^^^jmp     loc_490F90^^^mov     rsi, [r13+0B8h]^^^jmp     short loc_491442^^^mov     rsi, [r13+0A8h]^^^jmp     short loc_491442^^^mov     rsi, [rsi]^^^mov     rax, rdi^^^jmp     loc_490F90^^^movzx   edx, byte ptr [rax+1]^^^add     rax, 2^^^cmp     dl, 2^^^jz      loc_491629^^^jbe     short loc_4914E7^^^cmp     dl, 4^^^jz      loc_491631^^^cmp     dl, 8^^^jnz     loc_490F63      ^^^mov     rsi, [rsi]^^^jmp     loc_490F90^^^xor     r9d, r9d^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movzx   r8d, byte ptr [rdi]^^^add     rdi, 1^^^mov     rdx, r8^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      r9, rdx^^^test    r8b, r8b^^^js      short loc_4914C0^^^mov     rax, rdi^^^add     rsi, r9^^^jmp     loc_490F90^^^cmp     dl, 1^^^jnz     loc_490F63      ^^^movzx   esi, byte ptr [rsi]^^^jmp     loc_490F90^^^and     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^mov     rdx, rsi        ^^^mov     rax, rsi^^^mov     ebx, r8d^^^sar     rdx, 3Fh^^^idiv    rcx^^^mov     rsi, rax^^^mov     rax, rdi^^^jmp     loc_490F90^^^sub     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^mov     rax, rsi        ^^^xor     edx, edx^^^mov     ebx, r8d^^^div     rcx^^^mov     rax, rdi^^^mov     rsi, rdx^^^jmp     loc_490F90^^^imul    rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^or      rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^add     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^shl     rsi, cl         ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^shr     rsi, cl         ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^sar     rsi, cl         ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^xor     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^setz    sil^^^movzx   esi, sil^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^setnl   sil^^^movzx   esi, sil^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^setnle  sil^^^movzx   esi, sil^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^setle   sil^^^movzx   esi, sil^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^mov     rax, rdi^^^setl    sil^^^movzx   esi, sil^^^jmp     loc_490F90^^^cmp     rsi, rcx        ^^^mov     ebx, r8d^^^setnz   sil^^^movzx   esi, sil^^^jmp     loc_49128C^^^movzx   esi, word ptr [rsi]^^^jmp     loc_490F90^^^mov     esi, [rsi]^^^jmp     loc_490F90^^^
_nl_get_era_entry$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^mov     rdx, [rsi+28h]^^^test    rdx, rdx^^^jz      loc_44BBF0^^^mov     edi, [rdx+10h]^^^test    edi, edi^^^jz      loc_44BBF0^^^mov     r9, [rdx+8]^^^mov     ecx, [rbx+14h]^^^mov     r10d, [rbx+10h]^^^mov     r11d, [rbx+0Ch]^^^test    r9, r9^^^jz      loc_44BC1F^^^mov     rdx, [rdx]^^^xor     esi, esi^^^jmp     short loc_44BBAA^^^jz      loc_44BC50^^^mov     r8d, [rdx+14h]^^^cmp     ecx, r8d^^^jle     loc_44BC10^^^cmp     ecx, edi^^^jl      short loc_44BBE8^^^jz      loc_44BC30^^^add     rsi, 1^^^add     rdx, 48h^^^cmp     rsi, r9^^^jz      short loc_44BC1F^^^mov     edi, [rdx+8]^^^mov     rax, rdx^^^cmp     ecx, edi^^^jle     short loc_44BB80^^^mov     r8d, [rdx+14h]^^^cmp     ecx, r8d^^^jl      short loc_44BBE8^^^jnz     short loc_44BB8A^^^cmp     r10d, [rdx+18h]^^^jl      short loc_44BBE8^^^jz      loc_44BC78^^^cmp     r10d, [rdx+18h]^^^nop^^^jg      short loc_44BB93^^^jnz     short loc_44BB9D^^^cmp     r11d, [rdx+1Ch]^^^jl      short loc_44BB9D^^^cmp     ecx, edi^^^nop     dword ptr [rax+00h]^^^jge     short loc_44BB97^^^nop     word ptr [rax+rax+00h]^^^add     rsp, 10h^^^pop     rbx^^^retn^^^mov     ecx, [rsi+1D0h]^^^test    ecx, ecx^^^jnz     loc_44BC87^^^xor     eax, eax^^^test    rdx, rdx^^^jnz     loc_44BB60^^^jmp     short loc_44BBE8^^^jz      short loc_44BBCB^^^add     rsi, 1^^^add     rdx, 48h^^^cmp     rsi, r9^^^jnz     short loc_44BBAA^^^add     rsp, 10h^^^xor     eax, eax^^^pop     rbx^^^retn^^^cmp     r10d, [rdx+0Ch]^^^jl      short loc_44BBE8^^^jnz     loc_44BB9D^^^cmp     r11d, [rdx+10h]^^^jg      loc_44BB9D^^^jmp     short loc_44BBE8^^^cmp     r10d, [rdx+0Ch]^^^jg      loc_44BBB4^^^nop     word ptr [rax+rax+00h]^^^jnz     loc_44BB86^^^cmp     r11d, [rdx+10h]^^^jge     loc_44BBB4^^^jmp     loc_44BB86^^^cmp     r11d, [rdx+1Ch]^^^jg      loc_44BBCB^^^jmp     loc_44BBE8^^^mov     rdi, rsi^^^mov     [rsp+18h+var_10], rsi^^^call    _nl_init_era_entries_part_0^^^mov     rsi, [rsp+18h+var_10]^^^xor     eax, eax^^^mov     rdx, [rsi+28h]^^^test    rdx, rdx^^^jnz     loc_44BB60^^^jmp     loc_44BBE8^^^
insert_module$$$push    r14^^^mov     r14d, esi^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^mov     ebp, offset __gconv_modules_db^^^push    rbx^^^jmp     short loc_458DE9^^^mov     r12, [r13+0]^^^mov     rsi, [rbx]^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_458E00^^^lea     rbp, [rbx+20h]^^^add     rbx, 30h^^^test    eax, eax^^^cmovns  rbp, rbx^^^mov     rbx, [rbp+0]^^^test    rbx, rbx^^^jnz     short loc_458DC8^^^mov     [rbp+0], r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^xor     eax, eax^^^jmp     short loc_458E13^^^mov     rsi, [rbx]^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_458E28^^^mov     rsi, [rbx+8]^^^mov     rdi, [r13+8]^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_458E37^^^lea     rbp, [rbx+28h]^^^mov     rbx, [rbx+28h]^^^test    rbx, rbx^^^jnz     short loc_458E08^^^jmp     short loc_458DF2^^^mov     eax, [rbx+10h]^^^cmp     [r13+10h], eax^^^jl      short loc_458E60^^^jz      short loc_458E57^^^test    r14d, r14d^^^jz      short loc_458DF6^^^pop     rbx^^^pop     rbp^^^pop     r12^^^mov     rdi, r13^^^pop     r13^^^pop     r14^^^jmp     free^^^mov     eax, [rbx+14h]^^^cmp     [r13+14h], eax^^^jge     short loc_458E42^^^mov     rax, [rbx+20h]^^^mov     rdi, rbx^^^mov     [r13+20h], rax^^^mov     rax, [rbx+30h]^^^mov     [r13+30h], rax^^^mov     rax, [rbx+28h]^^^mov     [r13+28h], rax^^^mov     [rbp+0], r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^jmp     free^^^
guess_time_tm.isra.0$$$mov     r11, [rsp+arg_0]^^^mov     [rsp+var_28], rbx^^^mov     r10d, edx^^^mov     [rsp+var_20], rbp^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^test    r11, r11^^^jz      loc_4776BE^^^movsxd  r12, dword ptr [r11+14h]^^^mov     rbp, rdi^^^xor     eax, eax^^^sar     rbp, 2^^^mov     r13d, 51EB851Fh^^^movsxd  r10, r10d^^^add     ebp, 1DBh^^^test    dil, 3^^^movsxd  rcx, ecx^^^setz    al^^^movsxd  r8, r8d^^^mov     ebx, r12d^^^sub     ebp, eax^^^xor     eax, eax^^^sar     ebx, 2^^^mov     r14d, ebp^^^add     ebx, 1DBh^^^test    r12b, 3^^^setz    al^^^sub     rdi, r12^^^sub     ebx, eax^^^mov     eax, ebp^^^imul    r13d^^^mov     eax, ebp^^^sub     ebp, ebx^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r14d, eax^^^mov     eax, r14d^^^mov     r14d, edx^^^shr     eax, 1Fh^^^sub     r14d, eax^^^mov     eax, ebx^^^imul    r13d^^^mov     eax, ebx^^^mov     r13d, ebx^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r13d, eax^^^mov     eax, r13d^^^shr     eax, 1Fh^^^sub     edx, eax^^^lea     rax, [rdi+rdi*8]^^^lea     rax, [rdi+rax*8]^^^lea     rax, [rax+rax*4]^^^add     rsi, rax^^^movsxd  rax, dword ptr [r11+1Ch]^^^sub     rsi, rax^^^mov     eax, edx^^^sar     edx, 2^^^sub     eax, r14d^^^sar     r14d, 2^^^add     ebp, eax^^^sub     r14d, edx^^^movsxd  rdx, dword ptr [r11+8]^^^add     r14d, ebp^^^movsxd  r14, r14d^^^add     rsi, r14^^^lea     rax, [rsi+rsi*2]^^^lea     rax, [r10+rax*8]^^^sub     rax, rdx^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^add     rcx, rax^^^movsxd  rax, dword ptr [r11+4]^^^sub     rcx, rax^^^lea     rax, ds:0[rcx*4]^^^shl     rcx, 6^^^sub     rcx, rax^^^movsxd  rax, dword ptr [r11]^^^add     r8, rcx^^^sub     r8, rax^^^lea     rax, [r9+r8]^^^cmp     rax, r9^^^setnl   dl^^^shr     r8, 3Fh^^^cmp     dl, r8b^^^jnz     short loc_4776E2^^^test    r9, r9^^^js      short loc_477700^^^lea     rdx, [r9-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r9, rcx^^^cmovg   rax, rdx^^^mov     rbx, [rsp+var_28]^^^mov     rbp, [rsp+var_20]^^^mov     r12, [rsp+var_18]^^^mov     r13, [rsp+var_10]^^^mov     r14, [rsp+var_8]^^^retn^^^lea     rdx, [r9+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r9, rcx^^^cmovl   rax, rdx^^^jmp     short loc_4776E2^^^
_nl_make_l10nflist$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^xor     ebx, ebx^^^sub     rsp, 78h^^^mov     [rsp+0A8h+var_70], rdi^^^mov     rdi, r8^^^mov     [rsp+0A8h+var_5C], ecx^^^mov     [rsp+0A8h+var_50], rsi^^^mov     [rsp+0A8h+var_58], rdx^^^mov     [rsp+0A8h+var_78], r8^^^mov     [rsp+0A8h+var_68], r9^^^call    strlen^^^mov     ecx, [rsp+0A8h+var_5C]^^^mov     r15, [rsp+0A8h+arg_10]^^^mov     r14, [rsp+0A8h+arg_18]^^^mov     [rsp+0A8h+var_80], rax^^^and     ecx, 4^^^mov     [rsp+0A8h+var_48], ecx^^^jz      short loc_415DD5^^^mov     rdi, [rsp+0A8h+var_68]^^^call    strlen^^^lea     rbx, [rax+1]^^^mov     ecx, [rsp+0A8h+var_5C]^^^xor     ebp, ebp^^^and     ecx, 2^^^mov     [rsp+0A8h+var_44], ecx^^^jz      short loc_415DF5^^^mov     rdi, [rsp+0A8h+arg_0]^^^call    strlen^^^lea     rbp, [rax+1]^^^mov     ecx, [rsp+0A8h+var_5C]^^^xor     r12d, r12d^^^and     ecx, 1^^^mov     [rsp+0A8h+var_40], ecx^^^jz      short loc_415E16^^^mov     rdi, [rsp+0A8h+arg_8]^^^call    strlen^^^lea     r12, [rax+1]^^^mov     ecx, [rsp+0A8h+var_5C]^^^xor     r13d, r13d^^^and     ecx, 8^^^mov     [rsp+0A8h+var_3C], ecx^^^jz      short loc_415E32^^^mov     rdi, r15^^^call    strlen^^^lea     r13, [rax+1]^^^mov     rdi, r14^^^call    strlen^^^mov     rcx, [rsp+0A8h+var_58]^^^mov     rsi, [rsp+0A8h+var_80]^^^lea     rdx, [rcx+rsi+2]^^^add     rdx, rbx^^^add     rdx, rbp^^^xor     ebp, ebp^^^add     rdx, r12^^^add     rdx, r13^^^lea     rdi, [rdx+rax]^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4160EA^^^mov     rdx, [rsp+0A8h+var_58]^^^mov     rsi, [rsp+0A8h+var_50]^^^mov     rdi, rax^^^call    memcpy^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     edx, 3Ah^^^mov     rdi, rbx^^^call    argz_stringify^^^mov     rdx, [rsp+0A8h+var_58]^^^mov     rsi, [rsp+0A8h+var_78]^^^lea     rdi, [rbx+rdx-1]^^^mov     byte ptr [rdi], 2Fh^^^add     rdi, 1^^^call    near ptr qword_400310^^^mov     r12d, [rsp+0A8h+var_48]^^^test    r12d, r12d^^^jnz     loc_416210^^^mov     ebp, [rsp+0A8h+var_44]^^^test    ebp, ebp^^^jnz     loc_4161F0^^^mov     r11d, [rsp+0A8h+var_40]^^^test    r11d, r11d^^^jnz     loc_4161D0^^^mov     r10d, [rsp+0A8h+var_3C]^^^test    r10d, r10d^^^jnz     loc_4161B8^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Fh^^^mov     rsi, r14^^^xor     r12d, r12d^^^call    sub_400320^^^mov     rcx, [rsp+0A8h+var_70]^^^mov     rbp, [rcx]^^^test    rbp, rbp^^^jz      short loc_415F2C^^^mov     rdi, [rbp+0]^^^test    rdi, rdi^^^jz      short loc_415F23^^^mov     rsi, rbx^^^call    sub_4003A0^^^cmp     eax, 0^^^jz      loc_416190^^^jl      loc_4161A0^^^mov     r12, rbp^^^mov     rbp, [rbp+18h]^^^test    rbp, rbp^^^jnz     short loc_415F00^^^mov     r9d, [rsp+0A8h+arg_20]^^^test    r9d, r9d^^^jz      loc_416190^^^mov     rdi, [rsp+0A8h+var_50]^^^mov     rsi, [rsp+0A8h+var_58]^^^call    argz_count^^^mov     rdx, rax^^^mov     eax, [rsp+0A8h+var_5C]^^^mov     ecx, [rsp+0A8h+var_5C]^^^and     eax, 0FFFFAAAAh^^^and     ecx, 5555h^^^sar     eax, 1^^^add     ecx, eax^^^mov     eax, ecx^^^and     ecx, 3333h^^^and     eax, 0FFFFCCCCh^^^sar     eax, 2^^^add     eax, ecx^^^mov     ecx, eax^^^sar     ecx, 4^^^add     eax, ecx^^^and     eax, 0F0Fh^^^mov     ecx, eax^^^sar     ecx, 8^^^add     ecx, eax^^^mov     eax, 1^^^shl     eax, cl^^^cdqe^^^shl     rax, 4^^^imul    rax, rdx^^^lea     rdi, [rax+28h]^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_416190^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_50]^^^mov     [rax], rbx^^^call    argz_count^^^cmp     rax, 1^^^mov     edx, 1^^^jz      loc_416226^^^test    r12, r12^^^mov     [rbp+8], edx^^^mov     qword ptr [rbp+10h], 0^^^jz      loc_416249^^^mov     rax, [r12+18h]^^^mov     [rbp+18h], rax^^^mov     [r12+18h], rbp^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_50]^^^call    argz_count^^^mov     r13d, [rsp+0A8h+var_5C]^^^cmp     rax, 1^^^setz    al^^^xor     r12d, r12d^^^movzx   eax, al^^^sub     r13d, eax^^^js      short loc_416061^^^mov     eax, [rsp+0A8h+var_5C]^^^mov     rdx, [rsp+0A8h+var_50]^^^add     rdx, [rsp+0A8h+var_58]^^^not     eax^^^mov     [rsp+0A8h+var_48], eax^^^mov     [rsp+0A8h+var_80], rdx^^^jmp     short loc_416042^^^sub     r13d, 1^^^cmp     r13d, 0FFFFFFFFh^^^jz      short loc_416061^^^test    [rsp+0A8h+var_48], r13d^^^jnz     short loc_416038^^^xor     ebx, ebx^^^cmp     [rsp+0A8h+var_58], 0^^^jnz     loc_41617F^^^sub     r13d, 1^^^cmp     r13d, 0FFFFFFFFh^^^jnz     short loc_416042^^^mov     r8d, [rsp+0A8h+var_5C]^^^test    r8d, r8d^^^js      short loc_4160E1^^^mov     r13d, [rsp+0A8h+var_5C]^^^mov     ebx, [rsp+0A8h+var_5C]^^^not     r13d^^^jmp     short loc_416088^^^sub     ebx, 1^^^cmp     ebx, 0FFFFFFFFh^^^jz      short loc_4160E1^^^test    ebx, r13d^^^jnz     short loc_416080^^^mov     rdx, [rsp+0A8h+arg_0]^^^mov     rax, [rsp+0A8h+arg_8]^^^mov     ecx, ebx^^^mov     r9, [rsp+0A8h+var_68]^^^mov     r8, [rsp+0A8h+var_78]^^^mov     esi, offset aUsrShareLocale^^^mov     rdi, [rsp+0A8h+var_70]^^^sub     ebx, 1^^^mov     [rsp+0A8h+var_90], r14^^^mov     [rsp+0A8h+var_A8], rdx^^^mov     edx, 1Bh^^^mov     [rsp+0A8h+var_98], r15^^^mov     [rsp+0A8h+var_A0], rax^^^call    _nl_make_l10nflist_constprop_0^^^mov     [rbp+r12*8+20h], rax^^^add     r12, 1^^^cmp     ebx, 0FFFFFFFFh^^^jnz     short loc_416088^^^mov     qword ptr [rbp+r12*8+20h], 0^^^add     rsp, 78h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     rbx, [rsp+0A8h+var_80]^^^jnb     loc_416038^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400350^^^lea     rbx, [rax+1]^^^cmp     [rsp+0A8h+var_80], rbx^^^jbe     loc_416038^^^test    rbx, rbx^^^jz      loc_416038^^^mov     rdi, rbx^^^call    strlen^^^mov     rcx, [rsp+0A8h+arg_8]^^^mov     rsi, [rsp+0A8h+arg_0]^^^lea     rdx, [rax+1]^^^mov     r9, [rsp+0A8h+var_68]^^^mov     r8, [rsp+0A8h+var_78]^^^mov     rdi, [rsp+0A8h+var_70]^^^mov     [rsp+0A8h+var_90], r14^^^mov     [rsp+0A8h+var_A0], rcx^^^mov     [rsp+0A8h+var_A8], rsi^^^mov     ecx, r13d^^^mov     rsi, rbx^^^mov     [rsp+0A8h+var_98], r15^^^call    _nl_make_l10nflist_constprop_0^^^mov     [rbp+r12*8+20h], rax^^^add     r12, 1^^^test    rbx, rbx^^^jnz     loc_416100^^^mov     rbx, [rsp+0A8h+var_50]^^^jmp     short loc_416124^^^mov     rdi, rbx^^^call    free^^^jmp     loc_4160EA^^^mov     r9d, [rsp+0A8h+arg_20]^^^xor     ebp, ebp^^^test    r9d, r9d^^^jnz     loc_415F3D^^^jmp     short loc_416190^^^lea     rdi, [rax+1]^^^mov     rsi, r15^^^mov     byte ptr [rax], 40h^^^call    near ptr qword_400310^^^jmp     loc_415EE1^^^mov     rsi, [rsp+0A8h+arg_8]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Eh^^^call    near ptr qword_400310^^^jmp     loc_415ED3^^^mov     rsi, [rsp+0A8h+arg_0]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Eh^^^call    near ptr qword_400310^^^jmp     loc_415EC5^^^mov     rsi, [rsp+0A8h+var_68]^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 5Fh^^^call    near ptr qword_400310^^^jmp     loc_415EB9^^^mov     eax, [rsp+0A8h+var_5C]^^^xor     edx, edx^^^mov     qword ptr [rbp+10h], 0^^^and     eax, 3^^^cmp     eax, 3^^^setz    dl^^^test    r12, r12^^^mov     [rbp+8], edx^^^jnz     loc_415FE6^^^mov     rsi, [rsp+0A8h+var_70]^^^mov     rax, [rsi]^^^mov     [rbp+18h], rax^^^mov     [rsi], rbp^^^jmp     loc_415FF4^^^
_L_lock_402$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42B656^^^
_dl_signal_cerror$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^test    cs:_dl_debug_mask, 0FFFFF77Fh^^^mov     r12d, edi^^^mov     r13, rdx^^^mov     rbp, rcx^^^jnz     short loc_4555DF^^^mov     rax, cs:receiver^^^test    rax, rax^^^jz      short loc_455604^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     edi, r12d^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     rax^^^cmp     cs:receiver, 0^^^mov     eax, offset aContinued^^^mov     r8d, offset aFatal^^^mov     edi, offset aSErrorSSS^^^cmovnz  r8, rax^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     short loc_4555B0^^^mov     rcx, rbp^^^mov     rdx, r13^^^mov     rsi, rbx^^^mov     edi, r12d^^^call    _dl_signal_error^^^
mALLINFo$$$push    r12^^^mov     rax, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 10h^^^mov     rdx, [rsi+58h]^^^test    rdx, rdx^^^jz      loc_40435F^^^mov     r12, [rdx+8]^^^xor     ebx, ebx^^^xor     r11d, r11d^^^xor     r8d, r8d^^^mov     rdi, r12^^^and     rdi, 0FFFFFFFFFFFFFFF8h^^^mov     rdx, [rsi+r8*8+8]^^^test    rdx, rdx^^^jz      short loc_4042BF^^^nop     dword ptr [rax]^^^mov     rcx, [rdx+8]^^^mov     rdx, [rdx+10h]^^^add     ebx, 1^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^add     r11, rcx^^^test    rdx, rdx^^^jnz     short loc_4042A8^^^add     r8, 1^^^cmp     r8, 0Ah^^^jnz     short loc_40429B^^^lea     rbp, [rsi+68h]^^^add     rdi, r11^^^mov     r10, 0FFFFFFFFFFFFFFF0h^^^mov     r8b, 1^^^nop     word ptr [rax+rax+00h]^^^lea     r9, [rbp+r10+0]^^^mov     rdx, [r9+18h]^^^cmp     r9, rdx^^^jz      short loc_404308^^^xchg    ax, ax^^^mov     rcx, [rdx+8]^^^mov     rdx, [rdx+18h]^^^add     r8d, 1^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^add     rdi, rcx^^^cmp     r9, rdx^^^jnz     short loc_4042F0^^^add     r10, 10h^^^cmp     r10, 7E0h^^^jnz     short loc_4042E0^^^mov     ecx, cs:dword_6C29A8^^^mov     rdx, [rsi+878h]^^^and     r12d, 0FFFFFFF8h^^^mov     [rax+4], r8d^^^mov     [rax+8], ebx^^^mov     [rax+18h], r11d^^^mov     [rax+20h], edi^^^mov     [rax+0Ch], ecx^^^mov     rcx, cs:qword_6C29B8^^^mov     [rax], edx^^^sub     edx, edi^^^mov     [rax+24h], r12d^^^mov     [rax+1Ch], edx^^^mov     [rax+10h], ecx^^^mov     rcx, cs:qword_6C29C8^^^mov     [rax+14h], ecx^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^cmp     cs:global_max_fast, 0^^^mov     rcx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_404398^^^mov     rdi, rsi^^^mov     [rsp+28h+var_20], rax^^^mov     [rsp+28h+var_28], rsi^^^call    malloc_consolidate_part_3^^^mov     rsi, [rsp+28h+var_28]^^^mov     rax, [rsp+28h+var_20]^^^mov     rdx, [rsi+58h]^^^jmp     loc_404288^^^lea     rdx, [rsi+rcx*8+68h]^^^add     rcx, 2^^^cmp     rcx, 0FCh^^^mov     [rdx+18h], rdx^^^mov     [rdx+10h], rdx^^^jnz     short loc_404398^^^cmp     rsi, offset main_arena^^^jz      short loc_4043D4^^^mov     edx, [rsi+4]^^^or      edx, 2^^^or      edx, 1^^^mov     [rsi+4], edx^^^lea     rdx, [rsi+58h]^^^mov     [rsi+58h], rdx^^^jmp     loc_404288^^^mov     cs:global_max_fast, 80h^^^mov     edx, cs:dword_6C20E4^^^jmp     short loc_4043C1^^^
__strcmp_sse42$$$mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^cmp     ecx, 30h^^^ja      short loc_42F450^^^cmp     eax, 30h^^^ja      short loc_42F450^^^movdqu  xmm1, xmmword ptr [rdi]^^^movdqu  xmm2, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_430180^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     word ptr [rax+rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^pxor    xmm0, xmm0^^^cmp     ecx, eax^^^jz      short loc_42F4A0^^^ja      short loc_42F477^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49C9A0^^^movsxd  r9, dword ptr [r10+r9*4]^^^pcmpeqb xmm0, xmm1^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^mov     rcx, 10h^^^mov     r9, 10h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_42F510^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_42F510^^^jmp     short loc_42F4E0^^^jnb     loc_43018F^^^lea     rcx, [rdx+rcx-10h]^^^movzx   eax, byte ptr [rdi+rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^sub     eax, edx^^^retn^^^pslldq  xmm2, 0Fh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42F5D0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F5D0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F580^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 1^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Eh^^^ja      short loc_42F586^^^jmp     loc_43013D^^^pslldq  xmm2, 0Eh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42F6A0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F6A0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F650^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 2^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Dh^^^ja      short loc_42F656^^^jmp     loc_43013D^^^pslldq  xmm2, 0Dh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^add     r10, 10h^^^jg      short loc_42F760^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F760^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F716^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 3^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ch^^^ja      short loc_42F71C^^^jmp     loc_43013D^^^pslldq  xmm2, 0Ch^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42F830^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F830^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F7E0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 4^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Bh^^^ja      short loc_42F7E6^^^jmp     loc_43013D^^^pslldq  xmm2, 0Bh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42F900^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F900^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F8B0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 5^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ah^^^ja      short loc_42F8B6^^^jmp     loc_43013D^^^pslldq  xmm2, 0Ah^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42F9D0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42F9D0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42F980^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 6^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 9^^^ja      short loc_42F986^^^jmp     loc_43013D^^^pslldq  xmm2, 9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FAA0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FAA0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FA50^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 7^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 8^^^ja      short loc_42FA56^^^jmp     loc_43013D^^^pslldq  xmm2, 8^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FB70^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FB70^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FB20^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 8^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 7^^^ja      short loc_42FB26^^^jmp     loc_43013D^^^pslldq  xmm2, 7^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FC40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FC40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FBF0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 9^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 6^^^ja      short loc_42FBF6^^^jmp     loc_43013D^^^pslldq  xmm2, 6^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FD10^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FD10^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FCC0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ah^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 5^^^ja      short loc_42FCC6^^^jmp     loc_43013D^^^pslldq  xmm2, 5^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FDE0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FDE0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FD90^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Bh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 4^^^ja      short loc_42FD96^^^jmp     loc_43013D^^^pslldq  xmm2, 4^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FEB0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FEB0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FE60^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ch^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 3^^^ja      short loc_42FE66^^^jmp     loc_43013D^^^pslldq  xmm2, 3^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_42FF80^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_42FF80^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_42FF30^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Dh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 2^^^ja      short loc_42FF36^^^jmp     loc_43013D^^^pslldq  xmm2, 2^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_430050^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_430050^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     loc_430150^^^add     rdx, 10h^^^jmp     short loc_430000^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Eh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 1^^^ja      short loc_430006^^^jmp     loc_43013D^^^pslldq  xmm2, 1^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_43016B^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_430120^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     short loc_430150^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_430120^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^jbe     short loc_430150^^^add     rdx, 10h^^^jmp     short loc_4300D0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Fh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0^^^ja      short loc_4300D6^^^pcmpistri xmm0, xmmword ptr [rsi+rdx], 1Ah^^^nop     word ptr [rax+rax+00000000h]^^^jnb     short loc_43018F^^^add     rdx, rcx^^^lea     rdi, [rdi+r9-10h]^^^movzx   eax, byte ptr [rdi+rdx]^^^movzx   edx, byte ptr [rsi+rdx]^^^test    r8d, r8d^^^jz      short loc_430168^^^xchg    eax, edx^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_430180^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^
isatty$$$sub     rsp, 48h        ^^^mov     rsi, rsp^^^call    tcgetattr^^^test    eax, eax^^^setz    al^^^add     rsp, 48h^^^movzx   eax, al^^^retn^^^
sub_40D060$$$mov     [rdi-9], dl^^^mov     [rdi-8], rdx^^^jmp     short loc_40D0CA^^^
__malloc_check_init$$$mov     eax, cs:disallow_malloc_check^^^test    eax, eax^^^jnz     short loc_407108^^^mov     cs:using_malloc_checking, 1^^^mov     cs:__malloc_hook, offset malloc_check^^^mov     cs:__free_hook, offset free_check^^^mov     cs:__realloc_hook, offset realloc_check^^^mov     cs:__memalign_hook, offset memalign_check^^^retn^^^mov     cs:disallow_malloc_check, 0^^^retn^^^
match_symbol$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     rbx, r8^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_8], r15^^^mov     r12d, edx^^^mov     [rbp+var_10], r14^^^sub     rsp, 90h^^^test    byte ptr cs:_dl_debug_mask, 10h^^^mov     rax, [r8+68h]^^^mov     r15, rdi^^^mov     r13, rcx^^^mov     [rbp+var_84], r9d^^^mov     r14, [rax+8]^^^jnz     loc_48FA22^^^mov     rax, [rbx+168h]^^^test    rax, rax^^^jz      loc_48F999^^^mov     rdx, [rax+8]^^^test    rdx, rdx^^^jz      loc_48F983^^^add     rdx, [rbx]^^^cmp     word ptr [rdx], 1^^^jnz     short loc_48F7EB^^^cmp     [rdx+8], r12d^^^jz      loc_48F868^^^mov     eax, [rdx+10h]^^^test    eax, eax^^^jz      loc_48F8B0^^^add     rdx, rax^^^cmp     word ptr [rdx], 1^^^jz      short loc_48F7CD^^^mov     [rbp+var_3D], 0^^^movzx   edi, word ptr [rdx]^^^lea     rsi, [rbp+var_3D]^^^xor     ecx, ecx^^^mov     edx, 0Ah^^^mov     [rbp+var_80], offset aUnsupportedVer^^^call    _itoa_word^^^mov     rdi, rax^^^mov     [rbp+var_78], rax^^^mov     [rbp+var_70], offset aOfVerdefRecord^^^call    strlen^^^add     rax, 44h^^^mov     rsi, [rbp+var_80]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+90h+var_84+3]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_78]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_70]^^^mov     rdi, rax^^^call    sub_400320^^^mov     rcx, r12^^^mov     r12d, 1^^^jmp     loc_48F95F^^^mov     eax, [rdx+0Ch]^^^mov     rdi, r13^^^mov     esi, [rdx+rax]^^^mov     [rbp+var_90], rdx^^^add     rsi, r14^^^call    sub_4003A0^^^test    eax, eax^^^mov     rdx, [rbp+var_90]^^^jnz     loc_48F7D7^^^xor     r12d, r12d^^^mov     eax, r12d^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     edx, [rbp+arg_0]^^^test    edx, edx^^^jz      loc_48FA53^^^mov     eax, [rbp+var_84]^^^xor     r12d, r12d^^^test    eax, eax^^^jz      short loc_48F892^^^mov     rdi, r13^^^mov     [rbp+var_78], r13^^^mov     [rbp+var_80], offset aWeakVersion^^^mov     [rbp+var_70], offset aNotFoundRequir^^^mov     [rbp+var_68], r15^^^mov     [rbp+var_60], 4B2E0Bh^^^call    strlen^^^mov     edi, offset aNotFoundRequir^^^mov     r13, rax^^^call    strlen^^^lea     r13, [r13+rax+0Fh]^^^mov     rdi, r15^^^call    strlen^^^lea     rax, [r13+rax+1Fh]^^^mov     esi, offset aWeakVersion^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+90h+var_84+3]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r13^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_78]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_70]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_68]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_60]^^^mov     rdi, rax^^^call    sub_400320^^^mov     rcx, r13^^^mov     rsi, [rbx+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48F972^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     edx, offset aVersionLookupE^^^xor     edi, edi^^^call    _dl_signal_cerror^^^jmp     loc_48F892^^^mov     ecx, offset __PRETTY_FUNCTION___10717^^^mov     dl, 71h^^^mov     esi, offset aDlVersion_c^^^mov     edi, offset aDef_offset0^^^call    __assert_fail^^^xor     r12d, r12d^^^cmp     [rbp+var_84], 0^^^jz      loc_48F892^^^lea     r12, [rbp+var_80]^^^mov     [rbp+var_80], offset aNoVersionInfor^^^mov     [rbp+var_78], r15^^^mov     [rbp+var_70], 4B2E0Bh^^^xor     edx, edx^^^mov     esi, 1^^^or      r8, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, [r12+rdx*8]^^^mov     rcx, r8^^^add     rdx, 1^^^repne scasb^^^cmp     rdx, 3^^^not     rcx^^^lea     rsi, [rsi+rcx-1]^^^jnz     short loc_48F9CC^^^add     rsi, 1Eh^^^xor     r14d, r14d^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rsi^^^lea     r13, [rsp+90h+var_84+3]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rax, r13^^^mov     rsi, [r12+r14*8]^^^mov     rdi, rax^^^add     r14, 1^^^call    near ptr qword_400310^^^cmp     r14, 3^^^jnz     short loc_48FA01^^^mov     rcx, r13^^^xor     r12d, r12d^^^jmp     loc_48F95F^^^mov     rdx, [r8+8]^^^mov     rcx, [r8+30h]^^^cmp     byte ptr [rdx], 0^^^jnz     short loc_48FA39^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     r9, rsi^^^mov     r8, r15^^^mov     rsi, r13^^^mov     edi, offset aCheckingForVer^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48F7A7^^^lea     r12, [rbp+var_80]^^^mov     [rbp+var_80], 4B3631h^^^mov     [rbp+var_78], r13^^^mov     [rbp+var_70], offset aNotFoundRequir^^^mov     [rbp+var_68], r15^^^xor     edx, edx^^^mov     [rbp+var_60], 4B2E0Bh^^^mov     esi, 1^^^or      r8, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^mov     rdi, [r12+rdx*8]^^^mov     rcx, r8^^^add     rdx, 1^^^repne scasb^^^cmp     rdx, 5^^^not     rcx^^^lea     rsi, [rsi+rcx-1]^^^jnz     short loc_48FA84^^^add     rsi, 1Eh^^^xor     r14d, r14d^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rsi^^^lea     r13, [rsp+90h+var_84+3]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rax, r13^^^mov     rsi, [r12+r14*8]^^^mov     rdi, rax^^^add     r14, 1^^^call    near ptr qword_400310^^^cmp     r14, 5^^^jnz     short loc_48FAB9^^^mov     rcx, r13^^^mov     r12d, 1^^^jmp     loc_48F95F^^^
__sysconf_check_spec$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_20], r12^^^mov     [rbp+var_18], r13^^^mov     r13, rdi^^^mov     [rbp+var_8], r15^^^mov     [rbp+var_28], rbx^^^mov     edi, offset aGetconf_dir^^^mov     [rbp+var_10], r14^^^sub     rsp, 0D0h^^^mov     r12, 0FFFFFFFFFFFFFFC0h^^^mov     r15d, fs:[r12]^^^call    __secure_getenv^^^test    rax, rax^^^jz      loc_44C5D0^^^mov     rdi, rax^^^mov     [rbp+var_D0], rax^^^call    strlen^^^mov     rsi, [rbp+var_D0]^^^mov     rdx, rax^^^mov     rdi, r13^^^mov     [rbp+var_C8], rdx^^^mov     [rbp+var_D0], rsi^^^call    strlen^^^mov     rdx, [rbp+var_C8]^^^mov     r14, rax^^^mov     rsi, [rbp+var_D0]^^^lea     rax, [rdx+rax+29h]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rbx, [rsp+0D0h+var_C8+7]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    mempcpy^^^mov     rdx, 565F5849534F502Fh^^^lea     rdi, [rax+0Ah]^^^mov     rsi, r13^^^mov     [rax], rdx^^^lea     rdx, [r14+1]^^^mov     word ptr [rax+8], 5F36h^^^call    memcpy^^^lea     rdx, [rbp+var_C0]^^^mov     rsi, rbx^^^mov     edi, 1^^^call    _xstat^^^cdqe^^^mov     fs:[r12], r15d^^^mov     rbx, [rbp+var_28]^^^sar     rax, 3Fh^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^or      rax, 1^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     edx, 10h^^^mov     esi, offset aUsrLibGetconf^^^jmp     loc_44C52A^^^
sub_41E2EE$$$mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41E34E^^^movsx   eax, dil^^^mov     dword ptr [rbp-590h], 1^^^mov     dword ptr [rbp-5B8h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step4_jumps_13264[rax*8]^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-590h], 1^^^mov     dword ptr [rbp-5B8h], 1^^^jmp     loc_41B826^^^
_L_lock_2758$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_403CC5^^^
mbrlen$$$test    rdx, rdx        ^^^mov     eax, offset internal^^^cmovz   rdx, rax^^^mov     rcx, rdx^^^mov     rdx, rsi^^^mov     rsi, rdi^^^xor     edi, edi^^^jmp     mbrtowc^^^
sub_4255C7$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
malloc_set_state$$$mov     r8d, cs:__libc_malloc_initialized^^^push    rbx^^^mov     rbx, rdi^^^mov     cs:disallow_malloc_check, 1^^^test    r8d, r8d^^^jns     short loc_40713F^^^call    ptmalloc_init_part_8^^^cmp     qword ptr [rbx], 444C4541h^^^jnz     loc_40764C^^^test    qword ptr [rbx+8], 0FFFFFFFFFFFFFF00h^^^jg      loc_407653^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40717A^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_10137^^^jmp     short loc_407187^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_10137^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_407193^^^lock^^^or      cs:dword_6C20E4, 1^^^cmp     qword ptr [rbx+8], 3^^^jg      loc_407303^^^mov     cs:global_max_fast, 40h^^^pxor    xmm0, xmm0^^^mov     rax, [rbx+20h]^^^mov     cs:qword_6C20E8, 0^^^mov     cs:qword_6C2130, 0^^^lea     rsi, [rbx+38h]^^^mov     cs:dword_6C2938, 0^^^mov     cs:dword_6C293C, 0^^^mov     edx, 1^^^mov     cs:qword_6C2138, rax^^^mov     cs:dword_6C2940, 0^^^mov     eax, offset qword_6C2138^^^movdqa  cs:xmmword_6C20F0, xmm0^^^mov     cs:dword_6C2944, 0^^^mov     cs:qword_6C2140, 0^^^mov     r8d, 1^^^movdqa  cs:xmmword_6C2100, xmm0^^^mov     r9d, 7Eh^^^movdqa  cs:xmmword_6C2110, xmm0^^^movdqa  cs:xmmword_6C2120, xmm0^^^jmp     short loc_4072B9^^^mov     rdi, [rcx+8]^^^mov     r10, rdi^^^shr     r10, 6^^^cmp     r10, 30h^^^ja      loc_407350^^^add     r10, 30h^^^cmp     r10, rdx^^^jz      loc_40736A^^^nop     word ptr [rax+rax+00h]^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^mov     rdi, [rsi]^^^mov     r10, cs:qword_6C2148^^^mov     qword ptr [rcx+18h], offset qword_6C2138^^^mov     [rdi+10h], r10^^^mov     r10, cs:qword_6C2148^^^mov     cs:qword_6C2148, rcx^^^mov     [r10+18h], rdi^^^add     rdx, 1^^^add     rax, 10h^^^add     rsi, 10h^^^cmp     rdx, 80h^^^jz      loc_407428^^^mov     rcx, [rsi-8]^^^test    rcx, rcx^^^jz      short loc_407330^^^cmp     qword ptr [rbx+8], 2^^^jle     short loc_407270^^^cmp     rdx, 3Fh^^^ja      loc_407248^^^mov     rdi, [rsi]^^^mov     [rax+10h], rcx^^^mov     r10d, r8d^^^mov     [rax+18h], rdi^^^mov     [rcx+18h], rax^^^mov     rdi, rdx^^^mov     rcx, [rax+18h]^^^shr     rdi, 5^^^mov     [rcx+10h], rax^^^mov     ecx, edx^^^shl     r10d, cl^^^or      dword_6C2938[rdi*4], r10d^^^jmp     short loc_4072A0^^^mov     rdx, [rbx+888h]^^^mov     eax, 10h^^^test    rdx, rdx^^^jz      short loc_40731C^^^lea     rax, [rdx+8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     cs:global_max_fast, rax^^^jmp     loc_4071B0^^^cmp     qword ptr [rsi], 0^^^jnz     loc_40765A^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jmp     loc_4072A0^^^mov     r10, rdi^^^shr     r10, 9^^^cmp     r10, 14h^^^ja      short loc_4073A0^^^add     r10, 5Bh^^^cmp     r10, rdx^^^jnz     loc_407270^^^lea     rdi, [rdx+rdx+5]^^^mov     rdi, [rbx+rdi*8]^^^mov     rdi, [rdi+8]^^^mov     r10, rdi^^^shr     r10, 6^^^cmp     r10, 30h^^^ja      short loc_4073C0^^^add     r10, 30h^^^cmp     r10, rdx^^^jnz     loc_407270^^^jmp     loc_4072D3^^^mov     r10, rdi^^^shr     r10, 0Ch^^^cmp     r10, 0Ah^^^ja      short loc_4073D8^^^add     r10, 6Eh^^^jmp     loc_407261^^^mov     r10, rdi^^^shr     r10, 9^^^cmp     r10, 14h^^^ja      short loc_4073F0^^^add     r10, 5Bh^^^jmp     short loc_407388^^^mov     r10, rdi^^^shr     r10, 0Fh^^^cmp     r10, 4^^^ja      short loc_407410^^^add     r10, 77h^^^jmp     loc_407261^^^mov     r10, rdi^^^shr     r10, 0Ch^^^cmp     r10, 0Ah^^^ja      loc_40758F^^^add     r10, 6Eh^^^jmp     short loc_407388^^^shr     rdi, 12h^^^lea     r10, [rdi+7Ch]^^^cmp     rdi, 2^^^cmova   r10, r9^^^jmp     loc_407261^^^mov     rcx, [rbx+8]^^^cmp     rcx, 2^^^jg      short loc_407475^^^mov     rax, cs:qword_6C2148^^^cmp     rax, offset qword_6C2138^^^jz      short loc_407475^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, [rax+8]^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^cmp     rdx, 3FFh^^^jbe     short loc_407469^^^mov     qword ptr [rax+20h], 0^^^mov     qword ptr [rax+28h], 0^^^mov     rax, [rax+10h]^^^cmp     rax, offset qword_6C2138^^^jnz     short loc_407448^^^mov     rax, [rbx+820h]^^^test    rcx, rcx^^^mov     cs:qword_6C29D0, rax^^^movsxd  rax, dword ptr [rbx+828h]^^^mov     cs:qword_6C2958, rax^^^mov     rax, [rbx+830h]^^^mov     cs:mp_, rax^^^mov     rax, [rbx+838h]^^^mov     cs:qword_6C2988, rax^^^mov     eax, [rbx+840h]^^^mov     cs:dword_6C29AC, eax^^^mov     rax, [rbx+848h]^^^mov     cs:qword_6C2990, rax^^^mov     eax, [rbx+850h]^^^mov     cs:check_action, eax^^^mov     rax, [rbx+858h]^^^mov     cs:qword_6C2960, rax^^^mov     eax, [rbx+868h]^^^mov     cs:dword_6C29A8, eax^^^mov     eax, [rbx+86Ch]^^^mov     cs:dword_6C29B0, eax^^^mov     rax, [rbx+870h]^^^mov     cs:qword_6C29B8, rax^^^mov     rax, [rbx+878h]^^^mov     cs:qword_6C29C0, rax^^^jle     short loc_407536^^^mov     edi, [rbx+880h]^^^test    edi, edi^^^jz      loc_4075BA^^^mov     esi, cs:using_malloc_checking^^^test    esi, esi^^^jz      loc_407603^^^cmp     qword ptr [rbx+8], 3^^^jle     short loc_407567^^^mov     rax, [rbx+890h]^^^mov     cs:qword_6C2998, rax^^^mov     rax, [rbx+898h]^^^mov     cs:qword_6C29A0, rax^^^mov     rax, [rbx+8A0h]^^^mov     cs:narenas, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40757F^^^lock dec cs:main_arena^^^jnz     _L_unlock_10434^^^jmp     short loc_40758B^^^dec     cs:main_arena^^^jnz     _L_unlock_10434^^^xor     eax, eax^^^pop     rbx^^^retn^^^mov     r10, rdi^^^shr     r10, 0Fh^^^cmp     r10, 4^^^ja      short loc_4075A5^^^add     r10, 77h^^^jmp     loc_407388^^^shr     rdi, 12h^^^lea     r10, [rdi+7Ch]^^^cmp     rdi, 2^^^cmova   r10, r9^^^jmp     loc_407388^^^mov     edx, cs:using_malloc_checking^^^test    edx, edx^^^jz      loc_407536^^^mov     cs:__malloc_hook, 0^^^mov     cs:__free_hook, 0^^^mov     cs:__realloc_hook, 0^^^mov     cs:__memalign_hook, 0^^^mov     cs:using_malloc_checking, 0^^^jmp     loc_407536^^^mov     ecx, cs:disallow_malloc_check^^^test    ecx, ecx^^^jnz     loc_407536^^^mov     cs:using_malloc_checking, 1^^^mov     cs:__malloc_hook, offset malloc_check^^^mov     cs:__free_hook, offset free_check^^^mov     cs:__realloc_hook, offset realloc_check^^^mov     cs:__memalign_hook, offset memalign_check^^^jmp     loc_407536^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     eax, 0FFFFFFFEh^^^pop     rbx^^^retn^^^mov     ecx, offset __func___12311^^^mov     edx, 1E1h^^^mov     esi, offset aHooks_c^^^mov     edi, offset aMsAv2I30^^^call    __malloc_assert^^^
_L_lock_2750$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42C805^^^
__gconv_transform_ucs4le_internal$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rsi^^^push    r14^^^mov     r14, rdx^^^lea     rdx, [rsi+38h]^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 88h^^^mov     [rsp+0B8h+var_68], rax^^^mov     eax, [rsi+10h]^^^mov     [rsp+0B8h+var_A0], rcx^^^mov     [rsp+0B8h+var_80], r8^^^mov     [rsp+0B8h+var_78], r9^^^mov     ebx, [rsp+0B8h+arg_0]^^^test    al, 1^^^mov     [rsp+0B8h+var_60], rdx^^^mov     [rsp+0B8h+var_98], 0^^^jnz     short loc_45ADB4^^^cmp     qword ptr [rdi+68h], 0^^^mov     rdx, [rdi+90h]^^^mov     [rsp+0B8h+var_98], rdx^^^jz      short loc_45ADB4^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     [rsp+0B8h+var_98], rdx^^^test    ebx, ebx^^^jnz     loc_45B1DC^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     loc_45B23D^^^mov     r13, [r15]^^^mov     rdx, [r15+8]^^^cmp     [rsp+0B8h+var_78], 0^^^mov     [rsp+0B8h+var_70], 0^^^mov     r10d, [rsp+0B8h+arg_8]^^^mov     [rsp+0B8h+var_58], 0^^^mov     [rsp+0B8h+var_88], rdx^^^lea     rdx, [rsp+0B8h+var_58]^^^cmovz   rdx, [rsp+0B8h+var_70]^^^test    r10d, r10d^^^mov     [rsp+0B8h+var_70], rdx^^^jz      short loc_45AE20^^^mov     rdx, [r15+20h]^^^mov     esi, [rdx]^^^test    sil, 7^^^jnz     loc_45B10A^^^nop     dword ptr [rax+00000000h]^^^mov     r12, [r14]^^^mov     rsi, [rsp+0B8h+var_A0]^^^mov     rdx, [rsp+0B8h+var_88]^^^mov     rbx, r13^^^sub     rsi, r12^^^sub     rdx, r13^^^cmp     rsi, rdx^^^cmovle  rdx, rsi^^^lea     rsi, [rdx+3]^^^test    rdx, rdx^^^cmovns  rsi, rdx^^^sar     rsi, 2^^^test    rsi, rsi^^^jz      loc_45B0D6^^^test    al, 2^^^jnz     loc_45B000^^^xor     edx, edx^^^cmp     [rsp+0B8h+var_70], 0^^^mov     rax, r12^^^jz      loc_45AF98^^^xchg    ax, ax^^^mov     ecx, [rax]^^^test    ecx, ecx^^^js      loc_45AFBD^^^add     rdx, 1^^^mov     [rbx], ecx^^^add     rax, 4^^^add     rbx, 4^^^cmp     rsi, rdx^^^jnz     short loc_45AE70^^^cmp     [rsp+0B8h+var_A0], rax^^^mov     [r14], rax^^^jz      loc_45B03D^^^add     rax, 4^^^cmp     [rsp+0B8h+var_A0], rax^^^mov     [rsp+0B8h+var_89], 1^^^mov     [rsp+0B8h+var_90], 7^^^jb      short loc_45AECF^^^lea     rax, [rbx+4]^^^cmp     [rsp+0B8h+var_88], rax^^^jnb     loc_45B29B^^^mov     [rsp+0B8h+var_89], 0^^^mov     [rsp+0B8h+var_90], 5^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     loc_45AFD9^^^mov     rbp, [r15+30h]^^^test    rbp, rbp^^^jz      short loc_45AF12^^^nop     dword ptr [rax+00h]^^^mov     rdi, [rbp+8]^^^test    rdi, rdi^^^jz      short loc_45AF09^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rbp+18h]^^^mov     r8, rbx^^^mov     rcx, r13^^^mov     rdx, [r14]^^^mov     rsi, r12^^^call    qword ptr [rbp+8]^^^mov     rbp, [rbp+20h]^^^test    rbp, rbp^^^jnz     short loc_45AEE8^^^add     dword ptr [r15+14h], 1^^^test    byte ptr [r15+10h], 1^^^jnz     loc_45B1C7^^^cmp     rbx, r13^^^jbe     loc_45B05B^^^mov     rax, [r15]^^^mov     rdi, [rsp+0B8h+var_98]^^^mov     [rsp+0B8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0B8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0B8h+var_B8], 0^^^mov     r9, [rsp+0B8h+var_78]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0B8h+var_48]^^^mov     rsi, [rsp+0B8h+var_60]^^^mov     rdi, [rsp+0B8h+var_68]^^^mov     [rsp+0B8h+var_B0], eax^^^call    [rsp+0B8h+var_98]^^^cmp     eax, 4^^^jz      loc_45B050^^^mov     rdx, [rsp+0B8h+var_48]^^^cmp     rdx, rbx^^^jnz     loc_45B263^^^test    eax, eax^^^jnz     loc_45B271^^^mov     r13, [r15]^^^mov     eax, [r15+10h]^^^jmp     loc_45AE20^^^mov     ecx, [rax]^^^test    ecx, ecx^^^js      short loc_45AFBD^^^xchg    ax, ax^^^add     rdx, 1^^^mov     [rbx], ecx^^^add     rax, 4^^^add     rbx, 4^^^cmp     rsi, rdx^^^jz      loc_45AE8D^^^mov     ecx, [rax]^^^test    ecx, ecx^^^jns     short loc_45AFA0^^^cmp     [rsp+0B8h+var_80], 0^^^mov     rbx, r13^^^mov     [rsp+0B8h+var_89], 0^^^mov     [rsp+0B8h+var_90], 6^^^jz      loc_45AEDB^^^mov     rax, [rsp+0B8h+var_80]^^^mov     [rax], rbx^^^mov     eax, [rsp+0B8h+var_90]^^^add     rsp, 88h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+0B8h+var_70], 0^^^jz      loc_45B0DE^^^xor     eax, eax^^^xchg    ax, ax^^^mov     edx, [r12+rax*4]^^^test    edx, edx^^^js      loc_45B1A0^^^mov     [rbx], edx^^^add     rbx, 4^^^add     rax, 1^^^cmp     rsi, rax^^^jnz     short loc_45B010^^^lea     rax, [r12+rsi*4]^^^cmp     [rsp+0B8h+var_A0], rax^^^mov     [r14], rax^^^jnz     loc_45AE9B^^^mov     [rsp+0B8h+var_89], 0^^^mov     [rsp+0B8h+var_90], 4^^^jmp     loc_45AECF^^^cmp     [rsp+0B8h+var_90], 5^^^jz      loc_45AF8C^^^cmp     [rsp+0B8h+var_89], 0^^^jz      loc_45AFE1^^^mov     r9d, [rsp+0B8h+arg_8]^^^test    r9d, r9d^^^jz      loc_45AFE1^^^mov     rdx, [r14]^^^mov     rax, [rsp+0B8h+var_A0]^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45B282^^^xor     ecx, ecx^^^cmp     [rsp+0B8h+var_A0], rdx^^^mov     rax, rdx^^^jbe     loc_45B199^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r15+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, [rsp+0B8h+var_A0]^^^mov     [r14], rax^^^jnz     short loc_45B09C^^^sub     eax, edx^^^mov     rcx, [r15+20h]^^^mov     [rsp+0B8h+var_90], 7^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^jmp     loc_45AFE1^^^mov     rax, r12^^^jmp     loc_45AE8D^^^mov     rax, r12^^^xor     edx, edx^^^nop     dword ptr [rax+rax+00h]^^^mov     ecx, [rax]^^^test    ecx, ecx^^^js      loc_45AFBD^^^add     rdx, 1^^^mov     [rbx], ecx^^^add     rax, 4^^^add     rbx, 4^^^cmp     rsi, rdx^^^jnz     short loc_45B0E8^^^jmp     loc_45AE8D^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     loc_45B1AE^^^mov     rcx, rsi^^^mov     r12, [r14]^^^and     ecx, 7^^^cmp     [rsp+0B8h+var_A0], r12^^^jbe     short loc_45B14E^^^cmp     rcx, 3^^^ja      short loc_45B14E^^^movzx   edi, byte ptr [r12]^^^add     r12, 1^^^mov     [rdx+rcx+4], dil^^^add     rcx, 1^^^mov     [r14], r12^^^cmp     rcx, 3^^^ja      short loc_45B14E^^^cmp     [rsp+0B8h+var_A0], r12^^^ja      short loc_45B12C^^^cmp     rcx, 3^^^jbe     loc_45B2C9^^^cmp     byte ptr [rdx+7], 80h^^^ja      loc_45B2B4^^^movzx   eax, byte ptr [rdx+4]^^^mov     [r13+0], al^^^movzx   eax, byte ptr [rdx+5]^^^mov     [r13+1], al^^^movzx   eax, byte ptr [rdx+6]^^^mov     [r13+2], al^^^movzx   eax, byte ptr [rdx+7]^^^mov     [r13+3], al^^^mov     esi, [rdx]^^^add     r13, 4^^^mov     r12, [r14]^^^and     esi, 0FFFFFFF8h^^^mov     [rdx], esi^^^mov     eax, [r15+10h]^^^jmp     loc_45AE23^^^xor     eax, eax^^^jmp     loc_45B0BC^^^mov     rdx, [rsp+0B8h+var_70]^^^add     qword ptr [rdx], 1^^^jmp     loc_45B022^^^mov     ecx, offset __PRETTY_FUNCTION___11890^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0B8h+var_78]^^^mov     [r15], rbx^^^mov     rax, [rsp+0B8h+var_58]^^^add     [rdx], rax^^^jmp     loc_45B05B^^^cmp     [rsp+0B8h+var_80], 0^^^jnz     short loc_45B24A^^^mov     rax, [r15+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [r15+10h], 1^^^mov     [rsp+0B8h+var_90], 0^^^jnz     loc_45AFE1^^^mov     rdi, [rsp+0B8h+var_98]^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0B8h+arg_8]^^^mov     [rsp+0B8h+var_B8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0B8h+var_78]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0B8h+var_60]^^^mov     rdi, [rsp+0B8h+var_68]^^^mov     [rsp+0B8h+var_B0], eax^^^call    [rsp+0B8h+var_98]^^^mov     [rsp+0B8h+var_90], eax^^^jmp     loc_45AFE1^^^mov     rdx, [rsp+0B8h+var_80]^^^mov     r13, [rdx]^^^jmp     loc_45ADCB^^^mov     ecx, offset __PRETTY_FUNCTION___11890^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^sub     rdx, rbx^^^add     [r14], rdx^^^test    eax, eax^^^jz      loc_45AF8C^^^cmp     eax, 7^^^mov     [rsp+0B8h+var_90], eax^^^setz    [rsp+0B8h+var_89]^^^jmp     loc_45B05B^^^mov     ecx, offset __PRETTY_FUNCTION___11890^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11835^^^mov     edx, 28Fh^^^mov     esi, offset aGconv_simple_c^^^mov     edi, offset aOutptrp4Outend^^^call    __assert_fail^^^test    al, 2^^^mov     [rsp+0B8h+var_90], 6^^^jz      loc_45AFE1^^^jmp     loc_45B18B^^^and     esi, 0FFFFFFF8h^^^mov     [rsp+0B8h+var_90], 7^^^or      esi, ecx^^^mov     [rdx], esi^^^jmp     loc_45AFE1^^^
__gconv_get_alias_db$$$mov     rax, cs:__gconv_alias_db^^^retn^^^
_L_unlock_88$$$lea     rdi, [rbx+4]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_44C076^^^
expand_dynamic_string_token$$$mov     [rsp+var_30], rbx^^^mov     rbx, rsi^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     rbp, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^mov     esi, 24h^^^sub     rsp, 48h^^^mov     rdi, rbx^^^mov     r12d, edx^^^call    sub_4003C0^^^test    rax, rax^^^jnz     short loc_450B15^^^mov     rdi, rbx^^^call    strlen^^^lea     rbp, [rax+1]^^^mov     rdi, rbp^^^call    malloc^^^test    rax, rax^^^jz      short loc_450AF0^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rbp, [rsp+48h+var_28]^^^mov     rbx, [rsp+48h+var_30]^^^mov     r12, [rsp+48h+var_20]^^^mov     rdi, rax^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^jmp     memcpy^^^xor     eax, eax^^^mov     rbx, [rsp+48h+var_30]^^^mov     rbp, [rsp+48h+var_28]^^^mov     r12, [rsp+48h+var_20]^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     esi, r12d^^^mov     rdi, rax^^^call    _dl_dst_count^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_450A9D^^^or      r14, 0FFFFFFFFFFFFFFFFh^^^xor     r13d, r13d^^^mov     rdi, rbx^^^mov     rcx, r14^^^mov     eax, r13d^^^repne scasb^^^not     rcx^^^add     rcx, r14^^^test    rbp, rbp^^^mov     [rsp+48h+var_40], rcx^^^jz      loc_450C15^^^mov     rdi, [rbp+338h]^^^test    rdi, rdi^^^jz      loc_450BE8^^^xor     ecx, ecx^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_450B79^^^mov     rcx, r14^^^mov     eax, r13d^^^repne scasb^^^not     rcx^^^sub     rcx, 1^^^cmp     cs:_dl_platformlen, 10h^^^mov     eax, 10h^^^mov     rdx, [rsp+48h+var_40]^^^cmovnb  rax, cs:_dl_platformlen^^^cmp     rax, rcx^^^cmovb   rax, rcx^^^sub     rax, 4^^^imul    rax, r15^^^lea     rdi, [rdx+rax+1]^^^call    malloc^^^test    rax, rax^^^jz      loc_450AF0^^^mov     ecx, r12d^^^mov     rsi, rbx^^^mov     rdi, rbp^^^mov     rbx, [rsp+48h+var_30]^^^mov     rbp, [rsp+48h+var_28]^^^mov     rdx, rax^^^mov     r12, [rsp+48h+var_20]^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^jmp     _dl_dst_substitute^^^mov     rax, [rbp+8]^^^cmp     byte ptr [rax], 0^^^jnz     short loc_450C40^^^call    _dl_get_origin^^^mov     rdi, rax^^^mov     [rbp+338h], rax^^^lea     rax, [rax-1]^^^xor     ecx, ecx^^^cmp     rax, 0FFFFFFFFFFFFFFFDh^^^ja      loc_450B79^^^jmp     loc_450B6A^^^call    _dl_get_origin^^^mov     rdi, rax^^^lea     rax, [rax+r14]^^^xor     ecx, ecx^^^cmp     rax, 0FFFFFFFFFFFFFFFDh^^^ja      loc_450B79^^^mov     rcx, r14^^^mov     eax, r13d^^^repne scasb^^^not     rcx^^^add     rcx, r14^^^jmp     loc_450B79^^^mov     ecx, offset __PRETTY_FUNCTION___11013^^^mov     edx, 1B6h^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aLL_name000^^^call    __assert_fail^^^
sub_40EAE2$$$mov     eax, 10h^^^pop     rbx^^^retn^^^
_IO_sputbackc$$$push    rbx^^^mov     rdx, [rdi+8]^^^mov     rbx, rdi^^^cmp     rdx, [rdi+18h]^^^jbe     short loc_42C6E7^^^movzx   eax, byte ptr [rdx-1]^^^cmp     al, sil^^^jz      short loc_42C700^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rax+30h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42C6FC^^^and     dword ptr [rbx], 0FFFFFFEFh^^^pop     rbx^^^retn^^^sub     rdx, 1^^^movzx   eax, al^^^mov     [rdi+8], rdx^^^jmp     short loc_42C6F9^^^
_nl_select_era_entry$$$push    rbx^^^mov     ebx, edi^^^sub     rsp, 10h^^^mov     rdx, [rsi+28h]^^^test    rdx, rdx^^^jz      short loc_44BCE0^^^mov     r10d, [rdx+10h]^^^test    r10d, r10d^^^jz      short loc_44BCE0^^^movsxd  rbx, ebx^^^mov     r8, [rdx]^^^lea     rax, [rbx+rbx*8]^^^lea     rax, [r8+rax*8]^^^add     rsp, 10h^^^pop     rbx^^^retn^^^mov     r9d, [rsi+1D0h]^^^test    r9d, r9d^^^jnz     short loc_44BCF8^^^xor     eax, eax^^^test    rdx, rdx^^^jnz     short loc_44BCC9^^^jmp     short loc_44BCD7^^^mov     rdi, rsi^^^mov     [rsp+18h+var_10], rsi^^^call    _nl_init_era_entries_part_0^^^mov     rsi, [rsp+18h+var_10]^^^xor     eax, eax^^^mov     rdx, [rsi+28h]^^^test    rdx, rdx^^^jnz     short loc_44BCC9^^^jmp     short loc_44BCD7^^^
dlclose_doit$$$jmp     _dl_close^^^
fwrite$$$mov     [rsp+var_8], r13^^^mov     r13, rdx^^^mov     [rsp+var_20], rbx^^^imul    r13, rsi^^^mov     [rsp+var_18], rbp^^^mov     [rsp+var_10], r12^^^sub     rsp, 28h^^^mov     r8, rdi^^^mov     r12, rsi^^^mov     rbp, rdx^^^mov     rbx, rcx^^^test    r13, r13^^^jz      loc_425E20^^^mov     eax, [rcx]^^^and     eax, 8000h^^^jnz     short loc_425D85^^^mov     rdx, [rcx+88h]^^^mov     r9, fs:10h^^^cmp     r9, [rdx+8]^^^jz      short loc_425D81^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425D6D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_50_0^^^jmp     short loc_425D76^^^cmpxchg [rdx], esi^^^jnz     _L_lock_50_0^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r9^^^add     dword ptr [rdx+4], 1^^^mov     eax, [rbx+0C0h]^^^test    eax, eax^^^jz      short loc_425DF0^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_425DFA^^^xor     esi, esi^^^xor     edx, edx^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_425DB8^^^mov     r8, [rbx+88h]^^^mov     eax, [r8+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [r8+4], eax^^^jz      short loc_425E28^^^nop     dword ptr [rax]^^^cmp     rdx, r13^^^jz      short loc_425DCD^^^test    sil, sil^^^jnz     short loc_425DCD^^^mov     rax, rdx^^^xor     edx, edx^^^div     r12^^^mov     rbp, rax^^^mov     rax, rbp^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     dword ptr [rbx+0C0h], 0FFFFFFFFh^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r13^^^mov     rsi, r8^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, rax^^^setz    sil^^^jmp     loc_425D98^^^xor     ebp, ebp^^^jmp     short loc_425DCD^^^mov     qword ptr [r8+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425E41^^^lock dec dword ptr [r8]^^^jnz     short _L_unlock_204^^^jmp     short loc_425E46^^^dec     dword ptr [r8]^^^jnz     short _L_unlock_204^^^jmp     loc_425DB8^^^
dlmopen_doit$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^cmp     qword ptr [rdi], 0^^^jnz     short loc_482B75^^^mov     esi, [rdi+10h]^^^mov     rdx, [rdi+20h]^^^mov     eax, offset unk_49A0C9^^^mov     rdi, [rdi+8]^^^mov     r9, cs:__libc_argv^^^mov     r8d, cs:__libc_argc^^^or      esi, 80000000h^^^test    rdi, rdi^^^cmovz   rdi, rax^^^mov     rax, cs:environ^^^xor     ecx, ecx^^^mov     [rsp+18h+var_18], rax^^^call    _dl_open^^^mov     [rbx+18h], rax^^^add     rsp, 10h^^^pop     rbx^^^retn^^^mov     ecx, offset aInvalidNamespa^^^xor     edx, edx^^^xor     esi, esi^^^mov     edi, 16h^^^call    _dl_signal_error^^^
openat64$$$sub     rsp, 78h        ^^^xor     r10d, r10d^^^test    dl, 40h^^^mov     [rsp+78h+var_20], rcx^^^jnz     short loc_44CE08^^^mov     eax, cs:__libc_multiple_threads^^^test    eax, eax^^^jnz     short loc_44CE40^^^movsxd  rdx, edx^^^movsxd  rdi, edi^^^mov     eax, 101h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44CE2E^^^add     rsp, 78h^^^retn^^^lea     rax, [rsp+78h+arg_0]^^^mov     [rsp+78h+var_58], 20h^^^mov     r10d, dword ptr [rsp+78h+var_20]^^^mov     [rsp+78h+var_50], rax^^^lea     rax, [rsp+78h+var_38]^^^mov     [rsp+78h+var_48], rax^^^jmp     short loc_44CDE1^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_44CE00^^^mov     [rsp+78h+var_78], edx^^^mov     [rsp+78h+var_70], rsi^^^mov     [rsp+78h+var_68], edi^^^mov     [rsp+78h+var_60], r10^^^call    __libc_enable_asynccancel^^^mov     edx, [rsp+78h+var_78]^^^mov     edi, [rsp+78h+var_68]^^^mov     r8d, eax^^^mov     r10, [rsp+78h+var_60]^^^mov     rsi, [rsp+78h+var_70]^^^mov     eax, 101h^^^movsxd  rdx, edx^^^movsxd  rdi, edi^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44CE94^^^mov     edi, r8d^^^mov     dword ptr [rsp+78h+var_60], eax^^^call    __libc_disable_asynccancel^^^mov     eax, dword ptr [rsp+78h+var_60]^^^jmp     loc_44CE00^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_44CE7F^^^
__lll_lock_wait_private$$$push    r10^^^push    rdx^^^xor     r10, r10^^^mov     edx, 2^^^mov     esi, 80h^^^cmp     eax, edx^^^jnz     short loc_4109FB^^^mov     eax, 0CAh^^^syscall^^^mov     eax, edx^^^xchg    eax, [rdi]^^^test    eax, eax^^^jnz     short loc_4109F4^^^pop     rdx^^^pop     r10^^^retn^^^
__printf_fphex$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 188h^^^mov     eax, [rsi]^^^mov     ecx, [rsi+4]^^^mov     [rsp+1B8h+var_154], eax^^^mov     [rsp+1B8h+var_164], ecx^^^movzx   eax, byte ptr [rsi+0Dh]^^^mov     ecx, eax^^^shr     cl, 2^^^mov     r12d, ecx^^^and     r12d, 1^^^test    al, 1^^^jnz     loc_422D80^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     rcx, [rax+40h]^^^mov     eax, [rax+58h]^^^mov     [rsp+1B8h+var_160], rcx^^^mov     [rsp+1B8h+var_158], eax^^^mov     rax, rcx^^^cmp     byte ptr [rax], 0^^^jz      loc_423E9B^^^mov     ecx, [rsp+1B8h+var_158]^^^test    ecx, ecx^^^jz      loc_423E9B^^^movzx   r13d, byte ptr [rbp+0Ch]^^^movzx   r12d, r12b^^^mov     rax, [rdx]^^^test    r13b, 1^^^jz      loc_422FE0^^^mov     r14, [rax]^^^mov     r15d, [rax+8]^^^mov     [rsp+1B8h+var_1B8], r14^^^mov     [rsp+1B8h+var_1B0], r15d^^^mov     [rsp+1B8h+var_68], r14^^^mov     [rsp+1B8h+var_60], r15d^^^call    isnanl^^^test    eax, eax^^^jz      loc_422DB0^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^movsxd  rdx, dword ptr [rbp+8]^^^xor     r9d, r9d^^^cmp     byte ptr [rsp+1B8h+var_60+1], 0^^^mov     r15d, offset unk_49BCE8^^^mov     r14d, offset aNan^^^mov     rax, fs:[rax]^^^sets    r9b^^^movzx   eax, word ptr [rax+rdx*2]^^^mov     edx, offset unk_49BCF8^^^and     eax, 100h^^^mov     eax, offset aNan_0^^^cmovnz  r15, rdx^^^cmovnz  r14, rax^^^test    r9d, r9d^^^jnz     short loc_422B9A^^^test    r13b, 50h^^^mov     r8d, [rsp+1B8h+var_164]^^^jz      short loc_422BA3^^^mov     r8d, [rsp+1B8h+var_164]^^^sub     r8d, 1^^^sub     r8d, 3^^^test    r8d, r8d^^^setnle  r10b^^^jle     loc_423058^^^and     r13d, 20h^^^jnz     loc_423058^^^movsxd  rcx, r8d^^^test    r12d, r12d^^^mov     esi, 20h^^^mov     rdx, rcx^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_180], rcx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^jz      loc_423110^^^call    _IO_wpadn^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^mov     rcx, [rsp+1B8h+var_180]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^cmp     rax, rcx^^^mov     r13d, 0FFFFFFFFh^^^mov     edx, r8d^^^jnz     loc_422D65^^^test    r9d, r9d^^^jz      loc_423063^^^test    r12d, r12d^^^jz      loc_423140^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_423FF3^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_423FF3^^^mov     dword ptr [rcx], 2Dh^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^add     edx, 1^^^test    r12d, r12d^^^jz      loc_4230B0^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r15]^^^test    rax, rax^^^jz      loc_4238E7^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4238E7^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r15+4]^^^test    rax, rax^^^jz      loc_424048^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_424048^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r15+8]^^^test    rax, rax^^^jz      loc_424017^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_424017^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r13d, 0FFFFFFFFh^^^jnz     short loc_422D65^^^test    r10b, r10b^^^lea     r13d, [rdx+3]^^^jz      short loc_422D65^^^test    byte ptr [rbp+0Ch], 20h^^^jz      short loc_422D65^^^movsxd  rbp, r8d^^^test    r12d, r12d^^^mov     esi, 20h^^^mov     rdx, rbp^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^jz      loc_423130^^^call    _IO_wpadn^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^add     r8d, r13d^^^mov     r13d, 0FFFFFFFFh^^^cmp     rax, rbp^^^cmovz   r13d, r8d^^^add     rsp, 188h^^^mov     eax, r13d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFB0h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     rcx, [rax+50h]^^^mov     eax, [rax+198h]^^^mov     [rsp+1B8h+var_160], rcx^^^mov     [rsp+1B8h+var_158], eax^^^mov     rax, rcx^^^jmp     loc_422AED^^^mov     [rsp+1B8h+var_1B8], r14^^^mov     [rsp+1B8h+var_1B0], r15d^^^call    isinfl^^^test    eax, eax^^^jnz     loc_422F9D^^^xor     edx, edx^^^mov     [rsp+1B8h+var_50], r15d^^^test    byte ptr [rsp+1B8h+var_50+1], 80h^^^mov     [rsp+1B8h+var_58], r14^^^setnz   dl^^^mov     [rsp+1B8h+var_130], edx^^^and     r13d, 1^^^jnz     loc_423240^^^mov     edi, dword ptr [rsp+1B8h+var_68+4]^^^mov     eax, dword ptr [rsp+1B8h+var_68]^^^lea     r9, [rsp+1B8h+var_128]^^^mov     ecx, offset _itowa_upper_digits^^^lea     r14, [r9+80h]^^^and     edi, 0FFFFFh^^^shl     rdi, 20h^^^or      rdi, rax^^^setz    al^^^cmp     dword ptr [rbp+8], 41h^^^movzx   eax, al^^^mov     dword ptr [rsp+1B8h+var_150], eax^^^mov     eax, offset _itowa_lower_digits^^^cmovnz  rcx, rax^^^mov     rax, rdi^^^nop     dword ptr [rax]^^^mov     rdx, rax^^^shr     rax, 4^^^sub     r14, 4^^^and     edx, 0Fh^^^test    rax, rax^^^mov     edx, [rcx+rdx*4]^^^mov     [r14], edx^^^jnz     short loc_422E40^^^xor     ecx, ecx^^^cmp     dword ptr [rbp+8], 41h^^^lea     r15, [rsp+1B8h+var_A8]^^^mov     edx, 10h^^^mov     [rsp+1B8h+var_170], r9^^^mov     r13, r14^^^lea     rsi, [r15+20h]^^^setz    cl^^^call    _itoa_word^^^mov     r9, [rsp+1B8h+var_170]^^^mov     r10, rax^^^lea     rdx, [r9+4Ch]^^^cmp     r14, rdx^^^jbe     short loc_422ECB^^^nop     dword ptr [rax+00000000h]^^^sub     r14, 4^^^sub     rax, 1^^^cmp     r14, rdx^^^mov     dword ptr [r14], 30h^^^mov     byte ptr [rax], 30h^^^ja      short loc_422E98^^^not     rdx^^^lea     rax, [rdx+r13]^^^shr     rax, 2^^^mov     rdx, rax^^^not     rax^^^neg     rdx^^^add     r10, rax^^^lea     r14, [r13+rdx*4-4]^^^movzx   eax, word ptr [rsp+1B8h+var_68+6]^^^mov     edx, eax^^^and     dx, 7FF0h^^^cmp     dx, 1^^^sbb     edx, edx^^^shr     ax, 4^^^add     edx, 31h^^^and     eax, 7FFh^^^mov     [rsp+1B8h+var_148], dl^^^jnz     loc_4231E0^^^mov     edx, dword ptr [rsp+1B8h+var_150]^^^mov     r13d, 3FEh^^^test    edx, edx^^^jnz     loc_42332B^^^mov     [rsp+1B8h+var_12C], 1^^^cmp     [rsp+1B8h+var_AC], 30h^^^lea     r8, [r15+20h]^^^jnz     short loc_422F37^^^sub     r9, 0FFFFFFFFFFFFFF80h^^^nop     dword ptr [rax]^^^sub     r9, 4^^^sub     r8, 1^^^cmp     dword ptr [r9-4], 30h^^^jz      short loc_422F28^^^cmp     [rsp+1B8h+var_154], 0FFFFFFFFh^^^jz      loc_423B98^^^mov     rax, r8^^^sub     rax, r10^^^mov     [rsp+1B8h+var_138], rax^^^movsxd  rax, [rsp+1B8h+var_154]^^^cmp     rax, [rsp+1B8h+var_138]^^^jge     short loc_422F70^^^cmp     byte ptr [r10+rax], 38h^^^jg      loc_423CF0^^^jz      loc_423CB3^^^movsxd  r13, r13d^^^jmp     loc_423353^^^movapd  xmm0, xmm1^^^movsd   [rsp+1B8h+var_198], xmm1^^^call    isinf^^^test    eax, eax^^^movsd   xmm1, [rsp+1B8h+var_198]^^^jz      loc_4231A8^^^mov     rdx, 0FFFFFFFFFFFFFFE8h^^^movsxd  rcx, dword ptr [rbp+8]^^^mov     r15d, offset unk_49BD08^^^mov     r14d, offset off_49BCD2^^^mov     r9d, eax^^^mov     rdx, fs:[rdx]^^^movzx   edx, word ptr [rdx+rcx*2]^^^mov     ecx, offset unk_49BCD8^^^and     edx, 100h^^^mov     edx, offset aInf^^^cmovz   r15, rcx^^^cmovz   r14, rdx^^^shr     r9d, 1Fh^^^jmp     loc_422B8A^^^movsd   xmm1, qword ptr [rax]^^^movapd  xmm0, xmm1^^^movsd   [rsp+1B8h+var_68], xmm1^^^movsd   [rsp+1B8h+var_198], xmm1^^^call    isnan^^^test    eax, eax^^^movsd   xmm1, [rsp+1B8h+var_198]^^^jz      loc_422F80^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^movsxd  rdx, dword ptr [rbp+8]^^^xor     r9d, r9d^^^cmp     byte ptr [rsp+1B8h+var_68+7], 0^^^mov     r15d, offset unk_49BCF8^^^mov     r14d, offset aNan_0^^^mov     rax, fs:[rax]^^^sets    r9b^^^movzx   eax, word ptr [rax+rdx*2]^^^mov     edx, offset unk_49BCE8^^^and     eax, 100h^^^mov     eax, offset aNan^^^cmovz   r15, rdx^^^cmovz   r14, rax^^^jmp     loc_422B8A^^^xor     edx, edx^^^test    r9d, r9d^^^jnz     loc_422C1E^^^movzx   eax, byte ptr [rbp+0Ch]^^^test    al, 40h^^^jz      loc_423160^^^test    r12d, r12d^^^jz      loc_4231C0^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_424010^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_424010^^^mov     dword ptr [rcx], 2Bh^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^jmp     loc_422C53^^^mov     rax, [rbx+28h]^^^cmp     [rbx+30h], rax^^^movzx   ecx, byte ptr [r14]^^^jbe     loc_4241F8^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rax, [rbx+28h]^^^cmp     [rbx+30h], rax^^^movzx   ecx, byte ptr [r14+1]^^^jbe     loc_424231^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [r14+2]^^^jnb     loc_42426A^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_422D20^^^call    _IO_padn^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^mov     rcx, [rsp+1B8h+var_180]^^^jmp     loc_422C03^^^call    _IO_padn^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^jmp     loc_422D55^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_423FB2^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_422C53^^^test    al, 10h^^^jz      loc_422C56^^^test    r12d, r12d^^^jz      loc_423218^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4241EE^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4241EE^^^mov     dword ptr [rcx], 20h^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^jmp     loc_422C53^^^pmovmskb ecx, xmm1^^^and     ecx, 80h^^^mov     [rsp+1B8h+var_130], ecx^^^jmp     loc_422DEA^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4242DC^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_422C53^^^cmp     eax, 3FEh^^^jg      loc_4238D0^^^mov     r13d, 3FFh^^^mov     [rsp+1B8h+var_12C], 1^^^sub     r13d, eax^^^mov     eax, dword ptr [rsp+1B8h+var_150]^^^test    eax, eax^^^jz      loc_422F13^^^movsxd  r13, r13d^^^jmp     loc_423339^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4242A3^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_422C53^^^mov     eax, dword ptr [rsp+1B8h+var_68+4]^^^mov     r13d, dword ptr [rsp+1B8h+var_68]^^^lea     r15, [rsp+1B8h+var_A8]^^^mov     edx, 10h^^^lea     rsi, [r15+20h]^^^shl     rax, 20h^^^or      r13, rax^^^setz    cl^^^mov     rdi, r13^^^movzx   ecx, cl^^^mov     dword ptr [rsp+1B8h+var_150], ecx^^^xor     ecx, ecx^^^cmp     dword ptr [rbp+8], 41h^^^setz    cl^^^call    _itoa_word^^^cmp     dword ptr [rbp+8], 41h^^^lea     r9, [rsp+1B8h+var_128]^^^mov     ecx, offset _itowa_upper_digits^^^mov     edx, offset _itowa_lower_digits^^^lea     r14, [r9+80h]^^^cmovnz  rcx, rdx^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, r13^^^shr     r13, 4^^^sub     r14, 4^^^and     edx, 0Fh^^^test    r13, r13^^^mov     edx, [rcx+rdx*4]^^^mov     [r14], edx^^^jnz     short loc_4232A8^^^lea     rcx, [r15+10h]^^^mov     rsi, r14^^^cmp     rax, rcx^^^jbe     short loc_4232FB^^^mov     rdx, rax^^^sub     rdx, 1^^^sub     r14, 4^^^cmp     rdx, rcx^^^mov     byte ptr [rdx], 30h^^^mov     dword ptr [r14], 30h^^^ja      short loc_4232D0^^^lea     rdx, [rax-1]^^^sub     rax, rdx^^^sub     rcx, rdx^^^lea     rax, [rax+r15+0Fh]^^^lea     r14, [rsi+rcx*4-4]^^^movzx   edx, byte ptr [rax]^^^lea     r10, [rax+1]^^^movzx   eax, word ptr [rsp+1B8h+var_60]^^^and     eax, 7FFFh^^^mov     [rsp+1B8h+var_148], dl^^^jnz     loc_423B70^^^mov     eax, dword ptr [rsp+1B8h+var_150]^^^mov     r13d, 4001h^^^test    eax, eax^^^jz      loc_422F08^^^xor     r13d, r13d^^^mov     [rsp+1B8h+var_12C], 0^^^cmp     [rsp+1B8h+var_154], 0FFFFFFFFh^^^mov     r8, r10^^^mov     [rsp+1B8h+var_138], 0^^^jz      loc_423BB8^^^lea     rsi, [rsp+1B8h+var_43]^^^xor     ecx, ecx^^^mov     edx, 0Ah^^^mov     rdi, r13^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^call    _itoa_word^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r8, [rsp+1B8h+var_1A0]^^^lea     r15, [rsp+1B8h+var_74]^^^mov     r11, rax^^^mov     rcx, 0CCCCCCCCCCCCCCCDh^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, r13^^^sub     r15, 4^^^mul     rcx^^^shr     rdx, 3^^^lea     rax, [rdx+rdx*4]^^^add     rax, rax^^^sub     r13, rax^^^test    rdx, rdx^^^mov     eax, ds:_itowa_lower_digits[r13*4]^^^mov     r13, rdx^^^mov     [r15], eax^^^jnz     short loc_423398^^^mov     eax, [rsp+1B8h+var_130]^^^lea     rcx, [rsp+1B8h+var_43]^^^mov     [rsp+1B8h+var_150], rcx^^^mov     ecx, r11d^^^sub     ecx, dword ptr [rsp+1B8h+var_150]^^^test    eax, eax^^^movzx   r13d, byte ptr [rbp+0Ch]^^^jz      loc_423970^^^mov     eax, 0FFFFFFFCh^^^mov     edx, [rsp+1B8h+var_164]^^^sub     eax, [rsp+1B8h+var_154]^^^lea     ecx, [rdx+rcx-2]^^^add     ecx, eax^^^mov     eax, [rsp+1B8h+var_154]^^^test    eax, eax^^^jle     loc_423A38^^^test    r12d, r12d^^^mov     eax, 1^^^jnz     short loc_423444^^^mov     rdi, [rsp+1B8h+var_160]^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    strlen^^^mov     r11, [rsp+1B8h+var_178]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^sub     ecx, eax^^^xor     r9d, r9d^^^and     r13d, 20h^^^mov     [rsp+1B8h+var_164], ecx^^^jnz     short loc_4234C3^^^mov     eax, [rsp+1B8h+var_164]^^^test    eax, eax^^^jle     loc_423A50^^^cmp     dword ptr [rbp+10h], 30h^^^jz      loc_423A50^^^movsxd  rcx, [rsp+1B8h+var_164]^^^test    r12d, r12d^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^mov     rdx, rcx^^^mov     [rsp+1B8h+var_180], rcx^^^jz      loc_423C48^^^call    _IO_wpadn^^^mov     rcx, [rsp+1B8h+var_180]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^cmp     rax, rcx^^^mov     r13d, 0FFFFFFFFh^^^mov     r9d, [rsp+1B8h+var_164]^^^jnz     loc_422D65^^^mov     r13d, [rsp+1B8h+var_130]^^^test    r13d, r13d^^^jz      loc_423988^^^test    r12d, r12d^^^jz      loc_423A60^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4242D2^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_4242D2^^^mov     dword ptr [rdx], 2Dh^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^add     r9d, 1^^^test    r12d, r12d^^^jz      loc_4239D0^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4243F0^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_4243F0^^^mov     dword ptr [rdx], 30h^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^mov     esi, [rbp+8]^^^add     esi, 17h^^^test    r12d, r12d^^^jz      loc_4239F0^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_424383^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_424383^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx], esi^^^setz    cl^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, cl^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^add     r9d, 2^^^test    byte ptr [rbp+0Ch], 20h^^^jnz     short loc_423609^^^mov     edi, [rsp+1B8h+var_164]^^^test    edi, edi^^^jle     short loc_423609^^^cmp     dword ptr [rbp+10h], 30h^^^jnz     short loc_423609^^^movsxd  rcx, [rsp+1B8h+var_164]^^^test    r12d, r12d^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^mov     rdx, rcx^^^mov     [rsp+1B8h+var_180], rcx^^^jz      loc_423C90^^^call    _IO_wpadn^^^mov     rcx, [rsp+1B8h+var_180]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^cmp     rax, rcx^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^add     r9d, [rsp+1B8h+var_164]^^^test    r12d, r12d^^^movsx   esi, [rsp+1B8h+var_148]^^^jz      loc_423A10^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4240EF^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_4240EF^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx], esi^^^setz    cl^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, cl^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^mov     esi, [rsp+1B8h+var_154]^^^lea     ecx, [r9+1]^^^test    esi, esi^^^jle     loc_423AC8^^^test    r12d, r12d^^^jnz     loc_423920^^^mov     rdi, [rsp+1B8h+var_160]^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    strlen^^^test    rax, rax^^^mov     r13, rax^^^mov     rdx, [rsp+1B8h+var_160]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jz      short loc_4236E0^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^mov     rax, [rbx+28h]^^^add     rdx, 1^^^cmp     rax, [rbx+30h]^^^jnb     loc_423F0E^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     ecx, 1^^^sub     r13, 1^^^jnz     short loc_4236B0^^^nop     dword ptr [rax+00000000h]^^^mov     edx, [rsp+1B8h+var_154]^^^test    edx, edx^^^jle     loc_423792^^^movsxd  rdx, [rsp+1B8h+var_154]^^^mov     r13, [rsp+1B8h+var_138]^^^cmp     rdx, [rsp+1B8h+var_138]^^^cmovle  r13, rdx^^^test    r12d, r12d^^^jnz     loc_423AE0^^^test    r13, r13^^^mov     r14, r10^^^jz      short loc_42374A^^^nop     word ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [r14]^^^mov     rax, [rbx+28h]^^^add     r14, 1^^^cmp     rax, [rbx+30h]^^^jnb     loc_4242E6^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     ecx, 1^^^sub     r13, 1^^^jnz     short loc_423720^^^sub     r10, r8^^^lea     r14, [rdx+r10]^^^test    r14, r14^^^jle     short loc_423792^^^test    r12d, r12d^^^mov     rdx, r14^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_178], r11^^^jz      loc_423DC9^^^call    _IO_wpadn^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r11, [rsp+1B8h+var_178]^^^cmp     rax, r14^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^add     ecx, eax^^^mov     esi, [rbp+8]^^^add     esi, 0Fh^^^test    r12d, r12d^^^jz      loc_423B48^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_424353^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_424353^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx], esi^^^setz    sil^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    sil, sil^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^cmp     [rsp+1B8h+var_12C], 1^^^sbb     eax, eax^^^and     eax, 0FFFFFFFEh^^^add     eax, 2Dh^^^cmp     [rsp+1B8h+var_12C], 1^^^sbb     edi, edi^^^and     edi, 0FFFFFFFEh^^^add     edi, 2Dh^^^test    r12d, r12d^^^mov     esi, edi^^^jz      loc_423BC8^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_424199^^^mov     rdi, [rax+20h]^^^cmp     rdi, [rax+28h]^^^jnb     loc_424199^^^mov     [rdi], esi^^^add     rdi, 4^^^mov     [rax+20h], rdi^^^mov     r14, [rsp+1B8h+var_150]^^^lea     r13d, [rcx+2]^^^sub     r14, r11^^^test    r12d, r12d^^^jnz     loc_423BE8^^^test    r14, r14^^^jz      short loc_42387A^^^nop     dword ptr [rax+00h]^^^movzx   edx, byte ptr [r11]^^^mov     rax, [rbx+28h]^^^add     r11, 1^^^cmp     rax, [rbx+30h]^^^jnb     loc_424330^^^mov     [rax], dl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     r13d, 1^^^sub     r14, 1^^^jnz     short loc_423850^^^test    byte ptr [rbp+0Ch], 20h^^^jz      loc_422D65^^^mov     eax, [rsp+1B8h+var_164]^^^mov     esi, [rbp+10h]^^^test    eax, eax^^^jle     loc_422D65^^^cmp     esi, 30h^^^jz      loc_422D65^^^movsxd  rbp, [rsp+1B8h+var_164]^^^test    r12d, r12d^^^mov     rdi, rbx^^^mov     rdx, rbp^^^jz      loc_423E20^^^call    _IO_wpadn^^^mov     edx, [rsp+1B8h+var_164]^^^add     edx, r13d^^^mov     r13d, 0FFFFFFFFh^^^cmp     rax, rbp^^^cmovz   r13d, edx^^^jmp     loc_422D65^^^lea     r13d, [rax-3FFh]^^^mov     [rsp+1B8h+var_12C], 0^^^jmp     loc_4231FF^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^setz    sil^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jmp     loc_422C91^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_423ECF^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_423ECF^^^mov     ecx, [rsp+1B8h+var_158]^^^cmp     ecx, 0FFFFFFFFh^^^mov     [rdx], ecx^^^setz    cl^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, cl^^^mov     r13d, 0FFFFFFFFh^^^jnz     loc_422D65^^^lea     ecx, [r9+2]^^^jmp     loc_4236E0^^^xor     edx, edx^^^test    r13b, 50h^^^mov     eax, 0FFFFFFFDh^^^setnz   dl^^^sub     eax, edx^^^jmp     loc_4233F0^^^movzx   eax, byte ptr [rbp+0Ch]^^^test    al, 40h^^^jz      loc_423A80^^^test    r12d, r12d^^^jz      loc_423C70^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_424413^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_424413^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^jmp     loc_423509^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4243A4^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_423542^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_42412A^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_42358D^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4242AD^^^movzx   ecx, [rsp+1B8h+var_148]^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_423653^^^test    r13b, 8^^^jnz     loc_42340A^^^jmp     loc_423446^^^xor     r9d, r9d^^^jmp     loc_4234C3^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_424079^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_423509^^^test    al, 10h^^^jz      loc_42350D^^^test    r12d, r12d^^^jz      loc_423DDC^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_424169^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_424169^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^jmp     loc_423509^^^test    byte ptr [rbp+0Ch], 8^^^jz      loc_423792^^^jmp     loc_423663^^^test    r13, r13^^^jnz     short loc_423AFD^^^jmp     loc_42374A^^^add     ecx, 1^^^sub     r13, 1^^^jz      loc_42374A^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r14]^^^add     r14, 4^^^test    rax, rax^^^jz      loc_423F5B^^^mov     rdi, [rax+20h]^^^cmp     rdi, [rax+28h]^^^jnb     loc_423F5B^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdi], esi^^^setz    sil^^^add     rdi, 4^^^mov     [rax+20h], rdi^^^test    sil, sil^^^jz      short loc_423AF0^^^mov     r13d, 0FFFFFFFFh^^^jmp     loc_422D65^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4240C5^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_4237DF^^^cmp     eax, 4001h^^^jle     loc_423DB0^^^lea     r13d, [rax-4002h]^^^mov     [rsp+1B8h+var_12C], 0^^^jmp     loc_4231FF^^^mov     rcx, r8^^^movsxd  r13, r13d^^^sub     rcx, r10^^^mov     [rsp+1B8h+var_138], rcx^^^mov     [rsp+1B8h+var_154], ecx^^^jmp     loc_423353^^^mov     [rsp+1B8h+var_154], 0^^^jmp     loc_423353^^^mov     rdx, [rbx+28h]^^^cmp     rdx, [rbx+30h]^^^jnb     loc_4241CA^^^mov     [rdx], al^^^add     rdx, 1^^^mov     [rbx+28h], rdx^^^jmp     loc_423832^^^test    r14, r14^^^jnz     short loc_423C06^^^jmp     loc_42387A^^^add     r13d, 1^^^sub     r14, 1^^^jz      loc_42387A^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r15]^^^add     r15, 4^^^test    rax, rax^^^jz      loc_423F9F^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_423F9F^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx], esi^^^setz    cl^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, cl^^^jz      short loc_423BF8^^^jmp     loc_423B38^^^call    _IO_padn^^^mov     r11, [rsp+1B8h+var_178]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     rcx, [rsp+1B8h+var_180]^^^jmp     loc_4234AF^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_424379^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_423509^^^call    _IO_padn^^^mov     r11, [rsp+1B8h+var_178]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     rcx, [rsp+1B8h+var_180]^^^jmp     loc_4235F5^^^mov     edx, [rsp+1B8h+var_154]^^^add     edx, 1^^^movsxd  rdx, edx^^^cmp     [rsp+1B8h+var_138], rdx^^^jg      short loc_423CF0^^^cmp     [rsp+1B8h+var_154], 0^^^jle     loc_423E77^^^movsx   eax, byte ptr [r10+rax-1]^^^lea     edx, [rax-30h]^^^cmp     edx, 9^^^setnbe  dl^^^and     eax, 1^^^cmp     dl, al^^^jz      loc_422F70^^^nop     dword ptr [rax+00h]^^^mov     r11d, [rsp+1B8h+var_154]^^^sub     r11d, 1^^^js      loc_423D7E^^^movsxd  rsi, r11d^^^lea     rcx, [r10+rsi]^^^movzx   edx, byte ptr [rcx]^^^cmp     dl, 39h^^^jz      loc_423DFA^^^mov     r9, 0FFFFFFFFFFFFFFE0h^^^movsx   rdi, dl^^^mov     rax, fs:[r9]^^^cmp     dword ptr [rax+rdi*4], 65h^^^jle     loc_423E0E^^^lea     rax, [rsi-1]^^^mov     r11d, r11d^^^mov     r15, rax^^^sub     r15, r11^^^jmp     short loc_423D6E^^^movzx   edx, byte ptr [r10+rax]^^^lea     rcx, [r10+rax]^^^cmp     dl, 39h^^^jz      loc_423DFD^^^mov     rsi, fs:[r9]^^^movsx   rdi, dl^^^lea     r11, [rax-1]^^^cmp     dword ptr [rsi+rdi*4], 65h^^^jle     loc_423E11^^^mov     rsi, rax^^^mov     rax, r11^^^cmp     rax, r15^^^mov     byte ptr [rcx], 30h^^^mov     dword ptr [r14+rsi*4], 30h^^^jnz     short loc_423D40^^^cmp     [rsp+1B8h+var_148], 39h^^^jz      loc_423E56^^^mov     rax, 0FFFFFFFFFFFFFFE0h^^^movsx   rdx, [rsp+1B8h+var_148]^^^mov     rax, fs:[rax]^^^cmp     dword ptr [rax+rdx*4], 65h^^^jg      loc_423E2A^^^add     [rsp+1B8h+var_148], 1^^^jmp     loc_422F70^^^mov     r13d, 4002h^^^mov     [rsp+1B8h+var_12C], 1^^^sub     r13d, eax^^^jmp     loc_4231FF^^^call    _IO_padn^^^mov     r11, [rsp+1B8h+var_178]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^jmp     loc_423781^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_42418F^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_423509^^^mov     rax, rsi^^^mov     edx, [rbp+8]^^^mov     [r14+rax*4], edx^^^mov     eax, [rbp+8]^^^mov     [rcx], al^^^jmp     loc_422F70^^^mov     rax, rsi^^^add     edx, 1^^^mov     [rcx], dl^^^add     dword ptr [r14+rax*4], 1^^^jmp     loc_422F70^^^call    _IO_padn^^^jmp     loc_4238B5^^^mov     eax, [rsp+1B8h+var_12C]^^^test    eax, eax^^^jz      short loc_423E66^^^sub     r13d, 4^^^test    r13d, r13d^^^jle     short loc_423EB4^^^movsxd  r13, r13d^^^mov     [rsp+1B8h+var_148], 31h^^^mov     [rsp+1B8h+var_12C], 1^^^jmp     loc_423353^^^movzx   edx, byte ptr [rbp+8]^^^movsxd  r13, r13d^^^mov     [rsp+1B8h+var_148], dl^^^jmp     loc_423353^^^add     r13d, 4^^^mov     [rsp+1B8h+var_148], 31h^^^movsxd  r13, r13d^^^jmp     loc_423353^^^jnz     loc_422F70^^^movsx   eax, [rsp+1B8h+var_148]^^^lea     edx, [rax-30h]^^^cmp     edx, 9^^^setnbe  dl^^^and     eax, 1^^^cmp     dl, al^^^jnz     loc_423D7E^^^jmp     loc_422F70^^^mov     ecx, offset __PRETTY_FUNCTION___14127^^^mov     edx, 0A6h^^^mov     esi, offset a__StdioCommonP^^^mov     edi, offset aDecimal0Decima^^^call    __assert_fail^^^neg     r13d^^^mov     [rsp+1B8h+var_148], 31h^^^mov     [rsp+1B8h+var_12C], 0^^^movsxd  r13, r13d^^^jmp     loc_423353^^^mov     esi, [rsp+1B8h+var_158]^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^add     eax, 1^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^setz    cl^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jmp     loc_423952^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_170], rdx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     rdx, [rsp+1B8h+var_170]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jnz     loc_4236D0^^^mov     r13d, eax^^^jmp     loc_422D65^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_170], rdx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^add     eax, 1^^^mov     rdx, [rsp+1B8h+var_170]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^setz    sil^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jmp     loc_423B33^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^setz    cl^^^jmp     loc_423C3B^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __overflow^^^add     eax, 1^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^setz    al^^^or      r13d, 0FFFFFFFFh^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^test    al, al^^^jnz     loc_422D65^^^jmp     loc_422C53^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __woverflow^^^jmp     short loc_423FCD^^^mov     esi, 2Bh^^^jmp     short loc_423FF8^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^setz    sil^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jmp     loc_422D15^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^setz    sil^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jmp     loc_422CD3^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^add     eax, 1^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^setz    al^^^or      r13d, 0FFFFFFFFh^^^mov     r10, [rsp+1B8h+var_198]^^^test    al, al^^^mov     r11, [rsp+1B8h+var_178]^^^jnz     loc_422D65^^^jmp     loc_423509^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^add     eax, 1^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r11, [rsp+1B8h+var_178]^^^setz    sil^^^jmp     loc_4237D0^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^add     eax, 1^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^setz    cl^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jmp     loc_423645^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^add     eax, 1^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^setz    cl^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jmp     loc_42357F^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^jmp     loc_42409A^^^mov     esi, 20h^^^jmp     loc_42407E^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r11, [rsp+1B8h+var_178]^^^add     eax, 1^^^setz    al^^^or      r13d, 0FFFFFFFFh^^^test    al, al^^^jnz     loc_422D65^^^jmp     loc_423832^^^mov     esi, edi^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^add     eax, 1^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r11, [rsp+1B8h+var_178]^^^setz    al^^^jmp     short loc_4241B9^^^mov     esi, 20h^^^jmp     loc_423FF8^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jnz     loc_4230CC^^^jmp     loc_422D65^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jnz     loc_4230E9^^^jmp     loc_422D65^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_170], edx^^^mov     dword ptr [rsp+1B8h+var_1A0], r8d^^^mov     byte ptr [rsp+1B8h+var_198], r10b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^mov     edx, dword ptr [rsp+1B8h+var_170]^^^mov     r8d, dword ptr [rsp+1B8h+var_1A0]^^^movzx   r10d, byte ptr [rsp+1B8h+var_198]^^^jnz     loc_422D20^^^jmp     loc_422D65^^^mov     esi, 20h^^^jmp     loc_423FB7^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^jmp     loc_42410B^^^mov     esi, 2Dh^^^jmp     loc_42416E^^^mov     esi, 2Bh^^^jmp     loc_423FB7^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_170], rdx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     rdx, [rsp+1B8h+var_170]^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r10, [rsp+1B8h+var_198]^^^mov     r11, [rsp+1B8h+var_178]^^^jnz     loc_423741^^^jmp     loc_423F53^^^movzx   esi, dl^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r11, [rsp+1B8h+var_178]^^^jnz     loc_423870^^^jmp     loc_423F53^^^mov     rdi, rbx^^^mov     dword ptr [rsp+1B8h+var_180], ecx^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, dword ptr [rsp+1B8h+var_180]^^^mov     r11, [rsp+1B8h+var_178]^^^setz    sil^^^jmp     loc_4237D0^^^mov     esi, 2Bh^^^jmp     loc_42407E^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^jmp     loc_42414A^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __overflow^^^add     eax, 1^^^mov     r8, [rsp+1B8h+var_1A0]^^^mov     r9d, dword ptr [rsp+1B8h+var_170]^^^setz    al^^^or      r13d, 0FFFFFFFFh^^^mov     r10, [rsp+1B8h+var_198]^^^test    al, al^^^mov     r11, [rsp+1B8h+var_178]^^^jnz     loc_422D65^^^jmp     loc_423542^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rsp+1B8h+var_1A0], r8^^^mov     dword ptr [rsp+1B8h+var_170], r9d^^^mov     [rsp+1B8h+var_198], r10^^^mov     [rsp+1B8h+var_178], r11^^^call    __woverflow^^^jmp     short loc_4243C5^^^mov     esi, 2Bh^^^jmp     loc_42416E^^^
openlog_internal$$$push    r12^^^test    rdi, rdi^^^push    rbp^^^push    rbx^^^jz      short loc_40F490^^^mov     cs:LogTag, rdi^^^test    edx, edx^^^mov     cs:LogStat, esi^^^jz      short loc_40F4A2^^^test    edx, 0FFFFFC07h^^^jz      short loc_40F508^^^mov     edi, cs:LogFile^^^cmp     edi, 0FFFFFFFFh^^^jz      short loc_40F519^^^mov     r8d, cs:connected^^^test    r8d, r8d^^^jnz     short loc_40F4FD^^^mov     rbx, 0FFFFFFFFFFFFFFC0h^^^mov     edx, 6Eh^^^mov     esi, offset SyslogAddr^^^mov     ebp, fs:[rbx]^^^call    connect^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_40F840^^^mov     r12d, fs:[rbx]^^^mov     edi, cs:LogFile^^^mov     cs:LogFile, eax^^^call    close^^^cmp     r12d, 5Bh^^^mov     fs:[rbx], ebp^^^jz      loc_40F668^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     edi, cs:LogFile^^^mov     cs:LogFacility, edx^^^cmp     edi, 0FFFFFFFFh^^^jnz     short loc_40F4AD^^^test    byte ptr cs:LogStat, 8^^^mov     r11, 676F6C2F7665642Fh^^^mov     cs:SyslogAddr, 1^^^mov     cs:qword_6C49E2, r11^^^mov     cs:qword_6C49EA, 0^^^mov     cs:qword_6C49F2, 0^^^mov     cs:qword_6C49FA, 0^^^mov     cs:qword_6C4A02, 0^^^mov     cs:qword_6C4A0A, 0^^^mov     cs:qword_6C4A12, 0^^^mov     cs:qword_6C4A1A, 0^^^mov     cs:qword_6C4A22, 0^^^mov     cs:qword_6C4A2A, 0^^^mov     cs:qword_6C4A32, 0^^^mov     cs:qword_6C4A3A, 0^^^mov     cs:qword_6C4A42, 0^^^mov     cs:dword_6C4A4A, 0^^^jz      loc_40F4FD^^^mov     r10d, cs:__have_sock_cloexec^^^test    r10d, r10d^^^js      loc_40F6F8^^^mov     esi, cs:LogType^^^xor     edx, edx^^^mov     edi, 1^^^or      esi, 80000h^^^call    socket^^^mov     edi, eax^^^mov     cs:LogFile, eax^^^mov     eax, cs:__have_sock_cloexec^^^test    eax, eax^^^jnz     short loc_40F61C^^^cmp     edi, 0FFFFFFFFh^^^jz      loc_40F890^^^mov     eax, 1^^^mov     cs:__have_sock_cloexec, eax^^^test    eax, eax^^^js      loc_40F6F8^^^cmp     edi, 0FFFFFFFFh^^^jz      loc_40F4FD^^^mov     r9d, cs:__have_sock_cloexec^^^test    r9d, r9d^^^jns     loc_40F4AD^^^xor     eax, eax^^^mov     edx, 1^^^mov     esi, 2^^^call    fcntl^^^mov     edi, cs:LogFile^^^cmp     edi, 0FFFFFFFFh^^^jnz     loc_40F4AD^^^jmp     loc_40F4FD^^^xor     esi, esi^^^cmp     cs:LogType, 2^^^mov     edi, cs:LogFile^^^setnz   sil^^^add     esi, 1^^^cmp     edi, 0FFFFFFFFh^^^mov     cs:LogType, esi^^^jz      loc_40F720^^^mov     eax, cs:connected^^^test    eax, eax^^^jnz     loc_40F4FD^^^mov     edx, 6Eh^^^mov     esi, offset SyslogAddr^^^mov     ebp, fs:[rbx]^^^call    connect^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_40F840^^^mov     r12d, fs:[rbx]^^^mov     edi, cs:LogFile^^^mov     cs:LogFile, eax^^^call    close^^^cmp     r12d, 5Bh^^^mov     fs:[rbx], ebp^^^jnz     loc_40F4FD^^^xor     eax, eax^^^cmp     cs:LogType, 2^^^pop     rbx^^^pop     rbp^^^pop     r12^^^setnz   al^^^add     eax, 1^^^mov     cs:LogType, eax^^^retn^^^mov     esi, cs:LogType^^^mov     edi, 1^^^xor     edx, edx^^^call    socket^^^mov     edi, eax^^^mov     cs:LogFile, eax^^^jmp     loc_40F624^^^test    byte ptr cs:LogStat, 8^^^mov     rdi, 676F6C2F7665642Fh^^^mov     cs:SyslogAddr, 1^^^mov     cs:qword_6C49E2, rdi^^^mov     cs:qword_6C49EA, 0^^^mov     cs:qword_6C49F2, 0^^^mov     cs:qword_6C49FA, 0^^^mov     cs:qword_6C4A02, 0^^^mov     cs:qword_6C4A0A, 0^^^mov     cs:qword_6C4A12, 0^^^mov     cs:qword_6C4A1A, 0^^^mov     cs:qword_6C4A22, 0^^^mov     cs:qword_6C4A2A, 0^^^mov     cs:qword_6C4A32, 0^^^mov     cs:qword_6C4A3A, 0^^^mov     cs:qword_6C4A42, 0^^^mov     cs:dword_6C4A4A, 0^^^jz      loc_40F4FD^^^mov     ecx, cs:__have_sock_cloexec^^^test    ecx, ecx^^^jns     short loc_40F850^^^mov     esi, cs:LogType^^^mov     edi, 1^^^xor     edx, edx^^^call    socket^^^mov     edi, eax^^^mov     cs:LogFile, eax^^^nop     dword ptr [rax+00000000h]^^^cmp     edi, 0FFFFFFFFh^^^jz      loc_40F4FD^^^mov     edx, cs:__have_sock_cloexec^^^test    edx, edx^^^jns     loc_40F68D^^^xor     eax, eax^^^mov     edx, 1^^^mov     esi, 2^^^call    fcntl^^^mov     edi, cs:LogFile^^^cmp     edi, 0FFFFFFFFh^^^jnz     loc_40F68D^^^jmp     loc_40F4FD^^^mov     cs:connected, 1^^^jmp     loc_40F4FD^^^or      esi, 80000h^^^xor     edx, edx^^^mov     edi, 1^^^call    socket^^^mov     edi, eax^^^mov     cs:LogFile, eax^^^mov     eax, cs:__have_sock_cloexec^^^test    eax, eax^^^jnz     short loc_40F881^^^cmp     edi, 0FFFFFFFFh^^^mov     al, 1^^^jz      short loc_40F8AA^^^mov     cs:__have_sock_cloexec, eax^^^test    eax, eax^^^jns     loc_40F800^^^jmp     loc_40F7DF^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 16h^^^setnz   al^^^movzx   eax, al^^^lea     eax, [rax+rax-1]^^^jmp     loc_40F616^^^xor     eax, eax^^^cmp     dword ptr fs:[rbx], 16h^^^setnz   al^^^lea     eax, [rax+rax-1]^^^jmp     short loc_40F87B^^^
_dl_get_tls_static_info$$$mov     rax, cs:_dl_tls_static_size^^^mov     [rdi], rax^^^mov     rax, cs:_dl_tls_static_align^^^mov     [rsi], rax^^^retn^^^
getpid$$$mov     edx, fs:2D4h^^^cmp     edx, 0^^^jle     short loc_44C461^^^mov     eax, edx^^^rep retn^^^jnz     short loc_44C472^^^mov     eax, fs:2D0h^^^test    eax, eax^^^nop     dword ptr [rax]^^^jnz     short locret_44C45F^^^mov     eax, 27h^^^syscall^^^test    edx, edx^^^jnz     short locret_44C45F^^^mov     fs:2D0h, eax^^^retn^^^
_dl_add_to_slotinfo$$$push    r12^^^mov     r12, cs:_dl_tls_dtv_slotinfo_list^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, [rdi+448h]^^^jmp     short loc_4567F3^^^mov     r12, rax^^^mov     rax, [r12]^^^cmp     rbx, rax^^^jb      short loc_456849^^^sub     rbx, rax^^^mov     rax, [r12+8]^^^test    rax, rax^^^jnz     short loc_4567F0^^^test    rbx, rbx^^^jnz     short loc_456887^^^mov     edi, 3F0h^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^mov     [r12+8], rax^^^jz      short loc_45686B^^^lea     rsi, [rax+10h]^^^mov     qword ptr [rax], 3Eh^^^mov     qword ptr [rax+8], 0^^^mov     ecx, 7Ch^^^mov     rax, rbx^^^mov     r12, rdx^^^mov     rdi, rsi^^^rep stosq^^^mov     rax, cs:_dl_tls_generation^^^add     rbx, 1^^^shl     rbx, 4^^^add     rbx, r12^^^add     rax, 1^^^mov     [rbx+8], rbp^^^mov     [rbx], rax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     ecx, offset aCannotCreateTl^^^mov     esi, offset aDlopen^^^mov     edi, 0Ch^^^add     cs:_dl_tls_generation, 1^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___11230^^^mov     edx, 34Ch^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aIdx0^^^call    __assert_fail^^^
_IO_str_pbackfail$$$cmp     esi, 0FFFFFFFFh^^^jnz     short loc_42D670^^^jmp     _IO_default_pbackfail^^^test    byte ptr [rdi], 8^^^jz      short loc_42D665^^^mov     eax, 0FFFFFFFFh^^^retn^^^
main$$$push    rbp^^^mov     rbp, rsp^^^call    fun^^^pop     rbp^^^retn^^^
_dl_cache_libcmp$$$movzx   eax, byte ptr [rdi]^^^movzx   edx, byte ptr [rsi]^^^nop     word ptr [rax+rax+00000000h]^^^test    al, al^^^jz      loc_451D39^^^lea     ecx, [rax-30h]^^^cmp     cl, 9^^^lea     ecx, [rdx-30h]^^^ja      loc_451D18^^^cmp     cl, 9^^^ja      loc_451D4E^^^movsx   eax, al^^^movsx   edx, dl^^^lea     r10, [rsi+1]^^^lea     r8d, [rax-30h]^^^movzx   eax, byte ptr [rdi+1]^^^lea     ecx, [rdx-30h]^^^add     rdi, 1^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^ja      short loc_451CD3^^^nop     dword ptr [rax+00000000h]^^^lea     r8d, [r8+r8*4]^^^movsx   eax, al^^^add     rdi, 1^^^lea     r8d, [rax+r8*2-30h]^^^movzx   eax, byte ptr [rdi]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_451CB8^^^movzx   edx, byte ptr [rsi+1]^^^mov     rsi, r10^^^lea     r9d, [rdx-30h]^^^cmp     r9b, 9^^^ja      short loc_451D03^^^nop     dword ptr [rax+00h]^^^lea     ecx, [rcx+rcx*4]^^^movsx   edx, dl^^^add     rsi, 1^^^lea     ecx, [rdx+rcx*2-30h]^^^movzx   edx, byte ptr [rsi]^^^lea     r9d, [rdx-30h]^^^cmp     r9b, 9^^^jbe     short loc_451CE8^^^cmp     r8d, ecx^^^jz      loc_451C70^^^mov     eax, r8d^^^sub     eax, ecx^^^retn^^^cmp     cl, 9^^^jbe     short loc_451D3F^^^cmp     al, dl^^^jnz     short loc_451D45^^^movzx   eax, byte ptr [rdi+1]^^^movzx   edx, byte ptr [rsi+1]^^^add     rdi, 1^^^add     rsi, 1^^^test    al, al^^^jnz     loc_451C78^^^movsx   eax, dl^^^neg     eax^^^retn^^^mov     eax, 0FFFFFFFFh^^^retn^^^movsx   eax, al^^^movsx   edx, dl^^^sub     eax, edx^^^retn^^^mov     eax, 1^^^retn^^^
maybe_split_for_insert.isra.0$$$cmp     r9d, 1^^^mov     rax, [rdi+10h]^^^jz      loc_44D920^^^test    rax, rax^^^jz      locret_44D918^^^mov     r9, [rdi+8]^^^test    r9, r9^^^jz      locret_44D918^^^test    byte ptr [rax+18h], 1^^^jz      short locret_44D918^^^test    byte ptr [r9+18h], 1^^^jz      locret_44D950^^^or      byte ptr [rdi+18h], 1^^^and     byte ptr [rax+18h], 0FEh^^^mov     rax, [rdi+8]^^^test    rax, rax^^^jz      short loc_44D8BA^^^and     byte ptr [rax+18h], 0FEh^^^test    rsi, rsi^^^jz      short locret_44D918^^^mov     rax, [rsi]^^^movzx   r9d, byte ptr [rax+18h]^^^test    r9b, 1^^^jz      short locret_44D918^^^test    r8d, r8d^^^mov     rsi, [rdx]^^^setnle  r10b^^^test    ecx, ecx^^^setnle  r8b^^^cmp     r10b, r8b^^^jz      short loc_44D930^^^or      r9d, 1^^^mov     [rax+18h], r9b^^^or      byte ptr [rsi+18h], 1^^^and     byte ptr [rdi+18h], 0FEh^^^test    ecx, ecx^^^js      short loc_44D958^^^mov     rcx, [rdi+8]^^^mov     [rax+10h], rcx^^^mov     [rdi+8], rax^^^mov     rax, [rdi+10h]^^^mov     [rsi+8], rax^^^mov     [rdi+10h], rsi^^^mov     [rdx], rdi^^^retn^^^rep retn^^^or      byte ptr [rdi+18h], 1^^^test    rax, rax^^^jnz     short loc_44D8A9^^^jmp     short loc_44D8AD^^^mov     [rdx], rax^^^and     byte ptr [rax+18h], 0FEh^^^or      byte ptr [rsi+18h], 1^^^test    ecx, ecx^^^js      short loc_44D978^^^mov     rdx, [rax+8]^^^mov     [rax+8], rsi^^^mov     [rsi+10h], rdx^^^retn^^^rep retn^^^mov     rcx, [rdi+10h]^^^mov     [rax+8], rcx^^^mov     [rdi+10h], rax^^^mov     rax, [rdi+8]^^^mov     [rsi+10h], rax^^^mov     [rdi+8], rsi^^^jmp     short loc_44D90E^^^mov     rdx, [rax+10h]^^^mov     [rax+10h], rsi^^^mov     [rsi+8], rdx^^^retn^^^
_dl_close_worker$$$push    rbp^^^mov     rcx, 3FFFFFFFFh^^^mov     rsi, 200000000h^^^mov     rax, rcx^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 98h^^^mov     edx, [rdi+310h]^^^sub     edx, 1^^^mov     [rdi+310h], edx^^^and     rax, [rdi+310h]^^^cmp     rax, rsi^^^jz      short loc_48C6E2^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jnz     loc_48D2C8^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     esi, cs:dl_close_state_11944^^^test    esi, esi^^^jnz     loc_48C926^^^mov     r13, [rdi+30h]^^^lea     rdx, [r13+r13*8+0]^^^shl     rdx, 4^^^add     rdx, 6C5FE0h^^^mov     [rbp+var_68], rdx^^^mov     rax, rdx^^^mov     r12d, [rax+8]^^^mov     ecx, 10h^^^xor     edx, edx^^^mov     [rbp+var_70], rsp^^^mov     esi, 10h^^^mov     cs:dl_close_state_11944, 1^^^mov     r15d, r12d^^^lea     rax, [r15+1Eh]^^^div     rcx^^^xor     edx, edx^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rbx, [rsp+0C0h+var_B1]^^^sub     rsp, rax^^^lea     rax, ds:1Eh[r15*8]^^^lea     rcx, [rsp+0C0h+var_B1]^^^div     rsi^^^mov     rdx, [rbp+var_68]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^shl     rax, 4^^^sub     rsp, rax^^^mov     rax, [rdx]^^^xor     edx, edx^^^lea     r14, [rsp+0C0h+var_B1]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^test    rax, rax^^^jz      short loc_48C799^^^mov     rsi, r14^^^nop     dword ptr [rax]^^^mov     [rax+3DCh], edx^^^mov     [rsi], rax^^^add     edx, 1^^^mov     rax, [rax+18h]^^^add     rsi, 8^^^test    rax, rax^^^jnz     short loc_48C780^^^cmp     r12d, edx^^^jnz     loc_48D2AF^^^mov     rdx, r15^^^xor     esi, esi^^^mov     rdi, rbx^^^mov     [rbp-0B8h], rcx^^^call    sub_400390^^^mov     rcx, [rbp-0B8h]^^^mov     rdx, r15^^^xor     esi, esi^^^mov     rdi, rcx^^^call    sub_400390^^^mov     rcx, [rbp-0B8h]^^^mov     edi, 0FFFFFFFFh^^^nop     word ptr [rax+rax+00000000h]^^^add     edi, 1^^^cmp     r12d, edi^^^jbe     loc_48C95C^^^movsxd  rax, edi^^^cmp     byte ptr [rcx+rax], 0^^^mov     r10, [r14+rax*8]^^^jnz     short loc_48C7E0^^^mov     rdx, 3FFFFFFFFh^^^and     rdx, [r10+310h]^^^mov     rsi, 200000000h^^^cmp     rdx, rsi^^^jz      loc_48C938^^^mov     byte ptr [rbx+rax], 1^^^mov     rdx, [r10+3B8h]^^^mov     byte ptr [rcx+rax], 1^^^mov     dword ptr [r10+3DCh], 0FFFFFFFFh^^^test    rdx, rdx^^^jz      short loc_48C895^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jz      short loc_48C895^^^add     rdx, 8^^^nop     dword ptr [rax+00000000h]^^^mov     eax, [rax+3DCh]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_48C889^^^test    eax, eax^^^js      loc_48D002^^^cmp     r12d, eax^^^jbe     loc_48D002^^^cdqe^^^cmp     byte ptr [rbx+rax], 0^^^jnz     short loc_48C889^^^mov     byte ptr [rbx+rax], 1^^^mov     rax, [rdx]^^^mov     eax, [rax+3DCh]^^^lea     esi, [rax-1]^^^cmp     eax, edi^^^cmovle  edi, esi^^^add     rdx, 8^^^mov     rax, [rdx]^^^test    rax, rax^^^jnz     short loc_48C850^^^mov     rax, [r10+3C0h]^^^test    rax, rax^^^jz      loc_48C7E0^^^mov     r9d, [rax]^^^xor     edx, edx^^^mov     r8, rax^^^test    r9d, r9d^^^jnz     short loc_48C8F7^^^jmp     loc_48C7E0^^^cmp     r12d, eax^^^jbe     short loc_48C90D^^^cdqe^^^cmp     byte ptr [rbx+rax], 0^^^jnz     short loc_48C8E8^^^mov     byte ptr [rbx+rax], 1^^^mov     eax, [rsi+3DCh]^^^cmp     eax, edi^^^jg      short loc_48C8DE^^^lea     edi, [rax-1]^^^mov     r8, [r10+3C0h]^^^mov     r9d, [r8]^^^add     edx, 1^^^cmp     edx, r9d^^^jnb     loc_48C7E0^^^mov     rax, r8^^^mov     esi, edx^^^mov     rsi, [rax+rsi*8+8]^^^mov     eax, [rsi+3DCh]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_48C8E8^^^test    eax, eax^^^jns     short loc_48C8C0^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 0D4h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aJmapL_idx0Jmap^^^call    __assert_fail^^^mov     cs:dl_close_state_11944, 2^^^jmp     loc_48C6C6^^^test    byte ptr [r10+3D4h], 8^^^jnz     loc_48C81D^^^cmp     byte ptr [rbx+rax], 0^^^jnz     loc_48C81D^^^add     edi, 1^^^cmp     r12d, edi^^^ja      loc_48C7EC^^^mov     rcx, r13^^^mov     rdx, rbx^^^mov     rsi, r15^^^mov     rdi, r14^^^call    _dl_sort_fini^^^test    r12d, r12d^^^jz      loc_48CED4^^^mov     r15, [r14]^^^cmp     [r15+30h], r13^^^jnz     loc_48CAB6^^^lea     ecx, [r12-1]^^^mov     [rbp+var_84], r12d^^^mov     [rbp+var_50], r14^^^mov     dword ptr [rbp+var_38], 0FFFFFFFFh^^^mov     dword ptr [rbp+var_40], 0^^^xor     r11d, r11d^^^mov     [rbp+var_48], rcx^^^xor     ecx, ecx^^^mov     [rbp+var_80], 0^^^mov     r12, rcx^^^mov     r14, rbx^^^nop     dword ptr [rax+00h]^^^cmp     byte ptr [r14+r12], 0^^^mov     ebx, r12d^^^movzx   eax, byte ptr [r15+314h]^^^jnz     loc_48CAD0^^^mov     edx, eax^^^and     edx, 3^^^cmp     dl, 2^^^jnz     loc_48D296^^^test    byte ptr [r15+3D4h], 8^^^jnz     loc_48D296^^^test    al, 8^^^jz      loc_48CA76^^^test    byte ptr cs:_dl_debug_mask, 2^^^jnz     loc_48D27E^^^mov     rax, [r15+110h]^^^test    rax, rax^^^jz      short loc_48CA59^^^mov     rdx, [rax+8]^^^mov     rax, [r15+120h]^^^add     rdx, [r15]^^^mov     rax, [rax+8]^^^shr     rax, 3^^^test    eax, eax^^^jz      short loc_48CA59^^^sub     eax, 1^^^mov     dword ptr [rbp+var_58], ebx^^^mov     [rbp+var_60], r14^^^mov     ebx, eax^^^mov     r14, r12^^^mov     r12, rdx^^^jmp     short loc_48CA42^^^mov     ebx, eax^^^mov     eax, ebx^^^call    qword ptr [r12+rax*8]^^^test    ebx, ebx^^^lea     eax, [rbx-1]^^^jnz     short loc_48CA40^^^mov     r12, r14^^^mov     ebx, dword ptr [rbp+var_58]^^^mov     r14, [rbp+var_60]^^^mov     rdx, [r15+0A8h]^^^test    rdx, rdx^^^jz      short loc_48CA6E^^^mov     rax, [r15]^^^add     rax, [rdx+8]^^^call    rax^^^movzx   eax, byte ptr [r15+314h]^^^or      byte ptr [r15+315h], 20h^^^and     eax, 10h^^^cmp     al, 1^^^sbb     dword ptr [rbp+var_40], 0FFFFFFFFh^^^cmp     dword ptr [rbp+var_38], ebx^^^jbe     short loc_48CA8F^^^mov     dword ptr [rbp+var_38], ebx^^^mov     r11d, 1^^^cmp     r12, [rbp+var_48]^^^jz      loc_48CC7E^^^mov     rcx, [rbp+var_50]^^^mov     r15, [rcx+r12*8+8]^^^add     r12, 1^^^cmp     [r15+30h], r13^^^jz      loc_48C9B8^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 0F0h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aImapL_nsNsid^^^call    __assert_fail^^^and     eax, 3^^^cmp     al, 2^^^jnz     short loc_48CA95^^^xor     r8d, r8d^^^cmp     qword ptr [r15+2B8h], 0^^^mov     r9d, 1^^^jz      loc_48CEEE^^^mov     rsi, [r15+380h]^^^mov     rcx, [rsi]^^^test    rcx, rcx^^^jz      loc_48CC2F^^^mov     rdi, rsi^^^mov     rax, rcx^^^xor     r10d, r10d^^^lea     rdx, [r15+2C8h]^^^jmp     short loc_48CB2A^^^add     rdi, 8^^^mov     r10d, 1^^^mov     rax, [rdi]^^^test    rax, rax^^^jz      short loc_48CB55^^^cmp     rax, rdx^^^jz      short loc_48CB45^^^cmp     [rax-288h], r13^^^jnz     loc_48D0A4^^^cmp     dword ptr [rax+124h], 0FFFFFFFFh^^^jnz     short loc_48CB18^^^add     rdi, 8^^^add     r9, 1^^^mov     rax, [rdi]^^^test    rax, rax^^^jnz     short loc_48CB2A^^^test    r10b, r10b^^^jz      loc_48CC2F^^^cmp     r9, 3^^^lea     r10, [r15+358h]^^^ja      loc_48CF46^^^cmp     r10, rsi^^^mov     rax, r10^^^mov     [rbp+var_58], 4^^^jz      loc_48CF46^^^mov     edi, 8^^^xor     r9d, r9d^^^jmp     short loc_48CBB4^^^test    r8, r8^^^jz      short loc_48CBA7^^^mov     [rax+r9*8], r8^^^mov     rsi, [r15+380h]^^^add     r9, 1^^^xor     r8d, r8d^^^mov     rcx, [rsi+rdi]^^^add     rdi, 8^^^test    rcx, rcx^^^jz      short loc_48CBDE^^^cmp     rcx, rdx^^^jz      short loc_48CBC2^^^cmp     dword ptr [rcx+124h], 0FFFFFFFFh^^^jnz     short loc_48CB90^^^mov     [rax+r9*8], rcx^^^mov     rsi, [r15+380h]^^^add     r9, 1^^^mov     rcx, [rsi+rdi]^^^add     rdi, 8^^^test    rcx, rcx^^^jnz     short loc_48CBB4^^^mov     qword ptr [rax+r9*8], 0^^^mov     rdi, [r15+380h]^^^mov     [r15+380h], rax^^^cmp     r10, rdi^^^jz      loc_48CFD8^^^mov     [rbp+var_B0], r11b^^^call    _dl_scope_free^^^movzx   ecx, [rbp+var_80]^^^movzx   r11d, [rbp+var_B0]^^^test    eax, eax^^^mov     eax, 0^^^cmovnz  ecx, eax^^^mov     [rbp+var_80], cl^^^mov     rsi, [rbp+var_58]^^^mov     [r15+378h], rsi^^^jmp     short loc_48CC4A^^^test    r8, r8^^^jz      short loc_48CC4A^^^mov     qword ptr [r15+2B8h], 0^^^mov     dword ptr [r15+2C0h], 0^^^mov     rax, [r15+2D8h]^^^test    rax, rax^^^jz      short loc_48CC6A^^^cmp     dword ptr [rax+3DCh], 0FFFFFFFFh^^^jz      short loc_48CC6A^^^mov     qword ptr [r15+2D8h], 0^^^cmp     dword ptr [rbp+var_38], ebx^^^cmovbe  ebx, dword ptr [rbp+var_38]^^^cmp     r12, [rbp+var_48]^^^mov     dword ptr [rbp+var_38], ebx^^^jnz     loc_48CA9F^^^test    r11b, r11b^^^mov     rbx, r14^^^mov     r12d, [rbp+var_84]^^^mov     r14, [rbp+var_50]^^^jz      loc_48CED4^^^xor     edi, edi^^^mov     rsi, r13^^^call    _dl_debug_initialize^^^mov     dword ptr [rax+18h], 2^^^mov     [rbp+var_58], rax^^^call    _dl_debug_state^^^mov     ecx, dword ptr [rbp+var_40]^^^test    ecx, ecx^^^jnz     loc_48D01B^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     loc_48D1DB^^^mov     edx, 0^^^test    rdx, rdx^^^jz      short loc_48CCDE^^^mov     edi, offset _dl_load_write_lock^^^call    near ptr 0^^^cmp     r12d, dword ptr [rbp+var_38]^^^jbe     loc_48D1C2^^^mov     eax, dword ptr [rbp+var_38]^^^mov     [rbp+var_60], r13^^^mov     r15d, r12d^^^mov     [rbp+var_38], 0^^^mov     [rbp+var_40], 0^^^mov     byte ptr [rbp+var_50], 0^^^mov     r13d, eax^^^mov     eax, r13d^^^cmp     byte ptr [rbx+rax], 0^^^mov     r12, [r14+rax*8]^^^jnz     loc_48CE58^^^movzx   eax, byte ptr [r12+314h]^^^mov     edx, eax^^^and     edx, 3^^^cmp     dl, 2^^^jnz     loc_48D156^^^cmp     qword ptr [r12+428h], 0^^^jnz     loc_48D0BD^^^mov     rdi, r12^^^call    _dl_unmap^^^mov     rax, [r12+20h]^^^mov     rdx, [r12+18h]^^^test    rax, rax^^^jz      loc_48CFF3^^^mov     [rax+18h], rdx^^^mov     rsi, [rbp+var_68]^^^mov     rdx, [r12+18h]^^^sub     dword ptr [rsi+8], 1^^^test    rdx, rdx^^^jz      short loc_48CD75^^^mov     [rdx+20h], rax^^^mov     rdi, [r12+2E0h]^^^call    free^^^mov     rdi, [r12+338h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_48CD95^^^call    free^^^mov     rdi, [r12+3C0h]^^^call    free^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jnz     loc_48D263^^^mov     rdi, [r12+8]^^^call    free^^^mov     [rbp+var_48], r14^^^mov     rdi, [r12+38h]^^^mov     r14, rbx^^^jmp     short loc_48CDD8^^^test    rbx, rbx^^^jz      short loc_48CDED^^^mov     rdi, rbx^^^mov     eax, [rdi+10h]^^^mov     rbx, [rdi+8]^^^test    eax, eax^^^jnz     short loc_48CDD0^^^call    free^^^test    rbx, rbx^^^jnz     short loc_48CDD5^^^mov     rdi, [r12+3B8h]^^^mov     rbx, r14^^^mov     r14, [rbp+var_48]^^^call    free^^^mov     rdi, [r12+380h]^^^lea     rax, [r12+358h]^^^cmp     rdi, rax^^^jz      short loc_48CE1B^^^call    free^^^cmp     byte ptr [r12+314h], 0^^^js      loc_48CFE1^^^mov     rdi, [r12+318h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_48CE3D^^^call    free^^^mov     rdi, [r12+3A8h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_48CE50^^^call    free^^^mov     rdi, r12^^^call    free^^^add     r13d, 1^^^cmp     r15d, r13d^^^ja      loc_48CD09^^^mov     r13, [rbp+var_60]^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48CE7D^^^mov     edi, offset _dl_load_write_lock^^^call    near ptr 0^^^cmp     byte ptr [rbp+var_50], 0^^^jz      short loc_48CEB6^^^mov     rax, cs:_dl_tls_generation^^^add     rax, 1^^^test    rax, rax^^^mov     cs:_dl_tls_generation, rax^^^jz      loc_48D24A^^^mov     rax, [rbp+var_38]^^^cmp     rax, cs:_dl_tls_static_used^^^jnz     short loc_48CEB6^^^mov     rdx, [rbp+var_40]^^^mov     cs:_dl_tls_static_used, rdx^^^mov     rcx, [rbp+var_68]^^^cmp     qword ptr [rcx], 0^^^jz      loc_48D2DD^^^mov     rax, [rbp+var_58]^^^mov     dword ptr [rax+18h], 0^^^call    _dl_debug_state^^^cmp     cs:dl_close_state_11944, 2^^^jnz     loc_48D237^^^mov     rsp, [rbp+var_70]^^^mov     rax, [rbp+var_68]^^^jmp     loc_48C70B^^^mov     rax, [r15+3B8h]^^^test    rax, rax^^^jz      loc_48CAEE^^^cmp     qword ptr [rax+8], 0^^^mov     ecx, 10h^^^mov     edx, 1^^^jz      short loc_48CF23^^^nop^^^add     edx, 1^^^mov     ecx, edx^^^cmp     qword ptr [rax+rcx*8], 0^^^jnz     short loc_48CF10^^^lea     ecx, [rdx+1]^^^shl     rcx, 3^^^add     rax, rcx^^^mov     [r15+2C0h], edx^^^lea     r8, [r15+2B8h]^^^mov     [r15+2B8h], rax^^^mov     r9d, 2^^^jmp     loc_48CAEE^^^mov     rax, [r15+378h]^^^mov     [rbp+var_A8], rdx^^^mov     [rbp-0B8h], rcx^^^mov     [rbp+var_A0], rsi^^^mov     [rbp+var_90], r8^^^mov     [rbp+var_98], r10^^^mov     rdi, rax^^^mov     [rbp+var_B0], r11b^^^mov     [rbp+var_58], rax^^^shl     rdi, 3^^^call    malloc^^^test    rax, rax^^^mov     rdx, [rbp+var_A8]^^^mov     rcx, [rbp-0B8h]^^^mov     rsi, [rbp+var_A0]^^^mov     r8, [rbp+var_90]^^^mov     r10, [rbp+var_98]^^^movzx   r11d, [rbp+var_B0]^^^jnz     loc_48CB83^^^mov     ecx, offset aCannotCreateSc^^^xor     edx, edx^^^mov     esi, offset aDlclose^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     [rbp+var_80], 1^^^jmp     loc_48CC22^^^mov     rdi, [r12+2A0h]^^^call    free^^^jmp     loc_48CE2A^^^mov     rcx, [rbp+var_68]^^^mov     [rcx], rdx^^^mov     rsi, rcx^^^jmp     loc_48CD68^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 0BFh^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aLpL_idx0LpL_id^^^call    __assert_fail^^^mov     rax, [rbp+var_68]^^^xor     edx, edx^^^mov     rdi, [rax+10h]^^^mov     esi, [rdi+8]^^^test    esi, esi^^^jz      short loc_48D09C^^^mov     rcx, [rdi]^^^lea     eax, [rsi-1]^^^mov     rdx, [rcx+rax*8]^^^mov     eax, esi^^^test    byte ptr [rdx+315h], 20h^^^jnz     short loc_48D058^^^jmp     short loc_48D05D^^^lea     edx, [rax-1]^^^mov     rdx, [rcx+rdx*8]^^^test    byte ptr [rdx+315h], 20h^^^jz      short loc_48D05D^^^sub     eax, 1^^^jnz     short loc_48D048^^^mov     r8d, dword ptr [rbp+var_40]^^^mov     edx, eax^^^add     r8d, eax^^^cmp     esi, r8d^^^jz      short loc_48D09C^^^xor     edx, edx^^^test    eax, eax^^^jz      short loc_48D09C^^^xor     esi, esi^^^jmp     short loc_48D078^^^mov     rcx, [rdi]^^^mov     r8, [rcx+rsi*8]^^^test    byte ptr [r8+315h], 20h^^^jnz     short loc_48D094^^^cmp     esi, edx^^^jz      short loc_48D091^^^mov     r9d, edx^^^mov     [rcx+r9*8], r8^^^add     edx, 1^^^add     rsi, 1^^^cmp     eax, esi^^^ja      short loc_48D075^^^mov     [rdi+8], edx^^^jmp     loc_48CCBA^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 158h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aTmapL_nsNsid^^^call    __assert_fail^^^mov     rsi, cs:_dl_tls_dtv_slotinfo_list^^^test    rsi, rsi^^^jz      short loc_48D0F1^^^mov     rdi, [r12+448h]^^^xor     ecx, ecx^^^test    al, 8^^^setnz   cl^^^xor     edx, edx^^^call    remove_slotinfo^^^test    al, al^^^jnz     short loc_48D0F1^^^mov     rax, cs:_dl_tls_static_nelem^^^mov     cs:_dl_tls_max_dtv_idx, rax^^^mov     rax, [r12+440h]^^^mov     byte ptr [rbp+var_50], 1^^^cmp     rax, 1^^^jbe     loc_48CD40^^^cmp     [rbp+var_40], 0^^^jz      loc_48D19C^^^cmp     [rbp+var_40], rax^^^jz      loc_48D19C^^^mov     rdx, rax^^^sub     rdx, [r12+428h]^^^cmp     rdx, [rbp+var_38]^^^jz      short loc_48D193^^^mov     rcx, cs:_dl_tls_static_used^^^cmp     [rbp+var_38], rcx^^^jz      short loc_48D17B^^^cmp     rax, rcx^^^jz      short loc_48D16F^^^cmp     rax, [rbp+var_38]^^^jbe     loc_48CD40^^^mov     [rbp+var_38], rax^^^mov     [rbp+var_40], rdx^^^jmp     loc_48CD40^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 20Fh^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aImapL_typeLt_l^^^call    __assert_fail^^^mov     cs:_dl_tls_static_used, rdx^^^jmp     loc_48CD40^^^mov     rsi, [rbp+var_40]^^^mov     [rbp+var_38], rax^^^mov     [rbp+var_40], rdx^^^mov     cs:_dl_tls_static_used, rsi^^^jmp     loc_48CD40^^^mov     [rbp+var_38], rax^^^jmp     loc_48CD40^^^mov     rcx, rax^^^sub     rcx, [r12+428h]^^^cmp     [rbp+var_38], 0^^^cmovnz  rax, [rbp+var_38]^^^mov     byte ptr [rbp+var_50], 1^^^mov     [rbp+var_40], rcx^^^mov     [rbp+var_38], rax^^^jmp     loc_48CD40^^^mov     [rbp+var_38], 0^^^mov     [rbp+var_40], 0^^^mov     byte ptr [rbp+var_50], 0^^^jmp     loc_48CE69^^^mov     edx, dword ptr [rbp+var_40]^^^test    edx, edx^^^jnz     short loc_48D202^^^cmp     [rbp+var_80], 0^^^jnz     short loc_48D202^^^mov     rax, cs:_dl_scope_free_list^^^test    rax, rax^^^jz      loc_48CCCA^^^cmp     qword ptr [rax], 0^^^jz      loc_48CCCA^^^call    cs:_dl_wait_lookup_done^^^mov     r15, cs:_dl_scope_free_list^^^test    r15, r15^^^jz      loc_48CCCA^^^mov     rax, [r15]^^^test    rax, rax^^^jz      loc_48CCCA^^^sub     rax, 1^^^mov     rdi, [r15+rax*8+8]^^^mov     [r15], rax^^^call    free^^^jmp     short loc_48D218^^^mov     cs:dl_close_state_11944, 0^^^mov     rsp, [rbp+var_70]^^^jmp     loc_48C6D3^^^mov     edi, 2^^^mov     esi, offset aTlsGeneratio_0^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^mov     rdx, [r12+30h]^^^mov     rsi, [r12+8]^^^mov     edi, offset aFileSLuDestroy^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48CDAF^^^mov     rsi, [r15+8]^^^mov     rdx, r13^^^mov     edi, offset aCallingFiniSLu^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48C9FF^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 0F5h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aImapL_typeLt_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11958^^^mov     edx, 9Ah^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aIdxNloaded^^^call    __assert_fail^^^mov     rsi, [rdi+8]^^^xor     eax, eax^^^mov     edi, offset aClosingFileSDi^^^call    _dl_debug_printf^^^jmp     loc_48C6D3^^^mov     rdx, cs:_dl_nns^^^lea     rax, [rdx-1]^^^cmp     r13, rax^^^jnz     loc_48CEC4^^^lea     rdx, [rdx+rdx*8-12h]^^^shl     rdx, 4^^^add     rdx, 6C5FE0h^^^test    rax, rax^^^jz      short loc_48D31D^^^sub     rdx, 90h^^^cmp     qword ptr [rdx+90h], 0^^^jnz     short loc_48D32D^^^sub     rax, 1^^^jmp     short loc_48D301^^^mov     cs:_dl_nns, 0^^^jmp     loc_48CEC4^^^mov     cs:_dl_nns, rax^^^jmp     loc_48CEC4^^^
__mpn_lshift$$$lea     rdi, [rdi+rdx*8-8]^^^lea     rsi, [rsi+rdx*8-8]^^^mov     eax, edx^^^and     eax, 3^^^jnz     short loc_4631DF^^^mov     r10, [rsi]^^^mov     r11, [rsi-8]^^^xor     eax, eax^^^shld    rax, r10, cl^^^mov     r8, [rsi-10h]^^^lea     rdi, [rdi+18h]^^^sub     rdx, 4^^^jmp     loc_463282^^^cmp     eax, 2^^^jnb     short loc_46320C^^^mov     r9, [rsi]^^^xor     eax, eax^^^shld    rax, r9, cl^^^sub     rdx, 2^^^jb      short loc_463205^^^mov     r10, [rsi-8]^^^mov     r11, [rsi-10h]^^^lea     rsi, [rsi-8]^^^lea     rdi, [rdi+10h]^^^jmp     short loc_463276^^^shl     r9, cl^^^mov     [rdi], r9^^^retn^^^jnz     short loc_463240^^^mov     r8, [rsi]^^^mov     r9, [rsi-8]^^^xor     eax, eax^^^shld    rax, r8, cl^^^sub     rdx, 3^^^jb      short loc_46322F^^^mov     r10, [rsi-10h]^^^lea     rsi, [rsi-10h]^^^lea     rdi, [rdi+8]^^^jmp     short loc_46326A^^^shld    r8, r9, cl^^^mov     [rdi], r8^^^shl     r9, cl^^^mov     [rdi-8], r9^^^retn^^^mov     r11, [rsi]^^^mov     r8, [rsi-8]^^^xor     eax, eax^^^shld    rax, r11, cl^^^mov     r9, [rsi-10h]^^^lea     rsi, [rsi-18h]^^^sub     rdx, 4^^^jb      short loc_46329C^^^nop     dword ptr [rax+rax+00h]^^^shld    r11, r8, cl^^^mov     r10, [rsi]^^^mov     [rdi], r11^^^shld    r8, r9, cl^^^mov     r11, [rsi-8]^^^mov     [rdi-8], r8^^^shld    r9, r10, cl^^^mov     r8, [rsi-10h]^^^mov     [rdi-10h], r9^^^shld    r10, r11, cl^^^mov     r9, [rsi-18h]^^^mov     [rdi-18h], r10^^^add     rsi, 0FFFFFFFFFFFFFFE0h^^^lea     rdi, [rdi-20h]^^^sub     rdx, 4^^^jnb     short loc_463260^^^shld    r11, r8, cl^^^mov     [rdi], r11^^^shld    r8, r9, cl^^^mov     [rdi-8], r8^^^shl     r9, cl^^^mov     [rdi-10h], r9^^^retn^^^
_IO_default_showmanyc$$$mov     eax, 0FFFFFFFFh^^^retn^^^
mem2chunk_check$$$xor     eax, eax^^^test    dil, 0Fh^^^jnz     locret_4028E2^^^mov     rdx, [rdi-8]^^^lea     rax, [rdi-10h]^^^test    dl, 2^^^jnz     loc_4028E8^^^xor     r8d, r8d^^^test    byte ptr cs:dword_6C20E4, 2^^^mov     rcx, rdx^^^setz    r8b^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^test    r8d, r8d^^^jz      short loc_40282B^^^mov     r9, cs:qword_6C29D0^^^cmp     rax, r9^^^jb      loc_402A28^^^add     r9, cs:qword_6C2958^^^lea     r10, [rax+rcx]^^^cmp     r10, r9^^^jnb     loc_402A28^^^cmp     rcx, 1Fh^^^jbe     loc_402A28^^^test    cl, 8^^^jnz     loc_402A28^^^mov     r9, rdx^^^and     r9, 0FFFFFFFFFFFFFFF8h^^^test    byte ptr [rdi+r9-8], 1^^^jz      loc_402A28^^^and     edx, 1^^^jz      loc_402A30^^^add     rcx, 7^^^mov     r10, rax^^^mov     r9, rax^^^lea     rdi, [rax+rcx]^^^shr     r10, 0Bh^^^shr     r9, 3^^^xor     r9d, r10d^^^movzx   r8d, byte ptr [rdi]^^^movzx   r9d, r9b^^^movzx   edx, r8b^^^cmp     rdx, r9^^^jz      short loc_4028CA^^^test    rdx, rdx^^^jz      loc_402A28^^^lea     rdi, [rdx+10h]^^^cmp     rcx, rdi^^^jnb     short loc_4028B6^^^jmp     loc_402A28^^^test    rdx, rdx^^^jz      loc_402A28^^^lea     rdi, [rdx+10h]^^^cmp     rdi, rcx^^^ja      loc_402A28^^^sub     rcx, rdx^^^lea     rdi, [rax+rcx]^^^movzx   r8d, byte ptr [rdi]^^^movzx   edx, r8b^^^cmp     rdx, r9^^^jnz     short loc_4028A0^^^not     r8d^^^test    rsi, rsi^^^mov     [rdi], r8b^^^jz      short locret_4028E2^^^mov     [rsi], rdi^^^retn^^^xor     eax, eax^^^rep retn^^^mov     r8, cs:_dl_pagesize^^^mov     rcx, rdi^^^sub     r8, 1^^^and     rcx, r8^^^setnz   r10b^^^cmp     rcx, 10h^^^setnz   r9b^^^test    r10b, r9b^^^jz      short loc_402918^^^cmp     rcx, 20h^^^jnz     loc_4029C0^^^nop     dword ptr [rax+00h]^^^test    dl, 1^^^jnz     loc_402A28^^^mov     r9, [rdi-10h]^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^mov     rdi, rax^^^sub     rdi, r9^^^add     r9, rdx^^^or      rdi, r9^^^test    rdi, r8^^^jnz     loc_402A28^^^lea     rcx, [rdx-1]^^^mov     r10, rax^^^mov     r9, rax^^^shr     r10, 0Bh^^^shr     r9, 3^^^lea     rdi, [rax+rcx]^^^xor     r9d, r10d^^^movzx   r9d, r9b^^^movzx   r8d, byte ptr [rdi]^^^movzx   edx, r8b^^^cmp     rdx, r9^^^jz      loc_4028CA^^^test    rdx, rdx^^^jz      loc_402A28^^^lea     rdi, [rdx+10h]^^^cmp     rcx, rdi^^^jnb     short loc_40299E^^^jmp     loc_402A28^^^test    rdx, rdx^^^jz      loc_402A28^^^lea     rdi, [rdx+10h]^^^cmp     rdi, rcx^^^ja      loc_4028E0^^^sub     rcx, rdx^^^lea     rdi, [rax+rcx]^^^movzx   r8d, byte ptr [rdi]^^^movzx   edx, r8b^^^cmp     rdx, r9^^^jnz     short loc_402988^^^jmp     loc_4028CA^^^cmp     rcx, 80h^^^jz      loc_402918^^^cmp     rcx, 40h^^^jz      loc_402918^^^cmp     rcx, 200h^^^jz      loc_402918^^^cmp     rcx, 100h^^^jz      loc_402918^^^cmp     rcx, 800h^^^jz      loc_402918^^^cmp     rcx, 400h^^^jz      loc_402918^^^cmp     rcx, 1FFFh^^^ja      loc_402918^^^cmp     rcx, 1000h^^^jz      loc_402918^^^nop     dword ptr [rax]^^^xor     eax, eax^^^retn^^^mov     rdx, [rdi-10h]^^^test    dl, 0Fh^^^jnz     short loc_402A28^^^mov     rdi, rax^^^sub     rdi, rdx^^^test    r8d, r8d^^^jz      short loc_402A4D^^^cmp     rdi, cs:qword_6C29D0^^^jb      short loc_402A28^^^mov     rdi, [rdi+8]^^^and     rdi, 0FFFFFFFFFFFFFFF8h^^^cmp     rdx, rdi^^^jz      loc_40285A^^^jmp     short loc_402A28^^^
_L_unlock_13498$$$lea     rdi, [r12]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408D3B^^^
__gettext_free_exp$$$push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^test    rdi, rdi^^^jz      loc_416C58^^^mov     eax, [rdi]^^^cmp     eax, 2^^^jz      short loc_41669F^^^cmp     eax, 3^^^jz      short loc_416670^^^cmp     eax, 1^^^jz      short loc_4166CE^^^add     rsp, 8^^^mov     rdi, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^jmp     free^^^mov     rbp, [rdi+18h]^^^test    rbp, rbp^^^jz      short loc_41669F^^^mov     eax, [rbp+0]^^^cmp     eax, 2^^^jz      loc_416AB8^^^cmp     eax, 3^^^jz      loc_416A88^^^cmp     eax, 1^^^jz      loc_416AE8^^^mov     rdi, rbp^^^call    free^^^mov     rbp, [rbx+10h]^^^test    rbp, rbp^^^jz      short loc_4166CE^^^mov     eax, [rbp+0]^^^cmp     eax, 2^^^jz      loc_4168D8^^^cmp     eax, 3^^^jz      loc_4168A8^^^cmp     eax, 1^^^jz      loc_416908^^^mov     rdi, rbp^^^call    free^^^mov     rbp, [rbx+8]^^^test    rbp, rbp^^^jz      short loc_416657^^^mov     eax, [rbp+0]^^^cmp     eax, 2^^^jz      loc_4167A3^^^cmp     eax, 3^^^jz      loc_416B90^^^cmp     eax, 1^^^jz      loc_4167D3^^^mov     rdi, rbp^^^call    free^^^jmp     loc_416657^^^mov     r13, [r12+18h]^^^test    r13, r13^^^jz      short loc_416739^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416D6C^^^cmp     eax, 3^^^jz      loc_416D63^^^cmp     eax, 1^^^jz      loc_416D75^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+10h]^^^test    r13, r13^^^jz      short loc_41676A^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416D29^^^cmp     eax, 3^^^jz      loc_416D20^^^cmp     eax, 1^^^jz      loc_416D32^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+8]^^^test    r13, r13^^^jz      short loc_41679B^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416C99^^^cmp     eax, 3^^^jz      loc_416C90^^^cmp     eax, 1^^^jz      loc_416CA2^^^mov     rdi, r13^^^call    free^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+10h]^^^test    r12, r12^^^jz      short loc_4167D3^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_4169A1^^^cmp     eax, 3^^^jz      loc_416970^^^cmp     eax, 1^^^jz      loc_4169D2^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+8]^^^test    r12, r12^^^jz      loc_4166F5^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      short loc_416831^^^cmp     eax, 3^^^jz      short loc_416800^^^cmp     eax, 1^^^jz      short loc_416862^^^mov     rdi, r12^^^call    free^^^jmp     loc_4166F5^^^mov     r13, [r12+18h]^^^test    r13, r13^^^jz      short loc_416831^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416C71^^^cmp     eax, 3^^^jz      loc_416C68^^^cmp     eax, 1^^^jz      loc_416C7A^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+10h]^^^test    r13, r13^^^jz      short loc_416862^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416BF9^^^cmp     eax, 3^^^jz      loc_416BF0^^^cmp     eax, 1^^^jz      loc_416C02^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+8]^^^test    r13, r13^^^jz      loc_4167F3^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416959^^^cmp     eax, 3^^^jz      loc_416950^^^cmp     eax, 1^^^jz      loc_416962^^^mov     rdi, r13^^^call    free^^^mov     rdi, r12^^^call    free^^^jmp     loc_4166F5^^^mov     r12, [rbp+18h]^^^test    r12, r12^^^jz      short loc_4168D8^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416CE2^^^cmp     eax, 3^^^jz      loc_416CD8^^^cmp     eax, 1^^^jz      loc_416CEC^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+10h]^^^test    r12, r12^^^jz      short loc_416908^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416C3A^^^cmp     eax, 3^^^jz      loc_416C30^^^cmp     eax, 1^^^jz      loc_416C44^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+8]^^^test    r12, r12^^^jz      loc_4166C6^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416A1A^^^cmp     eax, 3^^^jz      loc_416A10^^^cmp     eax, 1^^^jz      loc_416A4B^^^mov     rdi, r12^^^call    free^^^mov     rdi, rbp^^^call    free^^^jmp     loc_4166CE^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_41688F^^^mov     r13, [r12+18h]^^^test    r13, r13^^^jz      short loc_4169A1^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416D09^^^cmp     eax, 3^^^jz      loc_416D00^^^cmp     eax, 1^^^jz      loc_416D12^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+10h]^^^test    r13, r13^^^jz      short loc_4169D2^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416B21^^^cmp     eax, 3^^^jz      loc_416B18^^^cmp     eax, 1^^^jz      loc_416B2A^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+8]^^^test    r13, r13^^^jz      loc_4167CB^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416BD1^^^cmp     eax, 3^^^jz      loc_416BC8^^^cmp     eax, 1^^^jz      loc_416BDA^^^mov     rdi, r13^^^call    free^^^jmp     loc_4167CB^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     r13, [r12+10h]^^^test    r13, r13^^^jz      short loc_416A4B^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416B49^^^cmp     eax, 3^^^jz      loc_416B40^^^cmp     eax, 1^^^jz      loc_416B52^^^mov     rdi, r13^^^call    free^^^mov     r13, [r12+8]^^^test    r13, r13^^^jz      loc_416934^^^mov     eax, [r13+0]^^^cmp     eax, 2^^^jz      loc_416C19^^^cmp     eax, 3^^^jz      loc_416C10^^^cmp     eax, 1^^^jz      loc_416C22^^^mov     rdi, r13^^^call    free^^^jmp     loc_416934^^^mov     r12, [rbp+18h]^^^test    r12, r12^^^jz      short loc_416AB8^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416D4A^^^cmp     eax, 3^^^jz      loc_416D40^^^cmp     eax, 1^^^jz      loc_416D54^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+10h]^^^test    r12, r12^^^jz      short loc_416AE8^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416CBA^^^cmp     eax, 3^^^jz      loc_416CB0^^^cmp     eax, 1^^^jz      loc_416CC4^^^mov     rdi, r12^^^call    free^^^mov     r12, [rbp+8]^^^test    r12, r12^^^jz      loc_416697^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      short loc_416B6A^^^cmp     eax, 3^^^jz      short loc_416B60^^^cmp     eax, 1^^^jz      short loc_416B74^^^mov     rdi, r12^^^call    free^^^jmp     loc_416697^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_4169CA^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416A43^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+8]^^^call    __gettext_free_exp^^^mov     rdi, r12^^^call    free^^^jmp     loc_416697^^^mov     r12, [rbp+18h]^^^test    r12, r12^^^jz      loc_4167A3^^^mov     eax, [r12]^^^cmp     eax, 2^^^jz      loc_416739^^^cmp     eax, 3^^^jz      loc_416708^^^cmp     eax, 1^^^jnz     loc_41679B^^^nop     dword ptr [rax+00h]^^^jmp     loc_41676A^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_4169FF^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_41685A^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416A78^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+8]^^^call    __gettext_free_exp^^^jmp     loc_416900^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416829^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416793^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+8]^^^call    __gettext_free_exp^^^jmp     loc_416AE0^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+8]^^^call    __gettext_free_exp^^^jmp     loc_4168D0^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416999^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416762^^^mov     rdi, [r12+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r12+8]^^^call    __gettext_free_exp^^^jmp     loc_416AB0^^^mov     rdi, [r13+18h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+10h]^^^call    __gettext_free_exp^^^mov     rdi, [r13+8]^^^call    __gettext_free_exp^^^jmp     loc_416731^^^
_nl_get_walt_digit$$$push    r14^^^xor     r14d, r14d^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     ebp, edi^^^cmp     ebp, 63h^^^push    rbx^^^ja      loc_44B7DF^^^mov     rax, [rsi+350h]^^^mov     esi, [rax]^^^test    esi, esi^^^jz      loc_44B7DF^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B74E^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rbx, [r12+28h]^^^test    rbx, rbx^^^jz      loc_44B7EB^^^mov     ecx, [rbx+2Ch]^^^test    ecx, ecx^^^jnz     short loc_44B7BB^^^mov     r13, [r12+350h]^^^mov     dword ptr [rbx+2Ch], 1^^^test    r13, r13^^^jz      short loc_44B7BB^^^mov     edi, 320h^^^xor     r14d, r14d^^^call    malloc^^^test    rax, rax^^^mov     [rbx+20h], rax^^^jz      short loc_44B7CB^^^xor     r12d, r12d^^^jmp     short loc_44B79C^^^mov     rax, [rbx+20h]^^^mov     [rax+r12], r13^^^xor     esi, esi^^^mov     rdi, r13^^^add     r12, 8^^^call    wcschr^^^cmp     r12, 320h^^^lea     r13, [rax+4]^^^jnz     short loc_44B798^^^mov     rax, [rbx+20h]^^^xor     r14d, r14d^^^test    rax, rax^^^jz      short loc_44B7CB^^^mov     r14, [rax+rbp*8]^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B7DF^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^mov     rax, r14^^^pop     r14^^^retn^^^mov     edi, 30h^^^xor     r14d, r14d^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^mov     [r12+28h], rax^^^jz      short loc_44B7CB^^^mov     rdi, rax^^^mov     ecx, 6^^^mov     rax, rbx^^^rep stosq^^^mov     rbx, rdx^^^mov     qword ptr [r12+20h], offset _nl_cleanup_time^^^jmp     loc_44B75C^^^
_IO_flush_all_lockp$$$push    r15^^^xor     r15d, r15d^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     ebx, edi^^^sub     rsp, 28h^^^test    edi, edi^^^jz      short loc_42C813^^^mov     eax, 0^^^test    rax, rax^^^jnz     loc_42C9E0^^^mov     [rsp+58h+var_58], offset flush_cleanup^^^mov     [rsp+58h+var_50], 0^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C5628^^^jz      short loc_42C80C^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42C7F8^^^lock cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_2750^^^jmp     short loc_42C805^^^cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_2750^^^mov     cs:qword_6C5628, rdx^^^add     cs:dword_6C5624, 1^^^mov     rbp, cs:_IO_list_all^^^xor     r13d, r13d^^^mov     r12d, cs:_IO_list_all_stamp^^^test    rbp, rbp^^^jz      loc_42C94F^^^mov     r14, fs:10h^^^jmp     short loc_42C853^^^mov     rbp, cs:_IO_list_all^^^mov     r12d, eax^^^test    rbp, rbp^^^jz      loc_42C94F^^^test    ebx, ebx^^^mov     cs:run_fp, rbp^^^jz      short loc_42C8A7^^^mov     eax, [rbp+0]^^^and     eax, 8000h^^^jnz     short loc_42C8A7^^^mov     rdx, [rbp+88h]^^^cmp     r14, [rdx+8]^^^jz      short loc_42C8A3^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42C88F^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_2821^^^jmp     short loc_42C898^^^cmpxchg [rdx], esi^^^jnz     _L_lock_2821^^^mov     rdx, [rbp+88h]^^^mov     [rdx+8], r14^^^add     dword ptr [rdx+4], 1^^^mov     ecx, [rbp+0C0h]^^^test    ecx, ecx^^^jle     loc_42C990^^^mov     rax, [rbp+0A0h]^^^mov     rdx, [rax+18h]^^^cmp     [rax+20h], rdx^^^jbe     short loc_42C8DF^^^mov     rax, [rbp+0D8h]^^^mov     esi, 0FFFFFFFFh^^^mov     rdi, rbp^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^cmovz   r13d, eax^^^test    ebx, ebx^^^jz      short loc_42C928^^^mov     eax, [rbp+0]^^^test    ah, 80h^^^jnz     short loc_42C928^^^mov     rdx, [rbp+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_42C928^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42C91B^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_2873^^^jmp     short loc_42C923^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_2873^^^nop     dword ptr [rax+rax+00h]^^^mov     eax, cs:_IO_list_all_stamp^^^mov     cs:run_fp, 0^^^cmp     r12d, eax^^^jnz     loc_42C840^^^mov     rbp, [rbp+68h]^^^test    rbp, rbp^^^jnz     loc_42C853^^^test    ebx, ebx^^^jz      short loc_42C966^^^mov     eax, cs:dword_6C5624^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C5624, eax^^^jz      short loc_42C9A8^^^test    r15d, r15d^^^jz      short loc_42C975^^^xor     esi, esi^^^mov     rdi, rsp^^^call    near ptr 0^^^add     rsp, 28h^^^mov     eax, r13d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rbp+20h]^^^cmp     [rbp+28h], rax^^^ja      loc_42C8C6^^^jmp     loc_42C8DF^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42C9CB^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_2952^^^jmp     short loc_42C9D7^^^dec     cs:list_all_lock^^^jnz     _L_unlock_2952^^^jmp     short loc_42C966^^^xor     edx, edx^^^mov     esi, offset flush_cleanup^^^mov     rdi, rsp^^^call    near ptr 0^^^mov     r15b, 1^^^jmp     loc_42C7C6^^^
strtof$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^xor     edx, edx^^^mov     rcx, fs:[rax]^^^jmp     ____strtof_l_internal^^^
_L_unlock_1027$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_428475^^^
strtouq$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^xor     ecx, ecx^^^mov     r8, fs:[rax]^^^jmp     ____strtoull_l_internal^^^
_IO_helper_overflow_0$$$mov     [rsp+var_20], rbx^^^mov     rbx, rdi^^^mov     [rsp+var_18], rbp^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^mov     rax, [rbx+0A0h]^^^mov     ebp, esi^^^mov     rdi, [rdi+228h]^^^mov     rsi, [rax+18h]^^^mov     r12, [rax+20h]^^^sub     r12, rsi^^^shr     r12, 2^^^test    r12d, r12d^^^jnz     short loc_46E590^^^test    rax, rax^^^jz      loc_46E5EF^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_46E5EF^^^mov     [rdx], ebp^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^mov     eax, ebp^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rax, [rdi+0D8h]^^^movsxd  r12, r12d^^^mov     rdx, r12^^^call    qword ptr [rax+38h]^^^mov     edx, 0FFFFFFFFh^^^cmp     rax, rdx^^^jz      short loc_46E5E8^^^test    rax, rax^^^jz      short loc_46E5E8^^^mov     rdx, [rbx+0A0h]^^^lea     r13, ds:0[rax*4]^^^mov     rdi, [rdx+18h]^^^mov     rdx, r12^^^sub     rdx, rax^^^lea     rsi, [rdi+r13]^^^call    wmemmove^^^mov     rax, [rbx+0A0h]^^^sub     [rax+20h], r13^^^jmp     loc_46E54F^^^mov     ebp, 0FFFFFFFFh^^^jmp     short loc_46E570^^^mov     esi, ebp^^^mov     rdi, rbx^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     __woverflow^^^
sub_437CB0$$$test    rdx, rdx^^^jz      short locret_437D14^^^sub     rdi, 38h^^^lea     rax, [rsi-40h]^^^mov     rsi, [rsi-8]^^^mov     rcx, rdi^^^jmp     short loc_437C7B^^^sub     rdi, 40h^^^sub     rdx, 1^^^mov     r8, [rsi-8]^^^jz      short loc_437D10^^^lea     rax, [rsi-48h]^^^jmp     short loc_437C70^^^lea     rax, [rsi-10h]^^^mov     rsi, [rsi-8]^^^sub     rdi, 8^^^add     rdx, 6^^^mov     rcx, rdi^^^sub     rdx, 8^^^mov     r8, [rax]^^^mov     [rdi], rsi^^^lea     rdi, [rcx-40h]^^^jnz     loc_437C6C^^^nop^^^mov     [rdi+38h], r8^^^rep retn^^^mov     rsi, [rax+18h]^^^mov     [rcx+18h], r8^^^mov     r8, [rax+10h]^^^mov     [rcx+10h], rsi^^^mov     rsi, [rax+8]^^^sub     rdx, 8^^^mov     [rcx+8], r8^^^mov     r8, [rax]^^^mov     [rdi], rsi^^^lea     rdi, [rcx-40h]^^^jz      loc_437D10^^^sub     rax, 40h^^^mov     rsi, [rax+38h]^^^mov     rcx, rdi^^^mov     [rdi+38h], r8^^^mov     r8, [rax+30h]^^^mov     [rcx+30h], rsi^^^mov     rsi, [rax+28h]^^^mov     [rcx+28h], r8^^^mov     r8, [rax+20h]^^^mov     [rcx+20h], rsi^^^jmp     short loc_437C40^^^
sub_41EA9A$$$cmp     dword ptr [rbp-590h], 0^^^jnz     loc_41C151^^^mov     ecx, [rbp-5A4h]^^^sub     ecx, 1^^^cmp     dword ptr [rbp-5C8h], 0^^^jnz     short loc_41EAFB^^^test    ecx, ecx^^^jle     short loc_41EAFB^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-650h], ecx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     ecx, [rbp-650h]^^^ja      loc_41C276^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41EB9F^^^add     r14d, edx^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_41EBD6^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   esi, byte ptr [rax]^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41EBB1^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_41EBA8^^^add     r14d, 1^^^cmp     dword ptr [rbp-5C8h], 0^^^jz      loc_41C308^^^test    ecx, ecx^^^jle     loc_41C308^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41C276^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_41CC45^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^xor     r8d, r8d^^^mov     qword ptr [rbp-548h], offset unk_49A0C9^^^jmp     loc_41E52D^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, rbx^^^mov     [rbp-650h], ecx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     ecx, [rbp-650h]^^^jnz     loc_41EB32^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41EB16^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     [rbp-5A0h], rsp^^^mov     edx, [r12]^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     eax, [rax+0A8h]^^^mov     qword ptr [rbp-0B0h], 0^^^add     rax, 1Eh^^^shr     rax, 4^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rsi, [rsp+arg_7]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^cmp     edx, 30h^^^mov     [rbp-548h], rsi^^^jnb     loc_41C263^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     esi, [rax]^^^mov     rdi, [rbp-548h]^^^lea     rdx, [rbp-0B0h]^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbp-558h], rax^^^jz      short loc_41C24B^^^mov     edi, [rbp-5A4h]^^^mov     [rbp-590h], eax^^^sub     edi, eax^^^cmp     dword ptr [rbp-5C8h], 0^^^mov     [rbp-5A4h], edi^^^jnz     short loc_41C21E^^^test    edi, edi^^^jle     short loc_41C21E^^^movsxd  rdx, edi^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      short loc_41C276^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41C24B^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41C377^^^mov     rax, [rbx+0D8h]^^^mov     rdx, [rbp-558h]^^^mov     rdi, rbx^^^mov     rsi, [rbp-548h]^^^call    qword ptr [rax+38h]^^^cmp     [rbp-558h], rax^^^jz      short loc_41C28F^^^or      r14d, 0FFFFFFFFh^^^mov     rsp, [rbp-5A0h]^^^jmp     loc_41ACB3^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41C1B1^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 65Eh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     [rbp-558h], rdx^^^ja      short loc_41C24B^^^add     r14d, [rbp-590h]^^^cmp     dword ptr [rbp-5C8h], 0^^^mov     [rbp-558h], r14d^^^jz      short loc_41C301^^^cmp     dword ptr [rbp-5A4h], 0^^^jle     short loc_41C301^^^movsxd  rdx, dword ptr [rbp-5A4h]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     dword ptr [rbp-558h], 7FFFFFFEh^^^ja      short loc_41C276^^^mov     r14d, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, [rbp-558h]^^^cmp     r14d, eax^^^ja      loc_41C24B^^^add     r14d, [rbp-558h]^^^mov     rsp, [rbp-5A0h]^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 65Eh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^mov     ecx, [rbp-5A4h]^^^mov     [rbp-558h], r8d^^^sub     ecx, r8d^^^js      loc_41E604^^^cmp     dword ptr [rbp-5C8h], 0^^^jnz     short loc_41E5AA^^^test    ecx, ecx^^^jz      short loc_41E5AA^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-650h], ecx^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     ecx, [rbp-650h]^^^mov     r8, [rbp-660h]^^^mov     r9d, [rbp-648h]^^^ja      loc_41C276^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41F045^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41C377^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r8^^^mov     [rbp-650h], ecx^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^mov     rdi, rbx^^^mov     rsi, [rbp-548h]^^^call    qword ptr [rax+38h]^^^mov     r8, [rbp-660h]^^^mov     ecx, [rbp-650h]^^^mov     r9d, [rbp-648h]^^^cmp     r8, rax^^^jz      loc_41EDF8^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    r14d, r14d^^^js      loc_41C377^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r8^^^mov     [rbp-660h], r8^^^mov     rsi, [rbp-548h]^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^mov     r8, [rbp-660h]^^^cmp     r8, rax^^^jz      loc_41F38B^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     r8, rdx^^^ja      short loc_41EE6B^^^add     r14d, [rbp-558h]^^^cmp     dword ptr [rbp-5C8h], 0^^^jz      short loc_41EE51^^^test    ecx, ecx^^^jz      short loc_41EE51^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     r9d, [rbp-648h]^^^ja      loc_41C276^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41EE83^^^add     r14d, edx^^^test    r9d, r9d^^^jz      loc_41C308^^^mov     rdi, [rbp-548h]^^^call    free^^^jmp     loc_41C308^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     r8, rdx^^^ja      loc_41F4DE^^^add     r14d, [rbp-558h]^^^jmp     loc_41C308^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^
__guess_grouping$$$movzx   eax, byte ptr [rsi]^^^xor     ecx, ecx^^^sub     eax, 1^^^cmp     al, 7Dh^^^ja      short loc_42293C^^^nop     dword ptr [rax+00h]^^^movsx   r8d, byte ptr [rsi]^^^cmp     edi, r8d^^^jbe     short loc_42293C^^^add     rsi, 1^^^add     ecx, 1^^^movzx   eax, byte ptr [rsi]^^^test    al, al^^^js      short loc_42293C^^^cmp     al, 7Fh^^^jz      short loc_42293C^^^sub     edi, r8d^^^test    al, al^^^jnz     short loc_422910^^^lea     eax, [rdi-1]^^^xor     edx, edx^^^div     r8d^^^add     ecx, eax^^^mov     eax, ecx^^^retn^^^
_IO_str_init_readonly$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     eax, 0FFFFFFFFh^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^test    edx, edx^^^cmovns  eax, edx^^^mov     rbx, rdi^^^mov     rbp, rsi^^^cdqe^^^test    rax, rax^^^jnz     short loc_42DDD0^^^xor     esi, esi^^^mov     rdi, rbp^^^call    sub_400350^^^mov     r12, rax^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rbx^^^xor     ecx, ecx^^^call    _IO_setb^^^mov     [rbx+20h], rbp^^^mov     [rbx+18h], rbp^^^mov     [rbx+8], rbp^^^mov     [rbx+28h], rbp^^^mov     [rbx+30h], rbp^^^mov     [rbx+10h], r12^^^mov     qword ptr [rbx+0E0h], 0^^^or      dword ptr [rbx], 8^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^add     rax, rsi^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^cmp     rsi, rax^^^cmovb   r12, rax^^^jmp     short loc_42DD87^^^
_L_unlock_38$$$lea     rdi, lock_4^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4247DD^^^
backtrace_symbols_fd$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 118h^^^test    esi, esi^^^mov     [rsp+148h+var_138], esi^^^mov     [rsp+148h+var_134], edx^^^jle     loc_411128^^^lea     rax, [rsp+148h+var_58]^^^lea     rdx, [rsp+148h+var_48]^^^xor     ebx, ebx^^^mov     [rsp+148h+var_140], rax^^^mov     [rsp+148h+var_148], rdx^^^mov     [rsp+148h+var_130], rax^^^jmp     loc_4110E3^^^mov     rdi, [rsp+148h+var_88]^^^test    rdi, rdi^^^jz      loc_411107^^^cmp     byte ptr [rdi], 0^^^jz      loc_411107^^^mov     [rsp+148h+var_118], rdi^^^call    strlen^^^mov     rdi, [rsp+148h+var_78]^^^mov     [rsp+148h+var_110], rax^^^test    rdi, rdi^^^jz      loc_411140^^^mov     [rsp+148h+var_108], offset asc_49979F^^^mov     [rsp+148h+var_100], 1^^^mov     r14d, 9^^^mov     [rsp+148h+var_F8], rdi^^^mov     r13d, 8^^^mov     r12d, 7^^^call    strlen^^^mov     [rsp+148h+var_F0], rax^^^mov     rax, [rsp+148h+var_70]^^^mov     r15d, 6^^^mov     [rsp+148h+var_120], 5^^^mov     [rsp+148h+var_128], 4^^^mov     esi, 3^^^mov     rdx, [rbp+rbx*8+0]^^^mov     rdi, rax^^^mov     ecx, offset a0x_0^^^sub     rdi, rdx^^^cmp     rax, rdx^^^ja      short loc_411012^^^mov     rdi, rdx^^^mov     ecx, offset a0x ^^^sub     rdi, rax^^^shl     rsi, 4^^^mov     edx, 10h^^^mov     [rsp+rsi+148h+var_118], rcx^^^mov     [rsp+rsi+148h+var_110], 3^^^lea     rsi, [rsp+148h+var_48]^^^xor     ecx, ecx^^^call    _itoa_word^^^mov     rdx, [rsp+148h+var_128]^^^mov     rcx, [rsp+148h+var_148]^^^shl     rdx, 4^^^sub     rcx, rax^^^mov     [rsp+rdx+148h+var_118], rax^^^mov     rax, [rsp+148h+var_120]^^^mov     [rsp+rdx+148h+var_110], rcx^^^shl     rax, 4^^^mov     [rsp+rax+148h+var_118], (offset aInvalidModeFor+18h)^^^mov     [rsp+rax+148h+var_110], 1^^^nop     dword ptr [rax]^^^mov     rdi, [rbp+rbx*8+0]^^^mov     rsi, [rsp+148h+var_130]^^^shl     r15, 4^^^xor     ecx, ecx^^^mov     edx, 10h^^^mov     [rsp+r15+148h+var_118], offset a0x_1^^^mov     [rsp+r15+148h+var_110], 3^^^shl     r12, 4^^^shl     r13, 4^^^call    _itoa_word^^^mov     rdx, [rsp+148h+var_140]^^^mov     edi, [rsp+148h+var_134]^^^lea     rsi, [rsp+148h+var_118]^^^mov     [rsp+r12+148h+var_118], rax^^^add     rbx, 1^^^mov     [rsp+r13+148h+var_118], (offset aS_1+4)^^^sub     rdx, rax^^^mov     [rsp+r12+148h+var_110], rdx^^^mov     edx, r14d^^^mov     [rsp+r13+148h+var_110], 2^^^call    writev^^^cmp     [rsp+148h+var_138], ebx^^^jle     short loc_411128^^^mov     rdi, [rbp+rbx*8+0]^^^lea     rdx, [rsp+148h+var_48]^^^lea     rsi, [rsp+148h+var_88]^^^xor     ecx, ecx^^^call    _dl_addr^^^test    eax, eax^^^jnz     loc_410F60^^^mov     r14d, 3^^^mov     r13d, 2^^^mov     r12d, 1^^^xor     r15d, r15d^^^jmp     loc_411070^^^add     rsp, 118h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+148h+var_48]^^^mov     rax, [rax]^^^test    rax, rax^^^jz      short loc_4111A0^^^mov     [rsp+148h+var_108], offset asc_49979F^^^mov     [rsp+148h+var_100], 1^^^mov     r14d, 8^^^mov     [rsp+148h+var_70], rax^^^mov     r13d, 7^^^mov     r12d, 6^^^mov     r15d, 5^^^mov     [rsp+148h+var_120], 4^^^mov     [rsp+148h+var_128], 3^^^mov     esi, 2^^^jmp     loc_410FF2^^^mov     r14d, 4^^^mov     r13d, 3^^^mov     r12d, 2^^^mov     r15d, 1^^^jmp     loc_411070^^^
sub_437D60$$$sub     rdi, 20h^^^lea     rax, [rsi-28h]^^^mov     r8, [rsi-8]^^^add     rdx, 3^^^mov     rcx, rdi^^^jmp     loc_437C40^^^
_L_lock_50_0$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_425D76^^^
_IO_switch_to_wbackup_area$$$mov     rax, [rdi+0A0h]^^^or      dword ptr [rdi], 100h^^^mov     rcx, [rax+8]^^^mov     rdx, [rax+50h]^^^mov     rsi, [rax+40h]^^^mov     [rax+50h], rcx^^^mov     rcx, [rax+10h]^^^mov     [rax+8], rdx^^^mov     [rax], rdx^^^mov     [rax+10h], rsi^^^mov     [rax+40h], rcx^^^retn^^^
_L_unlock_685$$$lea     rdi, lock_12832^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_45921C^^^
_IO_default_finish$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, [rdi+38h]^^^test    rdi, rdi^^^jz      short loc_42C652^^^test    byte ptr [rbx], 1^^^jz      short loc_42C690^^^mov     rax, [rbx+60h]^^^test    rax, rax^^^jz      short loc_42C670^^^nop     dword ptr [rax+rax+00h]^^^mov     qword ptr [rax+8], 0^^^mov     rax, [rax]^^^test    rax, rax^^^jnz     short loc_42C660^^^mov     rdi, [rbx+48h]^^^test    rdi, rdi^^^jz      short loc_42C686^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     rdi, rbx^^^pop     rbx^^^jmp     _IO_un_link^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     qword ptr [rbx+40h], 0^^^mov     qword ptr [rbx+38h], 0^^^jmp     short loc_42C652^^^
_IO_default_doallocate$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^xor     r9d, r9d^^^mov     [rsp+var_8], r12^^^mov     rbx, rdi^^^sub     rsp, 18h^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^mov     esi, 2000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbp, rax^^^jz      short loc_42C363^^^mov     rdi, [rbx+38h]^^^lea     r12, [rax+2000h]^^^test    rdi, rdi^^^jz      short loc_42C353^^^test    byte ptr [rbx], 1^^^jz      short loc_42C380^^^and     dword ptr [rbx], 0FFFFFFFEh^^^mov     [rbx+38h], rbp^^^mov     eax, 1^^^mov     [rbx+40h], r12^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^jmp     short loc_42C353^^^
sub_41E2E9$$$jmp     sub_41E17E^^^
_IO_file_close_mmap$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, [rdi+38h]^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^call    munmap^^^mov     qword ptr [rbx+40h], 0^^^mov     qword ptr [rbx+38h], 0^^^mov     edi, [rbx+70h]^^^pop     rbx^^^jmp     __close_nocancel^^^
_IO_new_file_underflow$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     eax, [rdi]^^^test    al, 4^^^jnz     loc_42B090^^^mov     rdx, [rdi+8]^^^cmp     rdx, [rdi+10h]^^^jb      loc_42B020^^^cmp     qword ptr [rdi+38h], 0^^^jz      loc_42B048^^^test    eax, 202h^^^jz      loc_42AFB0^^^mov     rbp, cs:stdout^^^mov     edx, [rbp+0]^^^mov     rdi, rbp^^^mov     eax, edx^^^and     eax, 8000h^^^jnz     short loc_42AF5E^^^mov     rdx, [rbp+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_42AF58^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42AF3D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_4530^^^jmp     short loc_42AF46^^^cmpxchg [rdx], esi^^^jnz     _L_lock_4530^^^mov     rdx, [rbp+88h]^^^mov     rdi, cs:stdout^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     edx, [rdi]^^^and     edx, 288h^^^cmp     edx, 280h^^^jz      loc_42B078^^^mov     eax, [rbp+0]^^^test    ah, 80h^^^jnz     short loc_42AFB0^^^mov     rdx, [rbp+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_42AFB0^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42AFA8^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_4570^^^jmp     short loc_42AFB0^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_4570^^^mov     rdi, rbx^^^call    _IO_switch_to_get_mode^^^mov     rsi, [rbx+38h]^^^mov     rdx, [rbx+40h]^^^mov     rdi, rbx^^^mov     rax, [rbx+0D8h]^^^sub     rdx, rsi^^^mov     [rbx+8], rsi^^^mov     [rbx+18h], rsi^^^mov     [rbx+10h], rsi^^^mov     [rbx+30h], rsi^^^mov     [rbx+28h], rsi^^^mov     [rbx+20h], rsi^^^call    qword ptr [rax+70h]^^^cmp     rax, 0^^^jle     short loc_42B030^^^mov     rdx, [rbx+90h]^^^add     [rbx+10h], rax^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_42B009^^^add     rax, rdx^^^mov     [rbx+90h], rax^^^mov     rax, [rbx+8]^^^movzx   eax, byte ptr [rax]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^movzx   eax, byte ptr [rdx]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^mov     eax, [rbx]^^^jnz     short loc_42B070^^^or      eax, 10h^^^mov     [rbx], eax^^^add     rsp, 8^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rdi, [rdi+48h]^^^test    rdi, rdi^^^jz      short loc_42B05C^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     eax, [rbx]^^^jmp     loc_42AEEC^^^or      eax, 20h^^^jmp     short loc_42B037^^^mov     rax, [rdi+0D8h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+18h]^^^jmp     loc_42AF70^^^or      eax, 20h^^^mov     [rdi], eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_42B010^^^
_dl_tlsdesc_resolve_hold$$$sub     rsp, 48h^^^mov     [rsp+48h+var_48], rax^^^mov     [rsp+48h+var_40], rdi^^^mov     rdi, rax^^^mov     [rsp+48h+var_38], rsi^^^lea     rsi, loc_457240+1^^^mov     [rsp+48h+var_30], r8^^^mov     [rsp+48h+var_28], r9^^^mov     [rsp+48h+var_20], r10^^^mov     [rsp+48h+var_18], r11^^^mov     [rsp+48h+var_10], rdx^^^mov     [rsp+48h+var_8], rcx^^^call    _dl_tlsdesc_resolve_hold_fixup^^^mov     rax, [rsp+48h+var_48]^^^mov     rdi, [rsp+48h+var_40]^^^mov     rsi, [rsp+48h+var_38]^^^mov     r8, [rsp+48h+var_30]^^^mov     r9, [rsp+48h+var_28]^^^mov     r10, [rsp+48h+var_20]^^^mov     r11, [rsp+48h+var_18]^^^mov     rdx, [rsp+48h+var_10]^^^mov     rcx, [rsp+48h+var_8]^^^add     rsp, 48h^^^jmp     qword ptr [eax]^^^
_dl_fixup$$$push    rbp^^^mov     rax, rdi^^^mov     esi, esi^^^lea     rcx, [rsi+rsi*2]^^^push    rbx^^^shl     rcx, 3^^^sub     rsp, 28h^^^mov     rdx, [rdi+68h]^^^mov     r9, [rax+70h]^^^mov     rbx, [rax]^^^mov     rdi, [rdx+8]^^^mov     rdx, [rax+0F8h]^^^mov     r10, [r9+8]^^^add     rcx, [rdx+8]^^^mov     r8, [rcx+8]^^^mov     rbp, [rcx]^^^mov     rsi, r8^^^shr     rsi, 20h^^^cmp     r8d, 7^^^lea     rdx, [rsi+rsi*2]^^^lea     rdx, [r10+rdx*8]^^^mov     [rsp+38h+var_28], rdx^^^jnz     loc_479C04^^^movzx   ecx, byte ptr [rdx+5]^^^and     ecx, 3^^^jnz     loc_479C5F^^^mov     r9, [rax+1C8h]^^^xor     r8d, r8d^^^test    r9, r9^^^jz      short loc_479B7B^^^mov     r8, [r9+8]^^^movzx   esi, word ptr [r8+rsi*2]^^^and     esi, 7FFFh^^^lea     r8, [rsi+rsi*2]^^^mov     rsi, [rax+2E0h]^^^lea     r8, [rsi+r8*8]^^^mov     r9d, [r8+8]^^^test    r9d, r9d^^^cmovz   r8, rcx^^^mov     ecx, fs:18h^^^test    ecx, ecx^^^jnz     loc_479C49^^^mov     esi, 1^^^mov     edx, [rdx]^^^mov     rcx, [rax+380h]^^^mov     r9d, 1^^^mov     [rsp+38h+var_38], esi^^^mov     rsi, rax^^^mov     [rsp+38h+var_30], 0^^^add     rdi, rdx^^^lea     rdx, [rsp+38h+var_28]^^^call    _dl_lookup_symbol_x^^^mov     r8, rax^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     short loc_479C1D^^^mov     rdx, [rsp+38h+var_28]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_479BEE^^^test    r8, r8^^^jz      short loc_479BDE^^^mov     rax, [r8]^^^add     rax, [rdx+8]^^^movzx   edx, byte ptr [rdx+4]^^^and     edx, 0Fh^^^cmp     edx, 0Ah^^^jz      short loc_479C67^^^mov     edx, cs:_dl_bind_not^^^test    edx, edx^^^jnz     short loc_479BFD^^^mov     [rbp+rbx+0], rax^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___11866^^^mov     edx, 57h^^^mov     esi, offset a__ElfDlRuntime^^^mov     edi, offset aRelocR_info0_0^^^call    __assert_fail^^^xor     eax, eax^^^xchg    eax, fs:1Ch^^^cmp     eax, 2^^^jnz     short loc_479BCA^^^mov     rdi, fs:10h^^^mov     edx, 1^^^add     rdi, 1Ch^^^mov     al, 0CAh^^^mov     esi, 81h^^^syscall^^^jmp     short loc_479BCA^^^mov     dword ptr fs:1Ch, 1^^^mov     esi, 5^^^jmp     loc_479B90^^^mov     rax, rbx^^^jmp     loc_479BDE^^^call    rax^^^nop     dword ptr [rax+00000000h]^^^jmp     loc_479BEE^^^
__strchr_sse2_no_bsf$$$movd    xmm1, esi^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm2, xmm2^^^punpcklbw xmm1, xmm1^^^or      esi, 0FFFFFFFFh^^^movdqa  xmm0, xmmword ptr [rdi]^^^pshufd  xmm1, xmm1, 0^^^sub     rcx, rdi^^^movdqa  xmm3, xmm0^^^lea     rdi, [rdi+10h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^shl     esi, cl^^^pmovmskb eax, xmm0^^^pmovmskb edx, xmm3^^^and     eax, esi^^^and     edx, esi^^^test    eax, eax^^^jnz     short loc_445184^^^test    edx, edx^^^jnz     short loc_445180^^^movdqa  xmm0, xmmword ptr [rdi]^^^lea     rdi, [rdi+10h]^^^movdqa  xmm3, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^pmovmskb eax, xmm0^^^pmovmskb edx, xmm3^^^or      edx, eax^^^jz      short loc_44514C^^^pmovmskb edx, xmm3^^^test    eax, eax^^^jnz     short loc_445184^^^nop     word ptr [rax+rax+00000000h]^^^xor     rax, rax^^^retn^^^lea     rdi, [rdi-10h]^^^test    edx, edx^^^jz      loc_4452A0^^^test    al, al^^^jz      short loc_445200^^^mov     cl, al^^^and     cl, 0Fh^^^jnz     short loc_4451D0^^^mov     ch, dl^^^and     ch, 0Fh^^^jnz     short loc_445180^^^test    al, 10h^^^jnz     loc_445380^^^test    dl, 10h^^^jnz     short loc_445180^^^test    al, 20h^^^jnz     loc_445390^^^test    dl, 20h^^^jnz     short loc_445180^^^test    al, 40h^^^jnz     loc_4453A0^^^test    dl, 40h^^^jnz     short loc_445180^^^lea     rax, [rdi+7]^^^retn^^^test    al, 1^^^jnz     loc_445340^^^test    dl, 1^^^jnz     short loc_445180^^^test    al, 2^^^jnz     loc_445350^^^test    dl, 2^^^jnz     short loc_445180^^^test    al, 4^^^jnz     loc_445360^^^test    dl, 4^^^jnz     short loc_445180^^^lea     rax, [rdi+3]^^^retn^^^test    dl, dl^^^jnz     loc_445180^^^mov     cl, ah^^^and     cl, 0Fh^^^jnz     short loc_445260^^^mov     ch, dh^^^and     ch, 0Fh^^^jnz     loc_445180^^^test    ah, 10h^^^jnz     loc_4453F0^^^test    dh, 10h^^^jnz     loc_445180^^^test    ah, 20h^^^jnz     loc_445400^^^test    dh, 20h^^^jnz     loc_445180^^^test    ah, 40h^^^jnz     loc_445410^^^test    dh, 40h^^^jnz     loc_445180^^^lea     rax, [rdi+0Fh]^^^retn^^^test    ah, 1^^^jnz     loc_4453B0^^^test    dh, 1^^^jnz     loc_445180^^^test    ah, 2^^^jnz     loc_4453C0^^^test    dh, 2^^^jnz     loc_445180^^^test    ah, 4^^^jnz     loc_4453D0^^^test    dh, 4^^^jnz     loc_445180^^^lea     rax, [rdi+0Bh]^^^retn^^^test    al, al^^^jz      short loc_4452F0^^^test    al, 1^^^jnz     loc_445340^^^test    al, 2^^^jnz     loc_445350^^^test    al, 4^^^jnz     loc_445360^^^test    al, 8^^^jnz     loc_445370^^^test    al, 10h^^^jnz     loc_445380^^^test    al, 20h^^^jnz     loc_445390^^^test    al, 40h^^^jnz     loc_4453A0^^^lea     rax, [rdi+7]^^^retn^^^test    ah, 1^^^jnz     loc_4453B0^^^test    ah, 2^^^jnz     loc_4453C0^^^test    ah, 4^^^jnz     loc_4453D0^^^test    ah, 8^^^jnz     loc_4453E0^^^test    ah, 10h^^^jnz     loc_4453F0^^^test    ah, 20h^^^jnz     loc_445400^^^test    ah, 40h^^^jnz     loc_445410^^^lea     rax, [rdi+0Fh]^^^retn^^^lea     rax, [rdi]^^^retn^^^lea     rax, [rdi+1]^^^retn^^^lea     rax, [rdi+2]^^^retn^^^lea     rax, [rdi+3]^^^retn^^^lea     rax, [rdi+4]^^^retn^^^lea     rax, [rdi+5]^^^retn^^^lea     rax, [rdi+6]^^^retn^^^lea     rax, [rdi+8]^^^retn^^^lea     rax, [rdi+9]^^^retn^^^lea     rax, [rdi+0Ah]^^^retn^^^lea     rax, [rdi+0Bh]^^^retn^^^lea     rax, [rdi+0Ch]^^^retn^^^lea     rax, [rdi+0Dh]^^^retn^^^lea     rax, [rdi+0Eh]^^^retn^^^
sub_482A90$$$mov     rsi, [rbx+18h]^^^xor     edx, edx^^^pop     rbx^^^jmp     _dl_rtld_di_serinfo^^^
decide_maybe_mmap$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 0A8h^^^mov     rax, [rdi+0D8h]^^^mov     rbx, rdi^^^mov     rsi, rsp^^^call    qword ptr [rax+90h]^^^test    eax, eax^^^jnz     short loc_429038^^^mov     eax, [rsp+0A8h+var_90]^^^and     eax, 0F000h^^^cmp     eax, 8000h^^^jz      short loc_429080^^^mov     edx, [rbx+0C0h]^^^mov     eax, offset _IO_file_jumps^^^test    edx, edx^^^mov     edx, offset _IO_wfile_jumps^^^cmovg   rax, rdx^^^mov     [rbx+0D8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     [rax+140h], rdx^^^mov     rbx, [rsp+0A8h+var_10]^^^mov     rbp, [rsp+0A8h+var_8]^^^add     rsp, 0A8h^^^retn^^^mov     rsi, [rsp+0A8h+var_78]^^^test    rsi, rsi^^^jz      short loc_429038^^^mov     rax, [rbx+90h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_42909C^^^cmp     rsi, rax^^^jl      short loc_429038^^^mov     r8d, [rbx+70h]^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     ecx, 1^^^mov     edx, 1^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbp, rax^^^jz      loc_429038^^^mov     rsi, [rsp+0A8h+var_78]^^^mov     edi, [rbx+70h]^^^xor     edx, edx^^^call    lseek64^^^mov     rsi, [rsp+0A8h+var_78]^^^cmp     rax, rsi^^^jz      short loc_4290F2^^^mov     rdi, rbp^^^call    munmap^^^mov     qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_429038^^^lea     rdx, [rbp+rax+0]^^^xor     ecx, ecx^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    _IO_setb^^^cmp     qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh^^^jz      short loc_429163^^^mov     rax, rbp^^^add     rax, [rbx+90h]^^^mov     ecx, [rbx+0C0h]^^^mov     [rbx+18h], rbp^^^mov     edx, offset _IO_wfile_jumps_mmap^^^mov     [rbx+8], rax^^^mov     rax, [rsp+0A8h+var_78]^^^add     rbp, rax^^^mov     [rbx+90h], rax^^^test    ecx, ecx^^^mov     eax, offset _IO_file_jumps_mmap^^^mov     [rbx+10h], rbp^^^cmovg   rax, rdx^^^mov     [rbx+0D8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     [rax+140h], rdx^^^jmp     loc_429063^^^mov     qword ptr [rbx+90h], 0^^^jmp     short loc_42910E^^^
__libc_start_main$$$push    r13^^^mov     eax, 0^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, r9^^^push    rbx^^^mov     rbx, r8^^^sub     rsp, 0A8h^^^test    rax, rax^^^mov     [rsp+0C8h+var_B0], rdi^^^mov     [rsp+0C8h+var_BC], esi^^^mov     [rsp+0C8h+var_B8], rdx^^^jz      loc_401335^^^mov     ecx, cs:0^^^xor     eax, eax^^^test    ecx, ecx^^^setz    al^^^mov     cs:__libc_multiple_libcs, eax^^^movsxd  rax, [rsp+0C8h+var_BC]^^^mov     rdx, [rsp+0C8h+var_B8]^^^lea     rdi, [rdx+rax*8+8]^^^mov     rax, [rsp+0C8h+arg_0]^^^mov     cs:environ, rdi^^^mov     cs:__libc_stack_end, rax^^^nop     word ptr [rax+rax+00h]^^^mov     rax, [rdi]^^^add     rdi, 8^^^test    rax, rax^^^jnz     short loc_401200^^^call    _dl_aux_init^^^mov     edx, cs:__libc_multiple_libcs^^^test    edx, edx^^^jnz     short loc_401247^^^call    _dl_discover_osversion^^^test    eax, eax^^^js      loc_401349^^^mov     edx, cs:_dl_osversion^^^test    edx, edx^^^jnz     loc_40133C^^^mov     cs:_dl_osversion, eax^^^cmp     eax, 20617h^^^jle     loc_40132B^^^call    __libc_csu_irel^^^call    __pthread_initialize_minimal^^^mov     rax, cs:_dl_random^^^test    rax, rax^^^jz      loc_40135D^^^mov     rax, [rax]^^^xor     al, al^^^mov     [rsp+0C8h+var_38], rax^^^mov     fs:28h, rax^^^test    rbp, rbp^^^jz      short loc_401288^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbp^^^call    __cxa_atexit^^^mov     rdx, cs:environ^^^mov     rsi, [rsp+0C8h+var_B8]^^^mov     edi, [rsp+0C8h+var_BC]^^^call    __libc_init_first^^^test    rbx, rbx^^^jz      short loc_4012AE^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^call    __cxa_atexit^^^mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jnz     loc_401353^^^test    r12, r12^^^jz      short loc_4012D4^^^mov     rdx, cs:environ^^^mov     rsi, [rsp+0C8h+var_B8]^^^mov     edi, [rsp+0C8h+var_BC]^^^call    r12^^^lea     rdi, [rsp+0C8h+var_A8]^^^call    _setjmp^^^test    eax, eax^^^jnz     loc_4013BE^^^mov     rax, fs:300h^^^mov     [rsp+0C8h+var_60], rax^^^mov     rax, fs:2F8h^^^mov     [rsp+0C8h+var_58], rax^^^lea     rax, [rsp+0C8h+var_A8]^^^mov     fs:300h, rax^^^mov     rdx, cs:environ^^^mov     rsi, [rsp+0C8h+var_B8]^^^mov     edi, [rsp+0C8h+var_BC]^^^call    [rsp+0C8h+var_B0]^^^mov     edi, eax^^^call    exit^^^mov     edi, offset aFatalKernelToo^^^call    __libc_fatal^^^xor     eax, eax^^^jmp     loc_4011CF^^^cmp     edx, eax^^^jbe     loc_40123C^^^jmp     loc_401236^^^mov     edi, offset aFatalCannotDet^^^call    __libc_fatal^^^call    __libc_check_standard_fds^^^jmp     loc_4012BC^^^xor     esi, esi^^^mov     edi, offset aDevUrandom^^^mov     [rsp+0C8h+var_38], 0^^^call    __open_nocancel^^^test    eax, eax^^^mov     r13d, eax^^^js      short loc_4013A1^^^lea     rsi, [rsp+0C8h+var_38+1]^^^mov     edx, 7^^^mov     edi, eax^^^call    __read_nocancel^^^movsxd  rdi, r13d^^^mov     edx, eax^^^mov     eax, 3^^^syscall^^^cmp     edx, 7^^^jz      short loc_4013B1^^^mov     byte ptr [rsp+0C8h+var_38+5], 0FFh^^^mov     byte ptr [rsp+0C8h+var_38+4], 0Ah^^^mov     rax, [rsp+0C8h+var_38]^^^jmp     loc_40126E^^^call    near ptr 0^^^lock dec dword ptr cs:0^^^setz    dl^^^xor     eax, eax^^^test    dl, dl^^^jnz     loc_401324^^^xor     edi, edi^^^call    __exit_thread^^^nop^^^nop^^^
_IO_sungetwc$$$mov     rax, [rdi+0A0h]^^^push    rbx^^^mov     rbx, rdi^^^mov     rdx, [rax]^^^cmp     rdx, [rax+10h]^^^jbe     short loc_4278E0^^^lea     rcx, [rdx-4]^^^mov     [rax], rcx^^^mov     eax, [rdx-4]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_4278D6^^^and     dword ptr [rbx], 0FFFFFFEFh^^^pop     rbx^^^retn^^^mov     rax, [rdi+0D8h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+30h]^^^jmp     short loc_4278CE^^^
_Unwind_GetIPInfo$$$mov     rax, [rdi+0C0h]^^^shr     rax, 3Fh^^^mov     [rsi], eax^^^mov     rax, [rdi+98h]^^^retn^^^
memchr$$$movq    xmm1, rsi       ^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^test    rdx, rdx^^^jz      loc_4321B0^^^punpcklbw xmm1, xmm1^^^and     rcx, 3Fh^^^pshufd  xmm1, xmm1, 0^^^cmp     rcx, 30h^^^ja      short loc_431EE0^^^movdqu  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_432170^^^sub     rdx, 10h^^^jbe     loc_4321B0^^^add     rdi, 10h^^^and     rcx, 0Fh^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^add     rdx, rcx^^^sub     rdx, 40h^^^jbe     loc_432090^^^jmp     short loc_431F30^^^and     rcx, 0Fh^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^sar     eax, cl^^^test    eax, eax^^^jz      short loc_431F10^^^bsf     eax, eax^^^sub     rdx, rax^^^jbe     loc_4321B0^^^add     rax, rdi^^^add     rax, rcx^^^retn^^^add     rdx, rcx^^^sub     rdx, 10h^^^jbe     loc_4321B0^^^add     rdi, 10h^^^sub     rdx, 40h^^^jbe     loc_432090^^^nop     dword ptr [rax+rax+00h]^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_432140^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pcmpeqb xmm2, xmm1^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_432150^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_432160^^^movdqa  xmm4, xmmword ptr [rdi+30h]^^^pcmpeqb xmm4, xmm1^^^add     rdi, 40h^^^pmovmskb eax, xmm4^^^test    eax, eax^^^jnz     loc_432130^^^test    rdi, 3Fh^^^jz      short loc_432000^^^sub     rdx, 40h^^^jbe     loc_432090^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_432140^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pcmpeqb xmm2, xmm1^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_432150^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_432160^^^movdqa  xmm3, xmmword ptr [rdi+30h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^add     rdi, 40h^^^test    eax, eax^^^jnz     loc_432130^^^mov     rcx, rdi^^^and     rdi, 0FFFFFFFFFFFFFFC0h^^^and     rcx, 3Fh^^^add     rdx, rcx^^^nop^^^sub     rdx, 40h^^^jbe     loc_432090^^^movdqa  xmm0, xmmword ptr [rdi]^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^movdqa  xmm4, xmmword ptr [rdi+30h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm2, xmm1^^^pcmpeqb xmm3, xmm1^^^pcmpeqb xmm4, xmm1^^^pmaxub  xmm3, xmm0^^^pmaxub  xmm4, xmm2^^^pmaxub  xmm4, xmm3^^^pmovmskb eax, xmm4^^^add     rdi, 40h^^^test    eax, eax^^^jz      short loc_432000^^^sub     rdi, 40h^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_432140^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_432150^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi+30h]^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_432160^^^pmovmskb eax, xmm1^^^bsf     eax, eax^^^lea     rax, [rdi+rax+30h]^^^retn^^^add     rdx, 20h^^^jle     short loc_432100^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_432140^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pcmpeqb xmm2, xmm1^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_432150^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_432190^^^sub     rdx, 10h^^^jle     loc_4321B0^^^pcmpeqb xmm1, xmmword ptr [rdi+30h]^^^pmovmskb eax, xmm1^^^test    eax, eax^^^jnz     loc_4321A0^^^xor     rax, rax^^^retn^^^add     rdx, 20h^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     short loc_432170^^^sub     rdx, 10h^^^jbe     loc_4321B0^^^pcmpeqb xmm1, xmmword ptr [rdi+10h]^^^pmovmskb eax, xmm1^^^test    eax, eax^^^jnz     short loc_432180^^^xor     rax, rax^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi-10h]^^^retn^^^bsf     eax, eax^^^add     rax, rdi^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi+10h]^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi+20h]^^^retn^^^bsf     eax, eax^^^sub     rdx, rax^^^jbe     short loc_4321B0^^^add     rax, rdi^^^retn^^^bsf     eax, eax^^^sub     rdx, rax^^^jbe     short loc_4321B0^^^lea     rax, [rdi+rax+10h]^^^retn^^^bsf     eax, eax^^^sub     rdx, rax^^^jbe     short loc_4321B0^^^lea     rax, [rdi+rax+20h]^^^retn^^^bsf     eax, eax^^^sub     rdx, rax^^^jbe     short loc_4321B0^^^lea     rax, [rdi+rax+30h]^^^retn^^^xor     rax, rax^^^retn^^^
size_of_encoded_value$$$sub     rsp, 8^^^cmp     dil, 0FFh^^^jz      short loc_492F90^^^and     edi, 7^^^cmp     edi, 2^^^jz      short loc_492F80^^^jle     short loc_492F60^^^cmp     edi, 3^^^jz      short loc_492F70^^^cmp     edi, 4^^^nop     dword ptr [rax+00h]^^^jz      short loc_492F64^^^call    abort^^^test    edi, edi^^^jnz     short loc_492F52^^^mov     eax, 8^^^add     rsp, 8^^^retn^^^mov     eax, 4^^^add     rsp, 8^^^retn^^^mov     eax, 2^^^add     rsp, 8^^^retn^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^
_L_unlock_291$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_4261BF^^^
vsscanf$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_8], r12^^^sub     rsp, 108h^^^mov     r12, rdi^^^mov     rbp, rdx^^^xor     r8d, r8d^^^mov     rdi, rsp^^^xor     ecx, ecx^^^mov     edx, 0FFFFFFFFh^^^mov     esi, 8000h^^^mov     [rsp+108h+var_80], 0^^^call    _IO_no_init^^^mov     rsi, r12^^^mov     rdi, rsp^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     [rsp+108h+var_30], offset _IO_str_jumps^^^call    _IO_str_init_static_internal^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rdi, rsp^^^xor     ecx, ecx^^^call    _IO_vfscanf_internal^^^mov     rbx, [rsp+108h+var_18]^^^mov     rbp, [rsp+108h+var_10]^^^mov     r12, [rsp+108h+var_8]^^^add     rsp, 108h^^^retn^^^
open64$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_40F03D^^^
_L_unlock_294$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4188AE^^^
_dl_init_paths$$$push    rbp^^^mov     ecx, offset max_capstrlen^^^mov     edx, offset ncapstr^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 18h^^^mov     [rbp+var_38], rdi^^^mov     rsi, cs:_dl_platformlen^^^mov     rdi, cs:_dl_platform^^^call    _dl_important_hwcaps^^^mov     edi, 28h^^^mov     cs:capstr, rax^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     cs:rtld_search_dirs, rax^^^jz      loc_451105^^^mov     rbx, cs:ncapstr^^^mov     rcx, 0CCCCCCCCCCCCCCCDh^^^lea     r14, ds:4Fh[rbx*4]^^^mov     rax, r14^^^mul     rcx^^^mov     r14, rdx^^^shr     r14, 5^^^imul    rdi, r14, 0A50h^^^call    malloc^^^test    rax, rax^^^mov     [r12], rax^^^jz      loc_4510F2^^^lea     r15, [r14+r14*4]^^^pxor    xmm0, xmm0^^^lea     r13, [r12+8]^^^mov     cs:dword_6C1FB8, 0^^^mov     cs:_dl_all_dirs, rax^^^shl     r15, 3^^^mov     qword ptr [rax+8], offset aSystemSearchPa^^^mov     qword ptr [rax+10h], 0^^^mov     rdx, r15^^^lea     r10, [rax+r15+10h]^^^mov     qword ptr [rax+18h], offset system_dirs^^^neg     rdx^^^mov     qword ptr [rax+20h], 16h^^^mov     r11d, offset aUsrLibX86_64Li^^^xor     r8d, r8d^^^mov     [rbp+var_40], rdx^^^test    rbx, rbx^^^jz      loc_450F61^^^lea     rcx, [rax+28h]^^^and     ecx, 0Fh^^^shr     rcx, 2^^^neg     rcx^^^and     ecx, 3^^^cmp     rcx, rbx^^^cmova   rcx, rbx^^^xor     edx, edx^^^test    rcx, rcx^^^jz      short loc_450F06^^^nop     word ptr [rax+rax+00000000h]^^^mov     dword ptr [rax+rdx*4+28h], 0^^^add     rdx, 1^^^cmp     rdx, rcx^^^jb      short loc_450EF0^^^cmp     rbx, rcx^^^jz      short loc_450F61^^^mov     r14, rbx^^^sub     r14, rcx^^^mov     rdi, r14^^^shr     rdi, 2^^^lea     r9, ds:0[rdi*4]^^^test    r9, r9^^^jz      short loc_450F50^^^lea     rsi, [rax+rcx*4+28h]^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00000000h]^^^add     rcx, 1^^^movdqa  xmmword ptr [rsi], xmm0^^^add     rsi, 10h^^^cmp     rcx, rdi^^^jb      short loc_450F30^^^add     rdx, r9^^^cmp     r14, r9^^^jz      short loc_450F61^^^nop     dword ptr [rax+00000000h]^^^mov     dword ptr [rax+rdx*4+28h], 0^^^add     rdx, 1^^^cmp     rbx, rdx^^^ja      short loc_450F50^^^add     r8, 1^^^cmp     r8, 4^^^jz      short loc_450FC0^^^mov     rdx, [rbp+var_40]^^^add     rax, r15^^^lea     rcx, [r13+8]^^^mov     [r13+0], rax^^^mov     [rax+rdx], rax^^^mov     qword ptr [rax+8], offset aSystemSearchPa^^^mov     qword ptr [r10], 0^^^mov     [r10+8], r11^^^add     r10, r15^^^cmp     byte ptr [r11], 2Fh^^^mov     rdx, ds:system_dirs_len[r8*8]^^^mov     [rax+20h], rdx^^^lea     rdx, [r11+rdx+1]^^^jnz     loc_4510D9^^^mov     r12, r13^^^mov     r11, rdx^^^mov     r13, rcx^^^jmp     loc_450EBF^^^cmp     [rbp+var_38], 0^^^mov     qword ptr [rax], 0^^^mov     cs:max_dirnamelen, 1Ah^^^mov     qword ptr [r12+8], 0^^^jz      short loc_450FEB^^^mov     rax, [rbp+var_38]^^^cmp     byte ptr [rax], 0^^^jnz     short loc_451005^^^mov     cs:env_path_list, 0FFFFFFFFFFFFFFFFh^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rdi, rax^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, [rbp+var_38]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+40h+var_38+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     rbx, rax^^^mov     rax, [rbp+var_38]^^^mov     edi, 10h^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      short loc_451071^^^mov     rcx, rax^^^mov     eax, 1^^^nop     dword ptr [rax+00000000h]^^^sub     edx, 3Ah^^^lea     rsi, [rax+1]^^^cmp     dl, 1^^^cmovbe  rax, rsi^^^add     rcx, 1^^^movzx   edx, byte ptr [rcx]^^^test    dl, dl^^^jnz     short loc_451050^^^lea     rdi, ds:8[rax*8]^^^call    malloc^^^test    rax, rax^^^mov     cs:env_path_list, rax^^^jz      short loc_4510F2^^^mov     ecx, cs:__libc_enable_secure^^^xor     r9d, r9d^^^mov     rdi, rbx^^^mov     r8d, offset aLd_library_pat^^^mov     edx, offset asc_49FBA7^^^mov     rsi, rax^^^call    fillin_rpath^^^mov     rdi, cs:env_path_list^^^cmp     qword ptr [rdi], 0^^^jz      short loc_4510C7^^^mov     cs:dword_6C1FC8, 0^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^call    free^^^mov     cs:env_path_list, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_4510AE^^^mov     ecx, offset __PRETTY_FUNCTION___11117^^^mov     edx, 304h^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aPelemDirname0^^^call    __assert_fail^^^mov     ecx, offset aCannotCreateCa^^^xor     edx, edx^^^xor     esi, esi^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     ecx, offset aCannotCreateSe^^^jmp     short loc_4510F7^^^
__mpn_impn_mul_n_basecase$$$push    r15^^^mov     r15, rsi^^^push    r14^^^push    r13^^^mov     r13, rdx^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 8^^^mov     rcx, [rdx]^^^cmp     rcx, 1^^^jbe     loc_463980^^^mov     rdx, r12^^^call    __mpn_mul_1^^^cmp     r12, 1^^^lea     r14, ds:0[r12*8]^^^mov     [rbp+r12*8+0], rax^^^jle     short loc_463970^^^add     rbp, 8^^^mov     ebx, 1^^^jmp     short loc_463940^^^mov     rdx, r12^^^mov     rsi, r15^^^mov     rdi, rbp^^^call    __mpn_addmul_1^^^add     rbx, 1^^^mov     [rbp+r14+0], rax^^^add     rbp, 8^^^cmp     rbx, r12^^^jz      short loc_463970^^^mov     rcx, [r13+rbx*8+0]^^^cmp     rcx, 1^^^ja      short loc_463920^^^mov     eax, 0^^^jnz     short loc_46392E^^^mov     rcx, r12^^^mov     rdx, r15^^^mov     rsi, rbp^^^mov     rdi, rbp^^^call    __mpn_add_n^^^jmp     short loc_46392E^^^mov     qword ptr [rbp+r12*8+0], 0^^^xchg    ax, ax^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^jz      loc_463A20^^^test    r12, r12^^^jle     short loc_463965^^^mov     rdx, rdi^^^shl     rdx, 3Ch^^^shr     rdx, 3Fh^^^cmp     rdx, r12^^^cmova   rdx, r12^^^test    rdx, rdx^^^jz      loc_463A49^^^cmp     r12, rdx^^^mov     qword ptr [rdi], 0^^^jz      short loc_463A12^^^mov     eax, 1^^^mov     r8, r12^^^sub     r8, rdx^^^mov     rsi, r8^^^shr     rsi, 1^^^mov     rdi, rsi^^^add     rdi, rdi^^^jz      short loc_463A00^^^pxor    xmm0, xmm0^^^lea     rcx, [rbp+rdx*8+0]^^^xor     edx, edx^^^nop     word ptr [rax+rax+00000000h]^^^add     rdx, 1^^^movdqa  xmmword ptr [rcx], xmm0^^^add     rcx, 10h^^^cmp     rdx, rsi^^^jb      short loc_4639E0^^^add     rax, rdi^^^cmp     r8, rdi^^^jz      short loc_463A12^^^nop     dword ptr [rax+00000000h]^^^mov     qword ptr [rbp+rax*8+0], 0^^^add     rax, 1^^^cmp     r12, rax^^^jg      short loc_463A00^^^xor     eax, eax^^^jmp     loc_4638FF^^^test    r12, r12^^^jle     loc_463965^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, [r15+rax*8]^^^mov     [rbp+rax*8+0], rdx^^^add     rax, 1^^^cmp     rax, r12^^^jnz     short loc_463A30^^^xor     eax, eax^^^jmp     loc_4638FF^^^xor     eax, eax^^^jmp     loc_4639B7^^^
_int_malloc$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 68h^^^cmp     rsi, 0FFFFFFFFFFFFFFBFh^^^ja      loc_4058C5^^^lea     rax, [rsi+17h]^^^mov     ebp, 20h^^^mov     rdx, rax^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^cmp     rax, 20h^^^cmovnb  rbp, rdx^^^cmp     rbp, cs:global_max_fast^^^ja      loc_4051F8^^^mov     edi, ebp^^^shr     edi, 4^^^sub     edi, 2^^^mov     eax, edi^^^mov     r14, [rbx+rax*8+8]^^^test    r14, r14^^^jz      loc_4051F8^^^lea     rsi, [rbx+rax*8]^^^mov     r8, [r14+10h]^^^mov     rax, r14^^^lea     rcx, [rsi+8]^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_405186^^^lock^^^cmpxchg [rsi+8], r8^^^cmp     r14, rax^^^mov     rdx, rax^^^jnz     short loc_40519B^^^jmp     short loc_4051BF^^^mov     rdx, rax^^^test    rdx, rdx^^^jz      short loc_4051F8^^^mov     rsi, [rdx+10h]^^^mov     rax, rdx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_4051B3^^^lock^^^cmpxchg [rcx], rsi^^^cmp     rdx, rax^^^jnz     short loc_405198^^^mov     r14, rdx^^^mov     rax, [r14+8]^^^shr     eax, 4^^^sub     eax, 2^^^cmp     edi, eax^^^jnz     loc_40621B^^^mov     eax, cs:perturb_byte^^^add     r14, 10h^^^test    eax, eax^^^jnz     loc_405577^^^add     rsp, 68h^^^mov     rax, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     rbp, 3FFh^^^ja      short loc_405258^^^mov     eax, ebp^^^lea     r12, [rbx+58h]^^^shr     eax, 4^^^lea     edx, [rax+rax-2]^^^lea     rdx, [rbx+rdx*8+58h]^^^mov     r14, [rdx+18h]^^^cmp     r14, rdx^^^jz      loc_4052AF^^^test    r14, r14^^^jz      loc_405A81^^^mov     rax, [r14+18h]^^^cmp     r14, [rax+10h]^^^jnz     loc_40637D^^^or      qword ptr [r14+rbp+8], 1^^^cmp     rbx, offset main_arena^^^mov     [rdx+18h], rax^^^mov     [rax+10h], rdx^^^jz      short loc_4051D1^^^or      qword ptr [r14+8], 4^^^jmp     loc_4051D1^^^mov     rax, rbp^^^shr     rax, 6^^^cmp     rax, 30h^^^jbe     loc_4058BD^^^mov     rax, rbp^^^shr     rax, 9^^^cmp     rax, 14h^^^ja      loc_4058DB^^^add     eax, 5Bh^^^mov     esi, [rbx+4]^^^lea     r12, [rbx+58h]^^^test    sil, 1^^^jnz     short loc_4052AF^^^cmp     cs:global_max_fast, 0^^^mov     rcx, 0FFFFFFFFFFFFFFFEh^^^jz      loc_405880^^^mov     rdi, rbx^^^mov     dword ptr [rsp+98h+var_88], eax^^^call    malloc_consolidate_part_3^^^mov     eax, dword ptr [rsp+98h+var_88]^^^mov     r8, rbp^^^mov     edx, ebp^^^mov     r11, rbp^^^shr     r8, 6^^^shr     edx, 4^^^shr     r11, 9^^^lea     ecx, [r8+30h]^^^mov     [rsp+98h+var_50], edx^^^lea     edx, [r11+5Bh]^^^mov     [rsp+98h+var_4C], ecx^^^mov     rcx, rbp^^^mov     [rsp+98h+var_48], edx^^^shr     rcx, 0Ch^^^mov     rdx, rbp^^^shr     rdx, 0Fh^^^mov     [rsp+98h+var_68], rcx^^^add     ecx, 6Eh^^^mov     [rsp+98h+var_44], ecx^^^mov     [rsp+98h+var_70], rdx^^^mov     rcx, rbp^^^add     edx, 77h^^^shr     rcx, 12h^^^mov     [rsp+98h+var_40], edx^^^lea     rdx, [rbp+20h]^^^mov     [rsp+98h+var_60], rcx^^^add     ecx, 7Ch^^^mov     [rsp+98h+var_3C], ecx^^^mov     [rsp+98h+var_58], rdx^^^mov     r15d, 2710h^^^mov     r9d, eax^^^jmp     short loc_40536C^^^mov     ecx, edi^^^shr     ecx, 4^^^lea     eax, [rcx+rcx-2]^^^cdqe^^^lea     rdx, [rbx+rax*8+58h]^^^mov     rax, [rdx+10h]^^^mov     edi, ecx^^^mov     esi, 1^^^sar     edi, 5^^^shl     esi, cl^^^movsxd  rdi, edi^^^or      [rbx+rdi*4+858h], esi^^^sub     r15d, 1^^^mov     [r14+18h], rdx^^^mov     [r14+10h], rax^^^mov     [rax+18h], r14^^^mov     [rdx+10h], r14^^^jz      loc_4055F1^^^mov     r14, [rbx+70h]^^^cmp     r14, r12^^^jz      loc_4055F1^^^mov     rdi, [r14+8]^^^mov     rax, [r14+18h]^^^cmp     rdi, 10h^^^jbe     loc_405AF0^^^cmp     rdi, [rbx+878h]^^^ja      loc_405AF0^^^and     rdi, 0FFFFFFFFFFFFFFF8h^^^cmp     rbp, 3FFh^^^ja      short loc_4053AE^^^cmp     r12, rax^^^jz      loc_4054F0^^^cmp     rbp, rdi^^^mov     [rbx+70h], rax^^^mov     [rax+10h], r12^^^jz      loc_405790^^^cmp     rdi, 3FFh^^^jbe     loc_405328^^^mov     rax, rdi^^^shr     rax, 6^^^cmp     rax, 30h^^^ja      short loc_405430^^^lea     ecx, [rax+30h]^^^lea     eax, [rax+rax+5Eh]^^^cdqe^^^sub     rax, 2^^^lea     rsi, [rbx+rax*8+68h]^^^mov     rax, [rsi+10h]^^^cmp     rax, rsi^^^jz      short loc_40545F^^^mov     rdx, [rsi+18h]^^^mov     r10, [rdx+8]^^^test    r10b, 4^^^jnz     loc_406387^^^or      rdi, 1^^^cmp     rdi, r10^^^jnb     short loc_405470^^^mov     rdi, [rax+28h]^^^mov     [r14+20h], rax^^^mov     [r14+28h], rdi^^^mov     [rdi+20h], r14^^^mov     [rax+28h], r14^^^mov     rax, rsi^^^jmp     loc_40533C^^^mov     rax, rdi^^^shr     rax, 9^^^cmp     rax, 14h^^^ja      loc_4054C0^^^lea     ecx, [rax+5Bh]^^^lea     eax, [rax+rax+0B4h]^^^cdqe^^^sub     rax, 2^^^lea     rsi, [rbx+rax*8+68h]^^^mov     rax, [rsi+10h]^^^cmp     rax, rsi^^^jnz     short loc_4053F4^^^mov     [r14+28h], r14^^^mov     [r14+20h], r14^^^mov     rdx, rax^^^jmp     loc_40533C^^^mov     rdx, [rax+8]^^^test    dl, 4^^^jz      short loc_405491^^^jmp     loc_4063A0^^^mov     rax, [rax+20h]^^^mov     rdx, [rax+8]^^^test    dl, 4^^^jnz     loc_405A24^^^cmp     rdi, rdx^^^jb      short loc_405480^^^jz      loc_4055B8^^^mov     rdx, [rax+28h]^^^mov     [r14+20h], rax^^^mov     [r14+28h], rdx^^^mov     [rax+28h], r14^^^mov     rdx, [r14+28h]^^^mov     [rdx+20h], r14^^^mov     rdx, [rax+18h]^^^jmp     loc_40533C^^^mov     rax, rdi^^^shr     rax, 0Ch^^^cmp     rax, 0Ah^^^ja      loc_405590^^^lea     ecx, [rax+6Eh]^^^lea     eax, [rax+rax+0DAh]^^^cdqe^^^sub     rax, 2^^^jmp     loc_4053E6^^^mov     rdx, [rbx+60h]^^^cmp     rdx, r14^^^jnz     loc_4053AE^^^cmp     rdi, [rsp+98h+var_58]^^^jbe     loc_4053AE^^^sub     rdi, rbp^^^add     r14, rbp^^^cmp     rdi, 3FFh^^^mov     [rbx+60h], r14^^^mov     [rbx+68h], r14^^^mov     [rbx+70h], r14^^^mov     [r14+10h], r12^^^mov     [r14+18h], r12^^^jbe     short loc_40553B^^^mov     qword ptr [r14+20h], 0^^^mov     qword ptr [r14+28h], 0^^^xor     eax, eax^^^cmp     rbx, offset main_arena^^^mov     [r14+rdi], rdi^^^setnz   al^^^or      rbp, 1^^^shl     rax, 2^^^or      rbp, rax^^^mov     rax, rdi^^^or      rax, 1^^^mov     [rdx+8], rbp^^^mov     [r14+8], rax^^^mov     eax, cs:perturb_byte^^^lea     r14, [rdx+10h]^^^test    eax, eax^^^jz      loc_4051E3^^^not     eax^^^mov     rdx, r13^^^mov     rdi, r14^^^movzx   esi, al^^^call    sub_400390^^^jmp     loc_4051E3^^^mov     rax, rdi^^^shr     rax, 0Fh^^^cmp     rax, 4^^^ja      short loc_4055C1^^^lea     ecx, [rax+77h]^^^lea     eax, [rax+rax+0ECh]^^^cdqe^^^sub     rax, 2^^^jmp     loc_4053E6^^^mov     rax, [rax+10h]^^^jmp     loc_4054B4^^^mov     rdx, rdi^^^mov     eax, 0F8h^^^mov     ecx, 7Eh^^^shr     rdx, 12h^^^cmp     rdx, 2^^^ja      loc_4053E6^^^lea     eax, [rdx+rdx+0F6h]^^^lea     ecx, [rdx+7Ch]^^^cdqe^^^sub     rax, 2^^^jmp     loc_4053E6^^^cmp     rbp, 3FFh^^^mov     eax, r9d^^^ja      loc_4057AD^^^lea     ecx, [rax+1]^^^add     eax, eax^^^lea     rdx, [rbx+rax*8+58h]^^^mov     eax, 1^^^mov     edi, ecx^^^shl     eax, cl^^^shr     edi, 5^^^mov     r9d, edi^^^mov     esi, [rbx+r9*4+858h]^^^nop     word ptr [rax+rax+00h]^^^test    eax, eax^^^jz      short loc_405630^^^cmp     eax, esi^^^jbe     short loc_40566C^^^add     edi, 1^^^cmp     edi, 3^^^ja      short loc_405693^^^mov     r9d, edi^^^mov     esi, [rbx+r9*4+858h]^^^test    esi, esi^^^jz      short loc_405630^^^mov     eax, edi^^^shl     eax, 6^^^sub     eax, 2^^^lea     rdx, [rbx+rax*8+58h]^^^mov     eax, 1^^^test    eax, esi^^^jnz     short loc_405670^^^nop     dword ptr [rax]^^^add     rdx, 10h^^^add     eax, eax^^^jz      loc_405A4D^^^test    eax, esi^^^jz      short loc_405660^^^mov     r14, [rdx+18h]^^^cmp     r14, rdx^^^jnz     loc_405905^^^mov     ecx, eax^^^add     rdx, 10h^^^add     eax, eax^^^not     ecx^^^and     esi, ecx^^^mov     [rbx+r9*4+858h], esi^^^jmp     short loc_405628^^^mov     r14, [rbx+58h]^^^mov     rax, [r14+8]^^^mov     r15, rax^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^cmp     r15, [rsp+98h+var_58]^^^jnb     loc_405B35^^^mov     edx, [rbx+4]^^^test    dl, 1^^^jnz     loc_405B68^^^cmp     cs:global_max_fast, 0^^^mov     rcx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_4056F0^^^mov     rdi, rbx^^^mov     [rsp+98h+var_90], r8^^^mov     [rsp+98h+var_78], r11^^^call    malloc_consolidate_part_3^^^mov     r8, [rsp+98h+var_90]^^^mov     r11, [rsp+98h+var_78]^^^jmp     short loc_405724^^^lea     rax, [rbx+rcx*8+68h]^^^add     rcx, 2^^^cmp     rcx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_4056F0^^^cmp     rbx, offset main_arena^^^jz      loc_405A3D^^^or      edx, 2^^^or      edx, 1^^^mov     [rbx+58h], r12^^^mov     [rbx+4], edx^^^cmp     rbp, 3FFh^^^mov     eax, [rsp+98h+var_50]^^^jbe     loc_405318^^^cmp     r8, 30h^^^mov     eax, [rsp+98h+var_4C]^^^jbe     loc_405318^^^cmp     r11, 14h^^^mov     eax, [rsp+98h+var_48]^^^jbe     loc_405318^^^cmp     [rsp+98h+var_68], 0Ah^^^mov     eax, [rsp+98h+var_44]^^^jbe     loc_405318^^^cmp     [rsp+98h+var_70], 4^^^mov     eax, [rsp+98h+var_40]^^^jbe     loc_405318^^^cmp     [rsp+98h+var_60], 3^^^mov     eax, 7Eh^^^cmovb   eax, [rsp+98h+var_3C]^^^jmp     loc_405318^^^or      qword ptr [r14+rbp+8], 1^^^cmp     rbx, offset main_arena^^^jz      loc_4051D1^^^or      qword ptr [r14+8], 4^^^jmp     loc_4051D1^^^lea     edx, [rax+rax-2]^^^lea     rdx, [rbx+rdx*8+58h]^^^mov     rcx, [rdx+10h]^^^cmp     rcx, rdx^^^jz      loc_405601^^^cmp     rbp, [rcx+8]^^^ja      loc_405601^^^mov     r14, [rcx+28h]^^^jmp     short loc_4057D7^^^mov     r14, [r14+28h]^^^mov     rcx, [r14+8]^^^mov     r15, rcx^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^cmp     rbp, r15^^^ja      short loc_4057D3^^^cmp     [rdx+18h], r14^^^mov     rax, [r14+10h]^^^jz      short loc_4057FE^^^cmp     [rax+8], rcx^^^jnz     short loc_4057FE^^^mov     r14, rax^^^mov     rax, [rax+10h]^^^cmp     r14, [rax+18h]^^^mov     rdx, [r14+18h]^^^jnz     loc_406365^^^cmp     r14, [rdx+10h]^^^jnz     loc_406365^^^cmp     qword ptr [r14+8], 3FFh^^^mov     [rax+18h], rdx^^^mov     [rdx+10h], rax^^^jbe     short loc_405835^^^mov     rdx, [r14+20h]^^^test    rdx, rdx^^^jnz     loc_406222^^^mov     rdx, r15^^^sub     rdx, rbp^^^cmp     rdx, 1Fh^^^jbe     loc_405A0C^^^mov     rcx, [rbx+68h]^^^cmp     [rcx+18h], r12^^^jnz     loc_4063B9^^^lea     rax, [r14+rbp]^^^cmp     rdx, 3FFh^^^mov     [rax+18h], r12^^^mov     [rax+10h], rcx^^^mov     [rcx+18h], rax^^^mov     [rbx+68h], rax^^^jbe     loc_4059D5^^^jmp     loc_4059C5^^^lea     rdx, [rbx+rcx*8+68h]^^^add     rcx, 2^^^cmp     rcx, 0FCh^^^mov     [rdx+18h], rdx^^^mov     [rdx+10h], rdx^^^jnz     short loc_405880^^^cmp     rbx, offset main_arena^^^jz      loc_405C20^^^or      esi, 2^^^lea     r12, [rbx+58h]^^^or      esi, 1^^^mov     [rbx+4], esi^^^mov     [rbx+58h], r12^^^jmp     loc_4052AF^^^add     eax, 30h^^^jmp     loc_40527D^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r14d, r14d^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_4051E3^^^mov     rax, rbp^^^shr     rax, 0Ch^^^cmp     rax, 0Ah^^^jbe     loc_405A04^^^mov     rax, rbp^^^shr     rax, 0Fh^^^cmp     rax, 4^^^ja      loc_405A66^^^add     eax, 77h^^^jmp     loc_40527D^^^mov     rsi, [r14+8]^^^mov     r15, rsi^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^cmp     rbp, r15^^^ja      loc_405F6A^^^mov     rax, [r14+10h]^^^mov     rcx, [r14+18h]^^^mov     rdx, [rax+18h]^^^cmp     rdx, r14^^^jnz     loc_4063C3^^^cmp     rdx, [rcx+10h]^^^jnz     loc_4063C3^^^cmp     rsi, 3FFh^^^mov     [rax+18h], rcx^^^mov     [rcx+10h], rax^^^jbe     short loc_405981^^^mov     rcx, [rdx+20h]^^^test    rcx, rcx^^^jz      short loc_405981^^^cmp     rdx, [rcx+28h]^^^jnz     loc_4061F5^^^mov     rsi, [rdx+28h]^^^cmp     rdx, [rsi+20h]^^^jnz     loc_4061DC^^^cmp     qword ptr [rax+20h], 0^^^jz      loc_4061BA^^^mov     [rcx+28h], rsi^^^mov     rax, [rdx+28h]^^^mov     [rax+20h], rcx^^^mov     rdx, r15^^^sub     rdx, rbp^^^cmp     rdx, 1Fh^^^jbe     short loc_405A0C^^^mov     rcx, [rbx+68h]^^^cmp     [rcx+18h], r12^^^jnz     loc_40619E^^^lea     rax, [r14+rbp]^^^cmp     rbp, 3FFh^^^mov     [rax+18h], r12^^^mov     [rax+10h], rcx^^^mov     [rcx+18h], rax^^^mov     [rbx+68h], rax^^^ja      short loc_4059BC^^^mov     [rbx+60h], rax^^^cmp     rdx, 3FFh^^^jbe     short loc_4059D5^^^mov     qword ptr [rax+20h], 0^^^mov     qword ptr [rax+28h], 0^^^xor     ecx, ecx^^^cmp     rbx, offset main_arena^^^setnz   cl^^^or      rbp, 1^^^shl     rcx, 2^^^or      rbp, rcx^^^mov     rcx, rdx^^^or      rcx, 1^^^mov     [r14+8], rbp^^^mov     [rax+8], rcx^^^mov     [rax+rdx], rdx^^^jmp     loc_4051D1^^^add     eax, 6Eh^^^jmp     loc_40527D^^^or      qword ptr [r14+r15+8], 1^^^cmp     rbx, offset main_arena^^^jnz     loc_40524E^^^jmp     loc_4051D1^^^mov     ecx, offset __func___12634^^^mov     edx, 0E64h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aFwdSize0x40^^^call    __malloc_assert^^^mov     cs:global_max_fast, 80h^^^jmp     loc_40571A^^^mov     ecx, offset __func___12634^^^mov     edx, 0EE5h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aBit0^^^call    __malloc_assert^^^mov     rdx, rbp^^^mov     eax, 7Eh^^^shr     rdx, 12h^^^lea     ecx, [rdx+7Ch]^^^cmp     rdx, 2^^^cmovbe  eax, ecx^^^jmp     loc_40527D^^^cmp     cs:global_max_fast, 0^^^mov     rcx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_405AB0^^^mov     rdi, rbx^^^mov     dword ptr [rsp+98h+var_88], eax^^^lea     r12, [rbx+58h]^^^call    malloc_consolidate_part_3^^^mov     eax, dword ptr [rsp+98h+var_88]^^^jmp     loc_4052AF^^^lea     rdx, [rbx+rcx*8+68h]^^^add     rcx, 2^^^cmp     rcx, 0FCh^^^mov     [rdx+18h], rdx^^^mov     [rdx+10h], rdx^^^jnz     short loc_405AB0^^^cmp     rbx, offset main_arena^^^jz      loc_406256^^^mov     edx, [rbx+4]^^^or      edx, 2^^^lea     r12, [rbx+58h]^^^or      edx, 1^^^mov     [rbx+4], edx^^^mov     [rbx+58h], r12^^^jmp     loc_4052AF^^^mov     edi, cs:check_action^^^lea     rdx, [r14+10h]^^^mov     esi, offset aMallocMemoryCo^^^mov     [rsp+98h+var_88], rax^^^mov     [rsp+98h+var_90], r8^^^mov     [rsp+98h+var_80], r9d^^^mov     [rsp+98h+var_78], r11^^^call    malloc_printerr^^^mov     rdi, [r14+8]^^^mov     r11, [rsp+98h+var_78]^^^mov     r9d, [rsp+98h+var_80]^^^mov     r8, [rsp+98h+var_90]^^^mov     rax, [rsp+98h+var_88]^^^jmp     loc_405398^^^sub     r15, rbp^^^xor     eax, eax^^^cmp     rbx, offset main_arena^^^setnz   al^^^lea     rdx, [r14+rbp]^^^or      rbp, 1^^^shl     rax, 2^^^or      r15, 1^^^or      rbp, rax^^^mov     [rbx+58h], rdx^^^mov     [r14+8], rbp^^^mov     [rdx+8], r15^^^jmp     loc_4051D1^^^mov     rcx, cs:_dl_pagesize^^^xor     r9d, r9d^^^mov     [rsp+98h+var_60], rcx^^^sub     rcx, 1^^^cmp     rbp, cs:qword_6C2990^^^mov     [rsp+98h+var_68], rcx^^^jb      short loc_405BCA^^^mov     edx, cs:dword_6C29AC^^^cmp     cs:dword_6C29A8, edx^^^jge     short loc_405BCA^^^mov     rcx, [rsp+98h+var_60]^^^mov     rax, [rsp+98h+var_68]^^^lea     r14, [rbp+rcx+7]^^^not     rax^^^and     r14, rax^^^cmp     rbp, r14^^^jb      loc_40626C^^^mov     r14, [rbx+58h]^^^mov     r9d, 1^^^mov     rax, [r14+8]^^^mov     r15, rax^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^lea     rdx, [r14+r15]^^^test    r15, r15^^^setnz   byte ptr [rsp+98h+var_50]^^^mov     [rsp+98h+var_70], rdx^^^jz      short loc_405C30^^^cmp     r15, 1Fh^^^jbe     loc_4063DB^^^test    al, 1^^^jz      loc_4063DB^^^mov     rcx, [rsp+98h+var_68]^^^test    [rsp+98h+var_70], rcx^^^jnz     loc_4063DB^^^cmp     r15, [rsp+98h+var_58]^^^jb      short loc_405C35^^^mov     ecx, offset __func___12341^^^mov     edx, 996h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aUnsignedLongOl^^^call    __malloc_assert^^^mov     cs:global_max_fast, 80h^^^jmp     loc_4058AA^^^cmp     r14, r12^^^jnz     short loc_405BDD^^^cmp     rbx, offset main_arena^^^jz      loc_405E1F^^^mov     r8, [rsp+98h+var_58]^^^mov     rcx, r14^^^and     rcx, 0FFFFFFFFFC000000h^^^mov     r10, [rcx+10h]^^^sub     r8, r15^^^test    r8, r8^^^jle     loc_405D89^^^mov     rax, cs:_dl_pagesize^^^sub     rax, 1^^^add     r8, rax^^^not     rax^^^and     r8, rax^^^add     r8, r10^^^cmp     r8, 4000000h^^^ja      loc_405D89^^^mov     rdi, [rcx+18h]^^^mov     rdx, r14^^^cmp     r8, rdi^^^ja      loc_405D3C^^^mov     rax, r8^^^mov     [rcx+10h], r8^^^add     rcx, r8^^^sub     rax, r10^^^add     cs:arena_mem, rax^^^sub     rcx, r14^^^mov     rsi, rax^^^add     rsi, [rbx+878h]^^^or      rcx, 1^^^mov     [rbx+878h], rsi^^^mov     [r14+8], rcx^^^cmp     [rbx+880h], rsi^^^jnb     short loc_405CD5^^^mov     [rbx+880h], rsi^^^mov     rax, [rdx+8]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, [rsp+98h+var_58]^^^jb      loc_4058C5^^^sub     rax, rbp^^^xor     ecx, ecx^^^cmp     rbx, offset main_arena^^^setnz   cl^^^lea     rsi, [rdx+rbp]^^^or      rbp, 1^^^shl     rcx, 2^^^or      rax, 1^^^mov     [rbx+58h], rsi^^^or      rbp, rcx^^^lea     rbx, [rdx+10h]^^^mov     [rdx+8], rbp^^^mov     [rsi+8], rax^^^xor     r14d, r14d^^^test    rbx, rbx^^^jz      loc_4051E3^^^mov     eax, cs:perturb_byte^^^test    eax, eax^^^jnz     loc_4063F4^^^mov     r14, rbx^^^jmp     loc_4051E3^^^mov     rsi, r8^^^mov     edx, 3^^^mov     [rsp+98h+var_88], rcx^^^sub     rsi, rdi^^^add     rdi, rcx^^^mov     [rsp+98h+var_90], r8^^^mov     byte ptr [rsp+98h+var_80], r9b^^^mov     [rsp+98h+var_78], r10^^^call    mprotect^^^test    eax, eax^^^mov     rcx, [rsp+98h+var_88]^^^mov     r8, [rsp+98h+var_90]^^^movzx   r9d, byte ptr [rsp+98h+var_80]^^^mov     r10, [rsp+98h+var_78]^^^jnz     short loc_405D89^^^mov     [rcx+18h], r8^^^mov     rdx, [rbx+58h]^^^jmp     loc_405C95^^^mov     rsi, cs:qword_6C2988^^^lea     rdi, [rbp+40h]^^^mov     [rsp+98h+var_88], rcx^^^mov     byte ptr [rsp+98h+var_80], r9b^^^call    new_heap^^^test    rax, rax^^^mov     rcx, [rsp+98h+var_88]^^^movzx   r9d, byte ptr [rsp+98h+var_80]^^^jz      loc_406140^^^mov     [rax+8], rcx^^^mov     rcx, [rax+10h]^^^lea     rdx, [rax+20h]^^^add     cs:arena_mem, rcx^^^mov     [rax], rbx^^^lea     rdi, [r15-20h]^^^mov     [rbx+58h], rdx^^^mov     rsi, rcx^^^add     rsi, [rbx+878h]^^^sub     rcx, 20h^^^or      rcx, 1^^^cmp     rdi, 1Fh^^^mov     [rbx+878h], rsi^^^mov     [rax+28h], rcx^^^lea     rcx, [r15-10h]^^^lea     rax, [r14+rcx]^^^mov     qword ptr [rax+8], 1^^^ja      loc_405F32^^^mov     rdi, rcx^^^mov     [rax], rcx^^^or      rdi, 1^^^mov     [r14+8], rdi^^^jmp     loc_405CC5^^^mov     rax, cs:qword_6C2988^^^mov     r12, [rsp+98h+var_68]^^^lea     rdx, [rbp+rax+20h]^^^mov     eax, cs:dword_6C20E4^^^mov     rcx, rdx^^^sub     rcx, r15^^^and     eax, 2^^^cmovz   rdx, rcx^^^mov     rcx, [rsp+98h+var_68]^^^add     r12, rdx^^^not     rcx^^^and     r12, rcx^^^mov     [rsp+98h+var_60], rcx^^^test    r12, r12^^^mov     rcx, r12^^^jle     loc_405EF1^^^mov     rdi, r12^^^mov     [rsp+98h+var_88], r12^^^call    cs:__morecore^^^mov     rdx, rax^^^mov     eax, cs:dword_6C20E4^^^mov     rcx, [rsp+98h+var_88]^^^and     eax, 2^^^test    rdx, rdx^^^jz      short loc_405EF1^^^mov     rax, cs:__after_morecore_hook^^^test    rax, rax^^^jz      short loc_405E9E^^^mov     [rsp+98h+var_78], rdx^^^call    rax ^^^mov     rdx, [rsp+98h+var_78]^^^mov     ecx, 1^^^xor     eax, eax^^^cmp     cs:qword_6C29D0, 0^^^jnz     short loc_405EB6^^^mov     cs:qword_6C29D0, rdx^^^mov     rsi, r12^^^add     rsi, cs:qword_6C2958^^^cmp     [rsp+98h+var_70], rdx^^^mov     cs:qword_6C2958, rsi^^^jnz     loc_405F83^^^test    cl, cl^^^jz      loc_405F83^^^add     r12, r15^^^mov     rdx, cs:qword_6C2138^^^or      r12, 1^^^mov     [r14+8], r12^^^jmp     loc_405CC5^^^test    eax, eax^^^jnz     short loc_405F05^^^mov     rcx, [rsp+98h+var_68]^^^add     rcx, r15^^^add     rcx, r12^^^and     rcx, [rsp+98h+var_60]^^^cmp     rcx, 0FFFFFh^^^mov     r12d, 100000h^^^cmova   r12, rcx^^^cmp     rbp, r12^^^jb      loc_406159^^^mov     rsi, cs:qword_6C2958^^^mov     rdx, cs:qword_6C2138^^^jmp     loc_405CC5^^^or      rdi, 5^^^mov     qword ptr [r14+r15-18h], 11h^^^mov     edx, 1^^^mov     [r14+8], rdi^^^mov     rsi, r14^^^mov     qword ptr [rax], 10h^^^mov     rdi, rbx^^^call    _int_free^^^mov     rsi, [rbx+878h]^^^mov     rdx, [rbx+58h]^^^jmp     loc_405CC5^^^mov     ecx, offset __func___12634^^^mov     edx, 0EF6h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aUnsignedLongSi^^^call    __malloc_assert^^^test    byte ptr cs:dword_6C20E4, 2^^^setz    dil^^^cmp     byte ptr [rsp+98h+var_50], 0^^^jz      loc_406101^^^test    dil, dil^^^jz      loc_40610A^^^cmp     [rsp+98h+var_70], rdx^^^ja      loc_4060DF^^^mov     rax, rdx^^^sub     rax, [rsp+98h+var_70]^^^add     rsi, rax^^^mov     cs:qword_6C2958, rsi^^^mov     rcx, rdx^^^xor     eax, eax^^^mov     [rsp+98h+var_70], rdx^^^and     ecx, 0Fh^^^jz      short loc_405FDC^^^mov     al, 10h^^^sub     rax, rcx^^^lea     rcx, [rdx+rax]^^^mov     [rsp+98h+var_70], rcx^^^lea     rcx, [rax+r15]^^^lea     rax, [rcx+r12]^^^mov     r12, rcx^^^add     rax, rdx^^^sub     r12, rax^^^add     rax, [rsp+98h+var_68]^^^and     rax, [rsp+98h+var_60]^^^add     r12, rax^^^js      loc_4060C6^^^mov     rdi, r12^^^call    cs:__morecore^^^test    rax, rax^^^jz      loc_4060A6^^^mov     rdx, cs:__after_morecore_hook^^^test    rdx, rdx^^^jz      short loc_40602A^^^mov     [rsp+98h+var_88], rax^^^call    rdx ^^^mov     rax, [rsp+98h+var_88]^^^mov     rdx, [rsp+98h+var_70]^^^mov     rsi, r12^^^sub     rax, rdx^^^add     rsi, cs:qword_6C2958^^^mov     cs:qword_6C2138, rdx^^^add     r12, rax^^^or      r12, 1^^^cmp     byte ptr [rsp+98h+var_50], 0^^^mov     [rdx+8], r12^^^mov     cs:qword_6C2958, rsi^^^jz      loc_405CC5^^^sub     r15, 20h^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     rax, r15^^^or      rax, 1^^^cmp     r15, 1Fh^^^mov     [r14+8], rax^^^mov     qword ptr [r14+r15+8], 11h^^^mov     qword ptr [r14+r15+18h], 11h^^^jbe     loc_405CC5^^^mov     edx, 1^^^mov     rsi, r14^^^mov     edi, offset main_arena^^^call    _int_free^^^jmp     loc_405F1F^^^xor     edi, edi^^^call    cs:__morecore^^^mov     rdx, [rsp+98h+var_70]^^^xor     esi, esi^^^xor     r12d, r12d^^^test    rax, rax^^^jnz     loc_406032^^^jmp     loc_405F1F^^^mov     ecx, offset __func___12341^^^mov     edx, 0A63h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aCorrection0^^^call    __malloc_assert^^^mov     esi, offset aBreakAdjustedT^^^mov     edi, 3^^^call    malloc_printerr^^^mov     rsi, cs:qword_6C2958^^^mov     rdx, cs:qword_6C2138^^^jmp     loc_405CC5^^^test    dil, dil^^^jnz     loc_405FBF^^^test    dl, 0Fh^^^jnz     short loc_406127^^^test    cl, cl^^^jz      short loc_4060B3^^^mov     [rsp+98h+var_78], rdx^^^xor     edi, edi^^^call    cs:__morecore^^^mov     rdx, [rsp+98h+var_78]^^^jmp     short loc_4060B3^^^mov     ecx, offset __func___12341^^^mov     edx, 0A7Eh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aUnsignedLong_0^^^call    __malloc_assert^^^test    r9b, r9b^^^jz      loc_405B97^^^mov     rsi, [rbx+878h]^^^mov     rdx, [rbx+58h]^^^jmp     loc_405CC5^^^xor     r9d, r9d^^^mov     edx, 3^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     rsi, r12^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, rax^^^jz      loc_405F1F^^^or      cs:dword_6C20E4, 2^^^test    rax, rax^^^jz      loc_405F1F^^^add     rax, r12^^^setz    cl^^^jmp     loc_405EA5^^^mov     esi, offset aMallocCorrupte^^^mov     edi, cs:check_action^^^lea     rdx, [r14+10h]^^^xor     r14d, r14d^^^call    malloc_printerr^^^jmp     loc_4051E3^^^cmp     rdx, rcx^^^jz      short loc_40620E^^^mov     [rax+20h], rcx^^^mov     rcx, [rdx+20h]^^^mov     [rax+28h], rsi^^^mov     [rcx+28h], rax^^^mov     rdx, [rdx+28h]^^^mov     [rdx+20h], rax^^^jmp     loc_405981^^^mov     ecx, offset __func___12634^^^mov     edx, 0EFBh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aVictimBk_nexts^^^call    __malloc_assert^^^mov     ecx, offset __func___12634^^^mov     edx, 0EFBh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aVictimFd_nexts^^^call    __malloc_assert^^^mov     [rax+28h], rax^^^mov     [rax+20h], rax^^^jmp     loc_405981^^^mov     esi, offset aMallocMemory_0^^^jmp     short loc_4061A3^^^cmp     [rdx+28h], r14^^^jnz     loc_40633F^^^mov     rcx, [r14+28h]^^^cmp     r14, [rcx+20h]^^^jnz     loc_406326^^^cmp     qword ptr [rax+20h], 0^^^jz      loc_406304^^^mov     [rdx+28h], rcx^^^mov     rax, [r14+28h]^^^mov     [rax+20h], rdx^^^jmp     loc_405835^^^mov     cs:global_max_fast, 80h^^^mov     edx, cs:dword_6C20E4^^^jmp     loc_405ADD^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^mov     rsi, r14^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_405BB5^^^lea     rbx, [rax+10h]^^^test    bl, 0Fh^^^jnz     short loc_4062EB^^^mov     rdx, r14^^^or      rdx, 2^^^mov     [rax+8], rdx^^^mov     eax, cs:dword_6C29A8^^^add     eax, 1^^^cmp     eax, cs:dword_6C29B0^^^mov     cs:dword_6C29A8, eax^^^jle     short loc_4062C4^^^mov     cs:dword_6C29B0, eax^^^add     r14, cs:qword_6C29B8^^^cmp     r14, cs:qword_6C29C0^^^mov     cs:qword_6C29B8, r14^^^jbe     loc_405D1A^^^mov     cs:qword_6C29C0, r14^^^jmp     loc_405D1A^^^mov     ecx, offset __func___12341^^^mov     edx, 96Eh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aSize_tVoidChar^^^call    __malloc_assert^^^cmp     rdx, r14^^^jz      short loc_406358^^^mov     [rax+20h], rdx^^^mov     rdx, [r14+20h]^^^mov     [rax+28h], rcx^^^mov     [rdx+28h], rax^^^mov     rdx, [r14+28h]^^^mov     [rdx+20h], rax^^^jmp     loc_405835^^^mov     ecx, offset __func___12634^^^mov     edx, 0E99h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aVictimBk_nexts^^^call    __malloc_assert^^^mov     ecx, offset __func___12634^^^mov     edx, 0E99h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aVictimFd_nexts^^^call    __malloc_assert^^^mov     [rax+28h], rax^^^mov     [rax+20h], rax^^^jmp     loc_405835^^^mov     edi, cs:check_action^^^mov     rdx, r14^^^mov     esi, offset aCorruptedDoubl^^^call    malloc_printerr^^^jmp     loc_405835^^^mov     esi, offset aMallocSmallbin^^^jmp     loc_4061A3^^^mov     ecx, offset __func___12634^^^mov     edx, 0E56h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aBckBkSize0x40^^^call    __malloc_assert^^^mov     ecx, offset __func___12634^^^mov     edx, 0E60h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aFwdSize0x40^^^call    __malloc_assert^^^mov     esi, offset aMallocCorrup_0^^^jmp     loc_4061A3^^^mov     edi, cs:check_action^^^mov     rdx, r14^^^mov     esi, offset aCorruptedDoubl^^^call    malloc_printerr^^^jmp     loc_405981^^^mov     ecx, offset __func___12341^^^mov     edx, 993h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aOld_topMbinptr^^^call    __malloc_assert^^^not     eax^^^mov     rdx, r13^^^mov     rdi, rbx^^^movzx   esi, al^^^mov     r14, rbx^^^call    sub_400390^^^jmp     loc_4051E3^^^
sub_41E8AE$$$mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41E92F^^^mov     byte ptr [rax], 25h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_41E926^^^add     r14d, 1^^^jmp     loc_41B3A7^^^movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      loc_41E972^^^movsxd  rax, dword ptr [rax+30h]^^^shl     rax, 4^^^cmp     dword ptr [rbp-5B0h], 0^^^jz      short loc_41E95B^^^mov     rdx, [rbp-578h]^^^mov     r8, [rdx+rax]^^^test    r8, r8^^^jns     short loc_41E949^^^neg     r8^^^mov     dword ptr [rbp-610h], 0Ah^^^mov     r9d, 1^^^jmp     loc_41D0F2^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_41E8C3^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     dword ptr [rbp-610h], 0Ah^^^xor     r9d, r9d^^^jmp     loc_41D0F2^^^cmp     dword ptr [rbp-580h], 0^^^jl      loc_41D2ED^^^mov     byte ptr [rbp-622h], 20h^^^jnz     loc_41D2F7^^^test    r8, r8^^^jnz     loc_41D2F7^^^cmp     dword ptr [rbp-62Ch], 0^^^jz      loc_41D63A^^^cmp     dword ptr [rbp-610h], 8^^^jnz     loc_41D63A^^^mov     rax, [rbp-548h]^^^mov     rdx, [rbp-548h]^^^sub     rax, 1^^^mov     byte ptr [rdx-1], 30h^^^mov     [rbp-5B0h], rax^^^movsxd  rax, dword ptr [rbp-580h]^^^mov     rdx, [rbp-548h]^^^sub     rdx, [rbp-5B0h]^^^cmp     rax, rdx^^^jg      short loc_41D193^^^cmp     dword ptr [rbp-62Ch], 0^^^jz      short loc_41D193^^^test    r8, r8^^^jz      short loc_41D193^^^cmp     dword ptr [rbp-610h], 8^^^jnz     short loc_41D193^^^mov     rsi, [rbp-5B0h]^^^mov     byte ptr [rsi-1], 30h^^^sub     rsi, 1^^^mov     [rbp-5B0h], rsi^^^mov     rdi, [rbp-5B0h]^^^sub     rdi, [rbp-548h]^^^mov     edx, 0^^^add     rax, rdi^^^mov     [rbp-620h], rdi^^^cmovs   rax, rdx^^^cmp     dword ptr [rbp-628h], 0^^^mov     [rbp-580h], eax^^^jnz     loc_41D3A1^^^mov     edx, [rbp-588h]^^^add     edx, edi^^^sub     edx, eax^^^cmp     dword ptr [rbp-62Ch], 0^^^setnz   al^^^test    r8, r8^^^setnz   cl^^^and     al, cl^^^mov     [rbp-588h], al^^^jz      short loc_41D1F8^^^cmp     dword ptr [rbp-610h], 10h^^^lea     eax, [rdx-2]^^^cmovz   edx, eax^^^mov     eax, [rbp-618h]^^^or      eax, r9d^^^or      eax, [rbp-5E0h]^^^cmp     eax, 1^^^adc     edx, 0FFFFFFFFh^^^cmp     byte ptr [rbp-622h], 20h^^^jz      loc_41DC96^^^test    r9d, r9d^^^jz      loc_41DC5E^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41DC34^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41DC2B^^^add     r14d, 1^^^cmp     byte ptr [rbp-588h], 0^^^jz      short loc_41D263^^^cmp     dword ptr [rbp-610h], 10h^^^jz      loc_41DDFE^^^add     edx, [rbp-580h]^^^test    edx, edx^^^jle     short loc_41D29F^^^movsxd  rdx, edx^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF18^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41D631^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41DDE5^^^mov     rcx, [rbp-548h]^^^sub     rcx, [rbp-5B0h]^^^mov     rdi, rbx^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [rbp-5B0h]^^^mov     rdx, rcx^^^mov     [rbp-650h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-650h]^^^cmp     rcx, rax^^^jz      loc_41DDC5^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     dword ptr [rbp-580h], 1^^^xor     ecx, ecx^^^cmp     byte ptr [rbp-621h], 58h^^^mov     edx, [rbp-610h]^^^mov     rsi, [rbp-548h]^^^mov     rdi, r8^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^setz    cl^^^call    _itoa_word^^^cmp     qword ptr [rbp-598h], 0^^^mov     [rbp-5B0h], rax^^^mov     r8, [rbp-660h]^^^mov     r9d, [rbp-648h]^^^jnz     loc_41DE51^^^cmp     dword ptr [rbp-610h], 0Ah^^^jnz     loc_41D14C^^^cmp     dword ptr [rbp-63Ch], 0^^^jz      loc_41D14C^^^mov     rdx, [rbp-548h]^^^mov     rdi, [rbp-5B0h]^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^mov     rsi, rdx^^^call    _i18n_number_rewrite^^^mov     r8, [rbp-660h]^^^mov     [rbp-5B0h], rax^^^mov     r9d, [rbp-648h]^^^jmp     loc_41D14C^^^test    r9d, r9d^^^jz      loc_41D52F^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41D4F1^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41D4E8^^^sub     dword ptr [rbp-588h], 1^^^add     r14d, 1^^^cmp     dword ptr [rbp-62Ch], 0^^^jz      short loc_41D3F6^^^test    r8, r8^^^jz      short loc_41D3F6^^^cmp     dword ptr [rbp-610h], 10h^^^jz      loc_41D56B^^^cmp     dword ptr [rbp-580h], 0^^^jle     short loc_41D431^^^movsxd  rdx, dword ptr [rbp-580h]^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF18^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41D47B^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41DDE5^^^mov     rcx, [rbp-548h]^^^sub     rcx, [rbp-5B0h]^^^mov     rdi, rbx^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [rbp-5B0h]^^^mov     rdx, rcx^^^mov     [rbp-650h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-650h]^^^cmp     rcx, rax^^^jz      short loc_41D484^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      loc_41D526^^^mov     edx, [rbp-620h]^^^sub     edx, [rbp-580h]^^^add     r14d, ecx^^^add     edx, [rbp-588h]^^^test    edx, edx^^^jle     loc_41B3A7^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF18^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41D51D^^^add     r14d, edx^^^jmp     loc_41B3A7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-660h], r8^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-660h]^^^jnz     loc_41D3C3^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5E0h], 0^^^jz      loc_41D5F9^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41D5CD^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41D3D0^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41DDA7^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41DD9E^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41DD7E^^^movzx   edx, byte ptr [rbp-621h]^^^mov     [rax], dl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFEh^^^jz      loc_41DD75^^^add     r14d, 2^^^sub     dword ptr [rbp-588h], 2^^^jmp     loc_41D3F6^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-660h], r8^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-660h]^^^jnz     loc_41D555^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-618h], 0^^^jz      loc_41D3DB^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41D654^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41D3D0^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rcx, [rbp-548h]^^^mov     byte ptr [rbp-622h], 20h^^^mov     [rbp-5B0h], rcx^^^jmp     loc_41D14C^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-660h], r8^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-660h]^^^jnz     short loc_41D61B^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41D23C^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5E0h], 0^^^jz      loc_41DD07^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41DCE1^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41D249^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    edx, edx^^^jle     loc_41DD48^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-648h], r9d^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     r9d, [rbp-648h]^^^ja      loc_41DF18^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41DD3F^^^add     r14d, edx^^^xor     edx, edx^^^jmp     loc_41D21A^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     short loc_41DC80^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-618h], 0^^^jz      loc_41D24D^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41DD4F^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41D249^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^xor     edx, edx^^^jmp     loc_41D21A^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     short loc_41DD29^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movzx   esi, byte ptr [rbp-621h]^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41D5B0^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41D584^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^add     r14d, ecx^^^sub     rdx, rax^^^cmp     rcx, rdx^^^jbe     loc_41B3A7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D7h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41DECF^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41DEC6^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41DE9E^^^movzx   ecx, byte ptr [rbp-621h]^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFEh^^^jz      short loc_41DE95^^^add     r14d, 2^^^jmp     loc_41D263^^^cmp     dword ptr [rbp-638h], 0^^^jz      loc_41D349^^^mov     rcx, [rbp-5D0h]^^^mov     rdx, [rbp-598h]^^^mov     rdi, rax^^^mov     rsi, [rbp-548h]^^^call    group_number^^^mov     r9d, [rbp-648h]^^^mov     [rbp-5B0h], rax^^^mov     r8, [rbp-660h]^^^jmp     loc_41D349^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movzx   esi, byte ptr [rbp-621h]^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     short loc_41DE3F^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41DE17^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41E99A^^^mov     rcx, [rbp-578h]^^^movsx   r8, byte ptr [rcx+rax]^^^jmp     short loc_41E909^^^cmp     dword ptr [rbp-5B0h], 0^^^mov     edx, [r12]^^^jz      short loc_41E9C3^^^cmp     edx, 30h^^^jnb     short loc_41E9B3^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_41E909^^^cmp     dword ptr [rbp-620h], 0^^^jnz     short loc_41E9E8^^^mov     rsi, [rbp-578h]^^^movsxd  r8, dword ptr [rsi+rax]^^^jmp     loc_41E909^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41E992^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41EA09^^^cmp     edx, 30h^^^jnb     short loc_41E9F9^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   r8, byte ptr [rax]^^^jmp     loc_41E909^^^mov     rdi, [rbp-578h]^^^movsx   r8, word ptr [rdi+rax]^^^jmp     loc_41E909^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41E9DF^^^cmp     dword ptr [rbp-620h], 0^^^jnz     loc_41F2B4^^^cmp     edx, 30h^^^jnb     loc_41F25E^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsxd  r8, dword ptr [rax]^^^jmp     loc_41E909^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41EA2D^^^cmp     edx, 30h^^^jnb     short loc_41F2F3^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   r8, word ptr [rax]^^^jmp     loc_41E909^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F2C7^^^
tdestroy$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^test    rdi, rdi^^^mov     rbx, rdi^^^mov     rbp, rsi^^^jz      short loc_44E568^^^mov     rdi, [rdi+8]^^^test    rdi, rdi^^^jz      short loc_44E537^^^call    tdestroy_recurse^^^mov     rdi, [rbx+10h]^^^test    rdi, rdi^^^jz      short loc_44E548^^^mov     rsi, rbp^^^call    tdestroy_recurse^^^mov     rdi, [rbx]^^^call    rbp^^^mov     rdi, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^jmp     free^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
_L_unlock_377$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_47476F^^^
_Unwind_SetIP$$$mov     [rdi+98h], rsi^^^retn^^^
connect$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_41087D^^^
fileno_unlocked$$$mov     eax, [rdi]      ^^^test    ah, 20h^^^jz      short loc_475090^^^mov     eax, [rdi+70h]^^^test    eax, eax^^^js      short loc_475090^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^mov     eax, 0FFFFFFFFh^^^retn^^^
fgets_unlocked$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdx^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^test    esi, esi^^^mov     rbp, rdi^^^jle     loc_4267D0^^^cmp     esi, 1^^^jz      short loc_4267D4^^^mov     eax, [rdx]^^^mov     ecx, 0Ah^^^mov     r8d, 1^^^mov     r12d, eax^^^and     eax, 0FFFFFFDFh^^^mov     [rdx], eax^^^lea     edx, [rsi-1]^^^mov     rsi, rdi^^^mov     rdi, rbx^^^and     r12d, 20h^^^movsxd  rdx, edx^^^call    _IO_getline^^^xor     ecx, ecx^^^test    rax, rax^^^mov     edx, [rbx]^^^jz      short loc_4267A0^^^test    dl, 20h^^^jz      short loc_4267C0^^^mov     rsi, 0FFFFFFFFFFFFFFC0h^^^xor     ecx, ecx^^^cmp     dword ptr fs:[rsi], 0Bh^^^jz      short loc_4267C0^^^nop     dword ptr [rax]^^^or      r12d, edx^^^mov     rbp, rcx^^^mov     [rbx], r12d^^^mov     rax, rbp^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     byte ptr [rbp+rax+0], 0^^^mov     rcx, rbp^^^mov     edx, [rbx]^^^jmp     short loc_4267A0^^^xor     ebp, ebp^^^jmp     short loc_4267A9^^^mov     byte ptr [rdi], 0^^^jmp     short loc_4267A9^^^
sub_482A70$$$mov     rax, [rbx+18h]^^^mov     rdx, [rdi+30h]^^^mov     [rax], rdx^^^pop     rbx^^^retn^^^
_dl_addr_inside_object$$$movzx   eax, word ptr [rdi+2B0h]^^^sub     rsi, [rdi]^^^lea     rdx, ds:0[rax*8]^^^shl     rax, 6^^^sub     rax, rdx^^^sub     rax, 38h^^^jmp     short loc_411A84^^^sub     rax, 38h^^^cmp     rax, 0FFFFFFFFFFFFFFC8h^^^jz      short loc_411AB0^^^mov     rdx, rax^^^add     rdx, [rdi+2A0h]^^^cmp     dword ptr [rdx], 1^^^jnz     short loc_411A80^^^mov     rcx, rsi^^^sub     rcx, [rdx+10h]^^^cmp     rcx, [rdx+28h]^^^jnb     short loc_411A80^^^mov     eax, 1^^^retn^^^xor     eax, eax^^^retn^^^
_IO_wsetb$$$push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 18h^^^mov     rax, [rdi+0A0h]^^^mov     esi, [rbx+74h]^^^mov     rdi, [rax+30h]^^^test    rdi, rdi^^^jz      short loc_426C65^^^test    sil, 8^^^jz      short loc_426C88^^^mov     [rax+30h], rbp^^^mov     [rax+38h], rdx^^^mov     eax, esi^^^and     eax, 0FFFFFFF7h^^^or      esi, 8^^^test    ecx, ecx^^^cmovz   eax, esi^^^mov     [rbx+74h], eax^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rax+38h]^^^mov     [rsp+28h+var_20], rdx^^^mov     [rsp+28h+var_28], ecx^^^sub     rax, rdi^^^sar     rax, 2^^^lea     rsi, ds:0FFFh[rax*4]^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     rax, [rbx+0A0h]^^^mov     esi, [rbx+74h]^^^mov     ecx, [rsp+28h+var_28]^^^mov     rdx, [rsp+28h+var_20]^^^jmp     short loc_426C65^^^
ptmalloc_init.part.8$$$push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     cs:__libc_malloc_initialized, 0^^^mov     cs:qword_6C48E8, offset ptmalloc_lock_all^^^mov     cs:qword_6C48F0, offset ptmalloc_unlock_all^^^mov     cs:qword_6C48F8, offset ptmalloc_unlock_all2^^^mov     qword ptr fs:[rax], offset main_arena^^^mov     eax, offset __dso_handle^^^test    rax, rax^^^jz      loc_40405F^^^mov     rax, cs:__dso_handle^^^mov     edi, offset atfork_mem^^^mov     cs:qword_6C4900, rax^^^mov     cs:dword_6C4908, 1^^^call    __linkin_atfork^^^mov     rbx, cs:environ^^^test    rbx, rbx^^^jz      short loc_403F34^^^xor     r12d, r12d^^^mov     rbp, [rbx]      ^^^test    rbp, rbp^^^jz      short loc_403F26^^^nop     dword ptr [rax+rax+00h]^^^cmp     byte ptr [rbp+0], 4Dh^^^jz      loc_403FD0^^^add     rbx, 8^^^mov     rbp, [rbx]^^^test    rbp, rbp^^^jnz     short loc_403F10^^^test    r12, r12^^^jz      short loc_403F34^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jnz     short loc_403F60^^^mov     rax, cs:__malloc_initialize_hook^^^test    rax, rax^^^jz      short loc_403F42^^^call    rax ^^^mov     cs:__libc_malloc_initialized, 1^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^movsx   eax, al^^^mov     edi, 0FFFFFFFBh^^^lea     esi, [rax-30h]^^^call    mALLOPt^^^mov     r8d, cs:check_action^^^test    r8d, r8d^^^jz      short loc_403F34^^^mov     edi, cs:disallow_malloc_check^^^test    edi, edi^^^jnz     short loc_403FC1^^^mov     cs:using_malloc_checking, 1^^^mov     cs:__malloc_hook, offset malloc_check^^^mov     cs:__free_hook, offset free_check^^^mov     cs:__realloc_hook, offset realloc_check^^^mov     cs:__memalign_hook, offset memalign_check^^^jmp     loc_403F34^^^mov     cs:disallow_malloc_check, 0^^^jmp     loc_403F34^^^cmp     byte ptr [rbp+1], 41h^^^jnz     loc_403F1A^^^cmp     byte ptr [rbp+2], 4Ch^^^jnz     loc_403F1A^^^cmp     byte ptr [rbp+3], 4Ch^^^jnz     loc_403F1A^^^cmp     byte ptr [rbp+4], 4Fh^^^jnz     loc_403F1A^^^cmp     byte ptr [rbp+5], 43h^^^jnz     loc_403F1A^^^cmp     byte ptr [rbp+6], 5Fh^^^jnz     loc_403F1A^^^mov     r13, rbp^^^add     rbx, 8^^^add     r13, 7^^^jz      loc_403F26^^^movzx   edx, byte ptr [rbp+7]^^^test    dl, dl^^^jz      loc_403F03      ^^^xor     eax, eax^^^cmp     dl, 3Dh^^^jz      loc_403F03      ^^^add     rax, 1^^^movzx   edx, byte ptr [rbp+rax+7]^^^test    dl, dl^^^jz      loc_403F03      ^^^cmp     dl, 3Dh^^^jnz     short loc_404034^^^sub     rax, 6^^^cmp     rax, 9          ^^^ja      loc_403F03      ^^^jmp     ds:off_498058[rax*8]^^^mov     eax, offset __dso_handle^^^jmp     loc_403ED9^^^mov     edx, 6          ^^^mov     esi, offset aCheck_^^^mov     rdi, r13^^^add     rbp, 0Eh^^^call    sub_400370^^^test    eax, eax^^^cmovz   r12, rbp^^^jmp     loc_403F03      ^^^mov     r9d, cs:__libc_enable_secure^^^test    r9d, r9d^^^jnz     loc_403F03      ^^^mov     edx, 0Fh^^^mov     esi, offset aTrim_threshold^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jz      loc_40413A^^^mov     edx, 0Fh^^^mov     esi, offset aMmap_threshold^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_403F03      ^^^lea     rdi, [rbp+17h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFFDh^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^mov     r10d, cs:__libc_enable_secure^^^test    r10d, r10d^^^jnz     loc_403F03      ^^^mov     edx, 0Ah^^^mov     esi, offset aArena_test^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_403F03      ^^^lea     rdi, [rbp+12h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFF9h^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^lea     rdi, [rbp+17h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFFFh^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^mov     r11d, cs:__libc_enable_secure^^^test    r11d, r11d^^^jnz     loc_403F03      ^^^mov     edx, 9^^^mov     esi, offset aMmap_max_^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jz      loc_40421F^^^mov     edx, 9^^^mov     esi, offset aArena_max^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_403F03      ^^^lea     rdi, [rbp+11h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFF8h^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jnz     loc_403F03      ^^^mov     edx, 8^^^mov     esi, offset aTop_pad_^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_404240^^^mov     edx, 8^^^mov     esi, offset aPerturb_^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_403F03      ^^^lea     rdi, [rbp+10h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFFAh^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^lea     rdi, [rbp+11h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFFCh^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^lea     rdi, [rbp+10h]^^^xor     esi, esi^^^mov     edx, 0Ah^^^call    strtoq^^^mov     edi, 0FFFFFFFEh^^^mov     esi, eax^^^call    mALLOPt^^^jmp     loc_403F03      ^^^
_int_free$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 28h^^^mov     rax, [rsi+8]^^^mov     [rsp+58h+var_50], edx^^^mov     rbp, rax^^^and     rbp, 0FFFFFFFFFFFFFFF8h^^^mov     rdx, rbp^^^neg     rdx^^^cmp     rsi, rdx^^^ja      loc_404B80^^^test    sil, 0Fh^^^jnz     loc_404B80^^^cmp     rbp, 1Fh^^^jbe     loc_404C87^^^cmp     rbp, cs:global_max_fast^^^ja      loc_404508^^^lea     rdx, [rsi+rbp]^^^mov     rax, [rdx+8]^^^cmp     rax, 10h^^^jbe     loc_404BBC^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, [rdi+878h]^^^jnb     loc_404BBC^^^mov     esi, cs:perturb_byte^^^test    esi, esi^^^jnz     loc_404C6F^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_404480^^^lock^^^and     dword ptr [r13+4], 0FFFFFFFEh^^^shr     ebp, 4^^^sub     ebp, 2^^^mov     eax, ebp^^^mov     rdx, [r13+rax*8+8]^^^lea     rcx, [r13+rax*8+8]^^^cmp     rbx, rdx^^^jz      loc_404B5A^^^mov     esi, 0FFFFFFFFh^^^jmp     short loc_4044BC^^^cmp     rbx, rax^^^jz      loc_404B5A^^^mov     rdx, rax^^^test    rdx, rdx^^^jz      short loc_4044CB^^^mov     rsi, [rdx+8]^^^shr     esi, 4^^^sub     esi, 2^^^mov     [rbx+10h], rdx^^^mov     rax, rdx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_4044DE^^^lock^^^cmpxchg [rcx], rbx^^^cmp     rdx, rax^^^jnz     short loc_4044B0^^^test    rdx, rdx^^^jz      short loc_4044F4^^^cmp     ebp, esi^^^jnz     loc_404E51^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    al, 2^^^jnz     loc_404990^^^mov     eax, [rsp+58h+var_50]^^^xor     r15d, r15d^^^mov     [rsp+58h+var_4C], 0^^^test    eax, eax^^^jz      loc_404870^^^mov     rax, [r13+58h]^^^cmp     rbx, rax^^^jz      loc_404C30^^^test    byte ptr [r13+4], 2^^^lea     r12, [rbx+rbp]^^^jz      loc_404D95^^^mov     r14, [r12+8]^^^test    r14b, 1^^^jz      loc_404DB4^^^cmp     r14, 10h^^^jbe     loc_404DBF^^^and     r14, 0FFFFFFFFFFFFFFF8h^^^cmp     r14, [r13+878h]^^^jnb     loc_404DBF^^^mov     esi, cs:perturb_byte^^^test    esi, esi^^^jnz     loc_404DCA^^^test    byte ptr [rbx+8], 1^^^jnz     short loc_4045C5^^^mov     rax, [rbx]^^^sub     rbx, rax^^^add     rbp, rax^^^mov     rax, [rbx+10h]^^^mov     rdx, [rbx+18h]^^^cmp     rbx, [rax+18h]^^^jnz     loc_404D1C^^^cmp     rbx, [rdx+10h]^^^jnz     loc_404D1C^^^cmp     qword ptr [rbx+8], 3FFh^^^mov     [rax+18h], rdx^^^mov     [rdx+10h], rax^^^jbe     short loc_4045C5^^^mov     rdx, [rbx+20h]^^^test    rdx, rdx^^^jnz     loc_404CF4^^^cmp     [r13+58h], r12^^^jz      loc_4049F0^^^test    byte ptr [r12+r14+8], 1^^^jnz     loc_4048B0^^^mov     rax, [r12+10h]^^^mov     rdx, [r12+18h]^^^cmp     r12, [rax+18h]^^^jnz     loc_404CDC^^^cmp     r12, [rdx+10h]^^^jnz     loc_404CDC^^^cmp     qword ptr [r12+8], 3FFh^^^mov     [rax+18h], rdx^^^mov     [rdx+10h], rax^^^jbe     short loc_40461A^^^mov     rdx, [r12+20h]^^^test    rdx, rdx^^^jnz     loc_404E1C^^^add     rbp, r14^^^mov     rax, [r13+68h]^^^lea     rdx, [r13+58h]^^^cmp     rdx, [rax+18h]^^^jnz     loc_404E11^^^cmp     rbp, 3FFh^^^mov     [rbx+10h], rax^^^mov     [rbx+18h], rdx^^^jbe     short loc_404650^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     [rax+18h], rbx^^^mov     rax, rbp^^^mov     [r13+68h], rbx^^^or      rax, 1^^^mov     [rbx+rbp], rbp^^^mov     [rbx+8], rax^^^cmp     rbp, 0FFFFh^^^jbe     loc_404948^^^mov     ecx, [r13+4]^^^test    cl, 1^^^jz      loc_404A10^^^cmp     r13, offset main_arena^^^jz      loc_404A6A^^^mov     rax, [r13+58h]^^^mov     rdi, rax^^^and     rdi, 0FFFFFFFFFC000000h^^^mov     r12, [rdi]^^^cmp     r12, r13^^^jnz     loc_404C92^^^mov     r9, cs:qword_6C2988^^^lea     rbx, [rdi+20h]^^^cmp     rbx, rax^^^mov     [rsp+58h+var_40], r9^^^mov     r9, cs:_dl_pagesize^^^mov     [rsp+58h+var_48], r9^^^jnz     loc_404AAE^^^mov     rbp, [rdi+8]^^^mov     rsi, [rbp+10h]^^^lea     rdx, [rbp+rsi-10h]^^^cmp     qword ptr [rdx+8], 1^^^jnz     loc_404ABD^^^sub     rdx, [rdx]^^^mov     rcx, [rdx+8]^^^mov     r8, rcx^^^and     r8, 0FFFFFFFFFFFFFFF8h^^^lea     rax, [r8+0Fh]^^^cmp     rax, 3Eh^^^ja      loc_404AEF^^^mov     rax, [rsp+58h+var_40]^^^mov     r9, [rsp+58h+var_48]^^^add     r8, 10h^^^mov     r14, r8^^^lea     r15, [rax+r9+20h]^^^sub     r9, 1^^^mov     rax, rbx^^^mov     rbx, r9^^^jmp     loc_404801^^^mov     esi, 4000000h^^^mov     [rsp+58h+var_58], rdx^^^call    munmap^^^mov     rdx, [rsp+58h+var_58]^^^test    byte ptr [rdx+8], 1^^^mov     rax, rdx^^^jnz     short loc_404789^^^sub     rax, [rdx]^^^mov     rdx, [rax+10h]^^^mov     rcx, [rax+18h]^^^cmp     rax, [rdx+18h]^^^jnz     loc_404B3A^^^cmp     rax, [rcx+10h]^^^jnz     loc_404B3A^^^cmp     qword ptr [rax+8], 3FFh^^^mov     [rdx+18h], rcx^^^mov     [rcx+10h], rdx^^^jbe     short loc_404789^^^mov     rcx, [rax+20h]^^^test    rcx, rcx^^^jnz     loc_404B88^^^lea     rdx, [rax+r14]^^^test    rdx, rbx^^^jnz     loc_404B21^^^mov     rcx, rbp^^^add     rcx, [rbp+10h]^^^cmp     rdx, rcx^^^jnz     loc_404B08^^^lea     rdx, [rbp+20h]^^^or      r14, 1^^^mov     [r12+58h], rax^^^mov     [rax+8], r14^^^cmp     rax, rdx^^^jnz     loc_4049E0^^^mov     r9, [rbp+8]^^^mov     rsi, [r9+10h]^^^lea     rdx, [r9+rsi-10h]^^^cmp     qword ptr [rdx+8], 1^^^jnz     loc_404ABD^^^sub     rdx, [rdx]^^^mov     rcx, [rdx+8]^^^mov     rdi, rcx^^^and     rdi, 0FFFFFFFFFFFFFFF8h^^^lea     r8, [rdi+10h]^^^add     rdi, 0Fh^^^cmp     rdi, 3Eh^^^mov     r14, r8^^^ja      loc_404AEF^^^mov     rdi, rbp^^^mov     rbp, r9^^^and     ecx, 1^^^jnz     short loc_40480C^^^mov     r14, r8^^^add     r14, [rdx]^^^lea     rcx, [r14-1]^^^cmp     rcx, 3FFFFFEh^^^ja      loc_404AD6^^^mov     ecx, 4000000h^^^sub     rcx, rsi^^^add     rcx, r14^^^cmp     rcx, r15^^^jb      loc_4048C0^^^mov     rax, [rdi+10h]^^^sub     [r12+878h], rax^^^sub     cs:arena_mem, rax^^^lea     rax, [rdi+4000000h]^^^cmp     cs:aligned_heap_area, rax^^^jnz     loc_404730^^^mov     cs:aligned_heap_area, 0^^^jmp     loc_404730^^^mov     esi, 1^^^mov     eax, [rsp+58h+var_50]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404890^^^lock cmpxchg [r13+0], esi^^^jnz     _L_lock_4253^^^jmp     short loc_40489B^^^cmpxchg [r13+0], esi^^^jnz     _L_lock_4253^^^mov     r15d, 1^^^mov     [rsp+58h+var_4C], 1^^^jmp     loc_404527^^^and     qword ptr [r12+8], 0FFFFFFFFFFFFFFFEh^^^jmp     loc_40461D^^^mov     r14, [rax+8]^^^mov     rbx, rax^^^mov     rbp, rdi^^^mov     r10, r14^^^and     r10, 0FFFFFFFFFFFFFFF8h^^^mov     rax, r10^^^sub     rax, [rsp+58h+var_40]^^^lea     r14, [rax-21h]^^^mov     rax, [rsp+58h+var_48]^^^neg     rax^^^and     r14, rax^^^cmp     r14, [rsp+58h+var_48]^^^jl      short loc_404948^^^mov     r15, [rbp+10h]^^^sub     r15, r14^^^cmp     r15, 1Fh^^^jle     short loc_404948^^^mov     eax, cs:__libc_enable_secure^^^lea     rdi, [rbp+r15+0]^^^test    eax, eax^^^jnz     loc_404CAB^^^mov     edx, 4^^^mov     rsi, r14^^^mov     [rsp+58h+var_58], r10^^^call    madvise^^^mov     r10, [rsp+58h+var_58]^^^sub     cs:arena_mem, r14^^^sub     r10, r14^^^mov     [rbp+10h], r15^^^or      r10, 1^^^sub     [r12+878h], r14^^^mov     [rbx+8], r10^^^nop     word ptr [rax+rax+00h]^^^mov     eax, [rsp+58h+var_50]^^^test    eax, eax^^^jnz     loc_4044F4^^^mov     eax, [rsp+58h+var_4C]^^^test    eax, eax^^^jz      loc_404DF8^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404976^^^lock dec dword ptr [r13+0]^^^jnz     _L_unlock_4380^^^jmp     short loc_404980^^^dec     dword ptr [r13+0]^^^jnz     _L_unlock_4380^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rsi, [rsi]^^^mov     rdi, rbx^^^mov     rax, cs:_dl_pagesize^^^sub     rdi, rsi^^^add     rsi, rbp^^^sub     rax, 1^^^mov     rdx, rdi^^^or      rdx, rsi^^^test    rdx, rax^^^jnz     loc_404DE2^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rsi^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     munmap^^^mov     rbx, rax^^^jmp     loc_4048CA^^^add     rbp, r14^^^mov     rax, rbp^^^or      rax, 1^^^mov     [rbx+8], rax^^^mov     [r13+58h], rbx^^^jmp     loc_404667^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_404A30^^^mov     rdi, r13^^^call    malloc_consolidate_part_3^^^jmp     loc_404681^^^lea     rax, [r13+rdx*8+68h]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_404A30^^^cmp     r13, offset main_arena^^^jz      short loc_404AA1^^^or      ecx, 2^^^lea     rax, [r13+58h]^^^or      ecx, 1^^^mov     [r13+4], ecx^^^mov     [r13+58h], rax^^^jmp     loc_404681^^^mov     rax, cs:qword_6C2138^^^mov     rax, [rax+8]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, cs:mp_^^^jb      loc_404948^^^mov     rdi, cs:qword_6C2988^^^mov     edx, offset qword_6C2958^^^mov     esi, offset qword_6C2138^^^call    sYSTRIm_isra_1^^^jmp     loc_404948^^^mov     cs:global_max_fast, 80h^^^jmp     short loc_404A56^^^mov     r14, [rax+8]^^^mov     rbx, rax^^^mov     rbp, rdi^^^jmp     loc_4048CA^^^mov     ecx, offset __func___12066^^^mov     edx, 297h^^^mov     esi, offset aArena_c^^^mov     edi, offset aPSize00x1^^^call    __malloc_assert^^^mov     ecx, offset __func___12066^^^mov     edx, 29Dh^^^mov     esi, offset aArena_c^^^mov     edi, offset aNew_size0New_s^^^call    __malloc_assert^^^mov     ecx, offset __func___12066^^^mov     edx, 29Ah^^^mov     esi, offset aArena_c^^^mov     edi, offset aNew_size0New_0^^^call    __malloc_assert^^^mov     ecx, offset __func___12066^^^mov     edx, 2A9h^^^mov     esi, offset aArena_c^^^mov     edi, offset aCharPNew_sizeC^^^call    __malloc_assert^^^mov     ecx, offset __func___12066^^^mov     edx, 2A8h^^^mov     esi, offset aArena_c^^^mov     edi, offset aUnsignedLongCh^^^call    __malloc_assert^^^mov     edi, cs:check_action^^^mov     rdx, rax^^^mov     esi, offset aCorruptedDoubl^^^mov     [rsp+58h+var_58], rax^^^call    malloc_printerr^^^mov     rax, [rsp+58h+var_58]^^^jmp     loc_404789^^^mov     r8d, offset aDoubleFreeOrCo^^^mov     edi, cs:check_action^^^add     rsp, 28h^^^lea     rdx, [rbx+10h]^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^mov     rsi, r8^^^jmp     malloc_printerr^^^mov     r8d, offset aFreeInvalidPoi^^^jmp     short loc_404B60^^^cmp     rax, [rcx+28h]^^^jnz     loc_404E75^^^mov     rsi, [rax+28h]^^^cmp     rax, [rsi+20h]^^^jnz     loc_404E5C^^^cmp     qword ptr [rdx+20h], 0^^^jz      loc_404E8E^^^mov     [rcx+28h], rsi^^^mov     rdx, [rax+28h]^^^mov     [rdx+20h], rcx^^^jmp     loc_404789^^^cmp     [rsp+58h+var_50], 0^^^mov     r8d, offset aFreeInvalidNex^^^jnz     short loc_404B60^^^mov     esi, 1^^^mov     eax, [rsp+58h+var_50]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404BE9^^^lock cmpxchg [r13+0], esi^^^jnz     _L_lock_4807^^^jmp     short loc_404BF4^^^cmpxchg [r13+0], esi^^^jnz     _L_lock_4807^^^mov     rax, [rdx+8]^^^cmp     rax, 10h^^^jbe     short loc_404C4A^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, [r13+878h]^^^jnb     short loc_404C4A^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404C21^^^lock dec dword ptr [r13+0]^^^jnz     _L_unlock_4820^^^jmp     short loc_404C2B^^^dec     dword ptr [r13+0]^^^jnz     _L_unlock_4820^^^jmp     loc_404466^^^mov     r8d, offset aDoubleFreeOr_0^^^test    r15b, r15b^^^jz      loc_404B60^^^cmp     [rsp+58h+var_50], 0^^^jnz     loc_404B60^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404C60^^^lock dec dword ptr [r13+0]^^^jnz     _L_unlock_4858^^^jmp     short loc_404C6A^^^dec     dword ptr [r13+0]^^^jnz     _L_unlock_4858^^^jmp     loc_404B60^^^lea     rdx, [rbp-10h]^^^lea     rdi, [rbx+10h]^^^and     esi, 0FFh^^^call    sub_400390^^^jmp     loc_404474^^^mov     r8d, offset aFreeInvalidSiz^^^jmp     loc_404B60^^^mov     ecx, offset __func___12673^^^mov     edx, 1067h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aHeapAr_ptrAv^^^call    __malloc_assert^^^xor     r9d, r9d^^^or      r8d, 0FFFFFFFFh^^^xor     edx, edx^^^mov     ecx, 32h^^^mov     rsi, r14^^^mov     [rsp+58h+var_58], r10^^^call    mmap64^^^add     rax, 1^^^mov     r10, [rsp+58h+var_58]^^^jz      loc_404948^^^mov     [rbp+18h], r15^^^jmp     loc_404924^^^mov     edi, cs:check_action^^^mov     rdx, r12^^^mov     esi, offset aCorruptedDoubl^^^call    malloc_printerr^^^jmp     loc_40461A^^^cmp     [rdx+28h], rbx^^^jnz     short loc_404D6F^^^mov     rcx, [rbx+28h]^^^cmp     rbx, [rcx+20h]^^^jnz     short loc_404D56^^^cmp     qword ptr [rax+20h], 0^^^jz      short loc_404D34^^^mov     [rdx+28h], rcx^^^mov     rax, [rbx+28h]^^^mov     [rax+20h], rdx^^^jmp     loc_4045C5^^^mov     edi, cs:check_action^^^mov     rdx, rbx^^^mov     esi, offset aCorruptedDoubl^^^call    malloc_printerr^^^jmp     loc_4045C5^^^cmp     rdx, rbx^^^jz      short loc_404D88^^^mov     [rax+20h], rdx^^^mov     rdx, [rbx+20h]^^^mov     [rax+28h], rcx^^^mov     [rdx+28h], rax^^^mov     rdx, [rbx+28h]^^^mov     [rdx+20h], rax^^^jmp     loc_4045C5^^^mov     ecx, offset __func___12673^^^mov     edx, 1014h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPBk_nextsizeFd^^^call    __malloc_assert^^^mov     ecx, offset __func___12673^^^mov     edx, 1014h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPFd_nextsizeBk^^^call    __malloc_assert^^^mov     [rax+28h], rax^^^mov     [rax+20h], rax^^^jmp     loc_4045C5^^^mov     rdx, [rax+8]^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^add     rax, rdx^^^cmp     r12, rax^^^jb      loc_404543^^^mov     r8d, offset aDoubleFreeOr_1^^^jmp     loc_404C36^^^mov     r8d, offset aDoubleFreeOr_2^^^jmp     loc_404C36^^^mov     r8d, offset aFreeInvalidN_0^^^jmp     loc_404C36^^^lea     rdx, [rbp-10h]^^^lea     rdi, [rbx+10h]^^^and     esi, 0FFh^^^call    sub_400390^^^jmp     loc_40457B^^^add     rsp, 28h^^^mov     rdi, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     munmap_chunk_part_4^^^mov     ecx, offset __func___12673^^^mov     edx, 106Dh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aLocked^^^call    __malloc_assert^^^mov     r8d, offset aFreeCorruptedU^^^jmp     loc_404C36^^^mov     rsi, [rdx+28h]^^^cmp     rsi, r12^^^jnz     loc_404F05^^^mov     rcx, [r12+28h]^^^cmp     r12, [rcx+20h]^^^jnz     loc_404EEC^^^cmp     qword ptr [rax+20h], 0^^^jz      short loc_404EB0^^^mov     [rdx+28h], rcx^^^mov     rax, [r12+28h]^^^mov     [rax+20h], rdx^^^jmp     loc_40461A^^^mov     r8d, offset aInvalidFastbin^^^jmp     loc_404B60^^^mov     ecx, offset __func___12066^^^mov     edx, 2A6h^^^mov     esi, offset aArena_c^^^mov     edi, offset aPBk_nextsizeFd^^^call    __malloc_assert^^^mov     ecx, offset __func___12066^^^mov     edx, 2A6h^^^mov     esi, offset aArena_c^^^mov     edi, offset aPFd_nextsizeBk^^^call    __malloc_assert^^^cmp     rax, rcx^^^jz      short loc_404ED2^^^mov     [rdx+20h], rcx^^^mov     rcx, [rax+20h]^^^mov     [rdx+28h], rsi^^^mov     [rcx+28h], rdx^^^mov     rcx, [rax+28h]^^^mov     [rcx+20h], rdx^^^jmp     loc_404789^^^cmp     rdx, r12^^^jz      short loc_404EDF^^^mov     [rax+20h], rdx^^^mov     rdx, [rsi+20h]^^^mov     [rax+28h], rcx^^^mov     [rdx+28h], rax^^^mov     rdx, [rsi+28h]^^^mov     [rdx+20h], rax^^^jmp     loc_40461A^^^mov     [rdx+28h], rdx^^^mov     [rdx+20h], rdx^^^jmp     loc_404789^^^mov     [rax+28h], rax^^^mov     [rax+20h], rax^^^jmp     loc_40461A^^^mov     ecx, offset __func___12673^^^mov     edx, 101Dh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextchunkBk_ne^^^call    __malloc_assert^^^mov     ecx, offset __func___12673^^^mov     edx, 101Dh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextchunkFd_ne^^^call    __malloc_assert^^^
__wcsmbs_clone_conv$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rbp, [rax]^^^mov     rax, [rbp+28h]^^^test    rax, rax^^^jz      short loc_4469ED^^^mov     rdx, [rax]^^^mov     [rbx], rdx^^^mov     rcx, [rax+8]^^^cmp     qword ptr [rdx], 0^^^mov     [rbx+8], rcx^^^mov     rcx, [rax+10h]^^^mov     [rbx+10h], rcx^^^mov     rax, [rax+18h]^^^mov     [rbx+18h], rax^^^jz      short loc_4469D8^^^add     dword ptr [rdx+10h], 1^^^mov     rax, [rbx+10h]^^^cmp     qword ptr [rax], 0^^^jz      short loc_4469E6^^^add     dword ptr [rax+10h], 1^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^cmp     rbp, offset _nl_C_LC_CTYPE^^^mov     eax, offset __wcsmbs_gconv_fcts_c^^^jz      short loc_4469B0^^^mov     rdi, rbp^^^call    __wcsmbs_load_conv^^^mov     rax, [rbp+28h]^^^jmp     short loc_4469B0^^^
_IO_str_overflow$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^xor     r12d, r12d^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 48h^^^mov     edx, [rdi]^^^cmp     esi, 0FFFFFFFFh^^^mov     ebp, esi^^^setz    r12b^^^test    dl, 8^^^jz      short loc_42D6E8^^^cmp     r12d, 1^^^sbb     ebp, ebp^^^mov     eax, ebp^^^mov     rbx, [rsp+48h+var_30]^^^mov     rbp, [rsp+48h+var_28]^^^mov     r12, [rsp+48h+var_20]^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     eax, edx^^^and     eax, 0C00h^^^cmp     eax, 400h^^^jz      loc_42D800^^^mov     rax, [rdi+28h]^^^mov     r13, [rbx+38h]^^^mov     r15, [rbx+40h]^^^mov     rsi, rax^^^sub     rsi, [rbx+20h]^^^movsxd  rcx, r12d^^^sub     r15, r13^^^add     rcx, r15^^^cmp     rsi, rcx^^^jb      loc_42D7D7^^^and     edx, 1^^^jnz     loc_42D820^^^lea     rax, [r15+r15+64h]^^^cmp     r15, rax^^^mov     [rsp+48h+var_40], rax^^^ja      loc_42D820^^^mov     rdi, rax^^^call    qword ptr [rbx+0E0h]^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_42D820^^^test    r13, r13^^^jz      short loc_42D774^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     rdi, r13^^^call    qword ptr [rbx+0E8h]^^^mov     qword ptr [rbx+38h], 0^^^mov     rdx, [rsp+48h+var_40]^^^lea     rdi, [r14+r15]^^^xor     esi, esi^^^sub     rdx, r15^^^call    sub_400390^^^mov     rdx, [rsp+48h+var_40]^^^mov     ecx, 1^^^mov     rsi, r14^^^mov     rdi, rbx^^^add     rdx, r14^^^call    _IO_setb^^^mov     rax, r14^^^mov     rdx, [rbx+40h]^^^mov     [rbx+20h], r14^^^sub     rax, r13^^^add     [rbx+18h], rax^^^mov     rax, r14^^^sub     rax, r13^^^add     [rbx+8], rax^^^mov     rax, r14^^^sub     rax, r13^^^add     [rbx+10h], rax^^^mov     rax, r14^^^sub     rax, r13^^^add     rax, [rbx+28h]^^^mov     [rbx+30h], rdx^^^mov     [rbx+28h], rax^^^test    r12d, r12d^^^jnz     short loc_42D7E7^^^mov     [rax], bpl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     rax, [rbx+10h]^^^jbe     loc_42D6BE^^^mov     [rbx+10h], rax^^^jmp     loc_42D6BE^^^mov     rax, [rdi+8]^^^mov     rcx, [rdi+10h]^^^or      dh, 8^^^mov     [rdi], edx^^^mov     [rdi+28h], rax^^^mov     [rdi+8], rcx^^^jmp     loc_42D6FE^^^mov     ebp, 0FFFFFFFFh^^^jmp     loc_42D6BE^^^
_L_lock_676$$$lea     rdi, lock_12832^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4591EE^^^
_L_lock_11979$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40828A^^^
_L_unlock_340$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_418919^^^
__strcasecmp_sse42$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rdx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
_L_unlock_265$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4746C1^^^
__strcpy_sse2_unaligned$$$mov     rcx, rsi^^^mov     rax, rdi^^^and     rcx, 3Fh^^^cmp     rcx, 20h        ^^^jbe     loc_443E83^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0Fh^^^pxor    xmm0, xmm0^^^pxor    xmm1, xmm1^^^pcmpeqb xmm1, xmmword ptr [rsi]^^^pmovmskb edx, xmm1^^^shr     rdx, cl^^^test    rdx, rdx^^^jnz     loc_443EE0^^^pcmpeqb xmm0, xmmword ptr [rsi+10h]^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     loc_443F20^^^movdqu  xmm1, xmmword ptr [rsi+rcx]^^^movdqu  xmmword ptr [rdi], xmm1^^^nop     dword ptr [rax+rax+00000000h]^^^sub     rdi, rcx^^^mov     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movaps  xmm2, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movaps  xmm3, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movaps  xmm4, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm3^^^pcmpeqb xmm0, xmm4^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movaps  xmm1, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm4^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movaps  xmm2, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movaps  xmm3, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_443EC0^^^movdqu  xmmword ptr [rdi+rcx], xmm3^^^mov     rdx, rsi^^^lea     rsi, [rsi+rcx+10h]^^^and     rsi, 0FFFFFFFFFFFFFFC0h^^^sub     rdx, rsi^^^sub     rdi, rdx^^^movaps  xmm2, xmmword ptr [rsi]^^^movaps  xmm4, xmm2^^^movaps  xmm5, xmmword ptr [rsi+10h]^^^movaps  xmm3, xmmword ptr [rsi+20h]^^^movaps  xmm6, xmm3^^^movaps  xmm7, xmmword ptr [rsi+30h]^^^pminub  xmm2, xmm5^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb edx, xmm3^^^test    rdx, rdx^^^jnz     short loc_443E19^^^add     rdi, 40h^^^add     rsi, 40h^^^movdqu  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm2, xmmword ptr [rsi]^^^movdqa  xmm4, xmm2^^^movdqu  xmmword ptr [rdi-30h], xmm5^^^movaps  xmm5, xmmword ptr [rsi+10h]^^^pminub  xmm2, xmm5^^^movaps  xmm3, xmmword ptr [rsi+20h]^^^movdqu  xmmword ptr [rdi-20h], xmm6^^^movaps  xmm6, xmm3^^^movdqu  xmmword ptr [rdi-10h], xmm7^^^movaps  xmm7, xmmword ptr [rsi+30h]^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb edx, xmm3^^^test    rdx, rdx^^^jz      short loc_443DCE^^^pxor    xmm1, xmm1^^^pcmpeqb xmm0, xmm4^^^pcmpeqb xmm1, xmm5^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm1^^^test    rdx, rdx^^^jnz     loc_443F40^^^test    rcx, rcx^^^jnz     loc_443F60^^^pcmpeqb xmm0, xmm6^^^pcmpeqb xmm1, xmm7^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm1^^^test    rdx, rdx^^^jnz     loc_443F90^^^bsf     rdx, rcx^^^movdqu  xmmword ptr [rdi], xmm4^^^movdqu  xmmword ptr [rdi+10h], xmm5^^^movdqu  xmmword ptr [rdi+20h], xmm6^^^add     rsi, 30h^^^add     rdi, 30h^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^pxor    xmm0, xmm0^^^movdqu  xmm1, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+10h]^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     short loc_443F08^^^pcmpeqb xmm0, xmm2^^^movdqu  xmmword ptr [rdi], xmm1^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     short loc_443F00^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0Fh^^^jmp     loc_443CC0^^^add     rdi, rcx^^^add     rsi, rcx^^^bsf     rdx, rdx^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^add     rsi, rcx^^^bsf     rdx, rdx^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^add     rsi, 10h^^^add     rdi, 10h^^^bsf     rdx, rdx^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx             ^^^bsf     rdx, rdx^^^add     rsi, rcx^^^add     rdx, 10h^^^sub     rdx, rcx^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^bsf     rdx, rdx^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^bsf     rdx, rcx^^^movdqu  xmmword ptr [rdi], xmm4^^^add     rsi, 10h^^^add     rdi, 10h^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^bsf     rdx, rdx^^^movdqu  xmmword ptr [rdi], xmm4^^^movdqu  xmmword ptr [rdi+10h], xmm5^^^add     rsi, 20h^^^add     rdi, 20h^^^lea     r11, unk_49D330^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^mov     [rdi], dh       ^^^retn^^^mov     dx, [rsi]       ^^^mov     [rdi], dx^^^retn^^^mov     cx, [rsi]       ^^^mov     [rdi], cx^^^mov     [rdi+2], dh^^^retn^^^mov     edx, [rsi]      ^^^mov     [rdi], edx^^^retn^^^mov     ecx, [rsi]      ^^^mov     [rdi+4], dh^^^mov     [rdi], ecx^^^retn^^^mov     ecx, [rsi]      ^^^mov     dx, [rsi+4]^^^mov     [rdi], ecx^^^mov     [rdi+4], dx^^^retn^^^mov     ecx, [rsi]      ^^^mov     edx, [rsi+3]^^^mov     [rdi], ecx^^^mov     [rdi+3], edx^^^retn^^^mov     rdx, [rsi]      ^^^mov     [rdi], rdx^^^retn^^^mov     rcx, [rsi]      ^^^mov     [rdi+8], dh^^^mov     [rdi], rcx^^^retn^^^mov     rcx, [rsi]      ^^^mov     dx, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], dx^^^retn^^^mov     rcx, [rsi]      ^^^mov     edx, [rsi+7]^^^mov     [rdi], rcx^^^mov     [rdi+7], edx^^^retn^^^mov     rcx, [rsi]      ^^^mov     edx, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], edx^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+5]^^^mov     [rdi], rcx^^^mov     [rdi+5], rdx^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+6]^^^mov     [rdi], rcx^^^mov     [rdi+6], rdx^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+7]^^^mov     [rdi], rcx^^^mov     [rdi+7], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmmword ptr [rdi], xmm0^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], dh^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     cx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], cx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Fh], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], ecx^^^mov     [rdi+14h], dh^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+0Eh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Eh], rcx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Fh], rcx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rcx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rcx^^^mov     [rdi+18h], dh^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     cx, [rsi+18h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+18h], cx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     ecx, [rsi+17h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+17h], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     ecx, [rsi+18h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+18h], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Dh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Dh], xmm2^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Eh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Eh], xmm2^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Fh], xmm2^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+10h], xmm2^^^retn^^^
tzset_internal.part.0$$$push    rbp^^^mov     ebp, edi^^^mov     edi, offset aTz ^^^push    rbx^^^sub     rsp, 8^^^mov     cs:is_initialized_11109, 1^^^call    getenv^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_447A30^^^test    ebp, ebp^^^jnz     loc_447A30^^^mov     ebx, offset byte_49D6F5^^^movzx   eax, byte ptr [rbx]^^^test    al, al^^^jz      loc_447A50^^^cmp     al, 3Ah^^^mov     rbp, cs:old_tz^^^setz    al^^^movzx   eax, al^^^add     rbx, rax^^^jz      short loc_44793C^^^test    rbp, rbp^^^jz      short loc_44793C^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jz      loc_447A27^^^test    rbx, rbx^^^mov     eax, offset byte_49D6F5^^^cmovz   rbx, rax^^^mov     rdi, rbp^^^mov     cs:tz_rules, 0^^^mov     cs:qword_6C5730, 0^^^call    free^^^mov     rdi, rbx^^^call    strdup^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^mov     cs:old_tz, rax^^^call    __tzfile_read^^^mov     eax, cs:__use_tzfile^^^test    eax, eax^^^jnz     loc_447A27^^^cmp     byte ptr [rbx], 0^^^jz      short loc_4479A9^^^mov     edi, offset byte_49D6F5^^^mov     ecx, 0Fh^^^mov     rsi, rbx^^^repe cmpsb^^^jnz     loc_447A68^^^xor     eax, eax^^^cmp     cs:__tzname_cur_max, 2^^^mov     edx, offset tz_rules^^^mov     ecx, 0Ch^^^mov     rdi, rdx^^^mov     cs:daylight, 0^^^rep stosq^^^mov     cs:timezone, 0^^^mov     cs:qword_6C5730, offset unk_49D711^^^mov     cs:tz_rules, offset unk_49D711^^^mov     cs:qword_6C5750, 0FFFFFFFFFFFFFFFFh^^^mov     cs:qword_6C5720, 0FFFFFFFFFFFFFFFFh^^^mov     cs:tzname, offset unk_49D711^^^mov     cs:off_6C3298, offset unk_49D711^^^ja      short loc_447A27^^^mov     cs:__tzname_cur_max, 3^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^test    rbx, rbx^^^jnz     loc_447905^^^mov     rbp, cs:old_tz^^^mov     ebx, offset byte_49D6F5^^^jmp     loc_447948^^^movzx   eax, cs:byte_49D704^^^mov     ebx, offset byte_49D704^^^jmp     loc_447910^^^add     rsp, 8^^^mov     rdi, rbx^^^pop     rbx^^^pop     rbp^^^jmp     __tzset_parse_tz^^^
mi_arena.12897$$$push    r15^^^mov     esi, offset aHeapNrDSizes^^^push    r14^^^mov     r14, r10^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 1158h^^^mov     edx, [r10+48h]^^^mov     [rsp+1188h+var_1168], rdi^^^mov     rdi, [r10+40h]^^^lea     eax, [rdx+1]^^^mov     [r10+48h], eax^^^xor     eax, eax^^^call    fprintf^^^mov     esi, 1^^^xor     eax, eax^^^mov     rdx, [rsp+1188h+var_1168]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_402D15^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_854^^^jmp     short loc_402D1E^^^cmpxchg [rdx], esi^^^jnz     _L_lock_854^^^lea     rcx, [rsp+1188h+var_1150]^^^lea     r8, [rsp+1188h+var_1018+8]^^^mov     rdi, rdx^^^xor     r15d, r15d^^^mov     [rsp+1188h+var_1160], 0^^^xor     r9d, r9d^^^nop     dword ptr [rax]^^^mov     rax, [rdi+8]^^^test    rax, rax^^^jz      loc_402FED^^^mov     rsi, [rax+8]^^^xor     edx, edx^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rax+10h]^^^add     rdx, 1^^^test    rax, rax^^^jnz     short loc_402D60^^^mov     rax, rdx^^^add     r9, rdx^^^mov     [rcx], rsi^^^imul    rax, rsi^^^mov     [rcx+10h], rdx^^^add     r15, rax^^^lea     rax, [rsi-0Fh]^^^mov     [rcx-8], rax^^^imul    rdx, [rcx]^^^add     rdi, 8^^^mov     [rcx+8], rdx^^^add     rcx, 20h^^^cmp     rcx, r8^^^jnz     short loc_402D40^^^mov     rcx, [rsp+1188h+var_1168]^^^xor     r12d, r12d^^^xor     r13d, r13d^^^mov     [rsp+1188h+var_1160], r9^^^mov     rdx, [rcx+68h]^^^test    rdx, rdx^^^jz      loc_402E58^^^mov     rdi, rcx^^^mov     r13, qword ptr [rsp+1188h+var_1008+8]^^^mov     r12, qword ptr [rsp+1188h+var_1008]^^^add     rdi, 58h^^^cmp     rdi, rdx^^^jz      loc_402E58^^^mov     rsi, qword ptr [rsp+1188h+var_1018]^^^mov     rcx, qword ptr [rsp+1188h+var_1018+8]^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, [rdx+8]^^^mov     rdx, [rdx+10h]^^^add     r13, 1^^^add     r12, rax^^^cmp     rsi, rax^^^cmova   rsi, rax^^^cmp     rcx, rax^^^cmovb   rcx, rax^^^cmp     rdi, rdx^^^jnz     short loc_402DF0^^^mov     [rsp+1188h+var_1170], rsi^^^movq    xmm1, [rsp+1188h+var_1170]^^^mov     [rsp+1188h+var_1170], rcx^^^movq    xmm2, [rsp+1188h+var_1170]^^^mov     [rsp+1188h+var_1170], r12^^^movq    xmm3, [rsp+1188h+var_1170]^^^mov     [rsp+1188h+var_1170], r13^^^movq    xmm4, [rsp+1188h+var_1170]^^^punpcklqdq xmm1, xmm2^^^punpcklqdq xmm3, xmm4^^^movdqa  [rsp+1188h+var_1018], xmm1^^^movdqa  [rsp+1188h+var_1008], xmm3^^^mov     rax, [rsp+1188h+var_1168]^^^pxor    xmm1, xmm1^^^movdqa  xmm2, cs:xmmword_498100^^^mov     ebx, 0Bh^^^xor     r10d, r10d^^^lea     rbp, [rax+68h]^^^nop     dword ptr [rax]^^^lea     r9, [rbp+r10+0]^^^mov     r11, rbx^^^lea     rcx, [rsp+1188h+var_1158]^^^shl     r11, 5^^^mov     rdx, [r9+10h]^^^add     r11, rcx^^^movdqa  xmmword ptr [r11], xmm2^^^test    rdx, rdx^^^movdqa  xmmword ptr [r11+10h], xmm1^^^jz      loc_402F31^^^cmp     r9, rdx^^^jz      loc_402F31^^^mov     rsi, [rsp+r10*2+1188h+var_FF8]^^^mov     rdi, [rsp+r10*2+1188h+var_FE0]^^^mov     r8, [rsp+r10*2+1188h+var_FE8]^^^mov     rcx, [rsp+r10*2+1188h+var_FF0]^^^nop     dword ptr [rax]^^^mov     rax, [rdx+8]^^^mov     rdx, [rdx+10h]^^^add     rdi, 1^^^add     r8, rax^^^cmp     rsi, rax^^^cmova   rsi, rax^^^cmp     rcx, rax^^^cmovb   rcx, rax^^^cmp     r9, rdx^^^jnz     short loc_402ED0^^^mov     [rsp+1188h+var_1170], rsi^^^movq    xmm3, [rsp+1188h+var_1170]^^^mov     [rsp+1188h+var_1170], rcx^^^movq    xmm4, [rsp+1188h+var_1170]^^^punpcklqdq xmm3, xmm4^^^movdqa  xmmword ptr [r11], xmm3^^^mov     [rsp+1188h+var_1170], r8^^^movq    xmm3, [rsp+1188h+var_1170]^^^mov     [rsp+1188h+var_1170], rdi^^^movq    xmm4, [rsp+1188h+var_1170]^^^punpcklqdq xmm3, xmm4^^^movdqa  xmmword ptr [r11+10h], xmm3^^^mov     rax, [rsp+r10*2+1188h+var_FE0]^^^test    rax, rax^^^jnz     short loc_402F4A^^^mov     [rsp+r10*2+1188h+var_FF8], 0^^^add     r12, [rsp+r10*2+1188h+var_FE8]^^^add     r10, 10h^^^add     r13, rax^^^add     rbx, 1^^^cmp     r10, 7E0h^^^jnz     loc_402E78^^^mov     rdx, [rsp+1188h+var_1168]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_402F83^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_1086^^^jmp     short loc_402F8B^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_1086^^^xor     ebp, ebp^^^mov     rdx, [rsp+1188h+var_1160]^^^add     [r14+30h], r15^^^add     [r14+38h], rdx^^^lea     rbx, [rsp+1188h+var_1140]^^^add     [r14+28h], r13^^^add     [r14+20h], r12^^^jmp     short loc_402FC1^^^add     rbp, 1^^^add     rbx, 20h^^^cmp     rbp, 89h^^^jz      short loc_40300B^^^mov     r9, [rbx]^^^test    r9, r9^^^jz      short loc_402FB0^^^cmp     rbp, 0Ah^^^jz      short loc_402FB0^^^mov     rcx, [rbx-10h]^^^mov     rdx, [rbx-18h]^^^mov     esi, offset aSizeFromZuToZu^^^mov     rdi, [r14+40h]^^^mov     r8, [rbx-8]^^^xor     eax, eax^^^call    fprintf^^^jmp     short loc_402FB0^^^mov     qword ptr [rcx+10h], 0^^^mov     qword ptr [rcx], 0^^^xor     edx, edx^^^mov     qword ptr [rcx-8], 0^^^jmp     loc_402D89^^^mov     r9, qword ptr [rsp+1188h+var_1008+8]^^^test    r9, r9^^^jnz     loc_4030C3^^^mov     rcx, [rsp+1188h+var_1168]^^^mov     rdi, [r14+40h]^^^mov     r9, r12^^^mov     r8, r13^^^mov     esi, offset aSizesTotalType^^^mov     rdx, [rcx+880h]^^^mov     rax, [rcx+878h]^^^mov     rcx, r15^^^add     [r14+18h], rax^^^add     [r14+10h], rdx^^^mov     [rsp+1188h+var_1180], rdx^^^mov     rdx, [rsp+1188h+var_1160]^^^mov     [rsp+1188h+var_1188], rax^^^xor     eax, eax^^^call    fprintf^^^cmp     [rsp+1188h+var_1168], offset main_arena^^^jz      loc_4030F0^^^mov     rax, [rsp+1188h+var_1168]^^^mov     rdi, [r14+40h]^^^mov     esi, offset aAspaceTypeTota^^^mov     rbx, [rax+58h]^^^xor     eax, eax^^^and     rbx, 0FFFFFFFFFC000000h^^^mov     rcx, [rbx+18h]^^^mov     rdx, [rbx+10h]^^^call    fprintf^^^mov     rax, [rbx+10h]^^^add     [r14+8], rax^^^mov     rax, [rbx+18h]^^^add     [r14], rax^^^mov     rsi, [r14+40h]^^^add     rsp, 1158h^^^mov     edi, offset aHeap^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     fputs^^^mov     rdi, [r14+40h]^^^mov     r8, qword ptr [rsp+1188h+var_1008]^^^mov     esi, offset aUnsortedFromZu^^^mov     rcx, qword ptr [rsp+1188h+var_1018+8]^^^mov     rdx, qword ptr [rsp+1188h+var_1018]^^^xor     eax, eax^^^call    fprintf^^^jmp     loc_40301C^^^mov     rdx, cs:qword_6C2958^^^mov     rdi, [r14+40h]^^^mov     esi, offset aAspaceTypeTota^^^xor     eax, eax^^^mov     rcx, rdx^^^call    fprintf^^^mov     rax, cs:qword_6C2958^^^add     [r14+8], rax^^^add     [r14], rax^^^jmp     short loc_4030A4^^^
add_fdes$$$push    r15^^^lea     rax, [rdi+8]^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^mov     rbx, rdx^^^lea     rdx, [rdi+10h]^^^sub     rsp, 38h^^^mov     [rsp+68h+var_50], rsi^^^movzx   ebp, word ptr [rdi+20h]^^^mov     rsi, rax^^^mov     [rsp+68h+var_60], rax^^^mov     [rsp+68h+var_58], rdx^^^shr     bp, 3^^^movzx   ebp, bpl^^^mov     edi, ebp^^^call    base_from_object_isra_3^^^mov     esi, [rbx]^^^mov     r14, rax^^^test    esi, esi^^^jz      loc_493570^^^xor     r15d, r15d^^^jmp     short loc_4934C5^^^mov     rax, [rbx+8]^^^test    rax, rax^^^mov     [rsp+68h+var_40], rax^^^jz      short loc_4934B4^^^mov     rdx, [rsp+68h+var_50]^^^mov     rax, [rdx]^^^test    rax, rax^^^jz      short loc_4934B4^^^mov     rdx, [rax+8]^^^mov     [rax+rdx*8+10h], rbx^^^add     rdx, 1^^^mov     [rax+8], rdx^^^mov     eax, [rbx]^^^lea     rbx, [rbx+rax+4]^^^mov     ecx, [rbx]^^^test    ecx, ecx^^^jz      loc_493570^^^mov     eax, [rbx+4]^^^test    eax, eax^^^jz      short loc_4934B4^^^test    byte ptr [r12+20h], 4^^^jz      short loc_493504^^^lea     r13, [rbx+4]^^^cdqe^^^sub     r13, rax^^^cmp     r15, r13^^^jz      short loc_493504^^^mov     rdi, r13^^^mov     r15, r13^^^call    get_cie_encoding^^^mov     rdx, [rsp+68h+var_58]^^^mov     rsi, [rsp+68h+var_60]^^^movzx   edi, al^^^mov     ebp, eax^^^call    base_from_object_isra_3^^^mov     r14, rax^^^test    ebp, ebp^^^jz      short loc_493488^^^lea     rdx, [rbx+8]^^^movzx   r13d, bpl^^^lea     rcx, [rsp+68h+var_40]^^^mov     rsi, r14^^^mov     edi, r13d^^^call    read_encoded_value_with_base_0^^^mov     edi, r13d^^^call    size_of_encoded_value^^^mov     eax, eax^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^cmp     rax, 7^^^ja      short loc_49354A^^^lea     ecx, ds:0[rax*8]^^^mov     edx, 1^^^shl     rdx, cl^^^sub     rdx, 1^^^test    [rsp+68h+var_40], rdx^^^jnz     loc_493496^^^mov     eax, [rbx]^^^lea     rbx, [rbx+rax+4]^^^mov     ecx, [rbx]^^^test    ecx, ecx^^^jnz     loc_4934C5^^^nop     word ptr [rax+rax+00000000h]^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
_dl_start$$$sub     rsp, 8^^^call    abort^^^
top_check$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^xor     eax, eax^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^mov     rdx, cs:qword_6C2138^^^mov     rbx, cs:_dl_pagesize^^^cmp     rdx, offset qword_6C2138^^^jz      loc_4035ED^^^mov     rcx, [rdx+8]^^^test    cl, 2^^^jnz     short loc_403560^^^mov     rsi, rcx^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^cmp     rsi, 1Fh^^^jbe     short loc_403560^^^and     ecx, 1^^^jz      short loc_403560^^^test    byte ptr cs:dword_6C20E4, 2^^^jnz     loc_4035ED^^^mov     rcx, cs:qword_6C29D0^^^add     rcx, cs:qword_6C2958^^^add     rsi, rdx^^^cmp     rsi, rcx^^^jz      loc_4035ED^^^nop     word ptr [rax+rax+00000000h]^^^mov     edi, cs:check_action^^^mov     esi, offset aMallocTopChunk^^^call    malloc_printerr^^^xor     edi, edi^^^call    cs:__morecore^^^mov     r12, rax^^^mov     rbp, rax^^^and     r12d, 0Fh^^^jnz     loc_403610^^^mov     rax, cs:qword_6C2988^^^lea     rcx, [rbx-1]^^^lea     rdx, [r12+rax+20h]^^^lea     rax, [rbp+rdx+0]^^^add     rbx, rdx^^^and     rax, rcx^^^sub     rbx, rax^^^mov     rdi, rbx^^^call    cs:__morecore^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_403620^^^mov     rdx, cs:__after_morecore_hook^^^test    rdx, rdx^^^jz      short loc_4035C5^^^call    rdx ^^^sub     r13, cs:qword_6C29D0^^^add     rbp, r12^^^xor     eax, eax^^^mov     cs:qword_6C2138, rbp^^^add     r13, rbx^^^sub     rbx, r12^^^or      rbx, 1^^^mov     cs:qword_6C2958, r13^^^mov     [rbp+8], rbx^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     eax, 10h^^^sub     rax, r12^^^mov     r12, rax^^^jmp     loc_403588^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 0Ch^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_4035ED^^^
__ctype_b_loc$$$mov     rax, 0FFFFFFFFFFFFFFE8h^^^add     rax, fs:0^^^retn^^^
sub_41CCDE$$$mov     dword ptr [rbp-5B8h], 10h^^^jmp     loc_41C3F8^^^
_IO_least_marker$$$mov     rdx, [rdi+60h]^^^mov     rax, rsi^^^sub     rax, [rdi+18h]^^^test    rdx, rdx^^^jz      short locret_42BA33^^^movsxd  rcx, dword ptr [rdx+10h]^^^mov     rdx, [rdx]^^^cmp     rax, rcx^^^cmovg   rax, rcx^^^test    rdx, rdx^^^jnz     short loc_42BA20^^^rep retn^^^
__dl_iterate_phdr$$$push    r14^^^mov     eax, 0^^^push    r13^^^mov     r13, rsi^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 40h^^^test    rax, rax^^^jz      short loc_494EF6^^^mov     edi, offset _dl_load_write_lock^^^call    near ptr 0^^^mov     rbx, cs:_dl_ns^^^xor     r14d, r14d^^^mov     ebp, cs:dword_6C5FE8^^^test    rbx, rbx^^^jnz     short loc_494F2E^^^jmp     loc_494FA0^^^mov     rdx, r13^^^mov     esi, 40h^^^mov     rdi, rsp^^^call    r12^^^test    eax, eax^^^mov     r14d, eax^^^jnz     short loc_494FA0^^^mov     rbx, [rbx+18h]^^^test    rbx, rbx^^^jz      short loc_494FA0^^^mov     rdi, [rbx+28h]^^^mov     rax, [rdi]^^^mov     [rsp+68h+var_68], rax^^^mov     rax, [rdi+8]^^^mov     [rsp+68h+var_30], 0^^^mov     [rsp+68h+var_60], rax^^^mov     rax, [rdi+2A0h]^^^mov     [rsp+68h+var_58], rax^^^movzx   eax, word ptr [rdi+2B0h]^^^mov     [rsp+68h+var_50], ax^^^mov     rax, cs:_dl_load_adds^^^mov     [rsp+68h+var_48], rax^^^sub     rax, rbp^^^mov     [rsp+68h+var_40], rax^^^mov     rax, [rdi+448h]^^^test    rax, rax^^^mov     [rsp+68h+var_38], rax^^^jz      short loc_494F10^^^call    _dl_tls_get_addr_soft^^^mov     [rsp+68h+var_30], rax^^^jmp     loc_494F10^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_494FB4^^^mov     edi, offset _dl_load_write_lock^^^call    near ptr 0^^^add     rsp, 40h^^^mov     eax, r14d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
_nl_normalize_codeset$$$push    r12^^^test    rsi, rsi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^jz      loc_41635F^^^mov     rdi, cs:off_499B08^^^xor     eax, eax^^^mov     r12d, 1^^^xor     esi, esi^^^xor     r8d, r8d^^^nop     word ptr [rax+rax+00000000h]^^^movzx   edx, byte ptr [rbx+rax]^^^movzx   ecx, dl^^^test    byte ptr [rdi+rcx*2], 8^^^jz      short loc_4162AD^^^movzx   edx, dl^^^add     esi, 1^^^sub     edx, 30h^^^cmp     edx, 0Ah^^^cmovnb  r12d, r8d^^^add     rax, 1^^^cmp     rax, rbp^^^jnz     short loc_416290^^^test    r12d, r12d^^^jnz     short loc_416338^^^add     esi, 1^^^movsxd  rdi, esi^^^call    malloc^^^test    rax, rax^^^jz      short loc_41632F^^^test    r12d, r12d^^^mov     rdi, rax^^^jnz     short loc_416350^^^test    rbp, rbp^^^jz      short loc_41632C^^^mov     r8, cs:off_499B08^^^mov     r9, cs:off_499B10^^^xor     edx, edx^^^jmp     short loc_416303^^^mov     ecx, [r9+rsi*4]^^^mov     [rdi], cl^^^add     rdi, 1^^^add     rdx, 1^^^cmp     rdx, rbp^^^jz      short loc_41632C^^^movzx   ecx, byte ptr [rbx+rdx]^^^movzx   esi, cl^^^test    byte ptr [r8+rsi*2+1], 4^^^jnz     short loc_4162F0^^^movzx   esi, cl^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_4162FA^^^add     rdx, 1^^^mov     [rdi], cl^^^add     rdi, 1^^^cmp     rdx, rbp^^^jnz     short loc_416303^^^mov     byte ptr [rdi], 0^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^add     esi, 4^^^movsxd  rdi, esi^^^mov     r12d, 1^^^jmp     loc_4162C1^^^mov     dword ptr [rax], 6F7369h^^^lea     rdi, [rax+3]^^^jmp     loc_4162D3^^^mov     edi, 4^^^jmp     short loc_41633E^^^
__woverflow$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^mov     eax, [rdi+0C0h]^^^mov     rbx, rdi^^^mov     ebp, esi^^^test    eax, eax^^^jnz     short loc_426FB7^^^mov     esi, 1^^^call    _IO_fwide^^^mov     rax, [rbx+0D8h]^^^mov     esi, ebp^^^mov     rdi, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^mov     rax, [rax+18h]^^^add     rsp, 18h^^^jmp     rax^^^
_Unwind_GetLanguageSpecificData$$$mov     rax, [rdi+0A0h]^^^retn^^^
_dl_dst_substitute$$$push    r15^^^mov     r11, rdi^^^mov     r15, rsi^^^xor     r9d, r9d^^^push    r14^^^mov     r14, rdx^^^mov     r10, r14^^^push    r13^^^mov     r13d, ecx^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, r14^^^sub     rsp, 38h^^^movzx   edx, byte ptr [rsi]^^^jmp     short loc_450793^^^mov     rbp, r12^^^cmp     dl, 24h^^^jz      short loc_4507E6^^^mov     [rbx], dl^^^add     rbx, 1^^^test    r13d, r13d^^^lea     r12, [rbp+1]^^^movzx   edx, byte ptr [rbp+1]^^^jz      short loc_4507B0^^^cmp     dl, 3Ah^^^jz      short loc_4507D8^^^test    dl, dl^^^jnz     short loc_450790^^^test    r9b, r9b^^^jnz     loc_4509F0^^^mov     byte ptr [rbx], 0^^^add     rsp, 38h^^^mov     rax, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    r9b, r9b^^^jnz     loc_4509B0^^^mov     r10, rbx^^^jmp     short loc_450790^^^mov     eax, cs:__libc_enable_secure^^^lea     r12, [rbp+1]^^^mov     edx, offset aOrigin^^^mov     ecx, r13d^^^mov     rdi, r15^^^mov     [rsp+68h+var_50], r9b^^^mov     rsi, r12^^^mov     [rsp+68h+var_60], r10^^^mov     [rsp+68h+var_58], r11^^^mov     r8d, eax^^^mov     [rsp+68h+var_3C], eax^^^call    is_dst^^^test    rax, rax^^^mov     rdx, rax^^^movzx   r9d, [rsp+68h+var_50]^^^mov     r10, [rsp+68h+var_60]^^^mov     r11, [rsp+68h+var_58]^^^jz      loc_450916^^^test    r11, r11^^^jz      loc_450A2D^^^mov     rax, [r11+338h]^^^mov     ecx, [rsp+68h+var_3C]^^^xor     r9d, r9d^^^test    ecx, ecx^^^jz      short loc_45085C^^^test    byte ptr [r11+314h], 3^^^setz    r9b^^^lea     rcx, [rax-1]^^^cmp     rcx, 0FFFFFFFFFFFFFFFDh^^^jbe     short loc_4508D2^^^cmp     rdx, 1^^^jbe     short loc_4508C2^^^add     r12, rdx^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      short loc_450891^^^test    r13d, r13d^^^jz      short loc_4508B3^^^jmp     short loc_45088D^^^add     r12, 1^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      short loc_4508BE^^^cmp     al, 3Ah^^^jnz     short loc_450880^^^cmp     r10, r14^^^jnz     short loc_4508A6^^^test    r13d, r13d^^^jz      short loc_4508A6^^^cmp     al, 3Ah^^^nop     dword ptr [rax]^^^jz      loc_450A13^^^movzx   edx, byte ptr [r12]^^^mov     rbx, r10^^^jmp     loc_4507B0^^^add     r12, 1^^^cmp     byte ptr [r12], 0^^^jnz     short loc_4508B3^^^xor     eax, eax^^^jmp     short loc_450891^^^mov     byte ptr [rbx], 24h^^^add     rbx, 1^^^movzx   edx, byte ptr [rbp+1]^^^jmp     loc_4507B0^^^mov     rdi, rbx^^^mov     rsi, rax^^^mov     [rsp+68h+var_48], rdx^^^mov     [rsp+68h+var_50], r9b^^^mov     [rsp+68h+var_60], r10^^^mov     [rsp+68h+var_58], r11^^^call    near ptr qword_400310^^^mov     rdx, [rsp+68h+var_48]^^^mov     rbx, rax^^^movzx   r9d, [rsp+68h+var_50]^^^mov     r10, [rsp+68h+var_60]^^^mov     r11, [rsp+68h+var_58]^^^add     r12, rdx^^^movzx   edx, byte ptr [r12]^^^jmp     loc_4507B0^^^xor     r8d, r8d^^^mov     edx, offset aPlatform^^^mov     ecx, r13d^^^mov     rsi, r12^^^mov     rdi, r15^^^mov     [rsp+68h+var_50], r9b^^^mov     [rsp+68h+var_60], r10^^^mov     [rsp+68h+var_58], r11^^^call    is_dst^^^mov     rdx, rax^^^movzx   r9d, [rsp+68h+var_50]^^^mov     rax, cs:_dl_platform^^^test    rdx, rdx^^^mov     r10, [rsp+68h+var_60]^^^mov     r11, [rsp+68h+var_58]^^^jnz     loc_45085C^^^xor     r8d, r8d^^^mov     edx, offset off_49FB4A^^^mov     ecx, r13d^^^mov     rsi, r12^^^mov     rdi, r15^^^mov     [rsp+68h+var_50], r9b^^^mov     [rsp+68h+var_60], r10^^^mov     [rsp+68h+var_58], r11^^^call    is_dst^^^test    rax, rax^^^mov     rdx, rax^^^movzx   r9d, [rsp+68h+var_50]^^^mov     r10, [rsp+68h+var_60]^^^mov     r11, [rsp+68h+var_58]^^^jz      loc_4508C2^^^mov     eax, offset aX86_64LinuxGnu^^^jmp     loc_45085C^^^mov     rsi, rbx^^^mov     rdi, r10^^^mov     byte ptr [rsp+68h+var_48], dl^^^sub     rsi, r10^^^mov     [rsp+68h+var_60], r10^^^mov     [rsp+68h+var_58], r11^^^call    is_trusted_path_normalize^^^mov     r10, [rsp+68h+var_60]^^^test    al, al^^^mov     r9d, 0^^^movzx   edx, byte ptr [rsp+68h+var_48]^^^mov     r11, [rsp+68h+var_58]^^^cmovnz  r10, rbx^^^cmovz   rbx, r10^^^jmp     loc_450790^^^mov     rsi, rbx^^^mov     rdi, r10^^^mov     [rsp+68h+var_60], r10^^^sub     rsi, r10^^^call    is_trusted_path_normalize^^^mov     r10, [rsp+68h+var_60]^^^test    al, al^^^cmovz   rbx, r10^^^jmp     loc_4507BD^^^movzx   edx, byte ptr [r12+1]^^^test    dl, dl^^^jz      loc_4508A6^^^add     r12, 1^^^mov     rbx, r10^^^jmp     loc_450790^^^mov     [rsp+68h+var_48], rax^^^call    _dl_get_origin^^^mov     ecx, cs:__libc_enable_secure^^^mov     rdx, [rsp+68h+var_48]^^^mov     r10, [rsp+68h+var_60]^^^mov     r11, [rsp+68h+var_58]^^^mov     [rsp+68h+var_3C], ecx^^^jmp     loc_450845^^^
_IO_file_xsgetn$$$push    r14^^^mov     r14, rdx^^^push    r13^^^mov     r13, rsi^^^push    r12^^^push    rbp^^^push    rbx^^^cmp     qword ptr [rdi+38h], 0^^^mov     rbx, rdi^^^jz      loc_429670^^^xor     r12d, r12d^^^test    r14, r14^^^jz      loc_4295C4^^^mov     rsi, [rbx+8]^^^mov     rbp, [rbx+10h]^^^mov     r12, r14^^^sub     rbp, rsi^^^cmp     rbp, r12^^^jnb     loc_4295B2^^^test    rbp, rbp^^^jnz     loc_4295E8^^^mov     eax, [rbx]^^^test    ah, 1^^^jnz     loc_4295D8^^^mov     rax, [rbx+38h]^^^test    rax, rax^^^jz      loc_429628^^^mov     rcx, [rbx+40h]^^^sub     rcx, rax^^^cmp     r12, rcx^^^jb      loc_429608^^^cmp     rcx, 7Fh^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     [rbx+28h], rax^^^mov     rdx, r12^^^mov     [rbx+20h], rax^^^mov     [rbx+30h], rax^^^jbe     short loc_429562^^^mov     rax, r12^^^xor     edx, edx^^^div     rcx^^^mov     rax, r12^^^sub     rax, rdx^^^mov     rdx, rax^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    qword ptr [rax+70h]^^^cmp     rax, 0^^^jle     loc_429660^^^mov     rdx, [rbx+90h]^^^add     r13, rax^^^sub     r12, rax^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_429599^^^add     rax, rdx^^^mov     [rbx+90h], rax^^^test    r12, r12^^^jz      short loc_4295C4^^^mov     rsi, [rbx+8]^^^mov     rbp, [rbx+10h]^^^sub     rbp, rsi^^^cmp     rbp, r12^^^jb      loc_4294FF^^^mov     rdx, r12^^^mov     rdi, r13^^^call    memcpy^^^add     [rbx+8], r12^^^xor     r12d, r12d^^^pop     rbx^^^pop     rbp^^^mov     rax, r14^^^sub     rax, r12^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rdi, rbx^^^call    _IO_switch_to_main_get_area^^^jmp     short loc_429599^^^mov     rdi, r13^^^mov     rdx, rbp^^^sub     r12, rbp^^^call    mempcpy^^^add     [rbx+8], rbp^^^mov     r13, rax^^^jmp     loc_429508^^^mov     rdi, rbx^^^call    __underflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_429599^^^pop     rbx^^^pop     rbp^^^mov     rax, r14^^^sub     rax, r12^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+8], 0^^^mov     rdx, r12^^^mov     qword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+30h], 0^^^jmp     loc_429562^^^jnz     short loc_429691^^^or      dword ptr [rbx], 10h^^^jmp     loc_4295C4^^^mov     rdi, [rdi+48h]^^^test    rdi, rdi^^^jz      short loc_429684^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^jmp     loc_4294DC^^^or      dword ptr [rbx], 20h^^^jmp     loc_4295C4^^^
strchrnul$$$movd    xmm1, esi^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm2, xmm2^^^punpcklbw xmm1, xmm1^^^or      esi, 0FFFFFFFFh^^^movdqa  xmm0, xmmword ptr [rdi]^^^pshufd  xmm1, xmm1, 0^^^sub     rcx, rdi^^^movdqa  xmm3, xmm0^^^lea     rdi, [rdi+10h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^shl     esi, cl^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^or      ecx, edx^^^and     ecx, esi^^^jnz     short loc_40B6D6^^^movdqa  xmm0, xmmword ptr [rdi]^^^lea     rdi, [rdi+10h]^^^movdqa  xmm3, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^or      ecx, edx^^^jz      short loc_40B6B6^^^bsf     edx, ecx^^^lea     rax, [rdi+rdx-10h]^^^retn^^^
sub_41F5AB$$$movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      loc_41F87B^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbp-578h]^^^shl     rax, 4^^^mov     rax, [rdx+rax]^^^mov     [rbp-548h], rax^^^jmp     loc_41EC11^^^
wcschrnul$$$mov     edx, [rdi]^^^mov     rax, rdi^^^test    edx, edx^^^jz      short locret_476C7E^^^cmp     edx, esi^^^jnz     short loc_476C74^^^jmp     short locret_476C80^^^cmp     edx, esi^^^jz      short locret_476C7E^^^add     rax, 4^^^mov     edx, [rax]^^^test    edx, edx^^^jnz     short loc_476C70^^^rep retn^^^rep retn^^^
_IO_file_close$$$mov     edi, [rdi+70h]^^^jmp     __close_nocancel^^^
_IO_new_file_fopen$$$push    rbp             ^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^mov     rdi, rsi^^^sub     rsp, 28h^^^cmp     dword ptr [rbx+70h], 0FFFFFFFFh^^^jnz     short loc_42A5B8^^^movzx   eax, byte ptr [rdx]^^^cmp     al, 72h^^^jz      loc_42A978^^^cmp     al, 77h^^^jz      short loc_42A5D0^^^cmp     al, 61h^^^xchg    ax, ax^^^jz      loc_42A960^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     rsp, [rbp-28h]^^^xor     eax, eax^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     r14d, 4^^^mov     esi, 1^^^mov     ecx, 240h^^^movzx   r8d, byte ptr [rdx+1]^^^mov     eax, [rbx+74h]^^^lea     r9, [rdx+1]^^^cmp     r8b, 65h^^^jz      loc_42ABF8^^^jg      loc_42A900^^^cmp     r8b, 62h^^^jz      loc_42ABED^^^jg      loc_42ABD5^^^test    r8b, r8b^^^mov     r12, rdx^^^jnz     loc_42ACDF^^^nop     dword ptr [rax+rax+00000000h]^^^or      esi, ecx^^^test    al, 2^^^mov     edx, 1B6h^^^mov     eax, 0^^^jnz     loc_42ADDB^^^call    open64^^^mov     r13d, eax^^^test    r13d, r13d^^^js      loc_42A5B8^^^mov     eax, [rbx]^^^mov     [rbx+70h], r13d^^^and     eax, 0FFFFEFF3h^^^or      eax, r14d^^^and     r14d, 1004h^^^cmp     r14d, 1004h^^^mov     [rbx], eax^^^jz      loc_42AB10^^^mov     rdi, rbx^^^call    _IO_link_in^^^lea     rdi, [r12+1]^^^mov     esi, offset aCcs^^^call    sub_400360^^^test    rax, rax^^^mov     r12, rax^^^jz      loc_42ABA0^^^lea     r13, [rax+5]^^^mov     esi, 2Ch^^^mov     r14, rsp^^^mov     rdi, r13^^^call    strchrnul^^^sub     rax, r13^^^mov     rsi, r13^^^lea     rdx, [rax+21h]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^mov     rdx, rax^^^lea     r15, [rsp+50h+var_41]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r15^^^call    mempcpy^^^mov     byte ptr [rax], 0^^^movzx   eax, byte ptr [r15]^^^test    al, al^^^jz      loc_42AD74^^^mov     rdi, cs:off_499B08^^^mov     r8, cs:off_499B18^^^mov     rdx, r15^^^mov     rcx, r15^^^xor     r9d, r9d^^^jmp     short loc_42A720^^^cmp     al, 5Fh^^^jz      short loc_42A72A^^^cmp     al, 2Dh^^^jz      short loc_42A72A^^^cmp     al, 2Eh^^^jz      short loc_42A72A^^^cmp     al, 2Ch^^^xchg    ax, ax^^^jz      short loc_42A72A^^^cmp     al, 3Ah^^^jz      short loc_42A72A^^^cmp     al, 2Fh^^^jz      loc_42A8E0^^^add     rcx, 1^^^movzx   eax, byte ptr [rcx]^^^test    al, al^^^jz      short loc_42A73F^^^nop     dword ptr [rax+00000000h]^^^movsx   rsi, al^^^test    byte ptr [rdi+rsi*2], 8^^^jz      short loc_42A6F0^^^mov     eax, [r8+rsi*4]^^^add     rcx, 1^^^mov     [rdx], al^^^movzx   eax, byte ptr [rcx]^^^add     rdx, 1^^^test    al, al^^^jnz     short loc_42A720^^^cmp     r9d, 1^^^jg      short loc_42A762^^^lea     eax, [r9+1]^^^nop     dword ptr [rax+00000000h]^^^add     eax, 1^^^mov     byte ptr [rdx], 2Fh^^^add     rdx, 1^^^lea     ecx, [rax-1]^^^cmp     ecx, 1^^^jle     short loc_42A750^^^mov     byte ptr [rdx], 0^^^cmp     byte ptr [r15+2], 0^^^jnz     short loc_42A78D^^^mov     rcx, cs:off_499B18^^^xor     eax, eax^^^nop     dword ptr [rax]^^^movsx   rdx, byte ptr [r12+rax+5]^^^mov     edx, [rcx+rdx*4]^^^mov     [r15+rax], dl^^^add     rax, 1^^^test    dl, dl^^^jnz     short loc_42A778^^^lea     rdi, [rbp+var_50]^^^mov     rsi, r15^^^call    __wcsmbs_named_conv^^^test    eax, eax^^^jnz     loc_42AD81^^^cmp     qword ptr [rbp-48h], 1^^^jnz     loc_42ADA9^^^cmp     [rbp+var_38], 1^^^jnz     loc_42ADC2^^^mov     rax, [rbx+0A0h]^^^mov     esi, offset __libio_codecvt^^^mov     ecx, 1Ah^^^mov     rdx, [rax+8]^^^mov     qword ptr [rax+58h], 0^^^mov     [rax], rdx^^^mov     rdx, [rax+18h]^^^mov     [rax+20h], rdx^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+60h], 0^^^mov     rax, [rbx+0A0h]^^^lea     rdx, [rax+68h]^^^mov     [rbx+98h], rdx^^^mov     rdi, rdx^^^rep movsq^^^mov     dword ptr [rax+0CCh], 0^^^mov     dword ptr [rax+0D0h], 1^^^mov     dword ptr [rax+0C8h], 1^^^mov     rdx, [rbp-48h]^^^mov     [rax+0A8h], rdx^^^mov     rdx, [rbp+var_50]^^^mov     [rax+0B0h], rdx^^^mov     rdx, [rbx+0A0h]^^^mov     qword ptr [rax+0E8h], 0^^^mov     dword ptr [rax+114h], 0^^^mov     dword ptr [rax+118h], 1^^^mov     dword ptr [rax+110h], 1^^^add     rdx, 58h^^^mov     [rax+0D8h], rdx^^^mov     rdx, [rbp+var_38]^^^mov     [rax+0F0h], rdx^^^mov     rdx, [rbp+var_40]^^^mov     [rax+0F8h], rdx^^^mov     rdx, [rbx+0A0h]^^^mov     qword ptr [rax+130h], offset __libio_translit^^^add     rdx, 58h^^^mov     [rax+120h], rdx^^^mov     rax, [rbx+0A0h]^^^mov     rax, [rax+140h]^^^mov     [rbx+0D8h], rax^^^mov     dword ptr [rbx+0C0h], 1^^^mov     rsp, r14^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^add     r9d, 1^^^cmp     r9d, 3^^^jz      loc_42A762^^^mov     byte ptr [rdx], 2Fh^^^add     rdx, 1^^^jmp     loc_42A70E^^^cmp     r8b, 6Dh^^^jz      loc_42AC14^^^cmp     r8b, 78h^^^jz      loc_42AC09^^^mov     r12, rdx^^^movzx   r8d, byte ptr [rdx+2]^^^lea     r9, [rdx+2]^^^cmp     r8b, 65h^^^jz      loc_42AC50^^^jg      short loc_42A990^^^cmp     r8b, 62h^^^jz      loc_42AC37^^^jg      loc_42AC22^^^test    r8b, r8b^^^nop^^^jz      loc_42A620^^^cmp     r8b, 2Bh^^^jnz     short loc_42A9B0^^^and     r14d, 1000h^^^mov     r12, r9^^^mov     esi, 2^^^jmp     short loc_42A9B0^^^mov     r14d, 1004h^^^mov     esi, 1^^^mov     ecx, 440h^^^jmp     loc_42A5E0^^^mov     r14d, 8^^^xor     esi, esi^^^xor     ecx, ecx^^^jmp     loc_42A5E0^^^cmp     r8b, 6Dh^^^jz      loc_42AC3F^^^cmp     r8b, 78h^^^jnz     short loc_42A9B0^^^or      cl, 80h^^^mov     r12, r9^^^nop     word ptr [rax+rax+00000000h]^^^movzx   r8d, byte ptr [rdx+3]^^^lea     r9, [rdx+3]^^^cmp     r8b, 65h^^^jz      loc_42AC68^^^jg      short loc_42AA00^^^cmp     r8b, 62h^^^jz      loc_42AC8E^^^nop^^^jg      loc_42AC79^^^test    r8b, r8b^^^jz      loc_42A620^^^cmp     r8b, 2Bh^^^jnz     short loc_42AA20^^^and     r14d, 1000h^^^mov     r12, r9^^^mov     esi, 2^^^jmp     short loc_42AA20^^^cmp     r8b, 6Dh^^^jz      loc_42AC96^^^cmp     r8b, 78h^^^jnz     short loc_42AA20^^^or      cl, 80h^^^mov     r12, r9^^^nop     word ptr [rax+rax+00000000h]^^^movzx   r8d, byte ptr [rdx+4]^^^lea     r9, [rdx+4]^^^cmp     r8b, 65h^^^jz      loc_42AD00^^^jg      loc_42AB58^^^cmp     r8b, 62h^^^jz      loc_42AD1C^^^jg      loc_42ACA1^^^test    r8b, r8b^^^nop     dword ptr [rax+00h]^^^jz      loc_42A620^^^cmp     r8b, 2Bh^^^jnz     short loc_42AA70^^^and     r14d, 1000h^^^mov     r12, r9^^^mov     esi, 2^^^nop     dword ptr [rax+rax+00h]^^^movzx   r8d, byte ptr [rdx+5]^^^lea     r9, [rdx+5]^^^cmp     r8b, 65h^^^jz      loc_42AD30^^^jg      loc_42AB80^^^cmp     r8b, 62h^^^jz      loc_42AD41^^^jg      loc_42ACB6^^^test    r8b, r8b^^^nop     dword ptr [rax+00h]^^^jz      loc_42A620^^^cmp     r8b, 2Bh^^^jnz     short loc_42AAC0^^^and     r14d, 1000h^^^mov     r12, r9^^^mov     esi, 2^^^nop     dword ptr [rax+rax+00h]^^^lea     r8, [rdx+6]^^^movzx   edx, byte ptr [rdx+6]^^^cmp     dl, 65h^^^jz      loc_42AD50^^^jg      loc_42ABB8^^^cmp     dl, 62h^^^jz      loc_42AD6C^^^jg      loc_42ACCB^^^test    dl, dl^^^jz      loc_42A620^^^cmp     dl, 2Bh^^^jnz     loc_42A620^^^and     r14d, 1000h^^^mov     r12, r8^^^mov     esi, 2^^^jmp     loc_42A620^^^mov     rax, [rbx+0D8h]^^^xor     esi, esi^^^mov     ecx, 3^^^mov     edx, 2^^^mov     rdi, rbx^^^call    qword ptr [rax+48h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     loc_42A669^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 1Dh^^^jz      loc_42A669^^^mov     edi, r13d^^^call    __close_nocancel^^^xor     eax, eax^^^jmp     loc_42A5A6^^^cmp     r8b, 6Dh^^^jz      loc_42AD11^^^cmp     r8b, 78h^^^jnz     loc_42AA70^^^or      cl, 80h^^^mov     r12, r9^^^jmp     loc_42AA70^^^cmp     r8b, 6Dh^^^jz      loc_42AD24^^^cmp     r8b, 78h^^^jnz     loc_42AAC0^^^or      cl, 80h^^^mov     r12, r9^^^jmp     loc_42AAC0^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     dl, 6Dh^^^jz      loc_42AD61^^^cmp     dl, 78h^^^jnz     loc_42A620^^^or      cl, 80h^^^mov     r12, r8^^^jmp     loc_42A620^^^cmp     r8b, 63h^^^jnz     loc_42A914^^^or      eax, 2^^^mov     r12, rdx^^^mov     [rbx+74h], eax^^^jmp     loc_42A917^^^mov     r12, r9^^^jmp     loc_42A917^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42A914^^^or      cl, 80h^^^mov     r12, r9^^^jmp     loc_42A917^^^or      eax, 1^^^mov     r12, rdx^^^mov     [rbx+74h], eax^^^jmp     loc_42A917^^^cmp     r8b, 63h^^^jnz     loc_42A9B0^^^or      eax, 2^^^mov     [rbx+74h], eax^^^jmp     loc_42A9B0^^^mov     r12, r9^^^jmp     loc_42A9B0^^^or      eax, 1^^^mov     [rbx+74h], eax^^^jmp     loc_42A9B0^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42A9B0^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42AA20^^^cmp     r8b, 63h^^^jnz     loc_42AA20^^^or      eax, 2^^^mov     [rbx+74h], eax^^^jmp     loc_42AA20^^^mov     r12, r9^^^jmp     loc_42AA20^^^or      eax, 1^^^mov     [rbx+74h], eax^^^jmp     loc_42AA20^^^cmp     r8b, 63h^^^jnz     loc_42AA70^^^or      eax, 2^^^mov     [rbx+74h], eax^^^jmp     loc_42AA70^^^cmp     r8b, 63h^^^jnz     loc_42AAC0^^^or      eax, 2^^^mov     [rbx+74h], eax^^^jmp     loc_42AAC0^^^cmp     dl, 63h^^^jnz     loc_42A620^^^or      eax, 2^^^mov     [rbx+74h], eax^^^jmp     loc_42A620^^^cmp     r8b, 2Bh^^^jnz     loc_42A914^^^and     r14d, 1000h^^^mov     r12, r9^^^mov     esi, 2^^^jmp     loc_42A917^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42AA70^^^or      eax, 1^^^mov     [rbx+74h], eax^^^jmp     loc_42AA70^^^mov     r12, r9^^^jmp     loc_42AA70^^^or      eax, 1^^^mov     [rbx+74h], eax^^^jmp     loc_42AAC0^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42AAC0^^^mov     r12, r9^^^jmp     loc_42AAC0^^^or      eax, 40h^^^or      ecx, 80000h^^^mov     [rbx+74h], eax^^^jmp     loc_42A620^^^or      eax, 1^^^mov     [rbx+74h], eax^^^jmp     loc_42A620^^^mov     r12, r8^^^jmp     loc_42A620^^^mov     rdx, r15^^^mov     eax, 1^^^jmp     loc_42A750^^^mov     rdi, rbx^^^call    _IO_new_file_close_it^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^mov     rsp, r14^^^jmp     loc_42A5A6^^^mov     rdi, rax^^^call    _Unwind_Resume^^^mov     ecx, offset __PRETTY_FUNCTION___12660^^^mov     edx, 17Fh^^^mov     esi, 49C3C1h^^^mov     edi, offset aFcts_towc_nste^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12660^^^mov     edx, 180h^^^mov     esi, 49C3C1h^^^mov     edi, offset aFcts_tomb_nste^^^call    __assert_fail^^^call    __open_nocancel^^^mov     r13d, eax^^^jmp     loc_42A63C^^^
__mpn_cmp$$$xor     eax, eax^^^sub     rdx, 1^^^jns     short loc_462D4A^^^jmp     short locret_462D62^^^sub     rdx, 1^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_462D68^^^mov     rax, [rdi+rdx*8]^^^mov     rcx, [rsi+rdx*8]^^^cmp     rax, rcx^^^jz      short loc_462D40^^^cmp     rcx, rax^^^sbb     eax, eax^^^and     eax, 2^^^sub     eax, 1^^^rep retn^^^xor     eax, eax^^^retn^^^
free$$$mov     rax, cs:__free_hook^^^test    rax, rax^^^jnz     loc_407D2A^^^test    rdi, rdi^^^jz      locret_407D28^^^mov     rax, [rdi-8]^^^lea     rsi, [rdi-10h]^^^test    al, 2^^^jnz     short loc_407CA8^^^test    al, 4^^^mov     edi, offset main_arena^^^jz      short loc_407C9A^^^mov     rax, rsi^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdi, [rax]^^^xor     edx, edx^^^jmp     _int_free^^^mov     r10d, cs:dword_6C29B4^^^test    r10d, r10d^^^jnz     short loc_407CE0^^^cmp     rax, cs:qword_6C2990^^^jbe     short loc_407CE0^^^cmp     rax, 2000000h^^^ja      short loc_407CE0^^^mov     rcx, rax^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^lea     rax, [rcx+rcx]^^^mov     cs:qword_6C2990, rcx^^^mov     cs:mp_, rax^^^jmp     short loc_407CE7^^^mov     rcx, rax^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^mov     rdx, [rdi-10h]^^^mov     rax, rsi^^^sub     rax, rdx^^^lea     rsi, [rcx+rdx]^^^mov     rdx, cs:_dl_pagesize^^^mov     rcx, rsi^^^or      rcx, rax^^^sub     rdx, 1^^^test    rcx, rdx^^^jnz     short loc_407D30^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rsi^^^mov     rdi, rax^^^jmp     munmap^^^rep retn^^^mov     rsi, [rsp+0]^^^jmp     rax^^^mov     rdx, rdi^^^mov     edi, cs:check_action^^^mov     esi, offset aMunmap_chunkIn^^^jmp     malloc_printerr^^^
_L_lock_37_0$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_425416^^^
malloc_info$$$push    rbx^^^mov     eax, 16h^^^sub     rsp, 70h^^^test    edi, edi^^^mov     [rsp+78h+var_18], rsi^^^jz      short loc_409480^^^add     rsp, 70h^^^pop     rbx^^^retn^^^mov     edi, cs:__libc_malloc_initialized^^^pxor    xmm0, xmm0^^^mov     [rsp+78h+var_10], 0^^^test    edi, edi^^^movdqa  [rsp+78h+var_58], xmm0^^^movdqa  [rsp+78h+var_48], xmm0^^^movdqa  [rsp+78h+var_38], xmm0^^^movdqa  [rsp+78h+var_28], xmm0^^^js      loc_409540^^^mov     edi, offset aMallocVersion1^^^mov     ebx, offset main_arena^^^call    fputs^^^nop     dword ptr [rax+00000000h]^^^lea     r10, [rsp+78h+var_58]^^^mov     rdi, rbx^^^call    mi_arena_12897^^^mov     rbx, [rbx+868h]^^^cmp     rbx, offset main_arena^^^jnz     short loc_4094C8^^^mov     rax, qword ptr [rsp+78h+var_58]^^^mov     r9, qword ptr [rsp+78h+var_38]^^^mov     esi, offset aTotalTypeFastC^^^mov     r8, qword ptr [rsp+78h+var_38+8]^^^mov     rcx, qword ptr [rsp+78h+var_28]^^^mov     rdx, qword ptr [rsp+78h+var_28+8]^^^mov     rdi, [rsp+78h+var_18]^^^mov     [rsp+78h+var_60], rax^^^mov     rax, qword ptr [rsp+78h+var_58+8]^^^mov     [rsp+78h+var_68], rax^^^mov     rax, qword ptr [rsp+78h+var_48]^^^mov     [rsp+78h+var_70], rax^^^mov     rax, qword ptr [rsp+78h+var_48+8]^^^mov     [rsp+78h+var_78], rax^^^xor     eax, eax^^^call    fprintf^^^add     rsp, 70h^^^xor     eax, eax^^^pop     rbx^^^retn^^^call    ptmalloc_init_part_8^^^mov     rsi, [rsp+78h+var_18]^^^jmp     loc_4094B2^^^
__setfpucw$$$fnstcw  [rsp+var_2]^^^movzx   eax, [rsp+var_2]^^^and     di, 0F3Fh^^^and     ax, 0F0C0h^^^or      edi, eax^^^mov     [rsp+var_2], di^^^fldcw   [rsp+var_2]^^^retn^^^
_L_lock_23$$$lea     rdi, lock_2^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42298C^^^
_L_unlock_2788$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_403D14^^^
_dl_tlsdesc_resolve_rela_fixup$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 48h^^^mov     rax, [rsi+290h]^^^mov     r12, [rsi]^^^mov     rbp, [rdi+8]^^^add     r12, [rax+8]^^^mov     rax, [rdi]^^^cmp     r12, rax^^^jz      short loc_47AC88^^^mov     rbx, [rsp+48h+var_18]^^^mov     rbp, [rsp+48h+var_10]^^^mov     r12, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_47ACA6^^^mov     edi, offset _dl_load_lock^^^mov     [rsp+48h+var_30], rsi^^^call    near ptr 0^^^mov     rsi, [rsp+48h+var_30]^^^mov     rax, [rbx]^^^cmp     r12, rax^^^jz      short loc_47ACD0^^^xchg    ax, ax^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_47AC70^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^jmp     short loc_47AC70^^^mov     rax, [rsi+68h]^^^mov     qword ptr [rbx], offset _dl_tlsdesc_resolve_hold^^^mov     r9d, [rbp+0Ch]^^^mov     rdi, [rax+8]^^^mov     rax, [rsi+70h]^^^lea     rdx, [r9+r9*2]^^^mov     r10, [rax+8]^^^mov     rax, rsi^^^lea     rdx, [r10+rdx*8]^^^mov     [rsp+48h+var_20], rdx^^^movzx   ecx, byte ptr [rdx+4]^^^shr     cl, 4^^^test    cl, cl^^^jz      short loc_47AD77^^^movzx   ecx, byte ptr [rdx+5]^^^and     ecx, 3^^^jnz     short loc_47AD77^^^mov     rax, [rsi+1C8h]^^^xor     r8d, r8d^^^test    rax, rax^^^jz      short loc_47AD46^^^mov     rax, [rax+8]^^^movzx   eax, word ptr [rax+r9*2]^^^and     eax, 7FFFh^^^lea     r8, [rax+rax*2]^^^mov     rax, [rsi+2E0h]^^^lea     r8, [rax+r8*8]^^^mov     r9d, [r8+8]^^^test    r9d, r9d^^^cmovz   r8, rcx^^^mov     eax, [rdx]^^^mov     rcx, [rsi+380h]^^^lea     rdx, [rsp+48h+var_20]^^^mov     r9d, 1^^^mov     [rsp+48h+var_40], 0^^^mov     [rsp+48h+var_48], 1^^^add     rdi, rax^^^call    _dl_lookup_symbol_x^^^mov     rdx, [rsp+48h+var_20]^^^test    rdx, rdx^^^jz      short loc_47ADA8^^^mov     rcx, [rax+440h]^^^cmp     rcx, 1^^^jbe     short loc_47ADBC^^^mov     rax, [rbp+10h]^^^add     rax, [rdx+8]^^^sub     rax, rcx^^^mov     [rbx+8], rax^^^mov     qword ptr [rbx], offset _dl_tlsdesc_return^^^jmp     loc_47ACB0^^^mov     rax, [rbp+10h]^^^mov     [rbx+8], rax^^^mov     qword ptr [rbx], offset _dl_tlsdesc_undefweak^^^jmp     loc_47ACB0^^^mov     rdi, rax^^^mov     [rsp+48h+var_30], rax^^^call    _dl_allocate_static_tls^^^mov     rax, [rsp+48h+var_30]^^^mov     rdx, [rsp+48h+var_20]^^^mov     rcx, [rax+440h]^^^jmp     short loc_47AD89^^^
free_key_mem$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 30h^^^mov     rsi, [rdi+18h]^^^test    rsi, rsi^^^jz      short loc_48280F^^^mov     edi, offset _dl_out_of_memory^^^mov     ecx, 0Eh^^^repe cmpsb^^^jnz     short loc_482838^^^mov     rdi, rbx^^^call    free^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48282E^^^mov     edi, cs:key^^^xor     esi, esi^^^call    near ptr 0^^^add     rsp, 30h^^^pop     rbx^^^retn^^^lea     rdx, [rsp+38h+var_18]^^^xor     ecx, ecx^^^mov     rsi, rsp^^^mov     edi, offset check_free^^^mov     [rsp+38h+var_18], 0^^^call    _dl_addr^^^test    eax, eax^^^jz      short loc_48280F^^^mov     rax, [rsp+38h+var_18]^^^test    rax, rax^^^jz      short loc_48280F^^^cmp     qword ptr [rax+30h], 0^^^jnz     short loc_48280F^^^mov     rdi, [rbx+18h]^^^call    free^^^jmp     short loc_48280F^^^
_L_lock_12872$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4088BA^^^
__malloc_assert$$$sub     rsp, 28h^^^test    rcx, rcx^^^mov     r9d, edx^^^mov     r8, rsi^^^mov     edx, offset asc_496B02^^^jz      short loc_402AC0^^^mov     rax, cs:program_invocation_short_name^^^mov     r10d, offset unk_49A0C9^^^mov     esi, offset asc_496B02^^^cmp     byte ptr [rax], 0^^^mov     [rsp+28h+var_18], rdi^^^mov     [rsp+28h+var_20], rdx^^^mov     [rsp+28h+var_28], rcx^^^mov     rdx, rax^^^cmovz   rsi, r10^^^xor     edi, edi^^^xor     eax, eax^^^mov     rcx, rsi^^^mov     esi, offset aSSSUSSassertio^^^call    __fxprintf^^^mov     rdi, cs:stderr^^^call    fflush^^^call    abort^^^mov     edx, offset unk_49A0C9^^^mov     rcx, rdx^^^jmp     short loc_402A74^^^
_IO_list_resetlock$$$mov     cs:list_all_lock, 0^^^mov     cs:dword_6C5624, 0^^^mov     cs:qword_6C5628, 0^^^retn^^^
_L_unlock_869$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_418D6D^^^
__current_locale_name$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^movsxd  rdi, edi^^^mov     rax, fs:[rax]^^^mov     rax, [rax+rdi*8+80h]^^^retn^^^
_L_lock_1109$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_41AACB^^^
_i18n_number_rewrite$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbx^^^mov     rbx, rdi^^^mov     edi, offset aTo_outpunct^^^sub     rsp, 48h^^^call    wctrans^^^mov     edi, 2Eh^^^mov     r13, rax^^^mov     rsi, rax^^^call    towctrans^^^mov     rsi, r13^^^mov     edi, 2Ch^^^mov     [rbp+var_64], eax^^^call    towctrans^^^test    r13, r13^^^mov     r14d, eax^^^jz      short loc_4005F9^^^mov     esi, [rbp+var_64]^^^lea     rdx, [rbp+var_38]^^^lea     rdi, [rbp+var_5A]^^^mov     [rbp+var_38], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4005C9^^^mov     [rbp+var_5A], 2Eh^^^jmp     short loc_4005CE^^^mov     byte ptr [rbp+rax+var_5A], 0^^^lea     rdx, [rbp+var_38]^^^lea     rdi, [rbp+var_49]^^^mov     esi, r14d^^^mov     [rbp+var_38], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4005F4^^^mov     [rbp+var_49], 2Ch^^^jmp     short loc_4005F9^^^mov     byte ptr [rbp+rax+var_49], 0^^^mov     rdx, r12^^^mov     r14d, 1^^^sub     rdx, rbx^^^cmp     rdx, 1000h^^^jbe     short loc_400627^^^mov     rdi, rdx^^^mov     [rbp+var_70], rdx^^^xor     r14d, r14d^^^call    __libc_alloca_cutoff^^^mov     rdx, [rbp+var_70]^^^test    eax, eax^^^setnz   r14b^^^test    r14b, r14b^^^jz      short loc_400642^^^lea     rax, [rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+70h+var_64+3]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_40065E^^^mov     rdi, rdx^^^mov     [rbp+var_70], rdx^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     rdx, [rbp+var_70]^^^jz      loc_40072A^^^mov     rsi, rbx^^^mov     rdi, r12^^^mov     rbx, r15^^^call    mempcpy^^^lea     r9, [rbp+var_49]^^^mov     rsi, rax^^^lea     r10, [rbp+var_5A]^^^or      r8, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^jmp     loc_400711^^^mov     dl, [rsi]^^^lea     ecx, [rdx-30h]^^^cmp     cl, 9^^^ja      short loc_4006CD^^^mov     rcx, 0FFFFFFFFFFFFFFA8h^^^movsx   edx, dl^^^sub     edx, 7^^^movsxd  rdx, edx^^^mov     rcx, fs:[rcx]^^^mov     rcx, [rcx]^^^mov     rdx, [rcx+rdx*8+40h]^^^mov     rcx, r8^^^mov     rdi, rdx^^^repne scasb^^^not     rcx^^^dec     rcx^^^sub     rbx, rcx^^^jmp     short loc_4006C6^^^dec     rcx^^^mov     dil, [rdx+rcx]^^^mov     [rbx+rcx], dil^^^test    rcx, rcx^^^jnz     short loc_4006BB^^^jmp     short loc_400711^^^test    r13, r13^^^jz      short loc_4006DC^^^cmp     dl, 2Ch^^^jz      short loc_4006E4^^^cmp     dl, 2Eh^^^jz      short loc_4006E4^^^mov     [rbx-1], dl^^^dec     rbx^^^jmp     short loc_400711^^^cmp     dl, 2Eh^^^mov     rdx, r10^^^mov     rcx, r8^^^cmovnz  rdx, r9^^^mov     rdi, rdx^^^repne scasb^^^not     rcx^^^dec     rcx^^^sub     rbx, rcx^^^jmp     short loc_40070C^^^dec     rcx^^^mov     dil, [rdx+rcx]^^^mov     [rbx+rcx], dil^^^test    rcx, rcx^^^jnz     short loc_400701^^^dec     rsi^^^cmp     rsi, r12^^^jnb     loc_400682^^^test    r14b, r14b^^^jnz     short loc_40072A^^^mov     rdi, r12^^^call    free^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
_L_unlock_8502$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40648B^^^
_IO_least_wmarker$$$mov     rdx, [rdi+0A0h]^^^mov     rax, rsi^^^sub     rax, [rdx+10h]^^^mov     rdx, [rdi+60h]^^^sar     rax, 2^^^test    rdx, rdx^^^jz      short locret_426BB3^^^nop     dword ptr [rax+rax+00h]^^^movsxd  rcx, dword ptr [rdx+10h]^^^mov     rdx, [rdx]^^^cmp     rax, rcx^^^cmovg   rax, rcx^^^test    rdx, rdx^^^jnz     short loc_426BA0^^^rep retn^^^
remove_slotinfo$$$push    rbp^^^mov     rax, rdi^^^mov     rbp, rsi^^^sub     rax, rdx^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 8^^^mov     rdx, [rsi]^^^cmp     rax, rdx^^^jb      short loc_48C5D8^^^mov     rsi, [rsi+8]^^^test    rsi, rsi^^^jz      loc_48C640^^^add     rdx, rbx^^^movzx   ecx, cl^^^call    remove_slotinfo^^^mov     edx, eax^^^mov     eax, 1^^^test    dl, dl^^^jnz     short loc_48C5CC^^^mov     rdi, rbx^^^add     rdi, [rbp+0]^^^mov     rax, cs:_dl_tls_static_nelem^^^xor     ecx, ecx^^^add     rax, 1^^^test    rbx, rbx^^^cmovz   rcx, rax^^^mov     rax, rdi^^^sub     rax, rbx^^^shl     rax, 4^^^lea     rax, [rbp+rax+8]^^^jmp     short loc_48C5BF^^^sub     rax, 10h^^^sub     rdi, 1^^^cmp     qword ptr [rax+10h], 0^^^jnz     short loc_48C628^^^mov     rdx, rdi^^^sub     rdx, rbx^^^cmp     rcx, rdx^^^jb      short loc_48C5B0^^^xor     eax, eax^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^add     rax, 1^^^shl     rax, 4^^^add     rax, rsi^^^mov     rdx, [rax+8]^^^test    rdx, rdx^^^jz      short loc_48C60B^^^cmp     [rdx+448h], rdi^^^jnz     short loc_48C661^^^mov     rdx, cs:_dl_tls_generation^^^mov     qword ptr [rax+8], 0^^^add     rdx, 1^^^mov     [rax], rdx^^^cmp     rdi, cs:_dl_tls_max_dtv_idx^^^mov     eax, 1^^^jz      loc_48C584^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^mov     cs:_dl_tls_max_dtv_idx, rdi^^^add     rsp, 8^^^mov     eax, 1^^^pop     rbx^^^pop     rbp^^^retn^^^test    cl, cl^^^jz      loc_48C584^^^mov     ecx, offset __PRETTY_FUNCTION___11932^^^mov     edx, 39h^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aShould_be_ther^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11932^^^mov     edx, 4Eh^^^mov     esi, offset aDlClose_c^^^mov     edi, offset aOld_mapL_tls_m^^^call    __assert_fail^^^
profil_counter$$$mov     rax, [rdx+0A8h]^^^sub     rax, cs:pc_offset^^^mov     ecx, cs:pc_scale^^^mov     rdx, rax^^^shr     rdx, 3Fh^^^add     rax, rdx^^^sar     rax, 1^^^mov     rdx, rax^^^and     eax, 0FFFFh^^^shr     rdx, 10h^^^imul    rax, rcx^^^imul    rdx, rcx^^^shr     rax, 10h^^^add     rax, rdx^^^cmp     rax, cs:nsamples^^^jnb     short locret_48B3B4^^^mov     rdx, cs:samples^^^lea     rax, [rdx+rax*2]^^^add     word ptr [rax], 1^^^retn^^^
sub_41EBE9$$$mov     edi, [rbp-52Ch]^^^lea     rsi, [rbp-520h]^^^mov     edx, 3E8h^^^call    strerror_r^^^mov     dword ptr [rbp-5B0h], 0^^^mov     [rbp-548h], rax^^^
__gconv_read_conf$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 58h^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_74], eax^^^call    __gconv_load_cache^^^test    eax, eax^^^jz      loc_459C1E^^^mov     rax, cs:__gconv_path_elem^^^test    rax, rax^^^jz      loc_459C42^^^mov     rdx, [rax]^^^test    rdx, rdx^^^mov     [rbp+var_58], rdx^^^jz      loc_459746^^^mov     r12, cs:off_499B08^^^mov     r14, cs:off_499B18^^^mov     [rbp+var_68], 10h^^^mov     rax, [rax+8]^^^mov     rsi, [rbp+var_58]^^^mov     r13, 6F6D2D766E6F6367h^^^mov     [rbp+var_60], rax^^^add     rax, 2Ch^^^mov     rdx, [rbp+var_60]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rbx, [rsp+80h+var_74+3]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    mempcpy^^^mov     esi, offset aRce^^^mov     [rax], r13^^^mov     dword ptr [rax+8], 656C7564h^^^mov     word ptr [rax+0Ch], 73h^^^mov     rdi, rbx^^^call    fopen64^^^test    rax, rax^^^mov     r13, rax^^^mov     [rbp+var_40], 0^^^mov     [rbp+var_38], 0^^^jz      loc_459726^^^mov     eax, [rax]^^^or      ah, 80h^^^test    al, 10h^^^mov     [r13+0], eax^^^jnz     loc_459715^^^nop     dword ptr [rax+00000000h]^^^lea     rsi, [rbp+var_38]^^^lea     rdi, [rbp+var_40]^^^mov     rcx, r13^^^mov     edx, 0Ah^^^call    getdelim^^^test    rax, rax^^^mov     rbx, rax^^^js      loc_459715^^^mov     r15, [rbp+var_40]^^^mov     esi, 23h^^^mov     rdi, r15^^^call    sub_4003C0^^^test    rax, rax^^^jz      loc_459BD0^^^mov     byte ptr [rax], 0^^^jmp     short loc_4596B4^^^add     r15, 1^^^movzx   edx, byte ptr [r15]^^^movsx   rcx, dl^^^test    byte ptr [r12+rcx*2+1], 20h^^^jnz     short loc_4596B0^^^cmp     rax, r15^^^jz      short loc_459709^^^test    dl, dl^^^jz      short loc_459709^^^mov     rbx, r15^^^jmp     short loc_4596E4^^^movsx   rax, cl^^^test    byte ptr [r12+rax*2+1], 20h^^^jnz     short loc_4596EF^^^add     rbx, 1^^^movzx   ecx, byte ptr [rbx]^^^test    cl, cl^^^jnz     short loc_4596D8^^^mov     rax, rbx^^^sub     rax, r15^^^cmp     rax, 5^^^jz      loc_4599E0^^^cmp     rax, 6^^^jz      loc_459B88^^^mov     eax, [r13+0]^^^test    al, 10h^^^jz      loc_459668^^^mov     rdi, [rbp+var_40]^^^call    free^^^mov     rdi, r13^^^call    fclose^^^mov     rax, [rbp+var_68]^^^add     rax, cs:__gconv_path_elem^^^add     [rbp+var_68], 10h^^^mov     rdx, [rax]^^^test    rdx, rdx^^^mov     [rbp+var_58], rdx^^^jnz     loc_4595E1^^^mov     rax, cs:builtin_modules^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459C97^^^mov     rax, cs:off_6C32F8^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CA8^^^mov     rax, cs:off_6C3330^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459C53^^^mov     rax, cs:off_6C3368^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459C64^^^mov     rax, cs:off_6C33A0^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459C75^^^mov     rax, cs:off_6C33D8^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459C86^^^mov     rax, cs:off_6C3410^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CDB^^^mov     rax, cs:off_6C3448^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CEC^^^mov     rax, cs:off_6C3480^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CFD^^^mov     rax, cs:off_6C34B8^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459D0E^^^mov     rax, cs:off_6C34F0^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CB9^^^mov     rax, cs:off_6C3528^^^lea     rdi, [rbp+var_50]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rbp+var_50], rax^^^call    tfind^^^test    rax, rax^^^jz      loc_459CCA^^^mov     ebx, offset builtin_aliases^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400350^^^lea     r15, [rax+1]^^^xor     esi, esi^^^mov     rdi, r15^^^call    sub_400350^^^mov     r13, cs:__gconv_modules_db^^^lea     r14, [rax+1]^^^mov     r12, rax^^^test    r13, r13^^^jz      short loc_45996A^^^mov     rsi, [r13+0]^^^mov     rdi, rbx^^^call    sub_4003A0^^^cmp     eax, 0^^^jz      short loc_4599C7^^^jl      loc_459BF0^^^mov     r13, [r13+30h]^^^test    r13, r13^^^jnz     short loc_45994A^^^mov     rdx, r14^^^sub     rdx, rbx^^^lea     rdi, [rdx+10h]^^^mov     [rbp+var_80], rdx^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rdx, [rbp+var_80]^^^jz      short loc_4599C7^^^lea     rdi, [r13+10h]^^^mov     rsi, rbx^^^sub     r15, rbx^^^call    memcpy^^^mov     [r13+0], rax^^^add     rax, r15^^^mov     edx, offset __gconv_alias_compare^^^mov     [r13+8], rax^^^mov     esi, offset __gconv_alias_db^^^mov     rdi, r13^^^call    tsearch^^^test    rax, rax^^^jz      short loc_4599BF^^^cmp     r13, [rax]^^^jz      short loc_4599C7^^^mov     rdi, r13^^^call    free^^^cmp     byte ptr [r12+1], 0^^^jz      loc_459C02^^^mov     rbx, r14^^^jmp     loc_45991F^^^mov     edx, 5^^^mov     esi, offset aAlias^^^mov     rdi, r15^^^mov     byte ptr [rbp+var_80], cl^^^call    sub_400370^^^test    eax, eax^^^movzx   ecx, byte ptr [rbp+var_80]^^^jnz     loc_459709^^^movsx   rcx, cl^^^test    byte ptr [r12+rcx*2+1], 20h^^^jz      short loc_459A20^^^nop     dword ptr [rax]^^^add     rbx, 1^^^movsx   rax, byte ptr [rbx]^^^test    byte ptr [r12+rax*2+1], 20h^^^jnz     short loc_459A10^^^movzx   edx, byte ptr [rbx]^^^test    dl, dl^^^jz      loc_459709^^^movsx   rdx, dl^^^test    byte ptr [r12+rdx*2+1], 20h^^^jnz     loc_459C3A^^^mov     rcx, cs:off_499B18^^^mov     rax, rbx^^^nop     dword ptr [rax]^^^mov     edx, [rcx+rdx*4]^^^mov     [rax], dl^^^movzx   edx, byte ptr [rax+1]^^^test    dl, dl^^^jz      loc_459709^^^movsx   rdx, dl^^^add     rax, 1^^^test    byte ptr [r12+rdx*2+1], 20h^^^jz      short loc_459A48^^^movzx   ecx, byte ptr [rax+1]^^^mov     byte ptr [rax], 0^^^lea     rdx, [rax+1]^^^mov     [rbp+var_70], rdx^^^movsx   rax, cl^^^test    byte ptr [r12+rax*2+1], 20h^^^jz      short loc_459A9B^^^nop     dword ptr [rax+00h]^^^add     rdx, 1^^^movzx   ecx, byte ptr [rdx]^^^movsx   rax, cl^^^test    byte ptr [r12+rax*2+1], 20h^^^jnz     short loc_459A88^^^test    cl, cl^^^jz      loc_459709^^^mov     rcx, rdx^^^mov     rdx, [rbp+var_70]^^^jmp     short loc_459AC0^^^movsx   rax, al^^^add     rcx, 1^^^test    byte ptr [r12+rax*2+1], 20h^^^jnz     short loc_459AD2^^^mov     eax, [r14+rax*4]^^^mov     [rdx], al^^^movzx   eax, byte ptr [rcx+1]^^^add     rdx, 1^^^test    al, al^^^jnz     short loc_459AB0^^^cmp     [rbp+var_70], rdx^^^jz      loc_459709^^^mov     byte ptr [rdx], 0^^^mov     r15, cs:__gconv_modules_db^^^test    r15, r15^^^jz      short loc_459B16^^^mov     rsi, [r15]^^^mov     rdi, rbx^^^mov     [rbp+var_80], rdx^^^call    sub_4003A0^^^cmp     eax, 0^^^mov     rdx, [rbp+var_80]^^^jz      loc_459709^^^jl      loc_459BF9^^^mov     r15, [r15+30h]^^^test    r15, r15^^^jnz     short loc_459AEB^^^add     rdx, 1^^^sub     rdx, rbx^^^lea     rdi, [rdx+10h]^^^mov     [rbp+var_80], rdx^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp+var_80]^^^jz      loc_459709^^^lea     rdi, [r15+10h]^^^mov     rsi, rbx^^^call    memcpy^^^mov     rdx, [rbp+var_70]^^^mov     [r15], rax^^^mov     esi, offset __gconv_alias_db^^^mov     rdi, r15^^^sub     rdx, rbx^^^add     rax, rdx^^^mov     edx, offset __gconv_alias_compare^^^mov     [r15+8], rax^^^call    tsearch^^^test    rax, rax^^^jz      short loc_459B77^^^cmp     r15, [rax]^^^jz      loc_459709^^^mov     rdi, r15^^^call    free^^^nop^^^jmp     loc_459709^^^mov     edx, 6^^^mov     esi, offset aModule^^^mov     rdi, r15^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_459709^^^mov     ecx, cs:modcounter_12812^^^mov     rdx, [rbp+var_60]^^^mov     rdi, rbx^^^mov     rsi, [rbp+var_58]^^^lea     eax, [rcx+1]^^^mov     cs:modcounter_12812, eax^^^call    add_module_isra_1^^^jmp     loc_459709^^^lea     rdx, [r15+rbx-1]^^^cmp     byte ptr [rdx], 0Ah^^^jnz     loc_4596B4^^^mov     byte ptr [rdx], 0^^^jmp     loc_4596B4^^^mov     r13, [r13+20h]^^^jmp     loc_459945^^^mov     r15, [r15+20h]^^^jmp     loc_459AE6^^^mov     edx, [rbp+var_74]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     fs:[rax], edx^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     eax, [rbp+var_74]^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     fs:[rdx], eax^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rax, rbx^^^jmp     loc_459A69^^^call    __gconv_get_path^^^mov     rax, cs:__gconv_path_elem^^^jmp     loc_4595BB^^^xor     esi, esi^^^mov     edi, offset off_6C3330^^^call    insert_module^^^jmp     loc_4597BB^^^xor     esi, esi^^^mov     edi, offset off_6C3368^^^call    insert_module^^^jmp     loc_4597E2^^^xor     esi, esi^^^mov     edi, offset off_6C33A0^^^call    insert_module^^^jmp     loc_459809^^^xor     esi, esi^^^mov     edi, offset off_6C33D8^^^call    insert_module^^^jmp     loc_459830^^^xor     esi, esi^^^mov     edi, offset builtin_modules^^^call    insert_module^^^jmp     loc_45976D^^^xor     esi, esi^^^mov     edi, offset off_6C32F8^^^call    insert_module^^^jmp     loc_459794^^^xor     esi, esi^^^mov     edi, offset off_6C34F0^^^call    insert_module^^^jmp     loc_4598F3^^^xor     esi, esi^^^mov     edi, offset off_6C3528^^^call    insert_module^^^jmp     loc_45991A^^^xor     esi, esi^^^mov     edi, offset off_6C3410^^^call    insert_module^^^jmp     loc_459857^^^xor     esi, esi^^^mov     edi, offset off_6C3448^^^call    insert_module^^^jmp     loc_45987E^^^xor     esi, esi^^^mov     edi, offset off_6C3480^^^call    insert_module^^^jmp     loc_4598A5^^^xor     esi, esi^^^mov     edi, offset off_6C34B8^^^call    insert_module^^^jmp     loc_4598CC^^^
uw_frame_state_for$$$push    r15^^^mov     edx, 180h^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^mov     rdi, rsi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^sub     rsp, 18h^^^test    sil, 1^^^jnz     loc_491C48^^^test    dil, 2^^^jnz     loc_491C60^^^test    dil, 4^^^jnz     loc_491C80^^^mov     ecx, edx^^^xor     eax, eax^^^shr     ecx, 3^^^test    dl, 4^^^rep stosq^^^jz      short loc_491693^^^mov     dword ptr [rdi], 0^^^add     rdi, 4^^^test    dl, 2^^^jz      short loc_4916A1^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^and     edx, 1^^^jz      short loc_4916A9^^^mov     byte ptr [rdi], 0^^^mov     rax, [r12+98h]^^^mov     qword ptr [r12+0D0h], 0^^^mov     qword ptr [r12+0A0h], 0^^^test    rax, rax^^^jz      loc_491820^^^mov     rdx, [r12+0C0h]^^^lea     rsi, [r12+0A8h]^^^shr     rdx, 3Fh^^^lea     rdi, [rax+rdx-1]^^^call    _Unwind_Find_FDE^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_4919BC^^^mov     rax, [r12+0B8h]^^^lea     r13, [r14+4]^^^mov     [rbp+148h], rax^^^movsxd  rax, dword ptr [r14+4]^^^sub     r13, rax^^^lea     rbx, [r13+9]^^^mov     rdi, rbx^^^call    strlen^^^cmp     byte ptr [r13+9], 65h^^^lea     rax, [r13+rax+1]^^^lea     rdi, [rax+9]^^^jz      loc_491C20^^^cmp     byte ptr [r13+8], 3^^^ja      loc_491D0C^^^xor     esi, esi^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_491748^^^mov     [rbp+160h], rsi^^^mov     rsi, rsp^^^call    read_sleb128^^^mov     rdx, [rsp+48h+var_48]^^^xor     edi, edi^^^xor     ecx, ecx^^^mov     [rbp+158h], rdx^^^cmp     byte ptr [r13+8], 1^^^jz      loc_491C08^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rax]^^^add     rax, 1^^^mov     rdx, rsi^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      rdi, rdx^^^test    sil, sil^^^js      short loc_491790^^^mov     [rbp+168h], rdi^^^mov     byte ptr [rbp+171h], 0FFh^^^movzx   ecx, byte ptr [rbx]^^^xor     r15d, r15d^^^cmp     cl, 7Ah^^^jnz     short loc_4917ED^^^jmp     loc_491BC5^^^cmp     cl, 52h^^^jz      short loc_491810^^^cmp     cl, 50h^^^jz      short loc_491838^^^cmp     cl, 53h^^^jnz     loc_491BA8^^^mov     byte ptr [rbp+173h], 1^^^movzx   ecx, byte ptr [rbx]^^^add     rbx, 1^^^test    cl, cl^^^jz      loc_491878^^^cmp     cl, 4Ch^^^jnz     short loc_4917D0^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [rbp+171h], dl^^^jmp     short loc_4917EA^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [rbp+170h], dl^^^jmp     short loc_4917EA^^^mov     eax, 5^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movzx   edx, byte ptr [rax]^^^cmp     dl, 0FFh^^^movzx   edi, dl^^^jz      loc_4918D8^^^mov     edx, edi^^^and     edx, 70h^^^cmp     edx, 20h^^^jz      loc_491C98^^^jle     short loc_4918C8^^^cmp     edx, 40h^^^jz      loc_491CA5^^^cmp     edx, 50h^^^jz      short loc_4918D8^^^cmp     edx, 30h^^^jz      loc_491B98^^^xchg    ax, ax^^^call    abort^^^test    r15, r15^^^jz      loc_491BA5^^^mov     eax, [r13+0]^^^mov     rcx, rbp^^^mov     rdx, r12^^^mov     rdi, r15^^^lea     rsi, [r13+rax+4]^^^call    execute_cfa_program^^^movzx   eax, byte ptr [rbp+170h]^^^cmp     al, 0FFh^^^jz      short loc_4918F9^^^and     eax, 7^^^cmp     eax, 2^^^jz      loc_491CE8^^^jg      loc_491CB2^^^test    eax, eax^^^jz      loc_491CC0^^^nop     dword ptr [rax]^^^jmp     short loc_49186E^^^test    edx, edx^^^jz      short loc_4918D8^^^cmp     edx, 10h^^^nop^^^jnz     short loc_49186E^^^nop     word ptr [rax+rax+00h]^^^xor     esi, esi^^^lea     rdx, [rax+1]^^^lea     rcx, [rsp+48h+var_40]^^^call    read_encoded_value_with_base^^^mov     rdx, [rsp+48h+var_40]^^^mov     [rbp+150h], rdx^^^jmp     loc_4917EA^^^xor     eax, eax^^^xor     ebx, ebx^^^cmp     byte ptr [rbp+172h], 0^^^lea     rax, [r14+rax+8]^^^jz      short loc_49192F^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rax]^^^mov     esi, 7Fh^^^add     rax, 1^^^and     rsi, rdx^^^shl     rsi, cl^^^add     ecx, 7^^^or      rbx, rsi^^^test    dl, dl^^^js      short loc_491910^^^add     rbx, rax^^^movzx   edi, byte ptr [rbp+171h]^^^cmp     dil, 0FFh^^^jz      short loc_49198E^^^movzx   edi, dil^^^mov     edx, edi^^^and     edx, 70h^^^cmp     edx, 20h^^^jz      loc_491CFF^^^jle     loc_491CCA^^^cmp     edx, 40h^^^jz      loc_491CF2^^^cmp     edx, 50h^^^jz      loc_491CD7^^^cmp     edx, 30h^^^jnz     loc_49186E^^^mov     rsi, [r12+0B0h]^^^mov     rdx, rax^^^mov     rcx, rsp^^^call    read_encoded_value_with_base^^^mov     rdx, [rsp+48h+var_48]^^^mov     [r12+0A0h], rdx^^^test    rbx, rbx^^^mov     rcx, rbp^^^mov     rdx, r12^^^cmovz   rbx, rax^^^mov     eax, [r14]^^^mov     rdi, rbx^^^lea     rsi, [r14+rax+4]^^^call    execute_cfa_program^^^add     rsp, 18h^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rcx, [r12+98h]^^^mov     rdx, [r12+90h]^^^mov     eax, 5^^^cmp     byte ptr [rcx], 48h^^^jnz     loc_491825^^^mov     rsi, 50F0000000FC0C7h^^^cmp     [rcx+1], rsi^^^jnz     loc_491825^^^mov     rax, [rdx+0A0h]^^^lea     rsi, [rdx+90h]^^^mov     dword ptr [rbp+140h], 1^^^mov     qword ptr [rbp+130h], 7^^^mov     dword ptr [rbp+8], 1^^^mov     dword ptr [rbp+18h], 1^^^mov     dword ptr [rbp+28h], 1^^^mov     rcx, rax^^^sub     rsi, rax^^^mov     dword ptr [rbp+38h], 1^^^sub     rcx, rdx^^^mov     [rbp+0], rsi^^^lea     rsi, [rdx+88h]^^^mov     [rbp+128h], rcx^^^lea     rcx, [rdx+28h]^^^mov     dword ptr [rbp+48h], 1^^^sub     rsi, rax^^^mov     dword ptr [rbp+58h], 1^^^mov     dword ptr [rbp+68h], 1^^^sub     rcx, rax^^^mov     [rbp+10h], rsi^^^lea     rsi, [rdx+98h]^^^mov     [rbp+80h], rcx^^^lea     rcx, [rdx+30h]^^^mov     dword ptr [rbp+88h], 1^^^sub     rsi, rax^^^mov     dword ptr [rbp+98h], 1^^^mov     dword ptr [rbp+0A8h], 1^^^sub     rcx, rax^^^mov     [rbp+20h], rsi^^^lea     rsi, [rdx+80h]^^^mov     [rbp+90h], rcx^^^lea     rcx, [rdx+38h]^^^mov     dword ptr [rbp+0B8h], 1^^^sub     rsi, rax^^^mov     dword ptr [rbp+0C8h], 1^^^mov     dword ptr [rbp+0D8h], 1^^^sub     rcx, rax^^^mov     [rbp+30h], rsi^^^lea     rsi, [rdx+70h]^^^mov     [rbp+0A0h], rcx^^^lea     rcx, [rdx+40h]^^^mov     dword ptr [rbp+0E8h], 1^^^sub     rsi, rax^^^mov     dword ptr [rbp+0F8h], 1^^^sub     rcx, rax^^^mov     [rbp+40h], rsi^^^lea     rsi, [rdx+68h]^^^mov     [rbp+0B0h], rcx^^^lea     rcx, [rdx+48h]^^^sub     rsi, rax^^^sub     rcx, rax^^^mov     [rbp+50h], rsi^^^lea     rsi, [rdx+78h]^^^mov     [rbp+0C0h], rcx^^^lea     rcx, [rdx+50h]^^^sub     rsi, rax^^^sub     rcx, rax^^^mov     [rbp+60h], rsi^^^mov     [rbp+0D0h], rcx^^^lea     rcx, [rdx+58h]^^^sub     rcx, rax^^^mov     [rbp+0E0h], rcx^^^lea     rcx, [rdx+60h]^^^add     rdx, 0A8h^^^sub     rdx, rax^^^sub     rcx, rax^^^xor     eax, eax^^^mov     [rbp+0F0h], rcx^^^mov     dword ptr [rbp+108h], 1^^^mov     [rbp+100h], rdx^^^mov     qword ptr [rbp+168h], 10h^^^mov     byte ptr [rbp+173h], 1^^^jmp     loc_491825^^^mov     rsi, [r12+0B0h]^^^jmp     loc_4918DA^^^mov     r15, rax^^^test    r15, r15^^^jnz     loc_491881^^^add     rsp, 18h^^^mov     eax, 3^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rax]^^^add     rax, 1^^^mov     rdx, rsi^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      r15, rdx^^^test    sil, sil^^^js      short loc_491BD0^^^mov     byte ptr [rbp+172h], 1^^^add     r15, rax^^^movzx   ecx, byte ptr [rbx+1]^^^add     rbx, 1^^^jmp     loc_4917ED^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [rbp+168h], rdx^^^jmp     loc_4917B2^^^cmp     byte ptr [r13+0Ah], 68h^^^jnz     loc_491736^^^mov     rdx, [rax+9]^^^lea     rdi, [rax+11h]^^^lea     rbx, [r13+0Bh]^^^mov     [rbp+178h], rdx^^^jmp     loc_491736^^^lea     rdi, [rsi+1]^^^mov     byte ptr [rsi], 0^^^mov     dl, 7Fh^^^test    dil, 2^^^jz      loc_491670^^^nop     dword ptr [rax+rax+00h]^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^sub     edx, 2^^^test    dil, 4^^^jz      loc_49167A^^^nop     word ptr [rax+rax+00000000h]^^^mov     dword ptr [rdi], 0^^^sub     edx, 4^^^add     rdi, 4^^^jmp     loc_49167A^^^mov     rsi, [r12+0A8h]^^^jmp     loc_4918DA^^^mov     rsi, [r12+0B8h]^^^jmp     loc_4918DA^^^cmp     eax, 3^^^jz      short loc_491CDE^^^cmp     eax, 4^^^jnz     loc_49186E^^^mov     eax, 10h^^^jmp     loc_4918FB^^^test    edx, edx^^^jz      short loc_491CD7^^^cmp     edx, 10h^^^jnz     loc_49186E^^^xor     esi, esi^^^jmp     loc_491977^^^mov     eax, 8^^^jmp     loc_4918FB^^^mov     eax, 4^^^jmp     loc_4918FB^^^mov     rsi, [r12+0B8h]^^^jmp     loc_491977^^^mov     rsi, [r12+0A8h]^^^jmp     loc_491977^^^cmp     byte ptr [rdi], 8^^^jnz     loc_491BB1^^^cmp     byte ptr [rdi+1], 0^^^jnz     loc_491BB1^^^add     rdi, 2^^^jmp     loc_491741^^^
__register_frame_info_table$$$xor     ecx, ecx^^^xor     edx, edx^^^jmp     __register_frame_info_table_bases^^^
sub_41E23D$$$cmp     dword ptr [rbp-590h], 0^^^mov     edx, [r12]^^^jz      short loc_41E2BC^^^cmp     edx, 30h^^^jnb     short loc_41E2AC^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^test    rax, rax^^^jns     short loc_41E293^^^neg     rax^^^mov     dword ptr [rbp-5B8h], 0Ah^^^mov     r8d, 1^^^mov     [rbp-5C0h], rax^^^jmp     loc_41C441^^^mov     dword ptr [rbp-5B8h], 0Ah^^^jmp     loc_41C3F8^^^mov     [rbp-5C0h], rax^^^mov     dword ptr [rbp-5B8h], 0Ah^^^xor     r8d, r8d^^^jmp     loc_41C441^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41E25D^^^cmp     dword ptr [rbp-604h], 0^^^jz      loc_41E37F^^^cmp     edx, 30h^^^jnb     loc_41E36C^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   rax, byte ptr [rax]^^^jmp     loc_41E260^^^cmp     dword ptr [rbp-590h], 0^^^mov     edx, [r12]^^^jz      loc_41CC9C^^^cmp     edx, 30h^^^jnb     loc_41CC4D^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     dword ptr [rbp-5D8h], 0^^^xor     r8d, r8d^^^mov     dword ptr [rbp-5F4h], 0^^^mov     [rbp-5C0h], rax^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41C420^^^cmp     dword ptr [rbp-604h], 0^^^jz      short loc_41CCFD^^^cmp     edx, 30h^^^jnb     short loc_41CCED^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   eax, byte ptr [rax]^^^mov     dword ptr [rbp-5D8h], 0^^^xor     r8d, r8d^^^mov     dword ptr [rbp-5F4h], 0^^^mov     [rbp-5C0h], rax^^^jmp     loc_41C441^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41CCB8^^^cmp     dword ptr [rbp-5C0h], 0^^^jnz     loc_41E6B5^^^cmp     edx, 30h^^^jnb     loc_41E6A2^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     eax, [rax]^^^mov     dword ptr [rbp-5D8h], 0^^^xor     r8d, r8d^^^mov     dword ptr [rbp-5F4h], 0^^^mov     [rbp-5C0h], rax^^^jmp     loc_41C441^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E2E0^^^cmp     dword ptr [rbp-5C0h], 0^^^jnz     loc_41F23E^^^cmp     edx, 30h^^^jnb     loc_41F22B^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsxd  rax, dword ptr [rax]^^^jmp     loc_41E260^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41CD21^^^cmp     edx, 30h^^^jnb     loc_41FD62^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E3A3^^^cmp     edx, 30h^^^jnb     loc_41F2D0^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   rax, word ptr [rax]^^^jmp     loc_41E260^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41F255^^^
critical_factorization_0$$$push    r12^^^mov     ecx, 1^^^mov     r12, rdx^^^xor     r8d, r8d^^^mov     r10, 0FFFFFFFFFFFFFFFFh^^^push    rbp^^^mov     ebp, 1^^^push    rbx^^^nop     dword ptr [rax+rax+00h]^^^lea     rax, [rcx+r8]^^^cmp     rax, rsi^^^jnb     short loc_475C22^^^lea     r9, [rdi+r10]^^^movzx   edx, byte ptr [r9+rcx]^^^cmp     [rdi+rax], dl^^^jnb     loc_475C90^^^mov     r8, rax^^^mov     ecx, 1^^^mov     rbp, rax^^^lea     rax, [rcx+r8]^^^sub     rbp, r10^^^cmp     rax, rsi^^^jb      short loc_475BF9^^^mov     [r12], rbp^^^mov     ebx, 1^^^mov     r8d, 1^^^xor     r9d, r9d^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^nop     dword ptr [rax+rax+00h]^^^lea     rcx, [r8+r9]^^^cmp     rsi, rcx^^^jbe     short loc_475C6F^^^lea     r11, [rdi+rax]^^^movzx   edx, byte ptr [r11+r8]^^^cmp     [rdi+rcx], dl^^^jbe     short loc_475CB0^^^mov     r9, rcx^^^mov     r8d, 1^^^mov     rbx, rcx^^^lea     rcx, [r8+r9]^^^sub     rbx, rax^^^cmp     rsi, rcx^^^ja      short loc_475C49^^^add     rax, 1^^^add     r10, 1^^^cmp     rax, r10^^^jnb     short loc_475C82^^^mov     rbx, rbp^^^mov     rax, r10^^^mov     [r12], rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^jz      short loc_475CD0^^^mov     r10, r8^^^mov     ebp, 1^^^add     r8, 1^^^mov     ecx, 1^^^jmp     loc_475BF0^^^jz      short loc_475CE0^^^mov     rax, r9^^^mov     ebx, 1^^^add     r9, 1^^^mov     r8d, 1^^^jmp     loc_475C40^^^cmp     rcx, rbp^^^jz      short loc_475CF0^^^add     rcx, 1^^^jmp     loc_475BF0^^^cmp     r8, rbx^^^jz      short loc_475D00^^^add     r8, 1^^^jmp     loc_475C40^^^mov     rbp, rcx^^^mov     r8, rax^^^mov     ecx, 1^^^jmp     loc_475BF0^^^mov     rbx, r8^^^mov     r9, rcx^^^mov     r8d, 1^^^jmp     loc_475C40^^^
_Unwind_GetIP$$$mov     rax, [rdi+98h]^^^retn^^^
round_and_return$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 38h^^^cmp     rsi, 0FFFFFFFFFFFFFF82h^^^mov     rbp, rdi^^^mov     r13d, edx^^^mov     r12, rcx^^^jge     loc_47B150^^^cmp     rsi, 0FFFFFFFFFFFFFF6Ah^^^jl      loc_47B1C0^^^mov     edx, 1^^^mov     ecx, r8d^^^mov     rax, 0FFFFFFFFFFFFFF82h^^^shl     rdx, cl^^^sub     rax, rsi^^^sub     rdx, 1^^^test    rdx, r12^^^mov     r12, [rdi]^^^setnz   dl^^^movzx   edx, dl^^^or      r9d, edx^^^cmp     rax, 18h^^^jz      loc_47B200^^^mov     ecx, eax^^^mov     edx, 1^^^mov     rsi, rdi^^^mov     [rsp+38h+var_30], r9d^^^call    __mpn_rshift^^^mov     r9d, [rsp+38h+var_30]^^^mov     r8, 0FFFFFFFFFFFFFF81h^^^sub     r8d, ebx^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbx, 0FFFFFFFFFFFFFF81h^^^mov     dword ptr fs:[rax], 22h^^^bt      r12, r8^^^mov     esi, ebx^^^jb      short loc_47B190^^^mov     edx, r13d^^^mov     rdi, rbp^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     __mpn_construct_float^^^cmp     rsi, 80h^^^jle     short loc_47B125^^^test    r13d, r13d^^^movss   xmm0, cs:dword_4B27C0^^^jnz     short loc_47B180^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^movss   xmm0, cs:dword_4B27C4^^^jmp     short loc_47B166^^^test    r9d, r9d^^^mov     rax, [rbp+0]^^^jz      short loc_47B1D8^^^add     rax, 1^^^test    eax, 1000000h^^^mov     [rbp+0], rax^^^jnz     short loc_47B220^^^cmp     rbx, 0FFFFFFFFFFFFFF81h^^^jz      loc_47B258^^^mov     esi, ebx^^^jmp     loc_47B12D^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xorps   xmm0, xmm0^^^mov     dword ptr fs:[rax], 22h^^^jmp     short loc_47B166^^^test    al, 1^^^jnz     short loc_47B199^^^mov     edx, 1^^^mov     ecx, r8d^^^shl     rdx, cl^^^sub     rdx, 1^^^test    rdx, r12^^^jz      loc_47B12D^^^jmp     short loc_47B199^^^xor     eax, eax^^^test    r12, r12^^^mov     qword ptr [rdi], 0^^^setnz   al^^^mov     r8d, 17h^^^or      r9d, eax^^^jmp     loc_47B110^^^add     rbx, 1^^^mov     ecx, 1^^^mov     edx, 1^^^mov     rsi, rbp^^^mov     rdi, rbp^^^call    __mpn_rshift^^^or      qword ptr [rbp+0], 800000h^^^cmp     rbx, 81h^^^jz      loc_47B159^^^jmp     loc_47B1B2^^^and     eax, 800000h^^^cmp     rax, 1^^^sbb     esi, esi^^^sub     esi, 7Eh^^^jmp     loc_47B12D^^^
_IO_free_wbackup_area$$$push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^test    ah, 1^^^jnz     short loc_427830^^^mov     rax, [rdi+0A0h]^^^mov     rdi, [rax+40h]^^^call    free^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+40h], 0^^^mov     qword ptr [rax+50h], 0^^^mov     qword ptr [rax+48h], 0^^^pop     rbx^^^retn^^^and     ah, 0FEh^^^mov     [rdi], eax^^^mov     rax, [rdi+0A0h]^^^mov     rdx, [rax+8]^^^mov     rcx, [rax+50h]^^^mov     [rax+50h], rdx^^^mov     [rax+8], rcx^^^mov     rdx, [rax+40h]^^^mov     rcx, [rax+10h]^^^mov     [rax], rdx^^^mov     [rax+10h], rdx^^^mov     [rax+40h], rcx^^^jmp     short loc_427802^^^
_L_lock_31_0$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_475236^^^
__mpn_divrem$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rcx^^^sub     rsp, 68h^^^cmp     r9, 1^^^mov     [rsp+98h+var_70], rsi^^^mov     [rsp+98h+var_60], rdi^^^mov     rsi, rdx^^^mov     [rsp+98h+var_80], r8^^^jz      loc_463085^^^cmp     r9, 2^^^jz      loc_462F79^^^test    r9, r9^^^jnz     short loc_462DD4^^^mov     eax, 1^^^mov     rdx, rax^^^sar     rdx, 3Fh^^^idiv    r9^^^mov     [rsp+98h+var_50], rax^^^mov     rax, [rsp+98h+var_50]^^^add     rsp, 68h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, rcx^^^mov     [rsp+98h+var_50], 0^^^sub     rax, r9^^^lea     r13, [rdx+rax*8]^^^lea     rax, [r9-1]^^^mov     [rsp+98h+var_58], rax^^^shl     rax, 3^^^mov     rdx, [rsp+98h+var_58]^^^mov     [rsp+98h+var_48], rax^^^mov     r8, [rsp+98h+var_48]^^^mov     rax, [rsp+98h+var_80]^^^add     r8, r13^^^mov     rbp, [rax+rdx*8]^^^mov     rcx, [r8]^^^lea     rax, [r9-2]^^^mov     rdx, [rsp+98h+var_80]^^^lea     r14, ds:0[rax*8]^^^cmp     rbp, rcx^^^mov     r12, [rdx+rax*8]^^^jbe     loc_463142^^^mov     r15, [rsp+98h+var_70]^^^add     r15, rbx^^^sub     r15, r9^^^sub     r15, 1^^^js      loc_462DC0^^^cmp     [rsp+98h+var_70], r15^^^lea     rax, ds:0[r9*8]^^^mov     [rsp+98h+var_68], r9^^^mov     [rsp+98h+var_40], rax^^^jg      loc_462F3C^^^nop     word ptr [rax+rax+00h]^^^mov     rdx, [rsp+98h+var_40]^^^sub     r13, 8^^^mov     r8, [rsp+98h+var_48]^^^mov     rdx, [r13+rdx+0]^^^add     r8, r13^^^mov     [rsp+98h+var_78], rdx^^^cmp     rcx, rbp^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_462ED6^^^mov     rbx, [r8]^^^mov     rdx, rcx^^^mov     rax, rbx^^^div     rbp^^^mov     rbx, rax^^^mov     rcx, rdx^^^mov     rax, r12^^^mul     rbx^^^jmp     short loc_462EBF^^^xor     esi, esi^^^cmp     rax, r12^^^setb    sil^^^sub     rax, r12^^^sub     rdx, rsi^^^cmp     rdx, rcx^^^ja      short loc_462ECD^^^jnz     short loc_462ED6^^^cmp     rax, [r13+r14+0]^^^jbe     short loc_462ED6^^^sub     rbx, 1^^^add     rcx, rbp^^^jnb     short loc_462EB0^^^mov     rdx, [rsp+98h+var_68]^^^mov     rsi, [rsp+98h+var_80]^^^mov     rcx, rbx^^^mov     rdi, r13^^^mov     [rsp+98h+var_98], r8^^^call    __mpn_submul_1^^^cmp     [rsp+98h+var_78], rax^^^mov     r8, [rsp+98h+var_98]^^^jz      short loc_462F17^^^mov     rcx, [rsp+98h+var_68]^^^mov     rdx, [rsp+98h+var_80]^^^mov     rsi, r13^^^mov     rdi, r13^^^sub     rbx, 1^^^call    __mpn_add_n^^^mov     r8, [rsp+98h+var_98]^^^mov     rax, [rsp+98h+var_60]^^^mov     [rax+r15*8], rbx^^^sub     r15, 1^^^mov     rcx, [r8]^^^cmp     r15, 0FFFFFFFFFFFFFFFFh^^^jz      loc_462DC0^^^cmp     [rsp+98h+var_70], r15^^^jle     loc_462E68^^^cmp     [rsp+98h+var_58], 0^^^mov     rax, [r8]^^^mov     [rsp+98h+var_78], rax^^^js      short loc_462F6C^^^mov     rax, [rsp+98h+var_58]^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, [r13+rax*8+0]^^^mov     [r13+rax*8+8], rdx^^^sub     rax, 1^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_462F58^^^mov     qword ptr [r13+0], 0^^^jmp     loc_462E83^^^lea     r10, [rdx+rcx*8-10h]^^^mov     rdx, [rsp+98h+var_80]^^^mov     [rsp+98h+var_50], 0^^^mov     rcx, [r10+8]^^^mov     rsi, [r10]^^^mov     rdi, [rdx+8]^^^mov     r8, [rdx]^^^cmp     rdi, rcx^^^jbe     loc_463120^^^mov     rax, [rsp+98h+var_70]^^^lea     r9, [rax+rbx-3]^^^test    r9, r9^^^js      short loc_463027^^^mov     rbp, [rsp+98h+var_60]^^^mov     rbx, r8^^^mov     r12, rax^^^neg     rbx^^^cmp     r12, r9^^^jg      short loc_463038^^^mov     r11, [r10-8]^^^sub     r10, 8^^^cmp     rcx, rdi^^^jz      short loc_463047^^^mov     rax, rsi^^^mov     rdx, rcx^^^div     rdi^^^mov     rsi, rax^^^mov     rcx, rdx^^^mov     rax, r8^^^mul     rsi^^^nop     word ptr [rax+rax+00000000h]^^^cmp     rdx, rcx^^^ja      short loc_462FFF^^^cmp     rax, r11^^^jbe     short loc_46300F^^^cmp     rdx, rcx^^^jnz     short loc_46300F^^^sub     rsi, 1^^^sub     rax, r8^^^sbb     rdx, 0^^^add     rcx, rdi^^^jnb     short loc_462FF0^^^mov     [rbp+r9*8+0], rsi^^^mov     rsi, r11^^^sub     rsi, rax^^^sbb     rcx, rdx^^^sub     r9, 1^^^cmp     r9, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_462FC0^^^mov     [r10+8], rcx^^^mov     [r10], rsi^^^jmp     loc_462DC0^^^xor     r11d, r11d^^^cmp     rcx, rdi^^^mov     qword ptr [r10], 0^^^jnz     short loc_462FD2^^^add     rcx, rsi^^^jnb     short loc_463068^^^sub     rcx, r8^^^mov     rsi, r11^^^mov     qword ptr [rbp+r9*8+0], 0FFFFFFFFFFFFFFFFh^^^add     rsi, r8^^^adc     rcx, 0^^^jmp     short loc_46301D^^^xor     eax, eax^^^test    r8, r8^^^mov     rdx, r8^^^setnz   al^^^mov     rsi, 0FFFFFFFFFFFFFFFFh^^^sub     rdx, rax^^^mov     rax, rbx^^^jmp     loc_462FF0^^^mov     rcx, [r8]^^^mov     rdx, [rdx+rbx*8-8]^^^mov     [rsp+98h+var_50], 0^^^cmp     rcx, rdx^^^jbe     short loc_46310F^^^mov     r8, [rsp+98h+var_70]^^^mov     r9, [rsp+98h+var_60]^^^shl     r8, 3^^^add     r9, r8^^^sub     rbx, 2^^^js      short loc_4630D8^^^lea     rdi, [r9+rbx*8]^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rsi+rbx*8]^^^sub     rbx, 1^^^div     rcx^^^mov     [rdi], rax^^^sub     rdi, 8^^^cmp     rbx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4630C0^^^mov     rdi, [rsp+98h+var_70]^^^sub     r9, r8^^^sub     rdi, 1^^^js      short loc_463107^^^lea     r8, [r9+rdi*8]^^^xor     r9d, r9d^^^nop     dword ptr [rax]^^^sub     rdi, 1^^^mov     rax, r9^^^div     rcx^^^mov     [r8], rax^^^sub     r8, 8^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4630F0^^^mov     [rsi], rdx^^^jmp     loc_462DC0^^^sub     rdx, rcx^^^mov     [rsp+98h+var_50], 1^^^jmp     loc_46309B^^^cmp     rsi, r8^^^jnb     short loc_46312E^^^cmp     rcx, rdi^^^jbe     loc_462FA3^^^sub     rsi, r8^^^sbb     rcx, rdi^^^mov     [rsp+98h+var_50], 1^^^jmp     loc_462FA3^^^jb      short loc_46317A^^^mov     rdx, [rsp+98h+var_58]^^^mov     rsi, [rsp+98h+var_80]^^^mov     rdi, r13^^^mov     [rsp+98h+var_88], rcx^^^mov     [rsp+98h+var_98], r8^^^mov     [rsp+98h+var_90], r9^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, [rsp+98h+var_88]^^^mov     r8, [rsp+98h+var_98]^^^mov     r9, [rsp+98h+var_90]^^^js      loc_462E30^^^mov     rdx, [rsp+98h+var_80]^^^mov     rcx, r9^^^mov     rsi, r13^^^mov     rdi, r13^^^mov     [rsp+98h+var_98], r8^^^mov     [rsp+98h+var_90], r9^^^call    __mpn_sub_n^^^mov     r8, [rsp+98h+var_98]^^^mov     [rsp+98h+var_50], 1^^^mov     r9, [rsp+98h+var_90]^^^mov     rcx, [r8]^^^jmp     loc_462E30^^^
__tzname_max$$$sub     rsp, 8^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447AA4^^^lock cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_1991^^^jmp     short loc_447AB1^^^cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_1991^^^mov     eax, cs:is_initialized_11109^^^test    eax, eax^^^jnz     short loc_447AC2^^^xor     edi, edi^^^call    tzset_internal_part_0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447ADA^^^lock dec cs:tzset_lock^^^jnz     _L_unlock_2008^^^jmp     short loc_447AE6^^^dec     cs:tzset_lock^^^jnz     _L_unlock_2008^^^mov     rax, cs:__tzname_cur_max^^^add     rsp, 8^^^retn^^^
__handle_registered_modifier_wc$$$push    r13^^^mov     rax, cs:__printf_modifier_table^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, [rdi]^^^mov     edx, [rbx]^^^mov     r9, [rax+rdx*8]^^^mov     eax, 1^^^test    r9, r9^^^jz      loc_424710^^^mov     r10d, [rbx+4]^^^lea     r11, [rbx+4]^^^xor     r13d, r13d^^^xor     ebp, ebp^^^xor     r12d, r12d^^^nop     dword ptr [rax+00h]^^^test    r10d, r10d^^^lea     rdx, [r9+0Ch]^^^jz      short loc_424717^^^mov     eax, [r9+0Ch]^^^test    eax, eax^^^jz      short loc_42471C^^^cmp     r10d, eax^^^jnz     short loc_4246F4^^^mov     rax, r11^^^jmp     short loc_4246C5^^^mov     r8d, [rdx]^^^test    r8d, r8d^^^jz      short loc_4246D9^^^cmp     ecx, r8d^^^jnz     short loc_4246F4^^^add     rax, 4^^^add     rdx, 4^^^mov     ecx, [rax]^^^test    ecx, ecx^^^jnz     short loc_4246B8^^^mov     ecx, [rdx]^^^test    ecx, ecx^^^jnz     short loc_4246F4^^^mov     rdx, rax^^^movsxd  rcx, ebp^^^sub     rdx, rbx^^^sar     rdx, 2^^^cmp     rdx, rcx^^^jle     short loc_4246F4^^^mov     r12d, [r9+8]^^^mov     ebp, edx^^^mov     r13, rax^^^mov     r9, [r9]^^^test    r9, r9^^^jnz     short loc_424698^^^test    r12d, r12d^^^mov     eax, 1^^^jz      short loc_424710^^^or      [rsi+0Eh], r12w^^^xor     al, al^^^mov     [rdi], r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rax, r11^^^jmp     short loc_4246D3^^^mov     rax, r11^^^jmp     short loc_4246D9^^^
qsort_r$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, r8^^^push    r14^^^mov     r14, rsi^^^shl     r14, 4^^^push    r13^^^add     r14, rdx^^^mov     r13, rcx^^^push    r12^^^mov     r12, rdi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 78h^^^cmp     rdx, 20h^^^mov     [rbp+var_80], rsi^^^ja      short loc_418238^^^mov     r14, rsi^^^imul    r14, rdx^^^cmp     r14, 3FFh^^^jbe     loc_418480^^^mov     ecx, cs:pagesize_9193^^^test    ecx, ecx^^^jz      loc_4184B0^^^xor     edx, edx^^^movsxd  rcx, ecx^^^mov     rax, r14^^^div     rcx^^^cmp     rax, cs:phys_pages_9192^^^ja      loc_4183F0^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     rdi, r14^^^mov     ecx, fs:[rdx]^^^mov     [rbp+var_98], rdx^^^mov     [rbp+var_90], ecx^^^call    malloc^^^mov     rdx, [rbp+var_98]^^^mov     ecx, [rbp+var_90]^^^test    rax, rax^^^mov     [rbp+var_88], rax^^^mov     fs:[rdx], ecx^^^jz      loc_4183F0^^^mov     [rbp+var_40], rax^^^cmp     rbx, 20h^^^mov     [rbp+var_60], rbx^^^mov     [rbp+var_58], 4^^^mov     [rbp+var_50], r13^^^mov     [rbp+var_48], r15^^^jbe     loc_418418^^^mov     rcx, [rbp+var_80]^^^shl     rcx, 3^^^lea     r15, [rax+rcx]^^^lea     rax, [r15+rcx]^^^mov     rsi, r15^^^cmp     r15, rax^^^mov     [rbp+var_78], rax^^^jnb     short loc_418307^^^mov     rax, r15^^^mov     rdx, r12^^^xchg    ax, ax^^^mov     [rax], rdx^^^add     rax, 8^^^add     rdx, rbx^^^cmp     [rbp+var_78], rax^^^ja      short loc_4182F0^^^mov     rsi, rcx^^^add     rsi, [rbp+var_40]^^^cmp     [rbp+var_80], 1^^^mov     [rbp+var_60], 8^^^mov     [rbp+var_58], 3^^^jbe     loc_4184F7^^^mov     rdx, [rbp+var_80]^^^lea     rdi, [rbp+var_60]^^^call    msort_with_tmp_part_0^^^mov     [rbp+var_68], r12^^^mov     [rbp+var_70], 0^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, [rbp+var_70]^^^mov     r13, [r15+rax*8]^^^cmp     r13, [rbp+var_68]^^^jz      short loc_4183B8^^^mov     rdi, [rbp+var_78]^^^mov     rsi, [rbp+var_68]^^^mov     rdx, rbx^^^call    memcpy^^^mov     rdi, [rbp+var_68]^^^mov     rcx, [rbp+var_70]^^^jmp     short loc_418379^^^mov     rdi, r13^^^mov     rcx, r14^^^mov     r13, rax^^^mov     r14, r13^^^xor     edx, edx^^^mov     [r15+rcx*8], rdi^^^sub     r14, r12^^^mov     rsi, r13^^^mov     rax, r14^^^div     rbx^^^mov     rdx, rbx^^^mov     r14, rax^^^call    memcpy^^^lea     rdx, [r15+r14*8]^^^mov     rax, [rdx]^^^cmp     rax, [rbp+var_68]^^^jnz     short loc_418370^^^mov     rsi, [rbp+var_78]^^^mov     [rdx], r13^^^mov     rdi, r13^^^mov     rdx, rbx^^^call    memcpy^^^add     [rbp+var_70], 1^^^add     [rbp+var_68], rbx^^^mov     rax, [rbp+var_80]^^^cmp     [rbp+var_70], rax^^^jnz     loc_418340^^^mov     rdi, [rbp+var_88]^^^call    free^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rsi, [rbp+var_80]^^^mov     r8, r15^^^mov     rcx, r13^^^mov     rdx, rbx^^^mov     rdi, r12^^^call    _quicksort^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^test    bl, 3^^^jnz     short loc_418450^^^test    r12b, 3^^^jnz     short loc_418450^^^cmp     rbx, 4^^^jz      loc_41851E^^^cmp     rbx, 8^^^jz      loc_418507^^^and     ebx, 7^^^jnz     short loc_418450^^^test    r12b, 7^^^jnz     short loc_418450^^^mov     [rbp+var_58], 2^^^nop     word ptr [rax+rax+00h]^^^cmp     [rbp+var_80], 1^^^jbe     loc_4183CF^^^mov     rdx, [rbp+var_80]^^^lea     rdi, [rbp+var_60]^^^mov     rsi, r12^^^call    msort_with_tmp_part_0^^^mov     rdi, [rbp+var_88]^^^call    free^^^jmp     loc_4183DB^^^add     r14, 1Eh^^^mov     [rbp+var_88], 0^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r14^^^lea     rax, [rsp+0A0h+var_98+7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_40], rax^^^jmp     loc_4182AE^^^mov     edi, 55h^^^call    sysconf^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, 1FFFFFFFFFFFFFFFh^^^jz      short loc_4184D9^^^lea     rdx, [rax+3]^^^test    rax, rax^^^cmovns  rdx, rax^^^sar     rdx, 2^^^mov     cs:phys_pages_9192, rdx^^^mov     edi, 1Eh^^^call    sysconf^^^mov     ecx, eax^^^mov     cs:pagesize_9193, eax^^^jmp     loc_418253^^^cmp     [rbp+var_80], 0^^^jnz     loc_41832F^^^jmp     loc_4183CF^^^test    r12b, 7^^^jnz     loc_418437^^^mov     [rbp+var_58], 1^^^jmp     loc_418450^^^mov     [rbp+var_58], 0^^^jmp     loc_418450^^^
valloc$$$push    r13             ^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 8^^^mov     eax, cs:__libc_malloc_initialized^^^test    eax, eax^^^js      loc_408658^^^mov     r12, cs:_dl_pagesize^^^mov     rax, r12^^^not     rax^^^sub     rax, 20h^^^cmp     rax, rbp^^^jb      loc_408604^^^mov     rax, cs:__memalign_hook^^^test    rax, rax^^^jnz     loc_4086E8^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rbx, fs:[rax]^^^test    rbx, rbx^^^jz      loc_408623^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408495^^^lock cmpxchg [rbx], esi^^^jnz     _L_lock_12263^^^jmp     short loc_40849E^^^cmpxchg [rbx], esi^^^jnz     _L_lock_12263^^^mov     ecx, [rbx+4]^^^test    cl, 1^^^jz      short loc_408518^^^mov     rsi, cs:_dl_pagesize^^^mov     rdx, rbp^^^mov     rdi, rbx^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4084CF^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_12293^^^jmp     short loc_4084D7^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_12293^^^test    r13, r13^^^jz      loc_408580^^^mov     rax, [r13-8]^^^test    al, 2^^^jnz     short loc_408507^^^test    al, 4^^^mov     edx, offset main_arena^^^jz      short loc_4084FE^^^lea     rax, [r13-10h]^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdx, [rax]^^^cmp     rdx, rbx^^^jnz     loc_4086CF^^^add     rsp, 8^^^mov     rax, r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_408540^^^mov     rdi, rbx^^^call    malloc_consolidate_part_3^^^jmp     loc_4084A6^^^lea     rax, [rbx+rdx*8+68h]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_408540^^^cmp     rbx, offset main_arena^^^jz      loc_4086A4^^^or      ecx, 2^^^lea     rax, [rbx+58h]^^^or      ecx, 1^^^mov     [rbx+4], ecx^^^mov     [rbx+58h], rax^^^jmp     loc_4084A6^^^cmp     rbx, offset main_arena^^^jz      loc_408665^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4085AD^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_12402^^^jmp     short loc_4085BA^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_12402^^^mov     edi, offset main_arena^^^mov     rdx, rbp^^^mov     rsi, r12^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4085E5^^^lock dec cs:main_arena^^^jnz     _L_unlock_12411^^^jmp     short loc_4085F1^^^dec     cs:main_arena^^^jnz     _L_unlock_12411^^^mov     ebx, offset main_arena^^^test    r13, r13^^^jz      loc_408507^^^jmp     loc_4084E0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r13d, r13d^^^mov     dword ptr fs:[rax], 0Ch^^^add     rsp, 8^^^mov     rax, r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_40849E^^^lea     rdi, [r12+rbp+20h]^^^xor     esi, esi^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_40849E^^^xor     r13d, r13d^^^jmp     loc_408507^^^call    ptmalloc_init_part_8^^^nop     dword ptr [rax]^^^jmp     loc_40843B^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_4086B4^^^mov     rdx, rbp^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408697^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_12551^^^jmp     short loc_40869F^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_12551^^^jmp     loc_4085F6^^^mov     cs:global_max_fast, 80h^^^jmp     loc_40856A^^^mov     esi, offset main_arena^^^mov     rdi, rbp^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_408507^^^jmp     short loc_408672^^^mov     ecx, offset __func___12497^^^mov     edx, 0C7Dh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPMchunkptrChar^^^call    __malloc_assert^^^mov     rdx, [rsp+28h]^^^add     rsp, 8^^^mov     rsi, rbp^^^pop     rbx^^^pop     rbp^^^mov     rdi, r12^^^pop     r12^^^pop     r13^^^jmp     rax^^^
_IO_new_file_setbuf$$$push    rbx^^^mov     rbx, rdi^^^call    _IO_default_setbuf^^^test    rax, rax^^^jz      short loc_429D10^^^mov     rax, [rbx+38h]^^^mov     [rbx+30h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     rax, rbx^^^pop     rbx^^^retn^^^xor     ebx, ebx^^^jmp     short loc_429D0A^^^
_L_unlock_14356$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4093AC^^^
raise$$$mov     eax, fs:2D4h^^^mov     esi, fs:2D0h^^^test    esi, esi^^^jnz     short loc_462AC0^^^mov     eax, 0BAh^^^syscall^^^mov     esi, eax^^^mov     fs:2D0h, eax^^^movsxd  rdx, edi^^^movsxd  rsi, esi^^^movsxd  rdi, eax^^^mov     eax, 0EAh^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_462ACF^^^rep retn^^^test    eax, eax^^^jg      short loc_462AA5^^^test    eax, 7FFFFFFFh^^^jz      short loc_462AE0^^^neg     eax^^^jmp     short loc_462AA5^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^mov     eax, esi^^^jmp     short loc_462AA5^^^
calloc$$$mov     rdx, rsi        ^^^mov     [rsp+var_20], rbp^^^mov     eax, 0FFFFFFFFh^^^mov     rbp, rsi^^^or      rdx, rdi^^^mov     [rsp+var_28], rbx^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^sub     rsp, 28h^^^imul    rbp, rdi^^^cmp     rdx, rax^^^ja      loc_408D9A^^^mov     rax, cs:__malloc_hook^^^test    rax, rax^^^jnz     loc_408D5B^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rdx, fs:[rax]^^^test    rdx, rdx^^^jz      loc_408CB0^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408A68^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_13170^^^jmp     short loc_408A71^^^cmpxchg [rdx], esi^^^jnz     _L_lock_13170^^^mov     r12, rdx^^^mov     r14, [r12+58h]^^^mov     r13, [r14+8]^^^and     r13, 0FFFFFFFFFFFFFFF8h^^^cmp     r12, offset main_arena^^^jz      short loc_408AA1^^^mov     rax, r14^^^and     rax, 0FFFFFFFFFC000000h^^^add     rax, [rax+18h]^^^sub     rax, r14^^^cmp     r13, rax^^^cmovb   r13, rax^^^mov     rsi, rbp^^^mov     rdi, r12^^^call    _int_malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_408BF8^^^mov     rax, [rax-8]^^^test    al, 2^^^jnz     short loc_408ADF^^^test    al, 4^^^mov     edx, offset main_arena^^^jz      short loc_408AD6^^^lea     rax, [rbx-10h]^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdx, [rax]^^^cmp     rdx, r12^^^jnz     loc_408CDE^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408AF5^^^lock dec dword ptr [r12]^^^jnz     _L_unlock_13236^^^jmp     short loc_408AFF^^^dec     dword ptr [r12]^^^jnz     _L_unlock_13236^^^mov     rdx, [rbx-8]^^^test    dl, 2^^^jz      short loc_408B40^^^mov     eax, cs:perturb_byte^^^test    eax, eax^^^jnz     loc_408DE2^^^mov     rax, rbx^^^mov     rbp, [rsp+28h+var_20]^^^mov     rbx, [rsp+28h+var_28]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     eax, cs:perturb_byte^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^test    eax, eax^^^jnz     short loc_408B5B^^^lea     rax, [rbx-10h]^^^cmp     r14, rax^^^jz      loc_408BE8^^^sub     rdx, 8^^^mov     rax, rdx^^^shr     rax, 3^^^cmp     rax, 2^^^jbe     loc_408DC9^^^cmp     rax, 9^^^ja      loc_408C98^^^cmp     rax, 4^^^mov     qword ptr [rbx], 0^^^mov     qword ptr [rbx+8], 0^^^mov     qword ptr [rbx+10h], 0^^^jbe     loc_408B16^^^cmp     rax, 6^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+20h], 0^^^jbe     loc_408B16^^^cmp     rax, 9^^^mov     qword ptr [rbx+28h], 0^^^mov     qword ptr [rbx+30h], 0^^^jnz     loc_408B16^^^mov     qword ptr [rbx+38h], 0^^^mov     qword ptr [rbx+40h], 0^^^jmp     loc_408B16^^^cmp     rdx, r13^^^cmova   rdx, r13^^^jmp     loc_408B5B^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408C0E^^^lock dec dword ptr [r12]^^^jnz     _L_unlock_13352^^^jmp     short loc_408C18^^^dec     dword ptr [r12]^^^jnz     _L_unlock_13352^^^cmp     r12, offset main_arena^^^jz      loc_408D00^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408C45^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_13361^^^jmp     short loc_408C52^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_13361^^^mov     edi, offset main_arena^^^mov     rsi, rbp^^^call    _int_malloc^^^mov     rbx, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408C7A^^^lock dec cs:main_arena^^^jnz     _L_unlock_13370^^^jmp     short loc_408C86^^^dec     cs:main_arena^^^jnz     _L_unlock_13370^^^test    rbx, rbx^^^jnz     loc_408AFF^^^jmp     loc_408B16^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400390^^^jmp     loc_408B16^^^call    get_free_list^^^test    rax, rax^^^mov     r12, rax^^^jnz     loc_408A74^^^xor     esi, esi^^^mov     rdi, rbp^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     r12, rax^^^jnz     loc_408A74^^^xor     ebx, ebx^^^jmp     loc_408B16^^^mov     ecx, offset __func___12554^^^mov     edx, 0CF5h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aMemMchunkptrCh^^^call    __malloc_assert^^^call    get_free_list^^^test    rax, rax^^^mov     r12, rax^^^jz      short loc_408D40^^^mov     rsi, rbp^^^mov     rdi, r12^^^call    _int_malloc^^^mov     rbx, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408D31^^^lock dec dword ptr [r12]^^^jnz     _L_unlock_13498^^^jmp     short loc_408D3B^^^dec     dword ptr [r12]^^^jnz     _L_unlock_13498^^^jmp     loc_408C86^^^mov     esi, offset main_arena^^^mov     rdi, rbp^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     r12, rax^^^jz      loc_408B16^^^jmp     short loc_408D0D^^^mov     rsi, [rsp+28h]^^^mov     rdi, rbp^^^call    rax ^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_408B16^^^mov     rdx, rbp^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^xor     esi, esi^^^mov     r14, [rsp+28h+var_8]^^^mov     rdi, rax^^^add     rsp, 28h^^^jmp     sub_400390^^^test    rsi, rsi^^^jz      loc_408A28^^^xor     edx, edx^^^mov     rax, rbp^^^div     rsi^^^cmp     rax, rdi^^^jz      loc_408A28^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebx, ebx^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_408B16^^^mov     ecx, offset __func___12554^^^mov     edx, 0D25h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNclears3^^^call    __malloc_assert^^^mov     rdx, rbp^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400390^^^jmp     loc_408B16^^^
read_encoded_value_with_base_1$$$cmp     dil, 50h^^^push    rbx^^^mov     r11, rcx^^^jz      loc_494A28^^^movzx   r10d, dil^^^mov     eax, r10d^^^and     eax, 0Fh^^^cmp     eax, 0Ch        ^^^jbe     short loc_494918^^^call    abort           ^^^lea     rcx, off_4B3C50^^^movsxd  rax, dword ptr [rcx+rax*4]^^^add     rcx, rax^^^jmp     rcx             ^^^mov     r8, [rdx]       ^^^lea     rax, [rdx+8]^^^test    r8, r8^^^jz      short loc_494953^^^and     r10d, 70h^^^cmp     r10d, 10h^^^cmovz   rsi, rdx^^^add     r8, rsi^^^test    dil, dil^^^jns     short loc_494953^^^mov     r8, [r8]^^^mov     [r11], r8^^^pop     rbx^^^retn^^^movsx   r8, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     short loc_494937^^^mov     rax, rdx        ^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   ebx, byte ptr [rax]^^^mov     r9d, 7Fh^^^add     rax, 1^^^and     r9, rbx^^^shl     r9, cl^^^add     ecx, 7^^^or      r8, r9^^^test    bl, bl^^^js      short loc_494980^^^cmp     ecx, 3Fh^^^ja      short loc_494937^^^and     ebx, 40h^^^jz      short loc_494937^^^mov     r9, 0FFFFFFFFFFFFFFFFh^^^shl     r9, cl^^^or      r8, r9^^^jmp     short loc_494937^^^movsxd  r8, dword ptr [rdx]^^^lea     rax, [rdx+4]^^^jmp     loc_494937^^^mov     r8d, [rdx]      ^^^lea     rax, [rdx+4]^^^jmp     loc_494937^^^movzx   r8d, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     loc_494937^^^mov     rax, rdx        ^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   ebx, byte ptr [rax]^^^mov     r9d, 7Fh^^^add     rax, 1^^^and     r9, rbx^^^shl     r9, cl^^^add     ecx, 7^^^or      r8, r9^^^test    bl, bl^^^js      short loc_494A00^^^jmp     loc_494937^^^lea     rax, [rdx+7]^^^pop     rbx^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^mov     r8, [rax]^^^add     rax, 8^^^mov     [r11], r8^^^retn^^^
_IO_marker_difference$$$mov     eax, [rdi+10h]^^^sub     eax, [rsi+10h]^^^retn^^^
_L_unlock_238_0$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_41885A^^^
____strtoull_l_internal$$$push    r15^^^push    r14^^^mov     r14, rsi^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 38h^^^test    ecx, ecx^^^mov     rax, [r8+8]^^^jnz     loc_419E52^^^xor     ecx, ecx^^^xor     r12d, r12d^^^cmp     edx, 1^^^jz      loc_419C40^^^mov     eax, edx^^^shr     eax, 1Fh^^^test    al, al^^^jnz     loc_419C40^^^cmp     edx, 24h^^^jg      loc_419C40^^^movzx   eax, byte ptr [rbx]^^^mov     r9, [r8+68h]^^^mov     r13, rbx^^^movsx   rsi, al^^^test    byte ptr [r9+rsi*2+1], 20h^^^jz      short loc_419B15^^^nop     word ptr [rax+rax+00h]^^^add     r13, 1^^^movzx   eax, byte ptr [r13+0]^^^movsx   rsi, al^^^test    byte ptr [r9+rsi*2+1], 20h^^^jnz     short loc_419B00^^^test    al, al^^^mov     r15d, eax^^^jz      loc_419E7A^^^cmp     al, 2Dh^^^jz      loc_419D76^^^cmp     al, 2Bh^^^mov     [rsp+68h+var_3C], 0^^^jz      loc_419C7C^^^cmp     r15b, 30h^^^jz      loc_419D3E^^^test    edx, edx^^^jz      loc_419C5F^^^cmp     edx, 0Ah^^^jz      loc_419C5F^^^lea     eax, [rdx-2]^^^xor     ebp, ebp^^^xor     r9d, r9d^^^cdqe^^^test    r15b, r15b^^^mov     rdi, ds:__strtol_ul_max_tab[rax*8]^^^movzx   eax, ds:__strtol_ul_rem_tab[rax]^^^mov     [rsp+68h+var_40], eax^^^jz      loc_419CF1^^^cmp     r9, r13^^^jz      loc_419DBB^^^lea     rcx, [rbp-1]^^^mov     rsi, r13^^^xor     r10d, r10d^^^xor     eax, eax^^^movsxd  r11, edx^^^mov     [rsp+68h+var_48], rcx^^^nop     word ptr [rax+rax+00000000h]^^^lea     ecx, [r15-30h]^^^cmp     cl, 9^^^jbe     loc_419CAF^^^test    rbp, rbp^^^jz      loc_419C94^^^cmp     [r12], r15b^^^jnz     loc_419C94^^^xor     ecx, ecx^^^mov     [rsp+68h+var_68], rax^^^jmp     short loc_419BDE^^^movzx   eax, byte ptr [rsi+rcx]^^^cmp     [r12+rcx], al^^^jnz     loc_419C90^^^add     rcx, 1^^^cmp     rcx, rbp^^^jnz     short loc_419BD0^^^mov     rcx, [rsp+68h+var_48]^^^mov     rax, [rsp+68h+var_68]^^^add     rcx, rsi^^^nop     dword ptr [rax+rax+00h]^^^movzx   r15d, byte ptr [rcx+1]^^^lea     rsi, [rcx+1]^^^test    r15b, r15b^^^jz      loc_419CE8^^^cmp     r9, rsi^^^jnz     short loc_419BA0^^^test    r14, r14^^^jz      short loc_419C17^^^mov     [r14], rsi^^^test    r10d, r10d^^^jnz     loc_419DC3^^^mov     ecx, [rsp+68h+var_3C]^^^mov     rdx, rax^^^neg     rdx^^^test    ecx, ecx^^^cmovnz  rax, rdx^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    rcx, rcx^^^jnz     loc_419DDD^^^mov     eax, 8^^^mov     edx, 0Ah^^^xor     ebp, ebp^^^xor     r9d, r9d^^^jmp     loc_419B5B^^^movzx   r15d, byte ptr [r13+1]^^^add     r13, 1^^^jmp     loc_419B38^^^mov     rax, [rsp+68h+var_68]^^^mov     rcx, [r8+68h]^^^movzx   r15d, r15b^^^test    byte ptr [rcx+r15*2+1], 4^^^jz      short loc_419CE8^^^mov     rcx, [r8+78h]^^^mov     ecx, [rcx+r15*4]^^^sub     ecx, 37h^^^movzx   r15d, cl^^^cmp     edx, r15d^^^jle     short loc_419CE8^^^cmp     rdi, rax^^^jb      short loc_419D30^^^cmp     rax, rdi^^^jz      short loc_419D28^^^imul    rax, r11^^^movzx   ecx, cl^^^add     rax, rcx^^^mov     rcx, rsi^^^movzx   r15d, byte ptr [rcx+1]^^^lea     rsi, [rcx+1]^^^test    r15b, r15b^^^jnz     loc_419C0A^^^nop     dword ptr [rax+00000000h]^^^cmp     r13, rsi^^^jnz     loc_419C0F^^^xor     eax, eax^^^test    r14, r14^^^jz      loc_419C50^^^mov     rdx, r13^^^sub     rdx, rbx^^^cmp     rdx, 1^^^jle     short loc_419D1B^^^movsx   rcx, byte ptr [r13-1]^^^mov     rdx, [r8+78h]^^^cmp     dword ptr [rdx+rcx*4], 58h^^^jz      loc_419DA4^^^mov     [r14], rbx^^^xor     eax, eax^^^jmp     loc_419C50^^^cmp     [rsp+68h+var_40], r15d^^^jnb     short loc_419CC2^^^nop^^^mov     rcx, rsi^^^mov     r10d, 1^^^jmp     loc_419BF8^^^test    edx, edx^^^setz    al^^^cmp     edx, 10h^^^jz      short loc_419D50^^^test    al, al^^^jz      loc_419B4A^^^movsx   rdi, byte ptr [r13+1]^^^mov     rsi, [r8+78h]^^^cmp     dword ptr [rsi+rdi*4], 58h^^^jz      short loc_419D8C^^^test    al, al^^^jz      loc_419B4A^^^mov     eax, 6^^^mov     edx, 8^^^jmp     loc_419B56^^^movzx   r15d, byte ptr [r13+1]^^^mov     [rsp+68h+var_3C], 1^^^add     r13, 1^^^jmp     loc_419B38^^^movzx   r15d, byte ptr [r13+2]^^^mov     eax, 0Eh^^^add     r13, 2^^^mov     edx, 10h^^^jmp     loc_419B56^^^cmp     byte ptr [r13-2], 30h^^^jnz     loc_419D1B^^^sub     r13, 1^^^mov     [r14], r13^^^jmp     loc_419C50^^^mov     r13, r9^^^jmp     loc_419CF1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_419C50^^^mov     rdi, r12^^^mov     [rsp+68h+var_50], rcx^^^mov     [rsp+68h+var_60], r8^^^mov     [rsp+68h+var_58], r9^^^call    strlen^^^test    rax, rax^^^mov     rbp, rax^^^mov     rdi, rax^^^mov     rcx, [rsp+68h+var_50]^^^mov     r8, [rsp+68h+var_60]^^^mov     r9, [rsp+68h+var_58]^^^jz      loc_419F0D^^^movzx   edx, byte ptr [r12]^^^xor     eax, eax^^^mov     rsi, rcx^^^cmp     dl, r15b^^^jz      short loc_419E34^^^jmp     short loc_419E85^^^movzx   ecx, byte ptr [r13+rax+0]^^^cmp     [r12+rax], cl^^^jnz     short loc_419E82^^^add     rax, 1^^^cmp     rax, rdi^^^jnz     short loc_419E28^^^mov     r15d, edx^^^mov     r9, r13^^^mov     eax, 8^^^mov     edx, 0Ah^^^jmp     loc_419B5B^^^mov     rcx, [rax+50h]^^^movzx   esi, byte ptr [rcx]^^^sub     esi, 1^^^cmp     sil, 7Dh^^^ja      loc_419AC0^^^mov     r12, [rax+48h]^^^cmp     byte ptr [r12], 0^^^jz      loc_419AC0^^^jmp     loc_419AC5^^^mov     r13, rbx^^^jmp     loc_419CF1^^^mov     rcx, rsi^^^test    r15b, r15b^^^mov     rsi, r13^^^jz      short loc_419EC8^^^mov     r10d, edx^^^lea     eax, [r15-30h]^^^cmp     al, 9^^^jbe     short loc_419EBB^^^xor     eax, eax^^^cmp     [rsi], r10b^^^jz      short loc_419EB2^^^jmp     short loc_419EF4^^^movzx   edx, byte ptr [rsi+rax]^^^cmp     [r12+rax], dl^^^jnz     short loc_419EF4^^^add     rax, 1^^^cmp     rax, rdi^^^jnz     short loc_419EA8^^^add     rsi, 1^^^movzx   r15d, byte ptr [rsi]^^^test    r15b, r15b^^^jnz     short loc_419E90^^^mov     rdx, r12^^^mov     rdi, r13^^^mov     [rsp+68h+var_60], r8^^^call    __correctly_grouped_prefixmb^^^movzx   r15d, byte ptr [r13+0]^^^mov     r9, rax^^^mov     edx, 0Ah^^^mov     eax, 8^^^mov     r8, [rsp+68h+var_60]^^^jmp     loc_419B5B^^^movzx   r15d, r15b^^^test    byte ptr [r9+r15*2+1], 4^^^jz      short loc_419EC8^^^mov     rax, [r8+78h]^^^cmp     dword ptr [rax+r15*4], 40h^^^jle     short loc_419EBB^^^jmp     short loc_419EC8^^^mov     r9, r13^^^mov     eax, 8^^^mov     edx, 0Ah^^^jmp     loc_419B5B^^^
isinfl$$$mov     rax, [rsp+arg_0]^^^mov     edx, [rsp+arg_8]^^^mov     [rsp+var_18], rax^^^mov     [rsp+var_10], edx^^^mov     edx, dword ptr [rsp+var_18+4]^^^movsx   ecx, word ptr [rsp+var_10]^^^add     edx, 80000000h^^^or      edx, dword ptr [rsp+var_18]^^^mov     eax, ecx^^^and     ecx, 8000h^^^not     eax^^^sar     ecx, 0Eh^^^and     eax, 7FFFh^^^or      edx, eax^^^mov     eax, edx^^^neg     eax^^^or      eax, edx^^^mov     edx, 1^^^sar     eax, 1Fh^^^sub     edx, ecx^^^not     eax^^^and     eax, edx^^^retn^^^
_L_lock_1244$$$lea     rdi, syslog_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_410061^^^
__vsyslog_chk$$$mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     ebp, edi^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_10], r14^^^mov     r12d, esi^^^mov     [rsp+var_8], r15^^^mov     [rsp+var_30], rbx^^^sub     rsp, 0F8h^^^mov     r14, 0FFFFFFFFFFFFFFC0h^^^test    edi, 0FFFFFC00h^^^mov     [rsp+0F8h+var_F0], rdx^^^mov     r15, rcx^^^mov     [rsp+0F8h+var_58], 0^^^mov     [rsp+0F8h+var_48], 0^^^mov     r13d, fs:[r14]^^^jnz     loc_40FBB0^^^mov     edx, cs:LogMask^^^mov     eax, ebp^^^and     eax, 7^^^bt      edx, eax^^^jnb     loc_40FB77^^^mov     eax, cs:LogFacility^^^lea     rsi, [rsp+0F8h+var_48]^^^lea     rdi, [rsp+0F8h+var_58]^^^or      eax, ebp^^^test    ebp, 3F8h^^^cmovz   ebp, eax^^^call    open_memstream^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_40FD48^^^or      dword ptr [rax], 8000h^^^mov     edx, ebp^^^mov     esi, offset aD  ^^^mov     rdi, rax^^^xor     eax, eax^^^call    fprintf^^^lea     rdi, [rsp+0F8h+var_40]^^^call    time^^^lea     rsi, [rsp+0F8h+var_E8]^^^lea     rdi, [rsp+0F8h+var_40]^^^call    localtime_r^^^mov     rbp, [rbx+28h]^^^mov     rsi, [rbx+30h]^^^mov     r8d, offset _nl_C_locobj^^^mov     rcx, rax^^^mov     edx, offset aHET^^^sub     rsi, rbp^^^mov     rdi, rbp^^^call    strftime_l^^^add     rbp, rax^^^mov     rdi, rbx^^^mov     [rbx+28h], rbp^^^call    ftell^^^mov     rdi, cs:LogTag^^^mov     rbp, rax^^^test    rdi, rdi^^^jz      loc_40FBD0^^^mov     rsi, rbx^^^call    fputs_unlocked^^^test    byte ptr cs:LogStat, 1^^^jnz     loc_40FD10^^^cmp     cs:LogTag, 0^^^jz      short loc_40FA2D^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_40FE34^^^mov     byte ptr [rax], 3Ah^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     [rbx+30h], rax^^^jbe     loc_40FE22^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r12d, 0FFFFFFFFh^^^mov     fs:[r14], r13d^^^jz      loc_40FD30^^^mov     rdx, [rsp+0F8h+var_F0]^^^mov     rcx, r15^^^mov     esi, r12d^^^mov     rdi, rbx^^^call    __vfprintf_chk^^^mov     rdi, rbx^^^call    fclose^^^mov     rbx, [rsp+0F8h+var_58]^^^test    byte ptr cs:LogStat, 20h^^^jz      short loc_40FACB^^^lea     rax, [rbx+rbp]^^^mov     [rsp+0F8h+var_A8], rax^^^mov     rax, [rsp+0F8h+var_48]^^^mov     rdx, rax^^^sub     rdx, rbp^^^mov     [rsp+0F8h+var_A0], rdx^^^cmp     byte ptr [rbx+rax-1], 0Ah^^^mov     edx, 1^^^jz      short loc_40FAA3^^^mov     [rsp+0F8h+var_98], (offset aCallingFiniSLu+18h)^^^mov     [rsp+0F8h+var_90], 1^^^mov     dl, 2^^^lea     rax, [rsp+0F8h+var_88]^^^lea     rsi, [rsp+0F8h+var_A8]^^^mov     edi, 2^^^cmp     rbx, rax^^^mov     eax, 0^^^cmovz   rbx, rax^^^call    writev^^^mov     rbx, [rsp+0F8h+var_58]^^^mov     [rsp+0F8h+var_68], rbx^^^mov     [rsp+0F8h+var_60], 0^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40FAFF^^^lock cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_625^^^jmp     short loc_40FB0C^^^cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_625^^^mov     eax, cs:connected^^^test    eax, eax^^^jz      loc_40FCD0^^^cmp     cs:LogType, 1^^^jz      loc_40FCFA^^^test    eax, eax^^^jnz     loc_40FBF0^^^test    byte ptr cs:LogStat, 2^^^jnz     loc_40FDE0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40FB54^^^lock dec cs:syslog_lock^^^jnz     _L_unlock_650^^^jmp     short loc_40FB60^^^dec     cs:syslog_lock^^^jnz     _L_unlock_650^^^mov     rdi, [rsp+0F8h+var_58]^^^lea     rax, [rsp+0F8h+var_88]^^^cmp     rdi, rax^^^jz      short loc_40FB77^^^call    free^^^mov     rbx, [rsp+0F8h+var_30]^^^mov     rbp, [rsp+0F8h+var_28]^^^mov     r12, [rsp+0F8h+var_20]^^^mov     r13, [rsp+0F8h+var_18]^^^mov     r14, [rsp+0F8h+var_10]^^^mov     r15, [rsp+0F8h+var_8]^^^add     rsp, 0F8h^^^retn^^^mov     edx, edi^^^mov     esi, offset aSyslogUnknownF^^^mov     edi, 23h^^^xor     eax, eax^^^and     ebp, 3FFh^^^call    syslog^^^jmp     loc_40F921^^^mov     rdi, cs:program_invocation_short_name^^^test    rdi, rdi^^^mov     cs:LogTag, rdi^^^jz      loc_40F9E8^^^jmp     loc_40F9E0^^^mov     rdx, [rsp+0F8h+var_48]^^^mov     rsi, [rsp+0F8h+var_58]^^^mov     ecx, 4000h^^^mov     edi, cs:LogFile^^^call    send^^^test    rax, rax^^^jns     loc_40FB3C^^^mov     r12d, cs:connected^^^test    r12d, r12d^^^jz      loc_40FB2F^^^mov     edi, cs:LogFile^^^call    close^^^mov     esi, cs:LogStat^^^mov     rdi, cs:LogTag^^^xor     edx, edx^^^mov     cs:LogFile, 0FFFFFFFFh^^^mov     cs:connected, 0^^^or      esi, 8^^^call    openlog_internal^^^mov     ebx, cs:connected^^^test    ebx, ebx^^^jz      loc_40FB2F^^^mov     rdx, [rsp+0F8h+var_48]^^^mov     rsi, [rsp+0F8h+var_58]^^^mov     ecx, 4000h^^^mov     edi, cs:LogFile^^^call    send^^^test    rax, rax^^^jns     loc_40FB3C^^^cmp     cs:connected, 0^^^jz      loc_40FB2F^^^mov     edi, cs:LogFile^^^call    close^^^mov     cs:LogFile, 0FFFFFFFFh^^^mov     cs:connected, 0^^^jmp     loc_40FB2F^^^mov     esi, cs:LogStat^^^mov     rdi, cs:LogTag^^^xor     edx, edx^^^or      esi, 8^^^call    openlog_internal^^^cmp     cs:LogType, 1^^^mov     eax, cs:connected^^^jnz     loc_40FB27^^^add     [rsp+0F8h+var_48], 1^^^jmp     loc_40FB27^^^call    getpid^^^mov     esi, offset aD_0^^^mov     edx, eax^^^mov     rdi, rbx^^^xor     eax, eax^^^call    fprintf^^^jmp     loc_40F9F5^^^mov     rsi, [rsp+0F8h+var_F0]^^^mov     rdx, r15^^^mov     rdi, rbx^^^call    vfprintf^^^jmp     loc_40FA4E^^^mov     r13, 6D20666F2074756Fh^^^mov     r14, 5B2079726F6D65h^^^mov     [rsp+0F8h+var_88], r13^^^mov     [rsp+0F8h+var_80], r14^^^call    getpid^^^lea     rsi, [rsp+0F8h+var_A0+4]^^^mov     ecx, eax^^^mov     edi, 66666667h^^^nop     word ptr [rax+rax+00000000h]^^^mov     eax, ecx^^^sub     rsi, 1^^^imul    edi^^^mov     eax, ecx^^^sar     eax, 1Fh^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^add     eax, eax^^^sub     ecx, eax^^^add     ecx, 30h^^^test    edx, edx^^^mov     [rsi], cl^^^mov     ecx, edx^^^jnz     short loc_40FD80^^^lea     rbx, [rsp+0F8h+var_88]^^^lea     rdx, [rsp+0F8h+var_A0+4]^^^xor     ebp, ebp^^^lea     rdi, [rbx+0Fh]^^^sub     rdx, rsi^^^call    mempcpy^^^mov     byte ptr [rax], 5Dh^^^mov     byte ptr [rax+1], 0^^^add     rax, 1^^^sub     rax, rbx^^^mov     [rsp+0F8h+var_58], rbx^^^mov     [rsp+0F8h+var_48], rax^^^jmp     loc_40FA5E^^^xor     edx, edx^^^mov     esi, 101h^^^mov     edi, offset aDevConsole^^^xor     eax, eax^^^call    open64^^^test    eax, eax^^^mov     ebx, eax^^^js      loc_40FB3C^^^mov     rdx, rbp^^^add     rdx, [rsp+0F8h+var_58]^^^mov     edi, eax^^^mov     esi, offset aS_0^^^xor     eax, eax^^^call    dprintf^^^mov     edi, ebx^^^call    close^^^jmp     loc_40FB3C^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    __overflow^^^jmp     loc_40FA2D^^^mov     esi, 3Ah^^^mov     rdi, rbx^^^call    __overflow^^^mov     rax, [rbx+28h]^^^jmp     loc_40FA18^^^
__memmove_sse2$$$push    r13^^^mov     rax, rdi^^^sub     rax, rsi^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^cmp     rax, rdx^^^jb      loc_432288^^^cmp     rdx, 0Fh^^^mov     rax, rdx^^^jbe     short loc_43224F^^^mov     rcx, rdi^^^mov     r13, rdx^^^neg     rcx^^^and     ecx, 7^^^sub     r13, rcx^^^test    rcx, rcx^^^jz      short loc_432220^^^xor     eax, eax^^^nop     dword ptr [rax+00000000h]^^^movzx   edx, byte ptr [rsi+rax]^^^mov     [rbx+rax], dl^^^add     rax, 1^^^cmp     rcx, rax^^^jnz     short loc_432208^^^lea     rbp, [rsi+rcx]^^^lea     r12, [rbx+rcx]^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     rdi, r12^^^shr     rdx, 3^^^test    bpl, 7^^^jz      loc_432330^^^call    _wordcopy_fwd_dest_aligned^^^mov     rax, r13^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^add     rbp, rax^^^add     r12, rax^^^mov     rax, r13^^^and     eax, 7^^^test    rax, rax^^^jz      short loc_432274^^^sub     rbp, r12^^^nop     word ptr [rax+rax+00000000h]^^^movzx   edx, byte ptr [rbp+r12+0]^^^mov     [r12], dl^^^add     r12, 1^^^sub     rax, 1^^^jnz     short loc_432260^^^add     rsp, 8^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^add     rsi, rdx^^^cmp     rdx, 0Fh^^^lea     rcx, [rdx+rdi]^^^mov     r13, rdx^^^mov     rax, rdx^^^jbe     short loc_432307^^^mov     rax, rcx^^^mov     rbp, rsi^^^mov     r12, rcx^^^and     eax, 7^^^sub     r13, rax^^^test    rax, rax^^^jz      short loc_4322CF^^^sub     rsi, rax^^^sub     rcx, rax^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rsi+rax-1]^^^sub     rax, 1^^^mov     rbp, rsi^^^test    rax, rax^^^mov     r12, rcx^^^mov     [rcx+rax], dl^^^jnz     short loc_4322B8^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     rdi, r12^^^shr     rdx, 3^^^test    bpl, 7^^^jz      short loc_432340^^^call    _wordcopy_bwd_dest_aligned^^^mov     rax, r13^^^mov     rsi, rbp^^^mov     rcx, r12^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^sub     rsi, rax^^^sub     rcx, rax^^^and     r13d, 7^^^jz      loc_432274^^^mov     rax, r13^^^sub     rsi, r13^^^sub     rcx, r13^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [rsi+rax-1]^^^sub     rax, 1^^^test    rax, rax^^^mov     [rcx+rax], dl^^^jnz     short loc_432310^^^add     rsp, 8^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^call    _wordcopy_fwd_aligned^^^jmp     loc_43223C^^^call    _wordcopy_bwd_aligned^^^jmp     short loc_4322E7^^^
strtoull_l$$$push    r15             ^^^cmp     edx, 1^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^jz      loc_41A080^^^mov     eax, edx^^^shr     eax, 1Fh^^^test    al, al^^^jnz     loc_41A080^^^cmp     edx, 24h^^^jg      loc_41A080^^^movzx   eax, byte ptr [rdi]^^^mov     rbx, [rcx+68h]^^^mov     r11, rdi^^^movsx   r8, al^^^test    byte ptr [rbx+r8*2+1], 20h^^^jz      short loc_419F74^^^nop^^^add     r11, 1^^^movzx   eax, byte ptr [r11]^^^movsx   r8, al^^^test    byte ptr [rbx+r8*2+1], 20h^^^jnz     short loc_419F60^^^test    al, al^^^mov     r10d, eax^^^jz      loc_41A0DE^^^cmp     al, 2Dh^^^jz      loc_41A188^^^xor     r15d, r15d^^^cmp     al, 2Bh^^^jz      loc_41A0D0^^^cmp     r10b, 30h^^^jz      loc_41A120^^^test    edx, edx^^^lea     eax, [rdx-2]^^^jz      loc_41A0B8^^^cdqe^^^test    r10b, r10b^^^mov     rbp, ds:__strtol_ul_max_tab[rax*8]^^^movzx   r14d, ds:__strtol_ul_rem_tab[rax]^^^jz      loc_41A0E8^^^movzx   r14d, r14b^^^test    r11, r11^^^jz      loc_41A0E8^^^mov     r8, r11^^^xor     r12d, r12d^^^xor     eax, eax^^^movsxd  r13, edx^^^jmp     short loc_41A003^^^jz      loc_41A0A0^^^add     r8, 1^^^movzx   r9d, r9b^^^imul    rax, r13^^^movzx   r10d, byte ptr [r8]^^^add     rax, r9^^^test    r10b, r10b^^^jz      short loc_41A046^^^test    r8, r8^^^jz      short loc_41A04F^^^lea     r9d, [r10-30h]^^^cmp     r9b, 9^^^jbe     short loc_41A025^^^movzx   r10d, r10b^^^test    byte ptr [rbx+r10*2+1], 4^^^jz      short loc_41A046^^^mov     r9, [rcx+78h]^^^mov     r9d, [r9+r10*4]^^^sub     r9d, 37h^^^movzx   r10d, r9b^^^cmp     r10d, edx^^^jge     short loc_41A046^^^cmp     rbp, rax^^^jnb     short loc_419FE0^^^mov     r12d, 1^^^add     r8, 1^^^movzx   r10d, byte ptr [r8]^^^test    r10b, r10b^^^jnz     short loc_419FFE^^^cmp     r11, r8^^^jz      loc_41A0E8^^^test    rsi, rsi^^^jz      short loc_41A057^^^mov     [rsi], r8^^^test    r12d, r12d^^^jnz     loc_41A1CB^^^pop     rbx^^^pop     rbp^^^pop     r12^^^mov     rdx, rax^^^pop     r13^^^neg     rdx^^^test    r15d, r15d^^^pop     r14^^^cmovnz  rax, rdx^^^pop     r15^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     r10d, r14d^^^jbe     loc_419FE6^^^mov     rax, rbp^^^mov     r12d, 1^^^jmp     short loc_41A039^^^mov     eax, 8^^^mov     edx, 0Ah^^^jmp     loc_419FA7^^^movzx   r10d, byte ptr [r11+1]^^^add     r11, 1^^^jmp     loc_419F92^^^mov     r11, rdi^^^nop     dword ptr [rax+00000000h]^^^xor     eax, eax^^^test    rsi, rsi^^^jz      short loc_41A090^^^mov     rdx, r11^^^sub     rdx, rdi^^^cmp     rdx, 1^^^jle     short loc_41A10F^^^movsx   r8, byte ptr [r11-1]^^^mov     rdx, [rcx+78h]^^^cmp     dword ptr [rdx+r8*4], 58h^^^jz      loc_41A1B4^^^mov     [rsi], rdi^^^xor     eax, eax^^^jmp     loc_41A090^^^test    edx, edx^^^setz    al^^^cmp     edx, 10h^^^jz      short loc_41A12E^^^test    al, al^^^jz      short loc_41A161^^^movsx   r9, byte ptr [r11+1]^^^mov     r8, [rcx+78h]^^^cmp     dword ptr [r8+r9*4], 58h^^^jz      short loc_41A19C^^^test    al, al^^^jz      short loc_41A161^^^mov     rbp, cs:qword_49B230^^^movzx   r14d, cs:byte_49B1C6^^^mov     r10d, 30h^^^mov     edx, 8^^^jmp     loc_419FC6^^^lea     eax, [rdx-2]^^^mov     r10d, 30h^^^cdqe^^^mov     rbp, ds:__strtol_ul_max_tab[rax*8]^^^movzx   r14d, ds:__strtol_ul_rem_tab[rax]^^^jmp     loc_419FC2^^^movzx   r10d, byte ptr [r11+1]^^^mov     r15d, 1^^^add     r11, 1^^^jmp     loc_419F92^^^movzx   r10d, byte ptr [r11+2]^^^mov     eax, 0Eh^^^add     r11, 2^^^mov     edx, 10h^^^jmp     loc_419FA7^^^cmp     byte ptr [r11-2], 30h^^^jnz     loc_41A10F^^^sub     r11, 1^^^mov     [rsi], r11^^^jmp     loc_41A090^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_41A090^^^
__fxprintf$$$push    rbp^^^mov     rbp, rsp^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 0D8h^^^test    al, al^^^mov     [rbp+var_C0], rdx^^^mov     [rbp+var_B8], rcx^^^mov     [rbp+var_B0], r8^^^mov     [rbp+var_A8], r9^^^jz      short loc_4252B9^^^movaps  [rbp+var_A0], xmm0^^^movaps  [rbp+var_90], xmm1^^^movaps  [rbp+var_80], xmm2^^^movaps  [rbp+var_70], xmm3^^^movaps  [rbp+var_60], xmm4^^^movaps  [rbp+var_50], xmm5^^^movaps  [rbp+var_40], xmm6^^^movaps  [rbp+var_30], xmm7^^^test    rbx, rbx^^^lea     rax, [rbp+arg_0]^^^cmovz   rbx, cs:stderr^^^mov     r13, rsi^^^mov     [rbp+var_E8], 10h^^^mov     [rbp+var_E4], 30h^^^mov     [rbp+var_E0], rax^^^lea     rax, [rbp+var_D0]^^^mov     [rbp+var_D8], rax^^^mov     eax, [rbx+0C0h]^^^test    eax, eax^^^jle     loc_425380^^^mov     rdi, rsi^^^mov     r12, rsp^^^call    strlen^^^add     rax, 1^^^lea     rdx, ds:1Eh[rax*4]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^lea     rsi, [rsp+0F0h+var_E4+3]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^test    rax, rax^^^jz      short loc_425359^^^movzx   ecx, byte ptr [r13+0]^^^test    cl, cl^^^js      short loc_42539A^^^xor     edx, edx^^^jmp     short loc_42534A^^^movzx   ecx, byte ptr [r13+rdx+0]^^^test    cl, cl^^^js      short loc_42539A^^^movsx   ecx, cl^^^mov     [rsi+rdx*4], ecx^^^add     rdx, 1^^^cmp     rax, rdx^^^ja      short loc_425340^^^lea     rdx, [rbp+var_E8]^^^mov     rdi, rbx^^^call    vfwprintf^^^mov     rsp, r12^^^lea     rsp, [rbp-18h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^lea     rdx, [rbp+var_E8]^^^mov     rdi, rbx^^^call    vfprintf^^^lea     rsp, [rbp-18h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___12827^^^mov     edx, 2Fh^^^mov     esi, offset aFxprintf_c^^^mov     edi, offset aFmtI0x7f0^^^call    __assert_fail^^^
_L_unlock_4198$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_458C1C^^^
wcsnlen$$$test    rsi, rsi        ^^^jz      loc_446662^^^mov     eax, [rdi]^^^test    eax, eax^^^jz      loc_446662^^^cmp     rsi, 1^^^jz      loc_446665^^^mov     eax, [rdi+4]^^^test    eax, eax^^^jz      loc_446665^^^mov     rcx, rsi^^^sub     rcx, 2^^^jz      short loc_44666B^^^mov     r8d, 2^^^xor     edx, edx^^^jmp     short loc_446647^^^cmp     rcx, 1^^^lea     rax, [rdx+3]^^^jz      short locret_446653^^^mov     r9d, [rdi+rdx*4+0Ch]^^^test    r9d, r9d^^^jz      short locret_446653^^^lea     rax, [rdx+4]^^^cmp     rsi, rax^^^jz      short locret_446653^^^mov     r8d, [rdi+rax*4]^^^test    r8d, r8d^^^jz      short locret_446660^^^cmp     rcx, 3^^^lea     r8, [rdx+5]^^^jz      short loc_446658^^^mov     r11d, [rdi+rax*4+4]^^^test    r11d, r11d^^^jz      short loc_446658^^^sub     rcx, 4^^^lea     r8, [rdx+6]^^^jz      short loc_446658^^^mov     rdx, rax^^^mov     r10d, [rdi+r8*4]^^^test    r10d, r10d^^^jnz     short loc_446600^^^mov     rax, r8^^^rep retn^^^mov     rax, r8^^^retn^^^rep retn^^^xor     eax, eax^^^retn^^^mov     eax, 1^^^retn^^^mov     eax, 2^^^retn^^^
strtoll_l$$$push    r15             ^^^cmp     edx, 1^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^jz      loc_419920^^^mov     eax, edx^^^shr     eax, 1Fh^^^test    al, al^^^jnz     loc_419920^^^cmp     edx, 24h^^^jg      loc_419920^^^movzx   r9d, byte ptr [rdi]^^^mov     rbp, [rcx+68h]^^^mov     r10, rdi^^^movsx   rax, r9b^^^test    byte ptr [rbp+rax*2+1], 20h^^^jz      short loc_419803^^^nop^^^add     r10, 1^^^movzx   r9d, byte ptr [r10]^^^movsx   rax, r9b^^^test    byte ptr [rbp+rax*2+1], 20h^^^jnz     short loc_4197F0^^^test    r9b, r9b^^^jz      loc_4199AE^^^cmp     r9b, 2Dh^^^jz      loc_419A58^^^xor     r15d, r15d^^^cmp     r9b, 2Bh^^^jz      loc_4199A0^^^cmp     r9b, 30h^^^jz      loc_4199F0^^^test    edx, edx^^^lea     eax, [rdx-2]^^^jz      loc_419990^^^cdqe^^^test    r9b, r9b^^^mov     rbx, ds:__strtol_ul_max_tab[rax*8]^^^movzx   r14d, ds:__strtol_ul_rem_tab[rax]^^^jz      loc_4199B8^^^movzx   r14d, r14b^^^test    r10, r10^^^jz      loc_4199B8^^^mov     rax, r10^^^xor     r12d, r12d^^^xor     r11d, r11d^^^movsxd  r13, edx^^^jmp     short loc_419896^^^cmp     rbx, r11^^^jz      loc_419940^^^add     rax, 1^^^movzx   r8d, r8b^^^imul    r11, r13^^^movzx   r9d, byte ptr [rax]^^^add     r11, r8^^^test    r9b, r9b^^^jz      short loc_4198D9^^^test    rax, rax^^^jz      short loc_4198E2^^^lea     r8d, [r9-30h]^^^cmp     r8b, 9^^^jbe     short loc_4198B8^^^movzx   r9d, r9b^^^test    byte ptr [rbp+r9*2+1], 4^^^jz      short loc_4198D9^^^mov     r8, [rcx+78h]^^^mov     r8d, [r8+r9*4]^^^sub     r8d, 37h^^^movzx   r9d, r8b^^^cmp     edx, r9d^^^jle     short loc_4198D9^^^cmp     r11, rbx^^^jbe     short loc_419870^^^mov     r12d, 1^^^add     rax, 1^^^movzx   r9d, byte ptr [rax]^^^test    r9b, r9b^^^jnz     short loc_419891^^^cmp     r10, rax^^^jz      loc_4199B8^^^test    rsi, rsi^^^jz      short loc_4198EA^^^mov     [rsi], rax^^^test    r12d, r12d^^^jnz     short loc_419960^^^cmp     r15d, 1^^^mov     rdx, 8000000000000000h^^^sbb     rax, rax^^^add     rax, rdx^^^cmp     rax, r11^^^jb      short loc_419960^^^mov     rax, r11^^^neg     rax^^^test    r15d, r15d^^^cmovz   rax, r11^^^jmp     short loc_419930^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     r14d, r9d^^^jnb     loc_419879^^^mov     r11, rbx^^^mov     r12d, 1^^^jmp     loc_4198CC^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     r15d, 1^^^mov     rdx, 8000000000000000h^^^mov     dword ptr fs:[rax], 22h^^^sbb     rax, rax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^add     rax, rdx^^^pop     r15^^^retn^^^mov     eax, 8^^^mov     edx, 0Ah^^^jmp     loc_419838^^^movzx   r9d, byte ptr [r10+1]^^^add     r10, 1^^^jmp     loc_419823^^^mov     r10, rdi^^^nop     dword ptr [rax+00000000h]^^^xor     eax, eax^^^test    rsi, rsi^^^jz      loc_419930^^^mov     rdx, r10^^^sub     rdx, rdi^^^cmp     rdx, 1^^^jle     short loc_4199E3^^^movsx   r8, byte ptr [r10-1]^^^mov     rdx, [rcx+78h]^^^cmp     dword ptr [rdx+r8*4], 58h^^^jz      loc_419A84^^^mov     [rsi], rdi^^^xor     eax, eax^^^jmp     loc_419930^^^test    edx, edx^^^setz    al^^^cmp     edx, 10h^^^jz      short loc_4199FE^^^test    al, al^^^jz      short loc_419A32^^^movsx   r9, byte ptr [r10+1]^^^mov     r8, [rcx+78h]^^^cmp     dword ptr [r8+r9*4], 58h^^^jz      short loc_419A6C^^^test    al, al^^^jz      short loc_419A32^^^mov     r9d, 30h^^^mov     r14d, 7^^^mov     rbx, 1FFFFFFFFFFFFFFFh^^^mov     edx, 8^^^jmp     loc_419857^^^lea     eax, [rdx-2]^^^mov     r9d, 30h^^^cdqe^^^mov     rbx, ds:__strtol_ul_max_tab[rax*8]^^^movzx   r14d, ds:__strtol_ul_rem_tab[rax]^^^jmp     loc_419853^^^movzx   r9d, byte ptr [r10+1]^^^mov     r15d, 1^^^add     r10, 1^^^jmp     loc_419823^^^movzx   r9d, byte ptr [r10+2]^^^mov     eax, 0Eh^^^add     r10, 2^^^mov     edx, 10h^^^jmp     loc_419838^^^cmp     byte ptr [r10-2], 30h^^^jnz     loc_4199E3^^^sub     r10, 1^^^mov     [rsi], r10^^^jmp     loc_419930^^^
qsort$$$jmp     qsort_r_constprop_1^^^
__dlinfo$$$sub     rsp, 28h^^^mov     [rsp+28h+var_20], rdi^^^mov     [rsp+28h+var_18], esi^^^mov     edi, offset dlinfo_doit^^^mov     rsi, rsp^^^mov     [rsp+28h+var_28], rcx^^^mov     [rsp+28h+var_10], rdx^^^call    _dlerror_run^^^cmp     eax, 1^^^sbb     eax, eax^^^add     rsp, 28h^^^not     eax^^^retn^^^
_IO_un_link$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    byte ptr [rdi], 80h^^^jz      loc_42B784^^^mov     eax, 0^^^xor     ebp, ebp^^^test    rax, rax^^^setnz   bpl^^^jnz     loc_42B7A8^^^mov     [rsp+38h+var_38], offset flush_cleanup^^^mov     [rsp+38h+var_30], 0^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C5628^^^jz      short loc_42B65D^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B649^^^lock cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_402^^^jmp     short loc_42B656^^^cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_402^^^mov     cs:qword_6C5628, rdx^^^mov     ecx, [rbx]^^^add     cs:dword_6C5624, 1^^^mov     cs:run_fp, rbx^^^mov     eax, ecx^^^and     eax, 8000h^^^jnz     short loc_42B6C0^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_42B6BA^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B6A6^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_437^^^jmp     short loc_42B6AF^^^cmpxchg [rdx], esi^^^jnz     _L_lock_437^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     ecx, [rbx]^^^mov     rdx, cs:_IO_list_all^^^test    rdx, rdx^^^jz      short loc_42B706^^^cmp     rbx, rdx^^^jz      loc_42B7F0^^^mov     rax, [rdx+68h]^^^test    rax, rax^^^jz      short loc_42B706^^^add     rdx, 68h^^^cmp     rbx, rax^^^jnz     short loc_42B6F9^^^jmp     loc_42B790^^^cmp     rbx, rax^^^jz      loc_42B790^^^lea     rdx, [rax+68h]^^^mov     rax, [rax+68h]^^^test    rax, rax^^^jnz     short loc_42B6F0^^^mov     eax, ecx^^^and     al, 7Fh^^^and     ch, 80h^^^mov     [rbx], eax^^^jnz     short loc_42B729^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jz      loc_42B7C0^^^mov     eax, cs:dword_6C5624^^^mov     cs:run_fp, 0^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C5624, eax^^^jnz     short loc_42B776^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B76A^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_508^^^jmp     short loc_42B776^^^dec     cs:list_all_lock^^^jnz     _L_unlock_508^^^test    ebp, ebp^^^jz      short loc_42B784^^^xor     esi, esi^^^mov     rdi, rsp^^^call    near ptr 0^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rbx+68h]^^^add     cs:_IO_list_all_stamp, 1^^^mov     [rdx], rax^^^jmp     loc_42B706^^^xor     edx, edx^^^mov     esi, offset flush_cleanup^^^mov     rdi, rsp^^^call    near ptr 0^^^jmp     loc_42B617^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B7DC^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_561^^^jmp     short loc_42B7E4^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_561^^^jmp     loc_42B729^^^mov     rax, [rbx+68h]^^^add     cs:_IO_list_all_stamp, 1^^^mov     cs:_IO_list_all, rax^^^jmp     loc_42B706^^^
_L_unlock_1451$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     locret_403310^^^
dcgettext$$$mov     r9d, edx^^^xor     r8d, r8d^^^xor     ecx, ecx^^^xor     edx, edx^^^jmp     __dcigettext^^^
__gconv_compare_alias$$$mov     eax, 0^^^mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     [rsp+var_8], r12^^^sub     rsp, 38h^^^test    rax, rax^^^mov     rbx, rdi^^^mov     rbp, rsi^^^jz      loc_458962^^^mov     esi, offset __gconv_read_conf^^^mov     edi, offset once_0^^^call    near ptr 0^^^lea     rdx, [rsp+38h+var_28]^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    __gconv_compare_alias_cache^^^test    eax, eax^^^jnz     short loc_4588F8^^^mov     eax, [rsp+38h+var_28]^^^mov     rbx, [rsp+38h+var_18]^^^mov     rbp, [rsp+38h+var_10]^^^mov     r12, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     rdi, rsp^^^mov     [rsp+38h+var_38], rbp^^^call    tfind^^^test    rax, rax^^^jz      short loc_458954^^^mov     rax, [rax]^^^mov     r12, [rax+8]^^^test    r12, r12^^^cmovz   r12, rbp^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     rdi, rsp^^^mov     [rsp+38h+var_38], rbx^^^call    tfind^^^test    rax, rax^^^jz      short loc_458959^^^mov     rax, [rax]^^^mov     rdi, [rax+8]^^^test    rdi, rdi^^^cmovz   rdi, rbx^^^mov     rsi, r12^^^call    sub_4003A0^^^jmp     short loc_4588DE^^^mov     r12, rbp^^^jmp     short loc_458921^^^mov     rdi, rbx^^^nop     dword ptr [rax+00h]^^^jmp     short loc_45894A^^^cmp     cs:once_0, 0^^^jnz     loc_4588C6^^^call    __gconv_read_conf^^^or      cs:once_0, 2^^^jmp     loc_4588C6^^^
sub_471972$$$mov     rdi, [rbp-1100h]^^^mov     rdx, [rbp-1100h]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp-10F4h], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      loc_47370E^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     dword ptr [rbp-1138h], 1^^^mov     dword ptr [rbp-1144h], 0^^^mov     rax, ds:step4_jumps_13290[rax*8]^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     dword ptr [rbp-1138h], 1^^^mov     dword ptr [rbp-1144h], 0^^^jmp     loc_47047C^^^
_dl_check_map_versions$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbx^^^sub     rsp, 98h^^^mov     rax, [rdi+68h]^^^mov     [rbp+var_7C], esi^^^mov     [rbp+var_80], edx^^^test    rax, rax^^^jz      loc_48FE51^^^mov     rax, [rax+8]^^^mov     rdx, [rdi+168h]^^^mov     [rbp+var_78], rax^^^mov     rax, [rdi+158h]^^^mov     [rbp+var_A8], rdx^^^test    rax, rax^^^mov     [rbp+var_A0], rax^^^jz      loc_48FCD3^^^mov     rcx, [rax+8]^^^mov     rax, [rdi]^^^add     rcx, rax^^^cmp     word ptr [rcx], 1^^^mov     [rbp+var_88], rcx^^^jnz     loc_48FE99^^^mov     rdx, [rbp+var_88]^^^xor     r14d, r14d^^^xor     r15d, r15d^^^nop^^^mov     eax, [rdx+4]^^^add     rax, [rbp+var_78]^^^mov     [rbp+var_90], rax^^^mov     rax, [r13+30h]^^^lea     rax, [rax+rax*8]^^^shl     rax, 4^^^mov     r12, ds:_dl_ns[rax]^^^test    r12, r12^^^jz      loc_48FC60^^^mov     rbx, [rbp+var_90]^^^jmp     short loc_48FBA6^^^mov     r12, [r12+18h]^^^test    r12, r12^^^jz      loc_48FC60^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    _dl_name_match_p^^^test    eax, eax^^^jz      short loc_48FB98^^^test    r12, r12^^^jz      loc_48FE80^^^mov     ecx, [rbp+var_80]^^^test    ecx, ecx^^^jnz     loc_48FF0E^^^mov     rcx, [rbp+var_88]^^^mov     ebx, [rcx+8]^^^add     rbx, rcx^^^jmp     short loc_48FBE3^^^add     rbx, rax^^^movzx   eax, word ptr [rbx+4]^^^mov     rdi, [r13+8]^^^mov     ecx, [rbx+8]^^^mov     r8, [r12+28h]^^^add     rcx, [rbp+var_78]^^^mov     edx, [rbx]^^^mov     rsi, [r13+30h]^^^and     eax, 2^^^cmp     byte ptr [rdi], 0^^^jnz     short loc_48FC0F^^^mov     rdi, cs:_dl_argv^^^mov     rdi, [rdi]^^^mov     r9d, [rbp+var_7C]^^^mov     [rsp+0C0h+var_C0], eax^^^call    match_symbol^^^or      r15d, eax^^^movzx   eax, word ptr [rbx+6]^^^and     eax, 7FFFh^^^cmp     r14d, eax^^^cmovb   r14d, eax^^^mov     eax, [rbx+0Ch]^^^test    eax, eax^^^jnz     short loc_48FBE0^^^mov     rdx, [rbp+var_88]^^^mov     eax, [rdx+0Ch]^^^test    eax, eax^^^jz      loc_48FCD9^^^add     rdx, rax^^^mov     [rbp+var_88], rdx^^^jmp     loc_48FB60^^^mov     esi, [r13+2C0h]^^^test    esi, esi^^^jz      loc_48FE80^^^xor     ebx, ebx^^^mov     [rbp+var_94], r14d^^^mov     r12, [rbp+var_90]^^^jmp     short loc_48FC98^^^add     ebx, 1^^^cmp     ebx, [r13+2C0h]^^^jnb     loc_48FE80^^^mov     rdx, [r13+2B8h]^^^mov     eax, ebx^^^mov     rdi, r12^^^lea     r14, ds:0[rax*8]^^^mov     rsi, [rdx+rax*8]^^^call    _dl_name_match_p^^^test    eax, eax^^^jz      short loc_48FC88^^^mov     rax, [r13+2B8h]^^^mov     r12, r14^^^mov     r14d, [rbp+var_94]^^^mov     r12, [rax+r12]^^^jmp     loc_48FBB5^^^xor     r14d, r14d^^^xor     r15d, r15d^^^cmp     [rbp+var_A8], 0^^^jz      short loc_48FD12^^^mov     rcx, [rbp+var_A8]^^^mov     rdx, [rcx+8]^^^add     rdx, [r13+0]^^^jmp     short loc_48FCFB^^^add     rdx, rax^^^movzx   eax, word ptr [rdx+4]^^^and     eax, 7FFFh^^^cmp     r14d, eax^^^cmovb   r14d, eax^^^mov     eax, [rdx+10h]^^^test    eax, eax^^^jnz     short loc_48FCF8^^^test    r14d, r14d^^^jnz     short loc_48FD29^^^lea     rsp, [rbp-28h]^^^mov     eax, r15d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^add     r14d, 1^^^mov     esi, 18h^^^mov     edi, r14d^^^call    calloc^^^test    rax, rax^^^mov     [r13+2E0h], rax^^^jz      loc_48FE59^^^mov     rdx, [r13+1C8h]^^^cmp     [rbp+var_A0], 0^^^mov     [r13+2E8h], r14d^^^mov     rdx, [rdx+8]^^^mov     [r13+330h], rdx^^^jz      short loc_48FDE8^^^mov     rdx, [rbp+var_A0]^^^mov     r8, [rbp+var_78]^^^mov     rdi, [rdx+8]^^^add     rdi, [r13+0]^^^mov     edx, [rdi+8]^^^add     rdx, rdi^^^jmp     short loc_48FD93^^^add     rdx, rcx^^^movzx   esi, word ptr [rdx+6]^^^mov     ecx, esi^^^and     cx, 7FFFh^^^movzx   r9d, cx^^^cmp     r14d, r9d^^^jbe     short loc_48FDD5^^^movzx   ecx, cx^^^and     esi, 8000h^^^mov     r9d, [rdx]^^^lea     rcx, [rcx+rcx*2]^^^lea     rcx, [rax+rcx*8]^^^mov     [rcx+0Ch], esi^^^mov     esi, [rdx+8]^^^mov     [rcx+8], r9d^^^add     rsi, r8^^^mov     [rcx], rsi^^^mov     esi, [rdi+4]^^^add     rsi, r8^^^mov     [rcx+10h], rsi^^^mov     ecx, [rdx+0Ch]^^^test    ecx, ecx^^^jnz     short loc_48FD90^^^mov     edx, [rdi+0Ch]^^^test    edx, edx^^^jz      short loc_48FDE8^^^add     rdi, rdx^^^jmp     short loc_48FD80^^^cmp     [rbp+var_A8], 0^^^jz      loc_48FD17^^^mov     rcx, [rbp+var_A8]^^^mov     r8, [rbp+var_78]^^^mov     rdx, [rcx+8]^^^add     rdx, [r13+0]^^^jmp     short loc_48FE13^^^add     rdx, rcx^^^test    byte ptr [rdx+2], 1^^^mov     esi, [rdx+0Ch]^^^jnz     short loc_48FE45^^^movzx   ecx, word ptr [rdx+4]^^^mov     esi, [rdx+rsi]^^^mov     edi, [rdx+8]^^^and     ecx, 7FFFh^^^add     rsi, r8^^^lea     rcx, [rcx+rcx*2]^^^lea     rcx, [rax+rcx*8]^^^mov     [rcx+8], edi^^^mov     [rcx], rsi^^^mov     qword ptr [rcx+10h], 0^^^mov     ecx, [rdx+10h]^^^test    ecx, ecx^^^jnz     short loc_48FE10^^^jmp     loc_48FD17^^^xor     r15d, r15d^^^jmp     loc_48FD17^^^mov     edi, 0Ch^^^mov     ecx, offset aCannotAlloca_5^^^mov     rsi, [r13+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48FE76^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^xor     edx, edx^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___10796^^^mov     edx, 0E6h^^^mov     esi, offset aDlVersion_c^^^mov     edi, offset aNeededVoid0^^^call    __assert_fail^^^mov     [rbp+var_3D], 0^^^movzx   edi, word ptr [rcx]^^^lea     rsi, [rbp+var_3D]^^^xor     ecx, ecx^^^mov     edx, 0Ah^^^mov     [rbp+var_70], offset aUnsupportedVer^^^call    _itoa_word^^^mov     rdi, rax^^^mov     [rbp+var_68], rax^^^mov     [rbp+var_60], offset aOfVerneedRecor^^^call    strlen^^^add     rax, 46h^^^mov     rsi, [rbp+var_70]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rbx, [rsp+0C0h+var_A9]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_68]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_60]^^^mov     rdi, rax^^^call    sub_400320^^^mov     rcx, rbx^^^xor     edi, edi^^^jmp     loc_48FE63^^^test    byte ptr [r12+315h], 2^^^jz      loc_48FBC9^^^jmp     loc_48FC35^^^
_L_unlock_127$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_475199^^^
dprintf$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_4249E6^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rdx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    vdprintf^^^add     rsp, 0D8h^^^retn^^^
__gconv_transform_ucs4_internal$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rsi^^^push    r14^^^mov     r14, rdx^^^lea     rdx, [rsi+38h]^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 98h^^^mov     [rsp+0C8h+var_60], rdx^^^mov     edx, [rsi+10h]^^^mov     [rsp+0C8h+var_88], rcx^^^mov     [rsp+0C8h+var_80], r8^^^mov     [rsp+0C8h+var_78], r9^^^mov     ebx, [rsp+0C8h+arg_0]^^^test    dl, 1^^^mov     [rsp+0C8h+var_68], rax^^^mov     [rsp+0C8h+var_90], 0^^^jnz     short loc_45A425^^^cmp     qword ptr [rdi+68h], 0^^^mov     rax, [rdi+90h]^^^mov     [rsp+0C8h+var_90], rax^^^jz      short loc_45A425^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0C8h+var_90], rax^^^test    ebx, ebx^^^jnz     loc_45A895^^^cmp     [rsp+0C8h+var_80], 0^^^jnz     loc_45A85A^^^mov     r13, [r15]^^^mov     rax, [r15+8]^^^cmp     [rsp+0C8h+var_78], 0^^^mov     [rsp+0C8h+var_70], 0^^^mov     esi, [rsp+0C8h+arg_8]^^^mov     [rsp+0C8h+var_58], 0^^^mov     [rsp+0C8h+var_98], rax^^^lea     rax, [rsp+0C8h+var_58]^^^cmovz   rax, [rsp+0C8h+var_70]^^^test    esi, esi^^^mov     [rsp+0C8h+var_70], rax^^^jz      loc_45A634^^^mov     rax, [r15+20h]^^^mov     edi, [rax]^^^test    dil, 7^^^jz      loc_45A634^^^cmp     [rsp+0C8h+var_80], 0^^^jnz     loc_45A80D^^^mov     r8, rdi^^^mov     rcx, [r14]^^^and     r8d, 7^^^cmp     [rsp+0C8h+var_88], rcx^^^jbe     loc_45A942^^^cmp     r8, 3^^^ja      loc_45A942^^^mov     rsi, r8^^^movzx   r9d, byte ptr [rcx]^^^add     rcx, 1^^^mov     [rax+rsi+4], r9b^^^add     rsi, 1^^^mov     [r14], rcx^^^cmp     rsi, 3^^^ja      short loc_45A4DB^^^cmp     [rsp+0C8h+var_88], rcx^^^ja      short loc_45A4BA^^^mov     r12, rcx^^^cmp     rsi, 3^^^jbe     loc_45A92E^^^cmp     byte ptr [rax+4], 80h^^^ja      loc_45A8F6^^^movzx   edx, byte ptr [rax+7]^^^mov     [r13+0], dl^^^movzx   edx, byte ptr [rax+6]^^^mov     [r13+1], dl^^^movzx   edx, byte ptr [rax+5]^^^mov     [r13+2], dl^^^movzx   edx, byte ptr [rax+4]^^^mov     [r13+3], dl^^^mov     edi, [rax]^^^add     r13, 4^^^mov     r12, [r14]^^^and     edi, 0FFFFFFF8h^^^mov     [rax], edi^^^mov     edx, [r15+10h]^^^jmp     loc_45A637^^^mov     rdx, r12^^^nop     dword ptr [rax+00h]^^^cmp     [rsp+0C8h+var_88], rdx^^^mov     [r14], rdx^^^mov     [rsp+0C8h+var_A8], 0^^^mov     [rsp+0C8h+var_AC], 4^^^jz      short loc_45A56A^^^lea     rax, [rbx+4]^^^cmp     [rsp+0C8h+var_98], rax^^^sbb     edx, edx^^^add     edx, 1^^^cmp     [rsp+0C8h+var_98], rax^^^mov     [rsp+0C8h+var_A8], dl^^^sbb     eax, eax^^^and     eax, 0FFFFFFFEh^^^add     eax, 7^^^mov     [rsp+0C8h+var_AC], eax^^^cmp     [rsp+0C8h+var_80], 0^^^jnz     loc_45A7E8^^^mov     rbp, [r15+30h]^^^test    rbp, rbp^^^jz      short loc_45A5AA^^^nop^^^mov     rdi, [rbp+8]^^^test    rdi, rdi^^^jz      short loc_45A5A1^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rbp+18h]^^^mov     r8, rbx^^^mov     rcx, r13^^^mov     rdx, [r14]^^^mov     rsi, r12^^^call    qword ptr [rbp+8]^^^mov     rbp, [rbp+20h]^^^test    rbp, rbp^^^jnz     short loc_45A580^^^add     dword ptr [r15+14h], 1^^^test    byte ptr [r15+10h], 1^^^jnz     loc_45A826^^^cmp     rbx, r13^^^jbe     loc_45A71B^^^mov     rax, [r15]^^^mov     rdi, [rsp+0C8h+var_90]^^^mov     [rsp+0C8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0C8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0C8h+var_C8], 0^^^mov     r9, [rsp+0C8h+var_78]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0C8h+var_48]^^^mov     rsi, [rsp+0C8h+var_60]^^^mov     rdi, [rsp+0C8h+var_68]^^^mov     [rsp+0C8h+var_C0], eax^^^call    [rsp+0C8h+var_90]^^^cmp     eax, 4^^^jz      loc_45A710^^^mov     rdx, [rsp+0C8h+var_48]^^^cmp     rdx, rbx^^^jnz     loc_45A83B^^^test    eax, eax^^^jnz     loc_45A849^^^mov     r13, [r15]^^^mov     edx, [r15+10h]^^^mov     r12, [r14]^^^mov     rsi, [rsp+0C8h+var_88]^^^mov     rax, [rsp+0C8h+var_98]^^^mov     rbx, r13^^^sub     rsi, r12^^^sub     rax, r13^^^cmp     rsi, rax^^^cmovle  rax, rsi^^^lea     rsi, [rax+3]^^^test    rax, rax^^^cmovns  rsi, rax^^^sar     rsi, 2^^^test    rsi, rsi^^^jz      loc_45A529^^^and     edx, 2^^^jnz     short loc_45A6D0^^^xor     ecx, ecx^^^cmp     [rsp+0C8h+var_70], 0^^^mov     rdx, r12^^^jz      short loc_45A6A8^^^nop     dword ptr [rax+rax+00h]^^^mov     eax, [rdx]^^^bswap   eax^^^test    eax, eax^^^js      loc_45A7CC^^^add     rcx, 1^^^mov     [rbx], eax^^^add     rdx, 4^^^add     rbx, 4^^^cmp     rsi, rcx^^^jnz     short loc_45A680^^^jmp     loc_45A530^^^mov     eax, [rdx]^^^bswap   eax^^^test    eax, eax^^^js      loc_45A867^^^add     rcx, 1^^^mov     [rbx], eax^^^add     rdx, 4^^^add     rbx, 4^^^cmp     rsi, rcx^^^jnz     short loc_45A6A8^^^jmp     loc_45A530^^^cmp     [rsp+0C8h+var_70], 0^^^jz      loc_45A79D^^^xor     edx, edx^^^xchg    ax, ax^^^mov     eax, [r12+rdx*4]^^^bswap   eax^^^test    eax, eax^^^js      loc_45A7FF^^^mov     [rbx], eax^^^add     rbx, 4^^^add     rdx, 1^^^cmp     rsi, rdx^^^jnz     short loc_45A6E0^^^lea     rdx, [r12+rsi*4]^^^jmp     loc_45A530^^^cmp     [rsp+0C8h+var_AC], 5^^^jz      loc_45A62D^^^cmp     [rsp+0C8h+var_A8], 0^^^jz      short loc_45A787^^^mov     ecx, [rsp+0C8h+arg_8]^^^test    ecx, ecx^^^jz      short loc_45A787^^^mov     rdx, [r14]^^^mov     rax, [rsp+0C8h+var_88]^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45A87C^^^xor     ecx, ecx^^^cmp     [rsp+0C8h+var_88], rdx^^^mov     rax, rdx^^^jbe     loc_45A7F8^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r15+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, [rsp+0C8h+var_88]^^^mov     [r14], rax^^^jnz     short loc_45A752^^^sub     eax, edx^^^mov     rcx, [r15+20h]^^^mov     [rsp+0C8h+var_AC], 7^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     eax, [rsp+0C8h+var_AC]^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdx, r12^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^mov     eax, [rdx]^^^bswap   eax^^^test    eax, eax^^^js      loc_45A867^^^add     rcx, 1^^^mov     [rbx], eax^^^add     rdx, 4^^^add     rbx, 4^^^cmp     rsi, rcx^^^jnz     short loc_45A7A8^^^jmp     loc_45A530^^^cmp     [rsp+0C8h+var_80], 0^^^mov     [r14], rdx^^^mov     [rsp+0C8h+var_A8], 0^^^mov     [rsp+0C8h+var_AC], 6^^^jz      loc_45A576^^^mov     rdx, [rsp+0C8h+var_80]^^^mov     [rdx], rbx^^^jmp     short loc_45A787^^^xor     eax, eax^^^jmp     loc_45A772^^^mov     rax, [rsp+0C8h+var_70]^^^add     qword ptr [rax], 1^^^jmp     loc_45A6F4^^^mov     ecx, offset __PRETTY_FUNCTION___11711^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0C8h+var_78]^^^mov     [r15], rbx^^^mov     rax, [rsp+0C8h+var_58]^^^add     [rdx], rax^^^jmp     loc_45A71B^^^sub     rdx, rbx^^^add     [r14], rdx^^^test    eax, eax^^^jz      loc_45A62D^^^cmp     eax, 7^^^mov     [rsp+0C8h+var_AC], eax^^^setz    [rsp+0C8h+var_A8]^^^jmp     loc_45A71B^^^mov     rax, [rsp+0C8h+var_80]^^^mov     r13, [rax]^^^jmp     loc_45A43C^^^mov     rbx, r13^^^mov     [rsp+0C8h+var_A8], 0^^^mov     [rsp+0C8h+var_AC], 6^^^jmp     loc_45A56A^^^mov     ecx, offset __PRETTY_FUNCTION___11711^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^cmp     [rsp+0C8h+var_80], 0^^^jnz     short loc_45A915^^^mov     rax, [r15+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [r15+10h], 1^^^mov     [rsp+0C8h+var_AC], 0^^^jnz     loc_45A787^^^mov     rdi, [rsp+0C8h+var_90]^^^call    _dl_mcount_wrapper_check^^^mov     edx, [rsp+0C8h+arg_8]^^^mov     [rsp+0C8h+var_C8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0C8h+var_78]^^^xor     ecx, ecx^^^mov     rsi, [rsp+0C8h+var_60]^^^mov     rdi, [rsp+0C8h+var_68]^^^mov     [rsp+0C8h+var_C0], edx^^^xor     edx, edx^^^call    [rsp+0C8h+var_90]^^^mov     [rsp+0C8h+var_AC], eax^^^jmp     loc_45A787^^^and     edx, 2^^^jnz     loc_45A51B^^^sub     r8, rsi^^^mov     [rsp+0C8h+var_AC], 6^^^add     rcx, r8^^^mov     [r14], rcx^^^jmp     loc_45A787^^^mov     ecx, offset __PRETTY_FUNCTION___11711^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^and     edi, 0FFFFFFF8h^^^mov     [rsp+0C8h+var_AC], 7^^^or      edi, esi^^^mov     [rax], edi^^^jmp     loc_45A787^^^mov     r12, rcx^^^mov     rsi, r8^^^jmp     loc_45A4DE^^^
_L_lock_14350$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40937B^^^
cancel_handler$$$cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40F468^^^lock dec cs:syslog_lock^^^jnz     _L_unlock_7^^^jmp     short locret_40F474^^^dec     cs:syslog_lock^^^jnz     _L_unlock_7^^^retn^^^
new_do_write$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_10], r12^^^mov     rbx, rdi^^^mov     [rsp+var_8], r13^^^mov     [rsp+var_18], rbp^^^sub     rsp, 28h^^^mov     eax, [rdi]^^^mov     r12, rsi^^^mov     r13, rdx^^^test    ah, 10h^^^jz      loc_429750^^^mov     qword ptr [rdi+90h], 0FFFFFFFFFFFFFFFFh^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rdx, r13^^^mov     rsi, r12^^^call    qword ptr [rax+78h]^^^test    rax, rax^^^mov     rbp, rax^^^movzx   edi, word ptr [rbx+80h]^^^jnz     loc_429790^^^mov     edi, [rbx+0C0h]^^^mov     rax, [rbx+38h]^^^test    edi, edi^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^jle     loc_4297C0^^^mov     rax, [rbx+40h]^^^mov     [rbx+30h], rax^^^mov     rax, rbp^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rdx, [rdi+10h]^^^mov     rsi, [rdi+20h]^^^cmp     rdx, rsi^^^jz      loc_4296D7^^^mov     rax, [rdi+0D8h]^^^sub     rsi, rdx^^^xor     ebp, ebp^^^mov     edx, 1^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_42972B^^^mov     [rbx+90h], rax^^^jmp     loc_4296D7^^^test    di, di^^^jz      loc_4296FD^^^movzx   edi, di^^^mov     edx, eax^^^mov     rsi, r12^^^sub     edi, 1^^^call    _IO_adjust_column^^^add     eax, 1^^^mov     [rbx+80h], ax^^^jmp     loc_4296FD^^^test    dword ptr [rbx], 202h^^^jnz     loc_429727^^^jmp     loc_429723^^^
_L_lock_14224$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4091F6^^^
__stpcpy_sse2_unaligned$$$mov     rcx, rsi^^^and     rcx, 3Fh^^^cmp     rcx, 20h        ^^^jbe     loc_4444A3^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0Fh^^^pxor    xmm0, xmm0^^^pxor    xmm1, xmm1^^^pcmpeqb xmm1, xmmword ptr [rsi]^^^pmovmskb edx, xmm1^^^shr     rdx, cl^^^test    rdx, rdx^^^jnz     loc_444500^^^pcmpeqb xmm0, xmmword ptr [rsi+10h]^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     loc_444540^^^movdqu  xmm1, xmmword ptr [rsi+rcx]^^^movdqu  xmmword ptr [rdi], xmm1^^^sub     rdi, rcx^^^mov     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movaps  xmm2, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movaps  xmm3, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movaps  xmm4, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm3^^^pcmpeqb xmm0, xmm4^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movaps  xmm1, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm4^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movaps  xmm2, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movaps  xmm3, xmmword ptr [rsi+rcx+10h]^^^movdqu  xmmword ptr [rdi+rcx], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^add     rcx, 10h^^^test    rdx, rdx^^^jnz     loc_4444E0^^^movdqu  xmmword ptr [rdi+rcx], xmm3^^^mov     rdx, rsi^^^lea     rsi, [rsi+rcx+10h]^^^and     rsi, 0FFFFFFFFFFFFFFC0h^^^sub     rdx, rsi^^^sub     rdi, rdx^^^movaps  xmm2, xmmword ptr [rsi]^^^movaps  xmm4, xmm2^^^movaps  xmm5, xmmword ptr [rsi+10h]^^^movaps  xmm3, xmmword ptr [rsi+20h]^^^movaps  xmm6, xmm3^^^movaps  xmm7, xmmword ptr [rsi+30h]^^^pminub  xmm2, xmm5^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb edx, xmm3^^^test    rdx, rdx^^^jnz     short loc_444439^^^add     rdi, 40h^^^add     rsi, 40h^^^movdqu  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm2, xmmword ptr [rsi]^^^movdqa  xmm4, xmm2^^^movdqu  xmmword ptr [rdi-30h], xmm5^^^movaps  xmm5, xmmword ptr [rsi+10h]^^^pminub  xmm2, xmm5^^^movaps  xmm3, xmmword ptr [rsi+20h]^^^movdqu  xmmword ptr [rdi-20h], xmm6^^^movaps  xmm6, xmm3^^^movdqu  xmmword ptr [rdi-10h], xmm7^^^movaps  xmm7, xmmword ptr [rsi+30h]^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb edx, xmm3^^^test    rdx, rdx^^^jz      short loc_4443EE^^^pxor    xmm1, xmm1^^^pcmpeqb xmm0, xmm4^^^pcmpeqb xmm1, xmm5^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm1^^^test    rdx, rdx^^^jnz     loc_444560      ^^^test    rcx, rcx^^^jnz     loc_444580^^^pcmpeqb xmm0, xmm6^^^pcmpeqb xmm1, xmm7^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm1^^^test    rdx, rdx^^^jnz     loc_4445B0^^^bsf     rdx, rcx^^^movdqu  xmmword ptr [rdi], xmm4^^^movdqu  xmmword ptr [rdi+10h], xmm5^^^movdqu  xmmword ptr [rdi+20h], xmm6^^^add     rsi, 30h^^^add     rdi, 30h^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^pxor    xmm0, xmm0^^^movdqu  xmm1, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+10h]^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     short loc_444528^^^pcmpeqb xmm0, xmm2^^^movdqu  xmmword ptr [rdi], xmm1^^^pmovmskb edx, xmm0^^^test    rdx, rdx^^^jnz     short loc_444520^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0Fh^^^jmp     loc_4442E0^^^add     rdi, rcx^^^add     rsi, rcx^^^bsf     rdx, rdx^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^add     rsi, rcx^^^bsf     rdx, rdx^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^add     rsi, 10h^^^add     rdi, 10h^^^bsf     rdx, rdx^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx             ^^^bsf     rdx, rdx^^^add     rsi, rcx^^^add     rdx, 10h^^^sub     rdx, rcx^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^bsf     rdx, rdx        ^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx             ^^^bsf     rdx, rcx^^^movdqu  xmmword ptr [rdi], xmm4^^^add     rsi, 10h^^^add     rdi, 10h^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^bsf     rdx, rdx^^^movdqu  xmmword ptr [rdi], xmm4^^^movdqu  xmmword ptr [rdi+10h], xmm5^^^add     rsi, 20h^^^add     rdi, 20h^^^lea     r11, off_49D3B0^^^movsxd  rcx, dword ptr [r11+rdx*4]^^^lea     rcx, [r11+rcx]^^^jmp     rcx^^^mov     [rdi], dh       ^^^lea     rax, [rdi]^^^retn^^^mov     dx, [rsi]       ^^^mov     [rdi], dx^^^lea     rax, [rdi+1]^^^retn^^^mov     cx, [rsi]       ^^^mov     [rdi], cx^^^mov     [rdi+2], dh^^^lea     rax, [rdi+2]^^^retn^^^mov     edx, [rsi]      ^^^mov     [rdi], edx^^^lea     rax, [rdi+3]^^^retn^^^mov     ecx, [rsi]      ^^^mov     [rdi+4], dh^^^mov     [rdi], ecx^^^lea     rax, [rdi+4]^^^retn^^^mov     ecx, [rsi]      ^^^mov     dx, [rsi+4]^^^mov     [rdi], ecx^^^mov     [rdi+4], dx^^^lea     rax, [rdi+5]^^^retn^^^mov     ecx, [rsi]      ^^^mov     edx, [rsi+3]^^^mov     [rdi], ecx^^^mov     [rdi+3], edx^^^lea     rax, [rdi+6]^^^retn^^^mov     rdx, [rsi]      ^^^mov     [rdi], rdx^^^lea     rax, [rdi+7]^^^retn^^^mov     rcx, [rsi]      ^^^mov     [rdi+8], dh^^^mov     [rdi], rcx^^^lea     rax, [rdi+8]^^^retn^^^mov     rcx, [rsi]      ^^^mov     dx, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], dx^^^lea     rax, [rdi+9]^^^retn^^^mov     rcx, [rsi]      ^^^mov     edx, [rsi+7]^^^mov     [rdi], rcx^^^mov     [rdi+7], edx^^^lea     rax, [rdi+0Ah]^^^retn^^^mov     rcx, [rsi]      ^^^mov     edx, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], edx^^^lea     rax, [rdi+0Bh]^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+5]^^^mov     [rdi], rcx^^^mov     [rdi+5], rdx^^^lea     rax, [rdi+0Ch]^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+6]^^^mov     [rdi], rcx^^^mov     [rdi+6], rdx^^^lea     rax, [rdi+0Dh]^^^retn^^^mov     rcx, [rsi]      ^^^mov     rdx, [rsi+7]^^^mov     [rdi], rcx^^^mov     [rdi+7], rdx^^^lea     rax, [rdi+0Eh]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmmword ptr [rdi], xmm0^^^lea     rax, [rdi+0Fh]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], dh^^^lea     rax, [rdi+10h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     cx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], cx^^^lea     rax, [rdi+11h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Fh], ecx^^^lea     rax, [rdi+12h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], ecx^^^lea     rax, [rdi+13h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     ecx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], ecx^^^mov     [rdi+14h], dh^^^lea     rax, [rdi+14h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+0Eh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Eh], rcx^^^lea     rax, [rdi+15h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+0Fh], rcx^^^lea     rax, [rdi+16h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rcx^^^lea     rax, [rdi+17h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rcx^^^mov     [rdi+18h], dh^^^lea     rax, [rdi+18h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     cx, [rsi+18h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+18h], cx^^^lea     rax, [rdi+19h]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     ecx, [rsi+17h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+17h], ecx^^^lea     rax, [rdi+1Ah]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rdx, [rsi+10h]^^^mov     ecx, [rsi+18h]^^^movdqu  xmmword ptr [rdi], xmm0^^^mov     [rdi+10h], rdx^^^mov     [rdi+18h], ecx^^^lea     rax, [rdi+1Bh]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Dh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Dh], xmm2^^^lea     rax, [rdi+1Ch]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Eh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Eh], xmm2^^^lea     rax, [rdi+1Dh]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+0Fh]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+0Fh], xmm2^^^lea     rax, [rdi+1Eh]^^^retn^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm2, xmmword ptr [rsi+10h]^^^movdqu  xmmword ptr [rdi], xmm0^^^movdqu  xmmword ptr [rdi+10h], xmm2^^^lea     rax, [rdi+1Fh]^^^retn^^^
_L_unlock_163$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_425B16^^^
__mpn_add_n$$$xor     r8, r8^^^mov     r10, [rsi]^^^mov     r11, [rdx]^^^lea     rsi, [rsi+rcx*8-8]^^^lea     rdx, [rdx+rcx*8-8]^^^lea     rdi, [rdi+rcx*8-10h]^^^mov     eax, ecx^^^neg     rcx^^^and     eax, 3^^^jz      short loc_47AE81^^^add     rcx, rax^^^cmp     eax, 2^^^jl      short loc_47AE90^^^jz      short loc_47AE95^^^shr     r8, 1^^^jmp     short loc_47AED4^^^shr     r8, 1^^^mov     r8, r10^^^mov     r9, r11^^^lea     rcx, [rcx+4]^^^jmp     short loc_47AEC2^^^shr     r8, 1^^^jmp     short loc_47AEF5^^^shr     r8, 1^^^mov     r8, r10^^^mov     r9, r11^^^jmp     short loc_47AEE6^^^adc     r10, r11^^^mov     [rdi+8], r10^^^mov     eax, ecx^^^adc     eax, eax^^^retn^^^mov     r8, [rsi+rcx*8-18h]^^^mov     r9, [rdx+rcx*8-18h]^^^adc     r10, r11^^^mov     [rdi+rcx*8-18h], r10^^^mov     r10, [rsi+rcx*8-10h]^^^mov     r11, [rdx+rcx*8-10h]^^^adc     r8, r9^^^mov     [rdi+rcx*8-10h], r8^^^mov     r8, [rsi+rcx*8-8]^^^mov     r9, [rdx+rcx*8-8]^^^adc     r10, r11^^^mov     [rdi+rcx*8-8], r10^^^mov     r10, [rsi+rcx*8]^^^mov     r11, [rdx+rcx*8]^^^adc     r8, r9^^^mov     [rdi+rcx*8], r8^^^jrcxz   loc_47AEA0^^^lea     rcx, [rcx+4]^^^jmp     short loc_47AEB0^^^
__register_frame_info_table_bases$$$mov     qword ptr [rsi+20h], 0^^^mov     byte ptr [rsi+20h], 2^^^or      word ptr [rsi+20h], 7F8h^^^cmp     cs:qword_6C1FD0, 0^^^push    rbx^^^mov     qword ptr [rsi], 0FFFFFFFFFFFFFFFFh^^^mov     rbx, rsi^^^mov     [rsi+8], rdx^^^mov     [rsi+10h], rcx^^^mov     [rsi+18h], rdi^^^jz      short loc_49455E^^^lea     rdi, object_mutex^^^call    near ptr 0^^^mov     rax, cs:unseen_objects^^^mov     cs:unseen_objects, rbx^^^lea     rdi, object_mutex^^^mov     [rbx+28h], rax^^^pop     rbx^^^jmp     near ptr 0^^^mov     rax, cs:unseen_objects^^^mov     cs:unseen_objects, rsi^^^pop     rbx^^^mov     [rsi+28h], rax^^^retn^^^
sub_41EA35$$$mov     edi, [rbp-52Ch]^^^lea     rsi, [rbp-520h]^^^mov     edx, 3E8h^^^call    strerror_r^^^mov     dword ptr [rbp-590h], 0^^^mov     [rbp-548h], rax^^^
sub_40A650$$$mov     [rdi-1], dl^^^jmp     short sub_40A6AA^^^
_nl_postload_ctype$$$mov     rax, cs:_nl_global_locale^^^mov     rsi, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, [rax+40h]^^^add     rcx, 100h^^^mov     cs:off_6C35C8, rcx^^^mov     rdx, [rax+58h]^^^add     rdx, 200h^^^mov     cs:off_6C35D0, rdx^^^mov     rax, [rax+48h]^^^add     rax, 200h^^^cmp     qword ptr fs:[rsi], offset _nl_global_locale^^^mov     cs:off_6C35D8, rax^^^jz      short loc_4628E0^^^rep retn^^^mov     rsi, 0FFFFFFFFFFFFFFE8h^^^mov     fs:[rsi], rcx^^^mov     rcx, 0FFFFFFFFFFFFFFD8h^^^mov     fs:[rcx], rax^^^mov     rax, 0FFFFFFFFFFFFFFE0h^^^mov     fs:[rax], rdx^^^retn^^^
_L_unlock_508$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42B776^^^
_dl_tlsdesc_resolve_rela$$$sub     rsp, 48h^^^mov     [rsp+48h+var_48], rax^^^mov     [rsp+48h+var_40], rdi^^^mov     rdi, rax^^^mov     [rsp+48h+var_38], rsi^^^mov     rsi, [rsp+48h]^^^mov     [rsp+48h+var_30], r8^^^mov     [rsp+48h+var_28], r9^^^mov     [rsp+48h+var_20], r10^^^mov     [rsp+48h+var_18], r11^^^mov     [rsp+48h+var_10], rdx^^^mov     [rsp+48h+var_8], rcx^^^call    _dl_tlsdesc_resolve_rela_fixup^^^mov     rax, [rsp+48h+var_48]^^^mov     rdi, [rsp+48h+var_40]^^^mov     rsi, [rsp+48h+var_38]^^^mov     r8, [rsp+48h+var_30]^^^mov     r9, [rsp+48h+var_28]^^^mov     r10, [rsp+48h+var_20]^^^mov     r11, [rsp+48h+var_18]^^^mov     rdx, [rsp+48h+var_10]^^^mov     rcx, [rsp+48h+var_8]^^^add     rsp, 50h^^^jmp     qword ptr [rax]^^^
strtod_l$$$mov     rcx, rdx^^^xor     edx, edx^^^jmp     ____strtod_l_internal^^^
dlvsym_doit$$$push    rbx^^^mov     rbx, rdi^^^mov     rcx, [rdi+18h]^^^mov     rdx, [rdi+10h]^^^mov     rsi, [rdi+8]^^^mov     rdi, [rdi]^^^call    _dl_vsym^^^mov     [rbx+20h], rax^^^pop     rbx^^^retn^^^
_IO_wfile_underflow_mmap$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^mov     eax, [rdi]^^^test    al, 4^^^jnz     loc_4287A0^^^mov     rax, [rdi+0A0h]^^^mov     rdx, [rax]^^^cmp     rdx, [rax+8]^^^jb      loc_428748^^^mov     rdx, [rdi+8]^^^cmp     rdx, [rdi+10h]^^^mov     rbp, [rdi+98h]^^^jnb     loc_428758^^^cmp     qword ptr [rax+30h], 0^^^mov     [rsp+38h+var_28], rdx^^^jz      loc_428778^^^mov     rdx, [rax+58h]^^^lea     r8, [rsp+38h+var_28]^^^mov     [rax+60h], rdx^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rbx+8]^^^mov     rcx, [rbx+10h]^^^mov     r9, [rax+30h]^^^lea     rdi, [rax+8]^^^lea     rsi, [rax+58h]^^^mov     [rax], r9^^^mov     [rax+10h], r9^^^mov     [rsp+38h+var_30], rdi^^^mov     rax, [rax+38h]^^^mov     rdi, rbp^^^mov     [rsp+38h+var_38], rax^^^call    qword ptr [rbp+18h]^^^mov     rax, [rsp+38h+var_28]^^^mov     [rbx+8], rax^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax]^^^cmp     rdx, [rax+8]^^^jb      short loc_428748^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 54h^^^or      dword ptr [rbx], 20h^^^add     rsp, 28h^^^pop     rbx^^^mov     eax, 0FFFFFFFFh^^^pop     rbp^^^retn^^^mov     eax, [rdx]^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^retn^^^call    _IO_file_underflow_mmap^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42874A^^^mov     rdx, [rbx+8]^^^mov     rax, [rbx+0A0h]^^^jmp     loc_4286BC^^^mov     rdi, [rax+40h]^^^test    rdi, rdi^^^jz      short loc_42878C^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_wdoallocbuf^^^mov     rax, [rbx+0A0h]^^^jmp     loc_4286CC^^^or      eax, 20h^^^mov     [rdi], eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^or      eax, 0FFFFFFFFh^^^jmp     short loc_42874A^^^
_IO_file_xsgetn_mmap$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbp, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     r12, rsi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 38h^^^mov     r14, [rdi+8]^^^mov     rbx, [rdi+10h]^^^mov     r15, rdx^^^mov     r13, rsi^^^sub     rbx, r14^^^cmp     rbx, rdx^^^jnb     short loc_42940B^^^test    byte ptr [rdi+1], 1^^^jnz     short loc_429461^^^mov     r13, rsi^^^mov     rdi, rbp^^^call    mmap_remap_check^^^test    eax, eax^^^jnz     loc_429496^^^mov     r14, [rbp+8]^^^mov     rbx, [rbp+10h]^^^sub     rbx, r14^^^cmp     r15, rbx^^^jbe     short loc_42940B^^^or      dword ptr [rbp+0], 10h^^^test    rbx, rbx^^^jnz     short loc_429440^^^mov     rax, r13^^^sub     rax, r12^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^cmp     r15, rbx^^^mov     rdi, r13^^^mov     rsi, r14^^^cmovbe  rbx, r15^^^mov     rdx, rbx^^^add     rbx, r14^^^call    mempcpy^^^mov     [rbp+8], rbx^^^mov     r13, rax^^^jmp     short loc_429410^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r12^^^call    mempcpy^^^mov     rdi, rbp^^^sub     r15, rbx^^^mov     r13, rax^^^call    _IO_switch_to_main_get_area^^^mov     r14, [rbp+8]^^^mov     rbx, [rbp+10h]^^^sub     rbx, r14^^^cmp     r15, rbx^^^jbe     loc_42940B^^^jmp     loc_4293E7^^^mov     rax, [rbp+0D8h]^^^sub     r13, r12^^^mov     rdx, r15^^^mov     rsi, r12^^^mov     rdi, rbp^^^call    qword ptr [rax+40h]^^^add     rax, r13^^^jmp     loc_429416^^^
_L_lock_2663$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_403BE4^^^
_nl_load_locale_from_archive$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 118h^^^mov     [rbp+var_11C], edi^^^mov     edi, 1Eh^^^mov     [rbp+var_110], rsi^^^mov     rbx, [rsi]^^^call    sysconf^^^mov     r12, cs:archloaded^^^test    r12, r12^^^jnz     short loc_4623B8^^^jmp     short loc_4623F0^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_4623C2^^^mov     r12, [r12]^^^test    r12, r12^^^jz      short loc_4623F0^^^mov     r13, [r12+8]^^^cmp     r13, rbx^^^jnz     short loc_4623A0^^^movsxd  rax, [rbp+var_11C]^^^mov     rsi, [rbp+var_110]^^^mov     [rsi], r13^^^mov     rax, [r12+rax*8+10h]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     esi, 2Eh^^^mov     rdi, rbx^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_462413^^^movzx   edx, byte ptr [rax+1]^^^cmp     dl, 40h^^^jz      short loc_462413^^^test    dl, dl^^^jnz     loc_4626A1^^^cmp     cs:archmapped, 0^^^jz      loc_462770^^^mov     rax, cs:headmap^^^mov     [rbp+var_108], rax^^^cmp     [rbp+var_108], 0^^^jz      loc_462690^^^mov     rdi, rbx^^^call    strlen^^^test    rax, rax^^^mov     ecx, eax^^^jz      short loc_462462^^^xor     edx, edx^^^xchg    ax, ax^^^movsx   esi, byte ptr [rbx+rdx]^^^ror     ecx, 17h^^^add     rdx, 1^^^add     ecx, esi^^^cmp     rdx, rax^^^jnz     short loc_462450^^^mov     rdx, [rbp+var_108]^^^test    ecx, ecx^^^mov     eax, ecx^^^mov     r12d, 0FFFFFFFFh^^^cmovnz  r12, rax^^^mov     eax, [rdx+8]^^^mov     ecx, [rdx+10h]^^^mov     r13d, ecx^^^sub     ecx, 2^^^add     rax, rdx^^^xor     edx, edx^^^mov     [rbp+var_118], rax^^^mov     rax, r12^^^div     r13^^^mov     rax, r12^^^mov     rsi, rdx^^^xor     edx, edx^^^div     rcx^^^lea     rcx, [rdx+1]^^^lea     r8, [rcx+rcx*2]^^^shl     r8, 2^^^lea     rax, [rsi+rsi*2]^^^lea     r15, [rcx+rsi]^^^mov     rsi, [rbp+var_118]^^^lea     r14, [rsi+rax*4+4]^^^jmp     short loc_4624DB^^^add     r14, r8^^^cmp     r13, r15^^^lea     rax, [r15+rcx]^^^jbe     loc_462680^^^mov     r15, rax^^^mov     esi, [r14]^^^lea     rdx, [r14-4]^^^test    esi, esi^^^jz      loc_462690^^^mov     eax, [r14-4]^^^cmp     rax, r12^^^jnz     short loc_4624C8^^^add     rsi, [rbp+var_108]^^^mov     rdi, rbx^^^mov     [rbp+var_128], rdx^^^mov     [rbp+var_138], rcx^^^mov     [rbp+var_130], r8^^^call    sub_4003A0^^^test    eax, eax^^^mov     rdx, [rbp+var_128]^^^mov     rcx, [rbp+var_138]^^^mov     r8, [rbp+var_130]^^^jnz     short loc_4624C8^^^mov     edx, [rdx+8]^^^xor     eax, eax^^^test    edx, edx^^^jz      loc_4623D8^^^mov     r8, [rbp+var_108]^^^mov     r10d, cs:dword_6C596C^^^add     r8, rdx^^^mov     eax, r10d^^^cmp     rax, cs:qword_6C59B0^^^jnz     loc_46286E^^^mov     ecx, 1^^^xor     eax, eax^^^jmp     short loc_462576^^^add     eax, 1^^^add     ecx, 1^^^cmp     eax, 6^^^jz      short loc_462570^^^movsxd  rdx, eax^^^mov     edi, [r8+rdx*8+4]^^^mov     esi, [r8+rdx*8+8]^^^lea     r9d, [rsi+rdi]^^^cmp     r10d, r9d^^^jb      loc_462690^^^add     rdi, [rbp+var_108]^^^shl     rdx, 4^^^cmp     ecx, 0Dh^^^mov     [rbp+rdx+var_F8], rsi^^^mov     [rbp+rdx+var_100], rdi^^^jnz     short loc_462570^^^mov     edi, 78h^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_462690^^^mov     rsi, [rbp+var_110]^^^mov     rdi, [rsi]^^^call    strdup^^^test    rax, rax^^^mov     [r13+8], rax^^^jz      loc_46285F^^^mov     rax, cs:archloaded^^^mov     r12d, 1^^^mov     cs:archloaded, r13^^^xor     ebx, ebx^^^mov     [r13+0], rax^^^jmp     short loc_46260F^^^add     ebx, 1^^^add     r12d, 1^^^cmp     ebx, 6^^^jz      short loc_462608^^^movsxd  r14, ebx^^^mov     edi, ebx^^^mov     rax, r14^^^shl     rax, 4^^^mov     rdx, [rbp+rax+var_F8]^^^mov     rsi, [rbp+rax+var_100]^^^call    _nl_intern_locale_data^^^test    rax, rax^^^mov     [r13+r14*8+10h], rax^^^jz      short loc_462654^^^mov     rdx, [r13+8]^^^mov     dword ptr [rax+18h], 2^^^mov     dword ptr [rax+30h], 0FFFFFFFFh^^^mov     [rax], rdx^^^cmp     r12d, 0Dh^^^jnz     short loc_462608^^^mov     rax, [r13+8]^^^mov     rsi, [rbp+var_110]^^^mov     [rsi], rax^^^movsxd  rax, [rbp+var_11C]^^^mov     rax, [r13+rax*8+10h]^^^jmp     loc_4623D8^^^mov     rsi, r15^^^sub     rsi, r13^^^jmp     loc_4624AC^^^lea     rsp, [rbp-28h]^^^xor     eax, eax^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     r13, [rax+1]^^^mov     esi, 40h^^^mov     rdi, r13^^^call    strchrnul^^^mov     r14, rax^^^mov     rdi, r13^^^mov     r15, rax^^^sub     r14, r13^^^mov     rsi, r14^^^call    _nl_normalize_codeset^^^test    rax, rax^^^mov     r12, rax^^^jz      short loc_462690^^^mov     rdx, r14^^^mov     rsi, r13^^^mov     rdi, rax^^^call    strncmp^^^test    eax, eax^^^jnz     short loc_4626E7^^^cmp     byte ptr [r12+r14], 0^^^jz      short loc_462763^^^mov     rdi, r12^^^call    strlen^^^mov     rdi, r15^^^mov     [rbp+var_108], rax^^^call    strlen^^^lea     rcx, [rax+1]^^^mov     rax, [rbp+var_108]^^^mov     rdx, r13^^^sub     rdx, rbx^^^mov     rsi, rbx^^^mov     [rbp+var_138], rcx^^^add     rax, rdx^^^lea     rax, [rcx+rax+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+140h+var_138+7]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r14^^^mov     rbx, r14^^^call    mempcpy^^^mov     rdx, [rbp+var_108]^^^mov     rsi, r12^^^mov     rdi, rax^^^call    mempcpy^^^mov     rcx, [rbp+var_138]^^^mov     rsi, r15^^^mov     rdi, rax^^^mov     rdx, rcx^^^call    memcpy^^^mov     rdi, r12^^^call    free^^^jmp     loc_462413^^^xor     eax, eax^^^mov     esi, 80000h^^^mov     edi, offset archfname^^^mov     cs:archmapped, offset headmap^^^call    __open_nocancel^^^test    eax, eax^^^mov     r12d, eax^^^js      loc_462690^^^mov     edx, offset archive_stat^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4627BE^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^xor     eax, eax^^^jmp     loc_4623D8^^^mov     r13, cs:qword_6C59B0^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, r12d^^^mov     ecx, 2^^^mov     edx, 1^^^mov     rsi, r13^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_108], rax^^^jz      short loc_4627AD^^^mov     rcx, rax^^^mov     rsi, rax^^^mov     eax, [rax+10h]^^^lea     rdx, [rax+rax*2]^^^mov     eax, [rcx+8]^^^lea     rdx, [rax+rdx*4]^^^mov     eax, [rcx+24h]^^^lea     rax, [rax+rax*2]^^^lea     rcx, [rax+rax*8]^^^mov     eax, [rsi+20h]^^^lea     rax, [rax+rcx*4]^^^cmp     rdx, rax^^^cmovl   rdx, rax^^^mov     eax, [rsi+18h]^^^add     eax, [rsi+14h]^^^cmp     rdx, rax^^^cmovge  rax, rdx^^^cmp     r13, rax^^^jb      short loc_46284F^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^mov     rax, [rbp+var_108]^^^mov     cs:dword_6C596C, r13d^^^mov     cs:headmap, rax^^^jmp     loc_46242F^^^mov     rdi, rsi^^^mov     rsi, r13^^^call    munmap^^^jmp     loc_4627AD^^^mov     rdi, r13^^^call    free^^^xor     eax, eax^^^jmp     loc_4623D8^^^mov     ecx, offset __PRETTY_FUNCTION___10163^^^mov     edx, 133h^^^mov     esi, offset aLoadarchive_c^^^mov     edi, offset aHeadmap_lenArc^^^call    __assert_fail^^^
buffered_vfprintf_0$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^mov     r12, rsi^^^sub     rsp, 8288h^^^mov     esi, 1^^^mov     r13, rdx^^^call    _IO_fwide^^^cmp     eax, 1^^^mov     ebp, 0FFFFFFFFh^^^jnz     loc_473BD4^^^lea     rax, [rsp+8288h+var_1A8]^^^mov     rsi, r12^^^mov     rdx, r13^^^mov     [rsp+8288h+var_60], rbx^^^mov     [rsp+8288h+var_1C8], 1^^^xor     r12d, r12d^^^mov     [rsp+8288h+var_1E8], rax^^^lea     rax, [rsp+8288h+var_8288]^^^mov     [rsp+8288h+var_288], 0FBAD8004h^^^mov     [rsp+8288h+var_200], 0^^^mov     [rsp+8288h+var_1B0], offset _IO_helper_jumps_0^^^mov     [rsp+8288h+var_188], rax^^^mov     [rsp+8288h+var_190], rax^^^mov     rdi, rax^^^mov     eax, [rbx+74h]^^^add     rdi, 8000h^^^mov     [rsp+8288h+var_180], rdi^^^mov     [rsp+8288h+var_214], eax^^^call    vfwprintf^^^mov     ebp, eax^^^mov     eax, 0^^^test    rax, rax^^^setnz   r12b^^^jnz     loc_473C18^^^mov     [rsp+8288h+var_48], offset funlockfile^^^mov     [rsp+8288h+var_40], rbx^^^mov     eax, [rbx]^^^and     eax, 8000h^^^jnz     short loc_473B59^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_473B55^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_473B41^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_13380^^^jmp     short loc_473B4A^^^cmpxchg [rdx], esi^^^jnz     _L_lock_13380^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     rax, [rsp+8288h+var_1E8]^^^mov     rsi, [rax+18h]^^^mov     r13, [rax+20h]^^^sub     r13, rsi^^^shr     r13, 2^^^test    r13d, r13d^^^jle     short loc_473B90^^^mov     rax, [rbx+0D8h]^^^movsxd  rdx, r13d^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^cmp     r13d, eax^^^mov     eax, 0FFFFFFFFh^^^cmovnz  ebp, eax^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_473BCF^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_473BCF^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_473BC7^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_13432^^^jmp     short loc_473BCF^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_13432^^^test    r12d, r12d^^^jnz     short loc_473C00^^^mov     eax, ebp^^^mov     rbx, [rsp+8288h+var_20]^^^mov     rbp, [rsp+8288h+var_18]^^^mov     r12, [rsp+8288h+var_10]^^^mov     r13, [rsp+8288h+var_8]^^^add     rsp, 8288h^^^retn^^^lea     rdi, [rsp+8288h+var_48]^^^xor     esi, esi^^^call    near ptr 0^^^jmp     short loc_473BD4^^^lea     rdi, [rsp+8288h+var_48]^^^mov     rdx, rbx^^^mov     esi, offset funlockfile^^^call    near ptr 0^^^jmp     loc_473B08^^^
intel_check_word$$$push    r14^^^mov     r14, rdx^^^push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12d, edi^^^push    rbp^^^push    rbx^^^mov     ebx, esi^^^sub     rsp, 10h^^^cmp     esi, 0^^^jl      loc_40EC00^^^jz      loc_40EC00^^^lea     ecx, [r12-0B9h]^^^mov     edx, 55555556h^^^mov     eax, ecx^^^sar     ecx, 1Fh^^^imul    edx^^^sub     edx, ecx^^^lea     ebp, [rdx+rdx*2]^^^jmp     short loc_40EBE6^^^cmp     eax, 0FFh^^^jz      loc_40EC30^^^cmp     eax, 49h^^^jnz     short loc_40EBA6^^^cmp     ebp, 9^^^jnz     short loc_40EBA6^^^cmp     cs:dword_6C60CC, 6^^^jnz     short loc_40EC10^^^cmp     cs:dword_6C60C8, 0Fh^^^jnz     short loc_40EC10^^^sub     r12d, 3^^^mov     bpl, 6^^^mov     r8d, offset intel_02_known_compare^^^mov     ecx, 8^^^mov     edx, 44h^^^mov     esi, offset intel_02_known^^^mov     rdi, rsp^^^mov     [rsp+38h+var_38], al^^^call    bsearch^^^test    rax, rax^^^jz      short loc_40EBDF^^^movzx   edx, byte ptr [rax+3]^^^movzx   ecx, dl^^^cmp     ecx, ebp^^^jz      loc_40ECD0^^^cmp     dl, 6^^^jz      short loc_40EC20^^^shr     ebx, 8^^^test    ebx, ebx^^^jz      short loc_40EC00^^^movzx   eax, bl^^^cmp     eax, 40h^^^jnz     short loc_40EB78^^^cmp     ebp, 9^^^mov     byte ptr [r13+0], 1^^^jnz     short loc_40EBDF^^^nop     dword ptr [rax+rax+00000000h]^^^xor     eax, eax^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     ebp, 9^^^jmp     short loc_40EBA6^^^mov     byte ptr [r14], 1^^^jmp     short loc_40EBDF^^^mov     al, 4^^^xor     ecx, ecx^^^xchg    ebx, edi^^^cpuid^^^xchg    ebx, edi^^^mov     edx, eax^^^and     edx, 1Fh^^^jz      short loc_40EC00^^^xor     esi, esi^^^test    ebp, ebp^^^mov     r8d, 4^^^jz      loc_40ED30^^^cmp     ebp, 3^^^jnz     short loc_40EC8C^^^jmp     loc_40ED01^^^cmp     eax, 3^^^jz      loc_40ED90^^^cmp     eax, 4^^^nop     dword ptr [rax+00h]^^^jz      loc_40EDA0^^^add     esi, 1^^^mov     eax, r8d^^^mov     ecx, esi^^^xchg    ebx, edi^^^cpuid^^^xchg    ebx, edi^^^test    al, 1Fh^^^jz      loc_40EC00^^^shr     eax, 5^^^and     eax, 7^^^cmp     eax, 2^^^jnz     short loc_40EC60^^^cmp     ebp, 6^^^jnz     short loc_40EC60^^^sub     r12d, 0B9h^^^sub     r12d, ebp^^^jz      loc_40ED60^^^cmp     r12d, 1^^^jz      loc_40EDC1^^^cmp     r12d, 2^^^jnz     loc_40EDE7^^^and     edi, 0FFFh^^^lea     rax, [rdi+1]^^^jmp     loc_40EC02^^^sub     r12d, 0B9h^^^sub     r12d, ebp^^^jz      short loc_40ECF9^^^cmp     r12d, 1^^^jz      loc_40EDB8^^^cmp     r12d, 2^^^jnz     loc_40EDCE^^^movzx   eax, byte ptr [rax+2]^^^jmp     loc_40EC02^^^mov     eax, [rax+4]^^^jmp     loc_40EC02^^^shr     eax, 5^^^and     eax, 7^^^cmp     eax, 1^^^jnz     short loc_40ED11^^^cmp     edx, 1^^^jz      short loc_40EC9C^^^add     esi, 1^^^mov     eax, r8d^^^mov     ecx, esi^^^xchg    ebx, edi^^^cpuid^^^xchg    ebx, edi^^^mov     edx, eax^^^and     edx, 1Fh^^^jnz     short loc_40ED01^^^jmp     loc_40EC00^^^shr     eax, 5^^^and     eax, 7^^^cmp     eax, 1^^^jnz     short loc_40ED44^^^cmp     edx, 2^^^jz      loc_40EC9C^^^add     esi, 1^^^mov     eax, r8d^^^mov     ecx, esi^^^xchg    ebx, edi^^^cpuid^^^xchg    ebx, edi^^^mov     edx, eax^^^and     edx, 1Fh^^^jnz     short loc_40ED30^^^jmp     loc_40EC00^^^mov     eax, edi^^^mov     edx, edi^^^add     ecx, 1^^^shr     eax, 16h^^^and     edx, 0FFFh^^^shr     edi, 0Ch^^^add     eax, 1^^^add     edx, 1^^^and     edi, 3FFh^^^imul    eax, edx^^^add     edi, 1^^^imul    eax, ecx^^^imul    eax, edi^^^jmp     loc_40EC02^^^cmp     ebp, 9^^^jnz     loc_40EC69^^^jmp     loc_40EC9C^^^cmp     ebp, 0Ch^^^jnz     loc_40EC76^^^nop     dword ptr [rax+00000000h]^^^jmp     loc_40EC9C^^^movzx   eax, byte ptr [rax+1]^^^jmp     loc_40EC02^^^mov     eax, edi^^^shr     eax, 16h^^^add     eax, 1^^^jmp     loc_40EC02^^^mov     ecx, offset __PRETTY_FUNCTION___4110^^^mov     edx, 11Fh^^^mov     esi, offset a__SysdepsX86_6^^^mov     edi, offset aOffset2^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___4110^^^mov     edx, 0E2h^^^mov     esi, offset a__SysdepsX86_6^^^mov     edi, offset aOffset2^^^call    __assert_fail^^^
_IO_default_xsgetn$$$push    r14^^^mov     r14, rdx^^^push    r13^^^mov     r13, rsi^^^push    r12^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rbx, rdi^^^nop     dword ptr [rax+00h]^^^mov     rsi, [rbx+8]^^^mov     r12, [rbx+10h]^^^cmp     rsi, r12^^^jnb     loc_42C15D^^^sub     r12, rsi^^^cmp     rbp, r12^^^cmovbe  r12, rbp^^^cmp     r12, 14h^^^ja      loc_42C188^^^test    r12, r12^^^jz      loc_42C15A^^^mov     edx, r12d^^^lea     ecx, [r12-1]^^^mov     r9d, r12d^^^and     edx, 0FFFFFFF0h^^^jz      loc_42C19C^^^lea     rax, [rsi+10h]^^^cmp     r12d, 0Fh^^^lea     r8, [r13+10h]^^^setnbe  dil^^^cmp     r13, rax^^^setnbe  al^^^cmp     rsi, r8^^^setnbe  r8b^^^or      eax, r8d^^^test    dil, al^^^jz      loc_42C19C^^^mov     r8d, edx^^^movdqu  xmm0, xmmword ptr [rsi]^^^lea     rdi, [r13+r8+0]^^^sub     ecx, edx^^^add     r8, rsi^^^cmp     r12d, edx^^^movdqu  xmmword ptr [r13+0], xmm0^^^jz      short loc_42C148^^^xor     eax, eax^^^nop     dword ptr [rax+00000000h]^^^movzx   edx, byte ptr [r8+rax]^^^mov     [rdi+rax], dl^^^add     rax, 1^^^cmp     ecx, eax^^^jns     short loc_42C138^^^sub     r9d, 1^^^add     r9, 1^^^add     rsi, r9^^^add     r13, r9^^^mov     [rbx+8], rsi^^^sub     rbp, r12^^^test    rbp, rbp^^^jz      short loc_42C173^^^mov     rdi, rbx^^^call    __underflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_42C0A8^^^pop     rbx^^^mov     rax, r14^^^sub     rax, rbp^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rdi, r13^^^mov     rdx, r12^^^call    mempcpy^^^add     [rbx+8], r12^^^mov     r13, rax^^^jmp     short loc_42C15A^^^mov     r8, rsi^^^mov     rdi, r13^^^jmp     short loc_42C12F^^^
_L_unlock_4858$$$lea     rdi, [r13+0]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_404C6A^^^
_dl_runtime_resolve$$$sub     rsp, 38h^^^mov     [rsp+38h+var_38], rax^^^mov     [rsp+38h+var_30], rcx^^^mov     [rsp+38h+var_28], rdx^^^mov     [rsp+38h+var_20], rsi^^^mov     [rsp+38h+var_18], rdi^^^mov     [rsp+38h+var_10], r8^^^mov     [rsp+38h+var_8], r9^^^mov     rsi, [rsp+38h+arg_0]^^^mov     rdi, [rsp+38h]^^^call    _dl_fixup^^^mov     r11, rax^^^mov     r9, [rsp+38h+var_8]^^^mov     r8, [rsp+38h+var_10]^^^mov     rdi, [rsp+38h+var_18]^^^mov     rsi, [rsp+38h+var_20]^^^mov     rdx, [rsp+38h+var_28]^^^mov     rcx, [rsp+38h+var_30]^^^mov     rax, [rsp+38h+var_38]^^^add     rsp, 48h^^^jmp     r11^^^
_IO_new_file_attach$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^cmp     dword ptr [rdi+70h], 0FFFFFFFFh^^^jnz     short loc_42AE80^^^mov     eax, [rdi]^^^mov     rbp, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, 3^^^mov     [rdi+70h], esi^^^mov     qword ptr [rdi+90h], 0FFFFFFFFFFFFFFFFh^^^xor     esi, esi^^^mov     edx, 1^^^and     eax, 0FFFFFFF3h^^^mov     r12d, fs:[rbp+0]^^^or      eax, 40h^^^mov     [rdi], eax^^^mov     rax, [rdi+0D8h]^^^call    qword ptr [rax+48h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_42AE70^^^mov     fs:[rbp+0], r12d^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^cmp     dword ptr fs:[rbp+0], 1Dh^^^jz      short loc_42AE4C^^^nop     word ptr [rax+rax+00000000h]^^^xor     ebx, ebx^^^jmp     short loc_42AE51^^^
_L_lock_4117$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42D2EF^^^
__strcasecmp_l_sse42$$$mov     rax, [rdx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strcasecmp_l_nonascii^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm4, cs:xmmword_49CA70^^^movdqa  xmm5, cs:xmmword_49CA80^^^movdqa  xmm6, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_434860^^^cmp     eax, 30h^^^ja      short loc_434860^^^movdqu  xmm1, xmmword ptr [rdi]^^^movdqu  xmm2, xmmword ptr [rsi]^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_436300^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     word ptr [rax+rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^pxor    xmm0, xmm0^^^cmp     ecx, eax^^^jz      short loc_4348B0^^^ja      short loc_434887^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49CAB0^^^movsxd  r9, dword ptr [r10+r9*4]^^^pcmpeqb xmm0, xmm1^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^mov     rcx, 10h^^^mov     r9, 10h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00h]^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_4349F0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_4349F0^^^jmp     loc_434930^^^jnb     loc_43631C^^^lea     rcx, [rdx+rcx-10h]^^^movzx   eax, byte ptr [rdi+rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^lea     rcx, unk_4A3180^^^mov     eax, [rcx+rax*4]^^^mov     edx, [rcx+rdx*4]^^^sub     eax, edx^^^retn^^^pslldq  xmm2, 0Fh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_434B90^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_434B90^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_434AB0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 1^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Eh^^^ja      loc_434ABA^^^jmp     loc_436271^^^pslldq  xmm2, 0Eh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_434D30^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_434D30^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_434C50^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 2^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Dh^^^ja      loc_434C5A^^^jmp     loc_436271^^^pslldq  xmm2, 0Dh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^add     r10, 10h^^^jg      loc_434ED0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_434ED0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_434DE8^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 3^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ch^^^ja      loc_434DF2^^^jmp     loc_436271^^^pslldq  xmm2, 0Ch^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435070^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435070^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_434F90^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 4^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Bh^^^ja      loc_434F9A^^^jmp     loc_436271^^^pslldq  xmm2, 0Bh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435210^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435210^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435130^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 5^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0Ah^^^ja      loc_43513A^^^jmp     loc_436271^^^pslldq  xmm2, 0Ah^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4353B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4353B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_4352D0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 6^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 9^^^ja      loc_4352DA^^^jmp     loc_436271^^^pslldq  xmm2, 9^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435550^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435550^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435470^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 7^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 8^^^ja      loc_43547A^^^jmp     loc_436271^^^pslldq  xmm2, 8^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4356F0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4356F0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435610^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 8^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 7^^^ja      loc_43561A^^^jmp     loc_436271^^^pslldq  xmm2, 7^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435890^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435890^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_4357B0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 9^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 6^^^ja      loc_4357BA^^^jmp     loc_436271^^^pslldq  xmm2, 6^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435A30^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435A30^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435950^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ah^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 5^^^ja      loc_43595A^^^jmp     loc_436271^^^pslldq  xmm2, 5^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435BD0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435BD0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435AF0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Bh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 4^^^ja      loc_435AFA^^^jmp     loc_436271^^^pslldq  xmm2, 4^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435D70^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435D70^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435C90^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ch^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 3^^^ja      loc_435C9A^^^jmp     loc_436271^^^pslldq  xmm2, 3^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_435F10^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_435F10^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435E30^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Dh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 2^^^ja      loc_435E3A^^^jmp     loc_436271^^^pslldq  xmm2, 2^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4360B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4360B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_435FD0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Eh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 1^^^ja      loc_435FDA^^^jmp     loc_436271^^^pslldq  xmm2, 1^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4362E8^^^movdqa  xmm3, xmmword ptr [rdi]^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_436250^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_436250^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_4362C0^^^add     rdx, 10h^^^jmp     loc_436170^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Fh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     ecx, 0^^^ja      loc_43617A^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^xchg    ax, ax^^^jnb     short loc_43631C^^^add     rdx, rcx^^^lea     rdi, [rdi+r9-10h]^^^movzx   eax, byte ptr [rdi+rdx]^^^movzx   edx, byte ptr [rsi+rdx]^^^test    r8d, r8d^^^jz      short loc_4362D8^^^xchg    eax, edx^^^lea     rcx, unk_4A3180^^^mov     edx, [rcx+rdx*4]^^^mov     eax, [rcx+rax*4]^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_436300^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^
_IO_adjust_column$$$movsxd  r8, edx^^^add     r8, rsi^^^cmp     rsi, r8^^^jnb     short loc_42C77E^^^cmp     byte ptr [r8-1], 0Ah^^^lea     rcx, [r8-1]^^^jnz     short loc_42C779^^^jmp     short loc_42C788^^^sub     rcx, 1^^^cmp     byte ptr [rcx], 0Ah^^^jz      short loc_42C788^^^cmp     rcx, rsi^^^jnz     short loc_42C770^^^lea     eax, [rdx+rdi]^^^retn^^^sub     r8, rcx^^^lea     eax, [r8-1]^^^retn^^^
__gcc_personality_v0$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rcx^^^mov     [rsp+var_8], r14^^^mov     [rsp+var_18], r12^^^mov     rbp, r8^^^mov     [rsp+var_10], r13^^^sub     rsp, 78h^^^cmp     edi, 1^^^mov     r14d, 3^^^jz      short loc_494A90^^^mov     eax, r14d^^^mov     rbx, [rsp+78h+var_28]^^^mov     rbp, [rsp+78h+var_20]^^^mov     r12, [rsp+78h+var_18]^^^mov     r13, [rsp+78h+var_10]^^^mov     r14, [rsp+78h+var_8]^^^add     rsp, 78h^^^retn^^^and     esi, 2^^^mov     r14b, 8^^^jz      short loc_494A6E^^^mov     rdi, r8^^^call    _Unwind_GetLanguageSpecificData^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_494A6E^^^xor     eax, eax^^^test    rbp, rbp^^^jz      short loc_494AB7^^^mov     rdi, rbp^^^call    _Unwind_GetRegionStart^^^mov     [rsp+78h+var_78], rax^^^movzx   r12d, byte ptr [r13+0]^^^add     r13, 1^^^cmp     r12b, 0FFh^^^jz      short loc_494B10^^^movzx   r12d, r12b^^^mov     eax, r12d^^^and     eax, 70h^^^cmp     eax, 20h^^^jz      loc_494D20^^^jg      loc_494E10^^^test    eax, eax^^^jz      short loc_494B00^^^cmp     eax, 10h^^^nop     word ptr [rax+rax+00h]^^^jnz     loc_494C30^^^nop     word ptr [rax+rax+00000000h]^^^xor     esi, esi^^^jmp     loc_494D2B^^^mov     [rsp+78h+var_70], rax^^^movzx   eax, byte ptr [r13+0]^^^add     r13, 1^^^cmp     al, 0FFh^^^mov     [rsp+78h+var_50], al^^^jz      loc_494DE0^^^xor     esi, esi^^^xor     ecx, ecx^^^xchg    ax, ax^^^movzx   edx, byte ptr [r13+0]^^^add     r13, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_494B30^^^add     rsi, r13^^^mov     [rsp+78h+var_60], rsi^^^movzx   eax, byte ptr [r13+0]^^^lea     r14, [r13+1]^^^xor     esi, esi^^^xor     ecx, ecx^^^mov     [rsp+78h+var_4F], al^^^nop     dword ptr [rax]^^^movzx   edx, byte ptr [r14]^^^add     r14, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_494B68^^^add     rsi, r14^^^mov     rdi, rbp^^^mov     [rsp+78h+var_58], rsi^^^call    _Unwind_GetIP^^^lea     r13, [rax-1]^^^mov     rax, [rsp+78h+var_58]^^^cmp     r14, rax^^^jnb     loc_494E47^^^movzx   eax, [rsp+78h+var_4F]^^^cmp     al, 0FFh^^^movzx   r12d, al^^^jz      short loc_494BCB^^^mov     eax, r12d^^^and     eax, 70h^^^cmp     eax, 20h^^^jz      loc_494DB0^^^jg      short loc_494C10^^^test    eax, eax^^^jnz     loc_494CE0^^^xor     esi, esi^^^lea     rcx, [rsp+78h+var_40]^^^mov     rdx, r14^^^mov     edi, r12d^^^call    read_encoded_value_with_base_1^^^mov     r14, rax^^^movzx   eax, [rsp+78h+var_4F]^^^cmp     al, 0FFh^^^movzx   r12d, al^^^jz      short loc_494C06^^^mov     eax, r12d^^^and     eax, 70h^^^cmp     eax, 20h^^^jz      loc_494DD0^^^jg      short loc_494C38^^^test    eax, eax^^^jnz     loc_494CF0^^^xor     esi, esi^^^jmp     short loc_494C55^^^cmp     eax, 40h^^^jz      loc_494D08^^^cmp     eax, 50h^^^jz      short loc_494BCB^^^cmp     eax, 30h^^^jz      loc_494DBF^^^nop     word ptr [rax+rax+00000000h]^^^call    abort^^^cmp     eax, 40h^^^jz      loc_494D48^^^cmp     eax, 50h^^^jz      short loc_494C06^^^cmp     eax, 30h^^^jnz     short loc_494C30^^^xor     edi, edi^^^call    _Unwind_GetDataRelBase^^^mov     rsi, rax^^^lea     rcx, [rsp+78h+var_38]^^^mov     rdx, r14^^^mov     edi, r12d^^^call    read_encoded_value_with_base_1^^^mov     r14, rax^^^movzx   eax, [rsp+78h+var_4F]^^^cmp     al, 0FFh^^^movzx   r12d, al^^^jz      short loc_494C98^^^mov     eax, r12d^^^and     eax, 70h^^^cmp     eax, 20h^^^jz      loc_494E00^^^jg      loc_494D80^^^test    eax, eax^^^jz      short loc_494C98^^^cmp     eax, 10h^^^jnz     short loc_494C30^^^nop     dword ptr [rax+rax+00h]^^^xor     esi, esi^^^lea     rcx, [rsp+78h+var_30]^^^mov     rdx, r14^^^mov     edi, r12d^^^call    read_encoded_value_with_base_1^^^jmp     short loc_494CB3^^^mov     rax, r14^^^cmp     byte ptr [rax], 0^^^lea     r14, [rax+1]^^^js      short loc_494CB0^^^mov     rax, [rsp+78h+var_40]^^^add     rax, [rsp+78h+var_78]^^^cmp     r13, rax^^^jnb     loc_494D60^^^mov     r14, [rsp+78h+var_58]^^^mov     rax, r14^^^jmp     loc_494B9C^^^cmp     eax, 10h^^^jnz     loc_494C30^^^jmp     loc_494BCB^^^cmp     eax, 10h^^^jnz     loc_494C30^^^xor     esi, esi^^^nop     dword ptr [rax+rax+00h]^^^jmp     loc_494C55^^^xor     edi, edi^^^call    _Unwind_GetRegionStart^^^mov     rsi, rax^^^jmp     loc_494BCD^^^mov     rdi, rbp^^^call    _Unwind_GetTextRelBase^^^mov     rsi, rax^^^lea     rcx, [rsp+78h+var_70]^^^mov     rdx, r13^^^mov     edi, r12d^^^call    read_encoded_value_with_base_1^^^mov     r13, rax^^^jmp     loc_494B15^^^xor     edi, edi^^^call    _Unwind_GetRegionStart^^^mov     rsi, rax^^^jmp     loc_494C55^^^add     rax, [rsp+78h+var_38]^^^cmp     r13, rax^^^jb      loc_494E52^^^mov     rax, [rsp+78h+var_58]^^^jmp     loc_494B9C^^^cmp     eax, 40h^^^jz      short loc_494DF0^^^cmp     eax, 50h^^^jz      loc_494C98^^^cmp     eax, 30h^^^jnz     loc_494C30^^^xor     edi, edi^^^call    _Unwind_GetDataRelBase^^^mov     rsi, rax^^^jmp     loc_494C9A^^^xor     edi, edi^^^call    _Unwind_GetTextRelBase^^^mov     rsi, rax^^^jmp     loc_494BCD^^^xor     edi, edi^^^call    _Unwind_GetDataRelBase^^^mov     rsi, rax^^^jmp     loc_494BCD^^^xor     edi, edi^^^call    _Unwind_GetTextRelBase^^^mov     rsi, rax^^^jmp     loc_494C55^^^mov     [rsp+78h+var_60], 0^^^jmp     loc_494B54^^^xor     edi, edi^^^call    _Unwind_GetRegionStart^^^mov     rsi, rax^^^jmp     loc_494C9A^^^xor     edi, edi^^^call    _Unwind_GetTextRelBase^^^mov     rsi, rax^^^jmp     loc_494C9A^^^cmp     eax, 40h^^^jz      short loc_494E37^^^cmp     eax, 50h^^^jz      loc_494B00^^^cmp     eax, 30h^^^jnz     loc_494C30^^^mov     rdi, rbp^^^call    _Unwind_GetDataRelBase^^^mov     rsi, rax^^^jmp     loc_494D2B^^^mov     rdi, rbp^^^call    _Unwind_GetRegionStart^^^mov     rsi, rax^^^jmp     loc_494D2B^^^mov     r14d, 8^^^jmp     loc_494A6E^^^mov     r12, [rsp+78h+var_30]^^^mov     r14d, 8^^^test    r12, r12^^^jz      loc_494A6E^^^add     r12, [rsp+78h+var_70]^^^jz      loc_494A6E^^^mov     rdx, rbx^^^xor     esi, esi^^^mov     rdi, rbp^^^call    _Unwind_SetGR^^^xor     edx, edx^^^mov     esi, 1^^^mov     rdi, rbp^^^call    _Unwind_SetGR^^^mov     rsi, r12^^^mov     rdi, rbp^^^mov     r14d, 7^^^call    _Unwind_SetIP^^^jmp     loc_494A6E^^^
__strend_sse4$$$pxor    xmm2, xmm2^^^mov     rcx, rdi^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm1, xmm2^^^pcmpeqb xmm2, xmmword ptr [rdi]^^^or      esi, 0FFFFFFFFh^^^sub     rcx, rdi^^^shl     esi, cl^^^pmovmskb edx, xmm2^^^and     edx, esi^^^jnz     short loc_4394A5^^^pcmpistri xmm1, xmmword ptr [rdi+10h], 8^^^lea     rdi, [rdi+10h]^^^jnz     short loc_439493^^^lea     rax, [rdi+rcx]^^^retn^^^bsf     eax, edx^^^add     rax, rdi^^^retn^^^
_L_lock_2821$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42C898^^^
_L_unlock_13845$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408FA7^^^
strrchr$$$movd    xmm1, esi       ^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm2, xmm2^^^punpcklbw xmm1, xmm1^^^or      esi, 0FFFFFFFFh^^^movdqa  xmm0, xmmword ptr [rdi]^^^pshufd  xmm1, xmm1, 0^^^sub     rcx, rdi^^^movdqa  xmm3, xmm0^^^lea     rdi, [rdi+10h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^shl     esi, cl^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^and     edx, esi^^^and     ecx, esi^^^xor     eax, eax^^^mov     esi, edx^^^or      esi, ecx^^^jnz     short loc_431E3E^^^movdqa  xmm0, xmmword ptr [rdi]^^^lea     rdi, [rdi+10h]^^^movdqa  xmm3, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^mov     esi, edx^^^or      esi, ecx^^^jz      short loc_431E1C^^^bsf     r9d, ecx^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 1Fh^^^jnz     short loc_431E5B^^^bsr     edx, edx^^^jz      short loc_431E1C^^^lea     rax, [rdi+rdx-10h]^^^jmp     short loc_431E1C^^^sub     ecx, r9d^^^shr     r8d, cl^^^and     edx, r8d^^^bsr     edx, edx^^^jz      short locret_431E6E^^^lea     rax, [rdi+rdx-10h]^^^retn^^^
__libc_dlclose$$$sub     rsp, 38h^^^mov     r8, rdi^^^mov     ecx, offset do_dlclose^^^lea     rdx, [rsp+38h+var_9]^^^lea     rsi, [rsp+38h+var_28]^^^lea     rdi, [rsp+38h+var_18]^^^mov     [rsp+38h+var_28], 0^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     short loc_47A948^^^cmp     [rsp+38h+var_28], 0^^^jnz     short loc_47A940^^^add     rsp, 38h^^^retn^^^mov     al, 1^^^nop     word ptr [rax+rax+00h]^^^cmp     [rsp+38h+var_9], 0^^^jz      short loc_47A935^^^mov     rdi, [rsp+38h+var_28]^^^mov     [rsp+38h+var_30], eax^^^call    free^^^mov     eax, [rsp+38h+var_30]^^^add     rsp, 38h^^^retn^^^
__gconv_release_shlib$$$mov     cs:release_handle, rdi^^^mov     rdi, cs:loaded^^^mov     esi, offset do_release_shlib^^^jmp     twalk^^^
_dl_profile_fixup$$$push    r13^^^mov     esi, esi^^^mov     rax, rdi^^^mov     r13, rdx^^^push    r12^^^mov     r12, r8^^^push    rbp^^^mov     rbp, rsi^^^shl     rbp, 5^^^push    rbx^^^sub     rsp, 28h^^^add     rbp, [rdi+328h]^^^mov     rbx, [rbp+0]^^^test    rbx, rbx^^^jnz     loc_479DBB^^^mov     rcx, [rax+0F8h]^^^mov     rdx, [rdi+68h]^^^mov     r8, [rcx+8]^^^mov     rdi, [rdx+8]^^^lea     rdx, [rsi+rsi*2]^^^lea     rdx, [r8+rdx*8]^^^mov     r8, [rax+70h]^^^mov     rsi, [rdx+8]^^^mov     r9, [r8+8]^^^mov     rcx, rsi^^^shr     rcx, 20h^^^cmp     esi, 7^^^lea     rdx, [rcx+rcx*2]^^^lea     rdx, [r9+rdx*8]^^^mov     [rsp+48h+var_38], rdx^^^jnz     loc_479DDC^^^test    byte ptr [rdx+5], 3^^^jnz     loc_479DF5^^^mov     rsi, [rax+1C8h]^^^xor     r8d, r8d^^^test    rsi, rsi^^^jz      short loc_479D34^^^mov     rsi, [rsi+8]^^^movzx   ecx, word ptr [rsi+rcx*2]^^^and     ecx, 7FFFh^^^lea     r8, [rcx+rcx*2]^^^mov     rcx, [rax+2E0h]^^^lea     r8, [rcx+r8*8]^^^mov     esi, [r8+8]^^^test    esi, esi^^^cmovz   r8, rbx^^^mov     ecx, fs:18h^^^test    ecx, ecx^^^jnz     loc_479E42^^^mov     esi, 1^^^mov     edx, [rdx]^^^mov     rcx, [rax+380h]^^^mov     r9d, 1^^^mov     [rsp+48h+var_48], esi^^^mov     rsi, rax^^^mov     [rsp+48h+var_40], 0^^^add     rdi, rdx^^^lea     rdx, [rsp+48h+var_38]^^^call    _dl_lookup_symbol_x^^^mov     r8, rax^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     loc_479E0F^^^mov     rax, [rsp+48h+var_38]^^^test    rax, rax^^^jz      short loc_479DAB^^^xor     ebx, ebx^^^test    r8, r8^^^jz      short loc_479D9B^^^mov     rbx, [r8]^^^add     rbx, [rax+8]^^^movzx   eax, byte ptr [rax+4]^^^and     eax, 0Fh^^^cmp     eax, 0Ah^^^jz      short loc_479E08^^^mov     r11d, cs:_dl_bind_not^^^test    r11d, r11d^^^jnz     short loc_479DBB^^^mov     [rbp+0], rbx^^^mov     qword ptr [r12], 0FFFFFFFFFFFFFFFFh^^^mov     rsi, rbx^^^mov     rdi, r13^^^call    _dl_mcount^^^add     rsp, 28h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___11909^^^mov     edx, 0C0h^^^mov     esi, offset a__ElfDlRuntime^^^mov     edi, offset aRelocR_info0_0^^^call    __assert_fail^^^mov     rbx, [rdx+8]^^^add     rbx, [rax]^^^movzx   eax, byte ptr [rdx+4]^^^and     eax, 0Fh^^^cmp     eax, 0Ah^^^jnz     short loc_479DAB^^^call    rbx^^^mov     rbx, rax^^^jmp     short loc_479DAB^^^xor     eax, eax^^^xchg    eax, fs:1Ch^^^cmp     eax, 2^^^jnz     loc_479D87^^^mov     rdi, fs:10h^^^mov     edx, 1^^^add     rdi, 1Ch^^^mov     al, 0CAh^^^mov     esi, 81h^^^syscall^^^jmp     loc_479D87^^^mov     dword ptr fs:1Ch, 1^^^mov     esi, 5^^^jmp     loc_479D49^^^
fork$$$push    rbp             ^^^mov     rbp, rsp^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 8^^^nop     dword ptr [rax]^^^mov     r12, cs:__fork_handlers^^^test    r12, r12^^^jz      loc_44C410^^^mov     eax, [r12+28h]^^^test    eax, eax^^^jz      short loc_44C190^^^mov     rdx, cs:__fork_handlers^^^lea     ecx, [rax+1]^^^lock cmpxchg [rdx+28h], ecx^^^jnz     short loc_44C190^^^xor     r13d, r13d^^^jmp     short loc_44C1C9^^^lock inc dword ptr [r12+28h]^^^mov     r13, rbx^^^mov     rax, [r12+8]^^^test    rax, rax^^^jz      short loc_44C1D5^^^call    rax^^^sub     rsp, 20h^^^lea     rbx, [rsp+40h+var_31]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbx], r12^^^mov     r12, [r12]^^^mov     [rbx+8], r13^^^test    r12, r12^^^jnz     short loc_44C1C0^^^call    _IO_list_lock^^^mov     r13d, fs:2D0h^^^mov     r9d, fs:2D4h^^^mov     eax, r9d^^^neg     eax^^^mov     fs:2D4h, eax^^^mov     r8, fs:10h^^^xor     edx, edx^^^lea     r10, [r8+2D0h]^^^xor     esi, esi^^^mov     edi, 1200011h^^^mov     eax, 38h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      loc_44C379^^^test    eax, eax^^^mov     r12d, eax^^^jnz     loc_44C390^^^mov     eax, fs:2D0h^^^cmp     r13d, eax^^^jz      loc_44C430^^^mov     rax, cs:__fork_generation_pointer^^^test    rax, rax^^^jz      short loc_44C26E^^^add     qword ptr [rax], 4^^^mov     eax, fs:2D0h^^^mov     fs:2D4h, eax^^^rdtsc^^^shl     rdx, 20h^^^mov     eax, eax^^^or      rdx, rax^^^mov     fs:620h, rdx^^^mov     eax, 0^^^mov     cs:_dl_cpuclock_offset, rdx^^^test    rax, rax^^^jz      short loc_44C2AB^^^mov     rdi, r8^^^call    near ptr 0^^^call    _IO_iter_begin^^^mov     r13, rax^^^jmp     short loc_44C2E7^^^mov     rdi, r13^^^call    _IO_iter_file^^^mov     rax, [rax+88h]^^^mov     rdi, r13^^^mov     dword ptr [rax], 0^^^mov     dword ptr [rax+4], 0^^^mov     qword ptr [rax+8], 0^^^call    _IO_iter_next^^^mov     r13, rax^^^call    _IO_iter_end^^^cmp     r13, rax^^^jnz     short loc_44C2B8^^^call    _IO_list_resetlock^^^test    rbx, rbx^^^mov     cs:qword_6C2B30, 0^^^mov     cs:_dl_load_lock, 0^^^mov     cs:qword_6C2B28, 0^^^mov     cs:qword_6C2B38, 0^^^mov     cs:qword_6C2B40, 0^^^mov     dword ptr cs:qword_6C2B30, 1^^^jz      short loc_44C361^^^nop     dword ptr [rax+00h]^^^mov     rax, [rbx]^^^mov     rdx, [rax+18h]^^^test    rdx, rdx^^^jz      short loc_44C351^^^call    rdx^^^mov     rax, [rbx]^^^mov     rbx, [rbx+8]^^^mov     dword ptr [rax+28h], 1^^^test    rbx, rbx^^^jnz     short loc_44C340^^^mov     cs:__fork_lock, 0^^^lea     rsp, [rbp-18h]^^^mov     eax, r12d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^or      r12d, 0FFFFFFFFh^^^mov     fs:[rdx], eax^^^nop     dword ptr [rax+00000000h]^^^mov     eax, fs:2D0h^^^cmp     r13d, eax^^^jnz     short loc_44C417^^^mov     fs:2D4h, r9d^^^call    _IO_list_unlock^^^test    rbx, rbx^^^jz      short loc_44C36B^^^mov     r13d, 0CAh^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rbx]^^^mov     rdx, [rax+10h]^^^test    rdx, rdx^^^jz      short loc_44C3D1^^^call    rdx^^^mov     rax, [rbx]^^^lock dec dword ptr [rax+28h]^^^setz    dl^^^test    dl, dl^^^jz      short loc_44C3F5^^^mov     edx, [rax+2Ch]^^^test    edx, edx^^^jz      short loc_44C3F5^^^mov     edi, [rax+28h]^^^mov     edx, 1^^^mov     eax, r13d^^^mov     esi, 81h^^^syscall^^^mov     rbx, [rbx+8]^^^test    rbx, rbx^^^jnz     short loc_44C3C0^^^lea     rsp, [rbp-18h]^^^mov     eax, r12d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^xor     ebx, ebx^^^jmp     loc_44C1F2^^^mov     ecx, offset __PRETTY_FUNCTION___13007^^^mov     edx, 0D4h^^^mov     esi, offset a__NptlSysdepsU^^^mov     edi, offset a__typeofStruct^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___13007^^^mov     edx, 8Eh^^^mov     esi, offset a__NptlSysdepsU^^^mov     edi, offset a__typeofSelfTi^^^call    __assert_fail^^^
__ctype_init$$$mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rdx, [rax]^^^mov     rcx, [rdx+40h]^^^mov     rdx, 0FFFFFFFFFFFFFFE8h^^^add     rcx, 100h^^^mov     fs:[rdx], rcx^^^mov     rdx, [rax]^^^mov     rcx, [rdx+48h]^^^mov     rdx, 0FFFFFFFFFFFFFFD8h^^^add     rcx, 200h^^^mov     fs:[rdx], rcx^^^mov     rax, [rax]^^^mov     rdx, [rax+58h]^^^mov     rax, 0FFFFFFFFFFFFFFE0h^^^add     rdx, 200h^^^mov     fs:[rax], rdx^^^retn^^^
__getclktck$$$mov     eax, cs:_dl_clktck^^^mov     edx, 64h^^^test    eax, eax^^^cmovz   eax, edx^^^retn^^^
__assert_fail$$$push    r13^^^mov     r13, rcx^^^push    r12^^^mov     r12d, edx^^^mov     edx, 5^^^push    rbp^^^mov     rbp, rsi^^^mov     esi, offset aSSSUSSassert_0^^^push    rbx^^^mov     rbx, rdi^^^mov     edi, offset _libc_intl_domainname^^^sub     rsp, 8^^^call    dcgettext^^^mov     r8, r13^^^mov     ecx, r12d^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    __assert_fail_base^^^
__strcmp_ssse3$$$mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^cmp     ecx, 30h^^^ja      short loc_438260^^^cmp     eax, 30h^^^ja      short loc_438260^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439440^^^add     rsi, 10h^^^add     rdi, 10h^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_4382A0^^^ja      short loc_438283^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49CBF0^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax+00000000h]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^jmp     short loc_4382E0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438420^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438420^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_4383A0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_438440^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4383A6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438540^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438540^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_4384C0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_438560^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4384C6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438660^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438660^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_4385E0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_438680^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4385E6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438780^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438780^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438700^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_4387A0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438706^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_4388A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4388A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438820^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_4388C0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438826^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_4389C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4389C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438940^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_4389E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438946^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438AE0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438AE0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438A60^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_438B00^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438A66^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438C00^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438C00^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438B80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_438C20^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438B86^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438D20^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438D20^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438CA0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_438D40^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438CA6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438E40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438E40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438DC0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_438E60^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438DC6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_438F60^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_438F60^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_438EE0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_438F80^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_438EE6^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_439080^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_439080^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_439000^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_4390A0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_439006^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_4391A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4391A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_439120^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_4391C0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_439126^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_4392C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4392C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_439240^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_4392E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_439246^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_439410^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_439425^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      short loc_4393E0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_4393E0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     short loc_439420^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     short loc_439360^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_439400^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_439366^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^xchg    ax, ax^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_439440^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^sub     eax, ecx^^^retn^^^
find_derivation$$$push    rbp^^^mov     rax, rsi^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 98h^^^test    rsi, rsi^^^mov     [rbp+var_98], rdx^^^cmovz   rax, rdi^^^mov     rdx, rcx^^^test    rcx, rcx^^^cmovz   rdx, [rbp+var_98]^^^mov     [rbp+var_80], rdi^^^lea     rdi, [rbp+var_50]^^^mov     [rbp+var_68], rsi^^^mov     esi, offset known_derivations^^^mov     [rbp+var_88], rcx^^^mov     [rbp+var_A8], r8^^^mov     [rbp+var_A0], r9^^^mov     [rbp+var_48], rax^^^mov     [rbp+var_40], 0^^^mov     [rbp+var_50], rdx^^^mov     edx, offset derivation_compare^^^mov     [rbp+var_38], 0^^^call    tfind^^^test    rax, rax^^^jz      loc_457F58^^^mov     rdx, [rax]^^^mov     r15, [rdx+10h]^^^mov     rdx, [rbp+var_A8]^^^mov     [rdx], r15^^^mov     rax, [rax]^^^mov     r14, [rax+18h]^^^mov     rax, [rbp+var_A0]^^^mov     [rax], r14^^^lea     rax, [r14+r14*2]^^^mov     r13, r14^^^lea     rax, [r14+rax*4]^^^lea     rbx, [r15+rax*8-68h]^^^jmp     short loc_457F1A^^^call    __gconv_find_shlib^^^test    rax, rax^^^mov     [rbx], rax^^^jz      loc_458828^^^mov     rdx, [rax+18h]^^^mov     r13, [rax+20h]^^^mov     rax, [rax+28h]^^^mov     qword ptr [rbx+30h], 0^^^mov     [rbx+28h], rdx^^^mov     [rbx+38h], r13^^^mov     [rbx+40h], rax^^^test    r13, r13^^^jz      short loc_457F13^^^ror     r13, 11h^^^xor     r13, fs:30h^^^mov     rdi, r13^^^call    _dl_mcount_wrapper_check^^^mov     rdi, rbx^^^call    r13^^^mov     rax, [rbx+30h]^^^test    rax, rax^^^jz      short loc_457F13^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rbx+30h], rax^^^sub     rbx, 68h^^^mov     r13, r12^^^test    r13, r13^^^jz      short loc_457F43^^^mov     eax, [rbx+10h]^^^lea     r12, [r13-1]^^^lea     edx, [rax+1]^^^test    eax, eax^^^mov     [rbx+10h], edx^^^jnz     short loc_457F13^^^mov     rdi, [rbx+8]^^^test    rdi, rdi^^^jnz     loc_457EA8^^^mov     r13, [rbx+38h]^^^jmp     short loc_457ED9^^^xor     r12d, r12d^^^lea     rsp, [rbp-28h]^^^mov     eax, r12d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     [rbp+var_88], 0^^^jz      loc_458740^^^sub     rsp, 40h^^^mov     rdx, [rbp+var_88]^^^lea     rbx, [rsp+100h+var_F1]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rdx^^^mov     [rbx], rdx^^^mov     r15, rbx^^^call    strlen^^^sub     rsp, 40h^^^mov     rdx, [rbp+var_98]^^^mov     [rbx+8], rax^^^lea     r12, [rsp+140h+var_131]^^^mov     dword ptr [rbx+14h], 0^^^mov     dword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+20h], 0^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rbx+28h], 0^^^mov     rdi, rdx^^^mov     [r12], rdx^^^call    strlen^^^mov     dword ptr [r12+14h], 0^^^mov     [r12+8], rax^^^mov     dword ptr [r12+10h], 0^^^mov     qword ptr [r12+18h], 0^^^mov     qword ptr [r12+20h], 0^^^mov     qword ptr [r12+28h], 0^^^mov     [rbx+28h], r12^^^add     r12, 28h^^^mov     [rbp+var_90], rbx^^^mov     [rbp+var_B0], r12^^^xor     r13d, r13d^^^mov     [rbp+var_74], 7FFFFFFFh^^^mov     r14d, 7FFFFFFFh^^^mov     [rbp+var_70], r13^^^xchg    ax, ax^^^mov     ebx, [r15+14h]^^^cmp     ebx, r14d^^^jg      short loc_458088^^^cmp     r14d, ebx^^^jz      loc_458525^^^mov     r13, cs:__gconv_modules_db^^^test    r13, r13^^^jz      short loc_458088^^^mov     r12, [r15]^^^jmp     short loc_458061^^^mov     r13, [r13+30h]^^^test    r13, r13^^^jz      short loc_458088^^^mov     rsi, [r13+0]^^^mov     rdi, r12^^^call    sub_4003A0^^^cmp     eax, 0^^^jz      loc_4582A0^^^jge     short loc_458058^^^mov     r13, [r13+20h]^^^test    r13, r13^^^jnz     short loc_458061^^^nop     dword ptr [rax+00000000h]^^^mov     r15, [r15+28h]^^^test    r15, r15^^^jnz     short loc_458030^^^mov     r13, [rbp+var_70]^^^test    r13, r13^^^jz      loc_458714^^^mov     rax, [r13+28h]^^^test    rax, rax^^^jz      short loc_4580BA^^^mov     edx, [r13+14h]^^^cmp     [rax+14h], edx^^^jl      loc_45868B^^^jz      loc_458818^^^cmp     [rbp+var_88], 0^^^mov     rax, [rbp+var_88]^^^cmovz   rax, [rbp+var_98]^^^xor     edi, edi^^^xor     edx, edx^^^mov     [rbp+var_58], rax^^^mov     rax, [r13+20h]^^^test    rax, rax^^^jz      short loc_458101^^^nop     word ptr [rax+rax+00h]^^^mov     rax, [rax+20h]^^^add     rdx, 1^^^test    rax, rax^^^jnz     short loc_4580E8^^^lea     rax, [rdx+rdx*2]^^^lea     rdi, [rdx+rax*4]^^^shl     rdi, 3^^^mov     [rbp+var_C0], rdx^^^call    malloc^^^mov     rbx, rax^^^mov     rdx, [rbp+var_C0]^^^mov     rax, [rbp+var_A0]^^^test    rbx, rbx^^^jz      loc_458695^^^test    rdx, rdx^^^mov     [rax], rdx^^^jz      loc_458869^^^mov     r12, rax^^^lea     rax, [rdx+rdx*2]^^^lea     r15, [rdx-1]^^^lea     rax, [rdx+rax*4]^^^lea     r14, [rbx+rax*8-68h]^^^jmp     short loc_4581B2^^^mov     rax, [r13+20h]^^^cmp     [r12], rdx^^^mov     rax, [rax]^^^mov     [r14+18h], rax^^^jz      short loc_4581D8^^^lea     rax, [rdx+rdx*2]^^^lea     rax, [rdx+rax*4]^^^mov     rax, [rbx+rax*8+18h]^^^mov     [r14+20h], rax^^^mov     rax, [r13+18h]^^^mov     dword ptr [r14+10h], 1^^^mov     qword ptr [r14+60h], 0^^^mov     rdi, [rax+18h]^^^cmp     byte ptr [rdi], 2Fh^^^jz      short loc_4581F8^^^mov     rsi, r14^^^call    __gconv_get_builtin_trans^^^sub     r14, 68h^^^test    r15, r15^^^mov     r13, [r13+20h]^^^lea     rax, [r15-1]^^^jz      loc_4585B3^^^mov     rdx, r15^^^mov     r15, rax^^^test    r15, r15^^^jnz     short loc_458150^^^mov     rdi, [rbp+var_58]^^^mov     [rbp+var_C0], rdx^^^call    strdup^^^mov     rdx, [rbp+var_C0]^^^cmp     [r12], rdx^^^mov     [r14+18h], rax^^^jnz     short loc_458161^^^mov     rdi, [r13+0]^^^mov     [rbp+var_C0], rdx^^^call    strdup^^^mov     rdx, [rbp+var_C0]^^^jmp     loc_45816E^^^mov     [rbp+var_C0], rdx^^^call    __gconv_find_shlib^^^test    rax, rax^^^jz      loc_4587A3^^^mov     rcx, [rax]^^^mov     [r14], rax^^^mov     [r14+8], rcx^^^mov     rcx, [rax+18h]^^^mov     [r14+28h], rcx^^^mov     rcx, [rax+20h]^^^mov     rax, [rax+28h]^^^mov     qword ptr [r14+30h], 0^^^test    rcx, rcx^^^mov     [r14+38h], rcx^^^mov     [r14+40h], rax^^^jz      loc_458197^^^mov     rax, rcx^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     rdi, rax^^^mov     [rbp+var_B8], rax^^^call    _dl_mcount_wrapper_check^^^mov     rdi, r14^^^mov     rax, [rbp+var_B8]^^^call    rax^^^test    eax, eax^^^mov     rdx, [rbp+var_C0]^^^jnz     loc_458871^^^mov     rax, [r14+30h]^^^test    rax, rax^^^jz      loc_458197^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [r14+30h], rax^^^jmp     loc_458197^^^mov     [rbp+var_60], r15^^^mov     r15d, r14d^^^jmp     short loc_458304^^^cmp     [rbp+var_68], 0^^^jz      short loc_4582CB^^^mov     rsi, [rbp+var_68]^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jz      loc_45834D^^^cmp     r15d, dword ptr [rbp+var_58]^^^mov     rbx, [rbp+var_90]^^^jg      loc_4583F5^^^cmp     dword ptr [rbp+var_58], r15d^^^jnz     short loc_4582F0^^^cmp     r14d, [rbp+var_74]^^^jl      loc_4583F5^^^nop     dword ptr [rax+00h]^^^mov     r13, [r13+28h]^^^test    r13, r13^^^jz      loc_4583C8^^^mov     rdx, [rbp+var_60]^^^mov     ebx, [rdx+14h]^^^mov     r12, [r13+8]^^^cmp     byte ptr [r12], 2Dh^^^jnz     short loc_458326^^^cmp     byte ptr [r12+1], 0^^^jnz     short loc_458326^^^cmp     [rbp+var_68], 0^^^jz      loc_458548^^^mov     r12, [rbp+var_68]^^^add     ebx, [r13+10h]^^^mov     rdx, [rbp+var_60]^^^mov     rdi, r12^^^mov     rsi, [rbp+var_80]^^^mov     r14d, [r13+14h]^^^add     r14d, [rdx+10h]^^^mov     dword ptr [rbp+var_58], ebx^^^call    sub_4003A0^^^test    eax, eax^^^jnz     loc_4582B0^^^mov     rbx, [rbp+var_70]^^^test    rbx, rbx^^^jnz     short loc_45836D^^^jmp     loc_458570^^^mov     rbx, [rbx+28h]^^^test    rbx, rbx^^^jz      loc_458570^^^mov     rsi, [rbx]^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_458360^^^mov     eax, [rbx+14h]^^^cmp     eax, dword ptr [rbp+var_58]^^^jg      loc_4584CD^^^cmp     dword ptr [rbp+var_58], eax^^^jz      loc_4584C3^^^cmp     r15d, dword ptr [rbp+var_58]^^^jg      loc_4584ED^^^cmp     r14d, [rbp+var_74]^^^jge     loc_4582F0^^^cmp     dword ptr [rbp+var_58], r15d^^^mov     r13, [r13+28h]^^^cmovnz  r14d, [rbp+var_74]^^^cmovz   r15d, dword ptr [rbp+var_58]^^^test    r13, r13^^^mov     [rbp+var_74], r14d^^^jnz     loc_4582FD^^^nop     dword ptr [rax+00h]^^^mov     r14d, r15d^^^mov     r15, [rbp+var_60]^^^mov     r15, [r15+28h]^^^test    r15, r15^^^jnz     loc_458030^^^jmp     loc_458091^^^mov     rbx, [rbx+28h]^^^test    rbx, rbx^^^jz      loc_4586C0^^^mov     rsi, [rbx]^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_4583E8^^^mov     edx, dword ptr [rbp+var_58]^^^cmp     edx, [rbx+14h]^^^jge     loc_45850A^^^mov     rdx, [rbp+var_60]^^^mov     rdi, [rbp+var_90]^^^mov     [rbx+18h], r13^^^mov     [rbx+20h], rdx^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, [rdi+18h]^^^test    rax, rax^^^jz      short loc_458461^^^mov     rdx, [rdi+20h]^^^mov     esi, [rax+10h]^^^mov     ecx, [rax+14h]^^^mov     rax, [rdx+18h]^^^test    rax, rax^^^jz      short loc_45845B^^^nop     dword ptr [rax+00h]^^^mov     rdx, [rdx+20h]^^^add     esi, [rax+10h]^^^add     ecx, [rax+14h]^^^mov     rax, [rdx+18h]^^^test    rax, rax^^^jnz     short loc_458448^^^mov     [rdi+14h], esi^^^mov     [rdi+10h], ecx^^^mov     rdi, [rdi+28h]^^^test    rdi, rdi^^^jnz     short loc_458428^^^cmp     [rbp+var_70], 0^^^jz      loc_4582F0^^^mov     rax, [rbp+var_70]^^^mov     edi, [rbp+var_74]^^^jmp     short loc_45848E^^^cmp     r15d, edx^^^jz      short loc_458500^^^mov     rax, [rax+28h]^^^test    rax, rax^^^jz      short loc_4584BB^^^mov     rcx, [rax+18h]^^^mov     rsi, [rax+20h]^^^mov     edx, [rcx+10h]^^^add     edx, [rsi+14h]^^^mov     ecx, [rcx+14h]^^^add     ecx, [rsi+10h]^^^cmp     edx, r15d^^^mov     [rax+14h], edx^^^mov     [rax+10h], ecx^^^jge     short loc_458480^^^mov     rax, [rax+28h]^^^mov     edi, ecx^^^mov     r15d, edx^^^test    rax, rax^^^jnz     short loc_45848E^^^mov     [rbp+var_74], edi^^^jmp     loc_4582F0^^^cmp     [rbx+10h], r14d^^^jle     loc_458391^^^mov     rdx, [rbp+var_60]^^^cmp     r15d, dword ptr [rbp+var_58]^^^mov     [rbx+18h], r13^^^mov     [rbx+10h], r14d^^^mov     [rbx+20h], rdx^^^mov     edx, dword ptr [rbp+var_58]^^^mov     [rbx+14h], edx^^^jle     loc_45839B^^^mov     [rbp+var_74], r14d^^^mov     r15d, dword ptr [rbp+var_58]^^^jmp     loc_4582F0^^^cmp     ecx, edi^^^cmovl   edi, ecx^^^jmp     loc_458485^^^jnz     loc_4582F0^^^cmp     r14d, [rbx+10h]^^^jge     loc_4582F0^^^nop     word ptr [rax+rax+00h]^^^jmp     loc_458410^^^mov     edx, [rbp+var_74]^^^cmp     [r15+10h], edx^^^jl      loc_458042^^^mov     r15, [r15+28h]^^^test    r15, r15^^^jnz     loc_458030^^^jmp     loc_458091^^^add     ebx, [r13+10h]^^^mov     rdx, [rbp+var_60]^^^mov     r14d, [r13+14h]^^^mov     r12, [rbp+var_80]^^^add     r14d, [rdx+10h]^^^mov     dword ptr [rbp+var_58], ebx^^^mov     rbx, [rbp+var_70]^^^test    rbx, rbx^^^jnz     loc_45836D^^^nop     dword ptr [rax+00h]^^^sub     rsp, 40h^^^mov     rdi, r12^^^lea     rbx, [rsp+180h+var_171]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbx], r12^^^call    strlen^^^mov     edx, dword ptr [rbp+var_58]^^^mov     [rbx+8], rax^^^mov     [rbx+10h], r14d^^^mov     [rbx+18h], r13^^^mov     [rbx+14h], edx^^^mov     rdx, [rbp+var_60]^^^mov     [rbx+20h], rdx^^^mov     rdx, [rbp+var_70]^^^mov     [rbp+var_70], rbx^^^mov     [rbx+28h], rdx^^^jmp     loc_458391^^^mov     rdx, [rbp+var_A0]^^^mov     r15, [rdx]^^^mov     rax, [rbp+var_A8]^^^xor     r12d, r12d^^^mov     [rax], rbx^^^cmp     [rbp+var_68], 0^^^mov     rax, [rbp+var_80]^^^cmovnz  rax, [rbp+var_68]^^^cmp     [rbp+var_88], 0^^^mov     rdx, [rbp+var_98]^^^cmovnz  rdx, [rbp+var_88]^^^mov     [rbp+var_68], rax^^^mov     rdi, rdx^^^mov     [rbp+var_88], rdx^^^call    strlen^^^mov     rdi, [rbp+var_68]^^^add     rax, 1^^^mov     [rbp+var_58], rax^^^call    strlen^^^mov     rdx, [rbp+var_58]^^^lea     r14, [rax+1]^^^lea     rdi, [rdx+r14+20h]^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_457F46^^^lea     rdi, [rax+20h]^^^mov     rdx, [rbp+var_58]^^^mov     rsi, [rbp+var_88]^^^mov     [rax], rdi^^^call    mempcpy^^^mov     rsi, [rbp+var_68]^^^mov     rdx, r14^^^mov     rdi, rax^^^call    memcpy^^^mov     [r13+10h], rbx^^^mov     [r13+8], rax^^^mov     edx, offset derivation_compare^^^mov     [r13+18h], r15^^^mov     esi, offset known_derivations^^^mov     rdi, r13^^^call    tsearch^^^test    rax, rax^^^jnz     loc_457F46^^^mov     rdi, r13^^^call    free^^^jmp     loc_457F46^^^mov     r13, rax^^^xchg    ax, ax^^^jmp     loc_4580BA^^^mov     rdx, [rbp+var_A8]^^^mov     qword ptr [rax], 0^^^xor     r15d, r15d^^^mov     r12d, 3^^^mov     qword ptr [rdx], 0^^^jmp     loc_4585CA^^^sub     rsp, 40h^^^mov     rdi, r12^^^lea     rbx, [rsp+180h+var_171]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbx], r12^^^call    strlen^^^mov     edx, dword ptr [rbp+var_58]^^^mov     [rbx+8], rax^^^mov     [rbx+10h], r14d^^^mov     [rbx+18h], r13^^^mov     qword ptr [rbx+28h], 0^^^mov     [rbx+14h], edx^^^mov     rdx, [rbp+var_60]^^^mov     [rbx+20h], rdx^^^mov     rdx, [rbp+var_B0]^^^mov     [rdx], rbx^^^add     rbx, 28h^^^mov     [rbp+var_B0], rbx^^^jmp     loc_4582F0^^^mov     rax, [rbp+var_A8]^^^mov     rdx, [rbp+var_A0]^^^xor     ebx, ebx^^^xor     r15d, r15d^^^mov     qword ptr [rax], 0^^^mov     qword ptr [rdx], 0^^^mov     r12d, 1^^^jmp     loc_4585CA^^^sub     rsp, 40h^^^mov     rdx, [rbp+var_98]^^^lea     rbx, [rsp+100h+var_F1]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rdx^^^mov     [rbx], rdx^^^mov     r15, rbx^^^call    strlen^^^lea     rdx, [rbx+28h]^^^mov     [rbx+8], rax^^^mov     dword ptr [rbx+14h], 0^^^mov     dword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     [rbp+var_B0], rdx^^^mov     [rbp+var_90], rbx^^^jmp     loc_45801A^^^xor     r12d, r12d^^^mov     rax, [rbp+var_A0]^^^add     r15, 1^^^cmp     [rax], r15^^^jbe     short loc_4587DE^^^lea     rax, [r15+r15*2]^^^lea     rax, [r15+rax*4]^^^lea     r13, [rbx+rax*8]^^^mov     rdi, r13^^^add     r15, 1^^^add     r13, 68h^^^call    __gconv_release_step^^^mov     rdx, [rbp+var_A0]^^^cmp     r15, [rdx]^^^jb      short loc_4587C2^^^mov     rdi, rbx^^^xor     r15d, r15d^^^xor     ebx, ebx^^^call    free^^^mov     rax, [rbp+var_A0]^^^mov     rdx, [rbp+var_A8]^^^test    r12d, r12d^^^mov     qword ptr [rax], 0^^^mov     qword ptr [rdx], 0^^^jz      loc_458735^^^jmp     loc_4585CA^^^mov     edx, [r13+10h]^^^cmp     [rax+10h], edx^^^cmovl   r13, rax^^^jmp     loc_4580BA^^^sub     dword ptr [rbx+10h], 1^^^cmp     r14, r13^^^mov     r12d, 1^^^jbe     loc_457F46^^^lea     rax, [r13+r13*2+0]^^^lea     rax, [r13+rax*4+0]^^^lea     rbx, [r15+rax*8]^^^mov     rdi, rbx^^^add     r13, 1^^^add     rbx, 68h^^^call    __gconv_release_step^^^cmp     r14, r13^^^ja      short loc_458849^^^mov     r12d, 1^^^jmp     loc_457F46^^^xor     r15d, r15d^^^jmp     loc_4585BD^^^lea     r15, [rdx-2]^^^mov     r12d, eax^^^lea     rax, [r15+r15*2]^^^lea     rax, [r15+rax*4]^^^mov     qword ptr [rbx+rax*8+40h], 0^^^jmp     loc_4587A6^^^
_IO_new_file_seekoff$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_10], r14^^^mov     r12d, edx^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_8], r15^^^sub     rsp, 0C8h^^^mov     rax, [rdi+10h]^^^cmp     [rdi+18h], rax^^^mov     rbp, rsi^^^mov     r14d, ecx^^^mov     rdx, [rdi+20h]^^^mov     rax, [rdi+28h]^^^jz      loc_429C20^^^xor     r15d, r15d^^^test    r14d, r14d^^^mov     ecx, 1^^^cmovz   r12d, ecx^^^mov     ecx, 0^^^cmovz   rbp, rcx^^^cmp     rdx, rax^^^jb      loc_429A38^^^mov     eax, [rbx]^^^test    ah, 8^^^jnz     loc_429A38^^^cmp     qword ptr [rbx+38h], 0^^^jz      loc_429A56^^^cmp     r12d, 1^^^jz      loc_429AA0^^^cmp     r12d, 2^^^jz      loc_429AE0^^^test    r14d, r14d^^^mov     r13, rbp^^^jz      loc_4299F8^^^mov     rsi, [rbx+90h]^^^cmp     rsi, 0FFFFFFFFFFFFFFFFh^^^jz      loc_429B58^^^cmp     qword ptr [rbx+18h], 0^^^mov     eax, [rbx]^^^jz      loc_429B5A^^^test    ah, 1^^^jnz     loc_429B5A^^^mov     rdx, [rbx+38h]^^^mov     rcx, rdx^^^sub     rcx, [rbx+10h]^^^add     rcx, rsi^^^cmp     rbp, rcx^^^jl      loc_429B5A^^^cmp     rbp, rsi^^^jge     loc_429B5A^^^mov     rdi, rbp^^^and     eax, 0FFFFFFEFh^^^mov     [rbx+18h], rdx^^^sub     rdi, rcx^^^mov     [rbx+28h], rdx^^^mov     [rbx+20h], rdx^^^mov     rcx, rdi^^^mov     [rbx+30h], rdx^^^mov     [rbx], eax^^^add     rcx, rdx^^^test    rsi, rsi^^^mov     [rbx+8], rcx^^^js      short loc_4299F8^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^nop     dword ptr [rax+00000000h]^^^mov     rax, r13^^^mov     rbx, [rsp+0C8h+var_30]^^^mov     rbp, [rsp+0C8h+var_28]^^^mov     r12, [rsp+0C8h+var_20]^^^mov     r13, [rsp+0C8h+var_18]^^^mov     r14, [rsp+0C8h+var_10]^^^mov     r15, [rsp+0C8h+var_8]^^^add     rsp, 0C8h^^^retn^^^mov     rdi, rbx^^^mov     r13, 0FFFFFFFFFFFFFFFFh^^^call    _IO_switch_to_get_mode^^^test    eax, eax^^^jnz     short loc_4299F8^^^cmp     qword ptr [rbx+38h], 0^^^jnz     loc_42994E^^^mov     rdi, [rbx+18h]^^^test    rdi, rdi^^^jz      short loc_429A6A^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     rax, [rbx+38h]^^^cmp     r12d, 1^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+30h], rax^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^jnz     loc_429958^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rax, [rbx+8]^^^sub     rax, [rbx+10h]^^^mov     r13, [rbx+90h]^^^add     rbp, rax^^^cmp     r13, 0FFFFFFFFFFFFFFFFh^^^jz      loc_429C80^^^add     rbp, r13^^^js      loc_429CB9^^^xor     r12d, r12d^^^test    r14d, r14d^^^mov     r13, rbp^^^jnz     loc_42996E^^^jmp     loc_4299F8^^^mov     rax, [rbx+0D8h]^^^mov     rsi, rsp^^^mov     rdi, rbx^^^call    qword ptr [rax+90h]^^^test    eax, eax^^^jz      loc_429BF8^^^mov     rdi, rbx^^^call    _IO_unsave_markers^^^mov     rax, [rbx+0D8h]^^^mov     edx, r12d^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r13, rax^^^jz      loc_4299F8^^^mov     [rbx+90h], rax^^^mov     rax, [rbx+38h]^^^and     dword ptr [rbx], 0FFFFFFEFh^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+30h], rax^^^jmp     loc_4299F8^^^mov     eax, [rbx]^^^test    al, 4^^^jnz     short loc_429AFB^^^mov     rax, [rbx+38h]^^^mov     rdx, [rbx+40h]^^^mov     r12, rbp^^^mov     rsi, rax^^^sub     rsi, rdx^^^sub     rdx, rax^^^and     rsi, rbp^^^sub     r12, rsi^^^cmp     r12, rdx^^^jle     short loc_429B83^^^mov     rsi, rbp^^^xor     r12d, r12d^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^test    rax, rax^^^mov     r13, rax^^^js      loc_429CD3^^^test    r12, r12^^^jz      loc_429C40^^^mov     rax, [rbx+0D8h]^^^test    r15d, r15d^^^mov     rsi, [rbx+38h]^^^mov     rdx, r12^^^mov     rax, [rax+70h]^^^jnz     short loc_429BC8^^^mov     rdx, [rbx+40h]^^^sub     rdx, rsi^^^mov     rdi, rbx^^^call    rax^^^cmp     r12, rax^^^mov     rcx, rax^^^jle     short loc_429C44^^^mov     rbp, r12^^^mov     r12d, 1^^^mov     rdx, rbp^^^sub     rdx, rax^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^cmovnz  rbp, rdx^^^jmp     loc_429AFB^^^mov     eax, [rsp+0C8h+var_B0]^^^and     eax, 0F000h^^^cmp     eax, 8000h^^^jnz     loc_429AFB^^^add     rbp, [rsp+0C8h+var_98]^^^xor     r12d, r12d^^^jmp     loc_429962^^^cmp     rdx, rax^^^jnz     loc_429917^^^mov     rax, rdx^^^mov     r15d, 1^^^jmp     loc_42991A^^^xor     ecx, ecx^^^xor     eax, eax^^^mov     rdx, [rbx+38h]^^^add     r13, rax^^^and     dword ptr [rbx], 0FFFFFFEFh^^^mov     [rbx+90h], r13^^^mov     r13, rbp^^^add     r12, rdx^^^add     rcx, rdx^^^mov     [rbx+18h], rdx^^^mov     [rbx+8], r12^^^mov     [rbx+10h], rcx^^^mov     [rbx+28h], rdx^^^mov     [rbx+20h], rdx^^^mov     [rbx+30h], rdx^^^jmp     loc_4299F8^^^test    r14d, r14d^^^jnz     loc_429AFB^^^mov     rax, [rbx+0D8h]^^^xor     esi, esi^^^mov     edx, 1^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r13, rax^^^jz      loc_4299F8^^^mov     [rbx+90h], rax^^^jmp     loc_429ABC^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_4299F8^^^mov     r13, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_4299F8^^^
_L_lock_60$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_474526^^^
mremap$$$mov     r10, rcx        ^^^mov     eax, 19h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
__gconv_find_transform$$$mov     eax, 0^^^mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     rbp, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 58h^^^test    rax, rax^^^mov     rbx, rsi^^^mov     r13, rdx^^^mov     r14, rcx^^^mov     r12d, r8d^^^jz      loc_458B65^^^mov     esi, offset __gconv_read_conf^^^mov     edi, offset once_0^^^call    near ptr 0^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4589EE^^^lock cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_3954^^^jmp     short loc_4589FB^^^cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_3954^^^mov     rdx, r13^^^mov     r8d, r12d^^^mov     rcx, r14^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    __gconv_lookup_cache^^^cmp     eax, 2^^^mov     edx, eax^^^jz      short loc_458A60^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458A2E^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_3968^^^jmp     short loc_458A3A^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_3968^^^mov     eax, edx^^^mov     rbx, [rsp+58h+var_30]^^^mov     rbp, [rsp+58h+var_28]^^^mov     r12, [rsp+58h+var_20]^^^mov     r13, [rsp+58h+var_18]^^^mov     r14, [rsp+58h+var_10]^^^mov     r15, [rsp+58h+var_8]^^^add     rsp, 58h^^^retn^^^cmp     cs:__gconv_modules_db, 0^^^jz      loc_458B28^^^lea     rdi, [rsp+58h+var_48]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rsp+58h+var_48], rbx^^^call    tfind^^^test    rax, rax^^^jz      loc_458B5E^^^mov     rax, [rax]^^^mov     rcx, [rax+8]^^^lea     rdi, [rsp+58h+var_48]^^^mov     edx, offset __gconv_alias_compare^^^mov     esi, offset __gconv_alias_db^^^mov     [rsp+58h+var_50], rcx^^^mov     [rsp+58h+var_48], rbp^^^call    tfind^^^test    rax, rax^^^mov     rcx, [rsp+58h+var_50]^^^jz      loc_458B56^^^mov     rax, [rax]^^^mov     r15, [rax+8]^^^and     r12d, 1^^^jnz     loc_458B83^^^mov     rdx, rbx^^^mov     r9, r14^^^mov     r8, r13^^^mov     rsi, r15^^^mov     rdi, rbp^^^call    find_derivation^^^mov     edx, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458B02^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_4064^^^jmp     short loc_458B0E^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_4064^^^test    edx, edx^^^jnz     loc_458A3A^^^xor     edx, edx^^^cmp     qword ptr [r13+0], 0^^^setz    dl^^^jmp     loc_458A3A^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458B40^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_4086^^^jmp     short loc_458B4C^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_4086^^^mov     edx, 1^^^jmp     loc_458A3A^^^xor     r15d, r15d^^^jmp     loc_458ACA^^^xor     ecx, ecx^^^jmp     loc_458A97^^^cmp     cs:once_0, 0^^^jnz     loc_4589CE^^^call    __gconv_read_conf^^^or      cs:once_0, 2^^^jmp     loc_4589CE^^^mov     rsi, rbx^^^mov     rdi, rbp^^^mov     [rsp+58h+var_50], rcx^^^call    sub_4003A0^^^test    eax, eax^^^mov     rcx, [rsp+58h+var_50]^^^jz      short loc_458BF8^^^test    r15, r15^^^jz      short loc_458BB5^^^mov     rsi, rbx^^^mov     rdi, r15^^^call    sub_4003A0^^^test    eax, eax^^^mov     rcx, [rsp+58h+var_50]^^^jz      short loc_458BF8^^^test    rcx, rcx^^^jz      loc_458AD4^^^mov     rsi, rcx^^^mov     rdi, rbp^^^mov     [rsp+58h+var_50], rcx^^^call    sub_4003A0^^^test    eax, eax^^^mov     rcx, [rsp+58h+var_50]^^^jz      short loc_458BF8^^^test    r15, r15^^^jz      loc_458AD4^^^mov     rsi, rcx^^^mov     rdi, r15^^^call    sub_4003A0^^^test    eax, eax^^^mov     rcx, [rsp+58h+var_50]^^^jnz     loc_458AD4^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458C10^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_4198^^^jmp     short loc_458C1C^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_4198^^^or      edx, 0FFFFFFFFh^^^jmp     loc_458A3A^^^
sub_41B96B$$$mov     rdi, [rbp-560h]^^^cmp     dword ptr [rbp-5C8h], 0^^^mov     eax, 30h^^^movzx   edx, byte ptr [rbp-5F0h]^^^movzx   edi, byte ptr [rdi+1]^^^cmovz   edx, eax^^^mov     eax, offset loc_41ACA2^^^mov     [rbp-5F0h], dl^^^mov     rdx, [rbp-560h]^^^mov     ecx, edi^^^mov     [rbp-558h], dil^^^sub     ecx, 20h^^^add     rdx, 1^^^cmp     cl, 5Ah^^^ja      loc_41B826^^^movsx   eax, dil^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     loc_41B826^^^
_Unwind_ForcedUnwind$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_38], rax^^^mov     [rbp+var_30], rdx^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^lea     rbx, [rbp+var_220]^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     r13, rdx^^^mov     [rbp+var_8], r15^^^sub     rsp, 220h^^^mov     rdx, [rbp+8]^^^mov     r14, rsi^^^lea     rsi, [rbp+arg_0]^^^mov     r12, rdi^^^mov     rdi, rbx^^^call    uw_init_context_1^^^lea     rdi, [rbp+var_130]^^^mov     ecx, 1Eh^^^mov     rsi, rbx^^^rep movsq^^^lea     rsi, [rbp+var_130]^^^mov     [r12+10h], r14^^^mov     [r12+18h], r13^^^mov     rdi, r12^^^call    _Unwind_ForcedUnwind_Phase2^^^cmp     eax, 7^^^jz      short loc_492ABD^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^lea     rsi, [rbp+var_130]^^^mov     rdi, rbx^^^call    uw_install_context_1^^^mov     r12, [rbp+var_98]^^^mov     rdi, [rbp+var_A0]^^^mov     rbx, rax^^^mov     rsi, r12^^^call    _Unwind_DebugHook^^^mov     rcx, rbx^^^mov     [rbp+rbx+8], r12^^^mov     rax, [rbp+var_38]^^^lea     rcx, [rbp+rcx+8]^^^mov     rdx, [rbp+var_30]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^mov     rbp, [rbp+var_s0]^^^mov     rsp, rcx^^^retn^^^
_L_unlock_4086$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_458B4C^^^
wcrtomb$$$push    rbp^^^mov     rbp, rsp^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 78h^^^mov     rcx, 0FFFFFFFFFFFFFFA8h^^^mov     [rbp+var_74], esi^^^mov     esi, offset state^^^mov     rax, fs:[rcx]^^^mov     rax, [rax]^^^mov     [rbp+var_5C], 0^^^mov     [rbp+var_58], 1^^^mov     [rbp+var_60], 1^^^mov     [rbp+var_40], 0^^^mov     eax, [rax+0A8h]^^^add     rax, 1Eh^^^shr     rax, 4^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rax, [rsp+90h+var_74+3]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^test    rdx, rdx^^^cmovz   rdx, rsi^^^test    rdi, rdi^^^mov     [rbp+var_50], rdx^^^jz      loc_445F50^^^mov     rax, fs:[rcx]^^^mov     [rbp+var_70], rbx^^^mov     rdx, [rax]^^^mov     edx, [rdx+0A8h]^^^add     rdx, rbx^^^mov     [rbp+var_68], rdx^^^mov     r12, [rax]^^^mov     r13, [r12+28h]^^^test    r13, r13^^^jz      loc_445F5F^^^mov     rax, [r13+10h]^^^cmp     qword ptr [rax], 0^^^mov     r12, [rax+28h]^^^jz      short loc_445E19^^^ror     r12, 11h^^^xor     r12, fs:30h^^^mov     eax, [rbp+var_74]^^^test    eax, eax^^^jnz     short loc_445E90^^^mov     rdi, r12^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r13+10h]^^^xor     r8d, r8d^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     [rsp+90h+var_88], 1^^^mov     [rsp+90h+var_90], 1^^^lea     r9, [rbp+var_30]^^^lea     rsi, [rbp+var_70]^^^call    r12^^^cmp     eax, 4^^^jnz     loc_445F38^^^mov     rdx, [rbp+var_70]^^^mov     byte ptr [rdx], 0^^^add     rdx, 1^^^mov     [rbp+var_70], rdx^^^cmp     eax, 4^^^jnz     short loc_445ED2^^^nop     word ptr [rax+rax+00h]^^^cmp     eax, 4^^^jnz     loc_445F00^^^mov     rax, [rbp+var_70]^^^lea     rsp, [rbp-18h]^^^sub     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^lea     rax, [rbp+var_74]^^^mov     rdi, r12^^^mov     [rbp+var_28], rax^^^call    _dl_mcount_wrapper_check^^^mov     rcx, [rbp+var_28]^^^mov     rdi, [r13+10h]^^^lea     r9, [rbp+var_30]^^^mov     [rsp+90h+var_88], 1^^^mov     [rsp+90h+var_90], 0^^^xor     r8d, r8d^^^lea     rdx, [rbp+var_28]^^^lea     rsi, [rbp+var_70]^^^add     rcx, 4^^^call    r12^^^cmp     eax, 4^^^jz      short loc_445E70^^^test    eax, eax^^^jz      short loc_445E70^^^cmp     eax, 7^^^jz      short loc_445E70^^^cmp     eax, 6^^^xchg    ax, ax^^^jz      short loc_445E70^^^cmp     eax, 5^^^jz      short loc_445E79^^^mov     ecx, offset __PRETTY_FUNCTION___11481^^^mov     edx, 67h^^^mov     esi, offset aWcrtomb_c^^^mov     edi, offset aStatus__gconv_^^^call    __assert_fail^^^test    eax, eax^^^jz      loc_445E79^^^cmp     eax, 5^^^jz      loc_445E79^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 54h^^^lea     rsp, [rbp-18h]^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     rbp^^^retn^^^test    eax, eax^^^jnz     short loc_445ECD^^^mov     rdx, [rbp+var_70]^^^mov     byte ptr [rdx], 0^^^add     rdx, 1^^^mov     [rbp+var_70], rdx^^^jmp     loc_445E65^^^mov     rbx, rax^^^mov     [rbp+var_74], 0^^^jmp     loc_445DD5^^^cmp     r12, offset _nl_C_LC_CTYPE^^^mov     r13d, offset __wcsmbs_gconv_fcts_c^^^jz      loc_445DFE^^^mov     rdi, r12^^^call    __wcsmbs_load_conv^^^mov     r13, [r12+28h]^^^jmp     loc_445DFE^^^
wmemcpy$$$shl     rdx, 2          ^^^jmp     memcpy^^^
ptmalloc_unlock_all$$$mov     ecx, cs:__libc_malloc_initialized^^^test    ecx, ecx^^^jle     locret_403310^^^mov     eax, cs:atfork_recursive_cntr^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:atfork_recursive_cntr, eax^^^jnz     locret_403310^^^mov     rdx, cs:save_arena^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     fs:[rax], rdx^^^mov     rax, cs:save_malloc_hook^^^mov     edx, offset main_arena^^^mov     cs:__malloc_hook, rax^^^mov     rax, cs:save_free_hook^^^mov     cs:__free_hook, rax^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4032D4^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_1442^^^jmp     short loc_4032DC^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_1442^^^mov     rdx, [rdx+868h]^^^cmp     rdx, offset main_arena^^^jnz     short loc_4032C0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403304^^^lock dec cs:list_lock^^^jnz     _L_unlock_1451^^^jmp     short locret_403310^^^dec     cs:list_lock^^^jnz     _L_unlock_1451^^^rep retn^^^
__tzstring$$$push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^call    strlen^^^mov     rbx, cs:tzstring_list^^^mov     rbp, rax^^^test    rbx, rbx^^^jnz     short loc_446E9B^^^jmp     short loc_446F0E^^^mov     rbx, rax^^^mov     rax, [rbx+8]^^^cmp     rbp, rax^^^ja      short loc_446EBB^^^sub     rax, rbp^^^mov     rdi, r13^^^lea     r12, [rbx+rax+10h]^^^mov     rsi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_446EF9^^^mov     rax, [rbx]^^^test    rax, rax^^^jnz     short loc_446E98^^^lea     rdi, [rbp+11h]^^^xor     r12d, r12d^^^call    malloc^^^test    rax, rax^^^mov     r14, rax^^^jz      short loc_446EF9^^^lea     r12, [rax+10h]^^^mov     qword ptr [rax], 0^^^mov     [rax+8], rbp^^^mov     rsi, r13^^^mov     rdi, r12^^^call    sub_400320^^^test    rbx, rbx^^^jz      short loc_446F05^^^mov     [rbx], r14^^^pop     rbx^^^pop     rbp^^^mov     rax, r12^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     cs:tzstring_list, r14^^^jmp     short loc_446EF9^^^xor     ebx, ebx^^^jmp     short loc_446EC3^^^
save_for_backup$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 28h^^^mov     r14, [rdi+18h]^^^mov     rcx, [rdi+60h]^^^sub     r12, r14^^^test    rcx, rcx^^^jz      loc_42B58F^^^mov     rbx, r12^^^mov     rax, rcx^^^nop     dword ptr [rax+00000000h]^^^movsxd  rdx, dword ptr [rax+10h]^^^mov     rax, [rax]^^^cmp     rbx, rdx^^^cmovg   rbx, rdx^^^test    rax, rax^^^jnz     short loc_42B448^^^mov     rsi, [rbp+58h]^^^mov     rdi, [rbp+48h]^^^mov     rdx, r12^^^sub     rdx, rbx^^^mov     r15, rsi^^^sub     r15, rdi^^^cmp     rdx, r15^^^ja      short loc_42B4C0^^^sub     r15, rdx^^^test    rbx, rbx^^^js      loc_42B568^^^test    rdx, rdx^^^jnz     loc_42B548^^^add     r15, rdi^^^xor     eax, eax^^^test    rcx, rcx^^^mov     [rbp+50h], r15^^^jz      short loc_42B4AE^^^nop     word ptr [rax+rax+00000000h]^^^sub     [rcx+10h], r12d^^^mov     rcx, [rcx]^^^test    rcx, rcx^^^jnz     short loc_42B4A0^^^xor     eax, eax^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     rax, [rdx+64h]^^^mov     [rsp+58h+var_48], rdx^^^mov     [rsp+58h+var_50], rsi^^^mov     rdi, rax^^^mov     [rsp+58h+var_40], rax^^^call    malloc^^^test    rax, rax^^^mov     rdx, [rsp+58h+var_48]^^^mov     rsi, [rsp+58h+var_50]^^^jz      loc_42B5D5^^^test    rbx, rbx^^^lea     r15, [rax+64h]^^^js      loc_42B5A7^^^lea     rsi, [r14+rbx]^^^mov     rdi, r15^^^mov     [rsp+58h+var_48], rax^^^call    memcpy^^^mov     rcx, [rsp+58h+var_48]^^^mov     rdi, [rbp+48h]^^^mov     [rsp+58h+var_48], rcx^^^mov     r12, r13^^^call    free^^^mov     rcx, [rsp+58h+var_48]^^^sub     r12, [rbp+18h]^^^mov     [rbp+48h], rcx^^^add     rcx, [rsp+58h+var_40]^^^mov     [rbp+58h], rcx^^^mov     rcx, [rbp+60h]^^^jmp     loc_42B48C^^^lea     rsi, [r14+rbx]^^^add     rdi, r15^^^call    memcpy^^^mov     r12, r13^^^mov     rcx, [rbp+60h]^^^sub     r12, [rbp+18h]^^^add     r15, [rbp+48h]^^^jmp     loc_42B48C^^^mov     rdx, rbx^^^add     rsi, rbx^^^add     rdi, r15^^^neg     rdx^^^call    sub_400340^^^mov     rsi, [rbp+18h]^^^mov     rdi, r15^^^mov     rdx, r13^^^sub     rdi, rbx^^^add     rdi, [rbp+48h]^^^sub     rdx, rsi^^^jmp     short loc_42B54F^^^mov     rsi, [rdi+58h]^^^mov     rdi, [rdi+48h]^^^mov     rbx, r12^^^xor     edx, edx^^^mov     r15, rsi^^^sub     r15, rdi^^^jmp     loc_42B474^^^mov     rdx, rbx^^^add     rsi, rbx^^^mov     rdi, r15^^^neg     rdx^^^mov     [rsp+58h+var_48], rax^^^call    mempcpy^^^mov     rdx, r12^^^mov     rsi, r14^^^mov     rdi, rax^^^call    memcpy^^^mov     rcx, [rsp+58h+var_48]^^^jmp     loc_42B511^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_42B4AE^^^
_IO_wdefault_pbackfail$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_10], r14^^^mov     ebp, esi^^^mov     [rsp+var_8], r15^^^mov     [rsp+var_18], r13^^^sub     rsp, 48h^^^mov     r12, [rdi+0A0h]^^^mov     r14d, [rdi]^^^mov     rdx, [r12]^^^mov     r15, [r12+10h]^^^mov     rax, r12^^^cmp     rdx, r15^^^jbe     short loc_426D60^^^test    r14d, 100h^^^jnz     loc_426DE0^^^mov     rax, [rdi+8]^^^movsx   ecx, byte ptr [rax-1]^^^cmp     ecx, esi^^^jz      loc_426EA8^^^cmp     qword ptr [r12+40h], 0^^^jz      loc_426E68^^^lea     rsi, [rbx+0A0h]^^^lea     rdi, [rbx+60h]^^^call    save_for_wbackup_isra_0^^^test    eax, eax^^^jz      loc_426E50^^^mov     ebp, 0FFFFFFFFh^^^jmp     loc_426DEA^^^test    r14d, 100h^^^jz      loc_426E10^^^mov     rdx, [r12+8]^^^sub     rdx, r15^^^sar     rdx, 2^^^lea     r14, ds:0[rdx*8]^^^mov     [rsp+48h+var_40], rdx^^^mov     rdi, r14^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     rdx, [rsp+48h+var_40]^^^jz      short loc_426D53^^^lea     r13, [rax+rdx*4]^^^mov     rsi, r15^^^mov     rdi, r13^^^call    wmemcpy^^^mov     rax, [rbx+0A0h]^^^mov     rdi, [rax+10h]^^^call    free^^^mov     rax, [rbx+0A0h]^^^mov     rdx, r13^^^mov     [rax+10h], r12^^^add     r12, r14^^^mov     [rax], r13^^^mov     [rax+8], r12^^^mov     [rax+48h], r13^^^nop     word ptr [rax+rax+00000000h]^^^lea     rcx, [rdx-4]^^^mov     [rax], rcx^^^mov     [rdx-4], ebp^^^mov     eax, ebp^^^mov     rbx, [rsp+48h+var_30]^^^mov     rbp, [rsp+48h+var_28]^^^mov     r12, [rsp+48h+var_20]^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     rax, [r12+40h]^^^test    rax, rax^^^jz      short loc_426E68^^^mov     rcx, [r12+50h]^^^mov     rsi, [r12+8]^^^or      r14d, 100h^^^mov     [rbx], r14d^^^mov     [r12+10h], rax^^^mov     rax, r12^^^mov     [r12+40h], rdx^^^mov     [r12+8], rcx^^^mov     [r12+50h], rsi^^^mov     rdx, rcx^^^mov     [r12], rcx^^^jmp     short loc_426DE0^^^mov     r12, [rbx+0A0h]^^^mov     r14d, [rbx]^^^mov     rdx, [r12]^^^mov     rax, [r12+40h]^^^jmp     short loc_426E1A^^^mov     edi, 200h^^^call    malloc^^^test    rax, rax^^^jz      loc_426D53^^^mov     [r12+40h], rax^^^add     rax, 200h^^^mov     [r12+50h], rax^^^mov     [r12+48h], rax^^^mov     r12, [rbx+0A0h]^^^mov     rdx, [r12]^^^mov     rax, [r12+40h]^^^jmp     loc_426E1A^^^sub     rax, 1^^^mov     [rdi+8], rax^^^jmp     loc_426DEA^^^
__strnlen_sse2_no_bsf$$$xor     eax, eax^^^mov     r8, rsi^^^sub     rsi, 4^^^jbe     loc_444EC0^^^cmp     byte ptr [rdi], 0^^^jz      locret_444C5E^^^cmp     byte ptr [rdi+1], 0^^^jz      loc_445010^^^cmp     byte ptr [rdi+2], 0^^^jz      loc_445020^^^cmp     byte ptr [rdi+3], 0^^^jz      loc_445030^^^sub     rsi, 4^^^jbe     loc_444F20^^^cmp     byte ptr [rdi+4], 0^^^jz      loc_445040^^^cmp     byte ptr [rdi+5], 0^^^jz      loc_445050^^^cmp     byte ptr [rdi+6], 0^^^jz      loc_445060^^^cmp     byte ptr [rdi+7], 0^^^jz      loc_445070^^^sub     rsi, 4^^^jbe     loc_444F70^^^cmp     byte ptr [rdi+8], 0^^^jz      loc_445080^^^cmp     byte ptr [rdi+9], 0^^^jz      loc_445090^^^cmp     byte ptr [rdi+0Ah], 0^^^jz      loc_4450A0^^^cmp     byte ptr [rdi+0Bh], 0^^^jz      loc_4450B0^^^sub     rsi, 4^^^jbe     loc_444FC0^^^cmp     byte ptr [rdi+0Ch], 0^^^jz      loc_4450C0^^^cmp     byte ptr [rdi+0Dh], 0^^^jz      loc_4450D0^^^cmp     byte ptr [rdi+0Eh], 0^^^jz      loc_4450E0^^^cmp     byte ptr [rdi+0Fh], 0^^^jz      loc_4450F0^^^pxor    xmm0, xmm0^^^lea     rcx, [rdi+10h]^^^lea     rax, [rdi+10h]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0Fh^^^add     rsi, rdi^^^sub     rsi, 40h^^^jbe     loc_444CB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^pxor    xmm1, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^pxor    xmm2, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^pxor    xmm3, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^sub     rsi, 40h^^^jbe     loc_444CB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^sub     rsi, 40h^^^jbe     loc_444CB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^sub     rsi, 40h^^^jbe     loc_444CB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^pcmpeqb xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_444C19^^^mov     rdx, rax^^^and     rdx, 3Fh^^^add     rsi, rdx^^^and     rax, 0FFFFFFFFFFFFFFC0h^^^nop     dword ptr [rax+rax+00000000h]^^^sub     rsi, 40h^^^jbe     loc_444CB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pcmpeqb xmm1, xmmword ptr [rax+10h]^^^pcmpeqb xmm2, xmmword ptr [rax+20h]^^^pcmpeqb xmm3, xmmword ptr [rax+30h]^^^pmovmskb edx, xmm0^^^pmovmskb r11d, xmm1^^^pmovmskb r10d, xmm2^^^pmovmskb r9d, xmm3^^^or      r9d, edx^^^or      r9d, r11d^^^or      r9d, r10d^^^lea     rax, [rax+40h]^^^jz      short loc_444BB0^^^test    edx, edx^^^jnz     short loc_444C15^^^test    r11d, r11d^^^jnz     short loc_444C0C^^^test    r10d, r10d^^^jnz     short loc_444C03^^^pmovmskb edx, xmm3^^^jmp     short loc_444C19^^^lea     rax, [rax-10h]^^^mov     edx, r10d^^^jmp     short loc_444C19^^^lea     rax, [rax-20h]^^^mov     edx, r11d^^^jmp     short loc_444C19^^^lea     rax, [rax-30h]^^^sub     rax, rcx^^^test    dl, dl^^^jz      short loc_444C5F^^^test    dl, 1^^^jnz     short locret_444C5E^^^test    dl, 2^^^jnz     loc_445010^^^test    dl, 4^^^jnz     loc_445020^^^test    dl, 8^^^jnz     loc_445030^^^test    dl, 10h^^^jnz     loc_445040^^^test    dl, 20h^^^jnz     loc_445050^^^test    dl, 40h^^^jnz     loc_445060^^^add     eax, 7^^^retn^^^add     eax, 8^^^test    dh, 1^^^jnz     short locret_444C5E^^^test    dh, 2^^^jnz     loc_445010^^^test    dh, 4^^^jnz     loc_445020^^^test    dh, 8^^^jnz     loc_445030^^^test    dh, 10h^^^jnz     loc_445040^^^test    dh, 20h^^^jnz     loc_445050^^^test    dh, 40h^^^jnz     loc_445060^^^add     eax, 7^^^retn^^^pxor    xmm0, xmm0^^^add     rsi, 40h^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^pxor    xmm1, xmm1^^^lea     rax, [rax+10h]^^^test    edx, edx^^^jnz     short loc_444D20^^^sub     rsi, 10h^^^jbe     loc_444EB0^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^lea     rax, [rax+10h]^^^test    edx, edx^^^jnz     short loc_444D20^^^sub     rsi, 10h^^^jbe     loc_444EB0^^^pcmpeqb xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^lea     rax, [rax+10h]^^^test    edx, edx^^^jnz     short loc_444D20^^^sub     rsi, 10h^^^jbe     loc_444EB0^^^pcmpeqb xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^lea     rax, [rax+10h]^^^test    edx, edx^^^jnz     short loc_444D20^^^mov     rax, r8^^^retn^^^sub     rax, rcx^^^test    dl, dl^^^jz      short loc_444D90^^^mov     cl, dl^^^and     cl, 0Fh^^^jz      short loc_444D60^^^test    dl, 1^^^jnz     locret_444C5E^^^test    dl, 2^^^jnz     loc_444E00^^^test    dl, 4^^^jnz     loc_444E10^^^sub     rsi, 4^^^jb      loc_444EB0^^^lea     eax, [eax+3]^^^retn^^^test    dl, 10h^^^jnz     loc_444E20^^^test    dl, 20h^^^jnz     loc_444E30^^^test    dl, 40h^^^jnz     loc_444E40^^^sub     rsi, 8^^^jb      loc_444EB0^^^lea     eax, [eax+7]^^^retn^^^mov     ch, dh^^^and     ch, 0Fh^^^jz      short loc_444DD0^^^test    dh, 1^^^jnz     loc_444E50^^^test    dh, 2^^^jnz     loc_444E60^^^test    dh, 4^^^jnz     loc_444E70^^^sub     rsi, 0Ch^^^jb      loc_444EB0^^^lea     eax, [eax+0Bh]^^^retn^^^test    dh, 10h^^^jnz     loc_444E80^^^test    dh, 20h^^^jnz     loc_444E90^^^test    dh, 40h^^^jnz     loc_444EA0^^^sub     rsi, 10h^^^jb      loc_444EB0^^^lea     eax, [eax+0Fh]^^^retn^^^sub     rsi, 2^^^jb      loc_444EB0^^^lea     eax, [eax+1]^^^retn^^^sub     rsi, 3^^^jb      loc_444EB0^^^lea     eax, [eax+2]^^^retn^^^sub     rsi, 5^^^jb      loc_444EB0^^^lea     eax, [eax+4]^^^retn^^^sub     rsi, 6^^^jb      short loc_444EB0^^^lea     eax, [eax+5]^^^retn^^^sub     rsi, 7^^^jb      short loc_444EB0^^^lea     eax, [eax+6]^^^retn^^^sub     rsi, 9^^^jb      short loc_444EB0^^^lea     eax, [eax+8]^^^retn^^^sub     rsi, 0Ah^^^jb      short loc_444EB0^^^lea     eax, [eax+9]^^^retn^^^sub     rsi, 0Bh^^^jb      short loc_444EB0^^^lea     eax, [eax+0Ah]^^^retn^^^sub     rsi, 0Dh^^^jb      short loc_444EB0^^^lea     eax, [eax+0Ch]^^^retn^^^sub     rsi, 0Eh^^^jb      short loc_444EB0^^^lea     eax, [eax+0Dh]^^^retn^^^sub     rsi, 0Fh^^^jb      short loc_444EB0^^^lea     eax, [eax+0Eh]^^^retn^^^mov     rax, r8^^^retn^^^add     rsi, 4^^^jz      locret_444C5E^^^cmp     byte ptr [rdi], 0^^^jz      locret_444C5E^^^cmp     esi, 1^^^jz      loc_445010^^^cmp     byte ptr [rdi+1], 0^^^jz      loc_445010^^^cmp     esi, 2^^^jz      loc_445020^^^cmp     byte ptr [rdi+2], 0^^^jz      loc_445020^^^cmp     esi, 3^^^jz      loc_445030^^^cmp     byte ptr [rdi+3], 0^^^jz      loc_445030^^^mov     eax, 4^^^retn^^^add     rsi, 4^^^cmp     byte ptr [rdi+4], 0^^^jz      loc_445040^^^cmp     esi, 1^^^jz      loc_445050^^^cmp     byte ptr [rdi+5], 0^^^jz      loc_445050^^^cmp     esi, 2^^^jz      loc_445060^^^cmp     byte ptr [rdi+6], 0^^^jz      loc_445060^^^cmp     esi, 3^^^jz      loc_445070^^^cmp     byte ptr [rdi+7], 0^^^jz      loc_445070^^^mov     eax, 8^^^retn^^^add     rsi, 4^^^cmp     byte ptr [rdi+8], 0^^^jz      loc_445080^^^cmp     esi, 1^^^jz      loc_445090^^^cmp     byte ptr [rdi+9], 0^^^jz      loc_445090^^^cmp     esi, 2^^^jz      loc_4450A0^^^cmp     byte ptr [rdi+0Ah], 0^^^jz      loc_4450A0^^^cmp     esi, 3^^^jz      loc_4450B0^^^cmp     byte ptr [rdi+0Bh], 0^^^jz      loc_4450B0^^^mov     eax, 0Ch^^^retn^^^add     rsi, 4^^^cmp     byte ptr [rdi+0Ch], 0^^^jz      loc_4450C0^^^cmp     esi, 1^^^jz      loc_4450D0^^^cmp     byte ptr [rdi+0Dh], 0^^^jz      loc_4450D0^^^cmp     esi, 2^^^jz      loc_4450E0^^^cmp     byte ptr [rdi+0Eh], 0^^^jz      loc_4450E0^^^cmp     esi, 3^^^jz      loc_4450F0^^^cmp     byte ptr [rdi+0Fh], 0^^^jz      loc_4450F0^^^mov     eax, 10h^^^retn^^^add     eax, 1^^^retn^^^add     eax, 2^^^retn^^^add     eax, 3^^^retn^^^add     eax, 4^^^retn^^^add     eax, 5^^^retn^^^add     eax, 6^^^retn^^^add     eax, 7^^^retn^^^add     eax, 8^^^retn^^^add     eax, 9^^^retn^^^add     eax, 0Ah^^^retn^^^add     eax, 0Bh^^^retn^^^add     eax, 0Ch^^^retn^^^add     eax, 0Dh^^^retn^^^add     eax, 0Eh^^^retn^^^add     eax, 0Fh^^^retn^^^
_L_unlock_224$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     sub_4255C7^^^
get_nprocs$$$push    rbp^^^xor     edi, edi^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 38h^^^call    time^^^mov     [rbp+var_60], rax^^^mov     rax, cs:timestamp_11537^^^cmp     [rbp+var_60], rax^^^mov     ebx, cs:cached_result_11536^^^jz      loc_410620^^^mov     edi, 2000h^^^call    __libc_alloca_cutoff^^^cmp     eax, 1^^^mov     esi, 80000h^^^mov     edi, offset aSysDevicesSyst^^^sbb     r12, r12^^^and     r12, 0FFFFFFFFFFFFE200h^^^lea     rax, [r12+2010h]^^^add     r12, 2000h^^^sub     rsp, rax^^^xor     eax, eax^^^lea     r13, [rsp+60h+var_51]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^add     r12, r13^^^mov     [rbp+var_40], r12^^^mov     [rbp+var_50], r12^^^call    __open_nocancel^^^cmp     eax, 0FFFFFFFFh^^^mov     [rbp-54h], eax^^^jz      loc_410638^^^lea     r15, [rbp+var_40]^^^lea     r14, [rbp+var_50]^^^mov     r8, r12^^^mov     rsi, r13^^^mov     edi, eax^^^xor     ebx, ebx^^^mov     rdx, r15^^^mov     rcx, r14^^^call    next_line^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_410600^^^lea     rsi, [rbp+var_38]^^^mov     edx, 0Ah^^^mov     rdi, r15^^^call    strtouq^^^mov     rdx, [rbp+var_38]^^^mov     r14, rax^^^cmp     r15, rdx^^^jz      short loc_4105F6^^^cmp     byte ptr [rdx], 2Dh^^^jz      short loc_4105D8^^^mov     rcx, [rbp+var_50]^^^sub     ebx, r14d^^^lea     ebx, [rbx+rax+1]^^^cmp     rcx, rdx^^^jbe     short loc_410600^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^mov     rsi, fs:[rax]^^^jmp     short loc_4105C1^^^add     rdx, 1^^^cmp     rdx, rcx^^^jz      short loc_410600^^^movsx   rax, byte ptr [rdx]^^^test    byte ptr [rsi+rax*2+1], 20h^^^jnz     short loc_4105B8^^^mov     r15, rdx^^^jmp     short loc_410576^^^lea     r15, [rdx+1]^^^lea     rsi, [rbp+var_38]^^^mov     edx, 0Ah^^^mov     rdi, r15^^^call    strtouq^^^mov     rdx, [rbp+var_38]^^^cmp     r15, rdx^^^jnz     short loc_410598^^^xor     ebx, ebx^^^nop     dword ptr [rax+rax+00000000h]^^^movsxd  rdi, dword ptr [rbp-54h]^^^mov     eax, 3^^^syscall^^^test    ebx, ebx^^^jle     short loc_410638^^^mov     cs:cached_result_11536, ebx^^^mov     rax, [rbp+var_60]^^^mov     cs:timestamp_11537, rax^^^lea     rsp, [rbp-28h]^^^mov     eax, ebx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^xor     eax, eax^^^mov     esi, 80000h^^^mov     edi, offset aProcStat^^^mov     [rbp+var_40], r12^^^mov     [rbp+var_50], r12^^^call    __open_nocancel^^^cmp     eax, 0FFFFFFFFh^^^mov     [rbp-54h], eax^^^jz      short loc_4106AF^^^xor     ebx, ebx^^^lea     r14, [rbp+var_50]^^^lea     r15, [rbp+var_40]^^^jmp     short loc_410686^^^mov     edi, (offset aSysDevicesSy_0+14h)^^^mov     rsi, rax^^^mov     ecx, 3^^^repe cmpsb^^^jnz     short loc_41069F^^^movsx   eax, byte ptr [rax+3]^^^sub     eax, 30h^^^cmp     eax, 0Ah^^^adc     ebx, 0^^^mov     edi, [rbp-54h]^^^mov     r8, r12^^^mov     rcx, r14^^^mov     rdx, r15^^^mov     rsi, r13^^^call    next_line^^^test    rax, rax^^^jnz     short loc_410668^^^movsxd  rdi, dword ptr [rbp-54h]^^^mov     eax, 3^^^syscall^^^jmp     loc_41060F^^^xor     eax, eax^^^mov     esi, 80000h^^^mov     edi, offset aProcCpuinfo^^^call    __open_nocancel^^^cmp     eax, 0FFFFFFFFh^^^mov     [rbp-54h], eax^^^mov     ebx, 1^^^jz      loc_41060F^^^xor     ebx, ebx^^^lea     r14, [rbp+var_50]^^^lea     r15, [rbp+var_40]^^^jmp     short loc_4106FD^^^mov     edi, offset aProcessor^^^mov     ecx, 9^^^repe cmpsb^^^setnbe  al^^^setb    dl^^^sub     al, dl^^^movsx   eax, al^^^cmp     eax, 1^^^adc     ebx, 0^^^mov     edi, [rbp-54h]^^^mov     rsi, r13^^^mov     r8, r12^^^mov     rcx, r14^^^mov     rdx, r15^^^call    next_line^^^test    rax, rax^^^mov     rsi, rax^^^jnz     short loc_4106E0^^^jmp     short loc_41069F^^^
_Unwind_FindEnclosingFunction$$$sub     rsp, 28h^^^sub     rdi, 1^^^mov     rsi, rsp^^^call    _Unwind_Find_FDE^^^test    rax, rax^^^jz      short loc_492770^^^mov     rax, [rsp+28h+var_18]^^^add     rsp, 28h^^^retn^^^xor     eax, eax^^^jmp     short loc_49276A^^^
geteuid$$$mov     eax, 6Bh        ^^^syscall^^^retn^^^
fseek$$$push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^mov     r8, rsi^^^and     eax, 8000h^^^jnz     short loc_47510B^^^mov     r9, [rdi+88h]^^^mov     r10, fs:10h^^^cmp     r10, [r9+8]^^^jz      short loc_475106^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4750F1^^^lock cmpxchg [r9], esi^^^jnz     _L_lock_36^^^jmp     short loc_4750FB^^^cmpxchg [r9], esi^^^jnz     _L_lock_36^^^mov     r9, [rbx+88h]^^^mov     [r9+8], r10^^^add     dword ptr [r9+4], 1^^^mov     ecx, 3^^^mov     rsi, r8^^^mov     rdi, rbx^^^call    _IO_seekoff_unlocked^^^xor     edx, edx^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^cmovz   edx, eax^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_47515B^^^mov     rsi, [rbx+88h]^^^mov     eax, [rsi+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+4], eax^^^jnz     short loc_47515B^^^mov     qword ptr [rsi+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_475157^^^lock dec dword ptr [rsi]^^^jnz     short _L_unlock_83^^^jmp     short loc_47515B^^^dec     dword ptr [rsi]^^^jnz     short _L_unlock_83^^^mov     eax, edx^^^pop     rbx^^^retn^^^
__dlvsym$$$push    rbx^^^mov     eax, 0^^^sub     rsp, 40h^^^test    rax, rax^^^mov     [rsp+48h+var_40], rdi^^^movq    xmm1, [rsp+48h+var_40]^^^mov     [rsp+48h+var_40], rsi^^^movq    xmm2, [rsp+48h+var_40]^^^mov     [rsp+48h+var_40], rdx^^^punpcklqdq xmm1, xmm2^^^movdqa  [rsp+48h+var_38], xmm1^^^movq    xmm1, [rsp+48h+var_40]^^^mov     [rsp+48h+var_40], rcx^^^movq    xmm2, [rsp+48h+var_40]^^^punpcklqdq xmm1, xmm2^^^movdqa  [rsp+48h+var_28], xmm1^^^jz      short loc_48D669^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^lea     rsi, [rsp+48h+var_38]^^^mov     edi, offset dlvsym_doit^^^xor     ebx, ebx^^^call    _dlerror_run^^^test    eax, eax^^^mov     eax, 0^^^cmovz   rbx, [rsp+48h+var_18]^^^test    rax, rax^^^jz      short loc_48D696^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^add     rsp, 40h^^^mov     rax, rbx^^^pop     rbx^^^retn^^^
__longjmp$$$mov     r8, [rdi+30h]^^^mov     r9, [rdi+8]^^^mov     rdx, [rdi+38h]^^^ror     r8, 11h^^^xor     r8, fs:30h^^^ror     r9, 11h^^^xor     r9, fs:30h^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     rbx, [rdi]^^^mov     r12, [rdi+10h]^^^mov     r13, [rdi+18h]^^^mov     r14, [rdi+20h]^^^mov     r15, [rdi+28h]^^^mov     eax, esi^^^mov     rsp, r8^^^mov     rbp, r9^^^jmp     rdx^^^
getrlimit64$$$mov     eax, 61h        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_L_lock_13$$$lea     rdi, [rbx+4]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     short loc_479863^^^
_L_unlock_1323$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4655D3^^^
__strcasecmp_avx$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rdx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
sub_41F303$$$mov     dword ptr [rbp-610h], 10h^^^jmp     loc_41E64E^^^
__gconv_translit_find$$$mov     eax, 1^^^retn^^^
_IO_marker_delta$$$mov     rax, [rdi+8]^^^test    rax, rax^^^jz      short loc_42CF39^^^mov     edx, [rax]^^^and     dh, 1^^^mov     rdx, [rax+8]^^^jnz     short loc_42CF30^^^sub     edx, [rax+18h]^^^mov     eax, [rdi+10h]^^^sub     eax, edx^^^retn^^^sub     edx, [rax+10h]^^^mov     eax, [rdi+10h]^^^sub     eax, edx^^^retn^^^mov     eax, 0FFFFFFFFh^^^retn^^^
linear_search_fdes$$$push    r15^^^lea     rax, [rdi+8]^^^lea     rcx, [rdi+10h]^^^mov     r15, rdx^^^push    r14^^^mov     rdx, rcx^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^mov     rsi, rax^^^sub     rsp, 38h^^^movzx   ebp, word ptr [rdi+20h]^^^mov     [rsp+68h+var_58], rax^^^mov     [rsp+68h+var_50], rcx^^^shr     bp, 3^^^movzx   ebp, bpl^^^mov     edi, ebp^^^call    base_from_object_isra_3^^^mov     r9d, [rbx]^^^mov     r8, rax^^^test    r9d, r9d^^^jz      loc_4937B8^^^xor     r14d, r14d^^^jmp     short loc_4936D1^^^mov     rax, [rbx+8]^^^mov     rdx, [rbx+10h]^^^test    rax, rax^^^mov     [rsp+68h+var_48], rax^^^mov     [rsp+68h+var_40], rdx^^^jz      short loc_4936C0^^^mov     rcx, r15^^^sub     rcx, rax^^^cmp     rcx, rdx^^^jb      loc_4937A0^^^nop     word ptr [rax+rax+00000000h]^^^mov     eax, [rbx]^^^lea     rbx, [rbx+rax+4]^^^mov     edi, [rbx]^^^test    edi, edi^^^jz      loc_4937B8^^^mov     eax, [rbx+4]^^^test    eax, eax^^^jz      short loc_4936C0^^^test    byte ptr [r12+20h], 4^^^jz      short loc_493710^^^lea     r13, [rbx+4]^^^cdqe^^^sub     r13, rax^^^cmp     r14, r13^^^jz      short loc_493710^^^mov     rdi, r13^^^mov     r14, r13^^^call    get_cie_encoding^^^mov     rdx, [rsp+68h+var_50]^^^mov     rsi, [rsp+68h+var_58]^^^movzx   edi, al^^^mov     ebp, eax^^^call    base_from_object_isra_3^^^mov     r8, rax^^^test    ebp, ebp^^^jz      loc_493690^^^movzx   r13d, bpl^^^lea     rdx, [rbx+8]^^^lea     rcx, [rsp+68h+var_48]^^^mov     rsi, r8^^^mov     edi, r13d^^^mov     [rsp+68h+var_60], r8^^^call    read_encoded_value_with_base_0^^^lea     rcx, [rsp+68h+var_40]^^^mov     edi, r13d^^^mov     rdx, rax^^^and     edi, 0Fh^^^xor     esi, esi^^^call    read_encoded_value_with_base_0^^^mov     edi, r13d^^^call    size_of_encoded_value^^^mov     eax, eax^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^mov     r8, [rsp+68h+var_60]^^^cmp     rax, 7^^^ja      short loc_493779^^^lea     ecx, ds:0[rax*8]^^^mov     edx, 1^^^shl     rdx, cl^^^sub     rdx, 1^^^mov     rax, [rsp+68h+var_48]^^^test    rdx, rax^^^jz      loc_4936C0^^^mov     rdx, [rsp+68h+var_40]^^^mov     rcx, r15^^^sub     rcx, rax^^^cmp     rcx, rdx^^^jnb     loc_4936C0^^^nop     dword ptr [rax+rax+00h]^^^add     rsp, 38h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^xor     ebx, ebx^^^jmp     short loc_4937A0^^^
__write_nocancel$$$mov     eax, 1^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
next_line$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdx^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     rbp, rsi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 58h^^^mov     r14, [rcx]^^^mov     r13, [rdx]^^^mov     esi, 0Ah^^^mov     [rsp+58h+var_44], edi^^^mov     [rsp+58h+var_50], r8^^^mov     r12, rcx^^^mov     r15, r14^^^mov     rdi, r13^^^sub     r15, r13^^^mov     rdx, r15^^^call    memchr^^^test    rax, rax^^^mov     r8, [rsp+58h+var_50]^^^jz      short loc_410380^^^add     rax, 1^^^mov     [rbx], rax^^^mov     rdx, [r12]^^^cmp     rax, rdx^^^ja      loc_410495^^^cmp     r13, rdx^^^mov     eax, 0^^^cmovz   r13, rax^^^mov     rax, r13^^^mov     rbx, [rsp+58h+var_30]^^^mov     rbp, [rsp+58h+var_28]^^^mov     r12, [rsp+58h+var_20]^^^mov     r13, [rsp+58h+var_18]^^^mov     r14, [rsp+58h+var_10]^^^mov     r15, [rsp+58h+var_8]^^^add     rsp, 58h^^^retn^^^cmp     r13, rbp^^^jz      short loc_41038A^^^cmp     r14, r8^^^jz      short loc_410390^^^lea     rax, [r14-1]^^^jmp     short loc_41033A^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rbp^^^call    sub_400340^^^mov     rax, rbp^^^add     rax, [r12]^^^mov     edi, [rsp+58h+var_44]^^^sub     rax, [rbx]^^^mov     rdx, r14^^^mov     [r12], rax^^^mov     [rbx], rbp^^^mov     rsi, [r12]^^^sub     rdx, rsi^^^call    __read_nocancel^^^movsxd  r15, eax^^^test    r15, r15^^^js      loc_41047A^^^add     r15, [r12]^^^mov     esi, 0Ah^^^mov     [r12], r15^^^mov     r13, [rbx]^^^mov     rdx, r15^^^sub     rdx, r13^^^mov     rdi, r13^^^call    memchr^^^test    rax, rax^^^jnz     loc_41033A^^^cmp     r14, r15^^^jnz     loc_4104AE^^^mov     rax, r14^^^sub     rax, rbp^^^lea     rax, [rax+rax*2]^^^lea     rdx, [rax+3]^^^test    rax, rax^^^cmovs   rax, rdx^^^sar     rax, 2^^^add     rbp, rax^^^mov     rax, r14^^^sub     rax, rbp^^^mov     [rsp+58h+var_40], rax^^^jmp     short loc_41045D^^^mov     r15, [r12]^^^mov     rdx, r13^^^mov     esi, 0Ah^^^mov     rdi, r15^^^call    memchr^^^mov     byte ptr [r15], 0Ah^^^mov     rdx, r13^^^add     rdx, [r12]^^^test    rax, rax^^^mov     [r12], rdx^^^jnz     short loc_410482^^^cmp     r14, rdx^^^jnz     short loc_41048A^^^mov     rdx, [rsp+58h+var_40]^^^mov     edi, [rsp+58h+var_44]^^^mov     rsi, rbp^^^mov     [r12], rbp^^^call    __read_nocancel^^^movsxd  r13, eax^^^test    r13, r13^^^jns     short loc_410430^^^xor     r13d, r13d^^^jmp     loc_41035A^^^mov     r13, [rbx]^^^jmp     loc_41033A^^^mov     r13, [rbx]^^^mov     r14, rdx^^^jmp     loc_41038A^^^mov     ecx, offset __PRETTY_FUNCTION___11533^^^mov     edx, 7Bh^^^mov     esi, offset a__SysdepsUnixS^^^mov     edi, offset aCpRe^^^call    __assert_fail^^^mov     r14, r15^^^jmp     loc_41038A^^^
add_path.11355.isra.2.constprop.7$$$push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, r10^^^sub     rsp, 8^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      loc_450699^^^mov     rbp, rdi^^^mov     r13d, 2^^^jmp     short loc_45063B^^^mov     rdx, [rbx+8]^^^add     dword ptr [rdx+8], 1^^^cmp     qword ptr [rax+20h], 2^^^mov     rax, [rax+20h]^^^cmovb   rax, r13^^^add     rbp, 8^^^add     [rdx], rax^^^cmp     qword ptr [rbp+0], 0^^^jz      short loc_450699^^^cmp     byte ptr [rbx+14h], 0^^^mov     rax, [rbp+0]^^^jnz     short loc_450618^^^mov     edx, [rbx+10h]^^^mov     rdi, [rbx]^^^mov     r12d, edx^^^add     edx, 1^^^add     r12, 1^^^mov     [rbx+10h], edx^^^mov     rdx, [rax+20h]^^^shl     r12, 4^^^add     r12, [rbx+8]^^^cmp     rdx, 1^^^mov     [r12], rdi^^^jbe     short loc_4506A8^^^mov     rsi, [rax+18h]^^^sub     rdx, 1^^^call    mempcpy^^^mov     [rbx], rax^^^add     rbp, 8^^^mov     byte ptr [rax], 0^^^add     qword ptr [rbx], 1^^^cmp     qword ptr [rbp+0], 0^^^mov     dword ptr [r12+8], 0^^^jnz     short loc_45063B^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^sbb     eax, eax^^^add     eax, 2Fh^^^mov     [rdi], al^^^mov     rax, [rbx]^^^add     rax, 1^^^mov     [rbx], rax^^^jmp     short loc_45067E^^^
_i18n_number_rewrite_0$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbx^^^mov     rbx, rdi^^^mov     edi, offset aTo_outpunct^^^sub     rsp, 48h^^^call    wctrans^^^mov     edi, 2Eh^^^mov     r13, rax^^^mov     rsi, rax^^^call    towctrans^^^mov     rsi, r13^^^mov     edi, 2Ch^^^mov     [rbp+var_64], eax^^^call    towctrans^^^test    r13, r13^^^mov     r14d, eax^^^jz      short loc_4007DE^^^mov     esi, [rbp+var_64]^^^lea     rdx, [rbp+var_38]^^^lea     rdi, [rbp+var_5A]^^^mov     [rbp+var_38], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4007AE^^^mov     [rbp+var_5A], 2Eh^^^jmp     short loc_4007B3^^^mov     byte ptr [rbp+rax+var_5A], 0^^^lea     rdx, [rbp+var_38]^^^lea     rdi, [rbp+var_49]^^^mov     esi, r14d^^^mov     [rbp+var_38], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4007D9^^^mov     [rbp+var_49], 2Ch^^^jmp     short loc_4007DE^^^mov     byte ptr [rbp+rax+var_49], 0^^^mov     rdx, r12^^^mov     r14d, 1^^^sub     rdx, rbx^^^cmp     rdx, 1000h^^^jbe     short loc_40080C^^^mov     rdi, rdx^^^mov     [rbp+var_70], rdx^^^xor     r14d, r14d^^^call    __libc_alloca_cutoff^^^mov     rdx, [rbp+var_70]^^^test    eax, eax^^^setnz   r14b^^^test    r14b, r14b^^^jz      short loc_400827^^^lea     rax, [rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+70h+var_64+3]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_400843^^^mov     rdi, rdx^^^mov     [rbp+var_70], rdx^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     rdx, [rbp+var_70]^^^jz      loc_40090F^^^mov     rsi, rbx^^^mov     rdi, r12^^^mov     rbx, r15^^^call    mempcpy^^^lea     r9, [rbp+var_49]^^^mov     rsi, rax^^^lea     r10, [rbp+var_5A]^^^or      r8, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^jmp     loc_4008F6^^^mov     dl, [rsi]^^^lea     ecx, [rdx-30h]^^^cmp     cl, 9^^^ja      short loc_4008B2^^^mov     rcx, 0FFFFFFFFFFFFFFA8h^^^movsx   edx, dl^^^sub     edx, 7^^^movsxd  rdx, edx^^^mov     rcx, fs:[rcx]^^^mov     rcx, [rcx]^^^mov     rdx, [rcx+rdx*8+40h]^^^mov     rcx, r8^^^mov     rdi, rdx^^^repne scasb^^^not     rcx^^^dec     rcx^^^sub     rbx, rcx^^^jmp     short loc_4008AB^^^dec     rcx^^^mov     dil, [rdx+rcx]^^^mov     [rbx+rcx], dil^^^test    rcx, rcx^^^jnz     short loc_4008A0^^^jmp     short loc_4008F6^^^test    r13, r13^^^jz      short loc_4008C1^^^cmp     dl, 2Ch^^^jz      short loc_4008C9^^^cmp     dl, 2Eh^^^jz      short loc_4008C9^^^mov     [rbx-1], dl^^^dec     rbx^^^jmp     short loc_4008F6^^^cmp     dl, 2Eh^^^mov     rdx, r10^^^mov     rcx, r8^^^cmovnz  rdx, r9^^^mov     rdi, rdx^^^repne scasb^^^not     rcx^^^dec     rcx^^^sub     rbx, rcx^^^jmp     short loc_4008F1^^^dec     rcx^^^mov     dil, [rdx+rcx]^^^mov     [rbx+rcx], dil^^^test    rcx, rcx^^^jnz     short loc_4008E6^^^dec     rsi^^^cmp     rsi, r12^^^jnb     loc_400867^^^test    r14b, r14b^^^jnz     short loc_40090F^^^mov     rdi, r12^^^call    free^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
_L_unlock_12411$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4085F1^^^
_L_unlock_11989$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4082C1^^^
sched_yield$$$mov     eax, 18h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_L_unlock_820$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_418D02^^^
fopen64$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbp, rdi^^^mov     [rsp+var_8], r12^^^mov     edi, 238h^^^sub     rsp, 18h^^^mov     r12, rsi^^^xor     ebx, ebx^^^call    malloc^^^test    rax, rax^^^jz      loc_425999^^^lea     rdx, [rax+0E0h]^^^lea     rcx, [rax+0F0h]^^^mov     rbx, rax^^^xor     esi, esi^^^mov     rdi, rax^^^mov     r8d, offset _IO_wfile_jumps^^^mov     [rax+88h], rdx^^^xor     edx, edx^^^call    _IO_no_init^^^mov     rdi, rbx^^^mov     qword ptr [rbx+0D8h], offset _IO_file_jumps^^^call    _IO_new_file_init^^^mov     ecx, 1^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    _IO_new_file_fopen^^^test    rax, rax^^^jz      short loc_4259AF^^^test    byte ptr [rbx+74h], 1^^^jz      short loc_425999^^^test    byte ptr [rbx], 8^^^jz      short loc_425999^^^mov     edi, [rbx+0C0h]^^^mov     edx, offset _IO_wfile_jumps_maybe_mmap^^^mov     eax, offset _IO_file_jumps_maybe_mmap^^^test    edi, edi^^^cmovg   rax, rdx^^^mov     [rbx+0D8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     [rax+140h], rdx^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rdi, rbx^^^call    _IO_un_link^^^mov     rdi, rbx^^^xor     ebx, ebx^^^call    free^^^jmp     short loc_425999^^^
lseek64$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_44E5BD^^^
isnan$$$mov     rax, 7FFFFFFFFFFFFFFFh^^^movq    rdx, xmm0^^^and     rdx, rax^^^mov     rax, 7FF0000000000000h^^^sub     rax, rdx^^^shr     rax, 3Fh^^^retn^^^
_L_unlock_12551$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40869F^^^
strpbrk$$$mov     rdx, rdi^^^mov     r8, rdi^^^sub     rsp, 100h^^^mov     ecx, 20h^^^mov     rdi, rsp^^^xor     eax, eax^^^cld^^^rep stosq^^^mov     rax, rsi^^^xchg    ax, ax^^^mov     cl, [rax]^^^test    cl, cl^^^jz      short loc_482CEE^^^mov     [rsp+rcx+100h+var_100], cl^^^mov     cl, [rax+1]^^^test    cl, 0FFh^^^jz      short loc_482CEE^^^mov     [rsp+rcx+100h+var_100], cl^^^mov     cl, [rax+2]^^^test    cl, 0FFh^^^jz      short loc_482CEE^^^mov     [rsp+rcx+100h+var_100], cl^^^mov     cl, [rax+3]^^^add     rax, 4^^^mov     [rsp+rcx+100h+var_100], cl^^^test    cl, 0FFh^^^jnz     short loc_482CC0^^^lea     rax, [rdx-4]^^^nop     word ptr [rax+rax+00000000h]^^^add     rax, 4^^^mov     cl, [rax]^^^cmp     [rsp+rcx+100h+var_100], cl^^^jz      short loc_482D2C^^^mov     cl, [rax+1]^^^cmp     [rsp+rcx+100h+var_100], cl^^^jz      short loc_482D29^^^mov     cl, [rax+2]^^^cmp     [rsp+rcx+100h+var_100], cl^^^jz      short loc_482D26^^^mov     cl, [rax+3]^^^cmp     [rsp+rcx+100h+var_100], cl^^^jnz     short loc_482D00^^^inc     rax^^^inc     rax^^^inc     rax^^^add     rsp, 100h^^^xor     edx, edx^^^or      cl, cl^^^cmovz   rax, rdx^^^retn^^^
_L_lock_11031$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_407A54^^^
_dl_make_stack_executable$$$push    rbx^^^mov     rax, [rdi]^^^mov     rbx, rdi^^^cmp     rax, cs:__libc_stack_end^^^mov     rsi, cs:_dl_pagesize^^^jnz     short loc_456B41^^^mov     rdi, rsi^^^mov     edx, cs:__stack_prot^^^neg     rdi^^^and     rdi, rax^^^call    mprotect^^^test    eax, eax^^^jnz     short loc_456B48^^^mov     qword ptr [rbx], 0^^^xor     eax, eax^^^or      cs:_dl_stack_flags, 1^^^pop     rbx^^^retn^^^mov     eax, 1^^^pop     rbx^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^pop     rbx^^^mov     eax, fs:[rax]^^^retn^^^
__libc_dlsym$$$sub     rsp, 58h^^^mov     ecx, offset do_dlsym^^^mov     [rsp+58h+var_48], rdi^^^mov     [rsp+58h+var_40], rsi^^^lea     r8, [rsp+58h+var_48]^^^lea     rdx, [rsp+58h+var_9]^^^lea     rsi, [rsp+58h+var_28]^^^lea     rdi, [rsp+58h+var_18]^^^mov     [rsp+58h+var_28], 0^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     short loc_47A9D0^^^cmp     [rsp+58h+var_28], 0^^^jnz     short loc_47A9D0^^^mov     rdx, [rsp+58h+var_38]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_47A9C0^^^mov     rax, [rdx]^^^mov     rdx, [rsp+58h+var_30]^^^add     rax, [rdx+8]^^^add     rsp, 58h^^^retn^^^xor     eax, eax^^^cmp     [rsp+58h+var_9], 0^^^jz      short loc_47A9C9^^^mov     rdi, [rsp+58h+var_28]^^^mov     [rsp+58h+var_50], rax^^^call    free^^^mov     rax, [rsp+58h+var_50]^^^add     rsp, 58h^^^retn^^^
_IO_new_file_sync$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     rbp, [rdi+28h]^^^mov     rsi, [rdi+20h]^^^cmp     rbp, rsi^^^jbe     short loc_42A1BB^^^mov     r9d, [rdi+0C0h]^^^test    r9d, r9d^^^jle     short loc_42A208^^^mov     rax, [rdi+0A0h]^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^test    eax, eax^^^setnz   dl^^^test    dl, dl^^^mov     eax, 0FFFFFFFFh^^^jnz     short loc_42A1D2^^^mov     rsi, [rbx+8]^^^sub     rsi, [rbx+10h]^^^jnz     short loc_42A1E0^^^mov     qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, [rbx+0D8h]^^^mov     edx, 1^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_42A220^^^mov     rax, [rbx+8]^^^mov     [rbx+10h], rax^^^jmp     short loc_42A1C5^^^sub     rbp, rsi^^^jz      short loc_42A1BB^^^mov     rdx, rbp^^^call    new_do_write^^^cmp     rbp, rax^^^setnz   dl^^^jmp     short loc_42A1B2^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rdx], 1Dh^^^jnz     short loc_42A1D2^^^jmp     short loc_42A1C5^^^
_quicksort$$$push    r15^^^push    r14^^^mov     r14, r8^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rcx^^^sub     rsp, 468h^^^test    rsi, rsi^^^mov     [rsp+498h+var_450], rdi^^^mov     [rsp+498h+var_488], rdx^^^jz      loc_4648FC^^^shl     rdx, 2^^^cmp     rsi, 4^^^mov     [rsp+498h+var_448], rdx^^^jbe     loc_46490E^^^mov     rdx, [rsp+498h+var_450]^^^lea     rax, [rsp+498h+var_438]^^^sub     rsi, 1^^^imul    rsi, [rsp+498h+var_488]^^^mov     [rsp+498h+var_498], rax^^^mov     r15, [rsp+498h+var_488]^^^mov     [rsp+498h+var_470], rdx^^^mov     rdx, rax^^^mov     rax, [rsp+498h+var_488]^^^add     rdx, 10h^^^mov     [rsp+498h+var_438], 0^^^mov     [rsp+498h+var_430], 0^^^add     rsi, [rsp+498h+var_450]^^^mov     [rsp+498h+var_460], rdx^^^neg     r15^^^mov     rdx, [rsp+498h+var_488]^^^shr     rax, 4^^^mov     [rsp+498h+var_480], rax^^^shl     rax, 4^^^mov     [rsp+498h+var_490], rax^^^sub     rdx, rax^^^mov     [rsp+498h+var_458], rsi^^^mov     [rsp+498h+var_468], rsi^^^mov     [rsp+498h+var_478], rdx^^^mov     rax, [rsp+498h+var_468]^^^sub     rax, [rsp+498h+var_470]^^^xor     edx, edx^^^mov     r12, [rsp+498h+var_470]^^^mov     rsi, [rsp+498h+var_470]^^^div     [rsp+498h+var_488]^^^mov     rdx, r14^^^shr     rax, 1^^^imul    rax, [rsp+498h+var_488]^^^add     r12, rax^^^mov     rdi, r12^^^call    rbx^^^test    eax, eax^^^js      loc_464CF1^^^mov     rdx, r14^^^mov     rsi, r12^^^mov     rdi, [rsp+498h+var_468]^^^call    rbx^^^test    eax, eax^^^js      loc_464B82^^^mov     r13, [rsp+498h+var_470]^^^mov     rbp, [rsp+498h+var_468]^^^add     r13, [rsp+498h+var_488]^^^add     rbp, r15^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, r14^^^mov     rsi, r12^^^mov     rdi, r13^^^call    rbx^^^test    eax, eax^^^jns     short loc_4647B3^^^jmp     loc_464B61^^^add     rbp, r15^^^mov     rdx, r14^^^mov     rsi, rbp^^^mov     rdi, r12^^^call    rbx^^^test    eax, eax^^^js      short loc_4647B0^^^cmp     r13, rbp^^^jnb     loc_464B00^^^cmp     [rsp+498h+var_490], 0^^^jz      loc_464E1E^^^cmp     [rsp+498h+var_488], 0Fh^^^lea     rax, [r13+10h]^^^lea     rcx, [rbp+10h]^^^setnbe  dl^^^cmp     rbp, rax^^^setnbe  al^^^cmp     r13, rcx^^^setnbe  cl^^^or      eax, ecx^^^test    dl, al^^^jz      loc_464E1E^^^mov     rcx, [rsp+498h+var_480]^^^xor     eax, eax^^^xor     edx, edx^^^nop     word ptr [rax+rax+00000000h]^^^movdqu  xmm0, xmmword ptr [r13+rax+0]^^^add     rdx, 1^^^movdqu  xmm1, xmmword ptr [rbp+rax+0]^^^movdqu  xmmword ptr [r13+rax+0], xmm1^^^movdqu  xmmword ptr [rbp+rax+0], xmm0^^^add     rax, 10h^^^cmp     rcx, rdx^^^ja      short loc_464810^^^mov     rdx, [rsp+498h+var_490]^^^mov     rcx, [rsp+498h+var_490]^^^mov     rax, [rsp+498h+var_490]^^^mov     r8, [rsp+498h+var_478]^^^add     rdx, r13^^^add     rcx, rbp^^^cmp     [rsp+498h+var_488], rax^^^jz      short loc_464879^^^xor     eax, eax^^^nop     word ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdx+rax]^^^movzx   edi, byte ptr [rcx+rax]^^^mov     [rdx+rax], dil^^^mov     [rcx+rax], sil^^^add     rax, 1^^^cmp     r8, rax^^^jnz     short loc_464860^^^cmp     r12, r13^^^jz      loc_464B7A^^^cmp     r12, rbp^^^cmovz   r12, r13^^^add     r13, [rsp+498h+var_488]^^^add     rbp, r15^^^cmp     r13, rbp^^^jbe     loc_464798^^^mov     rax, rbp^^^sub     rax, [rsp+498h+var_470]^^^cmp     [rsp+498h+var_448], rax^^^jb      loc_464B21^^^mov     rax, [rsp+498h+var_468]^^^mov     [rsp+498h+var_470], r13^^^sub     rax, r13^^^cmp     [rsp+498h+var_448], rax^^^jb      short loc_4648EB^^^mov     rdx, [rsp+498h+var_460]^^^mov     rax, [rsp+498h+var_460]^^^mov     rdx, [rdx-10h]^^^mov     rax, [rax-8]^^^mov     [rsp+498h+var_470], rdx^^^mov     rdx, [rsp+498h+var_460]^^^mov     [rsp+498h+var_468], rax^^^sub     rdx, 10h^^^mov     [rsp+498h+var_460], rdx^^^mov     rax, [rsp+498h+var_498]^^^cmp     [rsp+498h+var_460], rax^^^ja      loc_464733^^^jmp     short loc_464920^^^add     rsp, 468h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^sub     rsi, 1^^^imul    rsi, [rsp+498h+var_488]^^^add     rsi, rdi^^^mov     [rsp+498h+var_458], rsi^^^mov     r15, [rsp+498h+var_450]^^^add     r15, [rsp+498h+var_448]^^^cmp     [rsp+498h+var_458], r15^^^mov     rbp, [rsp+498h+var_450]^^^cmovbe  r15, [rsp+498h+var_458]^^^add     rbp, [rsp+498h+var_488]^^^cmp     r15, rbp^^^jb      loc_464A39^^^mov     r12, rbp^^^mov     [rsp+498h+var_490], rbp^^^mov     r13, [rsp+498h+var_450]^^^mov     rbp, rbx^^^mov     rbx, [rsp+498h+var_488]^^^nop     dword ptr [rax]^^^mov     rsi, r13^^^mov     rdi, r12^^^mov     rdx, r14^^^call    rbp^^^test    eax, eax^^^cmovs   r13, r12^^^add     r12, rbx^^^cmp     r15, r12^^^jnb     short loc_464960^^^cmp     [rsp+498h+var_450], r13^^^mov     rbx, rbp^^^mov     rbp, [rsp+498h+var_490]^^^jz      loc_464A39^^^mov     rcx, [rsp+498h+var_488]^^^shr     rcx, 4^^^mov     rsi, rcx^^^shl     rsi, 4^^^test    rsi, rsi^^^jz      loc_464DDC^^^cmp     [rsp+498h+var_488], 0Fh^^^lea     rax, [r13+10h]^^^mov     rdi, [rsp+498h+var_450]^^^setnbe  dl^^^cmp     [rsp+498h+var_450], rax^^^setnbe  al^^^add     rdi, 10h^^^cmp     r13, rdi^^^setnbe  dil^^^or      eax, edi^^^test    dl, al^^^jz      loc_464DDC^^^mov     rdi, [rsp+498h+var_450]^^^xor     eax, eax^^^xor     edx, edx^^^movdqu  xmm0, xmmword ptr [r13+rax+0]^^^add     rdx, 1^^^movdqu  xmm1, xmmword ptr [rdi+rax]^^^movdqu  xmmword ptr [r13+rax+0], xmm1^^^movdqu  xmmword ptr [rdi+rax], xmm0^^^add     rax, 10h^^^cmp     rcx, rdx^^^ja      short loc_4649DD^^^mov     rdi, [rsp+498h+var_488]^^^mov     rdx, [rsp+498h+var_450]^^^add     r13, rsi^^^sub     rdi, rsi^^^add     rdx, rsi^^^cmp     [rsp+498h+var_488], rsi^^^jz      short loc_464A39^^^xor     eax, eax^^^movzx   ecx, byte ptr [r13+rax+0]^^^movzx   esi, byte ptr [rdx+rax]^^^mov     [r13+rax+0], sil^^^mov     [rdx+rax], cl^^^add     rax, 1^^^cmp     rdi, rax^^^jnz     short loc_464A1E^^^mov     rdx, [rsp+498h+var_488]^^^lea     r15, [rbp+rdx*2+0]^^^mov     r12, rdx^^^neg     r12^^^mov     [rsp+498h+var_490], r15^^^mov     r15, rdx^^^nop     dword ptr [rax+00000000h]^^^add     rbp, r15^^^cmp     rbp, [rsp+498h+var_458]^^^ja      loc_4648FC^^^mov     r13, rbp^^^sub     r13, r15^^^jmp     short loc_464A73^^^add     r13, r12^^^mov     rdx, r14^^^mov     rsi, r13^^^mov     rdi, rbp^^^call    rbx^^^test    eax, eax^^^js      short loc_464A70^^^add     r13, r15^^^cmp     r13, rbp^^^jz      loc_464B70^^^mov     rdx, [rsp+498h+var_490]^^^lea     rdi, [rbp-1]^^^mov     rsi, rdx^^^sub     rsi, 1^^^cmp     rbp, rsi^^^ja      loc_464B70^^^nop     word ptr [rax+rax+00000000h]^^^cmp     r13, rdi^^^movzx   r8d, byte ptr [rdx-1]^^^mov     rax, rdi^^^mov     rdx, rsi^^^mov     rcx, rsi^^^jbe     short loc_464ACE^^^jmp     short loc_464ADF^^^mov     rcx, rax^^^mov     rax, rdx^^^movzx   edx, byte ptr [rax]^^^mov     [rcx], dl^^^lea     rdx, [rax+r12]^^^cmp     r13, rdx^^^jbe     short loc_464AC8^^^mov     rdx, rax^^^lea     rax, [rsi-1]^^^sub     rdi, 1^^^mov     [rdx], r8b^^^cmp     rbp, rax^^^ja      loc_464B70^^^mov     rdx, rsi^^^mov     rsi, rax^^^jmp     short loc_464AB0^^^jnz     loc_464891^^^add     rbp, r15^^^add     r13, [rsp+498h+var_488]^^^mov     rax, rbp^^^sub     rax, [rsp+498h+var_470]^^^cmp     [rsp+498h+var_448], rax^^^jnb     loc_4648AD^^^mov     rdx, [rsp+498h+var_468]^^^sub     rdx, r13^^^cmp     [rsp+498h+var_448], rdx^^^jnb     loc_464DAE^^^cmp     rax, rdx^^^jle     loc_464DB8^^^mov     rax, [rsp+498h+var_460]^^^mov     rdx, [rsp+498h+var_470]^^^mov     [rsp+498h+var_470], r13^^^mov     [rax], rdx^^^mov     [rax+8], rbp^^^add     rax, 10h^^^mov     [rsp+498h+var_460], rax^^^jmp     loc_4648EB^^^add     r13, [rsp+498h+var_488]^^^jmp     loc_464798^^^add     [rsp+498h+var_490], r15^^^jmp     loc_464A58^^^mov     r12, rbp^^^jmp     loc_464889^^^cmp     [rsp+498h+var_488], 0Fh^^^lea     rbp, [r12+10h]^^^setnbe  r13b^^^cmp     [rsp+498h+var_490], 0^^^setz    [rsp+498h+var_439]^^^jz      loc_464E0C^^^cmp     [rsp+498h+var_468], rbp^^^mov     rdx, [rsp+498h+var_468]^^^setnbe  al^^^add     rdx, 10h^^^cmp     r12, rdx^^^setnbe  dl^^^or      eax, edx^^^test    r13b, al^^^jz      loc_464E0C^^^mov     rcx, [rsp+498h+var_468]^^^mov     rsi, [rsp+498h+var_480]^^^xor     eax, eax^^^xor     edx, edx^^^nop     word ptr [rax+rax+00h]^^^movdqu  xmm0, xmmword ptr [r12+rax]^^^add     rdx, 1^^^movdqu  xmm1, xmmword ptr [rcx+rax]^^^movdqu  xmmword ptr [r12+rax], xmm1^^^movdqu  xmmword ptr [rcx+rax], xmm0^^^add     rax, 10h^^^cmp     rdx, rsi^^^jb      short loc_464BD8^^^mov     rdx, [rsp+498h+var_490]^^^mov     rcx, [rsp+498h+var_468]^^^mov     rax, [rsp+498h+var_490]^^^add     rcx, [rsp+498h+var_490]^^^mov     r8, [rsp+498h+var_478]^^^add     rdx, r12^^^cmp     [rsp+498h+var_488], rax^^^jz      short loc_464C39^^^xor     eax, eax^^^movzx   esi, byte ptr [rdx+rax]^^^movzx   edi, byte ptr [rcx+rax]^^^mov     [rdx+rax], dil^^^mov     [rcx+rax], sil^^^add     rax, 1^^^cmp     r8, rax^^^jnz     short loc_464C20^^^mov     rdx, r14^^^mov     rsi, [rsp+498h+var_470]^^^mov     rdi, r12^^^call    rbx^^^test    eax, eax^^^jns     loc_46477F^^^cmp     [rsp+498h+var_470], rbp^^^mov     rdx, [rsp+498h+var_470]^^^setnbe  al^^^add     rdx, 10h^^^cmp     r12, rdx^^^setnbe  dl^^^or      eax, edx^^^test    al, r13b^^^jz      loc_464DFA^^^cmp     [rsp+498h+var_439], 0^^^jnz     loc_464DFA^^^mov     rcx, [rsp+498h+var_470]^^^xor     eax, eax^^^xor     edx, edx^^^movdqu  xmm0, xmmword ptr [r12+rax]^^^add     rdx, 1^^^movdqu  xmm1, xmmword ptr [rcx+rax]^^^movdqu  xmmword ptr [r12+rax], xmm1^^^movdqu  xmmword ptr [rcx+rax], xmm0^^^add     rax, 10h^^^cmp     rdx, [rsp+498h+var_480]^^^jb      short loc_464C84^^^mov     rdx, [rsp+498h+var_490]^^^mov     rcx, [rsp+498h+var_470]^^^mov     rax, [rsp+498h+var_490]^^^add     rcx, [rsp+498h+var_490]^^^mov     rdi, [rsp+498h+var_478]^^^add     rdx, r12^^^cmp     [rsp+498h+var_488], rax^^^jz      loc_46477F^^^xor     eax, eax^^^movzx   esi, byte ptr [rdx+rax]^^^movzx   r8d, byte ptr [rcx+rax]^^^mov     [rdx+rax], r8b^^^mov     [rcx+rax], sil^^^add     rax, 1^^^cmp     rdi, rax^^^jnz     short loc_464CD2^^^jmp     loc_46477F^^^cmp     [rsp+498h+var_490], 0^^^jz      loc_464DEB^^^cmp     [rsp+498h+var_488], 0Fh^^^lea     rax, [r12+10h]^^^mov     rcx, [rsp+498h+var_470]^^^setnbe  dl^^^cmp     [rsp+498h+var_470], rax^^^setnbe  al^^^add     rcx, 10h^^^cmp     r12, rcx^^^setnbe  cl^^^or      eax, ecx^^^test    dl, al^^^jz      loc_464DEB^^^mov     rcx, [rsp+498h+var_470]^^^mov     rsi, [rsp+498h+var_480]^^^xor     eax, eax^^^xor     edx, edx^^^nop     word ptr [rax+rax+00h]^^^movdqu  xmm0, xmmword ptr [r12+rax]^^^add     rdx, 1^^^movdqu  xmm1, xmmword ptr [rcx+rax]^^^movdqu  xmmword ptr [r12+rax], xmm1^^^movdqu  xmmword ptr [rcx+rax], xmm0^^^add     rax, 10h^^^cmp     rdx, rsi^^^jb      short loc_464D40^^^mov     rdx, [rsp+498h+var_490]^^^mov     rcx, [rsp+498h+var_470]^^^mov     rax, [rsp+498h+var_490]^^^add     rcx, [rsp+498h+var_490]^^^mov     r8, [rsp+498h+var_478]^^^add     rdx, r12^^^cmp     [rsp+498h+var_488], rax^^^jz      loc_46476A^^^xor     eax, eax^^^nop     dword ptr [rax+00h]^^^movzx   esi, byte ptr [rdx+rax]^^^movzx   edi, byte ptr [rcx+rax]^^^mov     [rdx+rax], dil^^^mov     [rcx+rax], sil^^^add     rax, 1^^^cmp     rax, r8^^^jnz     short loc_464D90^^^jmp     loc_46476A^^^mov     [rsp+498h+var_468], rbp^^^jmp     loc_4648EB^^^mov     rax, [rsp+498h+var_460]^^^mov     rdx, [rsp+498h+var_468]^^^mov     [rsp+498h+var_468], rbp^^^mov     [rax], r13^^^mov     [rax+8], rdx^^^add     rax, 10h^^^mov     [rsp+498h+var_460], rax^^^jmp     loc_4648EB^^^mov     rdx, [rsp+498h+var_450]^^^mov     rdi, [rsp+498h+var_488]^^^jmp     loc_464A1C^^^mov     rcx, [rsp+498h+var_470]^^^mov     rdx, r12^^^mov     r8, [rsp+498h+var_488]^^^jmp     short loc_464D8A^^^mov     rcx, [rsp+498h+var_470]^^^mov     rdx, r12^^^mov     rdi, [rsp+498h+var_488]^^^jmp     loc_464CD0^^^mov     rcx, [rsp+498h+var_468]^^^mov     rdx, r12^^^mov     r8, [rsp+498h+var_488]^^^jmp     loc_464C1E^^^mov     rcx, rbp^^^mov     rdx, r13^^^mov     r8, [rsp+498h+var_488]^^^jmp     loc_464858^^^
_dl_runtime_profile$$$sub     rsp, 20h^^^mov     qword ptr [rsp+20h+var_20], rbx^^^mov     qword ptr [rsp+20h+var_20+8], rax^^^mov     rbx, rsp^^^and     rsp, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, 340h^^^mov     [rbx+18h], rsp^^^mov     [rsp+360h+var_360], rdx^^^mov     [rsp+360h+var_358], r8^^^mov     qword ptr [rsp+360h+var_350], r9^^^mov     qword ptr [rsp+360h+var_350+8], rcx^^^mov     qword ptr [rsp+360h+var_340], rsi^^^mov     qword ptr [rsp+360h+var_340+8], rdi^^^mov     qword ptr [rsp+360h+var_330], rbp^^^lea     rax, [rbx+30h]^^^mov     qword ptr [rsp+360h+var_330+8], rax^^^movaps  [rsp+360h+var_320], xmm0^^^movaps  [rsp+360h+var_310], xmm1^^^movaps  [rsp+360h+var_300], xmm2^^^movaps  [rsp+360h+var_2F0], xmm3^^^movaps  [rsp+360h+var_2E0], xmm4^^^movaps  [rsp+360h+var_2D0], xmm5^^^movaps  [rsp+360h+var_2C0], xmm6^^^movaps  [rsp+360h+var_2B0], xmm7^^^cmp     cs:dword_6C32A0, 0^^^jnz     short loc_456C88^^^mov     r11, rbx^^^mov     eax, 1^^^cpuid^^^mov     rbx, r11^^^xor     eax, eax^^^and     ecx, 18000000h^^^cmp     ecx, 18000000h^^^jnz     short loc_456C7C^^^xor     ecx, ecx^^^xgetbv^^^and     eax, 6^^^sub     eax, 5^^^mov     cs:dword_6C32A0, eax^^^cmp     eax, 0^^^js      loc_457020^^^vmovdqu [rsp+360h+var_2A0], ymm0^^^vmovdqu [rsp+360h+var_260], ymm1^^^vmovdqu [rsp+360h+var_220], ymm2^^^vmovdqu [rsp+360h+var_1E0], ymm3^^^vmovdqu [rsp+360h+var_1A0], ymm4^^^vmovdqu [rsp+360h+var_160], ymm5^^^vmovdqu [rsp+360h+var_120], ymm6^^^vmovdqu [rsp+360h+var_E0], ymm7^^^vmovdqa xmmword ptr [rsp+360h+var_A0], xmm0^^^vmovdqa xmmword ptr [rsp+360h+var_A0+10h], xmm1^^^vmovdqa [rsp+360h+var_80], xmm2^^^vmovdqa [rsp+360h+var_70], xmm3^^^vmovdqa xmmword ptr [rsp+360h+var_60], xmm4^^^vmovdqa xmmword ptr [rsp+360h+var_60+10h], xmm5^^^vmovdqa [rsp+360h+var_40], xmm6^^^vmovdqa [rsp+360h+var_30], xmm7^^^mov     rcx, rsp^^^mov     rdx, [rbx+30h]^^^mov     rsi, [rbx+28h]^^^mov     rdi, [rbx+20h]^^^lea     r8, [rbx+10h]^^^call    _dl_profile_fixup^^^mov     r11, rax^^^mov     rax, [rbx+8]^^^mov     rdx, [rsp+360h+var_360]^^^mov     r8, [rsp+360h+var_358]^^^mov     r9, qword ptr [rsp+360h+var_350]^^^movaps  xmm0, [rsp+360h+var_320]^^^movaps  xmm1, [rsp+360h+var_310]^^^movaps  xmm2, [rsp+360h+var_300]^^^movaps  xmm3, [rsp+360h+var_2F0]^^^movaps  xmm4, [rsp+360h+var_2E0]^^^movaps  xmm5, [rsp+360h+var_2D0]^^^movaps  xmm6, [rsp+360h+var_2C0]^^^movaps  xmm7, [rsp+360h+var_2B0]^^^vpcmpeqq xmm8, xmm0, xmmword ptr [rsp+360h+var_A0]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456DA1^^^vmovdqa xmmword ptr [rsp+360h+var_2A0], xmm0^^^jmp     short loc_456DB0^^^vmovdqu ymm0, [rsp+360h+var_2A0]^^^vmovdqa [rsp+360h+var_320], xmm0^^^vpcmpeqq xmm8, xmm1, xmmword ptr [rsp+360h+var_A0+10h]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456DD2^^^vmovdqa xmmword ptr [rsp+360h+var_260], xmm1^^^jmp     short loc_456DE1^^^vmovdqu ymm1, [rsp+360h+var_260]^^^vmovdqa [rsp+360h+var_310], xmm1^^^vpcmpeqq xmm8, xmm2, [rsp+360h+var_80]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456E03^^^vmovdqa xmmword ptr [rsp+360h+var_220], xmm2^^^jmp     short loc_456E12^^^vmovdqu ymm2, [rsp+360h+var_220]^^^vmovdqa [rsp+360h+var_300], xmm2^^^vpcmpeqq xmm8, xmm3, [rsp+360h+var_70]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456E34^^^vmovdqa xmmword ptr [rsp+360h+var_1E0], xmm3^^^jmp     short loc_456E43^^^vmovdqu ymm3, [rsp+360h+var_1E0]^^^vmovdqa [rsp+360h+var_2F0], xmm3^^^vpcmpeqq xmm8, xmm4, xmmword ptr [rsp+360h+var_60]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456E65^^^vmovdqa xmmword ptr [rsp+360h+var_1A0], xmm4^^^jmp     short loc_456E77^^^vmovdqu ymm4, [rsp+360h+var_1A0]^^^vmovdqa [rsp+360h+var_2E0], xmm4^^^vpcmpeqq xmm8, xmm5, xmmword ptr [rsp+360h+var_60+10h]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456E99^^^vmovdqa xmmword ptr [rsp+360h+var_160], xmm5^^^jmp     short loc_456EAB^^^vmovdqu ymm5, [rsp+360h+var_160]^^^vmovdqa [rsp+360h+var_2D0], xmm5^^^vpcmpeqq xmm8, xmm6, [rsp+360h+var_40]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456ECD^^^vmovdqa xmmword ptr [rsp+360h+var_120], xmm6^^^jmp     short loc_456EDF^^^vmovdqu ymm6, [rsp+360h+var_120]^^^vmovdqa [rsp+360h+var_2C0], xmm6^^^vpcmpeqq xmm8, xmm7, [rsp+360h+var_30]^^^vpmovmskb esi, xmm8^^^cmp     esi, 0FFFFh^^^jz      short loc_456F01^^^vmovdqa xmmword ptr [rsp+360h+var_E0], xmm7^^^jmp     short loc_456F13^^^vmovdqu ymm7, [rsp+360h+var_E0]^^^vmovdqa [rsp+360h+var_2B0], xmm7^^^mov     r10, [rbx+10h]^^^test    r10, r10^^^jns     short loc_456F39^^^mov     rcx, qword ptr [rsp+360h+var_350+8]^^^mov     rsi, qword ptr [rsp+360h+var_340]^^^mov     rdi, qword ptr [rsp+360h+var_340+8]^^^mov     rsp, rbx^^^mov     rbx, qword ptr [rsp+30h+var_30]^^^add     rsp, 30h^^^jmp     r11^^^lea     rsi, [rbx+38h]^^^add     r10, 8^^^and     r10, 0FFFFFFFFFFFFFFF0h^^^mov     rcx, r10^^^sub     rsp, r10^^^mov     rdi, rsp^^^shr     rcx, 3^^^rep movsq^^^mov     rcx, [rdi+18h]^^^mov     rsi, [rdi+20h]^^^mov     rdi, [rdi+28h]^^^call    r11^^^mov     rsp, [rbx+18h]^^^sub     rsp, 0F0h^^^mov     rcx, rsp^^^mov     [rcx], rax^^^mov     [rcx+8], rdx^^^movaps  xmmword ptr [rcx+10h], xmm0^^^movaps  xmmword ptr [rcx+20h], xmm1^^^vmovdqu ymmword ptr [rcx+50h], ymm0^^^vmovdqu ymmword ptr [rcx+90h], ymm1^^^vmovdqa xmmword ptr [rcx+0D0h], xmm0^^^vmovdqa xmmword ptr [rcx+0E0h], xmm1^^^fstp    tbyte ptr [rcx+30h]^^^fstp    tbyte ptr [rcx+40h]^^^mov     rdx, [rbx+18h]^^^mov     rsi, [rbx+28h]^^^mov     rdi, [rbx+20h]^^^call    _dl_call_pltexit^^^mov     rax, [rsp+0F0h+var_F0]^^^mov     rdx, [rsp+0F0h+var_E8]^^^movaps  xmm0, xmmword ptr [rsp+0F0h+var_E0]^^^movaps  xmm1, xmmword ptr [rsp+0F0h+var_E0+10h]^^^vpcmpeqq xmm2, xmm0, [rsp+0F0h+var_20]^^^vpmovmskb esi, xmm2^^^cmp     esi, 0FFFFh^^^jnz     short loc_456FE4^^^vmovdqu ymm0, [rsp+0F0h+var_A0]^^^vpcmpeqq xmm2, xmm1, [rsp+0F0h+var_10]^^^vpmovmskb esi, xmm2^^^cmp     esi, 0FFFFh^^^jnz     short loc_457003^^^vmovdqu ymm1, [rsp+0F0h+var_60]^^^fld     [rsp+0F0h+var_B0]^^^fld     [rsp+0F0h+var_C0]^^^mov     rsp, rbx^^^mov     rbx, qword ptr [rsp+30h+var_30]^^^add     rsp, 30h^^^retn^^^mov     rcx, rsp^^^mov     rdx, [rbx+30h]^^^mov     rsi, [rbx+28h]^^^mov     rdi, [rbx+20h]^^^lea     r8, [rbx+10h]^^^call    _dl_profile_fixup^^^mov     r11, rax^^^mov     rax, [rbx+8]^^^mov     rdx, [rsp+360h+var_360]^^^mov     r8, [rsp+360h+var_358]^^^mov     r9, qword ptr [rsp+360h+var_350]^^^movaps  xmm0, [rsp+360h+var_320]^^^movaps  xmm1, [rsp+360h+var_310]^^^movaps  xmm2, [rsp+360h+var_300]^^^movaps  xmm3, [rsp+360h+var_2F0]^^^movaps  xmm4, [rsp+360h+var_2E0]^^^movaps  xmm5, [rsp+360h+var_2D0]^^^movaps  xmm6, [rsp+360h+var_2C0]^^^movaps  xmm7, [rsp+360h+var_2B0]^^^mov     r10, [rbx+10h]^^^test    r10, r10^^^jns     short loc_4570A7^^^mov     rcx, qword ptr [rsp+360h+var_350+8]^^^mov     rsi, qword ptr [rsp+360h+var_340]^^^mov     rdi, qword ptr [rsp+360h+var_340+8]^^^mov     rsp, rbx^^^mov     rbx, qword ptr [rsp+30h+var_30]^^^add     rsp, 30h^^^jmp     r11^^^lea     rsi, [rbx+38h]^^^add     r10, 8^^^and     r10, 0FFFFFFFFFFFFFFF0h^^^mov     rcx, r10^^^sub     rsp, r10^^^mov     rdi, rsp^^^shr     rcx, 3^^^rep movsq^^^mov     rcx, [rdi+18h]^^^mov     rsi, [rdi+20h]^^^mov     rdi, [rdi+28h]^^^call    r11^^^mov     rsp, [rbx+18h]^^^sub     rsp, 0D0h^^^mov     rcx, rsp^^^mov     [rcx], rax^^^mov     [rcx+8], rdx^^^movaps  xmmword ptr [rcx+10h], xmm0^^^movaps  xmmword ptr [rcx+20h], xmm1^^^fstp    tbyte ptr [rcx+30h]^^^fstp    tbyte ptr [rcx+40h]^^^mov     rdx, [rbx+18h]^^^mov     rsi, [rbx+28h]^^^mov     rdi, [rbx+20h]^^^call    _dl_call_pltexit^^^mov     rax, [rsp+360h+var_360]^^^mov     rdx, [rsp+360h+var_358]^^^movaps  xmm0, [rsp+360h+var_350]^^^movaps  xmm1, [rsp+360h+var_340]^^^fld     tbyte ptr [rsp+360h+var_320]^^^fld     [rsp+360h+var_330]^^^mov     rsp, rbx^^^mov     rbx, qword ptr [rsp+30h+var_30]^^^add     rsp, 30h^^^retn^^^
derivation_compare$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^mov     rbx, rdi^^^sub     rsp, 18h^^^mov     rbp, rsi^^^mov     rdi, [rdi]^^^mov     rsi, [rsi]^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_457D30^^^mov     rsi, [rbp+8]^^^mov     rdi, [rbx+8]^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^jmp     sub_4003A0^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
_IO_iter_end$$$xor     eax, eax^^^retn^^^
__mpn_extract_long_double$$$mov     r10d, [rsp+arg_8]^^^mov     r9, [rsp+arg_0]^^^mov     [rsp+var_10], r10d^^^movzx   eax, byte ptr [rsp+var_10+1]^^^mov     [rsp+var_18], r9^^^mov     r8d, dword ptr [rsp+var_18]^^^shr     al, 7^^^movzx   eax, al^^^mov     [rcx], eax^^^movzx   ecx, word ptr [rsp+var_10]^^^and     cx, 7FFFh^^^movzx   esi, cx^^^lea     eax, [rsi-3FFFh]^^^mov     [rdx], eax^^^mov     eax, dword ptr [rsp+var_18+4]^^^shl     rax, 20h^^^or      rax, r8^^^test    cx, cx^^^mov     [rdi], rax^^^jnz     short loc_464640^^^test    rax, rax^^^jz      short loc_46464D^^^mov     rcx, 7FFFFFFFFFFFFFFFh^^^and     rax, rcx^^^test    rax, rax^^^mov     [rdi], rax^^^jz      short loc_464660^^^bsr     rcx, rax^^^xor     ecx, 3Fh^^^jz      short loc_464627^^^shl     rax, cl^^^mov     [rdi], rax^^^mov     eax, 0FFFFC002h^^^sub     eax, ecx^^^mov     [rdx], eax^^^mov     eax, 1^^^retn^^^cmp     esi, 7FFFh^^^jz      short loc_464630^^^test    rax, rax^^^jnz     short loc_464630^^^mov     dword ptr [rdx], 0^^^mov     eax, 1^^^retn^^^mov     rax, 8000000000000000h^^^mov     [rdi], rax^^^mov     dword ptr [rdx], 0FFFFC002h^^^jmp     short loc_464630^^^
sub_437C98$$$sub     rdi, 30h^^^lea     rax, [rsi-38h]^^^mov     r8, [rsi-8]^^^add     rdx, 1^^^mov     rcx, rdi^^^jmp     short loc_437C83^^^
_dl_important_hwcaps$$$mov     cs:result_10829, offset buf_10830^^^mov     cs:qword_6C53D8, 0^^^mov     eax, offset result_10829^^^mov     qword ptr [rdx], 1^^^retn^^^
_int_realloc$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     rbp, rdi^^^mov     [rsp+var_8], r14^^^sub     rsp, 38h^^^mov     rax, [rsi+8]^^^mov     r12, rdx^^^cmp     rax, 10h^^^jbe     loc_406C3E^^^mov     rsi, [rdi+878h]^^^cmp     rsi, rdx^^^jbe     loc_406C3E^^^test    al, 2^^^jnz     loc_406C61^^^lea     r14, [rbx+rdx]^^^mov     rdx, [r14+8]^^^cmp     rdx, 10h^^^jbe     loc_406C5A^^^mov     rdi, rdx^^^and     rdi, 0FFFFFFFFFFFFFFF8h^^^cmp     rsi, rdi^^^jbe     loc_406C5A^^^cmp     r12, rcx^^^mov     r13, r12^^^jnb     loc_406B00^^^cmp     [rbp+58h], r14^^^jz      loc_406BC0^^^test    byte ptr [r14+rdi+8], 1^^^jnz     short loc_4069D8^^^add     r13, rdi^^^cmp     rcx, r13^^^jbe     loc_406A98^^^lea     rsi, [rcx-0Fh]^^^mov     rdi, rbp^^^mov     [rsp+38h+var_30], rcx^^^call    _int_malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rsp+38h+var_30]^^^jz      loc_406B55^^^mov     rdx, [rax-8]^^^lea     rax, [rax-10h]^^^cmp     r14, rax^^^jz      loc_406C10^^^lea     rdx, [r12-8]^^^mov     rax, rdx^^^shr     rax, 3^^^cmp     eax, 2^^^jbe     loc_406C93^^^cmp     eax, 9^^^ja      loc_406BA8^^^mov     rdx, [rbx+10h]^^^cmp     eax, 4^^^mov     [r13+0], rdx^^^mov     rdx, [rbx+18h]^^^mov     [r13+8], rdx^^^mov     rdx, [rbx+20h]^^^mov     [r13+10h], rdx^^^jbe     short loc_406A80^^^mov     rdx, [rbx+28h]^^^cmp     eax, 6^^^mov     [r13+18h], rdx^^^mov     rdx, [rbx+30h]^^^mov     [r13+20h], rdx^^^jbe     short loc_406A80^^^mov     rdx, [rbx+38h]^^^cmp     eax, 9^^^mov     [r13+28h], rdx^^^mov     rdx, [rbx+40h]^^^mov     [r13+30h], rdx^^^jnz     short loc_406A80^^^mov     rax, [rbx+48h]^^^mov     [r13+38h], rax^^^mov     rax, [rbx+50h]^^^mov     [r13+40h], rax^^^mov     edx, 1^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    _int_free^^^jmp     loc_406B55^^^mov     rsi, [r14+10h]^^^mov     rdi, [r14+18h]^^^cmp     r14, [rsi+18h]^^^jnz     loc_406CAC^^^cmp     r14, [rdi+10h]^^^jnz     loc_406CAC^^^cmp     rdx, 3FFh^^^mov     [rsi+18h], rdi^^^mov     [rdi+10h], rsi^^^jbe     short loc_406B00^^^mov     rdx, [r14+20h]^^^test    rdx, rdx^^^jz      short loc_406B00^^^cmp     [rdx+28h], r14^^^jnz     loc_406CD2^^^mov     rdi, [r14+28h]^^^cmp     r14, [rdi+20h]^^^jnz     loc_406D0D^^^cmp     qword ptr [rsi+20h], 0^^^jz      loc_406CEB^^^mov     [rdx+28h], rdi^^^mov     rsi, [r14+28h]^^^mov     [rsi+20h], rdx^^^nop     dword ptr [rax]^^^mov     rdx, r13^^^sub     rdx, rcx^^^cmp     rdx, 1Fh^^^jbe     short loc_406B80^^^and     eax, 7^^^cmp     rbp, offset main_arena^^^lea     rsi, [rbx+rcx]^^^jz      loc_406C30^^^or      rcx, 4^^^or      rcx, rax^^^mov     [rbx+8], rcx^^^mov     ecx, 4^^^mov     rax, rdx^^^mov     rdi, rbp^^^or      rax, 1^^^or      rax, rcx^^^mov     [rsi+8], rax^^^or      qword ptr [rsi+rdx+8], 1^^^mov     edx, 1^^^call    _int_free^^^lea     r13, [rbx+10h]^^^mov     rax, r13^^^mov     rbx, [rsp+38h+var_28]^^^mov     rbp, [rsp+38h+var_20]^^^mov     r12, [rsp+38h+var_18]^^^mov     r13, [rsp+38h+var_10]^^^mov     r14, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^and     eax, 7^^^xor     edx, edx^^^cmp     rbp, offset main_arena^^^setnz   dl^^^or      rax, r13^^^shl     rdx, 2^^^or      rax, rdx^^^mov     [rbx+8], rax^^^or      qword ptr [rbx+r13+8], 1^^^jmp     short loc_406B51^^^lea     rsi, [rbx+10h]^^^mov     rdi, r13^^^call    memcpy^^^jmp     loc_406A80^^^lea     rdx, [rcx+20h]^^^add     rdi, r12^^^cmp     rdi, rdx^^^jb      loc_4069D8^^^and     eax, 7^^^xor     edx, edx^^^cmp     rbp, offset main_arena^^^setnz   dl^^^or      rax, rcx^^^sub     rdi, rcx^^^shl     rdx, 2^^^or      rdi, 1^^^lea     r13, [rbx+10h]^^^or      rax, rdx^^^mov     [rbx+8], rax^^^lea     rax, [rbx+rcx]^^^mov     [rbp+58h], rax^^^mov     [rax+8], rdi^^^jmp     loc_406B55^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^lea     r13, [r12+rdx]^^^cmp     rcx, r13^^^ja      short loc_406C7A^^^mov     rax, [rbx+8]^^^jmp     loc_406B00^^^or      rax, rcx^^^xor     ecx, ecx^^^mov     [rbx+8], rax^^^jmp     loc_406B30^^^mov     esi, offset aReallocInvalid^^^mov     edi, cs:check_action^^^lea     rdx, [rbx+10h]^^^xor     r13d, r13d^^^call    malloc_printerr^^^jmp     loc_406B55^^^mov     esi, offset aReallocInval_0^^^jmp     short loc_406C43^^^mov     ecx, offset __func___12745^^^mov     edx, 1112h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aOldpSize0x2^^^call    __malloc_assert^^^mov     ecx, offset __func___12745^^^mov     edx, 1173h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aUnsignedLongNe^^^call    __malloc_assert^^^mov     ecx, offset __func___12745^^^mov     edx, 1153h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNcopies3^^^call    __malloc_assert^^^mov     edi, cs:check_action^^^mov     rdx, r14^^^mov     esi, offset aCorruptedDoubl^^^mov     [rsp+38h+var_30], rcx^^^call    malloc_printerr^^^mov     rax, [rbx+8]^^^mov     rcx, [rsp+38h+var_30]^^^jmp     loc_406B00^^^mov     ecx, offset __func___12745^^^mov     edx, 1135h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextFd_nextsiz^^^call    __malloc_assert^^^cmp     rdx, r14^^^jz      short loc_406D26^^^mov     [rsi+20h], rdx^^^mov     rdx, [r14+20h]^^^mov     [rsi+28h], rdi^^^mov     [rdx+28h], rsi^^^mov     rdx, [r14+28h]^^^mov     [rdx+20h], rsi^^^jmp     loc_406B00^^^mov     ecx, offset __func___12745^^^mov     edx, 1135h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextBk_nextsiz^^^call    __malloc_assert^^^mov     [rsi+28h], rsi^^^mov     [rsi+20h], rsi^^^jmp     loc_406B00^^^
_IO_new_file_write$$$push    r13^^^xor     eax, eax^^^mov     r13, rdx^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^sub     rsp, 8^^^test    rdx, rdx^^^jle     short loc_429833^^^mov     rbx, rdx^^^jmp     short loc_42980B^^^sub     rbx, rax^^^add     rbp, rax^^^test    rbx, rbx^^^jle     short loc_429860^^^test    byte ptr [r12+74h], 2^^^mov     edi, [r12+70h]^^^mov     rdx, rbx^^^mov     rsi, rbp^^^jnz     short loc_429868^^^call    write^^^test    rax, rax^^^jns     short loc_429800^^^or      dword ptr [r12], 20h^^^mov     rax, r13^^^sub     rax, rbx^^^mov     rdx, [r12+90h]^^^test    rdx, rdx^^^js      short loc_42984B^^^add     rdx, rax^^^mov     [r12+90h], rdx^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rax, r13^^^sub     rax, rbx^^^jmp     short loc_429833^^^call    __write_nocancel^^^cdqe^^^jmp     short loc_429823^^^
group_number$$$push    rbp^^^xor     eax, eax^^^mov     r8, rdi^^^mov     r9, rsi^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rcx^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, rbx^^^sub     rsp, 18h^^^mov     r12b, [rdx]^^^repne scasb^^^lea     eax, [r12-1]^^^not     rcx^^^lea     r13, [rcx-1]^^^cmp     al, 7Dh^^^ja      loc_400545^^^lea     r15, [rdx+1]^^^mov     rdx, rsi^^^mov     rsi, r8^^^sub     rdx, r8^^^mov     [rbp+var_40], r9^^^mov     [rbp+var_38], r13d^^^lea     rax, [rdx+1Eh]^^^movsx   r12d, r12b^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+40h+var_31]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r14^^^call    mempcpy^^^mov     ecx, [rbp+var_38]^^^mov     r9, [rbp+var_40]^^^movsxd  rcx, ecx^^^mov     r8, r9^^^add     rbx, rcx^^^jmp     short loc_400540^^^dec     rax^^^dec     r12d^^^lea     rsi, [r8-1]^^^mov     dl, [rax]^^^mov     [r8-1], dl^^^jnz     short loc_40053D^^^cmp     rax, r14^^^jbe     short loc_40053D^^^xor     edx, edx^^^mov     dil, [rbx+rdx-1]^^^dec     rsi^^^dec     rdx^^^mov     [rsi], dil^^^lea     edi, [rdx+r13]^^^test    edi, edi^^^jg      short loc_4004F1^^^mov     r12b, [r15]^^^test    r12b, r12b^^^js      short loc_400515^^^cmp     r12b, 7Fh^^^jnz     short loc_40052A^^^mov     r8, rsi^^^dec     rax^^^dec     r8^^^mov     dl, [rax]^^^cmp     rax, r14^^^mov     [r8], dl^^^ja      short loc_400518^^^jmp     short loc_400545^^^test    r12b, r12b^^^jz      short loc_400538^^^movsx   r12d, r12b^^^inc     r15^^^jmp     short loc_40053D^^^movsx   r12d, byte ptr [r15-1]^^^mov     r8, rsi^^^cmp     rax, r14^^^ja      short loc_4004D8^^^lea     rsp, [rbp-28h]^^^mov     rax, r8^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
__parse_one_specwc$$$push    r12^^^mov     r12, rsi^^^push    rbp^^^push    rbx^^^mov     rbx, rdx^^^lea     rdx, [rdi+4]^^^sub     rsp, 10h^^^movzx   eax, byte ptr [rbx+0Dh]^^^movzx   r10d, byte ptr [rbx+0Ch]^^^mov     dword ptr [rbx+30h], 0FFFFFFFFh^^^mov     dword ptr [rbx+10h], 20h^^^mov     [rsp+28h+var_20], rdx^^^and     eax, 0FFFFFFF6h^^^and     r10d, 7^^^or      eax, 4^^^mov     [rbx+0Ch], r10b^^^mov     [rbx+0Dh], al^^^mov     r9d, [rdi+4]^^^lea     eax, [r9-30h]^^^cmp     eax, 9^^^ja      short loc_473D3C^^^mov     esi, [rdi+8]^^^lea     r8, [rdi+8]^^^mov     [rsp+28h+var_20], r8^^^lea     r11d, [rsi-30h]^^^cmp     r11d, 9^^^ja      short loc_473D2A^^^add     rdi, 0Ch^^^nop     word ptr [rax+rax+00000000h]^^^lea     eax, [rax+rax*4]^^^mov     r8, rdi^^^lea     eax, [rsi+rax*2-30h]^^^mov     esi, [rdi]^^^lea     rdi, [rdi+4]^^^lea     r11d, [rsi-30h]^^^cmp     r11d, 9^^^jbe     short loc_473D10^^^test    eax, eax^^^jz      short loc_473D37^^^cmp     esi, 24h^^^jz      loc_4740F0^^^mov     [rsp+28h+var_20], rdx^^^mov     rax, rdx^^^sub     r9d, 20h^^^cmp     r9d, 29h        ^^^jbe     loc_473E78^^^mov     [rsp+28h+var_20], rax^^^and     r10d, 20h^^^jz      short loc_473D5F^^^mov     dword ptr [rbx+10h], 20h^^^mov     dword ptr [rbx+2Ch], 0FFFFFFFFh^^^mov     dword ptr [rbx+4], 0^^^mov     eax, [rdx]^^^cmp     eax, 2Ah^^^jz      loc_473F90^^^sub     eax, 30h^^^xor     ebp, ebp^^^cmp     eax, 9^^^jbe     loc_473F20^^^mov     dword ptr [rbx+28h], 0FFFFFFFFh^^^mov     dword ptr [rbx], 0FFFFFFFFh^^^cmp     dword ptr [rdx], 2Eh^^^jz      loc_474008^^^and     byte ptr [rbx+0Ch], 0F8h^^^and     byte ptr [rbx+0Dh], 0FDh^^^mov     rax, cs:__printf_modifier_table^^^mov     word ptr [rbx+0Eh], 0^^^test    rax, rax^^^jnz     short loc_473DD0^^^mov     ecx, [rdx]^^^lea     rax, [rdx+4]^^^mov     [rsp+28h+var_20], rax^^^lea     esi, [rcx-4Ch]^^^cmp     esi, 2Eh        ^^^ja      short loc_473DF8^^^jmp     ds:off_4B1AE0[rsi*8]^^^mov     ecx, [rdx]^^^cmp     qword ptr [rax+rcx*8], 0^^^jz      short loc_473DB6^^^lea     rdi, [rsp+28h+var_20]^^^mov     rsi, rbx^^^call    __handle_registered_modifier_wc^^^test    eax, eax^^^mov     rdx, [rsp+28h+var_20]^^^jnz     short loc_473DB6^^^mov     ecx, [rdx]^^^lea     rax, [rdx+4]^^^nop     dword ptr [rax]^^^cmp     cs:__printf_function_table, 0^^^mov     [rbx+8], ecx^^^mov     [rsp+28h+var_20], rax^^^mov     dword ptr [rbx+40h], 0FFFFFFFFh^^^jnz     loc_474315^^^sub     ecx, 41h^^^mov     qword ptr [rbx+38h], 1^^^cmp     ecx, 37h        ^^^jbe     loc_473F18^^^mov     qword ptr [rbx+38h], 0^^^xor     edx, edx^^^nop     dword ptr [rax+rax+00h]^^^cmp     dword ptr [rbx+30h], 0FFFFFFFFh^^^jz      loc_474068^^^mov     eax, [rbx+8]^^^mov     r12, [rsp+28h+var_20]^^^test    eax, eax^^^jz      loc_473F80^^^mov     esi, 25h^^^mov     rdi, r12^^^call    wcschrnul^^^mov     [rbx+18h], r12^^^mov     [rbx+20h], rax^^^add     rsp, 10h^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^retn^^^jmp     ds:off_4B1C58[r9*8]^^^or      byte ptr [rbx+0Dh], 8^^^nop     dword ptr [rax+00h]^^^mov     r9d, [rdx+4]^^^lea     rax, [rdx+4]^^^test    r9d, r9d^^^jz      short loc_473EB8^^^mov     rdx, rax^^^jmp     loc_473D3F^^^mov     dword ptr [rbx+10h], 30h^^^mov     r9d, [rdx+4]^^^lea     rax, [rdx+4]^^^test    r9d, r9d^^^jnz     short loc_473E95^^^nop     dword ptr [rax+00h]^^^mov     [rsp+28h+var_20], rax^^^mov     rdx, rax^^^jmp     loc_473D52^^^or      r10d, 20h       ^^^mov     [rbx+0Ch], r10b^^^jmp     short loc_473E88^^^or      r10d, 40h       ^^^mov     [rbx+0Ch], r10b^^^jmp     short loc_473E88^^^or      r10d, 0FFFFFF80h^^^mov     [rbx+0Ch], r10b^^^jmp     short loc_473E88^^^or      r10d, 8         ^^^mov     [rbx+0Ch], r10b^^^jmp     short loc_473E88^^^or      r10d, 10h       ^^^mov     [rbx+0Ch], r10b^^^jmp     loc_473E88^^^jmp     ds:off_4B1DA8[rcx*8]^^^mov     esi, [rdx+4]^^^lea     rdi, [rdx+4]^^^mov     [rsp+28h+var_20], rdi^^^lea     r8d, [rsi-30h]^^^cmp     r8d, 9^^^ja      loc_47430D^^^lea     rdi, [rdx+8]^^^xchg    ax, ax^^^lea     eax, [rax+rax*4]^^^mov     rdx, rdi^^^lea     eax, [rsi+rax*2-30h]^^^mov     esi, [rdi]^^^lea     rdi, [rdi+4]^^^lea     r8d, [rsi-30h]^^^cmp     r8d, 9^^^jbe     short loc_473F40^^^mov     [rsp+28h+var_20], rdx^^^mov     [rbx+4], eax^^^xor     ebp, ebp^^^jmp     loc_473D86^^^or      byte ptr [rbx+0Ch], 4^^^lea     rax, [rdx+8]^^^mov     ecx, [rdx+4]^^^jmp     loc_473DF8      ^^^sub     r12, 4^^^mov     rax, r12^^^jmp     loc_473E5F^^^mov     eax, [rdx+4]^^^lea     r8, [rdx+4]^^^mov     [rsp+28h+var_20], r8^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      short loc_473FE8^^^lea     rsi, [rdx+8]^^^mov     edx, [rdx+8]^^^mov     [rsp+28h+var_20], rsi^^^lea     edi, [rdx-30h]^^^cmp     edi, 9^^^ja      short loc_473FD5^^^nop     dword ptr [rax+rax+00000000h]^^^lea     eax, [rax+rax*4]^^^add     rsi, 4^^^lea     eax, [rdx+rax*2-30h]^^^mov     edx, [rsi]^^^lea     edi, [rdx-30h]^^^cmp     edi, 9^^^jbe     short loc_473FC0^^^test    eax, eax^^^jz      short loc_473FE8^^^cmp     edx, 24h^^^jz      loc_4742D2^^^nop     word ptr [rax+rax+00h]^^^mov     [rbx+2Ch], r12d^^^mov     [rsp+28h+var_20], r8^^^add     r12, 1^^^mov     rdx, r8^^^mov     ebp, 1^^^jmp     loc_473D86^^^mov     eax, [rdx+4]^^^lea     rsi, [rdx+4]^^^mov     [rsp+28h+var_20], rsi^^^cmp     eax, 2Ah^^^jz      loc_4741F0^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      short loc_474080^^^mov     ecx, [rdx+8]^^^lea     rsi, [rdx+8]^^^mov     [rsp+28h+var_20], rsi^^^mov     rdx, rsi^^^lea     edi, [rcx-30h]^^^cmp     edi, 9^^^ja      short loc_47405A^^^nop     dword ptr [rax+00h]^^^lea     eax, [rax+rax*4]^^^add     rdx, 4^^^lea     eax, [rcx+rax*2-30h]^^^mov     ecx, [rdx]^^^lea     esi, [rcx-30h]^^^cmp     esi, 9^^^jbe     short loc_474040^^^mov     [rsp+28h+var_20], rdx^^^mov     [rbx], eax^^^jmp     loc_473D9C^^^test    rdx, rdx^^^jz      loc_473E42^^^mov     [rbx+30h], r12d^^^add     rbp, rdx^^^jmp     loc_473E42^^^mov     dword ptr [rbx], 0^^^mov     rdx, rsi^^^jmp     loc_473D9C^^^movzx   r10d, byte ptr [rbx+0Ch]^^^lea     rax, [rdx+8]^^^or      r10d, 4^^^mov     [rbx+0Ch], r10b^^^mov     ecx, [rdx+4]^^^cmp     ecx, 6Ch^^^jnz     loc_473DF8      ^^^jmp     short loc_4740D5^^^cmp     dword ptr [rdx+4], 68h^^^jz      loc_4742FD^^^or      byte ptr [rbx+0Ch], 2^^^lea     rax, [rdx+8]^^^mov     ecx, [rdx+4]^^^jmp     loc_473DF8      ^^^movzx   r10d, byte ptr [rbx+0Ch]^^^or      r10d, 1^^^mov     [rbx+0Ch], r10b^^^mov     ecx, [rax]^^^add     rax, 4^^^jmp     loc_473DF8      ^^^lea     esi, [rax-1]^^^lea     rdx, [r8+4]^^^mov     [rbx+30h], esi^^^mov     rsi, [rcx]^^^mov     [rsp+28h+var_20], rdx^^^mov     r9d, [r8+4]^^^cmp     rax, rsi^^^cmovb   rax, rsi^^^mov     [rcx], rax^^^movzx   r10d, byte ptr [rbx+0Ch]^^^jmp     loc_473D3C^^^mov     dword ptr [rbx+34h], 1^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 2^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 5^^^mov     edx, 1^^^jmp     loc_473E38^^^test    byte ptr [rbx+0Ch], 1^^^jz      loc_4742B0^^^mov     dword ptr [rbx+34h], 107h^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 3^^^mov     edx, 1^^^jmp     loc_473E38^^^movzx   eax, byte ptr [rbx+0Ch]^^^test    al, 4^^^jz      loc_474288^^^mov     dword ptr [rbx+34h], 200h^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 800h^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 4^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     eax, [rdx+8]^^^lea     r8, [rdx+8]^^^mov     [rsp+28h+var_20], r8^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      short loc_474268^^^lea     rsi, [rdx+0Ch]^^^mov     edx, [rdx+0Ch]^^^mov     [rsp+28h+var_20], rsi^^^lea     edi, [rdx-30h]^^^cmp     edi, 9^^^ja      short loc_474235^^^nop     dword ptr [rax+rax+00000000h]^^^lea     eax, [rax+rax*4]^^^add     rsi, 4^^^lea     eax, [rdx+rax*2-30h]^^^mov     edx, [rsi]^^^lea     edi, [rdx-30h]^^^cmp     edi, 9^^^jbe     short loc_474220^^^test    eax, eax^^^jz      short loc_474268^^^cmp     edx, 24h^^^jnz     short loc_474268^^^mov     rdx, [rcx]^^^lea     edi, [rax-1]^^^mov     [rbx+28h], edi^^^cmp     rax, rdx^^^cmovb   rax, rdx^^^lea     rdx, [rsi+4]^^^test    edi, edi^^^mov     [rcx], rax^^^mov     [rsp+28h+var_20], rdx^^^jns     loc_473D9C^^^nop     word ptr [rax+rax+00h]^^^mov     [rbx+28h], r12d^^^add     rbp, 1^^^add     r12, 1^^^mov     [rsp+28h+var_20], r8^^^mov     rdx, r8^^^jmp     loc_473D9C^^^test    al, 2^^^jnz     short loc_4742C1^^^test    byte ptr [rbx+0Dh], 2^^^jnz     loc_474120      ^^^mov     dword ptr [rbx+34h], 0^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 7^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     dword ptr [rbx+34h], 400h^^^mov     edx, 1^^^jmp     loc_473E38^^^mov     rdx, [rcx]^^^lea     edi, [rax-1]^^^mov     [rbx+2Ch], edi^^^cmp     rax, rdx^^^cmovb   rax, rdx^^^lea     rdx, [rsi+4]^^^test    edi, edi^^^mov     [rcx], rax^^^mov     [rsp+28h+var_20], rdx^^^js      loc_473FE8^^^xor     ebp, ebp^^^jmp     loc_473D86^^^or      byte ptr [rbx+0Dh], 2^^^lea     rax, [rdx+0Ch]^^^mov     ecx, [rdx+8]^^^jmp     loc_473DF8      ^^^mov     rdx, rdi^^^jmp     loc_473F5F^^^cmp     ecx, 0FFh^^^jg      loc_473E15^^^mov     rax, cs:__printf_arginfo_table^^^movsxd  rdx, ecx^^^mov     rax, [rax+rdx*8]^^^test    rax, rax^^^jz      loc_473E15^^^lea     rdx, [rbx+34h]^^^lea     rcx, [rbx+40h]^^^mov     esi, 1^^^mov     rdi, rbx^^^call    rax^^^movsxd  rdx, eax^^^test    eax, eax^^^mov     [rbx+38h], rdx^^^jns     loc_473E38^^^mov     ecx, [rbx+8]^^^jmp     loc_473E15^^^
sub_472D62$$$cmp     dword ptr [rbp-1138h], 0^^^jnz     loc_46F318^^^mov     r8d, [rbp-1148h]^^^sub     r8d, 1^^^cmp     dword ptr [rbp-1158h], 0^^^mov     [rbp-10F4h], r8d^^^jnz     short loc_472DC1^^^test    r8d, r8d^^^jle     short loc_472DC1^^^movsxd  rdx, r8d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_472E7F^^^add     r14d, edx^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_472EB2^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   edi, byte ptr [rax]^^^call    btowc^^^mov     rdx, [rbx+0A0h]^^^mov     esi, eax^^^test    rdx, rdx^^^jz      loc_472E99^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_472E99^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      short loc_472E91^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_472E88^^^add     r14d, 1^^^cmp     dword ptr [rbp-1158h], 0^^^jz      loc_46F40A^^^cmp     dword ptr [rbp-10F4h], 0^^^jle     loc_46F40A^^^movsxd  rdx, dword ptr [rbp-10F4h]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_46F407^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_472E13^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_472DDC^^^
__libc_init_secure$$$mov     eax, cs:__libc_enable_secure_decided^^^push    rbx^^^test    eax, eax^^^jz      short loc_411AD0^^^pop     rbx^^^retn^^^call    geteuid^^^mov     ebx, eax^^^call    getuid^^^cmp     ebx, eax^^^mov     edx, 1^^^jz      short loc_411AF0^^^mov     cs:__libc_enable_secure, edx^^^pop     rbx^^^retn^^^call    getegid^^^mov     ebx, eax^^^call    getgid^^^xor     edx, edx^^^cmp     ebx, eax^^^setnz   dl^^^jmp     short loc_411AE5^^^
find_module_idx$$$push    r15^^^mov     r15, rsi^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 18h^^^mov     rcx, cs:gconv_cache^^^movzx   r14d, word ptr [rcx+4]^^^movzx   r12d, word ptr [rcx+6]^^^mov     [rsp+48h+var_48], rcx^^^add     r14, rcx^^^add     r12, rcx^^^call    __hash_string^^^mov     rcx, [rsp+48h+var_48]^^^xor     edx, edx^^^mov     esi, eax^^^movzx   ebp, word ptr [rcx+8]^^^div     ebp^^^lea     edi, [rbp-2]^^^mov     eax, esi^^^mov     ebx, edx^^^xor     edx, edx^^^div     edi^^^movzx   eax, word ptr [rcx+4]^^^add     edx, 1^^^mov     [rsp+48h+var_3C], edx^^^mov     rdx, cs:cache_size^^^sub     edx, eax^^^mov     [rsp+48h+var_40], edx^^^jmp     short loc_460090^^^movzx   eax, si^^^cmp     [rsp+48h+var_40], eax^^^jbe     short loc_460083^^^movzx   esi, si^^^mov     rdi, r13^^^mov     [rsp+48h+var_48], rcx^^^add     rsi, r14^^^call    sub_4003A0^^^test    eax, eax^^^mov     rcx, [rsp+48h+var_48]^^^jz      short loc_4600B8^^^add     ebx, [rsp+48h+var_3C]^^^mov     eax, ebx^^^sub     eax, ebp^^^cmp     ebp, ebx^^^cmovbe  ebx, eax^^^mov     eax, ebx^^^lea     rcx, [r12+rax*4]^^^movzx   esi, word ptr [rcx]^^^test    si, si^^^jnz     short loc_460060^^^add     rsp, 18h^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movzx   eax, word ptr [rcx+2]^^^mov     [r15], rax^^^add     rsp, 18h^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
__open_nocancel$$$mov     eax, 2^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_dl_non_dynamic_init$$$push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 10h^^^rdtsc^^^shl     rdx, 20h^^^mov     eax, eax^^^or      rdx, rax^^^cmp     cs:_dl_pagesize, 0^^^mov     cs:_dl_cpuclock_offset, rdx^^^jnz     short loc_4113D2^^^call    getpagesize^^^cdqe^^^mov     cs:_dl_pagesize, rax^^^mov     edi, offset aLd_warn^^^mov     ebx, offset unk_49A0C9^^^call    getenv^^^test    rax, rax^^^mov     edi, offset aLd_library_pat^^^cmovz   rax, rbx^^^cmp     byte ptr [rax], 0^^^setnz   al^^^movzx   eax, al^^^mov     cs:_dl_verbose, eax^^^call    getenv^^^mov     rdi, rax^^^call    _dl_init_paths^^^mov     rax, cs:_dl_all_dirs^^^mov     edi, offset aLd_bind_now^^^mov     cs:_dl_init_all_dirs, rax^^^call    getenv^^^test    rax, rax^^^mov     edi, offset aLd_bind_not^^^cmovz   rax, rbx^^^cmp     byte ptr [rax], 0^^^setz    al^^^movzx   eax, al^^^mov     cs:_dl_lazy, eax^^^call    getenv^^^test    rax, rax^^^mov     edi, offset aLd_dynamic_wea^^^cmovz   rax, rbx^^^cmp     byte ptr [rax], 0^^^setnz   al^^^movzx   eax, al^^^mov     cs:_dl_bind_not, eax^^^call    getenv^^^test    rax, rax^^^mov     edi, offset aLd_profile_out^^^cmovz   rax, rbx^^^cmp     byte ptr [rax], 0^^^setz    al^^^movzx   eax, al^^^mov     cs:_dl_dynamic_weak, eax^^^call    getenv^^^test    rax, rax^^^mov     cs:_dl_profile_output, rax^^^jz      short loc_411496^^^cmp     byte ptr [rax], 0^^^jnz     loc_411650^^^mov     eax, cs:__libc_enable_secure^^^mov     edx, offset aVarTmp^^^mov     ecx, offset aVarProfile^^^test    eax, eax^^^cmovnz  rdx, rcx^^^mov     cs:_dl_profile_output, rdx^^^test    eax, eax^^^jz      short loc_4114F3^^^mov     ebx, offset unsecure_envvars_10813^^^nop     dword ptr [rax+00h]^^^mov     rdi, rbx^^^call    unsetenv^^^xor     esi, esi^^^mov     rdi, rbx^^^call    sub_400350^^^lea     rbx, [rax+1]^^^cmp     rbx, offset aLd_warn^^^jb      short loc_4114C0^^^xor     esi, esi^^^mov     edi, offset aEtcSuidDebug^^^call    access^^^test    eax, eax^^^jnz     loc_4116A8^^^mov     rax, cs:_dl_platform^^^test    rax, rax^^^jz      short loc_411508^^^cmp     byte ptr [rax], 0^^^jz      loc_411640^^^mov     edi, offset aLd_assume_kern^^^call    getenv^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4115D4^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, rsp^^^mov     rdi, rax^^^call    __strtoull_internal^^^cmp     rax, 0FEh^^^ja      loc_4115D4^^^mov     rdx, [rsp+28h+var_28]^^^cmp     rbx, rdx^^^jz      loc_4115D4^^^movzx   esi, byte ptr [rdx]^^^xor     r12d, r12d^^^xor     ecx, ecx^^^test    sil, sil^^^jz      loc_411660^^^cmp     sil, 2Eh^^^jnz     short loc_4115D4^^^lea     rbx, [rdx+1]^^^mov     r12, rax^^^xor     edx, edx^^^mov     rsi, rsp^^^shl     r12, 10h^^^mov     rdi, rbx^^^call    __strtoull_internal^^^cmp     rax, 0FEh^^^ja      short loc_4115D4^^^mov     rdx, [rsp+28h+var_28]^^^cmp     rbx, rdx^^^jz      short loc_4115D4^^^movzx   esi, byte ptr [rdx]^^^mov     ecx, 1^^^test    sil, sil^^^jz      loc_411660^^^cmp     sil, 2Eh^^^jnz     short loc_4115D4^^^lea     rbx, [rdx+1]^^^mov     rbp, rax^^^xor     cl, cl^^^shl     rbp, 8^^^xor     edx, edx^^^mov     rsi, rsp^^^mov     rdi, rbx^^^or      rbp, r12^^^call    __strtoull_internal^^^cmp     rax, 0FEh^^^ja      short loc_4115D4^^^cmp     [rsp+28h+var_28], rbx^^^jz      short loc_4115D4^^^or      rbp, rax^^^test    rbp, rbp^^^jnz     loc_41167C^^^mov     rdi, cs:_dl_platform^^^test    rdi, rdi^^^jz      short loc_4115EC^^^call    strlen^^^mov     cs:_dl_platformlen, rax^^^mov     rcx, cs:_dl_phdr^^^test    rcx, rcx^^^jz      short loc_411631^^^mov     rsi, cs:_dl_phnum^^^test    rsi, rsi^^^jz      short loc_411631^^^xor     edx, edx^^^cmp     dword ptr [rcx], 6474E551h^^^lea     rax, [rcx+38h]^^^jnz     short loc_411628^^^jmp     short loc_411690^^^mov     rcx, rax^^^add     rax, 38h^^^cmp     dword ptr [rax-38h], 6474E551h^^^jz      short loc_411690^^^add     rdx, 1^^^cmp     rdx, rsi^^^jnz     short loc_411618^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     cs:_dl_platform, 0^^^jmp     loc_411508^^^mov     eax, cs:__libc_enable_secure^^^jmp     loc_4114B3^^^neg     ecx^^^mov     edx, 10h^^^mov     rbp, rax^^^lea     ecx, [rdx+rcx*8]^^^shl     rbp, cl^^^or      rbp, r12^^^test    rbp, rbp^^^jz      loc_4115D4^^^mov     cs:_dl_osversion, ebp^^^jmp     loc_4115D4^^^mov     eax, [rcx+4]^^^mov     cs:_dl_stack_flags, eax^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     edi, offset unk_499A47^^^call    unsetenv^^^jmp     loc_4114F3^^^
__chk_fail$$$sub     rsp, 8^^^mov     edi, offset aBufferOverflow^^^call    __fortify_fail^^^
_L_unlock_1086$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_402F8B^^^
__libc_fatal$$$push    rbx^^^mov     rbx, rdi^^^nop     dword ptr [rax+00h]^^^mov     rdx, rbx^^^mov     esi, (offset aSSSS+8)^^^mov     edi, 1^^^xor     eax, eax^^^call    __libc_message^^^jmp     short loc_402548^^^
malloc_usable_size$$$xor     eax, eax        ^^^test    rdi, rdi^^^jz      short locret_409161^^^mov     rdx, [rdi-8]^^^test    dl, 2^^^jnz     short loc_409168^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^test    byte ptr [rdi+rdx-8], 1^^^lea     rcx, [rdx-8]^^^cmovnz  rax, rcx^^^rep retn^^^mov     rax, rdx^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^sub     rax, 10h^^^retn^^^
_L_unlock_4380$$$lea     rdi, [r13+0]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_404980^^^
malloc_get_state$$$push    rbx             ^^^mov     edi, 8A8h^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_407C5A^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407A47^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_11031^^^jmp     short loc_407A54^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_11031^^^cmp     cs:global_max_fast, 0^^^mov     rdx, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_407A80^^^mov     edi, offset main_arena^^^call    malloc_consolidate_part_3^^^mov     rax, cs:qword_6C2138^^^jmp     short loc_407ABF^^^lea     rax, qword_6C2148[rdx*8]^^^add     rdx, 2^^^cmp     rdx, 0FCh^^^mov     [rax+18h], rax^^^mov     [rax+10h], rax^^^jnz     short loc_407A80^^^or      cs:dword_6C20E4, 1^^^mov     cs:global_max_fast, 80h^^^mov     eax, offset qword_6C2138^^^mov     cs:qword_6C2138, offset qword_6C2138^^^mov     [rbx+20h], rax^^^mov     qword ptr [rbx], 444C4541h^^^mov     rax, 0FFFFFFFFFFFFFFFEh^^^mov     qword ptr [rbx+8], 4^^^mov     qword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+28h], 0^^^jmp     short loc_407B12^^^mov     rdx, [rdx+18h]^^^mov     [rbx+rax*8+40h], rcx^^^mov     [rbx+rax*8+48h], rdx^^^add     rax, 2^^^cmp     rax, 0FCh^^^jz      short loc_407B48^^^lea     rdx, qword_6C2148[rax*8]^^^mov     rcx, [rdx+10h]^^^cmp     rcx, rdx^^^jnz     short loc_407AF8^^^mov     qword ptr [rbx+rax*8+48h], 0^^^mov     qword ptr [rbx+rax*8+40h], 0^^^add     rax, 2^^^cmp     rax, 0FCh^^^jnz     short loc_407B12^^^nop     dword ptr [rax+00000000h]^^^mov     rax, cs:qword_6C29D0^^^mov     [rbx+820h], rax^^^mov     rax, cs:qword_6C2958^^^mov     [rbx+828h], eax^^^mov     rax, cs:mp_^^^mov     [rbx+830h], rax^^^mov     rax, cs:qword_6C2988^^^mov     [rbx+838h], rax^^^mov     eax, cs:dword_6C29AC^^^mov     [rbx+840h], eax^^^mov     rax, cs:qword_6C2990^^^mov     [rbx+848h], rax^^^mov     eax, cs:check_action^^^mov     [rbx+850h], eax^^^mov     rax, cs:qword_6C2960^^^mov     qword ptr [rbx+860h], 0^^^mov     [rbx+858h], rax^^^mov     eax, cs:dword_6C29A8^^^mov     [rbx+868h], eax^^^mov     eax, cs:dword_6C29B0^^^mov     [rbx+86Ch], eax^^^mov     rax, cs:qword_6C29B8^^^mov     [rbx+870h], rax^^^mov     rax, cs:qword_6C29C0^^^mov     [rbx+878h], rax^^^mov     eax, cs:using_malloc_checking^^^mov     [rbx+880h], eax^^^mov     rax, cs:global_max_fast^^^mov     [rbx+888h], rax^^^mov     rax, cs:qword_6C2998^^^mov     [rbx+890h], rax^^^mov     rax, cs:qword_6C29A0^^^mov     [rbx+898h], rax^^^mov     rax, cs:narenas^^^mov     [rbx+8A0h], rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407C4E^^^lock dec cs:main_arena^^^jnz     _L_unlock_11152^^^jmp     short loc_407C5A^^^dec     cs:main_arena^^^jnz     _L_unlock_11152^^^mov     rax, rbx^^^pop     rbx^^^retn^^^
__register_frame$$$push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^test    eax, eax^^^jnz     short loc_4944E0^^^pop     rbx^^^retn^^^mov     edi, 30h^^^call    malloc^^^mov     rdi, rbx^^^mov     rsi, rax^^^pop     rbx^^^jmp     __register_frame_info^^^
call_gmon_start$$$sub     rsp, 8^^^mov     rax, cs:qword_6C1FD8^^^test    rax, rax^^^jz      short loc_401096^^^call    rax ^^^add     rsp, 8^^^retn^^^
do_sym$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^mov     r14, rcx^^^push    r13^^^mov     r13, rdx^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 98h^^^mov     rax, cs:_dl_nns^^^mov     [rbp+var_A8], rsi^^^mov     [rbp+var_AC], r8d^^^mov     [rbp+var_60], 0^^^mov     r12, cs:_dl_ns^^^test    rax, rax^^^jz      loc_4900B7^^^mov     [rbp+var_98], 0^^^mov     [rbp+var_A0], 0^^^mov     rdx, [rbp+var_98]^^^mov     r15, ds:_dl_ns[rdx]^^^test    r15, r15^^^jz      short loc_49009B^^^nop     dword ptr [rax+rax+00h]^^^cmp     r13, [r15+340h]^^^jb      short loc_49008B^^^cmp     r13, [r15+348h]^^^jnb     short loc_49008B^^^test    byte ptr [r15+315h], 40h^^^jnz     loc_490140^^^mov     rsi, r13^^^mov     rdi, r15^^^call    _dl_addr_inside_object^^^test    eax, eax^^^jnz     loc_490140^^^mov     r15, [r15+18h]^^^test    r15, r15^^^jnz     short loc_490058^^^mov     rax, cs:_dl_nns^^^add     [rbp+var_A0], 1^^^add     [rbp+var_98], 90h^^^cmp     [rbp+var_A0], rax^^^jb      short loc_490040^^^test    rbx, rbx^^^jz      loc_4901A8^^^cmp     rbx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_490150^^^mov     edx, [rbp+var_AC]^^^mov     rdi, [rbp+var_A8]^^^lea     rcx, [rbx+388h]^^^xor     r9d, r9d^^^mov     r8, r14^^^mov     rsi, rbx^^^mov     [rsp+0C0h+var_B8], 0^^^mov     [rsp+0C0h+var_C0], edx^^^lea     rdx, [rbp+var_60]^^^call    _dl_lookup_symbol_x^^^mov     rdx, [rbp+var_60]^^^test    rdx, rdx^^^jz      loc_4901D3^^^xor     ecx, ecx^^^test    rax, rax^^^jz      short loc_490113^^^mov     rcx, [rax]^^^mov     rax, rcx^^^add     rax, [rdx+8]^^^movzx   edx, byte ptr [rdx+4]^^^and     edx, 0Fh^^^cmp     edx, 0Ah^^^jz      loc_490279^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rax, cs:_dl_nns^^^mov     r12, r15^^^jmp     loc_49009B^^^cmp     r12, cs:_dl_ns^^^jz      loc_490280^^^mov     rcx, r12^^^jmp     short loc_49016B^^^mov     rcx, rax^^^mov     rax, [rcx+2D8h]^^^test    rax, rax^^^jnz     short loc_490168^^^add     rcx, 388h^^^mov     [rsp+0C0h+var_B8], r12^^^mov     [rsp+0C0h+var_C0], 0^^^mov     rdi, [rbp+var_A8]^^^lea     rdx, [rbp+var_60]^^^xor     r9d, r9d^^^mov     r8, r14^^^mov     rsi, r12^^^call    _dl_lookup_symbol_x^^^jmp     loc_4900FC^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     short loc_4901DA^^^mov     eax, [rbp+var_AC]^^^mov     rcx, [r12+380h]^^^mov     [rsp+0C0h+var_B8], 0^^^or      eax, 1^^^mov     [rsp+0C0h+var_C0], eax^^^jmp     short loc_49018A^^^xor     eax, eax^^^jmp     loc_49012A^^^mov     rax, [rbp+var_A8]^^^mov     [rbp+var_90], r12^^^mov     [rbp+var_80], r14^^^mov     [rbp+var_88], rax^^^mov     eax, [rbp+var_AC]^^^or      eax, 5^^^mov     [rbp+var_78], eax^^^lea     rax, [rbp+var_60]^^^mov     [rbp+var_68], rax^^^mov     dword ptr fs:1Ch, 1^^^lea     r8, [rbp+var_90]^^^lea     rdx, [rbp+var_31]^^^lea     rsi, [rbp+var_50]^^^lea     rdi, [rbp+var_40]^^^mov     ecx, offset call_dl_lookup^^^mov     [rbp+var_50], 0^^^call    _dl_catch_error^^^mov     ebx, eax^^^xor     eax, eax^^^xchg    eax, fs:1Ch^^^cmp     eax, 2^^^jnz     short loc_490264^^^mov     rdi, fs:10h^^^mov     edx, 1^^^add     rdi, 1Ch^^^mov     al, 0CAh^^^mov     esi, 81h^^^syscall^^^mov     r12, [rbp+var_50]^^^test    r12, r12^^^jnz     short loc_4902AD^^^mov     rax, [rbp+var_90]^^^jmp     loc_4900FC^^^call    rax^^^jmp     loc_49012A^^^test    r12, r12^^^jz      short loc_49029D^^^cmp     r13, [r12+340h]^^^jb      short loc_49029D^^^cmp     r13, [r12+348h]^^^jb      loc_49015D^^^mov     ecx, offset aRtld_nextUsedI^^^xor     edx, edx^^^xor     esi, esi^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     rdi, r12^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, r12^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0C0h+var_A8+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     r13, [rbp+var_40]^^^mov     r12, rax^^^mov     rdi, r13^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, r13^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0C0h+var_A8+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^cmp     [rbp+var_31], 0^^^mov     r13, rax^^^jz      short loc_490316^^^mov     rdi, [rbp+var_50]^^^call    free^^^mov     rcx, r12^^^xor     edx, edx^^^mov     rsi, r13^^^mov     edi, ebx^^^call    _dl_signal_error^^^
mmap_remap_check$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 98h^^^mov     rax, [rdi+0D8h]^^^mov     rsi, rsp^^^call    qword ptr [rax+90h]^^^test    eax, eax^^^jnz     short loc_429210^^^mov     eax, [rsp+0A8h+var_90]^^^and     eax, 0F000h^^^cmp     eax, 8000h^^^jz      short loc_429288^^^mov     rdi, [rbx+38h]^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^call    munmap^^^mov     esi, [rbx+0C0h]^^^mov     edx, offset _IO_wfile_jumps^^^mov     eax, offset _IO_file_jumps^^^mov     qword ptr [rbx+40h], 0^^^mov     qword ptr [rbx+38h], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+8], 0^^^test    esi, esi^^^mov     qword ptr [rbx+10h], 0^^^cmovg   rax, rdx^^^mov     [rbx+0D8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     [rax+140h], rdx^^^mov     eax, 1^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rbp, [rsp+0A8h+var_78]^^^test    rbp, rbp^^^jz      loc_429210^^^call    getpagesize^^^mov     rdi, [rbx+38h]^^^cdqe^^^mov     rcx, rax^^^lea     rdx, [rbp+rax-1]^^^neg     rcx^^^mov     rsi, rdi^^^and     rdx, rcx^^^not     rsi^^^add     rsi, [rbx+40h]^^^add     rsi, rax^^^and     rsi, rcx^^^cmp     rdx, rsi^^^jb      short loc_429340^^^ja      loc_429360^^^add     rbp, rdi^^^mov     [rbx+40h], rbp^^^mov     rax, [rbx+8]^^^sub     rax, [rbx+10h]^^^mov     rsi, rbp^^^add     rax, [rbx+90h]^^^sub     rsi, rdi^^^mov     [rbx+18h], rdi^^^cmp     rax, rsi^^^mov     [rbx+90h], rax^^^jge     short loc_429328^^^add     rax, rdi^^^mov     edi, [rbx+70h]^^^xor     edx, edx^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rbp^^^call    lseek64^^^mov     rdx, [rbx+40h]^^^sub     rdx, [rbx+38h]^^^cmp     rax, rdx^^^jz      short loc_429390^^^or      dword ptr [rbx], 20h^^^xor     eax, eax^^^jmp     loc_429278^^^mov     [rbx+8], rbp^^^mov     [rbx+10h], rbp^^^xor     eax, eax^^^jmp     loc_429278^^^add     rdi, rdx^^^sub     rsi, rdx^^^call    munmap^^^mov     rdi, [rbx+38h]^^^mov     rbp, rdi^^^add     rbp, [rsp+0A8h+var_78]^^^mov     [rbx+40h], rbp^^^jmp     loc_4292D1^^^xor     eax, eax^^^mov     ecx, 1^^^call    mremap^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, rax^^^jz      loc_429210^^^mov     rbp, rax^^^add     rbp, [rsp+0A8h+var_78]^^^mov     [rbx+38h], rax^^^mov     [rbx+40h], rbp^^^jmp     loc_4292D1^^^mov     [rbx+90h], rax^^^xor     eax, eax^^^jmp     loc_429278^^^
handle_intel$$$push    r15^^^xor     eax, eax^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     ebp, edi^^^push    rbx^^^sub     rsp, 18h^^^cmp     esi, 1^^^jbe     loc_40EEF0^^^mov     [rsp+48h+var_3A], 0^^^mov     [rsp+48h+var_39], 0^^^mov     r12d, 1^^^mov     r15d, 1^^^mov     eax, 2^^^cpuid^^^cmp     r12d, 1^^^mov     r14d, edx^^^mov     r13d, ecx^^^jz      short loc_40EEC0^^^lea     rcx, [rsp+48h+var_3A]^^^lea     rdx, [rsp+48h+var_39]^^^mov     esi, eax^^^mov     edi, ebp^^^call    intel_check_word^^^test    rax, rax^^^jnz     loc_40EEF0^^^lea     rcx, [rsp+48h+var_3A]^^^lea     rdx, [rsp+48h+var_39]^^^mov     esi, ebx^^^mov     edi, ebp^^^call    intel_check_word^^^test    rax, rax^^^jnz     short loc_40EEF0^^^lea     rcx, [rsp+48h+var_3A]^^^lea     rdx, [rsp+48h+var_39]^^^mov     esi, r13d^^^mov     edi, ebp^^^call    intel_check_word^^^test    rax, rax^^^jnz     short loc_40EEF0^^^lea     rcx, [rsp+48h+var_3A]^^^lea     rdx, [rsp+48h+var_39]^^^mov     esi, r14d^^^mov     edi, ebp^^^call    intel_check_word^^^test    rax, rax^^^jnz     short loc_40EEF0^^^cmp     r15d, r12d^^^lea     edx, [r12+1]^^^jbe     short loc_40EED0^^^mov     r12d, edx^^^jmp     loc_40EE31^^^movzx   r15d, al^^^xor     al, al^^^jmp     loc_40EE44^^^sub     ebp, 0BFh^^^cmp     ebp, 5^^^ja      short loc_40EEF0^^^cmp     [rsp+48h+var_3A], 0^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^cmovnz  rax, rdx^^^nop     dword ptr [rax+rax+00h]^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
sub_41C3EE$$$mov     dword ptr [rbp-5B8h], 8^^^
buffered_vfprintf$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 2148h^^^mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jnz     loc_41A8A0^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^lea     rax, [rsp+2148h+var_2148]^^^mov     [rsp+2148h+var_68], rbx^^^mov     [rsp+2148h+var_88], 0FFFFFFFFh^^^mov     [rsp+2148h+var_148], 0FBAD8004h^^^mov     [rsp+2148h+var_C0], 0^^^xor     r12d, r12d^^^mov     [rsp+2148h+var_120], rax^^^mov     [rsp+2148h+var_128], rax^^^mov     rdi, rax^^^mov     eax, [rbx+74h]^^^add     rdi, 2000h^^^mov     [rsp+2148h+var_70], offset _IO_helper_jumps^^^mov     [rsp+2148h+var_118], rdi^^^mov     [rsp+2148h+var_D4], eax^^^call    vfprintf^^^mov     ebp, eax^^^mov     eax, 0^^^test    rax, rax^^^setnz   r12b^^^jnz     loc_41A8C8^^^mov     [rsp+2148h+var_48], offset funlockfile^^^mov     [rsp+2148h+var_40], rbx^^^mov     eax, [rbx]^^^and     eax, 8000h^^^jnz     short loc_41A7FD^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_41A7F9^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41A7E5^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_189^^^jmp     short loc_41A7EE^^^cmpxchg [rdx], esi^^^jnz     _L_lock_189^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     rsi, [rsp+2148h+var_128]^^^mov     r13, [rsp+2148h+var_120]^^^sub     r13d, esi^^^test    r13d, r13d^^^jle     short loc_41A830^^^mov     rax, [rbx+0D8h]^^^movsxd  rdx, r13d^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^cmp     r13d, eax^^^mov     eax, 0FFFFFFFFh^^^cmovnz  ebp, eax^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_41A86F^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_41A86F^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41A867^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_238^^^jmp     short loc_41A86F^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_238^^^test    r12d, r12d^^^jnz     short loc_41A8B0^^^mov     eax, ebp^^^mov     rbx, [rsp+2148h+var_20]^^^mov     rbp, [rsp+2148h+var_18]^^^mov     r12, [rsp+2148h+var_10]^^^mov     r13, [rsp+2148h+var_8]^^^add     rsp, 2148h^^^retn^^^mov     ebp, 0FFFFFFFFh^^^cmp     eax, ebp^^^jz      loc_41A716^^^jmp     short loc_41A874^^^lea     rdi, [rsp+2148h+var_48]^^^xor     esi, esi^^^call    near ptr 0^^^jmp     short loc_41A874^^^lea     rdi, [rsp+2148h+var_48]^^^mov     rdx, rbx^^^mov     esi, offset funlockfile^^^call    near ptr 0^^^jmp     loc_41A7AC^^^
_L_lock_4807$$$lea     rdi, [r13+0]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_404BF4^^^
fini$$$mov     edi, offset last_result^^^jmp     check_free^^^
__gconv_release_step$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^mov     rbx, rdi^^^sub     rsp, 18h^^^mov     rdi, [rdi]^^^test    rdi, rdi^^^jz      short loc_457DD0^^^mov     eax, [rbx+10h]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rbx+10h], eax^^^jnz     short loc_457DB8^^^mov     rbp, [rbx+40h]^^^test    rbp, rbp^^^jz      short loc_457DAC^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^mov     rdi, rbx^^^call    rbp^^^mov     rdi, [rbx]^^^call    __gconv_release_shlib^^^mov     qword ptr [rbx], 0^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^cmp     qword ptr [rbx+40h], 0^^^jz      short loc_457DB8^^^mov     ecx, offset __PRETTY_FUNCTION___11110^^^mov     edx, 0EAh^^^mov     esi, offset aGconv_db_c^^^mov     edi, offset aStep__end_fctV^^^call    __assert_fail^^^
register_printf_specifier$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 28h^^^cmp     edi, 0FFh^^^mov     ebx, edi^^^mov     rbp, rsi^^^ja      loc_422A28^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42297F^^^lock cmpxchg cs:lock_2, esi^^^jnz     _L_lock_23^^^jmp     short loc_42298C^^^cmpxchg cs:lock_2, esi^^^jnz     _L_lock_23^^^mov     rax, cs:__printf_function_table^^^test    rax, rax^^^jz      short loc_4229E8^^^movsxd  rbx, ebx^^^xor     esi, esi^^^mov     [rax+rbx*8], rbp^^^mov     rax, cs:__printf_arginfo_table^^^mov     [rax+rbx*8], rdx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4229C4^^^lock dec cs:lock_2^^^jnz     _L_unlock_44^^^jmp     short loc_4229D0^^^dec     cs:lock_2^^^jnz     _L_unlock_44^^^mov     eax, esi^^^mov     rbx, [rsp+28h+var_10]^^^mov     rbp, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     esi, 10h^^^mov     edi, 100h^^^mov     [rsp+28h+var_20], rdx^^^call    calloc^^^test    rax, rax^^^mov     cs:__printf_arginfo_table, rax^^^mov     esi, 0FFFFFFFFh^^^mov     rdx, [rsp+28h+var_20]^^^jz      short loc_4229AC^^^add     rax, 800h^^^mov     cs:__printf_function_table, rax^^^jmp     loc_422998^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     short loc_4229D0^^^
malloc_check$$$cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^push    rbx^^^mov     rbx, rdi^^^jz      loc_406500^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40643E^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_8486^^^jmp     short loc_40644B^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_8486^^^call    top_check^^^xor     edx, edx^^^test    eax, eax^^^js      short loc_406467^^^lea     rsi, [rbx+1]^^^mov     edi, offset main_arena^^^call    _int_malloc^^^mov     rdx, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40647F^^^lock dec cs:main_arena^^^jnz     _L_unlock_8502^^^jmp     short loc_40648B^^^dec     cs:main_arena^^^jnz     _L_unlock_8502^^^test    rdx, rdx^^^jz      short loc_4064F6^^^mov     rcx, [rdx-8]^^^lea     rsi, [rdx-10h]^^^mov     rax, rcx^^^and     ecx, 2^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rcx, 1^^^sbb     rcx, rcx^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^add     rcx, 11h^^^sub     rax, rcx^^^cmp     rbx, rax^^^jb      short loc_4064CF^^^jmp     short loc_4064E5^^^mov     byte ptr [rdx+rax], 0FFh^^^sub     rax, 0FFh^^^cmp     rbx, rax^^^jnb     short loc_4064E5^^^mov     rcx, rax^^^sub     rcx, rbx^^^cmp     rcx, 0FFh^^^ja      short loc_4064C0^^^mov     ecx, eax^^^sub     cl, bl^^^mov     [rdx+rax], cl^^^mov     rax, rsi^^^shr     rsi, 3^^^shr     rax, 0Bh^^^xor     esi, eax^^^mov     [rdx+rbx], sil^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     edx, edx^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     short loc_4064F6^^^
sub_40EADB$$$mov     eax, 20h^^^pop     rbx^^^retn^^^
__gconv$$$push    r15^^^mov     r15, rcx^^^push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 38h^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+68h+var_50], r9^^^jz      loc_457B68^^^test    r9, r9^^^mov     rax, [rdi]^^^jz      loc_457C1D^^^mov     rdx, [rsp+68h+var_50]^^^mov     qword ptr [rdx], 0^^^xor     edx, edx^^^test    rcx, rcx^^^jz      short loc_457A6B^^^mov     rdx, [rcx]^^^sub     rax, 1^^^mov     rcx, rax^^^mov     [rsp+68h+var_48], rax^^^shl     rax, 6^^^shl     rcx, 3^^^sub     rax, rcx^^^add     rax, rbx^^^mov     [rax+10h], rdx^^^mov     [rax+18h], r8^^^mov     rax, [rbx+8]^^^cmp     qword ptr [rax], 0^^^mov     r12, [rax+28h]^^^jz      short loc_457AA8^^^ror     r12, 11h^^^xor     r12, fs:30h^^^test    rbp, rbp^^^jz      loc_457B80^^^mov     r13, [rbp+0]^^^test    r13, r13^^^jz      loc_457B80^^^test    r15, r15^^^jz      loc_457C04^^^cmp     qword ptr [r15], 0^^^jz      loc_457C04^^^lea     rax, [rbx+10h]^^^mov     [rsp+68h+var_40], rax^^^jmp     short loc_457AE3^^^mov     r13, rdx^^^mov     rdi, r12^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rdi, [rbx+8]^^^mov     [rsp+68h+var_60], 0^^^mov     [rsp+68h+var_68], 0^^^mov     r9, [rsp+68h+var_50]^^^mov     rcx, r14^^^mov     rdx, rbp^^^mov     rsi, [rsp+68h+var_40]^^^call    r12^^^cmp     eax, 4^^^jnz     short loc_457B32^^^mov     rdx, [rbp+0]^^^cmp     r13, rdx^^^jz      short loc_457B32^^^mov     rcx, [rbx+8]^^^movsxd  rcx, dword ptr [rcx+48h]^^^add     rcx, rdx^^^cmp     r14, rcx^^^jnb     short loc_457AE0^^^cmp     qword ptr [r15], 0^^^jz      short loc_457B55^^^mov     rcx, [rsp+68h+var_48]^^^mov     rdx, [rsp+68h+var_48]^^^shl     rcx, 3^^^shl     rdx, 6^^^sub     rdx, rcx^^^mov     rdx, [rbx+rdx+10h]^^^mov     [r15], rdx^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^add     rsp, 38h^^^mov     eax, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdi, r12^^^call    _dl_mcount_wrapper_check^^^mov     rdx, [rsp+68h+var_48]^^^mov     rax, [rsp+68h+var_48]^^^lea     rsi, [rbx+10h]^^^mov     rdi, [rbx+8]^^^mov     r9, [rsp+68h+var_50]^^^shl     rdx, 3^^^shl     rax, 6^^^sub     rax, rdx^^^add     rax, rbx^^^cmp     qword ptr [rax+10h], 1^^^mov     [rsp+68h+var_60], 0^^^sbb     eax, eax^^^xor     r8d, r8d^^^xor     ecx, ecx^^^not     eax^^^xor     edx, edx^^^add     eax, 2^^^mov     [rsp+68h+var_68], eax^^^call    r12^^^test    eax, eax^^^jnz     short loc_457BF6^^^mov     rcx, rbx^^^xor     edx, edx^^^nop     word ptr [rax+rax+00000000h]^^^mov     dword ptr [rcx+24h], 0^^^add     rdx, 1^^^add     rcx, 38h^^^cmp     [rsp+68h+var_48], rdx^^^jnb     short loc_457BE0^^^test    r15, r15^^^jnz     loc_457B32^^^jmp     loc_457B55^^^mov     ecx, offset __PRETTY_FUNCTION___10926^^^mov     edx, 4Bh^^^mov     esi, offset aGconv_c^^^mov     edi, offset aOutbufVoid0Out^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10926^^^mov     edx, 2Dh^^^mov     esi, offset aGconv_c^^^mov     edi, offset aIrreversibleVo^^^call    __assert_fail^^^
sub_41F50F$$$mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_41F58B^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rbp-548h], rax^^^jmp     loc_41EA5D^^^cmp     byte ptr [rbp-558h], 53h^^^jz      loc_41EC6C^^^cmp     dword ptr [rbp-590h], 0^^^jnz     loc_41EC6C^^^cmp     dword ptr [rbp-5A0h], 0FFFFFFFFh^^^jz      loc_41EC4E^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^cmp     dword ptr [rax+0A8h], 1^^^jnz     loc_41ECFB^^^movsxd  rsi, dword ptr [rbp-5A0h]^^^mov     rdi, [rbp-548h]^^^call    sub_400330^^^xor     r9d, r9d^^^mov     r8, rax^^^cmp     qword ptr [rbp-548h], 0^^^jnz     loc_41E4D2^^^xor     r9d, r9d^^^cmp     dword ptr [rbp-5A0h], 5^^^jg      short loc_41EA84^^^cmp     dword ptr [rbp-5A0h], 0FFFFFFFFh^^^jnz     loc_41EB8C^^^mov     r8d, 6^^^mov     qword ptr [rbp-548h], offset null^^^jmp     loc_41E52D^^^mov     rdi, [rbp-548h]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^xor     r9d, r9d^^^repne scasb^^^not     rcx^^^lea     r8, [rcx-1]^^^jmp     loc_41E52D^^^cmp     dword ptr [rbp-5A0h], 0^^^mov     rdi, [rbp-548h]^^^mov     qword ptr [rbp-80h], 0^^^mov     [rbp-0A0h], rdi^^^js      loc_41EEE4^^^movsxd  rdx, dword ptr [rbp-5A0h]^^^cmp     rdx, 1000h^^^ja      loc_41EE91^^^lea     rax, [rdx+1Eh]^^^xor     r9d, r9d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+arg_7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp-548h], rdi^^^mov     rdi, [rbp-548h]^^^lea     rcx, [rbp-80h]^^^lea     rsi, [rbp-0A0h]^^^mov     [rbp-648h], r9d^^^call    wcsrtombs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8, rax^^^mov     r9d, [rbp-648h]^^^jnz     loc_41E52D^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5A0h], 400h^^^mov     eax, 400h^^^mov     [rbp-5B8h], rsp^^^cmovbe  eax, [rbp-5A0h]^^^mov     rdi, [rbp-548h]^^^mov     qword ptr [rbp-90h], 0^^^mov     [rbp-0A0h], rdi^^^cdqe^^^mov     [rbp-5D8h], rax^^^lea     rax, ds:1Eh[rax*4]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^movsxd  rax, dword ptr [rbp-5A0h]^^^lea     r8, [rsp+arg_7]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^add     rax, rdi^^^mov     [rbp-590h], r8^^^mov     [rbp-558h], rax^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^cmovnb  rax, [rbp-558h]^^^mov     [rbp-558h], rax^^^jmp     short loc_41EDBC^^^test    r8, r8^^^jz      short loc_41EDCC^^^mov     rdx, [rbp-558h]^^^mov     rcx, [rbp-5D8h]^^^lea     rsi, [rbp-0A0h]^^^mov     rdi, [rbp-590h]^^^sub     rdx, r8^^^lea     r8, [rbp-90h]^^^call    mbsnrtowcs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_41EE74^^^mov     r8, [rbp-0A0h]^^^cmp     [rbp-558h], r8^^^ja      short loc_41ED82^^^test    r8, r8^^^jz      loc_41EF87^^^movsxd  rax, dword ptr [rbp-90h]^^^sub     r8, [rbp-548h]^^^and     eax, 7^^^sub     r8, rax^^^xor     r9d, r9d^^^mov     rsp, [rbp-5B8h]^^^jmp     loc_41E52D^^^mov     r14d, eax^^^mov     rsp, [rbp-5B8h]^^^jmp     loc_41ACB3^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^jnz     loc_41ECA3^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^call    malloc^^^test    rax, rax^^^mov     [rbp-548h], rax^^^mov     r9d, 1^^^mov     rdx, [rbp-658h]^^^jnz     loc_41ECC1^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^lea     rsi, [rbp-0A0h]^^^lea     rcx, [rbp-80h]^^^xor     edx, edx^^^xor     edi, edi^^^mov     [rbp-610h], rsi^^^call    wcsrtombs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8, rax^^^jz      loc_41F02A^^^cmp     dword ptr [rbp-80h], 0^^^jnz     loc_41F011^^^mov     rdi, [rbp-548h]^^^lea     rdx, [rax+1]^^^cmp     rdx, 1000h^^^mov     [rbp-0A0h], rdi^^^ja      short loc_41EFA2^^^lea     rax, [rdx+1Eh]^^^xor     r9d, r9d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+arg_7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp-548h], rdi^^^mov     rsi, [rbp-610h]^^^mov     rdi, [rbp-548h]^^^lea     rcx, [rbp-80h]^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^call    wcsrtombs^^^mov     r8, [rbp-660h]^^^mov     r9d, [rbp-648h]^^^jmp     loc_41E52D^^^mov     rdi, [rbp-548h]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^repne scasb^^^not     rcx^^^lea     r8, [rcx-1]^^^jmp     loc_41EDE9^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], rax^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^mov     r8, [rbp-660h]^^^jnz     loc_41EF31^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], r8^^^call    malloc^^^test    rax, rax^^^mov     [rbp-548h], rax^^^mov     r9d, 1^^^mov     rdx, [rbp-658h]^^^mov     r8, [rbp-660h]^^^jnz     loc_41EF4F^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 65Eh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aMbstate__count^^^call    __assert_fail^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F526^^^
_L_unlock_4258$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_458CC9^^^
_IO_cleanup$$$push    r15^^^xor     edi, edi^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^call    _IO_flush_all_lockp^^^mov     rbx, cs:_IO_list_all^^^mov     r12d, eax^^^test    rbx, rbx^^^jz      loc_42CAF7^^^mov     rbp, fs:10h^^^nop     dword ptr [rax+00000000h]^^^mov     eax, [rbx]^^^mov     r14d, eax^^^and     r14d, 2^^^jnz     loc_42CAE0^^^and     eax, 1008h^^^cmp     eax, 8^^^jz      loc_42CAE0^^^mov     esi, [rbx+0C0h]^^^test    esi, esi^^^jz      loc_42CAE0^^^mov     rdx, [rbx+88h]^^^xor     r13d, r13d^^^test    rdx, rdx^^^jz      short loc_42CAB2^^^cmp     rbp, [rdx+8]^^^jz      loc_42CC10^^^mov     r15d, 1^^^mov     eax, r14d^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CA95^^^lock cmpxchg [rdx], r15d^^^jmp     short loc_42CA99^^^cmpxchg [rdx], r15d^^^test    eax, eax^^^jnz     short loc_42CB10^^^mov     rax, [rbx+88h]^^^mov     [rax+8], rbp^^^mov     dword ptr [rax+4], 1^^^xor     r13d, r13d^^^cmp     cs:dealloc_buffers, 0^^^jnz     short loc_42CAC5^^^mov     eax, [rbx]^^^test    al, 1^^^jz      loc_42CB80^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^call    qword ptr [rax+58h]^^^cmp     r13d, 2^^^jnz     loc_42CBC0^^^mov     dword ptr [rbx+0C0h], 0FFFFFFFFh^^^mov     rbx, [rbx+68h]^^^test    rbx, rbx^^^jnz     loc_42CA38^^^add     rsp, 8^^^mov     eax, r12d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^call    sched_yield^^^mov     rdx, [rbx+88h]^^^mov     r13d, 1^^^test    rdx, rdx^^^jz      short loc_42CAB2^^^cmp     rbp, [rdx+8]^^^jz      loc_42CC20^^^mov     eax, r14d^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CB44^^^lock cmpxchg [rdx], r15d^^^jmp     short loc_42CB48^^^cmpxchg [rdx], r15d^^^test    eax, eax^^^jnz     short loc_42CB70^^^mov     rax, [rbx+88h]^^^mov     [rax+8], rbp^^^mov     dword ptr [rax+4], 1^^^mov     r13d, 1^^^jmp     loc_42CAB2^^^call    sched_yield^^^mov     r13d, 2^^^jmp     loc_42CAB2^^^or      eax, 1^^^mov     rdx, [rbx+38h]^^^mov     [rbx], eax^^^mov     rax, cs:freeres_list^^^mov     cs:freeres_list, rbx^^^mov     [rbx+0B0h], rdx^^^mov     [rbx+0A8h], rax^^^mov     rax, [rbx+40h]^^^sub     rax, rdx^^^mov     [rbx+0B8h], rax^^^jmp     loc_42CAC5^^^mov     rdx, [rbx+88h]^^^test    rdx, rdx^^^jz      loc_42CAE0^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     loc_42CAE0^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CBFD^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_3203^^^jmp     short loc_42CC05^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_3203^^^jmp     loc_42CAE0^^^add     dword ptr [rdx+4], 1^^^jmp     loc_42CAAF^^^add     dword ptr [rdx+4], 1^^^jmp     loc_42CB5E^^^
_Unwind_DeleteException$$$mov     rax, [rdi+8]^^^test    rax, rax^^^jz      short locret_492D08^^^mov     rsi, rdi^^^mov     edi, 1^^^jmp     rax^^^rep retn^^^
_dl_call_pltexit$$$rep retn^^^
_IO_init$$$mov     rax, [rdi+88h]^^^or      esi, 0FBAD0000h^^^mov     dword ptr [rdi+74h], 0^^^mov     [rdi], esi^^^mov     qword ptr [rdi+38h], 0^^^mov     qword ptr [rdi+40h], 0^^^mov     qword ptr [rdi+18h], 0^^^test    rax, rax^^^mov     qword ptr [rdi+8], 0^^^mov     qword ptr [rdi+10h], 0^^^mov     qword ptr [rdi+20h], 0^^^mov     qword ptr [rdi+28h], 0^^^mov     qword ptr [rdi+30h], 0^^^mov     qword ptr [rdi+68h], 0^^^mov     qword ptr [rdi+48h], 0^^^mov     qword ptr [rdi+50h], 0^^^mov     qword ptr [rdi+58h], 0^^^mov     qword ptr [rdi+60h], 0^^^mov     word ptr [rdi+80h], 0^^^jz      short loc_42C441^^^mov     dword ptr [rax], 0^^^mov     dword ptr [rax+4], 0^^^mov     qword ptr [rax+8], 0^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     qword ptr [rdi+0A8h], 0^^^retn^^^
_dl_scope_free$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^mov     rbx, rdi^^^sub     rsp, 18h^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     short loc_456A63^^^call    free^^^xor     eax, eax^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rbp, cs:_dl_scope_free_list^^^test    rbp, rbp^^^jz      short loc_456AC0^^^mov     rax, [rbp+0]^^^cmp     rax, 31h^^^ja      short loc_456A8A^^^mov     [rbp+rax*8+8], rdi^^^add     rax, 1^^^mov     [rbp+0], rax^^^xor     eax, eax^^^jmp     short loc_456A54^^^call    cs:_dl_wait_lookup_done^^^mov     rdx, [rbp+0]^^^mov     eax, 1^^^test    rdx, rdx^^^jz      short loc_456A54^^^sub     rdx, 1^^^mov     rdi, [rbp+rdx*8+8]^^^mov     [rbp+0], rdx^^^call    free^^^mov     rdx, [rbp+0]^^^test    rdx, rdx^^^jnz     short loc_456A9E^^^mov     eax, 1^^^jmp     short loc_456A54^^^mov     edi, 198h^^^call    malloc^^^test    rax, rax^^^mov     cs:_dl_scope_free_list, rax^^^jz      short loc_456AE8^^^mov     [rax+8], rbx^^^mov     qword ptr [rax], 1^^^xor     eax, eax^^^jmp     loc_456A54^^^call    cs:_dl_wait_lookup_done^^^mov     rdi, rbx^^^call    free^^^mov     eax, 1^^^jmp     loc_456A54^^^
flush_cleanup$$$mov     rax, cs:run_fp^^^test    rax, rax^^^jz      short loc_42B3CB^^^mov     edx, [rax]^^^and     dh, 80h^^^jnz     short loc_42B3CB^^^mov     rdx, [rax+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_42B3CB^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B3C3^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_24^^^jmp     short loc_42B3CB^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_24^^^mov     eax, cs:dword_6C5624^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C5624, eax^^^jnz     short locret_42B40D^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42B401^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_38_0^^^jmp     short locret_42B40D^^^dec     cs:list_all_lock^^^jnz     _L_unlock_38_0^^^rep retn^^^
__underflow$$$push    rbx^^^mov     eax, [rdi+0C0h]^^^mov     rbx, rdi^^^test    eax, eax^^^jnz     short loc_42BC00^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     eax, [rbx]^^^test    ah, 8^^^jnz     loc_42BC50^^^mov     rax, [rbx+8]^^^mov     rsi, [rbx+10h]^^^cmp     rax, rsi^^^jb      short loc_42BC48^^^mov     eax, [rbx]^^^test    ah, 1^^^jnz     short loc_42BC10^^^cmp     qword ptr [rbx+60h], 0^^^jz      loc_42BC68^^^mov     rdi, rbx^^^call    save_for_backup^^^test    eax, eax^^^jnz     short loc_42BC05^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+20h]^^^jmp     rax^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42BBB8^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     rcx, [rbx+58h]^^^mov     rdx, [rbx+48h]^^^and     ah, 0FEh^^^mov     [rbx+58h], rsi^^^mov     rsi, [rbx+18h]^^^mov     [rbx], eax^^^cmp     rcx, rdx^^^mov     [rbx+10h], rcx^^^mov     [rbx+18h], rdx^^^mov     [rbx+48h], rsi^^^mov     [rbx+8], rdx^^^mov     rsi, rcx^^^jbe     short loc_42BBD7^^^movzx   eax, byte ptr [rdx]^^^pop     rbx^^^retn^^^movzx   eax, byte ptr [rax]^^^pop     rbx^^^retn^^^mov     rdi, rbx^^^call    _IO_switch_to_get_mode^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_42BBC3^^^pop     rbx^^^retn^^^mov     rdi, [rbx+48h]^^^test    rdi, rdi^^^jz      loc_42BBEE^^^test    ah, 1^^^jz      short loc_42BC9E^^^and     ah, 0FEh^^^mov     [rbx+8], rdi^^^mov     [rbx], eax^^^mov     rax, [rbx+58h]^^^mov     [rbx+58h], rsi^^^mov     [rbx+10h], rax^^^mov     rax, [rbx+18h]^^^mov     [rbx+18h], rdi^^^mov     [rbx+48h], rax^^^mov     rdi, rax^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     qword ptr [rbx+58h], 0^^^mov     qword ptr [rbx+50h], 0^^^jmp     loc_42BBEE^^^
_flushlbf$$$push    r13^^^mov     eax, 0^^^xor     r13d, r13d^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^test    rax, rax^^^setnz   r13b^^^jnz     loc_42CE40^^^mov     [rsp+48h+var_48], offset flush_cleanup^^^mov     [rsp+48h+var_40], 0^^^mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C5628^^^jz      short loc_42CCB6^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CCA2^^^lock cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_3271^^^jmp     short loc_42CCAF^^^cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_3271^^^mov     cs:qword_6C5628, rdx^^^mov     eax, cs:dword_6C5624^^^mov     rbx, cs:_IO_list_all^^^mov     ebp, cs:_IO_list_all_stamp^^^add     eax, 1^^^test    rbx, rbx^^^mov     cs:dword_6C5624, eax^^^jz      loc_42CDCE^^^mov     r12, fs:10h^^^jmp     short loc_42CD02^^^mov     rbx, cs:_IO_list_all^^^mov     ebp, eax^^^test    rbx, rbx^^^jz      loc_42CDC8^^^mov     eax, [rbx]^^^mov     cs:run_fp, rbx^^^and     eax, 8000h^^^jnz     short loc_42CD51^^^mov     rdx, [rbx+88h]^^^cmp     r12, [rdx+8]^^^jz      short loc_42CD4D^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CD39^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_3335^^^jmp     short loc_42CD42^^^cmpxchg [rdx], esi^^^jnz     _L_lock_3335^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r12^^^add     dword ptr [rdx+4], 1^^^mov     eax, [rbx]^^^and     eax, 208h^^^cmp     eax, 200h^^^jz      loc_42CE28^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_42CDA2^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_42CDA2^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CD9A^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_3369^^^jmp     short loc_42CDA2^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_3369^^^mov     eax, cs:_IO_list_all_stamp^^^mov     cs:run_fp, 0^^^cmp     ebp, eax^^^jnz     loc_42CCF0^^^mov     rbx, [rbx+68h]^^^test    rbx, rbx^^^jnz     loc_42CD02^^^mov     eax, cs:dword_6C5624^^^sub     eax, 1^^^test    eax, eax^^^mov     cs:dword_6C5624, eax^^^jnz     short loc_42CE0A^^^mov     cs:qword_6C5628, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42CDFE^^^lock dec cs:list_all_lock^^^jnz     _L_unlock_3403^^^jmp     short loc_42CE0A^^^dec     cs:list_all_lock^^^jnz     _L_unlock_3403^^^test    r13d, r13d^^^jz      short loc_42CE19^^^xor     esi, esi^^^mov     rdi, rsp^^^call    near ptr 0^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rax, [rbx+0D8h]^^^mov     esi, 0FFFFFFFFh^^^mov     rdi, rbx^^^call    qword ptr [rax+18h]^^^jmp     loc_42CD63^^^xor     edx, edx^^^mov     esi, offset flush_cleanup^^^mov     rdi, rsp^^^call    near ptr 0^^^jmp     loc_42CC70^^^
_L_unlock_10661$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4077CE^^^
_L_unlock_1492$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_412BB4^^^
strtod$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^xor     edx, edx^^^mov     rcx, fs:[rax]^^^jmp     ____strtod_l_internal^^^
_IO_wfile_xsputn$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^xor     eax, eax^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     r12, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 38h^^^test    rdx, rdx^^^mov     rbx, rsi^^^mov     rbp, rdx^^^jz      short loc_428999^^^mov     edx, [r12]^^^mov     r13, [rdi+0A0h]^^^and     edx, 0A00h^^^mov     rax, [r13+28h]^^^mov     rdi, [r13+20h]^^^cmp     edx, 0A00h^^^jz      loc_428A90^^^sub     rax, rdi^^^xor     r15d, r15d^^^sar     rax, 2^^^test    rax, rax^^^mov     r14, rbp^^^jnz     short loc_4289C0^^^mov     rdx, r14^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    _IO_wdefault_xsputn^^^sub     r14, rax^^^test    r15d, r15d^^^jz      short loc_428993^^^mov     rax, [r12+0A0h]^^^mov     rdx, [rax+20h]^^^mov     rsi, [rax+18h]^^^cmp     rdx, rsi^^^jz      short loc_428993^^^sub     rdx, rsi^^^mov     rdi, r12^^^sar     rdx, 2^^^call    _IO_wdo_write^^^mov     rax, rbp^^^sub     rax, r14^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^cmp     rax, rbp^^^cmovbe  r14, rax^^^cmp     r14, 14h^^^ja      loc_428AE8^^^mov     esi, r14d^^^lea     ecx, [r14-1]^^^mov     r8d, r14d^^^shr     esi, 2^^^lea     r10d, ds:0[rsi*4]^^^test    r10d, r10d^^^jz      loc_428B08^^^lea     rax, [rbx+10h]^^^cmp     r14d, 0Bh^^^lea     r9, [rdi+10h]^^^setnbe  dl^^^cmp     rdi, rax^^^setnbe  al^^^cmp     rbx, r9^^^setnbe  r9b^^^or      eax, r9d^^^test    dl, al^^^jz      loc_428B08^^^xor     eax, eax^^^xor     edx, edx^^^nop     word ptr [rax+rax+00h]^^^movdqu  xmm0, xmmword ptr [rbx+rax]^^^add     edx, 1^^^movdqu  xmmword ptr [rdi+rax], xmm0^^^add     rax, 10h^^^cmp     esi, edx^^^ja      short loc_428A20^^^mov     r9d, r10d^^^sub     ecx, r10d^^^shl     r9, 2^^^lea     rsi, [rbx+r9]^^^add     r9, rdi^^^cmp     r8d, r10d^^^jz      short loc_428A5F^^^xor     eax, eax^^^nop     dword ptr [rax]^^^mov     edx, [rsi+rax*4]^^^mov     [r9+rax*4], edx^^^add     rax, 1^^^cmp     ecx, eax^^^jns     short loc_428A50^^^sub     r8d, 1^^^lea     rax, ds:4[r8*4]^^^add     rdi, rax^^^add     rbx, rax^^^mov     [r13+20h], rdi^^^mov     rax, rbp^^^sub     rax, r14^^^mov     r14, rax^^^jz      loc_42896A^^^jmp     loc_428959^^^mov     rax, [r13+38h]^^^xor     r15d, r15d^^^sub     rax, rdi^^^sar     rax, 2^^^cmp     rbp, rax^^^ja      loc_428951^^^lea     rdx, [rsi+rbp*4]^^^cmp     rsi, rdx^^^jnb     loc_428951^^^cmp     dword ptr [rdx-4], 0Ah^^^lea     r14, [rdx-4]^^^jz      short loc_428ACF^^^xchg    ax, ax^^^cmp     rbx, r14^^^jnb     short loc_428B00^^^sub     r14, 4^^^cmp     dword ptr [r14], 0Ah^^^jnz     short loc_428AC0^^^sub     r14, rbx^^^mov     r15d, 1^^^sar     r14, 2^^^lea     rax, [r14+1]^^^jmp     loc_428951^^^mov     rsi, rbx^^^mov     rdx, r14^^^lea     rbx, [rbx+r14*4]^^^call    wmempcpy^^^mov     [r13+20h], rax^^^jmp     loc_428A75^^^xor     r15d, r15d^^^jmp     loc_428951^^^mov     r9, rdi^^^mov     rsi, rbx^^^jmp     loc_428A4B^^^
uw_update_context_1$$$push    r15^^^mov     ecx, 1Eh^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 118h^^^mov     [rsp+148h+var_140], rsi^^^lea     rdi, [rsp+148h+var_138]^^^mov     rsi, r12^^^rep movsq^^^test    [rsp+148h+var_71], 40h^^^jz      short loc_491F28^^^cmp     [rsp+148h+var_59], 0^^^lea     rax, [rsp+148h+var_100]^^^jz      short loc_491F28^^^test    rax, rax^^^jz      loc_4921CF^^^test    byte ptr [r12+0C7h], 40h^^^jz      short loc_491EFF^^^mov     byte ptr [r12+0DFh], 0^^^mov     rdx, [rsp+148h+var_140]^^^mov     qword ptr [r12+38h], 0^^^mov     eax, [rdx+140h]^^^cmp     eax, 1^^^jz      short loc_491F30^^^cmp     eax, 2^^^jz      short loc_491F88^^^call    abort^^^mov     rax, [rsp+148h+var_100]^^^jmp     short loc_491EE2^^^mov     rdx, [rsp+148h+var_140]^^^mov     eax, [rdx+130h]^^^cmp     eax, 11h^^^jg      short loc_491F1D^^^test    [rsp+148h+var_71], 40h^^^lea     rdx, dwarf_reg_size_table^^^cdqe^^^mov     r14, [rsp+rax*8+148h+var_138]^^^movzx   edx, byte ptr [rdx+rax]^^^jz      short loc_491F78^^^cmp     [rsp+rax+148h+var_60], 0^^^jz      short loc_491F78^^^mov     rax, [rsp+148h+var_140]^^^add     r14, [rax+128h]^^^jmp     short loc_491FCC^^^cmp     dl, 8^^^jnz     short loc_491F1D^^^mov     r14, [r14]^^^jmp     short loc_491F66^^^mov     rdx, [rsp+148h+var_140]^^^xor     esi, esi^^^xor     ecx, ecx^^^mov     rdi, [rdx+138h]^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   edx, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_491FA0^^^lea     rdx, [rsp+148h+var_138]^^^add     rsi, rdi^^^xor     ecx, ecx^^^call    execute_stack_op^^^mov     r14, rax^^^mov     rbp, [rsp+148h+var_140]^^^lea     r13, off_4B3C04^^^mov     [r12+90h], r14^^^xor     ebx, ebx^^^mov     r15, 4000000000000000h^^^add     rbp, 8^^^cmp     dword ptr [rbp+0], 5^^^ja      short loc_492051^^^mov     eax, [rbp+0]^^^movsxd  rax, dword ptr [r13+rax*4+0]^^^add     rax, r13^^^jmp     rax             ^^^mov     rdi, [rbp-8]    ^^^xor     esi, esi^^^xor     ecx, ecx^^^movzx   edx, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_492010^^^lea     rdx, [rsp+148h+var_138]^^^add     rsi, rdi^^^mov     rcx, r14^^^call    execute_stack_op^^^test    [r12+0C0h], r15^^^jz      short loc_49204D^^^mov     byte ptr [r12+rbx+0D8h], 0^^^mov     [r12+rbx*8], rax^^^add     rbx, 1          ^^^add     rbp, 10h^^^cmp     rbx, 12h^^^jnz     short loc_491FF0^^^mov     rax, [rsp+148h+var_140]^^^cmp     byte ptr [rax+173h], 0^^^jnz     loc_4921B8^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^and     [r12+0C0h], rax^^^add     rsp, 118h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     rax, dwarf_reg_size_table^^^mov     rdx, [rbp-8]^^^cmp     byte ptr [rax+rbx], 8^^^jnz     loc_491F1D^^^add     rdx, r14^^^mov     byte ptr [r12+rbx+0D8h], 1^^^add     rbp, 10h^^^mov     [r12+rbx*8], rdx^^^add     rbx, 1^^^cmp     rbx, 12h^^^jnz     loc_491FF0^^^jmp     short loc_49205F^^^mov     edx, [rbp-8]    ^^^movsxd  rax, edx^^^cmp     [rsp+rax+148h+var_60], 0^^^jnz     loc_492180^^^test    [r12+0C0h], r15^^^mov     rax, [rsp+rax*8+148h+var_138]^^^jz      loc_49204D^^^jmp     loc_492044^^^mov     rax, r14        ^^^add     rax, [rbp-8]^^^test    [r12+0C0h], r15^^^jz      loc_49204D^^^jmp     loc_492044^^^mov     rdi, [rbp-8]    ^^^xor     esi, esi^^^xor     ecx, ecx^^^movzx   edx, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rdx^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rsi, rax^^^test    dl, dl^^^js      short loc_492130^^^lea     rdx, [rsp+148h+var_138]^^^add     rsi, rdi^^^mov     rcx, r14^^^call    execute_stack_op^^^lea     rdx, dwarf_reg_size_table^^^cmp     byte ptr [rdx+rbx], 8^^^jnz     loc_491F1D^^^mov     byte ptr [r12+rbx+0D8h], 1^^^jmp     loc_49204D^^^cmp     edx, 11h^^^jg      loc_491F1D^^^test    [rsp+0D0h], r15^^^lea     rdx, dwarf_reg_size_table^^^movzx   ecx, byte ptr [rdx+rax]^^^mov     rax, [rsp+rax*8+148h+var_138]^^^jnz     short loc_492161^^^cmp     cl, 8^^^jnz     loc_491F1D^^^mov     rax, [rax]^^^jmp     short loc_492161^^^mov     rax, 8000000000000000h^^^or      [r12+0C0h], rax^^^jmp     loc_492083^^^cmp     cs:byte_6C5C67, 8^^^mov     rax, [r12+90h]^^^jnz     loc_491F1D^^^test    [rsp+148h+var_71], 40h^^^mov     [rsp+148h+var_48], rax^^^jz      short loc_4921FE^^^mov     [rsp+148h+var_59], 0^^^lea     rax, [rsp+148h+var_48]^^^mov     [rsp+148h+var_100], rax^^^jmp     loc_491EEB^^^
_dl_sort_fini$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 58h^^^cmp     rsi, 1^^^mov     [rbp+var_38], rsi^^^mov     [rbp+var_48], rdx^^^mov     [rbp+var_58], rsp^^^jz      loc_48F34E^^^xor     r14d, r14d^^^mov     rax, rsi^^^test    rcx, rcx^^^setz    r14b^^^add     rax, 1Eh^^^mov     rdx, rsi^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^xor     esi, esi^^^mov     r15d, r14d^^^sub     rsp, rax^^^lea     rcx, [rsp+80h+var_71]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rcx^^^mov     [rbp-78h], rcx^^^call    sub_400390^^^mov     eax, dword ptr [rbp+var_38]^^^mov     rcx, [rbp-78h]^^^sub     eax, 1^^^mov     [rbp+var_50], eax^^^jmp     short loc_48F2BB^^^add     r14d, 1^^^mov     r15d, r14d^^^cmp     r15, [rbp+var_38]^^^jz      loc_48F34A^^^mov     rdx, [rbp+var_38]^^^lea     rdi, [rcx+r15]^^^xor     esi, esi^^^mov     [rbp-78h], rcx^^^sub     rdx, r15^^^call    sub_400390^^^mov     rcx, [rbp-78h]^^^lea     rdi, [rbx+r15*8]^^^movzx   r9d, byte ptr [rcx+r15]^^^mov     r8, [rdi]^^^add     r9d, 1^^^mov     rax, [r8+28h]^^^mov     [rcx+r15], r9b^^^cmp     rax, r8^^^jnz     short loc_48F290^^^cmp     dword ptr [rax+3DCh], 0FFFFFFFFh^^^jz      short loc_48F290^^^mov     edx, [rbp+var_50]^^^cmp     r14d, edx^^^jnb     short loc_48F290^^^mov     byte ptr [rbp+var_40], r9b^^^nop     dword ptr [rax]^^^mov     r12d, edx^^^lea     r13, [rbx+r12*8]^^^mov     rsi, [r13+0]^^^mov     r9, [rsi+3B8h]^^^test    r9, r9^^^jnz     short loc_48F319^^^jmp     short loc_48F321^^^add     r9, 8^^^cmp     rax, r10^^^jz      short loc_48F35D^^^mov     r10, [r9]^^^test    r10, r10^^^jnz     short loc_48F310^^^mov     r9, [rsi+3C0h]^^^test    r9, r9^^^jnz     loc_48F41A^^^sub     edx, 1^^^cmp     r14d, edx^^^jb      short loc_48F2F0^^^add     r14d, 1^^^mov     r15d, r14d^^^cmp     r15, [rbp+var_38]^^^jnz     loc_48F2A1^^^mov     rsp, [rbp+var_58]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     eax, [r14+1]^^^movzx   r9d, byte ptr [rbp+var_40]^^^sub     edx, r14d^^^mov     [rbp+var_40], rdx^^^shl     rdx, 3^^^mov     [rbp-78h], rcx^^^mov     r10d, eax^^^mov     [rbp+var_60], r8^^^mov     [rbp+var_4C], eax^^^lea     rsi, [rbx+r10*8]^^^mov     [rbp+var_68], r10^^^mov     [rbp+var_70], r9b^^^call    sub_400340^^^cmp     [rbp+var_48], 0^^^mov     r8, [rbp+var_60]^^^mov     rcx, [rbp-78h]^^^movzx   r9d, [rbp+var_70]^^^mov     r10, [rbp+var_68]^^^mov     [r13+0], r8^^^jz      short loc_48F3DC^^^mov     rdi, [rbp+var_48]^^^mov     rsi, [rbp+var_48]^^^mov     rdx, [rbp+var_40]^^^add     rdi, r15^^^add     rsi, r10^^^movzx   r13d, byte ptr [rdi]^^^call    sub_400340^^^mov     rax, [rbp+var_48]^^^mov     [rax+r12], r13b^^^movzx   r9d, [rbp+var_70]^^^mov     r10, [rbp+var_68]^^^mov     rcx, [rbp-78h]^^^cmp     byte ptr [rcx+r10], 1^^^jle     short loc_48F3EF^^^mov     r14d, [rbp+var_4C]^^^mov     r15d, r14d^^^jmp     loc_48F2A1^^^mov     rdx, [rbp+var_40]^^^lea     rsi, [rcx+r10]^^^lea     rdi, [rcx+r15]^^^mov     [rbp-78h], rcx^^^mov     [rbp+var_70], r9b^^^call    sub_400340^^^movzx   r9d, [rbp+var_70]^^^mov     rcx, [rbp-78h]^^^mov     [rcx+r12], r9b^^^jmp     loc_48F2BB^^^mov     r10d, [r9]^^^test    r10d, r10d^^^jz      loc_48F331^^^sub     r10d, 1^^^mov     r11d, r10d^^^cmp     rax, [r9+r11*8+8]^^^jnz     short loc_48F41D^^^mov     r9, [rax+3B8h]^^^test    r9, r9^^^jz      loc_48F35D^^^mov     r10, [r9]^^^test    r10, r10^^^jz      loc_48F35D^^^add     r9, 8^^^cmp     rsi, r10^^^jnz     short loc_48F444^^^jmp     loc_48F331^^^
writev$$$sub     rsp, 28h        ^^^mov     eax, cs:__libc_multiple_threads^^^test    eax, eax^^^jnz     short loc_44D6F8^^^movsxd  rdx, edx^^^movsxd  rdi, edi^^^mov     eax, 14h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44D743^^^add     rsp, 28h^^^retn^^^mov     [rsp+28h+var_20], edx^^^mov     [rsp+28h+var_18], rsi^^^mov     dword ptr [rsp+28h+var_10], edi^^^call    __libc_enable_asynccancel^^^mov     edx, [rsp+28h+var_20]^^^mov     edi, dword ptr [rsp+28h+var_10]^^^mov     r8d, eax^^^mov     rsi, [rsp+28h+var_18]^^^mov     eax, 14h^^^movsxd  rdx, edx^^^movsxd  rdi, edi^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44D755^^^mov     edi, r8d^^^mov     [rsp+28h+var_10], rax^^^call    __libc_disable_asynccancel^^^mov     rax, [rsp+28h+var_10]^^^jmp     short loc_44D6F3^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_44D6F3^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_44D72F^^^
fputs$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     r12, rdi^^^call    strlen^^^mov     rbp, rax^^^mov     eax, [rbx]^^^and     eax, 8000h^^^jnz     short loc_425A42^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_425A3E^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425A2A^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_39^^^jmp     short loc_425A33^^^cmpxchg [rdx], esi^^^jnz     _L_lock_39^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     eax, [rbx+0C0h]^^^test    eax, eax^^^jnz     loc_425AD0^^^mov     dword ptr [rbx+0C0h], 0FFFFFFFFh^^^mov     rax, [rbx+0D8h]^^^mov     rdx, rbp^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^xor     edx, edx^^^cmp     rbp, rax^^^setz    dl^^^lea     edx, [rdx+rdx-1]^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_425AB8^^^mov     rsi, [rbx+88h]^^^mov     eax, [rsi+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+4], eax^^^jnz     short loc_425AB8^^^mov     qword ptr [rsi+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425AB0^^^lock dec dword ptr [rsi]^^^jnz     _L_unlock_101^^^jmp     short loc_425AB8^^^dec     dword ptr [rsi]^^^jnz     _L_unlock_101^^^mov     eax, edx^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_425A5A^^^mov     edx, 0FFFFFFFFh^^^jmp     short loc_425A79^^^
_dl_map_object_deps$$$push    rbp^^^lea     eax, [rdx+2]^^^mov     rbp, rsp^^^push    r15^^^lea     rax, [rax+rax*2]^^^push    r14^^^lea     rax, ds:1Eh[rax*8]^^^push    r13^^^shr     rax, 4^^^shl     rax, 4^^^push    r12^^^push    rbx^^^sub     rsp, 0E8h^^^mov     [rbp+var_BC], ecx^^^mov     [rbp+var_B0], rdi^^^sub     rsp, rax^^^mov     [rbp+var_C0], r8d^^^lea     rcx, [rsp+110h+var_101]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+18h]^^^mov     [rbp+var_E0], rcx^^^mov     dword ptr [rcx], 0^^^mov     [rcx+8], rdi^^^mov     [rcx+10h], rax^^^movzx   eax, byte ptr [rdi+314h]^^^and     eax, 0FFFFFF9Fh^^^or      eax, 20h^^^mov     [rdi+314h], al^^^xor     eax, eax^^^test    edx, edx^^^mov     dword ptr [rbp+var_98], 1^^^jz      short loc_48DC8D^^^lea     r10d, [rdx+1]^^^mov     edi, 1^^^mov     r8d, 1^^^add     r8d, 1^^^lea     rax, [rdi+rdi*2]^^^mov     r9, [rsi]^^^mov     edi, r8d^^^add     rsi, 8^^^lea     r11, [rdi+rdi*2]^^^lea     rax, [rcx+rax*8]^^^lea     r11, [rcx+r11*8]^^^mov     dword ptr [rax], 0^^^mov     [rax+8], r9^^^mov     [rax+10h], r11^^^movzx   eax, byte ptr [r9+314h]^^^and     eax, 0FFFFFF9Fh^^^or      eax, 20h^^^cmp     r8d, r10d^^^mov     [r9+314h], al^^^jnz     short loc_48DC36^^^mov     edx, edx^^^mov     dword ptr [rbp+var_98], r8d^^^lea     rax, [rdx+rdx*2]^^^shl     rax, 3^^^add     rax, rcx^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_50], 0^^^mov     [rbp+var_A0], rax^^^mov     qword ptr [rax+10h], 0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_A8], rcx^^^mov     [rbp+var_D0], 0^^^mov     [rbp+var_C8], 0^^^mov     eax, fs:[rax]^^^mov     dword ptr fs:[rdx], 0^^^mov     [rbp+var_D4], eax^^^mov     rcx, [rbp+var_A8]^^^xor     r15d, r15d^^^mov     r12, [rcx+8]^^^mov     dword ptr [rcx], 1^^^cmp     qword ptr [r12+2B8h], 0^^^jz      loc_48DEF9^^^cmp     qword ptr [r12+48h], 0^^^jz      loc_48DE3A^^^mov     rax, [r12+68h]^^^mov     rbx, [r12+10h]^^^mov     ecx, [rbp+var_BC]^^^mov     esi, [rbp+var_C0]^^^mov     [rbp+var_80], r12^^^mov     rax, [rax+8]^^^mov     [rbp+var_78], ecx^^^mov     [rbp+var_74], esi^^^mov     [rbp+var_88], rax^^^mov     [rbp+var_70], rax^^^mov     rax, [rbx]^^^test    rax, rax^^^jz      loc_48DE58^^^mov     rdi, [rbp+var_A8]^^^xor     r13d, r13d^^^mov     [rbp+var_B8], rdi^^^jmp     short loc_48DD80^^^test    r15, r15^^^jz      short loc_48DD70^^^mov     edx, r13d^^^add     r13d, 1^^^mov     [r15+rdx*8], rax^^^add     rbx, 10h^^^mov     rax, [rbx]^^^test    rax, rax^^^jz      loc_48DE5B^^^cmp     rax, 1^^^jnz     loc_48E650^^^mov     r14, [rbp+var_88]^^^add     r14, [rbx+8]^^^mov     esi, 24h^^^mov     rdi, r14^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_48E4FB^^^mov     rax, r14^^^lea     rsi, [rbp+var_50]^^^lea     r8, [rbp+var_80]^^^lea     rdx, [rbp+var_31]^^^lea     rdi, [rbp+var_40]^^^mov     ecx, offset openaux^^^mov     [rbp+var_68], rax^^^call    _dl_catch_error^^^mov     rsi, [rbp+var_50]^^^test    rsi, rsi^^^jnz     loc_48E460^^^mov     rax, [rbp+var_60]^^^test    byte ptr [rax+314h], 60h^^^jnz     loc_48DD60^^^sub     rsp, 30h^^^mov     rcx, [rbp+var_A0]^^^add     dword ptr [rbp+var_98], 1^^^lea     rdx, [rsp+140h+var_131]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rdx+10h], 0^^^mov     [rdx+8], rax^^^mov     dword ptr [rdx], 0^^^mov     [rcx+10h], rdx^^^movzx   ecx, byte ptr [rax+314h]^^^and     ecx, 0FFFFFF9Fh^^^or      ecx, 20h^^^mov     [rax+314h], cl^^^mov     [rbp+var_A0], rdx^^^jmp     loc_48DD60^^^cmp     qword ptr [r12+1E0h], 0^^^jnz     loc_48DD11^^^cmp     qword ptr [r12+1D0h], 0^^^jnz     loc_48DD11^^^xor     r13d, r13d^^^test    r15, r15^^^jz      short loc_48DEC3^^^lea     r14d, [r13+1]^^^mov     eax, r13d^^^mov     qword ptr [r15+rax*8], 0^^^lea     edi, [r14+r14+1]^^^shl     rdi, 3^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_48E7BA^^^shl     r14, 3^^^lea     rdi, [rax+8]^^^mov     rsi, r15^^^mov     rdx, r14^^^mov     [rax], r12^^^add     r13d, 2^^^call    memcpy^^^lea     rdi, [rbx+r13*8]^^^mov     rdx, r14^^^mov     rsi, rbx^^^call    memcpy^^^or      byte ptr [r12+316h], 1^^^mov     [r12+3B8h], rbx^^^mov     rax, [rbp+var_A8]^^^mov     ebx, [rax]^^^test    ebx, ebx^^^jz      loc_48DCE2^^^nop     dword ptr [rax+00h]^^^mov     rax, [rax+10h]^^^test    rax, rax^^^jz      loc_48DF84^^^mov     r10d, [rax]^^^test    r10d, r10d^^^jnz     short loc_48DED8^^^mov     [rbp+var_A8], rax^^^jmp     loc_48DCE2^^^cmp     r12, [rbp+var_B0]^^^jz      loc_48E1D9^^^cmp     qword ptr [r12+3B8h], 0^^^jnz     loc_48E1D9^^^movzx   eax, word ptr [r12+2B2h]^^^test    ax, ax^^^jz      loc_48DD05^^^movzx   eax, ax^^^mov     r15, [rbp+var_C8]^^^shl     rax, 3^^^cmp     rax, [rbp+var_D0]^^^jbe     loc_48DD05^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+1Eh]^^^and     edx, 1FFFF0h^^^sub     rsp, rdx^^^lea     r15, [rsp+110h+var_101]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [r15+rax]^^^cmp     [rbp+var_C8], rdx^^^jz      loc_48ED0D^^^mov     [rbp+var_D0], rax^^^mov     [rbp+var_C8], r15^^^jmp     loc_48DD05^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr [rbp+var_90], 0^^^mov     r11d, fs:[rdx]^^^test    r11d, r11d^^^setz    al^^^test    al, al^^^jz      short loc_48DFBF^^^mov     r9d, [rbp+var_D4]^^^test    r9d, r9d^^^jz      short loc_48DFBF^^^mov     esi, [rbp+var_D4]^^^mov     rcx, 0FFFFFFFFFFFFFFC0h^^^mov     fs:[rcx], esi^^^mov     rdi, [rbp+var_B0]^^^mov     rdi, [rdi+3B8h]^^^test    rdi, rdi^^^mov     [rbp+var_A0], rdi^^^jz      short loc_48DFFD^^^mov     rdi, [rbp+var_B0]^^^movzx   eax, byte ptr [rdi+314h]^^^and     eax, 3^^^cmp     al, 2^^^jz      loc_48E431^^^mov     [rbp+var_A0], 0^^^mov     eax, dword ptr [rbp+var_98]^^^lea     edi, [rax+rax+1]^^^shl     rdi, 3^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_48ECF1^^^mov     eax, dword ptr [rbp+var_98]^^^mov     rdi, [rbp+var_B0]^^^mov     r8d, [rbp+var_BC]^^^add     eax, 1^^^lea     rax, [r15+rax*8]^^^test    r8d, r8d^^^mov     [rdi+2B8h], rax^^^mov     eax, dword ptr [rbp+var_98]^^^mov     [rdi+2C0h], eax^^^jnz     loc_48EB89^^^mov     rax, [rbp+var_E0]^^^mov     dword ptr [rbp+var_88], 0^^^xor     edx, edx^^^mov     r8, rdi^^^mov     rdi, [rax+8]^^^mov     rcx, [r8+2B8h]^^^mov     esi, edx^^^add     edx, 1^^^mov     [rcx+rsi*8], rdi^^^mov     rcx, [rax+8]^^^and     byte ptr [rcx+314h], 9Fh^^^mov     rax, [rax+10h]^^^test    rax, rax^^^jnz     short loc_48E069^^^mov     dword ptr [rbp+var_88], edx^^^test    byte ptr cs:_dl_debug_mask+1, 8^^^jnz     loc_48EB17^^^mov     rdi, [rbp+var_B0]^^^mov     rsi, [rdi+2B8h]^^^mov     r14, [rsi]^^^cmp     r14, rdi^^^jnz     loc_48ED52^^^mov     r12, [rdi+3C0h]^^^test    r12, r12^^^jz      loc_48ED20^^^cmp     dword ptr [rbp+var_88], 1^^^jbe     short loc_48E10B^^^mov     eax, dword ptr [rbp+var_88]^^^xor     edx, edx^^^sub     eax, 2^^^lea     rdi, ds:8[rax*8]^^^mov     rcx, [rsi+rdx+8]^^^add     rdx, 8^^^movzx   eax, byte ptr [rcx+314h]^^^and     eax, 0FFFFFF9Fh^^^or      eax, 20h^^^cmp     rdx, rdi^^^mov     [rcx+314h], al^^^jnz     short loc_48E0EA^^^mov     edx, [r12]^^^lea     rcx, [r12+8]^^^mov     [rbp+var_98], rcx^^^test    edx, edx^^^jz      loc_48E1E8^^^xor     ebx, ebx^^^jmp     short loc_48E140^^^mov     rdi, [rbp+var_B0]^^^add     ebx, 1^^^mov     rax, [rdi+3C0h]^^^cmp     [rax], ebx^^^jbe     loc_48E1E1^^^mov     edx, ebx^^^mov     rax, [r12+rdx*8+8]^^^test    byte ptr [rax+314h], 60h^^^jz      short loc_48E127^^^mov     eax, [r14+3C8h]^^^mov     [rbp+var_F0], rdx^^^lea     rdi, ds:8[rax*8]^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rdx, [rbp+var_F0]^^^jz      short loc_48E127^^^mov     rsi, [rbp+var_98]^^^lea     rdi, [rax+8]^^^shl     rdx, 3^^^call    memcpy^^^mov     rax, [r14+3C0h]^^^lea     edi, [rbx+1]^^^mov     ecx, ebx^^^mov     esi, [rax]^^^cmp     esi, edi^^^jbe     loc_48ED6B^^^mov     eax, edi^^^mov     edx, eax^^^mov     rdx, [r12+rdx*8+8]^^^test    byte ptr [rdx+314h], 60h^^^jnz     short loc_48E1C1^^^mov     r8d, ecx^^^add     ecx, 1^^^mov     [r13+r8*8+8], rdx^^^add     eax, 1^^^cmp     esi, eax^^^ja      short loc_48E1A6^^^sub     esi, 1^^^sub     esi, ebx^^^lea     ebx, [rsi+rdi]^^^mov     [r13+0], ecx^^^jmp     loc_48E127^^^xor     r15d, r15d^^^jmp     loc_48DD05^^^mov     rsi, [rdi+2B8h]^^^cmp     dword ptr [rbp+var_88], 1^^^jbe     loc_48EA82^^^mov     eax, dword ptr [rbp+var_88]^^^sub     eax, 2^^^lea     rcx, ds:8[rax*8]^^^xor     eax, eax^^^mov     rdx, [rsi+rax+8]^^^add     rax, 8^^^and     byte ptr [rdx+314h], 9Fh^^^cmp     rax, rcx^^^jnz     short loc_48E208^^^mov     ebx, dword ptr [rbp+var_88]^^^mov     rdi, r15^^^lea     rcx, ds:0[rbx*8]^^^mov     rdx, rcx^^^mov     [rbp+var_98], rcx^^^call    memcpy^^^lea     rax, [rbx+1Eh]^^^mov     [rbp+var_B8], rsp^^^xor     esi, esi^^^mov     rdx, rbx^^^mov     r14d, 1^^^shr     rax, 4^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rcx, [rsp+110h+var_101]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rcx^^^mov     [rbp+var_110], rcx^^^call    sub_400390^^^mov     esi, dword ptr [rbp+var_88]^^^mov     rcx, [rbp+var_110]^^^mov     r8d, 1^^^sub     esi, 1^^^mov     dword ptr [rbp+var_A8], esi^^^add     byte ptr [rcx+r8], 1^^^cmp     r14d, dword ptr [rbp+var_A8]^^^lea     rdi, [r15+r8*8]^^^mov     rbx, [rdi]^^^jnb     short loc_48E2EA^^^mov     r10d, dword ptr [rbp+var_A8]^^^xchg    ax, ax^^^mov     r12d, r10d^^^lea     r13, [r15+r12*8]^^^mov     rax, [r13+0]^^^mov     rax, [rax+3B8h]^^^test    rax, rax^^^jnz     short loc_48E2D9^^^jmp     short loc_48E2E1^^^add     rax, 8^^^cmp     rbx, rdx^^^jz      short loc_48E333^^^mov     rdx, [rax]^^^test    rdx, rdx^^^jnz     short loc_48E2D0^^^sub     r10d, 1^^^cmp     r14d, r10d^^^jb      short loc_48E2B0^^^add     r14d, 1^^^cmp     r14d, dword ptr [rbp+var_88]^^^jz      loc_48E3A7^^^mov     edx, dword ptr [rbp+var_88]^^^mov     r8d, r14d^^^xor     esi, esi^^^lea     rdi, [rcx+r8]^^^mov     [rbp+var_110], rcx^^^mov     [rbp-108h], r8^^^sub     edx, r14d^^^call    sub_400390^^^mov     rcx, [rbp+var_110]^^^mov     r8, [rbp-108h]^^^jmp     loc_48E292^^^lea     r11d, [r14+1]^^^sub     r10d, r14d^^^mov     [rbp+var_110], rcx^^^lea     rdx, ds:0[r10*8]^^^mov     [rbp-108h], r8^^^mov     [rbp+var_F0], r10^^^mov     r9d, r11d^^^mov     [rbp+var_F8], r11d^^^lea     rsi, [r15+r9*8]^^^mov     [rbp+var_100], r9^^^call    sub_400340^^^mov     rcx, [rbp+var_110]^^^mov     r9, [rbp+var_100]^^^mov     [r13+0], rbx^^^mov     r8, [rbp-108h]^^^mov     r10, [rbp+var_F0]^^^mov     r11d, [rbp+var_F8]^^^cmp     byte ptr [rcx+r9], 1^^^jle     short loc_48E405^^^mov     r14d, r11d^^^jmp     loc_48E2FB^^^mov     rsp, [rbp+var_B8]^^^mov     rcx, [rbp+var_98]^^^mov     qword ptr [r15+rcx], 0^^^mov     rdi, [rbp+var_B0]^^^or      byte ptr [rdi+316h], 1^^^mov     [rdi+3B8h], r15^^^cmp     [rbp+var_A0], 0^^^jz      short loc_48E3E8^^^mov     rdi, [rbp+var_A0]^^^call    _dl_scope_free^^^mov     eax, dword ptr [rbp+var_90]^^^test    eax, eax^^^jnz     loc_48EAB5^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     rdi, [rcx+r8]^^^lea     rsi, [rcx+r9]^^^movzx   ebx, byte ptr [rcx+r8]^^^mov     rdx, r10^^^call    sub_400340^^^mov     rcx, [rbp+var_110]^^^mov     [rcx+r12], bl^^^mov     r8, [rbp-108h]^^^jmp     loc_48E292^^^cmp     qword ptr [rdi+2B8h], 0^^^jz      loc_48DFFD^^^mov     ecx, offset __PRETTY_FUNCTION___10772_0^^^mov     edx, 1FFh^^^mov     esi, offset aDlDeps_c^^^mov     edi, offset aMapL_searchlis^^^call    __assert_fail^^^mov     rdi, rsi^^^mov     [rbp+var_F0], rsi^^^mov     r14d, eax^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, [rbp+var_F0]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+110h+var_101]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     rbx, [rbp+var_40]^^^mov     r12, rax^^^mov     rdi, rbx^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, rbx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+110h+var_101]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^cmp     [rbp+var_31], 0^^^mov     [rbp+var_40], rax^^^jnz     loc_48EAA3^^^test    r14d, r14d^^^mov     [rbp+var_50], r12^^^jz      loc_48E632^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr [rbp+var_90], r14d^^^mov     eax, fs:[rax]^^^test    eax, eax^^^setz    al^^^jmp     loc_48DF9F^^^xor     esi, esi^^^mov     rdi, rax^^^call    _dl_dst_count^^^test    rax, rax^^^mov     [rbp+var_90], rax^^^jz      loc_48DDAB^^^mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jnz     loc_48E621^^^mov     rdi, r14^^^call    strlen^^^mov     rdi, [r12+338h]^^^mov     rdx, rax^^^test    rdi, rdi^^^jz      loc_48E5E0^^^xor     eax, eax^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_48E55A^^^mov     [rbp+var_F0], rdx^^^call    strlen^^^mov     rdx, [rbp+var_F0]^^^mov     ecx, 10h^^^cmp     cs:_dl_platformlen, 10h^^^mov     rdi, r12^^^mov     rsi, rcx^^^cmovnb  rsi, cs:_dl_platformlen^^^cmp     rsi, rax^^^cmovnb  rax, rsi^^^mov     rsi, r14^^^sub     rax, 4^^^imul    rax, [rbp+var_90]^^^lea     rax, [rdx+rax+1Eh]^^^xor     edx, edx^^^div     rcx^^^xor     cl, cl^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rdx, [rsp+110h+var_101]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^call    _dl_dst_substitute^^^cmp     byte ptr [rax], 0^^^jnz     loc_48DDAE^^^test    byte ptr cs:_dl_debug_mask, 1^^^jz      loc_48DD70^^^mov     rsi, r14^^^mov     edi, offset aCannotLoadAuxi^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48DD70^^^mov     rax, [r12+8]^^^cmp     byte ptr [rax], 0^^^jnz     loc_48EAFE^^^mov     [rbp+var_F0], rdx^^^call    _dl_get_origin^^^lea     rcx, [rax-1]^^^mov     rdi, rax^^^mov     [r12+338h], rax^^^xor     eax, eax^^^mov     rdx, [rbp+var_F0]^^^cmp     rcx, 0FFFFFFFFFFFFFFFDh^^^ja      loc_48E55A^^^jmp     loc_48E54E^^^mov     ecx, offset aDstNotAllowedI^^^xor     edx, edx^^^mov     rsi, r14^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr [rbp+var_90], 0FFFFFFFFh^^^mov     eax, fs:[rdx]^^^test    eax, eax^^^setz    al^^^jmp     loc_48DF9F^^^cmp     rax, 7FFFFFFFh^^^jz      short loc_48E664^^^cmp     rax, 7FFFFFFDh^^^jnz     loc_48DD70^^^mov     r14, [rbp+var_88]^^^add     r14, [rbx+8]^^^mov     esi, 24h^^^mov     rdi, r14^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_48E977^^^mov     rsi, r14^^^cmp     qword ptr [rbx], 7FFFFFFDh^^^mov     [rbp+var_68], rsi^^^jz      loc_48E92F^^^test    byte ptr cs:_dl_debug_mask, 1^^^jnz     loc_48E90A^^^lea     r8, [rbp+var_80]^^^lea     rdx, [rbp+var_31]^^^lea     rsi, [rbp+var_50]^^^lea     rdi, [rbp+var_40]^^^mov     ecx, offset openaux^^^call    _dl_catch_error^^^mov     r14, [rbp+var_50]^^^mov     dword ptr [rbp+var_90], eax^^^test    r14, r14^^^jnz     loc_48E818^^^mov     rcx, [rbp+var_B8]^^^sub     rsp, 30h^^^lea     rdx, [rsp+140h+var_131]^^^mov     rax, [rcx]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^test    r15, r15^^^mov     [rdx], rax^^^mov     rax, [rcx+8]^^^mov     [rdx+8], rax^^^mov     rax, [rcx+10h]^^^mov     [rdx+10h], rax^^^mov     rax, [rbp+var_60]^^^mov     dword ptr [rcx], 0^^^mov     [rcx+8], rax^^^jz      short loc_48E71F^^^mov     ecx, r13d^^^add     r13d, 1^^^mov     [r15+rcx*8], rax^^^mov     rax, [rbp+var_60]^^^test    byte ptr [rax+314h], 60h^^^mov     rcx, rdx^^^jnz     loc_48E7ED^^^mov     rcx, [rbp+var_B8]^^^add     dword ptr [rbp+var_98], 1^^^mov     [rcx+10h], rdx^^^movzx   ecx, byte ptr [rax+314h]^^^and     ecx, 0FFFFFF9Fh^^^or      ecx, 20h^^^mov     [rax+314h], cl^^^mov     rcx, [rax+20h]^^^test    rcx, rcx^^^jz      short loc_48E765^^^mov     rsi, [rax+18h]^^^mov     [rcx+18h], rsi^^^mov     rsi, [rax+18h]^^^test    rsi, rsi^^^jz      short loc_48E772^^^mov     [rsi+20h], rcx^^^mov     rcx, [rdx+8]^^^mov     rsi, [rcx+20h]^^^mov     [rax+20h], rsi^^^mov     [rcx+20h], rax^^^mov     rsi, [rax+20h]^^^test    rsi, rsi^^^jz      short loc_48E78F^^^mov     [rsi+18h], rax^^^mov     rsi, [rbp+var_A0]^^^cmp     [rbp+var_B8], rsi^^^mov     [rax+18h], rcx^^^mov     [rbp+var_B8], rdx^^^jnz     loc_48DD70^^^mov     [rbp+var_A0], rdx^^^jmp     loc_48DD70^^^mov     rdi, [rbp+var_B0]^^^mov     ecx, offset aCannotAlloca_3^^^xor     edx, edx^^^mov     rsi, [rdi+8]^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^cmp     [rsi+8], rax^^^jz      loc_48E8C8^^^mov     rcx, rsi^^^mov     rsi, [rcx+10h]^^^test    rsi, rsi^^^jnz     short loc_48E7E0^^^mov     rax, [rdx]^^^mov     rcx, [rbp+var_B8]^^^mov     [rcx], rax^^^mov     rax, [rdx+8]^^^mov     [rcx+8], rax^^^mov     rax, [rdx+10h]^^^mov     [rcx+10h], rax^^^jmp     loc_48DD70^^^mov     rdi, r14^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, r14^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+110h+var_101]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     rbx, [rbp+var_40]^^^mov     r12, rax^^^mov     rdi, rbx^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, rbx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+110h+var_101]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^cmp     [rbp+var_31], 0^^^mov     [rbp+var_40], rax^^^jz      short loc_48E882^^^mov     rdi, [rbp+var_50]^^^call    free^^^mov     r14d, dword ptr [rbp+var_90]^^^mov     [rbp+var_50], r12^^^test    r14d, r14d^^^jz      short loc_48E8A8^^^mov     rdi, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, fs:[rdi]^^^test    r13d, r13d^^^setz    al^^^jmp     loc_48DF9F^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr [rbp+var_90], 0FFFFFFFFh^^^mov     r12d, fs:[rax]^^^test    r12d, r12d^^^setz    al^^^jmp     loc_48DF9F^^^mov     rsi, [rbp+var_B8]^^^mov     rdi, [rbp+var_A0]^^^mov     [rsi+10h], rdx^^^mov     rsi, [rcx+10h]^^^cmp     rsi, [rbp+var_A0]^^^mov     rsi, [rsi+10h]^^^cmovz   rdi, rcx^^^mov     [rcx+10h], rsi^^^mov     rcx, [rax+20h]^^^mov     [rbp+var_A0], rdi^^^test    rcx, rcx^^^jnz     loc_48E75D^^^jmp     loc_48E765^^^mov     rdx, [r12+8]^^^cmp     byte ptr [rdx], 0^^^jnz     short loc_48E91E^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     edi, offset aLoadFilteredOb^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48E6A6^^^test    byte ptr cs:_dl_debug_mask, 1^^^jnz     loc_48EAD9^^^lea     rdi, [rbp+var_40]^^^lea     r8, [rbp+var_80]^^^lea     rdx, [rbp+var_31]^^^lea     rsi, [rbp+var_50]^^^mov     ecx, offset openaux^^^call    _dl_catch_error^^^mov     rdi, [rbp+var_50]^^^test    rdi, rdi^^^jz      loc_48E6D3^^^cmp     [rbp+var_31], 0^^^jz      loc_48DD70^^^call    free^^^jmp     loc_48DD70^^^xor     esi, esi^^^mov     rdi, rax^^^call    _dl_dst_count^^^test    rax, rax^^^mov     [rbp+var_90], rax^^^jz      loc_48E685^^^mov     eax, cs:__libc_enable_secure^^^test    eax, eax^^^jnz     loc_48E621^^^mov     rdi, r14^^^call    strlen^^^mov     rdi, [r12+338h]^^^mov     [rbp+var_E8], rax^^^test    rdi, rdi^^^jz      loc_48EA4F^^^xor     eax, eax^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_48E9CC^^^call    strlen^^^mov     ecx, 10h^^^cmp     cs:_dl_platformlen, 10h^^^mov     rsi, [rbp+var_E8]^^^mov     rdx, rcx^^^cmovnb  rdx, cs:_dl_platformlen^^^mov     rdi, r12^^^cmp     rdx, rax^^^cmovnb  rax, rdx^^^xor     edx, edx^^^sub     rax, 4^^^imul    rax, [rbp+var_90]^^^lea     rax, [rsi+rax+1Eh]^^^mov     rsi, r14^^^div     rcx^^^xor     cl, cl^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rdx, [rsp+110h+var_101]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^call    _dl_dst_substitute^^^cmp     byte ptr [rax], 0^^^mov     rsi, rax^^^jnz     loc_48E688^^^cmp     qword ptr [rbx], 7FFFFFFDh^^^jnz     loc_48E5B5^^^mov     ecx, offset aEmptyDynamicSt^^^xor     edx, edx^^^mov     rsi, r14^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     rax, [r12+8]^^^cmp     byte ptr [rax], 0^^^jnz     loc_48ED72^^^call    _dl_get_origin^^^lea     rdx, [rax-1]^^^mov     rdi, rax^^^mov     [r12+338h], rax^^^xor     eax, eax^^^cmp     rdx, 0FFFFFFFFFFFFFFFDh^^^ja      loc_48E9CC^^^jmp     loc_48E9C7^^^mov     eax, dword ptr [rbp+var_88]^^^mov     rdi, r15^^^shl     rax, 3^^^mov     rdx, rax^^^mov     [rbp+var_98], rax^^^call    memcpy^^^jmp     loc_48E3AE^^^mov     rdi, [rbp+var_50]^^^call    free^^^nop     dword ptr [rax+00h]^^^jmp     loc_48E4D3^^^cmp     dword ptr [rbp+var_90], 0FFFFFFFFh^^^mov     eax, 0^^^mov     rcx, [rbp+var_50]^^^cmovnz  eax, dword ptr [rbp+var_90]^^^mov     rsi, [rbp+var_40]^^^xor     edx, edx^^^mov     edi, eax^^^call    _dl_signal_error^^^mov     rdx, [r12+8]^^^cmp     byte ptr [rdx], 0^^^jnz     short loc_48EAED^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     edi, offset aLoadAuxiliaryO^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48E93C^^^mov     ecx, offset __PRETTY_FUNCTION___10772_0^^^mov     edx, 0FDh^^^mov     esi, offset aDlDeps_c^^^mov     edi, offset aLL_name000^^^call    __assert_fail^^^mov     rbx, cs:_dl_ns^^^cmp     rbx, [rbp+var_B0]^^^jnz     loc_48E0A4^^^mov     esi, dword ptr [rbp+var_88]^^^test    esi, esi^^^jz      loc_48E0A4^^^mov     eax, dword ptr [rbp+var_88]^^^xor     r12d, r12d^^^sub     eax, 1^^^lea     rax, ds:8[rax*8]^^^mov     [rbp+var_98], rax^^^mov     rax, [rbx+2B8h]^^^mov     r13, [rax+r12]^^^cmp     rbx, r13^^^jz      short loc_48EB77^^^mov     rax, [r13+388h]^^^test    rax, rax^^^jz      short loc_48EBD2^^^mov     ecx, [rax+8]^^^test    ecx, ecx^^^jz      short loc_48EBD2^^^add     r12, 8^^^cmp     r12, [rbp+var_98]^^^jnz     short loc_48EB54^^^jmp     loc_48E0A4^^^mov     rdx, [rbp+var_E0]^^^mov     rsi, rdi^^^mov     dword ptr [rbp+var_88], 0^^^xor     ecx, ecx^^^mov     rax, [rdx+8]^^^test    byte ptr [rax+315h], 2^^^jz      loc_48ECD7^^^sub     dword ptr [rsi+2C0h], 1^^^and     byte ptr [rax+314h], 9Fh^^^mov     rdx, [rdx+10h]^^^test    rdx, rdx^^^jnz     short loc_48EB9F^^^mov     dword ptr [rbp+var_88], ecx^^^jmp     loc_48E097^^^cmp     qword ptr [r13+1E0h], 0^^^jnz     loc_48ECAD^^^cmp     qword ptr [r13+1D0h], 0^^^jnz     loc_48ECAD^^^mov     rsi, r13^^^mov     rdi, r15^^^call    _dl_build_local_scope^^^cmp     eax, dword ptr [rbp+var_88]^^^mov     r14d, eax^^^ja      loc_48EC94^^^test    eax, eax^^^jz      short loc_48EC4E^^^mov     rax, [r15]^^^mov     rdx, r15^^^and     byte ptr [rax+314h], 9Fh^^^xor     eax, eax^^^add     eax, 1^^^cmp     r14d, eax^^^jbe     short loc_48EC4E^^^mov     rcx, [rdx+8]^^^and     byte ptr [rcx+314h], 9Fh^^^test    eax, eax^^^jz      short loc_48EC48^^^mov     rcx, [rdx+8]^^^cmp     qword ptr [rcx+0C0h], 0^^^jz      short loc_48EC48^^^or      byte ptr [r13+315h], 80h^^^add     rdx, 8^^^jmp     short loc_48EC1B^^^mov     edx, r14d^^^lea     rdi, ds:10h[rdx*8]^^^mov     [rbp+var_F0], rdx^^^call    malloc^^^test    rax, rax^^^mov     [r13+388h], rax^^^mov     rdx, [rbp+var_F0]^^^jz      short loc_48ECC2^^^lea     rdi, [rax+10h]^^^mov     [rax+8], r14d^^^shl     rdx, 3^^^mov     rsi, r15^^^mov     [rax], rdi^^^call    memcpy^^^jmp     loc_48EB77^^^mov     ecx, offset __PRETTY_FUNCTION___10772_0^^^mov     edx, 237h^^^mov     esi, offset aDlDeps_c^^^mov     edi, offset aCntNlist^^^call    __assert_fail^^^mov     rsi, [r13+8]^^^mov     ecx, offset aFiltersNotSupp^^^xor     edx, edx^^^mov     edi, 16h^^^call    _dl_signal_error^^^mov     rsi, [rbx+8]^^^mov     ecx, offset aCannotAlloca_4^^^xor     edx, edx^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     rdi, [rsi+2B8h]^^^mov     r8d, ecx^^^add     ecx, 1^^^mov     [rdi+r8*8], rax^^^mov     rax, [rdx+8]^^^jmp     loc_48EBB7^^^mov     rdi, [rbp+var_B0]^^^mov     ecx, offset aCannotAlloca_4^^^xor     edx, edx^^^mov     rsi, [rdi+8]^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^add     [rbp+var_D0], rax^^^mov     [rbp+var_C8], r15^^^jmp     loc_48DD05^^^mov     ebx, dword ptr [rbp+var_88]^^^mov     rdi, r15^^^lea     rcx, ds:0[rbx*8]^^^mov     rdx, rcx^^^mov     [rbp+var_98], rcx^^^call    memcpy^^^cmp     dword ptr [rbp+var_88], 1^^^jbe     loc_48E3AE^^^jmp     loc_48E23D^^^mov     ecx, offset __PRETTY_FUNCTION___10772_0^^^mov     edx, 250h^^^mov     esi, offset aDlDeps_c^^^mov     edi, offset aMapL_searchl_0^^^call    __assert_fail^^^mov     ebx, edi^^^jmp     loc_48E1D0^^^mov     ecx, offset __PRETTY_FUNCTION___10772_0^^^mov     edx, 131h^^^mov     esi, offset aDlDeps_c^^^mov     edi, offset aLL_name000^^^call    __assert_fail^^^
__fxstatat64$$$cmp     edi, 1          ^^^mov     eax, esi^^^mov     rsi, rdx^^^ja      short loc_4799E8^^^movsxd  rdi, eax^^^movsxd  r10, r8d^^^mov     rdx, rcx^^^mov     eax, 106h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_4799FC^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
strtof_l$$$mov     rcx, rdx        ^^^xor     edx, edx^^^jmp     ____strtof_l_internal^^^
strtold_l$$$mov     rcx, rdx^^^xor     edx, edx^^^jmp     ____strtold_l_internal^^^
sub_410DAB$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
sub_47313D$$$test    byte ptr [rbx+74h], 4^^^jz      short loc_473150^^^cmp     dword ptr [rbp-114Ch], 0^^^jz      loc_473229^^^movsxd  rax, dword ptr [rbp-10F8h]^^^imul    rax, 48h^^^add     rax, [rbp-10E0h]^^^jz      loc_4732A9^^^movsxd  rax, dword ptr [rax+30h]^^^mov     r8, [rbp-1118h]^^^shl     rax, 4^^^cmp     dword ptr [rbp-1120h], 0^^^mov     rax, [r8+rax]^^^jz      loc_473298^^^movsxd  rdx, r14d^^^mov     [rax], rdx^^^jmp     loc_46F0FA^^^mov     rdi, r13^^^call    wcslen^^^lea     rsi, ds:4[rax*4]^^^mov     rdi, r13^^^call    __readonly_area^^^test    eax, eax^^^mov     [rbp-114Ch], eax^^^jns     loc_473150^^^cmp     dword ptr [rbp-11A0h], 0^^^jz      short loc_4732E7^^^mov     [rax], r14b^^^jmp     loc_46F0FA^^^cmp     dword ptr [rbp-1120h], 0^^^mov     edx, [r12]^^^jz      short loc_473308^^^cmp     edx, 30h^^^jnb     short loc_4732F8^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^movsxd  rdx, r14d^^^mov     [rax], rdx^^^jmp     loc_46F0FA^^^cmp     dword ptr [rbp-118Ch], 0^^^jnz     short loc_47332F^^^mov     [rax], r14d^^^jmp     loc_46F0FA^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4732C9^^^cmp     dword ptr [rbp-11A0h], 0^^^jz      short loc_473348^^^cmp     edx, 30h^^^jnb     short loc_473338^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14b^^^jmp     loc_46F0FA^^^mov     [rax], r14w^^^jmp     loc_46F0FA^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_473324^^^cmp     dword ptr [rbp-118Ch], 0^^^jnz     loc_4737B8^^^cmp     edx, 30h^^^jnb     loc_4737A5^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14d^^^jmp     loc_46F0FA^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_47336C^^^cmp     edx, 30h^^^jnb     short loc_47380D^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14w^^^jmp     loc_46F0FA^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4737CB^^^
search_object$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 68h^^^mov     [rsp+98h+var_88], rsi^^^movzx   eax, byte ptr [rdi+20h]^^^test    al, 1^^^jnz     loc_493BF0^^^mov     edx, [rdi+20h]^^^mov     ecx, edx^^^shr     ecx, 0Bh^^^test    rcx, rcx^^^mov     [rsp+98h+var_80], rcx^^^jz      loc_493B20^^^mov     rax, [rsp+98h+var_80]^^^lea     rbx, ds:10h[rax*8]^^^mov     rdi, rbx^^^call    malloc^^^test    rax, rax^^^mov     r14, rax^^^mov     [rsp+98h+var_68], rax^^^jz      loc_493B80^^^mov     qword ptr [rax+8], 0^^^mov     rdi, rbx^^^call    malloc^^^test    rax, rax^^^mov     [rsp+98h+var_60], rax^^^jz      short loc_4938B0^^^mov     qword ptr [rax+8], 0^^^test    byte ptr [r12+20h], 2^^^jz      loc_493E81^^^mov     rbx, [r12+18h]^^^mov     rdx, [rbx]^^^test    rdx, rdx^^^jz      short loc_4938F3^^^nop     dword ptr [rax+00000000h]^^^lea     rsi, [rsp+98h+var_68]^^^add     rbx, 8^^^mov     rdi, r12^^^call    add_fdes^^^mov     rdx, [rbx]^^^test    rdx, rdx^^^jnz     short loc_4938D0^^^mov     r14, [rsp+98h+var_68]^^^test    r14, r14^^^jz      short loc_493902^^^mov     rax, [rsp+98h+var_80]^^^cmp     rax, [r14+8]^^^jnz     loc_493EC8^^^test    byte ptr [r12+20h], 4^^^lea     r13, fde_mixed_encoding_compare^^^jnz     short loc_49392B^^^test    word ptr [r12+20h], 7F8h^^^lea     r13, fde_unencoded_compare^^^lea     rax, fde_single_encoding_compare^^^cmovnz  r13, rax^^^mov     rbp, [rsp+98h+var_60]^^^test    rbp, rbp^^^jz      loc_493EA7^^^mov     rdx, [r14+8]^^^xor     eax, eax^^^lea     rbx, marker_8218^^^mov     [rsp+98h+var_78], rdx^^^cmp     [rsp+98h+var_78], 0^^^lea     rdx, [r14+10h]^^^mov     [rsp+98h+var_90], rdx^^^jz      loc_493E98^^^lea     r15, [rax+1]^^^cmp     r15, [rsp+98h+var_78]^^^mov     [rbp+rax*8+10h], rbx^^^jz      short loc_4939D4^^^lea     rbx, [r14+rax*8+10h]^^^lea     rdx, marker_8218^^^cmp     rbx, rdx^^^jnz     short loc_4939AF^^^jmp     short loc_4939C1^^^sub     rbx, [rsp+98h+var_90]^^^sar     rbx, 3^^^lea     rax, [rbx+2]^^^mov     rbx, [rbp+rax*8+0]^^^mov     qword ptr [rbp+rax*8+0], 0^^^lea     rax, marker_8218^^^cmp     rbx, rax^^^jz      short loc_4939C1^^^mov     rsi, [r14+r15*8+10h]^^^mov     rdx, [rbx]^^^mov     rdi, r12^^^call    r13^^^test    eax, eax^^^js      short loc_493988^^^mov     rax, r15^^^lea     r15, [rax+1]^^^cmp     r15, [rsp+98h+var_78]^^^mov     [rbp+rax*8+10h], rbx^^^jnz     short loc_493970^^^xor     esi, esi^^^xor     ecx, ecx^^^xor     eax, eax^^^jmp     short loc_4939F4^^^mov     [r14+rcx*8+10h], rdx^^^add     rax, 1^^^add     rcx, 1^^^cmp     rax, [rsp+98h+var_78]^^^jz      short loc_493A15^^^cmp     qword ptr [rbp+rax*8+10h], 0^^^mov     rdx, [r14+rax*8+10h]^^^jnz     short loc_4939E0^^^mov     [rbp+rsi*8+10h], rdx^^^add     rax, 1^^^add     rsi, 1^^^cmp     rax, [rsp+98h+var_78]^^^jnz     short loc_4939F4^^^mov     rdi, [rsp+98h+var_68]^^^mov     rdx, [rsp+98h+var_60]^^^mov     [r14+8], rcx^^^mov     [rbp+8], rsi^^^mov     rax, [rdx+8]^^^add     rax, [rdi+8]^^^cmp     [rsp+98h+var_80], rax^^^jnz     loc_493EC8^^^mov     rsi, r13^^^mov     rdi, r12^^^call    frame_heapsort^^^mov     rax, [rsp+98h+var_60]^^^mov     r14, [rsp+98h+var_68]^^^mov     rdx, [rax+8]^^^mov     [rsp+98h+var_78], rax^^^test    rdx, rdx^^^mov     [rsp+98h+var_80], rdx^^^jz      loc_493AF9^^^lea     rax, [r14+rdx*8]^^^mov     rbp, [r14+8]^^^mov     [rsp+98h+var_90], rax^^^nop     dword ptr [rax+rax+00h]^^^sub     [rsp+98h+var_80], 1^^^mov     rax, [rsp+98h+var_78]^^^test    rbp, rbp^^^mov     rdx, [rsp+98h+var_80]^^^mov     r15, [rax+rdx*8+10h]^^^jnz     short loc_493AB3^^^jmp     short loc_493AC9^^^mov     rax, [r14+rbx*8+10h]^^^mov     rdx, [rsp+98h+var_90]^^^test    rbx, rbx^^^mov     [rdx+rbx*8+10h], rax^^^jz      loc_493E60^^^mov     rbp, rbx^^^lea     rbx, [rbp-1]^^^mov     rdx, r15^^^mov     rdi, r12^^^mov     rsi, [r14+rbx*8+10h]^^^call    r13^^^test    eax, eax^^^jg      short loc_493A98^^^mov     rdx, [rsp+98h+var_80]^^^sub     [rsp+98h+var_90], 8^^^lea     rax, [rdx+rbp+2]^^^test    rdx, rdx^^^mov     [r14+rax*8], r15^^^jnz     short loc_493A78^^^mov     rdx, [rsp+98h+var_78]^^^mov     rax, [rdx+8]^^^add     [r14+8], rax^^^mov     rax, [rsp+98h+var_60]^^^mov     [rsp+98h+var_78], rax^^^mov     rdi, [rsp+98h+var_78]^^^call    free^^^mov     rax, [rsp+98h+var_68]^^^mov     rdx, [r12+18h]^^^mov     [rax], rdx^^^mov     [r12+18h], rax^^^or      byte ptr [r12+20h], 1^^^jmp     short loc_493B80^^^test    al, 2^^^jz      loc_493D46^^^mov     rbx, [rdi+18h]^^^mov     rsi, [rbx]^^^test    rsi, rsi^^^jnz     short loc_493B55^^^jmp     loc_493EBA^^^add     rbx, 8^^^add     [rsp+98h+var_80], rax^^^mov     rsi, [rbx]^^^test    rsi, rsi^^^jz      loc_493D5E^^^mov     rdi, r12^^^call    classify_object_over_fdes^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_493B40^^^lea     rax, terminator_8324^^^mov     qword ptr [r12+20h], 0^^^mov     word ptr [r12+20h], 7F8h^^^mov     [r12+18h], rax^^^xor     ebx, ebx^^^mov     rdx, [rsp+98h+var_88]^^^cmp     [r12], rdx^^^ja      short loc_493BD8^^^movzx   eax, byte ptr [r12+20h]^^^test    al, 1^^^jnz     short loc_493BF0^^^test    al, 2^^^jz      loc_493E67^^^mov     rbp, [r12+18h]^^^mov     rsi, [rbp+0]^^^test    rsi, rsi^^^jnz     short loc_493BBD^^^jmp     short loc_493BD8^^^add     rbp, 8^^^mov     rsi, [rbp+0]^^^test    rsi, rsi^^^jz      short loc_493BD8^^^mov     rdx, [rsp+98h+var_88]^^^mov     rdi, r12^^^call    linear_search_fdes^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_493BB0^^^nop     word ptr [rax+rax+00h]^^^add     rsp, 68h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    al, 4^^^jz      loc_493CD0^^^mov     rax, [r12+18h]^^^xor     ebx, ebx^^^mov     r13, [rax+8]^^^mov     [rsp+98h+var_80], rax^^^test    r13, r13^^^jz      short loc_493BD8^^^lea     rdx, [r12+10h]^^^lea     rax, [rsp+98h+var_50]^^^add     r12, 8^^^xor     r14d, r14d^^^mov     [rsp+98h+var_78], r12^^^lea     r15, [rsp+98h+var_48]^^^mov     [rsp+98h+var_70], rdx^^^mov     [rsp+98h+var_90], rax^^^jmp     short loc_493C4D^^^add     rax, [rsp+98h+var_48]^^^cmp     [rsp+98h+var_88], rax^^^jb      short loc_493BD8^^^lea     r14, [rbp+1]^^^cmp     r14, r13^^^jnb     short loc_493CC0^^^mov     rdx, [rsp+98h+var_80]^^^lea     rbp, [r13+r14+0]^^^shr     rbp, 1^^^mov     rbx, [rdx+rbp*8+10h]^^^movsxd  rax, dword ptr [rbx+4]^^^lea     rdi, [rbx+4]^^^sub     rdi, rax^^^call    get_cie_encoding^^^mov     rdx, [rsp+98h+var_70]^^^mov     rsi, [rsp+98h+var_78]^^^movzx   r12d, al^^^mov     edi, r12d^^^call    base_from_object_isra_3^^^mov     rcx, [rsp+98h+var_90]^^^lea     rdx, [rbx+8]^^^mov     rsi, rax^^^mov     edi, r12d^^^call    read_encoded_value_with_base_0^^^mov     edi, r12d^^^xor     esi, esi^^^mov     rcx, r15^^^and     edi, 0Fh^^^mov     rdx, rax^^^call    read_encoded_value_with_base_0^^^mov     rax, [rsp+98h+var_50]^^^cmp     [rsp+98h+var_88], rax^^^jnb     short loc_493C38^^^mov     r13, rbp^^^cmp     r14, r13^^^jb      short loc_493C4D^^^xor     ebx, ebx^^^jmp     loc_493BD8^^^movzx   eax, word ptr [r12+20h]^^^test    ax, 7F8h^^^jnz     loc_493DA0^^^mov     rdi, [r12+18h]^^^xor     ebx, ebx^^^mov     rdx, [rdi+8]^^^test    rdx, rdx^^^jz      loc_493BD8^^^xor     ecx, ecx^^^lea     r15, [rsp+98h+var_48]^^^jmp     short loc_493D19^^^add     rsi, [rsp+98h+var_48]^^^cmp     [rsp+98h+var_88], rsi^^^jb      loc_493BD8^^^lea     rcx, [rax+1]^^^cmp     rdx, rcx^^^jbe     short loc_493CC0^^^lea     rax, [rdx+rcx]^^^shr     rax, 1^^^mov     rbx, [rdi+rax*8+10h]^^^mov     rsi, [rbx+8]^^^mov     [rsp+98h+var_40], rsi^^^mov     rsi, [rbx+10h]^^^mov     [r15], rsi^^^mov     rsi, [rsp+98h+var_40]^^^cmp     [rsp+98h+var_88], rsi^^^jnb     short loc_493D00^^^mov     rdx, rax^^^jmp     short loc_493D14^^^mov     rsi, [rdi+18h]^^^call    classify_object_over_fdes^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+98h+var_80], rax^^^jz      loc_493B63^^^mov     edx, dword ptr [rsp+98h+var_80]^^^mov     eax, [r12+20h]^^^and     edx, 1FFFFFh^^^and     eax, 7FFh^^^mov     ecx, edx^^^shl     ecx, 0Bh^^^or      eax, ecx^^^mov     [r12+20h], eax^^^cmp     [rsp+98h+var_80], rdx^^^jz      short loc_493D8F^^^and     eax, 7FFh^^^mov     [r12+20h], eax^^^cmp     [rsp+98h+var_80], 0^^^jz      loc_493B80^^^jmp     loc_493868^^^shr     ax, 3^^^mov     r14, [r12+18h]^^^lea     rdx, [r12+10h]^^^movzx   eax, al^^^lea     rsi, [r12+8]^^^xor     ebx, ebx^^^mov     edi, eax^^^mov     dword ptr [rsp+98h+var_80], eax^^^call    base_from_object_isra_3^^^mov     r12, [r14+8]^^^mov     [rsp+98h+var_70], rax^^^test    r12, r12^^^jz      loc_493BD8^^^mov     eax, dword ptr [rsp+98h+var_80]^^^lea     rdx, [rsp+98h+var_50]^^^xor     r13d, r13d^^^lea     r15, [rsp+98h+var_48]^^^mov     [rsp+98h+var_90], rdx^^^and     eax, 0Fh^^^mov     dword ptr [rsp+98h+var_78], eax^^^jmp     short loc_493E15^^^add     rax, [rsp+98h+var_50]^^^cmp     [rsp+98h+var_88], rax^^^jb      loc_493BD8^^^lea     r13, [rbp+1]^^^cmp     r13, r12^^^jnb     loc_493CC0^^^lea     rbp, [r13+r12+0]^^^mov     rsi, [rsp+98h+var_70]^^^mov     edi, dword ptr [rsp+98h+var_80]^^^mov     rcx, r15^^^shr     rbp, 1^^^mov     rbx, [r14+rbp*8+10h]^^^lea     rdx, [rbx+8]^^^call    read_encoded_value_with_base_0^^^mov     rcx, [rsp+98h+var_90]^^^mov     edi, dword ptr [rsp+98h+var_78]^^^xor     esi, esi^^^mov     rdx, rax^^^call    read_encoded_value_with_base_0^^^mov     rax, [rsp+98h+var_48]^^^cmp     rax, [rsp+98h+var_88]^^^jbe     short loc_493DF8^^^mov     r12, rbp^^^jmp     short loc_493E0C^^^xor     ebp, ebp^^^jmp     loc_493AC9^^^mov     rsi, [r12+18h]^^^mov     rdx, [rsp+98h+var_88]^^^mov     rdi, r12^^^call    linear_search_fdes^^^mov     rbx, rax^^^jmp     loc_493BD8^^^mov     rdx, [r12+18h]^^^lea     rsi, [rsp+98h+var_68]^^^mov     rdi, r12^^^call    add_fdes^^^jmp     loc_4938E9^^^mov     rdx, rbp^^^mov     rdi, r14^^^xor     esi, esi^^^xor     ecx, ecx^^^jmp     loc_493A1F^^^mov     rdx, r14^^^mov     rsi, r13^^^mov     rdi, r12^^^call    frame_heapsort^^^jmp     loc_493B03^^^and     edx, 7FFh^^^mov     [rdi+20h], edx^^^jmp     loc_493B80^^^call    abort^^^
__sigjmp_save$$$xor     eax, eax^^^test    esi, esi^^^push    rbx^^^mov     rbx, rdi^^^jz      short loc_4177FF^^^lea     rdx, [rdi+48h]^^^xor     esi, esi^^^xor     edi, edi^^^call    sigprocmask^^^test    eax, eax^^^setz    al^^^movzx   eax, al^^^mov     [rbx+40h], eax^^^xor     eax, eax^^^pop     rbx^^^retn^^^
strtoq$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^xor     ecx, ecx^^^mov     r8, fs:[rax]^^^jmp     ____strtoll_l_internal^^^
_dl_tls_get_addr_soft$$$mov     rdx, [rdi+448h]^^^test    rdx, rdx^^^jz      short loc_456787^^^mov     rcx, fs:8^^^mov     rsi, [rcx]^^^cmp     rsi, cs:_dl_tls_generation^^^jnz     short loc_45678A^^^shl     rdx, 4^^^mov     rax, [rcx+rdx]^^^mov     edx, 0^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^cmovz   rax, rdx^^^retn^^^xor     eax, eax^^^retn^^^xor     eax, eax^^^cmp     rdx, [rcx-10h]^^^jnb     short locret_456789^^^mov     rdi, cs:_dl_tls_dtv_slotinfo_list^^^mov     rax, rdx^^^mov     r8, [rdi]^^^cmp     rdx, r8^^^jb      short loc_4567B3^^^mov     rdi, [rdi+8]^^^sub     rax, r8^^^mov     r8, [rdi]^^^cmp     r8, rax^^^jbe     short loc_4567A4^^^lea     r8, [rax+1]^^^xor     eax, eax^^^shl     r8, 4^^^cmp     rsi, [rdi+r8]^^^jnb     short loc_456771^^^jmp     short locret_456789^^^
sub_41F5E2$$$movsxd  rax, dword ptr [rbp-5A8h]^^^xor     edx, edx^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^mov     rdi, [rax+38h]^^^mov     [rbp-548h], rax^^^lea     rax, ds:1Eh[rdi*8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rcx, [rsp+arg_7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_41F63A^^^mov     r8, [rbp-548h]^^^mov     eax, edx^^^add     edx, 1^^^add     eax, [r8+30h]^^^shl     rax, 4^^^add     rax, [rbp-578h]^^^mov     [rcx+rsi*8], rax^^^mov     esi, edx^^^cmp     rsi, rdi^^^jb      short loc_41F61B^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F961^^^mov     byte ptr [rax], 25h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     r8, [rbp-548h]^^^movzx   eax, byte ptr [r8+0Ch]^^^test    al, 8^^^jz      loc_41F8C7^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F8DC^^^mov     rdi, [rbp-548h]^^^mov     byte ptr [rax], 23h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     ecx, 4^^^mov     edx, 3^^^mov     r8d, 2^^^movzx   eax, byte ptr [rdi+0Ch]^^^test    al, al^^^jns     short loc_41F6CF^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41FD98^^^mov     byte ptr [rax], 27h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     r8d, edx^^^mov     edx, ecx^^^mov     rcx, [rbp-548h]^^^movzx   eax, byte ptr [rcx+0Ch]^^^test    al, 40h^^^jz      loc_41FE29^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41FB7D^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rsi, [rbp-548h]^^^mov     r8d, edx^^^movzx   eax, byte ptr [rsi+0Ch]^^^test    al, 20h^^^jz      short loc_41F71F^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F90E^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     r8d, 1^^^mov     rax, [rbp-548h]^^^cmp     dword ptr [rax+10h], 30h^^^jz      loc_41F8A5^^^mov     rdx, [rbp-548h]^^^test    byte ptr [rdx+0Dh], 8^^^jz      short loc_41F75A^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41FDCB^^^mov     byte ptr [rax], 49h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     r8d, 1^^^mov     rcx, [rbp-548h]^^^mov     edi, [rcx+4]^^^test    edi, edi^^^jnz     loc_41F99F^^^mov     rsi, [rbp-548h]^^^cmp     dword ptr [rsi], 0FFFFFFFFh^^^jz      loc_41F81D^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F93B^^^mov     byte ptr [rax], 2Eh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r8d, 7FFFFFFFh^^^jz      loc_41F932^^^mov     rax, [rbp-548h]^^^lea     rsi, [rbp-0A4h]^^^add     r8d, 1^^^xor     ecx, ecx^^^mov     edx, 0Ah^^^movsxd  rdi, dword ptr [rax]^^^mov     [rbp-660h], r8d^^^call    _itoa_word^^^lea     rcx, [rbp-0A4h]^^^mov     rdx, rax^^^mov     r8d, [rbp-660h]^^^mov     [rbp-588h], rcx^^^jmp     short loc_41F814^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [rdx]^^^jnb     loc_41FDF4^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r8d, 7FFFFFFFh^^^jz      loc_41F932^^^add     rdx, 1^^^add     r8d, 1^^^cmp     rdx, [rbp-588h]^^^jb      short loc_41F7E4^^^mov     rdi, [rbp-548h]^^^mov     esi, [rdi+8]^^^test    esi, esi^^^jz      short loc_41F855^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41FA40^^^mov     [rax], sil^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r8d, 7FFFFFFFh^^^jz      loc_41F932^^^add     r8d, 1^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41FA71^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     r8d, eax^^^ja      loc_41FA68^^^add     r14d, r8d^^^jmp     loc_41B3A7^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_41FD85^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rbp-548h], rax^^^jmp     loc_41EC11^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41F979^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     r8d, 1^^^jmp     loc_41F730^^^mov     ecx, 3^^^mov     edx, 2^^^mov     r8d, 1^^^jmp     loc_41F6A2^^^mov     esi, 23h^^^mov     rdi, rbx^^^call    __overflow^^^add     eax, 1^^^jz      short loc_41F932^^^mov     rsi, [rbp-548h]^^^mov     ecx, 4^^^mov     edx, 3^^^mov     r8d, 2^^^movzx   eax, byte ptr [rsi+0Ch]^^^jmp     loc_41F6A2^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F71B^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 2Eh^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F795^^^jmp     short loc_41F932^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __overflow^^^add     eax, 1^^^jnz     loc_41F65A^^^jmp     short loc_41F932^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F8BE^^^jmp     short loc_41F932^^^lea     rsi, [rbp-0A4h]^^^xor     ecx, ecx^^^mov     edx, 0Ah^^^movsxd  rdi, edi^^^mov     [rbp-660h], r8d^^^call    _itoa_word^^^lea     rcx, [rbp-0A4h]^^^mov     rdx, rax^^^mov     r8d, [rbp-660h]^^^mov     [rbp-588h], rcx^^^jmp     short loc_41F9F5^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r8d, 7FFFFFFFh^^^jz      loc_41F932^^^add     rdx, 1^^^add     r8d, 1^^^cmp     rdx, [rbp-588h]^^^jnb     loc_41F76C^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [rdx]^^^jb      short loc_41F9D6^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     rdx, [rbp-658h]^^^mov     r8d, [rbp-660h]^^^jnz     short loc_41F9E0^^^jmp     loc_41F932^^^movzx   esi, sil^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F844^^^jmp     loc_41F932^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7F2h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41FAD5^^^cmp     edx, 30h^^^jnb     short loc_41FAC5^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14b^^^jmp     loc_41B3A7^^^mov     r8, [rbp-578h]^^^mov     rax, [r8+rax]^^^mov     [rax], r14w^^^jmp     loc_41B3A7^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41FAA6^^^cmp     dword ptr [rbp-620h], 0^^^jnz     short loc_41FB5A^^^cmp     edx, 30h^^^jnb     short loc_41FB4A^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14d^^^jmp     loc_41B3A7^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     short loc_41FB3A^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-0C0h], rax^^^jmp     loc_41E067^^^xor     r8d, r8d^^^mov     qword ptr [rbp-548h], offset unk_49A0C9^^^jmp     loc_41D6FF^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41FB18^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41FAF1^^^cmp     edx, 30h^^^jnb     loc_41FE59^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14w^^^jmp     loc_41B3A7^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^add     eax, 1^^^mov     edx, [rbp-658h]^^^jnz     loc_41F6F0^^^jmp     loc_41F932^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     [rbp-5B0h], rsp^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     qword ptr [rbp-60h], 0^^^mov     eax, [rax+0A8h]^^^add     rax, 1Eh^^^shr     rax, 4^^^shl     rax, 4^^^sub     rsp, rax^^^movsxd  rax, dword ptr [rbp-5A8h]^^^lea     rsi, [rsp+arg_7]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^imul    rax, 48h^^^mov     [rbp-580h], rsi^^^add     rax, [rbp-540h]^^^jz      loc_41FD44^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdi, [rbp-578h]^^^shl     rax, 4^^^mov     esi, [rdi+rax]^^^mov     rdi, [rbp-580h]^^^lea     rdx, [rbp-60h]^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbp-548h], rax^^^jz      loc_41FCB1^^^mov     r8d, [rbp-588h]^^^mov     [rbp-5E0h], eax^^^sub     r8d, eax^^^cmp     dword ptr [rbp-628h], 0^^^mov     [rbp-588h], r8d^^^jnz     short loc_41FC84^^^test    r8d, r8d^^^jle     short loc_41FC84^^^movsxd  rdx, r8d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF4A^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41FCB1^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41DB79^^^mov     rax, [rbx+0D8h]^^^mov     rdx, [rbp-548h]^^^mov     rdi, rbx^^^mov     rsi, [rbp-580h]^^^call    qword ptr [rax+38h]^^^cmp     [rbp-548h], rax^^^jz      short loc_41FCC6^^^or      r14d, 0FFFFFFFFh^^^mov     rsp, [rbp-5B0h]^^^jmp     loc_41ACB3^^^jmp     loc_41C25B^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     [rbp-548h], rdx^^^ja      short loc_41FCB1^^^add     r14d, [rbp-5E0h]^^^cmp     dword ptr [rbp-628h], 0^^^mov     [rbp-548h], r14d^^^jz      short loc_41FD38^^^cmp     dword ptr [rbp-588h], 0^^^jle     short loc_41FD38^^^movsxd  rdx, dword ptr [rbp-588h]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     dword ptr [rbp-548h], 7FFFFFFEh^^^ja      loc_41DF4A^^^mov     r14d, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, [rbp-548h]^^^cmp     r14d, eax^^^ja      short loc_41FCB1^^^add     r14d, [rbp-548h]^^^mov     rsp, [rbp-5B0h]^^^jmp     loc_41B3A7^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_41FD75^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     esi, [rax]^^^jmp     loc_41FC10^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41E6CC^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41FD5B^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41F896^^^mov     esi, 27h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^mov     [rbp-650h], ecx^^^call    __overflow^^^add     eax, 1^^^mov     edx, [rbp-658h]^^^mov     ecx, [rbp-650h]^^^jnz     loc_41F6BF^^^jmp     loc_41F932^^^mov     esi, 49h^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F756^^^jmp     loc_41F932^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], r8d^^^call    __overflow^^^add     eax, 1^^^mov     rdx, [rbp-658h]^^^mov     r8d, [rbp-660h]^^^jnz     loc_41F7FF^^^jmp     loc_41F932^^^test    al, 10h^^^jz      loc_41F6FE^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41FE6C^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rdi, [rbp-548h]^^^mov     r8d, edx^^^movzx   eax, byte ptr [rdi+0Ch]^^^jmp     loc_41F6FE^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41FB71^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^add     eax, 1^^^mov     edx, [rbp-658h]^^^jnz     short loc_41FE46^^^jmp     loc_41F932^^^mov     rdi, rax^^^call    _Unwind_Resume^^^test    r15, r15^^^jnz     loc_41C3D5^^^mov     r8, [rbp-560h]^^^mov     esi, 25h^^^add     r8, 1^^^mov     rdi, r8^^^mov     [rbp-660h], r8^^^call    strchrnul^^^test    r14d, r14d^^^mov     r15, rax^^^mov     r8, [rbp-660h]^^^js      short loc_41C3BC^^^mov     rcx, rax^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r8^^^sub     rcx, r8^^^mov     rdi, rbx^^^mov     rdx, rcx^^^mov     [rbp-650h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-650h]^^^cmp     rcx, rax^^^jz      short loc_41C390^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_41C3E2^^^add     r14d, ecx^^^add     dword ptr [rbp-5A8h], 1^^^cmp     byte ptr [r15], 0^^^jnz     loc_41ABED^^^xor     r15d, r15d^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 67Ch^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^mov     rdi, r15^^^call    free^^^jmp     loc_41C311^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5A0h], 0^^^jl      loc_41C732^^^mov     byte ptr [rbp-5F0h], 20h^^^jnz     loc_41C73C^^^cmp     qword ptr [rbp-5C0h], 0^^^jnz     loc_41C73C^^^cmp     dword ptr [rbp-5F8h], 0^^^jz      loc_41CBCF^^^cmp     dword ptr [rbp-5B8h], 8^^^jnz     loc_41CBCF^^^mov     rax, [rbp-548h]^^^mov     rdx, [rbp-548h]^^^sub     rax, 1^^^mov     byte ptr [rdx-1], 30h^^^mov     [rbp-590h], rax^^^movsxd  rax, dword ptr [rbp-5A0h]^^^mov     rdx, [rbp-548h]^^^sub     rdx, [rbp-590h]^^^cmp     rax, rdx^^^jg      short loc_41C4EC^^^cmp     dword ptr [rbp-5F8h], 0^^^jz      short loc_41C4EC^^^cmp     qword ptr [rbp-5C0h], 0^^^jz      short loc_41C4EC^^^cmp     dword ptr [rbp-5B8h], 8^^^jnz     short loc_41C4EC^^^mov     rsi, [rbp-590h]^^^mov     byte ptr [rsi-1], 30h^^^sub     rsi, 1^^^mov     [rbp-590h], rsi^^^mov     rdi, [rbp-590h]^^^sub     rdi, [rbp-548h]^^^mov     edx, 0^^^add     rax, rdi^^^mov     [rbp-600h], rdi^^^cmovs   rax, rdx^^^cmp     dword ptr [rbp-5C8h], 0^^^mov     [rbp-5A0h], eax^^^jnz     loc_41C64B^^^mov     edx, [rbp-5A4h]^^^add     edx, edi^^^sub     edx, eax^^^cmp     dword ptr [rbp-5F8h], 0^^^setnz   al^^^cmp     qword ptr [rbp-5C0h], 0^^^setnz   cl^^^and     al, cl^^^mov     [rbp-5A4h], al^^^jz      short loc_41C556^^^cmp     dword ptr [rbp-5B8h], 10h^^^lea     eax, [rdx-2]^^^cmovz   edx, eax^^^mov     eax, [rbp-5F4h]^^^or      eax, r8d^^^or      eax, [rbp-5D8h]^^^cmp     eax, 1^^^adc     edx, 0FFFFFFFFh^^^cmp     byte ptr [rbp-5F0h], 20h^^^jz      loc_41CAD1^^^test    r8d, r8d^^^jz      loc_41CA99^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41CA55^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41CA2A^^^add     r14d, 1^^^cmp     byte ptr [rbp-5A4h], 0^^^jz      short loc_41C5C1^^^cmp     dword ptr [rbp-5B8h], 10h^^^jz      loc_41C86F^^^add     edx, [rbp-5A0h]^^^test    edx, edx^^^jle     short loc_41C5FD^^^movsxd  rdx, edx^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41CA3C^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41CA33^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41CBA6^^^mov     rcx, [rbp-548h]^^^sub     rcx, [rbp-590h]^^^mov     rdi, rbx^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [rbp-590h]^^^mov     rdx, rcx^^^mov     [rbp-650h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-650h]^^^cmp     rcx, rax^^^jz      loc_41CB86^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    r8d, r8d^^^jz      loc_41C833^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41C815^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41C7CA^^^sub     dword ptr [rbp-5A4h], 1^^^add     r14d, 1^^^cmp     dword ptr [rbp-5F8h], 0^^^jz      short loc_41C6A5^^^cmp     qword ptr [rbp-5C0h], 0^^^jz      short loc_41C6A5^^^cmp     dword ptr [rbp-5B8h], 10h^^^jz      loc_41C8C6^^^cmp     dword ptr [rbp-5A0h], 0^^^jle     short loc_41C6E4^^^movsxd  rdx, dword ptr [rbp-5A0h]^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41CA3C^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41C7D3^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41CBA6^^^mov     rcx, [rbp-548h]^^^sub     rcx, [rbp-590h]^^^mov     rdi, rbx^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [rbp-590h]^^^mov     rdx, rcx^^^mov     [rbp-650h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-650h]^^^cmp     rcx, rax^^^jz      loc_41CBE9^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     dword ptr [rbp-5A0h], 1^^^xor     ecx, ecx^^^cmp     byte ptr [rbp-558h], 58h^^^mov     edx, [rbp-5B8h]^^^mov     rsi, [rbp-548h]^^^mov     rdi, [rbp-5C0h]^^^mov     [rbp-660h], r8d^^^setz    cl^^^call    _itoa_word^^^cmp     qword ptr [rbp-598h], 0^^^mov     [rbp-590h], rax^^^mov     r8d, [rbp-660h]^^^jnz     short loc_41C7DC^^^cmp     dword ptr [rbp-5B8h], 0Ah^^^jnz     loc_41C4A0^^^cmp     dword ptr [rbp-608h], 0^^^jz      loc_41C4A0^^^mov     rdx, [rbp-548h]^^^mov     rdi, [rbp-590h]^^^mov     [rbp-660h], r8d^^^mov     rsi, rdx^^^call    _i18n_number_rewrite^^^mov     r8d, [rbp-660h]^^^mov     [rbp-590h], rax^^^jmp     loc_41C4A0^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-600h], 0^^^jz      short loc_41C780^^^mov     rcx, [rbp-5D0h]^^^mov     rdx, [rbp-598h]^^^mov     rdi, rax^^^mov     rsi, [rbp-548h]^^^call    group_number^^^mov     r8d, [rbp-660h]^^^mov     [rbp-590h], rax^^^jmp     loc_41C780^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41C66D^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5D8h], 0^^^jz      loc_41C9F2^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41C9D4^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41C67A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41C9AA^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41C9A1^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41C929^^^movzx   ecx, byte ptr [rbp-558h]^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFEh^^^jz      short loc_41C920^^^add     r14d, 2^^^jmp     loc_41C5C1^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41C983^^^mov     byte ptr [rax], 30h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_41C97A^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41C95E^^^movzx   edx, byte ptr [rbp-558h]^^^mov     [rax], dl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFEh^^^jz      short loc_41C955^^^add     r14d, 2^^^sub     dword ptr [rbp-5A4h], 2^^^jmp     loc_41C6A5^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movzx   esi, byte ptr [rbp-558h]^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41C8B4^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movzx   esi, byte ptr [rbp-558h]^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_41C907^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41C8DF^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41C888^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41C859^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5F4h], 0^^^jz      loc_41C685^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41CA7F^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41C67A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 65Dh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41C59A^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_41CA14^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5D8h], 0^^^jz      loc_41CB4A^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41CB20^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41C5A7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    edx, edx^^^jle     loc_41CBC8^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-660h], r8d^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     r8d, [rbp-660h]^^^ja      loc_41CA3C^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41CBBF^^^add     r14d, edx^^^xor     edx, edx^^^jmp     loc_41C578^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41CABB^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-5F4h], 0^^^jz      loc_41C5AB^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_41CC60^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_41C5A7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^add     r14d, ecx^^^sub     rdx, rax^^^cmp     rcx, rdx^^^jbe     loc_41C308^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 65Dh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^xor     edx, edx^^^jmp     loc_41C578^^^mov     rcx, [rbp-548h]^^^mov     byte ptr [rbp-5F0h], 20h^^^mov     [rbp-590h], rcx^^^jmp     loc_41C4A0^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      loc_41CC93^^^mov     edx, [rbp-600h]^^^sub     edx, [rbp-5A0h]^^^add     r14d, ecx^^^add     edx, [rbp-5A4h]^^^test    edx, edx^^^jle     loc_41C308^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41CA3C^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_41CC8A^^^add     r14d, edx^^^jmp     loc_41C308^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-658h], edx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-658h]^^^jnz     loc_41CB70^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    eax, eax^^^js      loc_41DF63^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41DF18^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_41B3A4^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     byte ptr [rbp-621h], 53h^^^jz      loc_41D9DD^^^cmp     dword ptr [rbp-5B0h], 0^^^jnz     loc_41D9DD^^^cmp     dword ptr [rbp-580h], 0FFFFFFFFh^^^jz      loc_41D93F^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^cmp     dword ptr [rax+0A8h], 1^^^jnz     loc_41D816^^^movsxd  rsi, dword ptr [rbp-580h]^^^mov     rdi, [rbp-548h]^^^call    sub_400330^^^xor     r9d, r9d^^^mov     r8, rax^^^mov     ecx, [rbp-588h]^^^mov     [rbp-580h], r8d^^^sub     ecx, r8d^^^js      loc_41D7D6^^^cmp     dword ptr [rbp-628h], 0^^^jnz     short loc_41D77C^^^test    ecx, ecx^^^jz      short loc_41D77C^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-650h], ecx^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     ecx, [rbp-650h]^^^mov     r8, [rbp-660h]^^^mov     r9d, [rbp-648h]^^^ja      loc_41DF4A^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41DF41^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_41DB79^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r8^^^mov     [rbp-650h], ecx^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^mov     rdi, rbx^^^mov     rsi, [rbp-548h]^^^call    qword ptr [rax+38h]^^^mov     r8, [rbp-660h]^^^mov     ecx, [rbp-650h]^^^mov     r9d, [rbp-648h]^^^cmp     r8, rax^^^jz      loc_41D95D^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^test    r14d, r14d^^^js      loc_41DB79^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r8^^^mov     [rbp-660h], r8^^^mov     rsi, [rbp-548h]^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^mov     r8, [rbp-660h]^^^cmp     r8, rax^^^jz      loc_41D906^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-580h], 400h^^^mov     eax, 400h^^^mov     [rbp-5E0h], rsp^^^cmovbe  eax, [rbp-580h]^^^mov     rdi, [rbp-548h]^^^mov     qword ptr [rbp-50h], 0^^^mov     [rbp-0A0h], rdi^^^cdqe^^^mov     [rbp-618h], rax^^^lea     rax, ds:1Eh[rax*4]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^movsxd  rax, dword ptr [rbp-580h]^^^lea     rcx, [rsp+arg_7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^add     rax, rdi^^^mov     [rbp-5B0h], rcx^^^mov     [rbp-580h], rax^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^cmovnb  rax, [rbp-580h]^^^mov     [rbp-580h], rax^^^jmp     short loc_41D8CD^^^test    r8, r8^^^jz      short loc_41D8DD^^^mov     rdx, [rbp-580h]^^^mov     rcx, [rbp-618h]^^^lea     rsi, [rbp-0A0h]^^^mov     rdi, [rbp-5B0h]^^^sub     rdx, r8^^^lea     r8, [rbp-50h]^^^call    mbsnrtowcs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_41D922^^^mov     r8, [rbp-0A0h]^^^cmp     [rbp-580h], r8^^^ja      short loc_41D89A^^^test    r8, r8^^^jz      loc_41DA68^^^movsxd  rax, dword ptr [rbp-50h]^^^sub     r8, [rbp-548h]^^^and     eax, 7^^^sub     r8, rax^^^xor     r9d, r9d^^^mov     rsp, [rbp-5E0h]^^^jmp     loc_41D6FF^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     r8, rdx^^^ja      short loc_41D931^^^add     r14d, [rbp-580h]^^^jmp     loc_41B3A7^^^mov     r14d, eax^^^mov     rsp, [rbp-5E0h]^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, [rbp-548h]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^xor     r9d, r9d^^^repne scasb^^^not     rcx^^^lea     r8, [rcx-1]^^^jmp     loc_41D6FF^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     r8, rdx^^^ja      short loc_41D9D4^^^add     r14d, [rbp-580h]^^^cmp     dword ptr [rbp-628h], 0^^^jz      short loc_41D9BA^^^test    ecx, ecx^^^jz      short loc_41D9BA^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_padn^^^cmp     r14d, 7FFFFFFEh^^^mov     r9d, [rbp-648h]^^^ja      loc_41DF4A^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_41DB92^^^add     r14d, edx^^^test    r9d, r9d^^^jz      loc_41B3A7^^^mov     rdi, [rbp-548h]^^^call    free^^^jmp     loc_41B3A7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cmp     dword ptr [rbp-580h], 0^^^mov     rdi, [rbp-548h]^^^mov     qword ptr [rbp-40h], 0^^^mov     [rbp-0A0h], rdi^^^js      loc_41DAD6^^^movsxd  rdx, dword ptr [rbp-580h]^^^cmp     rdx, 1000h^^^ja      short loc_41DA83^^^lea     rax, [rdx+1Eh]^^^xor     r9d, r9d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+arg_7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp-548h], rdi^^^mov     rdi, [rbp-548h]^^^lea     rcx, [rbp-40h]^^^lea     rsi, [rbp-0A0h]^^^mov     [rbp-648h], r9d^^^call    wcsrtombs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8, rax^^^mov     r9d, [rbp-648h]^^^jnz     loc_41D6FF^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     rdi, [rbp-548h]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^repne scasb^^^not     rcx^^^lea     r8, [rcx-1]^^^jmp     loc_41D8F7^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^jnz     loc_41DA10^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^call    malloc^^^test    rax, rax^^^mov     [rbp-548h], rax^^^mov     r9d, 1^^^mov     rdx, [rbp-658h]^^^jnz     loc_41DA2E^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^lea     rsi, [rbp-0A0h]^^^lea     rcx, [rbp-40h]^^^xor     edx, edx^^^xor     edi, edi^^^mov     [rbp-610h], rsi^^^call    wcsrtombs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8, rax^^^jz      loc_41DC23^^^cmp     dword ptr [rbp-40h], 0^^^jnz     loc_41DC0A^^^mov     rdi, [rbp-548h]^^^lea     rdx, [rax+1]^^^cmp     rdx, 1000h^^^mov     [rbp-0A0h], rdi^^^ja      short loc_41DB9B^^^lea     rax, [rdx+1Eh]^^^xor     r9d, r9d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+arg_7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp-548h], rdi^^^mov     rsi, [rbp-610h]^^^mov     rdi, [rbp-548h]^^^lea     rcx, [rbp-40h]^^^mov     [rbp-660h], r8^^^mov     [rbp-648h], r9d^^^call    wcsrtombs^^^mov     r8, [rbp-660h]^^^mov     r9d, [rbp-648h]^^^jmp     loc_41D6FF^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D8h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], rax^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^mov     r8, [rbp-660h]^^^jnz     loc_41DB23^^^mov     rdi, rdx^^^mov     [rbp-658h], rdx^^^mov     [rbp-660h], r8^^^call    malloc^^^test    rax, rax^^^mov     [rbp-548h], rax^^^mov     r9d, 1^^^mov     rdx, [rbp-658h]^^^mov     r8, [rbp-660h]^^^jnz     loc_41DB41^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D8h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aMbstate__count^^^call    __assert_fail^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D7h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D8h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^lea     rax, [rbp-0C0h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^mov     [rbp-0A0h], rax^^^call    __printf_fphex^^^jmp     loc_41D068^^^movzx   eax, word ptr [rax]^^^mov     dword ptr [rbp-5D8h], 0^^^xor     r8d, r8d^^^mov     dword ptr [rbp-5F4h], 0^^^mov     [rbp-5C0h], rax^^^jmp     loc_41C441^^^cmp     qword ptr [rbp-548h], 0^^^jnz     loc_41D6A4^^^xor     r9d, r9d^^^cmp     dword ptr [rbp-580h], 5^^^jg      short loc_41EC38^^^cmp     dword ptr [rbp-580h], 0FFFFFFFFh^^^jnz     loc_41FB27^^^mov     r8d, 6^^^mov     qword ptr [rbp-548h], offset null^^^jmp     loc_41D6FF^^^
__tzfile_default$$$push    r15^^^mov     r15, rcx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 28h^^^call    strlen^^^mov     rdi, rbx^^^lea     r13, [rax+1]^^^call    strlen^^^add     rax, 1^^^lea     rdx, [rsp+58h+var_40]^^^mov     edi, offset aPosixrules^^^mov     r14, rax^^^mov     [rsp+58h+var_50], rax^^^add     r14, r13^^^mov     rsi, r14^^^call    __tzfile_read^^^mov     edx, cs:__use_tzfile^^^test    edx, edx^^^jz      loc_449037^^^cmp     cs:num_types, 1^^^jbe     loc_449046^^^mov     rdi, [rsp+58h+var_40]^^^mov     rdx, r13^^^mov     rsi, rbp^^^call    mempcpy^^^mov     rdx, [rsp+58h+var_50]^^^mov     rdi, rax^^^mov     rsi, rbx^^^call    memcpy^^^mov     r9, cs:num_transitions^^^mov     rdx, [rsp+58h+var_40]^^^mov     cs:num_types, 2^^^mov     rdi, cs:types^^^test    r9, r9^^^mov     cs:zone_names, rdx^^^jz      loc_448FB5^^^mov     rax, r15^^^sub     rax, cs:rule_dstoff^^^mov     r11, r12^^^mov     rcx, cs:type_idxs^^^mov     r10, cs:transitions^^^xor     r8d, r8d^^^sub     r11, cs:rule_stdoff^^^mov     [rsp+58h+var_50], rax^^^xor     eax, eax^^^jmp     short loc_448F7E^^^cmp     byte ptr [rdx+0Ah], 0^^^jnz     short loc_448F9C^^^mov     rsi, [rsp+58h+var_50]^^^add     [r10+rax*8], rsi^^^nop     word ptr [rax+rax+00000000h]^^^add     rax, 1^^^movzx   r8d, byte ptr [rdx+8]^^^cmp     rax, r9^^^jnb     short loc_448FAE^^^movzx   edx, byte ptr [rcx+rax]^^^shl     rdx, 4^^^add     rdx, rdi^^^movzx   esi, byte ptr [rdx+8]^^^mov     [rcx+rax], sil^^^cmp     byte ptr [rdx+0Bh], 0^^^jnz     short loc_448F70^^^test    r8d, r8d^^^jnz     short loc_448F58^^^add     [r10+rax*8], r11^^^add     rax, 1^^^cmp     rax, r9^^^movzx   r8d, byte ptr [rdx+8]^^^jb      short loc_448F7E^^^mov     rdx, cs:zone_names^^^mov     rcx, cs:__tzname_cur_max^^^mov     [rdi], r12^^^add     r14, rdx^^^mov     cs:rule_stdoff, r12^^^neg     r12^^^mov     byte ptr [rdi+9], 0^^^mov     byte ptr [rdi+8], 0^^^mov     [rdi+10h], r15^^^mov     cs:rule_dstoff, r15^^^mov     [rdi+19h], r13b^^^mov     byte ptr [rdi+18h], 1^^^mov     cs:tzname, rbp^^^mov     cs:off_6C3298, rbx^^^mov     cs:timezone, r12^^^nop     dword ptr [rax+00h]^^^cmp     byte ptr [rdx], 0^^^mov     rax, rdx^^^jz      short loc_44902E^^^nop     dword ptr [rax+rax+00000000h]^^^add     rax, 1^^^cmp     byte ptr [rax], 0^^^jnz     short loc_449010^^^mov     rsi, rax^^^sub     rsi, rdx^^^cmp     rsi, rcx^^^jbe     short loc_44902E^^^mov     cs:__tzname_cur_max, rsi^^^mov     rcx, rsi^^^lea     rdx, [rax+1]^^^cmp     rdx, r14^^^jb      short loc_449000^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     cs:__use_tzfile, 0^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
_L_lock_8950$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_406823^^^
_L_lock_156$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4027B5^^^
sub_437A38$$$mov     rcx, [rsi]^^^add     rdx, 1^^^sub     rsi, 8^^^sub     rdi, 10h^^^jmp     short loc_437A20^^^
fde_single_encoding_compare$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^mov     r13, rdx^^^mov     [rsp+var_18], r12^^^sub     rsp, 38h^^^movzx   r12d, word ptr [rdi+20h]^^^mov     r14, rsi^^^lea     rdx, [rdi+10h]^^^lea     rsi, [rdi+8]^^^shr     r12w, 3^^^movzx   r12d, r12b^^^mov     edi, r12d^^^call    base_from_object_isra_3^^^lea     rdx, [r14+8]^^^mov     rcx, rsp^^^mov     edi, r12d^^^mov     rsi, rax^^^mov     rbp, rax^^^call    read_encoded_value_with_base_0^^^movzx   edi, word ptr [rbx+20h]^^^lea     rdx, [r13+8]^^^lea     rcx, [rsp+38h+var_30]^^^mov     rsi, rbp^^^shr     di, 3^^^movzx   edi, dil^^^call    read_encoded_value_with_base_0^^^mov     rdx, [rsp+38h+var_30]^^^cmp     [rsp+38h+var_38], rdx^^^mov     eax, 1^^^mov     rcx, [rsp+38h+var_30]^^^mov     rbx, [rsp+38h+var_28]^^^mov     rbp, [rsp+38h+var_20]^^^mov     r12, [rsp+38h+var_18]^^^mov     r13, [rsp+38h+var_10]^^^mov     r14, [rsp+38h+var_8]^^^sbb     edx, edx^^^cmp     [rsp+38h+var_38], rcx^^^cmovbe  eax, edx^^^add     rsp, 38h^^^retn^^^
__memset_sse2$$$cmp     rdx, 1^^^mov     rax, rdi^^^jnz     short loc_40A30D^^^mov     [rdi], sil^^^retn^^^mov     r9, 101010101010101h^^^mov     r8, rdx^^^movzx   rdx, sil^^^imul    rdx, r9^^^cmp     r8, 90h^^^jg      loc_40A600^^^add     rdi, r8^^^lea     r11, off_498110^^^jmp     qword ptr [r11+r8*8]^^^retn^^^mov     [rdi-89h], rdx^^^mov     [rdi-81h], rdx^^^mov     [rdi-79h], rdx^^^mov     [rdi-71h], rdx^^^mov     [rdi-69h], rdx^^^mov     [rdi-61h], rdx^^^mov     [rdi-59h], rdx^^^mov     [rdi-51h], rdx^^^mov     [rdi-49h], rdx^^^mov     [rdi-41h], rdx^^^mov     [rdi-39h], rdx^^^mov     [rdi-31h], rdx^^^mov     [rdi-29h], rdx^^^mov     [rdi-21h], rdx^^^mov     [rdi-19h], rdx^^^mov     [rdi-11h], rdx^^^mov     [rdi-9], rdx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-90h], rdx^^^mov     [rdi-88h], rdx^^^mov     [rdi-80h], rdx^^^mov     [rdi-78h], rdx^^^mov     [rdi-70h], rdx^^^mov     [rdi-68h], rdx^^^mov     [rdi-60h], rdx^^^mov     [rdi-58h], rdx^^^mov     [rdi-50h], rdx^^^mov     [rdi-48h], rdx^^^mov     [rdi-40h], rdx^^^mov     [rdi-38h], rdx^^^mov     [rdi-30h], rdx^^^mov     [rdi-28h], rdx^^^mov     [rdi-20h], rdx^^^mov     [rdi-18h], rdx^^^mov     [rdi-10h], rdx^^^mov     [rdi-8], rdx^^^retn^^^mov     [rdi-8Ah], rdx^^^mov     [rdi-82h], rdx^^^mov     [rdi-7Ah], rdx^^^mov     [rdi-72h], rdx^^^mov     [rdi-6Ah], rdx^^^mov     [rdi-62h], rdx^^^mov     [rdi-5Ah], rdx^^^mov     [rdi-52h], rdx^^^mov     [rdi-4Ah], rdx^^^mov     [rdi-42h], rdx^^^mov     [rdi-3Ah], rdx^^^mov     [rdi-32h], rdx^^^mov     [rdi-2Ah], rdx^^^mov     [rdi-22h], rdx^^^mov     [rdi-1Ah], rdx^^^mov     [rdi-12h], rdx^^^mov     [rdi-0Ah], rdx^^^mov     [rdi-2], dx^^^retn^^^mov     [rdi-8Bh], rdx^^^mov     [rdi-83h], rdx^^^mov     [rdi-7Bh], rdx^^^mov     [rdi-73h], rdx^^^mov     [rdi-6Bh], rdx^^^mov     [rdi-63h], rdx^^^mov     [rdi-5Bh], rdx^^^mov     [rdi-53h], rdx^^^mov     [rdi-4Bh], rdx^^^mov     [rdi-43h], rdx^^^mov     [rdi-3Bh], rdx^^^mov     [rdi-33h], rdx^^^mov     [rdi-2Bh], rdx^^^mov     [rdi-23h], rdx^^^mov     [rdi-1Bh], rdx^^^mov     [rdi-13h], rdx^^^mov     [rdi-0Bh], rdx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-8Ch], rdx^^^mov     [rdi-84h], rdx^^^mov     [rdi-7Ch], rdx^^^mov     [rdi-74h], rdx^^^mov     [rdi-6Ch], rdx^^^mov     [rdi-64h], rdx^^^mov     [rdi-5Ch], rdx^^^mov     [rdi-54h], rdx^^^mov     [rdi-4Ch], rdx^^^mov     [rdi-44h], rdx^^^mov     [rdi-3Ch], rdx^^^mov     [rdi-34h], rdx^^^mov     [rdi-2Ch], rdx^^^mov     [rdi-24h], rdx^^^mov     [rdi-1Ch], rdx^^^mov     [rdi-14h], rdx^^^mov     [rdi-0Ch], rdx^^^mov     [rdi-4], edx^^^retn^^^mov     [rdi-8Dh], rdx^^^mov     [rdi-85h], rdx^^^mov     [rdi-7Dh], rdx^^^mov     [rdi-75h], rdx^^^mov     [rdi-6Dh], rdx^^^mov     [rdi-65h], rdx^^^mov     [rdi-5Dh], rdx^^^mov     [rdi-55h], rdx^^^mov     [rdi-4Dh], rdx^^^mov     [rdi-45h], rdx^^^mov     [rdi-3Dh], rdx^^^mov     [rdi-35h], rdx^^^mov     [rdi-2Dh], rdx^^^mov     [rdi-25h], rdx^^^mov     [rdi-1Dh], rdx^^^mov     [rdi-15h], rdx^^^mov     [rdi-0Dh], rdx^^^mov     [rdi-5], edx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-8Eh], rdx^^^mov     [rdi-86h], rdx^^^mov     [rdi-7Eh], rdx^^^mov     [rdi-76h], rdx^^^mov     [rdi-6Eh], rdx^^^mov     [rdi-66h], rdx^^^mov     [rdi-5Eh], rdx^^^mov     [rdi-56h], rdx^^^mov     [rdi-4Eh], rdx^^^mov     [rdi-46h], rdx^^^mov     [rdi-3Eh], rdx^^^mov     [rdi-36h], rdx^^^mov     [rdi-2Eh], rdx^^^mov     [rdi-26h], rdx^^^mov     [rdi-1Eh], rdx^^^mov     [rdi-16h], rdx^^^mov     [rdi-0Eh], rdx^^^mov     [rdi-6], edx^^^mov     [rdi-2], dx^^^retn^^^mov     [rdi-8Fh], rdx^^^mov     [rdi-87h], rdx^^^mov     [rdi-7Fh], rdx^^^mov     [rdi-77h], rdx^^^mov     [rdi-6Fh], rdx^^^mov     [rdi-67h], rdx^^^mov     [rdi-5Fh], rdx^^^mov     [rdi-57h], rdx^^^mov     [rdi-4Fh], rdx^^^mov     [rdi-47h], rdx^^^mov     [rdi-3Fh], rdx^^^mov     [rdi-37h], rdx^^^mov     [rdi-2Fh], rdx^^^mov     [rdi-27h], rdx^^^mov     [rdi-1Fh], rdx^^^mov     [rdi-17h], rdx^^^mov     [rdi-0Fh], rdx^^^mov     [rdi-7], edx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^mov     r10, 10h^^^mov     r9, rdi^^^and     r9, 0Fh^^^sub     r10, r9^^^and     r10, 0Fh^^^add     rdi, r10^^^sub     r8, r10^^^lea     r11, off_4985A0^^^jmp     qword ptr [r11+r10*8]^^^
sub_40D056$$$mov     [rdi-8], rdx^^^jmp     short loc_40D0CA^^^
ptmalloc_unlock_all2$$$mov     edx, cs:__libc_malloc_initialized^^^test    edx, edx^^^jle     locret_4026FF^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rcx, cs:save_arena^^^xor     edx, edx^^^mov     cs:free_list, 0^^^mov     fs:[rax], rcx^^^mov     rax, cs:save_malloc_hook^^^mov     cs:__malloc_hook, rax^^^mov     rax, cs:save_free_hook^^^mov     cs:__free_hook, rax^^^mov     eax, offset main_arena^^^xchg    ax, ax^^^cmp     rax, rcx^^^mov     dword ptr [rax], 0^^^jz      short loc_4026D5^^^mov     [rax+870h], rdx^^^mov     rdx, rax^^^mov     rax, [rax+868h]^^^cmp     rax, offset main_arena^^^jnz     short loc_4026C0^^^mov     cs:free_list, rdx^^^mov     cs:list_lock, 0^^^mov     cs:atfork_recursive_cntr, 0^^^rep retn^^^
sub_40D050$$$mov     [rdi-0Dh], dl^^^
sub_40D053$$$mov     [rdi-0Ch], edx^^^
argz_count$$$push    r12             ^^^xor     r12d, r12d^^^test    rsi, rsi^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^jz      short loc_4381B1^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, rbx^^^add     r12, 1^^^call    strlen^^^lea     rbx, [rbx+rax+1]^^^not     rax^^^add     rbp, rax^^^jnz     short loc_438198^^^pop     rbx^^^pop     rbp^^^mov     rax, r12^^^pop     r12^^^retn^^^
sub_473866$$$mov     dword ptr [rbp-1144h], 10h^^^jmp     loc_47254B^^^
__libc_enable_asynccancel$$$mov     eax, fs:308h^^^mov     r11d, eax^^^or      r11d, 2^^^cmp     r11d, eax^^^jz      short locret_410A5B^^^lock cmpxchg fs:308h, r11d^^^jnz     short loc_410A38^^^and     r11d, 0FFFFFFBBh^^^cmp     r11d, 0Ah^^^jz      short loc_410A5C^^^retn^^^sub     rsp, 8^^^mov     qword ptr fs:630h, 0FFFFFFFFFFFFFFFFh^^^lock or dword ptr fs:308h, 10h^^^mov     rdi, fs:300h^^^call    near ptr 0^^^hlt^^^
_L_lock_1379$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_465646^^^
strsep$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^mov     rbx, [rdi]^^^mov     rbp, rdi^^^test    rbx, rbx^^^jz      short loc_475B79^^^movzx   eax, byte ptr [rsi]^^^test    al, al^^^jz      short loc_475B71^^^cmp     byte ptr [rsi+1], 0^^^jnz     short loc_475B90^^^movzx   edx, byte ptr [rbx]^^^cmp     al, dl^^^jz      short loc_475BC0^^^test    dl, dl^^^jnz     short loc_475BB0^^^mov     qword ptr [rbp+0], 0^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^retn^^^mov     rdi, rbx^^^call    strpbrk^^^test    rax, rax^^^jz      short loc_475B71^^^mov     byte ptr [rax], 0^^^add     rax, 1^^^mov     [rbp+0], rax^^^jmp     short loc_475B79^^^lea     rdi, [rbx+1]^^^movsx   esi, al^^^call    sub_4003C0^^^jmp     short loc_475B98^^^mov     rax, rbx^^^jmp     short loc_475B9D^^^
__strncasecmp_l_avx$$$mov     rax, [rcx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strncasecmp_l_nonascii^^^test    rdx, rdx^^^jz      loc_488D71^^^cmp     rdx, 1^^^jz      loc_488D80^^^mov     r11, rdx^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^vmovdqa xmm4, cs:xmmword_49CA70^^^vmovdqa xmm5, cs:xmmword_49CAA0^^^vmovdqa xmm6, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      short loc_4874C0^^^cmp     eax, 30h^^^ja      short loc_4874C0^^^vmovdqu xmm1, xmmword ptr [rdi]^^^vmovdqu xmm2, xmmword ptr [rsi]^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpxor   xmm0, xmm0, xmm0^^^vpcmpeqb xmm0, xmm0, xmm1^^^vpcmpeqb xmm1, xmm1, xmm2^^^vpsubb  xmm1, xmm1, xmm0^^^vpmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_488D50^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     word ptr [rax+rax+00h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^vpxor   xmm0, xmm0, xmm0^^^cmp     ecx, eax^^^jz      short loc_487510^^^ja      short loc_4874E7^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^vmovdqa xmm2, xmmword ptr [rdi]^^^vmovdqa xmm1, xmmword ptr [rsi]^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_4B2D18^^^movsxd  r9, dword ptr [r10+r9*4]^^^vpcmpeqb xmm0, xmm0, xmm1^^^lea     r10, [r10+r9]^^^jmp     r10^^^vmovdqa xmm1, xmmword ptr [rsi]^^^vpcmpeqb xmm0, xmm0, xmm1^^^vmovdqa xmm2, xmmword ptr [rdi]^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm1, xmm1, xmm2^^^vpsubb  xmm1, xmm1, xmm0^^^vpmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9, 10h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00h]^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_487630^^^sub     r11, 10h^^^jbe     loc_488D71^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_487630^^^sub     r11, 10h^^^jbe     loc_488D71^^^jmp     loc_487590^^^jnb     loc_488D71^^^sub     r11, rcx^^^jbe     loc_488D71^^^lea     rcx, [rdx+rcx-10h]^^^movzx   eax, byte ptr [rdi+rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^lea     rcx, unk_4A3180^^^mov     eax, [rcx+rax*4]^^^mov     edx, [rcx+rdx*4]^^^sub     eax, edx^^^retn^^^vpslldq xmm2, xmm2, 0Fh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4877B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 1^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4877B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 1^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_4876F0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 1^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 0Eh^^^ja      loc_4876FA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 0Eh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_487930^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 2^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_487930^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 2^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_487870^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 2^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 0Dh^^^ja      loc_48787A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 0Dh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^add     r10, 10h^^^jg      loc_487AB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 3^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_487AB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 3^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_4879E8^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 3^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 0Ch^^^ja      loc_4879F2^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 0Ch^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_487C30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 4^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_487C30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 4^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_487B70^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 4^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 0Bh^^^ja      loc_487B7A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 0Bh^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_487DB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 5^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_487DB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 5^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_487CF0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 5^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 0Ah^^^ja      loc_487CFA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 0Ah^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_487F30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 6^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_487F30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 6^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_487E70^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 6^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 9^^^ja      loc_487E7A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 9^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4880B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 7^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4880B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 7^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_487FF0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 7^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 8^^^ja      loc_487FFA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 8^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_488230^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 8^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_488230^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 8^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_488170^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 8^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 7^^^ja      loc_48817A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 7^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4883B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 9^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4883B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 9^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_4882F0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 9^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 6^^^ja      loc_4882FA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 6^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_488530^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_488530^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_488470^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Ah^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 5^^^ja      loc_48847A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 5^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4886B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4886B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_4885F0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Bh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 4^^^ja      loc_4885FA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 4^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_488830^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_488830^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_488770^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Ch^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 3^^^ja      loc_48877A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 3^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4889B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_4889B0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_4888F0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Dh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 2^^^ja      loc_4888FA^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 2^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_488B30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_488B30^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_488A70^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Eh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_488CD6^^^cmp     ecx, 1^^^ja      loc_488A7A^^^jmp     loc_488CD6^^^vpslldq xmm2, xmm2, 1^^^vpcmpgtb xmm7, xmm1, xmm4^^^vpcmpgtb xmm8, xmm1, xmm5^^^vpcmpgtb xmm9, xmm2, xmm4^^^vpcmpgtb xmm10, xmm2, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm1, xmm8, xmm1^^^vpor    xmm2, xmm10, xmm2^^^vpcmpeqb xmm2, xmm2, xmm1^^^vpsubb  xmm2, xmm2, xmm0^^^vpmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_488D3D^^^vmovdqa xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_488D71^^^test    r9, r9^^^jz      loc_488D71^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     dword ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_488CB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^add     r10, 10h^^^jg      short loc_488CB0^^^vmovdqa xmm0, xmmword ptr [rdi+rdx]^^^vpalignr xmm0, xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^jbe     short loc_488D10^^^sub     r11, 10h^^^jbe     loc_488D71^^^add     rdx, 10h^^^jmp     loc_488BF0^^^sub     r10, 1000h^^^vmovdqa xmm0, xmmword ptr [rdi+rdx-10h]^^^vpsrldq xmm0, xmm0, 0Fh^^^vpcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     short loc_488CD6^^^cmp     ecx, 0^^^ja      loc_488BFA^^^vmovdqa xmm1, xmmword ptr [rsi+rdx]^^^vpcmpgtb xmm7, xmm0, xmm4^^^vpcmpgtb xmm8, xmm0, xmm5^^^vpcmpgtb xmm9, xmm1, xmm4^^^vpcmpgtb xmm10, xmm1, xmm5^^^vpandn  xmm8, xmm8, xmm7^^^vpandn  xmm10, xmm10, xmm9^^^vpand   xmm8, xmm8, xmm6^^^vpand   xmm10, xmm10, xmm6^^^vpor    xmm0, xmm8, xmm0^^^vpor    xmm1, xmm10, xmm1^^^vpcmpistri xmm0, xmm1, 1Ah^^^nop     word ptr [rax+rax+00h]^^^jnb     short loc_488D71^^^sub     r11, rcx^^^jbe     short loc_488D71^^^add     rdx, rcx^^^lea     rdi, [rdi+r9-10h]^^^movzx   eax, byte ptr [rdi+rdx]^^^movzx   edx, byte ptr [rsi+rdx]^^^test    r8d, r8d^^^jz      short loc_488D2D^^^xchg    eax, edx^^^lea     rcx, unk_4A3180^^^mov     edx, [rcx+rdx*4]^^^mov     eax, [rcx+rax*4]^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_488D50^^^xchg    rsi, rdi^^^nop     dword ptr [rax]^^^bsf     rdx, rdx^^^sub     r11, rdx^^^jbe     short loc_488D71^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^movzx   ecx, byte ptr [rsi]^^^movzx   eax, byte ptr [rdi]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
____strtoll_l_internal$$$push    r15^^^push    r14^^^mov     r14, rsi^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 38h^^^test    ecx, ecx^^^mov     rax, [r8+8]^^^jnz     loc_4196DA^^^xor     ecx, ecx^^^xor     r12d, r12d^^^cmp     edx, 1^^^jz      loc_4194B0^^^mov     eax, edx^^^shr     eax, 1Fh^^^test    al, al^^^jnz     loc_4194B0^^^cmp     edx, 24h^^^jg      loc_4194B0^^^movzx   eax, byte ptr [rbx]^^^mov     r9, [r8+68h]^^^mov     r13, rbx^^^movsx   rsi, al^^^test    byte ptr [r9+rsi*2+1], 20h^^^jz      short loc_419375^^^nop     word ptr [rax+rax+00h]^^^add     r13, 1^^^movzx   eax, byte ptr [r13+0]^^^movsx   rsi, al^^^test    byte ptr [r9+rsi*2+1], 20h^^^jnz     short loc_419360^^^test    al, al^^^mov     r15d, eax^^^jz      loc_419702^^^cmp     al, 2Dh^^^jz      loc_41961A^^^cmp     al, 2Bh^^^mov     [rsp+68h+var_44], 0^^^jz      loc_4194EB^^^cmp     r15b, 30h^^^jz      loc_4195E2^^^test    edx, edx^^^jz      loc_4194CF^^^cmp     edx, 0Ah^^^jz      loc_4194CF^^^lea     ecx, [rdx-2]^^^xor     ebp, ebp^^^xor     eax, eax^^^movsxd  rcx, ecx^^^test    r15b, r15b^^^mov     r9, ds:__strtol_ul_max_tab[rcx*8]^^^movzx   ecx, ds:__strtol_ul_rem_tab[rcx]^^^mov     [rsp+68h+var_48], ecx^^^jz      loc_419561^^^cmp     rax, r13^^^jz      loc_41965F^^^lea     rcx, [rbp-1]^^^mov     rsi, r13^^^xor     r10d, r10d^^^xor     edi, edi^^^movsxd  r11, edx^^^mov     [rsp+68h+var_40], rcx^^^nop     word ptr [rax+rax+00000000h]^^^lea     ecx, [r15-30h]^^^cmp     cl, 9^^^jbe     loc_41951F^^^test    rbp, rbp^^^jz      loc_419504^^^cmp     [r12], r15b^^^jnz     loc_419504^^^xor     ecx, ecx^^^mov     [rsp+68h+var_68], rax^^^jmp     short loc_41943E^^^movzx   eax, byte ptr [rsi+rcx]^^^cmp     [r12+rcx], al^^^jnz     loc_419500^^^add     rcx, 1^^^cmp     rcx, rbp^^^jnz     short loc_419430^^^mov     rcx, [rsp+68h+var_40]^^^mov     rax, [rsp+68h+var_68]^^^add     rcx, rsi^^^nop     dword ptr [rax+rax+00h]^^^movzx   r15d, byte ptr [rcx+1]^^^lea     rsi, [rcx+1]^^^test    r15b, r15b^^^jz      loc_419558^^^cmp     rax, rsi^^^jnz     short loc_419400^^^test    r14, r14^^^jz      short loc_419477^^^mov     [r14], rsi^^^test    r10d, r10d^^^jnz     loc_4195B0^^^cmp     [rsp+68h+var_44], 1^^^mov     rdx, 8000000000000000h^^^sbb     rax, rax^^^add     rax, rdx^^^cmp     rax, rdi^^^jb      loc_4195B0^^^mov     edx, [rsp+68h+var_44]^^^mov     rax, rdi^^^neg     rax^^^test    edx, edx^^^cmovz   rax, rdi^^^jmp     short loc_4194C0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    rcx, rcx^^^jnz     loc_419667^^^mov     ecx, 8^^^mov     edx, 0Ah^^^xor     ebp, ebp^^^xor     eax, eax^^^jmp     loc_4193BA^^^movzx   r15d, byte ptr [r13+1]^^^add     r13, 1^^^jmp     loc_419398^^^mov     rax, [rsp+68h+var_68]^^^mov     rcx, [r8+68h]^^^movzx   r15d, r15b^^^test    byte ptr [rcx+r15*2+1], 4^^^jz      short loc_419558^^^mov     rcx, [r8+78h]^^^mov     ecx, [rcx+r15*4]^^^sub     ecx, 37h^^^movzx   r15d, cl^^^cmp     edx, r15d^^^jle     short loc_419558^^^cmp     r9, rdi^^^jb      short loc_4195A0^^^cmp     rdi, r9^^^jz      short loc_419598^^^imul    rdi, r11^^^movzx   ecx, cl^^^add     rdi, rcx^^^mov     rcx, rsi^^^movzx   r15d, byte ptr [rcx+1]^^^lea     rsi, [rcx+1]^^^test    r15b, r15b^^^jnz     loc_41946A^^^nop     dword ptr [rax+00000000h]^^^cmp     r13, rsi^^^jnz     loc_41946F^^^xor     eax, eax^^^test    r14, r14^^^jz      loc_4194C0^^^mov     rdx, r13^^^sub     rdx, rbx^^^cmp     rdx, 1^^^jle     short loc_41958B^^^movsx   rcx, byte ptr [r13-1]^^^mov     rdx, [r8+78h]^^^cmp     dword ptr [rdx+rcx*4], 58h^^^jz      loc_419648^^^mov     [r14], rbx^^^xor     eax, eax^^^jmp     loc_4194C0^^^cmp     [rsp+68h+var_48], r15d^^^jnb     short loc_419532^^^nop^^^mov     rcx, rsi^^^mov     r10d, 1^^^jmp     loc_419458^^^cmp     [rsp+68h+var_44], 1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rdx, 8000000000000000h^^^mov     dword ptr fs:[rax], 22h^^^sbb     rax, rax^^^add     rsp, 38h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^add     rax, rdx^^^pop     r15^^^retn^^^test    edx, edx^^^setz    al^^^cmp     edx, 10h^^^jz      short loc_4195F4^^^test    al, al^^^jz      loc_4193AA^^^movsx   rdi, byte ptr [r13+1]^^^mov     rsi, [r8+78h]^^^cmp     dword ptr [rsi+rdi*4], 58h^^^jz      short loc_419630^^^test    al, al^^^jz      loc_4193AA^^^mov     ecx, 6^^^mov     edx, 8^^^jmp     loc_4193B6^^^movzx   r15d, byte ptr [r13+1]^^^mov     [rsp+68h+var_44], 1^^^add     r13, 1^^^jmp     loc_419398^^^movzx   r15d, byte ptr [r13+2]^^^mov     ecx, 0Eh^^^add     r13, 2^^^mov     edx, 10h^^^jmp     loc_4193B6^^^cmp     byte ptr [r13-2], 30h^^^jnz     loc_41958B^^^sub     r13, 1^^^mov     [r14], r13^^^jmp     loc_4194C0^^^mov     r13, rax^^^jmp     loc_419561^^^mov     rdi, r12^^^mov     [rsp+68h+var_50], rcx^^^mov     [rsp+68h+var_60], r8^^^mov     [rsp+68h+var_58], r9^^^call    strlen^^^test    rax, rax^^^mov     rbp, rax^^^mov     rdi, rax^^^mov     rcx, [rsp+68h+var_50]^^^mov     r8, [rsp+68h+var_60]^^^mov     r9, [rsp+68h+var_58]^^^jz      loc_419792^^^movzx   edx, byte ptr [r12]^^^xor     eax, eax^^^mov     rsi, rcx^^^cmp     dl, r15b^^^jz      short loc_4196BC^^^jmp     short loc_41970D^^^movzx   ecx, byte ptr [r13+rax+0]^^^cmp     [r12+rax], cl^^^jnz     short loc_41970A^^^add     rax, 1^^^cmp     rax, rdi^^^jnz     short loc_4196B0^^^mov     r15d, edx^^^mov     rax, r13^^^mov     ecx, 8^^^mov     edx, 0Ah^^^jmp     loc_4193BA^^^mov     rcx, [rax+50h]^^^movzx   esi, byte ptr [rcx]^^^sub     esi, 1^^^cmp     sil, 7Dh^^^ja      loc_419320^^^mov     r12, [rax+48h]^^^cmp     byte ptr [r12], 0^^^jz      loc_419320^^^jmp     loc_419325^^^mov     r13, rbx^^^jmp     loc_419561^^^mov     rcx, rsi^^^test    r15b, r15b^^^mov     rsi, r13^^^jz      short loc_419750^^^mov     r10d, edx^^^lea     eax, [r15-30h]^^^cmp     al, 9^^^jbe     short loc_419743^^^xor     eax, eax^^^cmp     [rsi], r10b^^^jz      short loc_41973A^^^jmp     short loc_419779^^^movzx   edx, byte ptr [rsi+rax]^^^cmp     [r12+rax], dl^^^jnz     short loc_419779^^^add     rax, 1^^^cmp     rax, rdi^^^jnz     short loc_419730^^^add     rsi, 1^^^movzx   r15d, byte ptr [rsi]^^^test    r15b, r15b^^^jnz     short loc_419718^^^mov     rdx, r12^^^mov     rdi, r13^^^mov     [rsp+68h+var_60], r8^^^call    __correctly_grouped_prefixmb^^^movzx   r15d, byte ptr [r13+0]^^^mov     ecx, 8^^^mov     edx, 0Ah^^^mov     r8, [rsp+68h+var_60]^^^jmp     loc_4193BA^^^movzx   r15d, r15b^^^test    byte ptr [r9+r15*2+1], 4^^^jz      short loc_419750^^^mov     rax, [r8+78h]^^^cmp     dword ptr [rax+r15*4], 40h^^^jle     short loc_419743^^^jmp     short loc_419750^^^mov     rax, r13^^^mov     ecx, 8^^^mov     edx, 0Ah^^^jmp     loc_4193BA^^^
read_encoded_value_with_base_0$$$cmp     dil, 50h^^^push    rbx^^^mov     r11, rcx^^^jz      loc_4930D8^^^movzx   r10d, dil^^^mov     eax, r10d^^^and     eax, 0Fh^^^cmp     eax, 0Ch        ^^^jbe     short loc_492FC8^^^call    abort           ^^^lea     rcx, off_4B3C1C^^^movsxd  rax, dword ptr [rcx+rax*4]^^^add     rcx, rax^^^jmp     rcx             ^^^mov     r8, [rdx]       ^^^lea     rax, [rdx+8]^^^test    r8, r8^^^jz      short loc_493003^^^and     r10d, 70h^^^cmp     r10d, 10h^^^cmovz   rsi, rdx^^^add     r8, rsi^^^test    dil, dil^^^jns     short loc_493003^^^mov     r8, [r8]^^^mov     [r11], r8^^^pop     rbx^^^retn^^^movsx   r8, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     short loc_492FE7^^^mov     rax, rdx        ^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   ebx, byte ptr [rax]^^^mov     r9d, 7Fh^^^add     rax, 1^^^and     r9, rbx^^^shl     r9, cl^^^add     ecx, 7^^^or      r8, r9^^^test    bl, bl^^^js      short loc_493030^^^cmp     ecx, 3Fh^^^ja      short loc_492FE7^^^and     ebx, 40h^^^jz      short loc_492FE7^^^mov     r9, 0FFFFFFFFFFFFFFFFh^^^shl     r9, cl^^^or      r8, r9^^^jmp     short loc_492FE7^^^movsxd  r8, dword ptr [rdx]^^^lea     rax, [rdx+4]^^^jmp     loc_492FE7^^^mov     r8d, [rdx]      ^^^lea     rax, [rdx+4]^^^jmp     loc_492FE7^^^movzx   r8d, word ptr [rdx]^^^lea     rax, [rdx+2]^^^jmp     loc_492FE7^^^mov     rax, rdx        ^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   ebx, byte ptr [rax]^^^mov     r9d, 7Fh^^^add     rax, 1^^^and     r9, rbx^^^shl     r9, cl^^^add     ecx, 7^^^or      r8, r9^^^test    bl, bl^^^js      short loc_4930B0^^^jmp     loc_492FE7^^^lea     rax, [rdx+7]^^^pop     rbx^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^mov     r8, [rax]^^^add     rax, 8^^^mov     [r11], r8^^^retn^^^
_int_memalign$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_10], r14^^^mov     rbx, rsi^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     r14, rdi^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_8], r15^^^sub     rsp, 38h^^^cmp     rsi, 10h^^^jbe     loc_406700^^^cmp     rsi, 1Fh^^^ja      loc_4066D0^^^mov     ebx, 20h^^^cmp     rdx, 0FFFFFFFFFFFFFFBFh^^^ja      loc_406760^^^add     rdx, 17h^^^mov     r12d, 20h^^^mov     rdi, r14^^^mov     rax, rdx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^cmp     rdx, 20h^^^cmovnb  r12, rax^^^lea     rsi, [r12+rbx+20h]^^^call    _int_malloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_4066A0^^^xor     edx, edx^^^lea     rcx, [rax-10h]^^^div     rbx^^^test    rdx, rdx^^^jz      loc_40664D^^^lea     r13, [rbp+rbx-1]^^^mov     rax, rbx^^^neg     rax^^^and     r13, rax^^^sub     r13, 10h^^^mov     rax, r13^^^sub     rax, rcx^^^cmp     rax, 1Fh^^^jbe     loc_406730^^^mov     rdx, [rbp-8]^^^mov     r15, rdx^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^sub     r15, rax^^^and     edx, 2^^^jnz     loc_406740^^^cmp     r14, offset main_arena^^^mov     rdx, r15^^^jz      loc_406775^^^or      rdx, 5^^^mov     esi, 4^^^mov     [r13+8], rdx^^^or      qword ptr [r13+r15+8], 1^^^mov     rdx, [rbp-8]^^^and     edx, 7^^^or      rdx, rsi^^^mov     rdi, r14^^^mov     rsi, rcx^^^or      rdx, rax^^^mov     [rbp-8], rdx^^^mov     edx, 1^^^call    _int_free^^^cmp     r12, r15^^^ja      loc_406791^^^lea     rbp, [r13+10h]^^^xor     edx, edx^^^mov     rax, rbp^^^div     rbx^^^test    rdx, rdx^^^jnz     loc_406791^^^mov     rcx, r13^^^mov     rax, [rcx+8]^^^test    al, 2^^^jnz     short loc_4066A0^^^lea     rdx, [r12+20h]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rax, rdx^^^jbe     short loc_4066A0^^^sub     rax, r12^^^xor     edx, edx^^^cmp     r14, offset main_arena^^^setnz   dl^^^lea     rsi, [rcx+r12]^^^or      rax, 1^^^shl     rdx, 2^^^mov     rdi, r14^^^or      rax, rdx^^^mov     edx, 1^^^mov     [rsi+8], rax^^^mov     rax, [rcx+8]^^^and     eax, 7^^^or      rax, r12^^^mov     [rcx+8], rax^^^call    _int_free^^^mov     rax, rbp^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^lea     rax, [rsi-1]^^^test    rax, rsi^^^jz      loc_406561^^^cmp     rsi, 20h^^^jz      loc_406561^^^mov     eax, 20h^^^nop     dword ptr [rax+00h]^^^add     rax, rax^^^cmp     rbx, rax^^^ja      short loc_4066F0^^^mov     rbx, rax^^^jmp     loc_406561^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     rsi, rdx^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     _int_malloc^^^add     r13, rbx^^^mov     rax, r13^^^sub     rax, rcx^^^jmp     loc_4065D1^^^add     rax, [rbp-10h]^^^or      r15, 2^^^lea     rbp, [r13+10h]^^^mov     [r13+8], r15^^^mov     [r13+0], rax^^^jmp     loc_4066A0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebp, ebp^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_4066A0^^^or      rdx, 1^^^xor     esi, esi^^^mov     [r13+8], rdx^^^or      qword ptr [r13+r15+8], 1^^^mov     rdx, [rbp-8]^^^and     edx, 7^^^jmp     loc_406612^^^mov     ecx, offset __func___12766^^^mov     edx, 11DDh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNewsizeNbUnsig^^^call    __malloc_assert^^^
sub_41E644$$$mov     dword ptr [rbp-610h], 0Ah^^^movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      loc_41F0F9^^^movsxd  rax, dword ptr [rax+30h]^^^shl     rax, 4^^^cmp     dword ptr [rbp-5B0h], 0^^^jz      loc_41F0C8^^^mov     rdx, [rbp-578h]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^mov     r8, [rdx+rax]^^^jmp     loc_41D0F2^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41F138^^^mov     rcx, [rbp-578h]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^movzx   r8d, byte ptr [rcx+rax]^^^jmp     loc_41D0F2^^^cmp     dword ptr [rbp-5B0h], 0^^^mov     edx, [r12]^^^jz      short loc_41F178^^^cmp     edx, 30h^^^jnb     short loc_41F168^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^jmp     loc_41D0F2^^^cmp     dword ptr [rbp-620h], 0^^^jnz     short loc_41F1B4^^^mov     rsi, [rbp-578h]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^mov     r8d, [rsi+rax]^^^jmp     loc_41D0F2^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F119^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41F1EC^^^cmp     edx, 30h^^^jnb     short loc_41F1DC^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, byte ptr [rax]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^jmp     loc_41D0F2^^^mov     rdi, [rbp-578h]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^movzx   r8d, word ptr [rdi+rax]^^^jmp     loc_41D0F2^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F194^^^cmp     dword ptr [rbp-620h], 0^^^jnz     loc_41F281^^^cmp     edx, 30h^^^jnb     short loc_41F271^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8d, [rax]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^jmp     loc_41D0F2^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F20C^^^cmp     edx, 30h^^^jnb     short loc_41F2E3^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, word ptr [rax]^^^mov     dword ptr [rbp-5E0h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-618h], 0^^^jmp     loc_41D0F2^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F294^^^
memcpy$$$cmp     rdx, 20h^^^mov     rax, rdi^^^jnb     short loc_40B280^^^test    dl, 1^^^jz      short loc_40B219^^^movzx   ecx, byte ptr [rsi]^^^mov     [rdi], cl^^^inc     rsi^^^inc     rdi^^^test    dl, 2^^^jz      short loc_40B230^^^movzx   ecx, word ptr [rsi]^^^mov     [rdi], cx^^^add     rsi, 2^^^add     rdi, 2^^^nop     dword ptr [rax+00h]^^^test    dl, 4^^^jz      short loc_40B241^^^mov     ecx, [rsi]^^^mov     [rdi], ecx^^^add     rsi, 4^^^add     rdi, 4^^^test    dl, 8^^^jz      short loc_40B254^^^mov     rcx, [rsi]^^^mov     [rdi], rcx^^^add     rsi, 8^^^add     rdi, 8^^^and     edx, 0F0h^^^jz      short locret_40B27B^^^nop     dword ptr [rax+00h]^^^mov     rcx, [rsi]^^^mov     r8, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], r8^^^sub     edx, 10h^^^lea     rsi, [rsi+10h]^^^lea     rdi, [rdi+10h]^^^jnz     short loc_40B260^^^rep retn^^^mov     [rsp+var_8], rax^^^mov     ecx, esi^^^and     ecx, 7^^^jz      short loc_40B2C0^^^lea     rdx, [rcx+rdx-8]^^^sub     ecx, 8^^^nop     word ptr [rax+rax+00000000h]^^^movzx   eax, byte ptr [rsi]^^^mov     [rdi], al^^^inc     ecx^^^lea     rsi, [rsi+1]^^^lea     rdi, [rdi+1]^^^jnz     short loc_40B2A0^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     rdx, 400h^^^ja      short loc_40B340^^^mov     ecx, edx^^^shr     ecx, 5^^^jz      short loc_40B330^^^dec     ecx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     [rdi], rax^^^mov     [rdi+8], r8^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^lea     rsi, [rsi+20h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40B330^^^dec     ecx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     [rdi], rax^^^mov     [rdi+8], r8^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^lea     rsi, [rsi+20h]^^^lea     rdi, [rdi+20h]^^^jnz     short loc_40B2D0^^^nop     word ptr [rax+rax+00000000h]^^^and     edx, 1Fh^^^mov     rax, [rsp+var_8]^^^jnz     loc_40B209^^^rep retn^^^mov     r11, cs:__x86_64_data_cache_size_half^^^cmp     r11, rdx^^^cmova   r11, rdx^^^mov     rcx, r11^^^and     r11, 0FFFFFFFFFFFFFFF8h^^^shr     rcx, 3^^^jz      short loc_40B360^^^rep movsq^^^xchg    ax, ax^^^sub     rdx, r11^^^test    rdx, 0FFFFFFFFFFFFFFF8h^^^jnz     short loc_40B380^^^and     edx, 7^^^mov     rax, [rsp+var_8]^^^jnz     loc_40B209^^^rep retn^^^mov     r8, cs:__x86_64_shared_cache_size_half^^^cmp     r8, rdx^^^cmova   r8, rdx^^^mov     rcx, r8^^^and     r8, 0FFFFFFFFFFFFFFC0h^^^shr     rcx, 6^^^jz      loc_40B54A^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_28], rbx^^^cmp     cs:__x86_64_prefetchw, 0^^^jz      loc_40B480^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rsi+380h]^^^prefetcht0 byte ptr [rsi+3C0h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jz      loc_40B536^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^prefetchw byte ptr [rdi+340h]^^^prefetchw byte ptr [rdi+380h]^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jnz     loc_40B3C0^^^jmp     loc_40B536^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rsi+380h]^^^prefetcht0 byte ptr [rsi+3C0h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jz      short loc_40B536^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rdi+340h]^^^prefetcht0 byte ptr [rdi+380h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jnz     loc_40B480^^^mov     rbx, [rsp+var_28]^^^mov     r12, [rsp+var_20]^^^mov     r13, [rsp+var_18]^^^mov     r14, [rsp+var_10]^^^sub     rdx, r8^^^test    rdx, 0FFFFFFFFFFFFFFC0h^^^jnz     short loc_40B570^^^and     edx, 3Fh^^^mov     rax, [rsp+var_8]^^^jnz     loc_40B209^^^rep retn^^^mov     rcx, rdx^^^shr     rcx, 7^^^jz      loc_40B655^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_20], r12^^^nop     dword ptr [rax+00h]^^^prefetchnta byte ptr [rsi+300h]^^^prefetchnta byte ptr [rsi+340h]^^^dec     rcx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^movnti  qword ptr [rdi], rax^^^movnti  qword ptr [rdi+8], r8^^^movnti  qword ptr [rdi+10h], r9^^^movnti  qword ptr [rdi+18h], r10^^^movnti  qword ptr [rdi+20h], r11^^^movnti  qword ptr [rdi+28h], r12^^^movnti  qword ptr [rdi+30h], r13^^^movnti  qword ptr [rdi+38h], r14^^^mov     rax, [rsi+40h]^^^mov     r8, [rsi+48h]^^^mov     r9, [rsi+50h]^^^mov     r10, [rsi+58h]^^^mov     r11, [rsi+60h]^^^mov     r12, [rsi+68h]^^^mov     r13, [rsi+70h]^^^mov     r14, [rsi+78h]^^^movnti  qword ptr [rdi+40h], rax^^^movnti  qword ptr [rdi+48h], r8^^^movnti  qword ptr [rdi+50h], r9^^^movnti  qword ptr [rdi+58h], r10^^^movnti  qword ptr [rdi+60h], r11^^^movnti  qword ptr [rdi+68h], r12^^^movnti  qword ptr [rdi+70h], r13^^^movnti  qword ptr [rdi+78h], r14^^^lea     rsi, [rsi+80h]^^^lea     rdi, [rdi+80h]^^^jnz     loc_40B590^^^sfence^^^mov     r12, [rsp+var_20]^^^mov     r13, [rsp+var_18]^^^mov     r14, [rsp+var_10]^^^and     edx, 7Fh^^^mov     rax, [rsp+var_8]^^^jnz     loc_40B209^^^rep retn^^^
_L_lock_4253$$$lea     rdi, [r13+0]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40489B^^^
__memmove_chk_ssse3$$$cmp     rcx, rdx^^^jb      __chk_fail^^^nop     dword ptr [rax+00000000h]^^^
sub_40EAD4$$$mov     eax, 30h^^^pop     rbx^^^retn^^^
do_lookup_x$$$push    r15^^^mov     r11, rdx^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 98h^^^mov     ebp, [r9+8]^^^mov     rax, [rsp+0C8h+arg_8]^^^mov     [rsp+0C8h+var_A0], r8^^^mov     rbx, [rsp+0C8h+arg_0]^^^mov     r14, [rsp+0C8h+arg_18]^^^mov     [rsp+0C8h+var_60], rdi^^^mov     [rsp+0C8h+var_50], rcx^^^mov     [rsp+0C8h+var_70], rax^^^mov     eax, [rsp+0C8h+arg_10]^^^mov     [rsp+0C8h+var_44], eax^^^mov     eax, [rsp+0C8h+arg_20]^^^mov     [rsp+0C8h+var_3C], eax^^^mov     r15, rsi^^^mov     r8d, esi^^^mov     r12, [r9]^^^shr     r15, 6^^^mov     r9d, 0FFFFFFFFh^^^and     r8d, 3Fh^^^mov     rax, [r12+rbx*8]^^^mov     [rsp+0C8h+var_48], 0^^^mov     [rsp+0C8h+var_78], 0^^^mov     rsi, [rax+28h]^^^cmp     rsi, r14^^^mov     [rsp+0C8h+var_68], rsi^^^jz      loc_452730^^^test    byte ptr [rsp+0C8h+var_3C], 2^^^jz      short loc_45264B^^^test    byte ptr [rsi+314h], 3^^^jz      loc_452730^^^test    byte ptr [rsi+315h], 20h^^^jnz     loc_452730^^^test    byte ptr cs:_dl_debug_mask, 8^^^jnz     loc_452C54^^^mov     eax, [rsi+2ECh]^^^test    eax, eax^^^jz      loc_452730^^^mov     rdx, [rsi+70h]^^^mov     rdx, [rdx+8]^^^mov     [rsp+0C8h+var_98], rdx^^^mov     rdx, [rsi+68h]^^^mov     rdx, [rdx+8]^^^mov     [rsp+0C8h+var_58], rdx^^^mov     rdx, [rsi+2F8h]^^^test    rdx, rdx^^^jz      loc_452BB9^^^mov     ecx, [rsi+2F0h]^^^and     ecx, r15d^^^mov     rdi, [rdx+rcx*8]^^^mov     ecx, [rsi+2F4h]^^^mov     rdx, r13^^^shr     rdx, cl^^^mov     rcx, rdx^^^mov     rdx, rdi^^^shr     rdx, cl^^^mov     ecx, r8d^^^shr     rdi, cl^^^and     rdx, rdi^^^and     edx, 1^^^jnz     loc_452CA4^^^mov     [rsp+0C8h+var_40], 0^^^cmp     [rsp+0C8h+var_48], 1^^^jz      short loc_452758^^^mov     rax, [rsp+0C8h+var_70]^^^test    rax, rax^^^jz      short loc_452730^^^mov     rdi, [rax+10h]^^^test    rdi, rdi^^^jz      short loc_452730^^^mov     rsi, [rsp+0C8h+var_68]^^^mov     dword ptr [rsp+0C8h+var_C0], r8d^^^mov     [rsp+0C8h+var_B0], r9^^^mov     [rsp+0C8h+var_B8], r11^^^call    _dl_name_match_p^^^test    eax, eax^^^mov     r8d, dword ptr [rsp+0C8h+var_C0]^^^mov     r9, [rsp+0C8h+var_B0]^^^mov     r11, [rsp+0C8h+var_B8]^^^jnz     loc_452D5E^^^nop     dword ptr [rax+00000000h]^^^add     rbx, 1^^^cmp     rbp, rbx^^^ja      loc_45260A^^^xor     eax, eax^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+0C8h+var_78]^^^test    rax, rax^^^jz      short loc_4526E6^^^movzx   edx, byte ptr [rax+4]^^^shr     dl, 4^^^cmp     dl, 2^^^jz      short loc_4527A0^^^cmp     dl, 0Ah^^^jz      short loc_4527D8^^^cmp     dl, 1^^^jz      short loc_4527AE^^^mov     eax, [rsp+0C8h+var_40]^^^test    eax, eax^^^jz      loc_4526E6^^^add     rbx, 1^^^cmp     rbp, rbx^^^ja      loc_45260A^^^jmp     short loc_45273D^^^mov     ecx, cs:_dl_dynamic_weak^^^test    ecx, ecx^^^jnz     loc_452E2E^^^mov     [rsp+0C8h+var_88], rax^^^mov     rax, [rsp+0C8h+var_88]^^^mov     rcx, [rsp+0C8h+var_A0]^^^mov     [rcx], rax^^^mov     rax, [rsp+0C8h+var_68]^^^mov     [rcx+8], rax^^^mov     eax, 1^^^jmp     loc_45273F^^^mov     [rsp+0C8h+var_88], rax^^^mov     rax, [rsp+0C8h+var_68]^^^mov     rax, [rax+30h]^^^lea     rbp, [rax+rax*8]^^^mov     eax, 0^^^shl     rbp, 4^^^add     rbp, 6C6000h^^^test    rax, rax^^^jz      short loc_452807^^^mov     rdi, rbp^^^call    near ptr 0^^^mov     rdx, [rbp+28h]^^^mov     rbx, [rbp+30h]^^^test    rdx, rdx^^^mov     [rsp+0C8h+var_98], rdx^^^jz      loc_452B75^^^mov     rax, r13^^^xor     edx, edx^^^lea     rcx, [rbx-2]^^^div     rbx^^^mov     rax, r13^^^mov     [rsp+0C8h+var_90], rcx^^^mov     [rsp+0C8h+var_80], rbp^^^mov     rbp, r13^^^mov     r13, rbx^^^mov     r12, rdx^^^xor     edx, edx^^^div     rcx^^^lea     rcx, [rdx+1]^^^mov     r8, rcx^^^mov     rbx, rcx^^^shl     r8, 5^^^lea     r14, [rbx+r12]^^^shl     r12, 5^^^add     r12, [rsp+0C8h+var_98]^^^jmp     short loc_452884^^^test    r15, r15^^^jz      loc_452918^^^add     r12, r8^^^cmp     r13, r14^^^lea     rax, [r14+rbx]^^^jbe     loc_452908^^^mov     r14, rax^^^mov     eax, [r12]^^^mov     r15, [r12+8]^^^cmp     rax, rbp^^^jnz     short loc_452868^^^mov     rsi, [rsp+0C8h+var_60]^^^mov     rdi, r15^^^mov     [rsp+0C8h+var_C0], r8^^^call    sub_4003A0^^^test    eax, eax^^^mov     r8, [rsp+0C8h+var_C0]^^^jnz     short loc_452868^^^test    byte ptr [rsp+0C8h+var_3C], 2^^^mov     rbp, [rsp+0C8h+var_80]^^^mov     rax, [rsp+0C8h+var_68]^^^jnz     short loc_4528D0^^^mov     rax, [r12+10h]^^^mov     [rsp+0C8h+var_88], rax^^^mov     rax, [r12+18h]^^^mov     rdx, [rsp+0C8h+var_A0]^^^mov     [rdx+8], rax^^^mov     rax, [rsp+0C8h+var_88]^^^mov     [rdx], rax^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_452D54^^^mov     rdi, rbp^^^call    near ptr 0^^^mov     eax, 1^^^jmp     loc_45273F^^^mov     r12, r14^^^sub     r12, r13^^^jmp     loc_452852^^^mov     rbx, r13^^^mov     r13, rbp^^^mov     rbp, [rsp+0C8h+var_80]^^^lea     rdx, [rbx+rbx*2]^^^mov     rax, [rbp+38h]^^^shl     rax, 2^^^cmp     rdx, rax^^^jbe     loc_452A80^^^mov     rax, [rsp+0C8h+var_88]^^^mov     edi, [rax]^^^add     rdi, [rsp+0C8h+var_58]^^^test    byte ptr [rsp+0C8h+var_3C], 2^^^jz      loc_4529E0^^^mov     esi, r13d^^^xor     edx, edx^^^mov     r8, [rsp+0C8h+var_50]^^^mov     rax, rsi^^^mov     r9, [rsp+0C8h+var_98]^^^div     rbx^^^mov     rax, rsi^^^mov     rcx, rdx^^^xor     edx, edx^^^div     [rsp+0C8h+var_90]^^^add     rdx, 1^^^mov     rsi, rdx^^^shl     rsi, 5^^^mov     rax, rcx^^^shl     rax, 5^^^add     rax, r9^^^jmp     short loc_45299F^^^add     rcx, rdx^^^add     rax, rsi^^^cmp     rbx, rcx^^^jbe     loc_452A78^^^cmp     qword ptr [rax+8], 0^^^jnz     short loc_452990^^^mov     rdx, [rsp+0C8h+arg_28]^^^mov     [rax], r13d^^^mov     [rax+8], rdi^^^mov     [rax+10h], r8^^^mov     [rax+18h], rdx^^^mov     eax, 0^^^add     qword ptr [rbp+38h], 1^^^test    rax, rax^^^jz      loc_4527B3^^^mov     rdi, rbp^^^call    near ptr 0^^^jmp     loc_4527B3^^^mov     esi, r13d^^^xor     edx, edx^^^mov     r8, [rsp+0C8h+var_68]^^^mov     rax, rsi^^^mov     r9, [rsp+0C8h+var_98]^^^div     rbx^^^mov     rax, rsi^^^mov     rcx, rdx^^^xor     edx, edx^^^div     [rsp+0C8h+var_90]^^^add     rdx, 1^^^mov     rsi, rdx^^^shl     rsi, 5^^^mov     rax, rcx^^^shl     rax, 5^^^add     rax, r9^^^jmp     short loc_452A2B^^^add     rcx, rdx^^^add     rax, rsi^^^cmp     rbx, rcx^^^jbe     short loc_452A70^^^cmp     qword ptr [rax+8], 0^^^jnz     short loc_452A20^^^mov     rcx, [rsp+0C8h+var_88]^^^mov     [rax], r13d^^^mov     [rax+8], rdi^^^mov     [rax+18h], r8^^^mov     [rax+10h], rcx^^^movzx   eax, byte ptr [r8+314h]^^^and     eax, 3^^^cmp     al, 2^^^jnz     loc_4529BD^^^or      dword ptr [r8+3D4h], 8^^^jmp     loc_4529BD^^^sub     rcx, rbx^^^jmp     short loc_452A0D^^^sub     rcx, rbx^^^jmp     loc_45297F^^^lea     rdi, [rbx+1]^^^call    _dl_higher_prime_number^^^mov     edi, 20h^^^mov     rsi, rax^^^mov     r12, rax^^^call    calloc^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_452E01^^^lea     rcx, [r12-2]^^^test    rbx, rbx^^^mov     [rsp+0C8h+var_90], rcx^^^jz      loc_452B41^^^mov     rsi, [rsp+0C8h+var_98]^^^xor     edi, edi^^^mov     r14, rbp^^^nop     word ptr [rax+rax+00h]^^^mov     r9, [rsi+8]^^^test    r9, r9^^^jz      short loc_452B31^^^mov     r10d, [rsi]^^^xor     edx, edx^^^mov     r11, [rsi+18h]^^^mov     rbp, [rsi+10h]^^^mov     r8d, r10d^^^mov     rax, r8^^^div     r12^^^mov     rax, r8^^^mov     rcx, rdx^^^xor     edx, edx^^^div     [rsp+0C8h+var_90]^^^add     rdx, 1^^^mov     r8, rdx^^^shl     r8, 5^^^mov     rax, rcx^^^shl     rax, 5^^^add     rax, r15^^^jmp     short loc_452B1B^^^add     rcx, rdx^^^add     rax, r8^^^cmp     r12, rcx^^^jbe     short loc_452B70^^^cmp     qword ptr [rax+8], 0^^^jnz     short loc_452B10^^^mov     [rax], r10d^^^mov     [rax+8], r9^^^mov     [rax+10h], rbp^^^mov     [rax+18h], r11^^^add     rdi, 1^^^add     rsi, 20h^^^cmp     rdi, rbx^^^jnz     short loc_452AC8^^^mov     rbp, r14^^^mov     rdi, [rsp+0C8h+var_98]^^^mov     rbx, r12^^^call    qword ptr [rbp+40h]^^^mov     [rbp+30h], r12^^^mov     [rbp+28h], r15^^^mov     qword ptr [rbp+40h], offset free^^^mov     [rsp+0C8h+var_98], r15^^^jmp     loc_452938^^^sub     rcx, r12^^^jmp     short loc_452AFF^^^mov     esi, 1Fh^^^mov     edi, 20h^^^call    calloc^^^test    rax, rax^^^mov     [rsp+0C8h+var_98], rax^^^jz      loc_452E01^^^mov     [rbp+28h], rax^^^mov     qword ptr [rbp+30h], 1Fh^^^mov     ebx, 1Fh^^^mov     qword ptr [rbp+40h], offset free^^^mov     [rsp+0C8h+var_90], 1Dh^^^jmp     loc_452938^^^cmp     [r11], r9^^^jz      loc_452D66^^^mov     ecx, eax^^^mov     rax, [r11]^^^xor     edx, edx^^^div     rcx^^^mov     rax, [rsi+308h]^^^mov     eax, [rax+rdx*4]^^^test    eax, eax^^^mov     [rsp+0C8h+var_40], eax^^^jnz     short loc_452C15^^^jmp     loc_4526DC^^^mov     rax, [rsp+0C8h+var_68]^^^mov     edx, [rsp+0C8h+var_40]^^^mov     rax, [rax+300h]^^^mov     eax, [rax+rdx*4]^^^test    eax, eax^^^mov     [rsp+0C8h+var_40], eax^^^jz      loc_4526DC^^^mov     rdx, [rsp+0C8h+var_98]^^^lea     rax, [rax+rax*2]^^^lea     r10, [rsp+0C8h+var_78]^^^mov     dword ptr [rsp+0C8h+var_C0], r8d^^^mov     [rsp+0C8h+var_B0], r9^^^mov     [rsp+0C8h+var_B8], r11^^^lea     rdi, [rdx+rax*8]^^^call    check_match_11143^^^test    rax, rax^^^mov     r8d, dword ptr [rsp+0C8h+var_C0]^^^mov     r9, [rsp+0C8h+var_B0]^^^mov     r11, [rsp+0C8h+var_B8]^^^jz      short loc_452BF0^^^jmp     loc_452762^^^mov     rdx, [rsi+8]^^^mov     rcx, [rsi+30h]^^^cmp     byte ptr [rdx], 0^^^jnz     short loc_452C6B^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     rsi, [rsp+0C8h+var_60]^^^mov     edi, offset aSymbolSLookupI^^^xor     eax, eax^^^mov     dword ptr [rsp+0C8h+var_C0], r8d^^^mov     [rsp+0C8h+var_B0], r9^^^mov     [rsp+0C8h+var_B8], r11^^^call    _dl_debug_printf^^^mov     rsi, [rsp+0C8h+var_68]^^^mov     r11, [rsp+0C8h+var_B8]^^^mov     r9, [rsp+0C8h+var_B0]^^^mov     r8d, dword ptr [rsp+0C8h+var_C0]^^^jmp     loc_452665^^^mov     ecx, eax^^^xor     edx, edx^^^mov     rax, r13^^^div     rcx^^^mov     rax, [rsi+300h]^^^mov     eax, [rax+rdx*4]^^^test    eax, eax^^^jz      loc_4526D1^^^lea     rdx, ds:0[rax*4]^^^add     rdx, [rsi+308h]^^^jmp     short loc_452CE6^^^mov     eax, [rdx]^^^add     rdx, 4^^^test    al, 1^^^jnz     loc_4526D1^^^mov     eax, [rdx]^^^xor     rax, r13^^^shr     rax, 1^^^jnz     short loc_452CD8^^^mov     rax, [rsp+0C8h+var_68]^^^mov     rcx, rdx^^^lea     r10, [rsp+0C8h+var_78]^^^sub     rcx, [rax+308h]^^^mov     [rsp+0C8h+var_A8], rdx^^^mov     dword ptr [rsp+0C8h+var_C0], r8d^^^mov     [rsp+0C8h+var_B0], r9^^^mov     [rsp+0C8h+var_B8], r11^^^mov     rax, rcx^^^sar     rax, 2^^^mov     [rsp+0C8h+var_40], eax^^^mov     eax, eax^^^imul    rdi, rax, 18h^^^add     rdi, [rsp+0C8h+var_98]^^^call    check_match_11143^^^test    rax, rax^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r8d, dword ptr [rsp+0C8h+var_C0]^^^mov     r9, [rsp+0C8h+var_B0]^^^mov     r11, [rsp+0C8h+var_B8]^^^jz      short loc_452CD8^^^jmp     loc_452762^^^mov     eax, 1^^^jmp     loc_45273F^^^or      eax, 0FFFFFFFFh^^^jmp     loc_45273F^^^mov     rcx, [rsp+0C8h+var_60]^^^movzx   edx, byte ptr [rcx]^^^test    rdx, rdx^^^jz      loc_452E59^^^movzx   edi, byte ptr [rcx+1]^^^test    dil, dil^^^jz      loc_452E59^^^shl     rdx, 4^^^movzx   edi, dil^^^add     rdx, rdi^^^movzx   edi, byte ptr [rcx+2]^^^test    dil, dil^^^jz      loc_452E59^^^shl     rdx, 4^^^movzx   edi, dil^^^add     rdx, rdi^^^movzx   edi, byte ptr [rcx+3]^^^test    dil, dil^^^jz      loc_452E59^^^shl     rdx, 4^^^movzx   edi, dil^^^add     rdx, rdi^^^movzx   edi, byte ptr [rcx+4]^^^test    dil, dil^^^jz      loc_452E59^^^shl     rdx, 4^^^movzx   edi, dil^^^add     rdx, rdi^^^add     rcx, 1^^^movzx   edi, byte ptr [rcx+4]^^^test    dil, dil^^^jz      short loc_452E53^^^shl     rdx, 4^^^movzx   edi, dil^^^add     rdi, rdx^^^mov     rdx, rdi^^^and     edx, 0F0000000h^^^shr     rdx, 18h^^^xor     rdx, rdi^^^jmp     short loc_452DD7^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_452E13^^^mov     rdi, rbp^^^call    near ptr 0^^^mov     edi, 2^^^mov     esi, offset aOutOfMemory^^^xor     eax, eax^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^mov     rcx, [rsp+0C8h+var_A0]^^^cmp     qword ptr [rcx], 0^^^jnz     loc_452778^^^mov     rdx, [rsp+0C8h+var_A0]^^^mov     [rdx], rax^^^mov     rax, [rsp+0C8h+var_68]^^^mov     [rdx+8], rax^^^jmp     loc_452778^^^and     edx, 0FFFFFFFh^^^mov     edx, edx^^^mov     [r11], rdx^^^jmp     loc_452BC2^^^
_IO_iter_next$$$mov     rax, [rdi+68h]^^^retn^^^
dlsym_doit$$$push    rbx^^^mov     rbx, rdi^^^mov     rdx, [rdi+10h]^^^mov     rsi, [rdi+8]^^^mov     rdi, [rdi]^^^call    _dl_sym^^^mov     [rbx+18h], rax^^^pop     rbx^^^retn^^^
_IO_new_file_init$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^or      dword ptr [rdi], 240Ch^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     rbx, rdi^^^mov     [rdi+90h], rbp^^^call    _IO_link_in^^^mov     [rbx+70h], ebp^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
do_always_noconv$$$xor     eax, eax^^^retn^^^
_IO_file_seek$$$mov     edi, [rdi+70h]^^^jmp     lseek64^^^
frame_downheap$$$push    r15^^^mov     r15d, r8d^^^push    r14^^^push    r13^^^push    r12^^^lea     r12d, [rcx+rcx+1]^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 18h^^^cmp     r12d, r8d^^^mov     [rsp+48h+var_40], rdi^^^jl      short loc_492E17^^^jmp     short loc_492E50^^^mov     r13d, r12d^^^movsxd  rcx, ecx^^^mov     rdx, [r14]^^^mov     rdi, [rsp+48h+var_40]^^^lea     r12, [rbx+rcx*8]^^^mov     rsi, [r12]^^^call    rbp^^^test    eax, eax^^^jns     short loc_492E50^^^mov     rdx, [r14]^^^mov     rax, [r12]^^^mov     [r12], rdx^^^lea     r12d, [r13+r13+1]^^^mov     [r14], rax^^^cmp     r15d, r12d^^^jle     short loc_492E50^^^mov     ecx, r13d^^^lea     r13d, [r12+1]^^^movsxd  rax, r12d^^^lea     r14, [rbx+rax*8]^^^cmp     r15d, r13d^^^jle     short loc_492DE0^^^mov     rdx, [rbx+rax*8+8]^^^mov     rsi, [r14]^^^mov     rdi, [rsp+48h+var_40]^^^mov     [rsp+48h+var_48], ecx^^^call    rbp^^^test    eax, eax^^^mov     ecx, [rsp+48h+var_48]^^^jns     short loc_492DE0^^^movsxd  rax, r13d^^^lea     r14, [rbx+rax*8]^^^jmp     short loc_492DE3^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
wctrans$$$push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     r13, [rax]^^^xor     eax, eax^^^mov     rbx, [r13+98h]^^^cmp     byte ptr [rbx], 0^^^jz      short loc_44E668^^^xor     ebp, ebp^^^jmp     short loc_44E648^^^xor     esi, esi^^^mov     rdi, rbx^^^add     rbp, 1^^^call    sub_400350^^^cmp     byte ptr [rax+1], 0^^^lea     rbx, [rax+1]^^^jz      short loc_44E678^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_44E630^^^mov     eax, [r13+0D0h]^^^lea     rax, [rbp+rax+8]^^^mov     rax, [r13+rax*8+0]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^add     rsp, 8^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^
__offtime$$$push    r14^^^mov     rcx, 1845C8A0CE512957h^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rdi, [rdi]^^^mov     rax, rdi^^^imul    rcx^^^mov     rax, rdi^^^sar     rax, 3Fh^^^mov     rcx, rdx^^^sar     rcx, 0Dh^^^sub     rcx, rax^^^imul    rax, rcx, 15180h^^^sub     rdi, rax^^^add     rsi, rdi^^^jns     short loc_4770DB^^^xchg    ax, ax^^^sub     rcx, 1^^^add     rsi, 15180h^^^js      short loc_4770B0^^^cmp     rsi, 1517Fh^^^jle     short loc_4770E4^^^nop     word ptr [rax+rax+00000000h]^^^sub     rsi, 15180h^^^add     rcx, 1^^^cmp     rsi, 1517Fh^^^jg      short loc_4770D0^^^mov     rax, rsi^^^mov     rdx, 48D159E26AF37C05h^^^imul    rdx^^^mov     rax, rsi^^^sar     rax, 3Fh^^^sar     rdx, 0Ah^^^sub     rdx, rax^^^mov     [rbp+8], edx^^^imul    rdx, 0E10h^^^sub     rsi, rdx^^^mov     rdx, 8888888888888889h^^^mov     rax, rsi^^^imul    rdx^^^mov     rax, rsi^^^sar     rax, 3Fh^^^add     rdx, rsi^^^sar     rdx, 5^^^sub     rdx, rax^^^lea     rax, [rsi+rdx*4]^^^mov     rdi, rdx^^^lea     rsi, [rcx+4]^^^shl     rdi, 6^^^mov     [rbp+4], edx^^^mov     rdx, 4924924924924925h^^^sub     rax, rdi^^^mov     [rbp+0], eax^^^mov     rax, rsi^^^imul    rdx^^^mov     rax, rsi^^^sar     rax, 3Fh^^^sar     rdx, 1^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*8]^^^sub     rax, rdx^^^sub     rsi, rax^^^test    esi, esi^^^mov     eax, esi^^^mov     [rbp+18h], esi^^^js      loc_477460^^^mov     esi, 7B2h^^^mov     rbx, 0A3D70A3D70A3D70Bh^^^mov     r12, 2CE33E6C02CE33E7h^^^jmp     loc_477309^^^mov     rax, rcx^^^mov     r8, rsi^^^lea     r10, [rsi+2]^^^imul    r12^^^mov     rax, rcx^^^sar     rax, 3Fh^^^sar     rdx, 6^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*8]^^^lea     r9, [rdx+rsi]^^^lea     rax, [rdx+rax*8]^^^mov     rdx, rcx^^^lea     rax, [rax+rax*4]^^^sub     rdx, rax^^^mov     rax, rdx^^^shr     rax, 3Fh^^^sub     r9, rax^^^sub     r8, 1^^^mov     r11, r8^^^cmovns  r10, r8^^^mov     r14, r8^^^sar     r11, 3Fh^^^sar     r10, 2^^^lea     rdi, [r9-1]^^^mov     rdx, r11^^^shr     rdx, 3Eh^^^lea     rax, [r8+rdx]^^^and     eax, 3^^^sub     rax, rdx^^^shr     rax, 3Fh^^^sub     r10, rax^^^mov     rax, r8^^^imul    rbx^^^add     rdx, r8^^^mov     r13, rdx^^^sar     rdx, 8^^^sar     r13, 6^^^sub     rdx, r11^^^mov     rax, r13^^^sub     rax, r11^^^lea     rax, [rax+rax*4]^^^lea     rax, [rax+rax*4]^^^shl     rax, 2^^^sub     r14, rax^^^mov     rax, r14^^^mov     r14, r11^^^lea     r11, [rdx+rdx*4]^^^sub     r14, r13^^^shr     rax, 3Fh^^^mov     r13, rdi^^^add     rax, r14^^^add     r10, rax^^^lea     rax, [r11+r11*4]^^^shl     rax, 4^^^sub     r8, rax^^^mov     rax, rdi^^^shr     r8, 3Fh^^^sub     rdx, r8^^^mov     r8, rdi^^^add     r10, rdx^^^sar     r8, 3Fh^^^imul    rbx^^^add     rdx, rdi^^^mov     rax, rdx^^^sar     rax, 8^^^mov     r11, rax^^^sub     r11, r8^^^lea     r11, [r11+r11*4]^^^lea     r11, [r11+r11*4]^^^shl     r11, 4^^^sub     r13, r11^^^mov     r11, r13^^^mov     r13, r8^^^shr     r11, 3Fh^^^sub     r13, rax^^^add     r13, r11^^^sar     rdx, 6^^^mov     r11, rdi^^^sub     rdx, r8^^^shr     r8, 3Eh^^^lea     rax, [rdx+rdx*4]^^^lea     rax, [rax+rax*4]^^^shl     rax, 2^^^sub     r11, rax^^^lea     rax, [rdi+r8]^^^shr     r11, 3Fh^^^and     eax, 3^^^sub     rdx, r11^^^sub     rax, r8^^^lea     r8, [r9+2]^^^shr     rax, 3Fh^^^test    rdi, rdi^^^cmovs   rdi, r8^^^sub     rsi, r9^^^sar     rdi, 2^^^sub     rax, rdi^^^add     rax, rdx^^^add     r13, rax^^^lea     rax, [rsi+rsi*8]^^^lea     rsi, [rsi+rax*8]^^^lea     rsi, [rsi+rsi*4]^^^add     r13, rsi^^^mov     rsi, r9^^^add     r10, r13^^^add     rcx, r10^^^test    rcx, rcx^^^js      loc_4771A0^^^mov     rdi, rsi^^^mov     eax, 16Dh^^^and     edi, 3^^^jnz     short loc_477378^^^mov     rax, rsi^^^mov     r8, rsi^^^imul    rbx^^^sar     r8, 3Fh^^^add     rdx, rsi^^^mov     rax, rdx^^^sar     rax, 6^^^sub     rax, r8^^^lea     rax, [rax+rax*4]^^^lea     r9, [rax+rax*4]^^^mov     eax, 16Eh^^^shl     r9, 2^^^cmp     rsi, r9^^^jnz     short loc_477378^^^sar     rdx, 8^^^sub     rdx, r8^^^lea     rax, [rdx+rdx*4]^^^mov     rdx, rsi^^^lea     rax, [rax+rax*4]^^^shl     rax, 4^^^sub     rdx, rax^^^cmp     rdx, 1^^^sbb     rax, rax^^^not     rax^^^add     rax, 16Eh^^^cmp     rcx, rax^^^jge     loc_4771A0^^^lea     eax, [rsi-76Ch]^^^lea     rdx, [rsi-76Ch]^^^mov     [rbp+14h], eax^^^cdqe^^^cmp     rax, rdx^^^jz      short loc_4773B8^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 4Bh^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^test    rdi, rdi^^^mov     [rbp+1Ch], ecx^^^mov     r8d, offset __mon_yday^^^jnz     short loc_477420^^^mov     rax, rsi^^^mov     rdx, 0A3D70A3D70A3D70Bh^^^mov     rdi, rsi^^^imul    rdx^^^sar     rdi, 3Fh^^^mov     r8d, offset unk_4B219A^^^add     rdx, rsi^^^mov     rax, rdx^^^sar     rax, 6^^^sub     rax, rdi^^^lea     rax, [rax+rax*4]^^^lea     rax, [rax+rax*4]^^^shl     rax, 2^^^cmp     rsi, rax^^^jnz     short loc_477420^^^sar     rdx, 8^^^sub     rdx, rdi^^^lea     rax, [rdx+rdx*4]^^^lea     rax, [rax+rax*4]^^^shl     rax, 4^^^cmp     rsi, rax^^^mov     eax, offset __mon_yday^^^cmovnz  r8, rax^^^movzx   eax, word ptr [r8+16h]^^^mov     edx, 0Bh^^^cmp     rax, rcx^^^jle     short loc_477442^^^mov     edx, 0Bh^^^sub     rdx, 1^^^movzx   eax, word ptr [r8+rdx*2]^^^cmp     rax, rcx^^^jg      short loc_477434^^^sub     rcx, rax^^^mov     [rbp+10h], edx^^^mov     eax, 1^^^add     ecx, 1^^^mov     [rbp+0Ch], ecx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^add     eax, 7^^^mov     [rbp+18h], eax^^^jmp     loc_477180^^^
_L_lock_80$$$lea     rdi, __fork_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_410B2E^^^
_L_lock_10137$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_407187^^^
_nl_cleanup_ctype$$$push    rbx^^^mov     rbx, [rdi+28h]^^^test    rbx, rbx^^^jz      short loc_4466C0^^^mov     qword ptr [rdi+28h], 0^^^mov     qword ptr [rdi+20h], 0^^^mov     rsi, [rbx+18h]^^^mov     rdi, [rbx+10h]^^^call    __gconv_close_transform^^^mov     rdi, [rbx]^^^mov     rsi, [rbx+8]^^^call    __gconv_close_transform^^^mov     rdi, rbx^^^pop     rbx^^^jmp     free^^^pop     rbx^^^retn^^^
__alloc_dir$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     ebx, edi^^^mov     [rsp+var_8], r12^^^sub     rsp, 28h^^^test    sil, sil^^^mov     ebp, esi^^^jnz     short loc_44BEA4^^^and     edx, 80000h^^^jz      short loc_44BF20^^^test    rcx, rcx^^^mov     edi, 8030h^^^mov     r12d, 8000h^^^jz      short loc_44BEC6^^^cmp     qword ptr [rcx+38h], 8000h^^^cmovnb  r12, [rcx+38h]^^^lea     rdi, [r12+30h]^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^jz      short loc_44BF50^^^mov     [rdx], ebx^^^mov     dword ptr [rdx+4], 0^^^mov     [rdx+8], r12^^^mov     qword ptr [rdx+10h], 0^^^mov     qword ptr [rdx+18h], 0^^^mov     qword ptr [rdx+20h], 0^^^mov     dword ptr [rdx+28h], 0^^^mov     rax, rdx^^^mov     rbx, [rsp+28h+var_18]^^^mov     rbp, [rsp+28h+var_10]^^^mov     r12, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^xor     eax, eax^^^mov     edx, 1^^^mov     esi, 2^^^mov     [rsp+28h+var_20], rcx^^^call    fcntl^^^test    eax, eax^^^mov     rcx, [rsp+28h+var_20]^^^jns     loc_44BEA4^^^xor     edx, edx^^^jmp     short loc_44BEFF^^^mov     edi, 2030h^^^mov     r12d, 2000h^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^jnz     loc_44BED3^^^test    bpl, bpl^^^jz      short loc_44BEFF^^^mov     rsi, 0FFFFFFFFFFFFFFC0h^^^movsxd  rdi, ebx^^^mov     eax, 3^^^mov     r8d, fs:[rsi]^^^syscall^^^mov     fs:[rsi], r8d^^^jmp     loc_44BEFF^^^
_IO_wfile_doallocate$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 8^^^mov     rax, [rdi+38h]^^^test    rax, rax^^^jz      short loc_475460^^^mov     rbx, [rbp+40h]^^^sub     rbx, rax^^^test    byte ptr [rbp+0], 1^^^jz      short loc_475407^^^add     rbx, 3^^^shr     rbx, 2^^^lea     rsi, ds:0FFFh[rbx*4]^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_47544F^^^lea     rdx, [rax+rbx*4]^^^mov     rsi, rax^^^mov     ecx, 1^^^mov     rdi, rbp^^^call    _IO_wsetb^^^mov     eax, 1^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^call    _IO_file_doallocate^^^mov     rax, [rbp+38h]^^^jmp     short loc_4753F2^^^
_L_unlock_13370$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408C86^^^
_IO_seekoff_unlocked$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 20h^^^cmp     edx, 2^^^ja      loc_4260B0^^^test    ecx, ecx^^^jz      short loc_42604B^^^mov     eax, [rdi+0C0h]^^^cmp     eax, 0^^^jl      short loc_426060^^^jz      short loc_42604B^^^mov     rdi, [rdi+0A0h]^^^cmp     qword ptr [rdi+40h], 0^^^jz      short loc_42604B^^^cmp     edx, 1^^^jz      short loc_42606C^^^test    eax, eax^^^jle     short loc_426085^^^mov     rdi, rbx^^^mov     [rsp+28h+var_18], edx^^^mov     [rsp+28h+var_20], ecx^^^mov     [rsp+28h+var_10], rsi^^^call    _IO_free_wbackup_area^^^mov     rsi, [rsp+28h+var_10]^^^mov     ecx, [rsp+28h+var_20]^^^mov     edx, [rsp+28h+var_18]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rax, [rax+48h]^^^add     rsp, 20h^^^pop     rbx^^^jmp     rax^^^cmp     qword ptr [rdi+48h], 0^^^jz      short loc_42604B^^^cmp     edx, 1^^^jnz     short loc_426025^^^mov     edi, [rbx]^^^and     edi, 100h^^^jz      short loc_426025^^^test    eax, eax^^^jg      short loc_4260CB^^^mov     rax, [rbx+8]^^^sub     rax, [rbx+10h]^^^add     rsi, rax^^^mov     rdi, rbx^^^mov     [rsp+28h+var_18], edx^^^mov     [rsp+28h+var_20], ecx^^^mov     [rsp+28h+var_10], rsi^^^call    _IO_free_backup_area^^^mov     edx, [rsp+28h+var_18]^^^mov     ecx, [rsp+28h+var_20]^^^mov     rsi, [rsp+28h+var_10]^^^jmp     short loc_42604B^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^add     rsp, 20h^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^pop     rbx^^^retn^^^call    abort^^^
__dladdr1$$$cmp     ecx, 1^^^jz      short loc_482A10^^^cmp     ecx, 2^^^mov     ecx, 0^^^jz      short loc_482A01^^^xor     edx, edx^^^jmp     _dl_addr^^^mov     rcx, rdx^^^jmp     short loc_4829FF^^^
sub_437D40$$$sub     rdi, 18h^^^lea     rax, [rsi-20h]^^^add     rdx, 4^^^mov     rsi, [rsi-8]^^^mov     rcx, rdi^^^jmp     loc_437C48^^^
backtrace$$$push    rbp             ^^^xor     eax, eax^^^mov     rbp, rsp^^^sub     rsp, 20h^^^test    esi, esi^^^mov     [rbp+var_20], rdi^^^mov     [rbp+var_18], 0^^^mov     [rbp+var_10], 0FFFFFFFFh^^^mov     [rbp+var_C], esi^^^jle     short locret_410EFD^^^lea     rsi, [rbp+var_20]^^^mov     edi, offset backtrace_helper^^^call    _Unwind_Backtrace^^^mov     eax, [rbp+var_10]^^^cmp     eax, 1^^^jle     short loc_410EFF^^^mov     rdx, [rbp+var_20]^^^movsxd  rcx, eax^^^sub     rcx, 1^^^cmp     qword ptr [rdx+rcx*8], 1^^^sbb     eax, 0^^^leave^^^retn^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, 0^^^cmovz   eax, edx^^^leave^^^retn^^^
__openat_2$$$sub     rsp, 8          ^^^test    dl, 40h^^^jnz     short loc_44CEC4^^^xor     eax, eax^^^add     rsp, 8^^^jmp     openat64^^^mov     edi, offset aInvalidOpenatC^^^call    __fortify_fail^^^
__stpcpy_sse2$$$mov     rcx, rsi        ^^^and     ecx, 7^^^mov     rdx, rdi^^^jz      short loc_432406^^^neg     ecx^^^add     ecx, 8^^^mov     al, [rsi]^^^test    al, al^^^mov     [rdx], al^^^jz      loc_4324B8^^^inc     rsi^^^inc     rdx^^^dec     ecx^^^jnz     short loc_4323F0^^^mov     r8, 0FEFEFEFEFEFEFEFFh^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     loc_4324A0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4324A0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4324A0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4324A0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4324A0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4324A0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4324A0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4324A0^^^mov     [rdx], rax^^^add     rdx, 8^^^jmp     loc_432410^^^mov     [rdx], al^^^test    al, al^^^jz      short loc_4324B8^^^inc     rdx^^^mov     [rdx], ah^^^test    ah, ah^^^jz      short loc_4324B8^^^inc     rdx^^^shr     rax, 10h^^^jmp     short loc_4324A0^^^mov     rax, rdx^^^retn^^^
__tz_compute$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     esi, [rsi+14h]^^^mov     rbp, rdi^^^mov     edi, offset tz_rules^^^mov     r12d, edx^^^add     esi, 76Ch^^^call    compute_change^^^mov     esi, [rbx+14h]^^^mov     edi, offset qword_6C5730^^^add     esi, 76Ch^^^call    compute_change^^^test    r12d, r12d^^^jz      short loc_447B88^^^mov     rdx, cs:qword_6C5720^^^mov     rcx, cs:qword_6C5750^^^cmp     rdx, rcx^^^jg      short loc_447BAA^^^xor     eax, eax^^^cmp     rdx, rbp^^^jle     short loc_447BA0^^^mov     [rbx+20h], eax^^^cdqe^^^mov     rdx, tzname[rax*8]^^^mov     [rbx+30h], rdx^^^lea     rdx, [rax+rax]^^^add     rax, rdx^^^shl     rax, 4^^^mov     rax, ds:qword_6C5718[rax]^^^mov     [rbx+28h], rax^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^xor     eax, eax^^^cmp     rcx, rbp^^^setnle  al^^^jmp     short loc_447B61^^^cmp     rcx, rbp^^^mov     eax, 1^^^jg      short loc_447B61^^^xor     eax, eax^^^cmp     rdx, rbp^^^setle   al^^^jmp     short loc_447B61^^^
_IO_switch_to_backup_area$$$mov     rdx, [rdi+10h]^^^mov     rax, [rdi+58h]^^^mov     rcx, [rdi+48h]^^^or      dword ptr [rdi], 100h^^^mov     [rdi+58h], rdx^^^mov     rdx, [rdi+18h]^^^mov     [rdi+10h], rax^^^mov     [rdi+18h], rcx^^^mov     [rdi+48h], rdx^^^mov     [rdi+8], rax^^^retn^^^
_IO_unsave_markers$$$push    rbx^^^cmp     qword ptr [rdi+60h], 0^^^mov     rbx, rdi^^^jz      short loc_42D003^^^mov     qword ptr [rdi+60h], 0^^^mov     rdi, [rbx+48h]^^^test    rdi, rdi^^^jz      short loc_42D058^^^mov     eax, [rbx]^^^test    ah, 1^^^jz      short loc_42D03B^^^and     ah, 0FEh^^^mov     rdx, [rbx+58h]^^^mov     [rbx+8], rdi^^^mov     [rbx], eax^^^mov     rax, [rbx+10h]^^^mov     [rbx+10h], rdx^^^mov     [rbx+58h], rax^^^mov     rax, [rbx+18h]^^^mov     [rbx+18h], rdi^^^mov     [rbx+48h], rax^^^mov     rdi, rax^^^call    free^^^mov     qword ptr [rbx+48h], 0^^^mov     qword ptr [rbx+58h], 0^^^mov     qword ptr [rbx+50h], 0^^^pop     rbx^^^retn^^^
_L_unlock_25$$$lea     rdi, [rbx+4]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_4798A3^^^
_L_unlock_24$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42B3CB^^^
close$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_44CEED^^^
_dl_mcount$$$mov     r9d, cs:running^^^push    rbx^^^test    r9d, r9d^^^jz      loc_47A78B^^^mov     rdx, cs:lowpc^^^mov     rax, cs:textsize^^^mov     ecx, 0^^^sub     rdi, rdx^^^cmp     rdi, rax^^^cmovnb  rdi, rcx^^^sub     rsi, rdx^^^cmp     rax, rsi^^^jbe     loc_47A78B^^^mov     ecx, cs:log_hashfraction^^^mov     r8, cs:tos^^^mov     rbx, rsi^^^shr     rbx, cl^^^lea     rbx, [r8+rbx*2]^^^movzx   eax, word ptr [rbx]^^^movzx   eax, ax^^^test    rax, rax^^^jz      short loc_47A606^^^mov     r9, cs:froms^^^shl     rax, 4^^^add     rax, r9^^^mov     rcx, [rax]^^^mov     rdx, [rcx]^^^cmp     rdx, rdi^^^jz      loc_47A77C^^^movzx   edx, word ptr [rax+8]^^^test    dx, dx^^^jnz     loc_47A79C^^^mov     rdx, [rcx]^^^cmp     rdx, rdi^^^jz      loc_47A77C^^^lea     rbx, [rax+8]^^^mov     r9, cs:narcsp^^^mov     eax, cs:narcs^^^mov     edx, [r9]^^^cmp     edx, eax^^^jz      loc_47A6DB^^^cmp     eax, cs:fromlimit^^^jnb     loc_47A6DB^^^mov     r11, cs:data^^^mov     r10d, 1^^^jmp     short loc_47A64C^^^cmp     eax, cs:fromlimit^^^jnb     loc_47A6DB^^^lea     rax, [rax+rax*4]^^^mov     edx, r10d^^^mov     rax, [r11+rax*4+8]^^^shr     rax, 2^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A668^^^lock^^^xadd    cs:fromidx, edx^^^mov     ecx, cs:narcs^^^mov     [rsp+8+var_C], edx^^^mov     r8d, [rsp+8+var_C]^^^lea     rcx, [rcx+rcx*4]^^^add     r8d, 1^^^mov     rdx, r8^^^shl     rdx, 4^^^shl     rcx, 2^^^add     rdx, cs:froms^^^add     rcx, cs:data^^^mov     [rdx], rcx^^^mov     rcx, cs:tos^^^lea     rax, [rcx+rax*2]^^^movzx   ecx, word ptr [rax]^^^mov     [rdx+8], cx^^^mov     [rax], r8w^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A6C4^^^lock^^^inc     cs:narcs^^^mov     eax, cs:narcs^^^mov     edx, [r9]^^^cmp     edx, eax^^^jnz     loc_47A640^^^movzx   eax, word ptr [rbx]^^^test    ax, ax^^^jnz     loc_47A7C0^^^mov     edx, 1^^^mov     eax, edx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A6FA^^^lock^^^xadd    [r9], eax^^^mov     [rsp+8+var_C], eax^^^mov     eax, [rsp+8+var_C]^^^cmp     cs:fromlimit, eax^^^mov     ecx, eax^^^jbe     short loc_47A78B^^^mov     eax, edx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A71E^^^lock^^^xadd    cs:fromidx, eax^^^mov     [rsp+8+var_C], eax^^^mov     eax, [rsp+8+var_C]^^^lea     rcx, [rcx+rcx*4]^^^mov     r8, cs:data^^^add     eax, 1^^^mov     [rbx], ax^^^movzx   eax, word ptr [rbx]^^^lea     rcx, [r8+rcx*4]^^^movzx   eax, ax^^^shl     rax, 4^^^add     rax, cs:froms^^^mov     [rax], rcx^^^mov     [rcx], rdi^^^mov     [rcx+8], rsi^^^mov     dword ptr [rcx+10h], 0^^^mov     word ptr [rax+8], 0^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A776^^^lock^^^inc     cs:narcs^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_47A788^^^lock^^^inc     dword ptr [rcx+10h]^^^pop     rbx^^^retn^^^mov     r8, [rcx]^^^cmp     r8, rdi^^^jz      loc_47A5F6^^^movzx   eax, dx^^^shl     rax, 4^^^add     rax, r9^^^movzx   edx, word ptr [rax+8]^^^mov     rcx, [rax]^^^test    dx, dx^^^jnz     short loc_47A790^^^jmp     loc_47A5F6^^^movzx   eax, word ptr [rbx]^^^mov     r9, cs:froms^^^movzx   eax, ax^^^shl     rax, 4^^^add     rax, r9^^^jmp     loc_47A5DA^^^
new_heap$$$mov     [rsp+var_20], rbx^^^lea     rbx, [rsi+rdi]^^^mov     [rsp+var_18], rbp^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^cmp     rbx, 7FFFh^^^mov     rbp, cs:_dl_pagesize^^^jbe     loc_402BA8^^^cmp     rbx, 4000000h^^^ja      loc_402C20^^^mov     rdi, cs:aligned_heap_area^^^test    rdi, rdi^^^jz      loc_402BBD^^^xor     r9d, r9d^^^xor     edx, edx^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 4022h^^^mov     esi, 4000000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r12, rax^^^mov     cs:aligned_heap_area, 0^^^jz      short loc_402BBD^^^test    eax, 3FFFFFFh^^^jnz     loc_402C40^^^sub     rbp, 1^^^mov     edx, 3^^^mov     rdi, r12^^^add     rbx, rbp^^^not     rbp^^^and     rbx, rbp^^^mov     rsi, rbx^^^call    mprotect^^^test    eax, eax^^^jnz     loc_402CA0^^^mov     [r12+10h], rbx^^^mov     [r12+18h], rbx^^^mov     rax, r12^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rdi, cs:aligned_heap_area^^^mov     ebx, 8000h^^^test    rdi, rdi^^^jnz     loc_402B1D^^^xor     r9d, r9d^^^xor     edx, edx^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 4022h^^^mov     esi, 8000000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_402C70^^^lea     r12, [rax+3FFFFFFh]^^^and     r12, 0FFFFFFFFFC000000h^^^mov     r13, r12^^^sub     r13, rax^^^jnz     short loc_402C58^^^lea     rdi, [r12+4000000h]^^^mov     cs:aligned_heap_area, rdi^^^mov     esi, 4000000h^^^sub     rsi, r13^^^call    munmap^^^jmp     loc_402B56^^^xor     eax, eax^^^cmp     rdi, 4000000h^^^mov     ebx, 4000000h^^^jbe     loc_402B0D^^^jmp     loc_402B88^^^mov     esi, 4000000h^^^mov     rdi, rax^^^call    munmap^^^jmp     loc_402BBD^^^mov     rdi, rax^^^mov     rsi, r13^^^call    munmap^^^lea     rdi, [r12+4000000h]^^^jmp     short loc_402C08^^^xor     r9d, r9d^^^xor     edx, edx^^^xor     edi, edi^^^mov     r8d, eax^^^mov     ecx, 4022h^^^mov     esi, 4000000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r12, rax^^^jz      short loc_402CB4^^^test    eax, 3FFFFFFh^^^jz      loc_402B56^^^nop     dword ptr [rax]^^^mov     esi, 4000000h^^^mov     rdi, r12^^^call    munmap^^^xor     eax, eax^^^jmp     loc_402B88^^^xor     eax, eax^^^jmp     loc_402B88^^^
free_check$$$test    rdi, rdi^^^push    rbx^^^mov     rbx, rdi^^^jz      short loc_405038^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_404FD9^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_5509^^^jmp     short loc_404FE6^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_5509^^^xor     esi, esi^^^mov     rdi, rbx^^^call    mem2chunk_check^^^test    rax, rax^^^mov     r8, rax^^^jz      loc_4050B0^^^test    byte ptr [rax+8], 2^^^jnz     short loc_405040^^^mov     edx, 1^^^mov     rsi, rax^^^mov     edi, offset main_arena^^^call    _int_free^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40502C^^^lock dec cs:main_arena^^^jnz     _L_unlock_5530^^^jmp     short loc_405038^^^dec     cs:main_arena^^^jnz     _L_unlock_5530^^^pop     rbx^^^retn^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_405058^^^lock dec cs:main_arena^^^jnz     _L_unlock_5552^^^jmp     short loc_405064^^^dec     cs:main_arena^^^jnz     _L_unlock_5552^^^mov     rsi, [r8+8]^^^test    sil, 2^^^jz      short loc_4050E8^^^mov     rax, [r8]^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^mov     rdi, r8^^^sub     rdi, rax^^^add     rsi, rax^^^mov     rax, cs:_dl_pagesize^^^mov     rdx, rdi^^^or      rdx, rsi^^^sub     rax, 1^^^test    rdx, rax^^^jnz     short loc_405101^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rsi^^^pop     rbx^^^jmp     munmap^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4050C8^^^lock dec cs:main_arena^^^jnz     _L_unlock_5611^^^jmp     short loc_4050D4^^^dec     cs:main_arena^^^jnz     _L_unlock_5611^^^mov     rdx, rbx^^^mov     edi, cs:check_action^^^mov     esi, offset aFreeInvalidPoi^^^pop     rbx^^^jmp     malloc_printerr^^^mov     ecx, offset __func___12372^^^mov     edx, 0B17h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPSize0x2^^^call    __malloc_assert^^^pop     rbx^^^mov     rdi, r8^^^jmp     munmap_chunk_part_4^^^
__libc_setup_tls$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 18h^^^mov     rax, cs:_dl_phdr^^^test    rax, rax^^^jz      short loc_4014F0^^^mov     rdx, cs:_dl_phnum^^^lea     rcx, ds:0[rdx*8]^^^shl     rdx, 6^^^sub     rdx, rcx^^^add     rdx, rax^^^cmp     rdx, rax^^^ja      short loc_4014C9^^^jmp     short loc_4014F0^^^add     rax, 38h^^^cmp     rdx, rax^^^jbe     short loc_4014F0^^^cmp     dword ptr [rax], 7^^^jnz     short loc_4014C0^^^mov     rbx, [rax+30h]^^^mov     r14, [rax+10h]^^^mov     r12, rsi^^^mov     rbp, [rax+28h]^^^mov     r13, [rax+20h]^^^cmp     rsi, rbx^^^mov     r8, r14^^^cmovb   r12, rbx^^^jmp     short loc_401500^^^mov     r12, rsi^^^xor     r8d, r8d^^^xor     ebx, ebx^^^xor     r14d, r14d^^^xor     r13d, r13d^^^xor     ebp, ebp^^^mov     rax, cs:_dl_tls_static_size^^^xor     edx, edx^^^add     rdi, r12^^^mov     [rsp+48h+var_40], r8^^^lea     r15, [rsi+rax-1]^^^add     r15, rbp^^^mov     rax, r15^^^div     rsi^^^mov     r15, rax^^^imul    r15, rsi^^^add     rdi, r15^^^call    sbrk^^^lea     rcx, [rax+r12-1]^^^mov     rax, r12^^^mov     cs:static_dtv, 3Eh^^^neg     rax^^^mov     r8, [rsp+48h+var_40]^^^and     rcx, rax^^^test    rbx, rbx^^^jnz     short loc_4015B8^^^mov     rdi, r15^^^mov     rax, rbp^^^sub     rdi, rbp^^^add     rdi, rcx^^^mov     rsi, r8^^^mov     rdx, r13^^^mov     [rsp+48h+var_40], rcx^^^mov     cs:qword_6C3780, rdi^^^mov     cs:qword_6C3FA0, rax^^^mov     cs:byte_6C3788, 1^^^call    memcpy^^^mov     rcx, [rsp+48h+var_40]^^^mov     edi, 1002h^^^mov     eax, 9Eh^^^lea     rsi, [rcx+r15]^^^mov     qword ptr [rsi+8], offset unk_6C3770^^^mov     [rsi], rsi^^^mov     [rsi+10h], rsi^^^syscall^^^test    eax, eax^^^jz      short loc_4015D8^^^mov     edi, offset aCannotSetFsBas^^^call    __libc_fatal^^^lea     rax, [rbp+rbx-1]^^^xor     edx, edx^^^mov     rdi, r15^^^div     rbx^^^imul    rax, rbx^^^sub     rdi, rax^^^add     rdi, rcx^^^jmp     short loc_40155D^^^and     cs:byte_6C3E74, 0FCh^^^test    rbx, rbx^^^mov     cs:qword_6C3F90, rbx^^^mov     cs:qword_6C3F88, rbp^^^mov     cs:qword_6C3F78, r14^^^mov     cs:qword_6C3F80, r13^^^mov     cs:qword_6C3FA8, 1^^^mov     cs:static_slotinfo, 40h^^^mov     cs:_dl_tls_max_dtv_idx, 1^^^mov     cs:_dl_tls_dtv_slotinfo_list, offset static_slotinfo^^^mov     cs:qword_6C4008, offset static_map^^^jz      short loc_4016A0^^^lea     rax, [rbp+rbx-1]^^^xor     edx, edx^^^div     rbx^^^mov     rbp, rax^^^imul    rbx, rbp^^^mov     rax, cs:_dl_tls_static_size^^^mov     cs:_dl_tls_static_nelem, 1^^^lea     rax, [rbx+rax+3Fh]^^^mov     cs:_dl_tls_static_used, rbx^^^and     rax, 0FFFFFFFFFFFFFFC0h^^^add     rax, 900h^^^cmp     r12, 40h^^^mov     cs:_dl_tls_static_size, rax^^^mov     eax, 40h^^^cmovnb  rax, r12^^^mov     cs:_dl_tls_static_align, rax^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     bl, 1^^^jmp     short loc_401644^^^
_IO_new_file_xsputn$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^xor     eax, eax^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     rbp, rdi^^^mov     [rsp+var_8], r14^^^sub     rsp, 28h^^^test    rdx, rdx^^^mov     r12, rsi^^^mov     rbx, rdx^^^jz      loc_429FDD^^^mov     eax, [rdi]^^^and     eax, 0A00h^^^cmp     eax, 0A00h^^^jz      loc_42A000^^^mov     rax, [rdi+30h]^^^mov     rdi, [rdi+28h]^^^mov     r13, rdx^^^cmp     rax, rdi^^^ja      short loc_429F18^^^mov     rax, [rbp+0D8h]^^^mov     esi, 0FFFFFFFFh^^^mov     rdi, rbp^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_42A070^^^mov     rcx, [rbp+40h]^^^sub     rcx, [rbp+38h]^^^xor     edx, edx^^^cmp     rcx, 7Fh^^^jbe     short loc_429EE6^^^mov     rax, r13^^^xor     edx, edx^^^div     rcx^^^mov     r14, r13^^^sub     r14, rdx^^^jnz     loc_42A090^^^test    r13, r13^^^jz      loc_429FD7^^^lea     rsi, [r12+r14]^^^mov     rdx, r13^^^mov     rdi, rbp^^^call    _IO_default_xsputn^^^sub     r13, rax^^^jmp     loc_429FD7^^^sub     rax, rdi^^^xor     r14d, r14d^^^test    rax, rax^^^mov     r13, rbx^^^jz      loc_429FCB^^^cmp     rax, rbx^^^mov     r13, rbx^^^cmovbe  r13, rax^^^cmp     r13, 14h^^^ja      loc_42A058^^^mov     edx, r13d^^^lea     ecx, [r13-1]^^^mov     r9d, r13d^^^and     edx, 0FFFFFFF0h^^^jz      loc_42A0B7^^^lea     rax, [r12+10h]^^^cmp     r13d, 0Fh^^^lea     r8, [rdi+10h]^^^setnbe  sil^^^cmp     rdi, rax^^^setnbe  al^^^cmp     r12, r8^^^setnbe  r8b^^^or      eax, r8d^^^test    sil, al^^^jz      loc_42A0B7^^^mov     r8d, edx^^^movdqu  xmm0, xmmword ptr [r12]^^^lea     rsi, [r12+r8]^^^sub     ecx, edx^^^add     r8, rdi^^^cmp     r13d, edx^^^movdqu  xmmword ptr [rdi], xmm0^^^jz      short loc_429FB0^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   edx, byte ptr [rsi+rax]^^^mov     [r8+rax], dl^^^add     rax, 1^^^cmp     ecx, eax^^^jns     short loc_429FA0^^^sub     r9d, 1^^^add     r9, 1^^^add     rdi, r9^^^add     r12, r9^^^mov     [rbp+28h], rdi^^^mov     rax, rbx^^^sub     rax, r13^^^mov     r13, rax^^^add     r14, r13^^^test    r14, r14^^^jnz     loc_429EB3^^^mov     rax, rbx^^^sub     rax, r13^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rdi, [rdi+28h]^^^mov     rax, [rbp+40h]^^^xor     r14d, r14d^^^sub     rax, rdi^^^cmp     rdx, rax^^^ja      loc_429F1E^^^lea     rdx, [rsi+rdx]^^^cmp     rsi, rdx^^^jnb     loc_429F2A^^^cmp     byte ptr [rdx-1], 0Ah^^^lea     r13, [rdx-1]^^^jz      short loc_42A040^^^xchg    ax, ax^^^cmp     r13, r12^^^jz      short loc_42A0AF^^^sub     r13, 1^^^cmp     byte ptr [r13+0], 0Ah^^^jnz     short loc_42A030^^^sub     r13, r12^^^mov     r14d, 1^^^lea     rax, [r13+1]^^^jmp     loc_429F1E^^^mov     rsi, r12^^^mov     rdx, r13^^^add     r12, r13^^^call    mempcpy^^^mov     [rbp+28h], rax^^^jmp     loc_429FC2^^^sub     rbx, r13^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^test    r13, r13^^^cmovnz  rax, rbx^^^jmp     loc_429FDD^^^mov     rdx, r14^^^mov     rsi, r12^^^mov     rdi, rbp^^^call    new_do_write^^^sub     r13, rax^^^cmp     r14, rax^^^jbe     loc_429EF2^^^jmp     loc_429FD7^^^xor     r14d, r14d^^^jmp     loc_429F2A^^^mov     r8, rdi^^^mov     rsi, r12^^^jmp     loc_429F96^^^
__gconv_transform_internal_utf8$$$push    r15^^^mov     rax, rsi^^^add     rax, 38h^^^push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 0C8h^^^mov     ebx, [rsi+10h]^^^mov     [rsp+0F8h+var_90], rdi^^^add     rdi, 68h^^^mov     [rsp+0F8h+var_D0], rsi^^^mov     [rsp+0F8h+var_B8], r8^^^mov     [rsp+0F8h+var_B0], r9^^^test    bl, 1^^^mov     r12d, [rsp+0F8h+arg_0]^^^mov     [rsp+0F8h+var_A8], rdi^^^mov     [rsp+0F8h+var_A0], rax^^^mov     [rsp+0F8h+var_C0], 0^^^jnz     short loc_45C09D^^^mov     rdi, [rsp+0F8h+var_90]^^^mov     rdi, [rdi+90h]^^^mov     [rsp+0F8h+var_C0], rdi^^^mov     rdi, [rsp+0F8h+var_90]^^^cmp     qword ptr [rdi+68h], 0^^^jz      short loc_45C09D^^^mov     rax, [rsp+0F8h+var_C0]^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0F8h+var_C0], rax^^^test    r12d, r12d^^^jnz     loc_45C65D^^^cmp     [rsp+0F8h+var_B8], 0^^^jnz     loc_45C64B^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     r15, [rdi]^^^mov     rdx, rdi^^^cmp     [rsp+0F8h+var_B0], 0^^^mov     [rsp+0F8h+var_98], 0^^^lea     rax, [rsp+0F8h+var_88]^^^cmovz   rax, [rsp+0F8h+var_98]^^^mov     r13, [rdx+8]^^^mov     [rsp+0F8h+var_88], 0^^^mov     [rsp+0F8h+var_98], rax^^^mov     eax, [rsp+0F8h+arg_8]^^^test    eax, eax^^^jnz     loc_45C3CD^^^mov     rcx, [r14]^^^mov     [rsp+0F8h+var_D8], rcx^^^mov     rax, rcx^^^nop     dword ptr [rax+rax+00h]^^^mov     r12d, ebx^^^mov     [rsp+0F8h+var_58], rax^^^mov     [rsp+0F8h+var_68], r15^^^and     r12d, 2^^^mov     rbx, r15^^^mov     dword ptr [rsp+0F8h+var_C8], 4^^^jmp     short loc_45C173^^^lea     rdx, [rax+4]^^^cmp     rbp, rdx^^^jb      loc_45C3C0^^^cmp     r13, rbx^^^jbe     loc_45C396^^^mov     edx, [rax]^^^cmp     edx, 7Fh^^^ja      loc_45C306^^^mov     [rbx], dl^^^add     rbx, 1^^^mov     [rsp+0F8h+var_68], rbx^^^mov     rax, [rsp+0F8h+var_58]^^^add     rax, 4^^^mov     [rsp+0F8h+var_58], rax^^^cmp     rbp, rax^^^jnz     short loc_45C130^^^cmp     [rsp+0F8h+var_B8], 0^^^mov     [r14], rax^^^jnz     loc_45C3AD^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     r12, [rdi+30h]^^^test    r12, r12^^^jz      short loc_45C1C9^^^nop     dword ptr [rax]^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45C1BF^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r15^^^mov     rdx, [r14]^^^mov     rsi, [rsp+0F8h+var_D8]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45C198^^^mov     rax, [rsp+0F8h+var_D0]^^^add     dword ptr [rax+14h], 1^^^test    byte ptr [rax+10h], 1^^^jnz     loc_45C636^^^cmp     rbx, r15^^^jbe     short loc_45C24C^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     rax, [rdi]^^^mov     rdi, [rsp+0F8h+var_C0]^^^mov     [rsp+0F8h+var_78], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0F8h+arg_8]^^^xor     r8d, r8d^^^mov     dword ptr [rsp+0F8h+var_F8], 0^^^mov     r9, [rsp+0F8h+var_B0]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0F8h+var_78]^^^mov     rsi, [rsp+0F8h+var_A0]^^^mov     rdi, [rsp+0F8h+var_A8]^^^mov     dword ptr [rsp+0F8h+var_F0], eax^^^call    [rsp+0F8h+var_C0]^^^cmp     eax, 4^^^mov     r12d, eax^^^jz      short loc_45C271^^^mov     r10, [rsp+0F8h+var_78]^^^cmp     r10, rbx^^^jnz     loc_45C58D^^^mov     dword ptr [rsp+0F8h+var_C8], r12d^^^mov     eax, dword ptr [rsp+0F8h+var_C8]^^^test    eax, eax^^^jnz     short loc_45C280^^^mov     rax, [rsp+0F8h+var_D0]^^^mov     rbx, [r14]^^^mov     r15, [rax]^^^mov     [rsp+0F8h+var_D8], rbx^^^mov     ebx, [rax+10h]^^^mov     rax, [rsp+0F8h+var_D8]^^^jmp     loc_45C108^^^cmp     dword ptr [rsp+0F8h+var_C8], 5^^^jz      short loc_45C254^^^mov     eax, dword ptr [rsp+0F8h+var_C8]^^^test    eax, eax^^^jz      short loc_45C254^^^cmp     dword ptr [rsp+0F8h+var_C8], 7^^^jnz     short loc_45C2F0^^^mov     eax, [rsp+0F8h+arg_8]^^^test    eax, eax^^^jz      short loc_45C2F0^^^mov     rdx, [r14]^^^mov     rax, rbp^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45C574^^^xor     ecx, ecx^^^cmp     rbp, rdx^^^mov     rax, rdx^^^mov     r8, [rsp+0F8h+var_D0]^^^jbe     loc_45C51E^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r8+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, rbp^^^mov     [r14], rax^^^jnz     short loc_45C2B8^^^sub     eax, edx^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     rcx, [rdi+20h]^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     dword ptr [rsp+0F8h+var_C8], 7^^^mov     eax, dword ptr [rsp+0F8h+var_C8]^^^add     rsp, 0C8h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    edx, edx^^^js      loc_45C6C7^^^test    edx, 0FFFFF800h^^^mov     esi, 0FFFFFFC0h^^^mov     ecx, 2^^^jz      short loc_45C35B^^^test    edx, 0FFFF0000h^^^mov     esi, 0FFFFFFE0h^^^mov     cl, 3^^^jz      short loc_45C35B^^^test    edx, 0FFE00000h^^^mov     esi, 0FFFFFFF0h^^^mov     cl, 4^^^jz      short loc_45C35B^^^mov     ecx, edx^^^and     ecx, 0FC000000h^^^cmp     ecx, 1^^^sbb     esi, esi^^^and     esi, 0FFFFFFFCh^^^sub     esi, 4^^^cmp     ecx, 1^^^sbb     rcx, rcx^^^add     rcx, 6^^^lea     rdi, [rbx+rcx]^^^cmp     r13, rdi^^^jb      short loc_45C396^^^mov     [rbx], sil^^^add     [rsp+0F8h+var_68], rcx^^^mov     eax, edx^^^sub     rcx, 1^^^shr     edx, 6^^^and     eax, 3Fh^^^or      eax, 0FFFFFF80h^^^cmp     rcx, 1^^^mov     [rbx+rcx], al^^^ja      short loc_45C36F^^^or      [rbx], dl^^^mov     rbx, [rsp+0F8h+var_68]^^^jmp     loc_45C15F^^^cmp     [rsp+0F8h+var_B8], 0^^^mov     dword ptr [rsp+0F8h+var_C8], 5^^^mov     [r14], rax^^^jz      loc_45C187^^^mov     rcx, [rsp+0F8h+var_B8]^^^mov     [rcx], rbx^^^jmp     loc_45C2F0^^^mov     dword ptr [rsp+0F8h+var_C8], 7^^^jmp     loc_45C178^^^mov     r12, [rdx+20h]^^^mov     edx, [r12]^^^test    dl, 7^^^jz      loc_45C511^^^cmp     [rsp+0F8h+var_B8], 0^^^jnz     loc_45C55B^^^mov     rax, [r14]^^^and     edx, 7^^^mov     [rsp+0F8h+var_58], r15^^^mov     ecx, 4^^^mov     [rsp+0F8h+var_68], rax^^^jz      short loc_45C42C^^^lea     r11, [rsp+0F8h+var_48]^^^xor     cl, cl^^^movzx   esi, byte ptr [r12+rcx+4]^^^mov     [r11+rcx], sil^^^add     rcx, 1^^^cmp     rdx, rcx^^^ja      short loc_45C411^^^mov     ecx, 4^^^sub     rcx, rdx^^^add     rcx, rax^^^cmp     rbp, rcx^^^jb      loc_45C525^^^cmp     r15, r13^^^mov     dword ptr [rsp+0F8h+var_C8], 5^^^jnb     loc_45C2F0^^^lea     r11, [rsp+0F8h+var_48]^^^jmp     short loc_45C459^^^cmp     rdx, 3^^^ja      short loc_45C475^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^mov     [rsp+0F8h+var_68], rax^^^mov     [r11+rdx], cl^^^add     rdx, 1^^^cmp     rbp, rax^^^ja      short loc_45C453^^^mov     eax, [rsp+0F8h+var_48]^^^add     rdx, r11^^^mov     [rsp+0F8h+var_68], r11^^^mov     [rsp+0F8h+var_D8], rdx^^^cmp     eax, 7Fh^^^ja      loc_45CA6D^^^mov     [r15], al^^^lea     rax, [r15+1]^^^mov     [rsp+0F8h+var_58], rax^^^mov     rax, [rsp+0F8h+var_68]^^^mov     dword ptr [rsp+0F8h+var_C8], 0^^^add     rax, 4^^^mov     [rsp+0F8h+var_68], rax^^^cmp     rax, r11^^^jz      loc_45C96B^^^mov     edx, [r12]^^^sub     rax, r11^^^mov     rcx, rdx^^^and     ecx, 7^^^cmp     rax, rcx^^^jle     loc_45CA54^^^mov     rdi, [r14]^^^sub     rax, rcx^^^and     edx, 0FFFFFFF8h^^^mov     r15, [rsp+0F8h+var_58]^^^add     rax, rdi^^^mov     [rsp+0F8h+var_D8], rax^^^mov     [r14], rax^^^mov     rax, [rsp+0F8h+var_D0]^^^mov     [r12], edx^^^mov     ebx, [rax+10h]^^^mov     rax, [rsp+0F8h+var_D8]^^^jmp     loc_45C108^^^mov     rax, [r14]^^^mov     [rsp+0F8h+var_D8], rax^^^jmp     loc_45C108^^^xor     eax, eax^^^jmp     loc_45C2D6^^^cmp     rbp, rax^^^mov     [r14], rbp^^^mov     dword ptr [rsp+0F8h+var_C8], 7^^^jbe     loc_45C2F0^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^mov     [r12+rdx+4], cl^^^add     rdx, 1^^^cmp     rax, rbp^^^mov     [rsp+0F8h+var_68], rax^^^jnz     short loc_45C539^^^jmp     loc_45C2E8^^^mov     ecx, offset __PRETTY_FUNCTION___12252^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12252^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     rbx, [rsp+0F8h+var_D8]^^^mov     rdx, r15^^^mov     [rsp+0F8h+var_58], r15^^^mov     eax, 4^^^mov     r11d, [rdi+10h]^^^mov     [r14], rbx^^^mov     rdi, rbx^^^mov     [rsp+0F8h+var_68], rbx^^^and     r11d, 2^^^mov     ecx, r11d^^^mov     r11, r15^^^mov     r15d, r12d^^^mov     r12, r10^^^mov     r10, r13^^^mov     r13d, ecx^^^jmp     short loc_45C61B^^^lea     rcx, [rdi+4]^^^cmp     rbp, rcx^^^jb      loc_45C8A0^^^cmp     r12, rdx^^^jbe     loc_45C916^^^mov     ecx, [rdi]^^^cmp     ecx, 7Fh^^^ja      loc_45C754^^^mov     [rdx], cl^^^add     rdx, 1^^^mov     [rsp+0F8h+var_58], rdx^^^mov     rdi, [rsp+0F8h+var_68]^^^add     rdi, 4^^^mov     [rsp+0F8h+var_68], rdi^^^cmp     rbp, rdi^^^jnz     short loc_45C5D8^^^mov     r12d, r15d^^^mov     r13, r10^^^mov     r15, r11^^^mov     [rsp+0F8h+var_D8], rdi^^^mov     rbx, rdi^^^jmp     loc_45C8B6^^^mov     [rax], rbx^^^mov     rbx, [rsp+0F8h+var_B0]^^^mov     rax, [rsp+0F8h+var_88]^^^add     [rbx], rax^^^jmp     loc_45C280^^^mov     rax, [rsp+0F8h+var_B8]^^^mov     rdx, [rsp+0F8h+var_D0]^^^mov     r15, [rax]^^^jmp     loc_45C0BD^^^cmp     [rsp+0F8h+var_B8], 0^^^jnz     loc_45CC1C^^^mov     rdx, [rsp+0F8h+var_D0]^^^mov     rax, [rdx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rdx+10h], 1^^^mov     dword ptr [rsp+0F8h+var_C8], 0^^^jnz     loc_45C2F0^^^mov     rdi, [rsp+0F8h+var_C0]^^^call    _dl_mcount_wrapper_check^^^mov     ebx, [rsp+0F8h+arg_8]^^^mov     dword ptr [rsp+0F8h+var_F8], r12d^^^xor     r8d, r8d^^^mov     r9, [rsp+0F8h+var_B0]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0F8h+var_A0]^^^mov     rdi, [rsp+0F8h+var_A8]^^^mov     dword ptr [rsp+0F8h+var_F0], ebx^^^call    [rsp+0F8h+var_C0]^^^mov     dword ptr [rsp+0F8h+var_C8], eax^^^jmp     loc_45C2F0^^^cmp     [rsp+0F8h+var_98], 0^^^jz      short loc_45C747^^^mov     rdx, [rsp+0F8h+var_D0]^^^mov     r10, [rdx+30h]^^^test    r10, r10^^^jz      short loc_45C73E^^^mov     rbx, r10^^^mov     rdi, [rbx]^^^call    _dl_mcount_wrapper_check^^^mov     rcx, [rsp+0F8h+var_98]^^^lea     rdi, [rsp+0F8h+var_68]^^^mov     rdx, [rbx+18h]^^^mov     r9, rbp^^^lea     r8, [rsp+0F8h+var_58]^^^mov     rsi, [rsp+0F8h+var_D0]^^^mov     [rsp+0F8h+var_F8], rdi^^^mov     rdi, [rsp+0F8h+var_90]^^^mov     [rsp+0F8h+var_F0], rcx^^^mov     rcx, [r14]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^jnz     loc_45C9BA^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45C6E0^^^mov     rax, [rsp+0F8h+var_58]^^^mov     rbx, [rsp+0F8h+var_68]^^^test    r12d, r12d^^^jnz     loc_45C998^^^mov     dword ptr [rsp+0F8h+var_C8], 6^^^jmp     loc_45C178^^^test    ecx, ecx^^^js      loc_45C7F3^^^test    ecx, 0FFFFF800h^^^mov     r8d, 0FFFFFFC0h^^^mov     esi, 2^^^jz      short loc_45C7B1^^^test    ecx, 0FFFF0000h^^^mov     r8d, 0FFFFFFE0h^^^mov     sil, 3^^^jz      short loc_45C7B1^^^test    ecx, 0FFE00000h^^^mov     r8d, 0FFFFFFF0h^^^mov     sil, 4^^^jz      short loc_45C7B1^^^mov     esi, ecx^^^and     esi, 0FC000000h^^^cmp     esi, 1^^^sbb     r8d, r8d^^^and     r8d, 0FFFFFFFCh^^^sub     r8d, 4^^^cmp     esi, 1^^^sbb     rsi, rsi^^^add     rsi, 6^^^lea     r9, [rdx+rsi]^^^cmp     r12, r9^^^jb      loc_45C916^^^mov     [rdx], r8b^^^add     [rsp+0F8h+var_58], rsi^^^mov     ebx, ecx^^^sub     rsi, 1^^^shr     ecx, 6^^^and     ebx, 3Fh^^^mov     edi, ebx^^^or      edi, 0FFFFFF80h^^^cmp     rsi, 1^^^mov     [rdx+rsi], dil^^^ja      short loc_45C7C9^^^or      [rdx], cl^^^mov     rdx, [rsp+0F8h+var_58]^^^jmp     loc_45C607^^^cmp     [rsp+0F8h+var_98], 0^^^jz      loc_45C888^^^mov     rax, [rsp+0F8h+var_D0]^^^mov     rbx, [rax+30h]^^^test    rbx, rbx^^^jz      short loc_45C87F^^^mov     rdi, [rbx]^^^mov     [rsp+0F8h+var_E0], r10^^^mov     [rsp+0F8h+var_E8], r11^^^call    _dl_mcount_wrapper_check^^^mov     rcx, [rsp+0F8h+var_98]^^^lea     rdi, [rsp+0F8h+var_58]^^^mov     rdx, [rbx+18h]^^^mov     r9, rbp^^^lea     r8, [rsp+0F8h+var_68]^^^mov     rsi, [rsp+0F8h+var_D0]^^^mov     [rsp+0F8h+var_F8], rdi^^^mov     rdi, [rsp+0F8h+var_90]^^^mov     [rsp+0F8h+var_F0], rcx^^^mov     rcx, [r14]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^mov     r10, [rsp+0F8h+var_E0]^^^mov     r11, [rsp+0F8h+var_E8]^^^jnz     loc_45C94D^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45C80D^^^mov     rdi, [rsp+0F8h+var_68]^^^mov     rdx, [rsp+0F8h+var_58]^^^test    r13d, r13d^^^jnz     loc_45C92E^^^mov     r12d, r15d^^^mov     r13, r10^^^mov     r15, r11^^^mov     [rsp+0F8h+var_D8], rdi^^^mov     eax, 6^^^mov     rbx, rdi^^^jmp     short loc_45C8B6^^^mov     r12d, r15d^^^mov     r13, r10^^^mov     r15, r11^^^mov     [rsp+0F8h+var_D8], rdi^^^mov     eax, 7^^^mov     rbx, rdi^^^cmp     [rsp+0F8h+var_78], rdx^^^mov     [r14], rbx^^^jnz     short loc_45C8FD^^^cmp     eax, 5^^^jnz     short loc_45C8E4^^^cmp     rdx, r15^^^jnz     loc_45C247^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     dword ptr [rsp+0F8h+var_C8], r12d^^^sub     dword ptr [rdi+14h], 1^^^jmp     loc_45C24C^^^mov     ecx, offset __PRETTY_FUNCTION___12252^^^mov     edx, 2E1h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aNstatus__gconv^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12252^^^mov     edx, 2E0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufOuterr^^^call    __assert_fail^^^mov     r12d, r15d^^^mov     r13, r10^^^mov     r15, r11^^^mov     [rsp+0F8h+var_D8], rdi^^^mov     eax, 5^^^mov     rbx, rdi^^^jmp     short loc_45C8B6^^^mov     rbx, [rsp+0F8h+var_98]^^^add     rdi, 4^^^mov     eax, 6^^^mov     [rsp+0F8h+var_68], rdi^^^add     qword ptr [rbx], 1^^^jmp     loc_45C61B^^^cmp     eax, 5^^^jz      loc_45CBBE^^^mov     rdi, [rsp+0F8h+var_68]^^^mov     rdx, [rsp+0F8h+var_58]^^^jmp     loc_45C61B^^^cmp     dword ptr [rsp+0F8h+var_C8], 7^^^jz      short loc_45C9DC^^^mov     eax, dword ptr [rsp+0F8h+var_C8]^^^test    eax, eax^^^jnz     loc_45C2F0^^^mov     rbx, [r14]^^^mov     rdi, [rsp+0F8h+var_D0]^^^mov     [rsp+0F8h+var_D8], rbx^^^mov     ebx, [rdi+10h]^^^mov     rax, [rsp+0F8h+var_D8]^^^jmp     loc_45C108^^^mov     rdx, [rsp+0F8h+var_98]^^^add     rax, 4^^^mov     dword ptr [rsp+0F8h+var_C8], 6^^^mov     [rsp+0F8h+var_58], rax^^^add     qword ptr [rdx], 1^^^jmp     loc_45C173^^^cmp     eax, 5^^^mov     dword ptr [rsp+0F8h+var_C8], eax^^^mov     rbx, [rsp+0F8h+var_68]^^^mov     rax, [rsp+0F8h+var_58]^^^jnz     loc_45C173^^^jmp     loc_45C178^^^lea     rdx, [rax+4]^^^cmp     [rsp+0F8h+var_D8], rdx^^^jz      loc_45CC67^^^mov     ecx, [r12]^^^mov     rdx, [rsp+0F8h+var_D8]^^^mov     rsi, rcx^^^sub     rdx, rax^^^and     ecx, 0FFFFFFF8h^^^and     esi, 7^^^mov     rbx, rdx^^^sub     rbx, rsi^^^movsxd  rsi, ecx^^^add     [r14], rbx^^^cmp     rdx, rsi^^^jle     loc_45CC4E^^^cmp     rdx, 7^^^jg      loc_45CC35^^^or      edx, ecx^^^cmp     [rsp+0F8h+var_D8], rax^^^mov     [r12], edx^^^jbe     loc_45C2F0^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [r12+4], dl^^^add     r12, 1^^^cmp     rax, [rsp+0F8h+var_D8]^^^mov     [rsp+0F8h+var_68], rax^^^jnz     short loc_45CA30^^^jmp     loc_45C2F0^^^mov     ecx, offset __PRETTY_FUNCTION___12209^^^mov     edx, 1C0h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInptrBytebufSt^^^call    __assert_fail^^^test    eax, eax^^^js      loc_45CAF8^^^test    eax, 0FFFFF800h^^^mov     ecx, 0FFFFFFC0h^^^mov     edx, 2^^^jz      short loc_45CABF^^^test    eax, 0FFFF0000h^^^mov     ecx, 0FFFFFFE0h^^^mov     dl, 3^^^jz      short loc_45CABF^^^test    eax, 0FFE00000h^^^mov     ecx, 0FFFFFFF0h^^^mov     dl, 4^^^jz      short loc_45CABF^^^mov     edx, eax^^^and     edx, 0FC000000h^^^cmp     edx, 1^^^sbb     ecx, ecx^^^and     ecx, 0FFFFFFFCh^^^sub     ecx, 4^^^cmp     edx, 1^^^sbb     rdx, rdx^^^add     rdx, 6^^^lea     rsi, [r15+rdx]^^^cmp     r13, rsi^^^jb      loc_45CC0F^^^mov     [r15], cl^^^add     [rsp+0F8h+var_58], rdx^^^mov     ecx, eax^^^sub     rdx, 1^^^shr     eax, 6^^^and     ecx, 3Fh^^^or      ecx, 0FFFFFF80h^^^cmp     rdx, 1^^^mov     [r15+rdx], cl^^^ja      short loc_45CAD7^^^or      [r15], al^^^jmp     loc_45C4A4^^^cmp     [rsp+0F8h+var_98], 0^^^jz      loc_45CC02^^^mov     rdx, [rsp+0F8h+var_D0]^^^mov     r10, [rdx+30h]^^^test    r10, r10^^^jz      loc_45CBFD^^^mov     [rsp+0F8h+var_C8], r15^^^mov     r15, r13^^^mov     r13, r12^^^mov     r12d, ebx^^^mov     rbx, r10^^^mov     rdi, [rbx]^^^mov     [rsp+0F8h+var_E8], r11^^^call    _dl_mcount_wrapper_check^^^mov     rcx, [rsp+0F8h+var_98]^^^lea     rdi, [rsp+0F8h+var_58]^^^mov     rdx, [rbx+18h]^^^mov     r9, [rsp+0F8h+var_D8]^^^lea     r8, [rsp+0F8h+var_68]^^^mov     rsi, [rsp+0F8h+var_D0]^^^mov     [rsp+0F8h+var_F8], rdi^^^mov     rdi, [rsp+0F8h+var_90]^^^mov     [rsp+0F8h+var_F0], rcx^^^mov     rcx, [r14]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^mov     r11, [rsp+0F8h+var_E8]^^^jnz     short loc_45CBE1^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45CB27^^^mov     ebx, r12d^^^mov     rax, [rsp+0F8h+var_68]^^^mov     r12, r13^^^mov     r13, r15^^^mov     r15, [rsp+0F8h+var_C8]^^^and     ebx, 2^^^mov     dword ptr [rsp+0F8h+var_C8], 6^^^jz      loc_45C4C0^^^mov     rbx, [rsp+0F8h+var_98]^^^add     rax, 4^^^mov     [rsp+0F8h+var_68], rax^^^add     qword ptr [rbx], 1^^^jmp     loc_45C4C0^^^mov     rbx, [rsp+0F8h+var_68]^^^mov     r12d, r15d^^^mov     r13, r10^^^mov     r15, r11^^^mov     rdx, [rsp+0F8h+var_58]^^^mov     [rsp+0F8h+var_D8], rbx^^^jmp     loc_45C8B6^^^mov     r12, r13^^^mov     r13, r15^^^mov     r15, [rsp+0F8h+var_C8]^^^mov     dword ptr [rsp+0F8h+var_C8], eax^^^mov     rax, [rsp+0F8h+var_68]^^^jmp     loc_45C4C0^^^mov     rax, r11^^^jmp     short loc_45CB93^^^mov     dword ptr [rsp+0F8h+var_C8], 6^^^jmp     loc_45C2F0^^^mov     dword ptr [rsp+0F8h+var_C8], 5^^^jmp     loc_45C2F0^^^mov     ecx, offset __PRETTY_FUNCTION___12252^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12209^^^mov     edx, 1DDh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptr7^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12209^^^mov     edx, 1DCh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptrStat^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12209^^^mov     edx, 1D2h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendBytebuf4^^^call    __assert_fail^^^
__strcmp_sse2$$$mov     ecx, esi        ^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^cmp     ecx, 30h^^^ja      short loc_42E010^^^cmp     eax, 30h^^^ja      short loc_42E010^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3D0^^^add     rsi, 10h^^^add     rdi, 10h^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_42E050^^^ja      short loc_42E033^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49C9E0^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax+00000000h]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^jmp     short loc_42E090^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E1F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E1F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E150^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_42E210^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E15A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E330^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E330^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E290^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_42E350^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E29A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E470^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E470^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E3D0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_42E490^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E3DA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E5B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E5B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E510^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_42E5D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E51A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E6F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E6F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E650^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_42E710^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E65A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E830^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E790^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_42E850^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E79A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42E970^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42E970^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42E8D0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_42E990^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42E8DA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42EAB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42EAB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42EA10^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_42EAD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42EA1A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42EBF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42EBF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42EB50^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_42EC10^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42EB5A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42ED30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42ED30^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42EC90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_42ED50^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42EC9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42EE70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42EE70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42EDD0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_42EE90^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42EDDA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42EFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42EFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42EF10^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_42EFD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42EF1A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42F0F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42F0F0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42F050^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_42F110^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42F05A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42F230^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42F230^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42F190^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_42F250^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42F19A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_42F3A0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_42F3B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_42F370^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      short loc_42F370^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     short loc_42F3B0^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_42F2D0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_42F390^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_42F2DA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^xchg    ax, ax^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_42F3D0^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^sub     eax, ecx^^^retn^^^
__printf_fp$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 138h^^^mov     [rbp+var_80], 0^^^mov     [rbp+var_40], 0^^^movzx   ecx, byte ptr [rsi+0Dh]^^^mov     eax, ecx^^^shr     al, 2^^^and     eax, 1^^^and     ecx, 1^^^movzx   esi, al^^^mov     [rbp+var_BC], esi^^^jnz     loc_420498^^^mov     rsi, 0FFFFFFFFFFFFFFB8h^^^mov     rsi, fs:[rsi]^^^mov     rsi, [rsi]^^^mov     rdi, [rsi+40h]^^^mov     [rbp+var_E8], rdi^^^mov     esi, [rsi+58h]^^^mov     [rbp+var_C0], esi^^^movzx   r15d, byte ptr [r12+0Ch]^^^test    r15b, r15b^^^jns     loc_4203F8^^^test    cl, cl^^^jz      loc_420800^^^mov     rsi, 0FFFFFFFFFFFFFFB0h^^^mov     rsi, fs:[rsi]^^^mov     rsi, [rsi]^^^mov     rsi, [rsi+60h]^^^mov     [rbp+var_C8], rsi^^^mov     rdi, rsi^^^movzx   esi, byte ptr [rdi]^^^sub     esi, 1^^^cmp     sil, 7Dh^^^ja      loc_4203F8^^^mov     esi, [rbp+var_BC]^^^test    esi, esi^^^jz      loc_4209C0^^^test    cl, cl^^^jnz     loc_420AD0^^^mov     rcx, 0FFFFFFFFFFFFFFB8h^^^mov     [rbp+var_F8], 0^^^mov     rcx, fs:[rcx]^^^mov     rcx, [rcx]^^^mov     ecx, [rcx+60h]^^^test    ecx, ecx^^^mov     [rbp+var_EC], ecx^^^setz    cl^^^test    cl, cl^^^jz      loc_420A78^^^test    al, al^^^jz      loc_420A78^^^test    r15b, 1^^^mov     [rbp+var_C8], 0^^^mov     [rbp+var_EC], 0^^^mov     rax, [rdx]^^^jnz     loc_420425^^^nop     word ptr [rax+rax+00h]^^^movsd   xmm0, qword ptr [rax]^^^movsd   [rbp+var_B8], xmm0^^^call    isnan^^^test    eax, eax^^^jz      loc_420500^^^mov     rdx, 0FFFFFFFFFFFFFFE8h^^^movsxd  rcx, dword ptr [r12+8]^^^mov     r14d, offset unk_49BCF8^^^mov     rax, [rbp+var_B8]^^^mov     r13d, offset aNan_0^^^mov     rdx, fs:[rdx]^^^shr     rax, 38h^^^test    al, al^^^movzx   edx, word ptr [rdx+rcx*2]^^^sets    al^^^mov     ecx, offset unk_49BCE8^^^movzx   eax, al^^^mov     [rbp+var_40], eax^^^and     edx, 100h^^^mov     edx, offset aNan^^^cmovz   r14, rcx^^^cmovz   r13, rdx^^^test    eax, eax^^^mov     r8d, [r12+4]^^^jz      loc_420828^^^nop     dword ptr [rax+00h]^^^sub     r8d, 1^^^sub     r8d, 3^^^test    r8d, r8d^^^setnle  r9b^^^jle     loc_420848^^^and     r15d, 20h^^^jnz     loc_420848^^^mov     eax, [rbp+var_BC]^^^movsxd  rcx, r8d^^^mov     esi, 20h^^^mov     rdx, rcx^^^mov     rdi, rbx^^^mov     [rbp+var_140], rcx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^test    eax, eax^^^jz      loc_420908^^^call    _IO_wpadn^^^movzx   r9d, [rbp+var_138]^^^mov     rcx, [rbp+var_140]^^^mov     r8d, dword ptr [rbp+var_148]^^^cmp     rax, rcx^^^mov     r15d, 0FFFFFFFFh^^^jnz     loc_4203E0^^^mov     eax, [rbp+var_40]^^^mov     edx, r8d^^^test    eax, eax^^^jz      loc_420852^^^mov     eax, [rbp+var_BC]^^^test    eax, eax^^^jz      loc_420948^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4224F2^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4224F2^^^mov     dword ptr [rcx], 2Dh^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^add     edx, 1^^^mov     r10d, [rbp+var_BC]^^^test    r10d, r10d^^^jz      loc_4208A8^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r14]^^^test    rax, rax^^^jz      loc_42257C^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_42257C^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r15d, 0FFFFFFFFh^^^jnz     loc_4203E0^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r14+4]^^^test    rax, rax^^^jz      loc_4225B9^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4225B9^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r15d, 0FFFFFFFFh^^^jnz     loc_4203E0^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r14+8]^^^test    rax, rax^^^jz      loc_42253F^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_42253F^^^cmp     esi, 0FFFFFFFFh^^^mov     [rcx], esi^^^setz    sil^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^test    sil, sil^^^mov     r15d, 0FFFFFFFFh^^^jnz     short loc_4203E0^^^test    r9b, r9b^^^lea     r15d, [rdx+3]^^^jz      short loc_4203E0^^^test    byte ptr [r12+0Ch], 20h^^^jz      short loc_4203E0^^^mov     r9d, [rbp+var_BC]^^^movsxd  r12, r8d^^^mov     esi, 20h^^^mov     rdx, r12^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_148], r8d^^^test    r9d, r9d^^^jz      loc_420930^^^call    _IO_wpadn^^^mov     r8d, dword ptr [rbp+var_148]^^^add     r8d, r15d^^^mov     r15d, 0FFFFFFFFh^^^cmp     rax, r12^^^cmovz   r15d, r8d^^^lea     rsp, [rbp-28h]^^^mov     eax, r15d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     [rbp+var_C8], 0^^^mov     [rbp+var_EC], 0^^^mov     [rbp+var_F8], 0^^^test    r15b, 1^^^mov     rax, [rdx]^^^jz      loc_420180^^^mov     r13, [rax]^^^mov     r14d, [rax+8]^^^mov     [rsp+160h+var_160], r13^^^mov     [rsp+160h+var_158], r14d^^^call    isnanl^^^test    eax, eax^^^jz      loc_420560^^^mov     rdx, 0FFFFFFFFFFFFFFE8h^^^movsxd  rcx, dword ptr [r12+8]^^^xor     eax, eax^^^mov     [rbp+var_68], r14d^^^cmp     byte ptr [rbp+var_68+1], 0^^^mov     r14d, offset unk_49BCE8^^^mov     [rbp+var_70], r13^^^mov     r13d, offset aNan^^^mov     rdx, fs:[rdx]^^^sets    al^^^movzx   edx, word ptr [rdx+rcx*2]^^^mov     ecx, offset unk_49BCF8^^^mov     [rbp+var_40], eax^^^and     edx, 100h^^^mov     edx, offset aNan_0^^^cmovnz  r14, rcx^^^cmovnz  r13, rdx^^^jmp     loc_4201E7^^^mov     rsi, 0FFFFFFFFFFFFFFB0h^^^mov     rsi, fs:[rsi]^^^mov     rsi, [rsi]^^^mov     rdi, [rsi+50h]^^^cmp     byte ptr [rdi], 0^^^mov     [rbp+var_E8], rdi^^^jnz     short loc_4204CF^^^mov     rdi, 0FFFFFFFFFFFFFFB8h^^^mov     rdi, fs:[rdi]^^^mov     rdi, [rdi]^^^mov     rdi, [rdi+40h]^^^mov     [rbp+var_E8], rdi^^^mov     esi, [rsi+198h]^^^test    esi, esi^^^mov     [rbp+var_C0], esi^^^jnz     loc_4200C8^^^mov     rsi, 0FFFFFFFFFFFFFFB8h^^^mov     rsi, fs:[rsi]^^^mov     rsi, [rsi]^^^mov     esi, [rsi+58h]^^^mov     [rbp+var_C0], esi^^^jmp     loc_4200C8^^^movsd   xmm0, [rbp+var_B8]^^^call    isinf^^^test    eax, eax^^^jz      loc_420A30^^^mov     rdx, 0FFFFFFFFFFFFFFE8h^^^movsxd  rcx, dword ptr [r12+8]^^^shr     eax, 1Fh^^^mov     r14d, offset unk_49BD08^^^mov     r13d, offset off_49BCD2^^^mov     [rbp+var_40], eax^^^mov     rdx, fs:[rdx]^^^movzx   edx, word ptr [rdx+rcx*2]^^^mov     ecx, offset unk_49BCD8^^^and     edx, 100h^^^mov     edx, offset aInf^^^cmovz   r14, rcx^^^cmovz   r13, rdx^^^jmp     loc_4201E7^^^mov     [rsp+160h+var_160], r13^^^mov     [rsp+160h+var_158], r14d^^^call    isinfl^^^test    eax, eax^^^jnz     short loc_420515^^^lea     rdx, [rbp+var_B0]^^^lea     r15, [rbp+var_50]^^^lea     rcx, [rbp+var_40]^^^mov     esi, 1^^^mov     [rsp+160h+var_160], r13^^^mov     [rsp+160h+var_158], r14d^^^mov     [rbp+var_D8], rdx^^^mov     rdi, r15^^^add     rdx, 28h^^^call    __mpn_extract_long_double^^^mov     [rbp+var_98], rax^^^shl     eax, 6^^^lea     r13d, [rax-3Fh]^^^mov     edx, [rbp+var_88]^^^mov     [rbp+var_90], 0^^^mov     ecx, edx^^^sar     ecx, 1Fh^^^mov     eax, ecx^^^xor     eax, edx^^^sub     eax, ecx^^^add     eax, 3Fh^^^sar     eax, 6^^^add     eax, 4^^^cdqe^^^lea     rax, ds:1Eh[rax*8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+160h+var_148+7]^^^sub     rsp, rax^^^lea     rcx, [rsp+160h+var_148+7]^^^sub     rsp, rax^^^lea     rax, [rsp+160h+var_148+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_A0], rdi^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^cmp     edx, 2^^^mov     [rbp+var_A8], rcx^^^mov     [rbp+var_B0], rax^^^mov     ecx, edx^^^jle     loc_421500^^^lea     eax, [r13+rcx+0]^^^test    al, 3Fh^^^jnz     loc_420B1E^^^mov     r9, [rbp+var_98]^^^lea     r8d, [rax+3Fh]^^^test    eax, eax^^^cmovns  r8d, eax^^^mov     rdx, r9^^^sar     r8d, 6^^^sub     rdx, 1^^^js      short loc_42066B^^^movsxd  rsi, r8d^^^lea     rsi, [rdi+rsi*8]^^^mov     rdi, [r15+rdx*8]^^^mov     [rsi+rdx*8], rdi^^^sub     rdx, 1^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_420659^^^movsxd  r8, r8d^^^xor     edx, edx^^^add     r9, r8^^^mov     [rbp+var_98], r9^^^cmp     eax, 3Fh^^^jle     loc_420711^^^mov     r9, [rbp+var_A0]^^^test    r8, r8^^^mov     esi, 1^^^cmovg   rsi, r8^^^mov     rdi, r9^^^shl     rdi, 3Ch^^^shr     rdi, 3Fh^^^cmp     rsi, rdi^^^cmovbe  rdi, rsi^^^test    rdi, rdi^^^jz      loc_422842^^^cmp     rsi, rdi^^^mov     qword ptr [r9], 0^^^jz      short loc_420711^^^mov     eax, 1^^^mov     r11, rsi^^^sub     r11, rdi^^^mov     r10, r11^^^shr     r10, 1^^^mov     r13, r10^^^add     r13, r13^^^jz      short loc_420700^^^pxor    xmm0, xmm0^^^lea     rdi, [r9+rdi*8]^^^xor     esi, esi^^^add     rsi, 1^^^movdqa  xmmword ptr [rdi], xmm0^^^add     rdi, 10h^^^cmp     rsi, r10^^^jb      short loc_4206E0^^^add     rax, r13^^^cmp     r11, r13^^^jz      short loc_420711^^^nop     dword ptr [rax+00000000h]^^^mov     qword ptr [r9+rax*8], 0^^^add     rax, 1^^^cmp     rax, r8^^^jl      short loc_420700^^^xor     r9d, r9d^^^mov     r14, rbx^^^mov     r13d, offset unk_4AEDB8^^^mov     dword ptr [rbp+var_B8], 0^^^mov     r15d, 0Ch^^^mov     ebx, r9d^^^jmp     short loc_42079B^^^mov     rcx, [r13+8]^^^mov     rax, [r13+0]^^^mov     rdi, [rbp+var_A8]^^^lea     rdx, ds:0[rcx*8]^^^lea     rsi, __tens[rax*8]^^^mov     [rbp+var_140], rcx^^^call    memcpy^^^mov     rcx, [rbp+var_140]^^^cmp     rcx, [rbp+var_98]^^^jl      loc_420BE0^^^jz      loc_420BB0^^^mov     rdx, [rbp+var_90]^^^cmp     r13, offset _fpioconst_pow10^^^jbe     loc_420C40^^^mov     ecx, [rbp+var_88]^^^sub     r15d, 1^^^sub     r13, 18h^^^mov     eax, [r13+10h]^^^add     eax, ebx^^^sub     eax, 1^^^cmp     eax, ecx^^^jg      short loc_420784^^^test    rdx, rdx^^^jz      short loc_420738^^^mov     rax, [r13+8]^^^mov     rcx, [r13+0]^^^mov     rsi, [rbp+var_B0]^^^mov     rdi, [rbp+var_A8]^^^lea     rcx, unk_4AEDC8[rcx*8]^^^lea     r8, [rax-1]^^^call    __mpn_mul^^^mov     rdx, [r13+8]^^^add     rdx, [rbp+var_90]^^^lea     rcx, [rdx-1]^^^sub     rdx, 2^^^test    rax, rax^^^cmovz   rcx, rdx^^^jmp     loc_42076A^^^mov     rsi, 0FFFFFFFFFFFFFFB8h^^^mov     rsi, fs:[rsi]^^^mov     rsi, [rsi]^^^mov     rsi, [rsi+50h]^^^mov     [rbp+var_C8], rsi^^^mov     rdi, rsi^^^jmp     loc_4200FB^^^test    r15b, 50h^^^jnz     loc_4201F8^^^sub     r8d, 3^^^test    r8d, r8d^^^setnle  r9b^^^jg      loc_42020D^^^nop     dword ptr [rax+rax+00h]^^^xor     edx, edx^^^test    eax, eax^^^jnz     loc_420280^^^movzx   eax, byte ptr [r12+0Ch]^^^test    al, 40h^^^jz      loc_420970^^^mov     r15d, [rbp+var_BC]^^^test    r15d, r15d^^^jz      loc_420A10^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4225F6^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4225F6^^^mov     dword ptr [rcx], 2Bh^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^jmp     loc_4202BA^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [r13+0]^^^jnb     loc_422796^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [r13+1]^^^jnb     loc_422682^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^movzx   ecx, byte ptr [r13+2]^^^jnb     loc_4226C7^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_42038E^^^call    _IO_padn^^^movzx   r9d, [rbp+var_138]^^^mov     r8d, dword ptr [rbp+var_148]^^^mov     rcx, [rbp+var_140]^^^jmp     loc_420263^^^call    _IO_padn^^^mov     r8d, dword ptr [rbp+var_148]^^^jmp     loc_4203D0^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_422600^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_4202BA^^^test    al, 10h^^^jz      loc_4202BD^^^mov     r11d, [rbp+var_BC]^^^test    r11d, r11d^^^jz      loc_420B00^^^mov     rax, [rbx+0A0h]^^^test    rax, rax^^^jz      loc_4227E5^^^mov     rcx, [rax+20h]^^^cmp     rcx, [rax+28h]^^^jnb     loc_4227E5^^^mov     dword ptr [rcx], 20h^^^add     rcx, 4^^^mov     [rax+20h], rcx^^^jmp     loc_4202BA^^^test    cl, cl^^^jnz     loc_420AA0^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     ecx, 1^^^mov     [rbp+var_EC], 0^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     rax, [rax+48h]^^^mov     [rbp+var_F8], rax^^^mov     rax, [rbp+var_F8]^^^cmp     byte ptr [rax], 0^^^jnz     loc_420A86^^^mov     [rbp+var_C8], 0^^^jmp     loc_420418^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_4227DB^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_4202BA^^^lea     rax, [rbp+var_B0]^^^lea     r15, [rbp+var_50]^^^lea     rcx, [rbp+var_40]^^^movsd   xmm0, [rbp+var_B8]^^^mov     esi, 1^^^mov     rdx, rax^^^mov     rdi, r15^^^mov     [rbp+var_D8], rax^^^add     rdx, 28h^^^call    __mpn_extract_double^^^mov     [rbp+var_98], rax^^^shl     eax, 6^^^lea     r13d, [rax-34h]^^^jmp     loc_4205B0^^^mov     eax, [rbp+var_BC]^^^test    eax, eax^^^jz      loc_4209F0^^^test    cl, cl^^^mov     eax, 0FFFFFFFEh^^^cmovz   eax, [rbp+var_EC]^^^mov     [rbp+var_EC], eax^^^jmp     loc_420418^^^mov     rcx, 0FFFFFFFFFFFFFFB0h^^^mov     [rbp+var_EC], 0^^^mov     rcx, fs:[rcx]^^^mov     rcx, [rcx]^^^mov     rcx, [rcx+58h]^^^mov     [rbp+var_F8], rcx^^^mov     ecx, 1^^^jmp     loc_420150^^^mov     rcx, 0FFFFFFFFFFFFFFB0h^^^mov     [rbp+var_F8], 0^^^mov     rcx, fs:[rcx]^^^mov     rcx, [rcx]^^^mov     ecx, [rcx+1A0h]^^^test    ecx, ecx^^^mov     [rbp+var_EC], ecx^^^setz    cl^^^jmp     loc_420148^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_422849^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_4202BA^^^mov     edx, eax^^^mov     rsi, r15^^^sar     edx, 1Fh^^^shr     edx, 1Ah^^^lea     ecx, [rax+rdx]^^^and     ecx, 3Fh^^^sub     ecx, edx^^^lea     edx, [rax+3Fh]^^^test    eax, eax^^^cmovs   eax, edx^^^mov     rdx, [rbp+var_98]^^^sar     eax, 6^^^cdqe^^^lea     rdi, ds:0[rax*8]^^^add     rdi, [rbp+var_A0]^^^call    __mpn_lshift^^^mov     ecx, [rbp+var_88]^^^mov     rdi, rax^^^lea     eax, [rcx+r13]^^^lea     r8d, [rax+3Fh]^^^test    eax, eax^^^cmovns  r8d, eax^^^sar     r8d, 6^^^movsxd  r8, r8d^^^mov     rdx, r8^^^add     rdx, [rbp+var_98]^^^test    rdi, rdi^^^mov     [rbp+var_98], rdx^^^jz      short loc_420BA3^^^mov     rsi, [rbp+var_A0]^^^mov     [rsi+rdx*8], rdi^^^add     rdx, 1^^^mov     [rbp+var_98], rdx^^^mov     rdx, [rbp+var_90]^^^jmp     loc_42067A^^^mov     rsi, [rbp+var_A8]^^^mov     rdi, [rbp+var_A0]^^^mov     rdx, rcx^^^mov     [rbp+var_140], rcx^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rcx, [rbp+var_140]^^^js      loc_42077D^^^nop     dword ptr [rax+00h]^^^mov     rsi, [rbp+var_A8]^^^mov     rdi, [rbp+var_B0]^^^lea     rdx, ds:0[rcx*8]^^^mov     [rbp+var_90], rcx^^^call    memcpy^^^mov     rdx, [rbp+var_90]^^^mov     rax, [rbp+var_B0]^^^mov     ecx, r15d^^^bsr     rax, [rax+rdx*8-8]^^^mov     ebx, edx^^^shl     ebx, 6^^^sub     ebx, 81h^^^xor     eax, 3Fh^^^sub     ebx, eax^^^mov     eax, 1^^^shl     eax, cl^^^or      dword ptr [rbp+var_B8], eax^^^jmp     loc_420784^^^mov     esi, dword ptr [rbp+var_B8]^^^test    rdx, rdx^^^mov     rbx, r14^^^mov     [rbp+var_88], esi^^^jle     loc_420D40^^^mov     r10, [rbp+var_B0]^^^mov     rsi, [r10]^^^test    rsi, rsi^^^jnz     loc_422334^^^mov     r8, [rbp+var_A0]^^^lea     rcx, [r10+8]^^^mov     eax, 1^^^cmp     qword ptr [r8], 0^^^jz      short loc_420CA2^^^jmp     loc_422334^^^add     rcx, 8^^^cmp     qword ptr [r8+rax*8], 0^^^lea     rdi, [rax+1]^^^jnz     short loc_420CB8^^^mov     rax, rdi^^^mov     rsi, [rcx]^^^mov     r13d, eax^^^lea     r14, ds:0[rax*8]^^^mov     r9, rcx^^^test    rsi, rsi^^^jz      short loc_420C90^^^bsr     rcx, [r10+rdx*8-8]^^^mov     r8d, ecx^^^xor     r8d, 3Fh^^^jnz     loc_421AD8^^^test    r13d, r13d^^^jz      short loc_420D40^^^movsxd  r13, r13d^^^sub     rdx, r13^^^test    rdx, rdx^^^jle     short loc_420CF9^^^lea     rsi, [r10+rax*8]^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^mov     rdi, [rsi+rcx*8]^^^mov     [r10+rcx*8], rdi^^^add     rcx, 1^^^cmp     rcx, rdx^^^jnz     short loc_420CE8^^^mov     rcx, [rbp+var_98]^^^mov     [rbp+var_90], rdx^^^sub     rcx, r13^^^test    rcx, rcx^^^jle     short loc_420D31^^^mov     rsi, [rbp+var_A0]^^^xor     edx, edx^^^lea     rdi, [rsi+rax*8]^^^nop     dword ptr [rax+00h]^^^mov     rax, [rdi+rdx*8]^^^mov     [rsi+rdx*8], rax^^^add     rdx, 1^^^cmp     rdx, rcx^^^jnz     short loc_420D20^^^mov     [rbp+var_98], rcx^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rdx, 0FFFFFFFFFFFFFFE0h^^^mov     ecx, [r12+4]^^^mov     eax, [r12+8]^^^mov     rdx, fs:[rdx]^^^mov     [rbp+var_104], ecx^^^movsxd  rcx, eax^^^movzx   edx, byte ptr [rdx+rcx*4]^^^cmp     dl, 65h^^^mov     [rbp+var_11D], dl^^^jz      loc_4217F0^^^cmp     [rbp+var_11D], 66h^^^jz      loc_4219D0^^^mov     esi, [r12]^^^cmp     esi, 0^^^jl      loc_421BB1^^^mov     edx, 1^^^cmovnz  edx, esi^^^mov     [rbp+var_11C], edx^^^mov     edx, [rbp+var_80]^^^test    edx, edx^^^jz      loc_4218D0^^^cmp     [rbp+var_88], 4^^^jg      loc_421920^^^mov     [rbp+var_84], 66h^^^mov     dword ptr [rbp+var_100], 0^^^movsxd  rax, [rbp+var_11C]^^^mov     esi, [rbp+var_11C]^^^sub     esi, dword ptr [rbp+var_100]^^^add     rax, 5^^^mov     dword ptr [rbp+var_B8], esi^^^mov     [rbp+var_110], rax^^^mov     dword ptr [rbp+var_D0], 0^^^test    byte ptr [r12+0Ch], 8^^^mov     ecx, 0^^^cmovnz  ecx, dword ptr [rbp+var_B8]^^^mov     [rbp+var_F0], ecx^^^cmp     [rbp+var_C8], 0^^^mov     [rbp+var_108], 0^^^jz      short loc_420E85^^^mov     rsi, [rbp+var_C8]^^^mov     eax, 1^^^movzx   edx, byte ptr [rsi]^^^sub     edx, 1^^^cmp     dl, 7Dh^^^ja      short loc_420E7E^^^mov     rax, rsi^^^mov     esi, dword ptr [rbp+var_100]^^^xor     edi, edi^^^nop     dword ptr [rax+00000000h]^^^movsx   ecx, byte ptr [rax]^^^cmp     esi, ecx^^^jbe     short loc_420E71^^^add     rax, 1^^^add     edi, 1^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^js      short loc_420E71^^^cmp     dl, 7Fh^^^jz      short loc_420E71^^^sub     esi, ecx^^^test    dl, dl^^^jnz     short loc_420E48^^^lea     eax, [rsi-1]^^^xor     edx, edx^^^div     ecx^^^add     edi, eax^^^mov     eax, edi^^^mov     [rbp+var_108], edi^^^add     eax, 1^^^cdqe^^^add     [rbp+var_110], rax^^^mov     rax, 3FFFFFFFFFFFFFFCh^^^cmp     [rbp+var_110], rax^^^ja      loc_422626^^^movsxd  rax, dword ptr [rbp+var_B8]^^^cmp     [rbp+var_110], rax^^^jb      loc_422626^^^mov     rcx, [rbp+var_110]^^^lea     r13, ds:8[rcx*4]^^^cmp     r13, 1000h^^^ja      loc_422724^^^add     r13, 1Eh^^^mov     [rbp+var_128], 0^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r13^^^lea     rdi, [rsp+160h+var_148+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_118], rdi^^^mov     r14, rdi^^^mov     eax, [rbp+var_80]^^^add     r14, 8^^^test    eax, eax^^^jz      short loc_420F0C^^^cmp     [rbp+var_84], 66h^^^jz      loc_421BC0^^^mov     eax, dword ptr [rbp+var_100]^^^xor     r13d, r13d^^^test    eax, eax^^^jle     loc_42214C^^^mov     [rbp+var_D0], rbx^^^mov     [rbp+var_E0], r12^^^mov     r15, [rbp+var_118]^^^mov     ebx, dword ptr [rbp+var_100]^^^mov     r12, [rbp+var_D8]^^^nop^^^mov     r10, r12^^^call    hack_digit_14698^^^mov     [r15+r13*4+8], eax^^^add     r13, 1^^^cmp     ebx, r13d^^^jg      short loc_420F40^^^mov     eax, dword ptr [rbp+var_100]^^^mov     ecx, dword ptr [rbp+var_100]^^^mov     rbx, [rbp+var_D0]^^^mov     r12, [rbp+var_E0]^^^sub     eax, 1^^^mov     [rbp+var_124], ecx^^^lea     r13, [r14+rax*4+4]^^^mov     eax, [rbp+var_F0]^^^test    eax, eax^^^jg      short loc_420FAC^^^test    byte ptr [r12+0Ch], 8^^^jnz     short loc_420FAC^^^mov     eax, dword ptr [rbp+var_B8]^^^test    eax, eax^^^jle     loc_421845^^^cmp     [rbp+var_98], 1^^^jle     loc_422055^^^mov     esi, [rbp+var_C0]^^^mov     dword ptr [rbp+var_D0], 1^^^mov     [r13+0], esi^^^add     r13, 4^^^mov     eax, [rbp+var_F0]^^^xor     r15d, r15d^^^mov     dword ptr [rbp+var_E0], 0^^^test    eax, eax^^^jg      short loc_420FEA^^^jmp     loc_42184F^^^mov     dword ptr [rbp+var_D0], 1^^^mov     edx, [rbp+var_F0]^^^add     edx, dword ptr [rbp+var_E0]^^^cmp     r15d, edx^^^jl      short loc_42100E^^^cmp     dword ptr [rbp+var_B8], r15d^^^jle     short loc_421060^^^cmp     [rbp+var_98], 1^^^jle     short loc_421050^^^mov     r10, [rbp+var_D8]^^^add     r15d, 1^^^call    hack_digit_14698^^^mov     [r13+0], eax^^^add     r13, 4^^^cmp     eax, 30h^^^jnz     short loc_420FE0^^^mov     r11d, dword ptr [rbp+var_D0]^^^test    r11d, r11d^^^jnz     short loc_420FE0^^^add     dword ptr [rbp+var_B8], 1^^^add     dword ptr [rbp+var_E0], 1^^^jmp     short loc_420FEA^^^mov     rax, [rbp+var_A0]^^^cmp     qword ptr [rax], 0^^^jnz     short loc_42100E^^^nop     dword ptr [rax]^^^mov     r10, [rbp+var_D8]^^^mov     dword ptr [rbp+var_130], edx^^^call    hack_digit_14698^^^cmp     eax, 34h^^^mov     edx, dword ptr [rbp+var_130]^^^jle     loc_421130^^^cmp     eax, 35h^^^jz      loc_421BF4^^^cmp     r15d, 0^^^jle     loc_422075^^^mov     ecx, [r13-4]^^^cmp     ecx, [rbp+var_C0]^^^lea     rdx, [r13-4]^^^jz      loc_422344^^^cmp     ecx, 39h^^^jnz     loc_422344^^^mov     rcx, r13^^^xor     esi, esi^^^mov     edi, [rbp+var_C0]^^^jmp     short loc_4210CB^^^cmp     ecx, 39h^^^jnz     short loc_4210E0^^^mov     rcx, rdx^^^mov     rdx, rax^^^mov     dword ptr [rcx-4], 30h^^^mov     ecx, [rdx-4]^^^add     esi, 1^^^lea     rax, [rdx-4]^^^cmp     ecx, edi^^^jnz     short loc_4210C0^^^cmp     esi, [rbp+var_F0]^^^jnz     short loc_421101^^^mov     r10d, dword ptr [rbp+var_E0]^^^test    r10d, r10d^^^setnle  sil^^^cmp     sil, 1^^^adc     dword ptr [rbp+var_E0], 0FFFFFFFFh^^^cmp     [rbp+var_C0], ecx^^^jz      loc_421EE5^^^add     ecx, 1^^^mov     [rdx-4], ecx^^^mov     edx, [rbp+var_C0]^^^cmp     [rax], edx^^^mov     edx, [rbp+var_F0]^^^jz      loc_422187^^^add     edx, dword ptr [rbp+var_E0]^^^nop     dword ptr [rax]^^^cmp     r15d, edx^^^jg      short loc_42114D^^^jmp     short loc_421154^^^sub     r15d, 1^^^sub     r13, 4^^^cmp     r15d, edx^^^jz      short loc_421154^^^cmp     dword ptr [r13-4], 30h^^^jz      short loc_421140^^^test    r15d, r15d^^^jnz     short loc_421173^^^test    byte ptr [r12+0Ch], 8^^^jnz     short loc_421173^^^mov     edx, [rbp+var_C0]^^^cmp     [r13-4], edx^^^lea     rax, [r13-4]^^^cmovz   r13, rax^^^cmp     [rbp+var_C8], 0^^^jz      short loc_4211A5^^^mov     ecx, [rbp+var_124]^^^cmp     dword ptr [rbp+var_100], ecx^^^jnz     loc_421550^^^mov     ecx, dword ptr [rbp+var_100]^^^mov     r9d, [rbp+var_108]^^^test    r9d, r9d^^^jnz     loc_421700^^^mov     eax, [rbp+var_84]^^^cmp     eax, 66h^^^jz      loc_421249^^^mov     r8d, [rbp+var_80]^^^test    r8d, r8d^^^jnz     loc_422853^^^mov     [r13+0], eax^^^cmp     [rbp+var_80], 1^^^sbb     eax, eax^^^and     eax, 0FFFFFFFEh^^^add     eax, 2Dh^^^mov     [r13+4], eax^^^mov     esi, [rbp+var_88]^^^cmp     esi, 9^^^jle     loc_4221AD^^^mov     ecx, 0Ah^^^nop     dword ptr [rax+00000000h]^^^lea     ecx, [rcx+rcx*4]^^^add     ecx, ecx^^^cmp     esi, ecx^^^jge     short loc_4211F0^^^add     r13, 8^^^mov     edi, 66666667h^^^mov     eax, ecx^^^sar     ecx, 1Fh^^^imul    edi^^^mov     eax, esi^^^sar     edx, 2^^^sub     edx, ecx^^^mov     ecx, edx^^^mov     edx, esi^^^sar     edx, 1Fh^^^idiv    ecx^^^add     eax, 30h^^^mov     [r13+0], eax^^^mov     eax, [rbp+var_88]^^^add     r13, 4^^^mov     edx, eax^^^sar     edx, 1Fh^^^idiv    ecx^^^cmp     ecx, 0Ah^^^mov     esi, edx^^^mov     [rbp+var_88], edx^^^jg      short loc_421202^^^add     esi, 30h^^^mov     [r13+0], esi^^^add     r13, 4^^^mov     eax, [rbp+var_40]^^^movzx   edx, byte ptr [r12+0Ch]^^^test    eax, eax^^^jnz     short loc_42125B^^^test    dl, 50h^^^jz      short loc_421262^^^sub     [rbp+var_104], 1^^^mov     esi, [rbp+var_104]^^^mov     rcx, r13^^^xor     r15d, r15d^^^sub     rcx, r14^^^mov     [rbp+var_C8], rcx^^^sar     rcx, 2^^^sub     esi, ecx^^^and     edx, 20h^^^mov     [rbp+var_104], esi^^^jnz     short loc_4212F3^^^mov     edi, [rbp+var_104]^^^mov     esi, [r12+10h]^^^test    edi, edi^^^jle     short loc_4212F0^^^cmp     esi, 30h^^^jz      short loc_4212F0^^^movsxd  r15, [rbp+var_104]^^^mov     ecx, [rbp+var_BC]^^^mov     rdi, rbx^^^test    ecx, ecx^^^mov     rdx, r15^^^jz      loc_421EAD^^^call    _IO_wpadn^^^cmp     rax, r15^^^jz      loc_422178^^^mov     edx, [rbp+var_128]^^^mov     r15d, 0FFFFFFFFh^^^test    edx, edx^^^jz      loc_4203E0^^^mov     rdi, [rbp+var_118]^^^call    free^^^jmp     loc_4203E0^^^xor     r15d, r15d^^^test    eax, eax^^^jz      loc_4215C0^^^mov     edx, [rbp+var_BC]^^^test    edx, edx^^^jz      loc_421958^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4228D9^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4228D9^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^movzx   eax, byte ptr [r12+0Ch]^^^add     r15d, 1^^^test    al, 20h^^^jnz     short loc_4213A0^^^mov     eax, [rbp+var_104]^^^test    eax, eax^^^jle     short loc_4213A0^^^cmp     dword ptr [r12+10h], 30h^^^jnz     short loc_4213A0^^^movsxd  rcx, [rbp+var_104]^^^mov     eax, [rbp+var_BC]^^^mov     esi, 30h^^^mov     rdi, rbx^^^test    eax, eax^^^mov     rdx, rcx^^^mov     [rbp+var_140], rcx^^^jz      loc_4221C4^^^call    _IO_wpadn^^^mov     rcx, [rbp+var_140]^^^cmp     rax, rcx^^^jnz     loc_4212C6^^^add     r15d, [rbp+var_104]^^^nop     dword ptr [rax+rax+00000000h]^^^mov     eax, [rbp+var_BC]^^^test    eax, eax^^^jnz     loc_421610^^^mov     [rbp+var_B8], 1^^^test    byte ptr [r12+0Dh], 8^^^jz      short loc_4213DC^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     eax, [rax+0A8h]^^^mov     [rbp+var_B8], rax^^^mov     rdi, [rbp+var_E8]^^^call    strlen^^^xor     edx, edx^^^cmp     [rbp+var_F8], 0^^^mov     [rbp+var_D0], rax^^^mov     [rbp+var_D8], 0^^^jz      short loc_42142B^^^mov     rdi, [rbp+var_F8]^^^call    strlen^^^mov     [rbp+var_D8], rax^^^movsxd  rax, [rbp+var_108]^^^mov     rdx, [rbp+var_D8]^^^imul    rdx, rax^^^mov     rax, [rbp+var_B8]^^^mov     rdi, [rbp+var_D0]^^^imul    rax, [rbp+var_110]^^^lea     rax, [rdi+rax+2]^^^add     rdx, rax^^^mov     eax, [rbp+var_128]^^^test    eax, eax^^^jnz     loc_4227EF^^^lea     rax, [rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+160h+var_148+7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_B8], rax^^^add     rdx, [rbp+var_B8]^^^cmp     r13, r14^^^mov     rdi, [rbp+var_B8]^^^mov     [rbp+var_E0], rdx^^^jbe     loc_421628^^^mov     [rbp+var_F0], r15d^^^mov     [rbp+var_110], r12^^^mov     r12, rbx^^^mov     r15d, [rbp+var_C0]^^^mov     [rbp+var_100], r14^^^mov     ebx, [rbp+var_EC]^^^jmp     short loc_4214DB^^^cmp     ebx, eax^^^jz      loc_421900^^^mov     [rdi], al^^^add     rdi, 1^^^add     r14, 4^^^cmp     r13, r14^^^jbe     loc_421B94^^^mov     eax, [r14]^^^cmp     eax, r15d^^^jnz     short loc_4214C0^^^mov     rdx, [rbp+var_D0]^^^mov     rsi, [rbp+var_E8]^^^call    mempcpy^^^mov     rdi, rax^^^jmp     short loc_4214CE^^^test    edx, edx^^^js      loc_421C60^^^lea     ecx, [r13+rdx+0]^^^mov     rdx, [rbp+var_98]^^^mov     rsi, r15^^^call    __mpn_lshift^^^mov     rdx, [rbp+var_98]^^^mov     rcx, [rbp+var_A0]^^^mov     [rcx+rdx*8], rax^^^add     rdx, 1^^^mov     [rbp+var_88], 0^^^mov     [rbp+var_98], rdx^^^jmp     loc_420D40^^^mov     rsi, [rbp+var_C8]^^^mov     [rbp+var_108], 0^^^movzx   eax, byte ptr [rsi]^^^sub     eax, 1^^^cmp     al, 7Dh^^^ja      loc_4211A5^^^mov     rax, rsi^^^mov     edi, ecx^^^xor     r8d, r8d^^^nop     word ptr [rax+rax+00000000h]^^^movsx   esi, byte ptr [rax]^^^cmp     edi, esi^^^jbe     short loc_4215AB^^^add     rax, 1^^^add     r8d, 1^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^js      short loc_4215AB^^^cmp     dl, 7Fh^^^jz      short loc_4215AB^^^sub     edi, esi^^^test    dl, dl^^^jnz     short loc_421580^^^lea     eax, [rdi-1]^^^xor     edx, edx^^^div     esi^^^add     r8d, eax^^^mov     [rbp+var_108], r8d^^^jmp     loc_421195^^^movzx   eax, byte ptr [r12+0Ch]^^^test    al, 40h^^^jz      loc_421980^^^mov     eax, [rbp+var_BC]^^^test    eax, eax^^^jz      loc_421EC7^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_42282A^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_42282A^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^jmp     loc_421335^^^xor     edi, edi^^^mov     [rbp+var_E0], 0^^^mov     [rbp+var_B8], 0^^^test    byte ptr [r12+0Dh], 8^^^jnz     loc_42265D^^^mov     rdx, [rbp+var_B8]^^^mov     r11d, [rbp+var_BC]^^^test    r11d, r11d^^^jz      loc_421AC0^^^mov     rax, [rbp+var_C8]^^^mov     r13, [rbp+var_C8]^^^add     rax, 3^^^sar     r13, 2^^^cmp     rax, 6^^^setnbe  al^^^test    al, al^^^jz      loc_421A40^^^mov     r10d, [rbp+var_BC]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^test    r10d, r10d^^^cmovz   r14, rdx^^^mov     rdx, r13^^^mov     rsi, r14^^^call    qword ptr [rax+38h]^^^cmp     r13, rax^^^jnz     loc_4212C6^^^add     r15d, r13d^^^mov     edi, [rbp+var_128]^^^test    edi, edi^^^jnz     loc_4228BC^^^mov     esi, [rbp+var_104]^^^test    esi, esi^^^jle     loc_4203E0^^^test    byte ptr [r12+0Ch], 20h^^^jz      loc_4203E0^^^movsxd  r13, [rbp+var_104]^^^mov     ecx, [rbp+var_BC]^^^mov     rdi, rbx^^^mov     esi, [r12+10h]^^^test    ecx, ecx^^^mov     rdx, r13^^^jz      loc_422314^^^call    _IO_wpadn^^^add     r15d, [rbp+var_104]^^^cmp     rax, r13^^^jnz     loc_4212C6^^^jmp     loc_4203E0^^^movsxd  r11, [rbp+var_108]^^^mov     r15d, ecx^^^mov     rdx, r13^^^lea     rsi, [r14+r15*4]^^^mov     dword ptr [rbp+var_140], ecx^^^sub     rdx, rsi^^^add     r15, r11^^^sar     rdx, 2^^^mov     [rbp+var_130], r11^^^lea     rdi, [r14+r15*4]^^^call    wmemmove^^^mov     rdi, [rbp+var_C8]^^^mov     r11, [rbp+var_130]^^^lea     r8, [r14+r15*4-4]^^^mov     ecx, dword ptr [rbp+var_140]^^^movsx   r9d, byte ptr [rdi]^^^mov     r15, rdi^^^nop     dword ptr [rax+00000000h]^^^lea     r10d, [r9-1]^^^lea     rdi, [r8-4]^^^mov     edx, ecx^^^lea     rax, ds:0[r10*4]^^^sub     rdi, rax^^^mov     rax, r8^^^sub     edx, 1^^^mov     esi, edx^^^mov     esi, [r14+rsi*4]^^^mov     [rax], esi^^^sub     rax, 4^^^cmp     rax, rdi^^^jnz     short loc_421770^^^neg     r10^^^mov     eax, [rbp+var_EC]^^^sub     ecx, r9d^^^lea     r8, [r8+r10*4]^^^mov     [r8-4], eax^^^movzx   r9d, byte ptr [r15+1]^^^sub     r8, 8^^^test    r9b, r9b^^^js      short loc_4217C0^^^cmp     r9b, 7Fh^^^jz      short loc_4217C0^^^test    r9b, r9b^^^jz      short loc_4217E0^^^add     r15, 1^^^movsx   r9d, r9b^^^cmp     r9d, ecx^^^jb      short loc_421758^^^xchg    ax, ax^^^sub     ecx, 1^^^mov     eax, ecx^^^mov     eax, [r14+rax*4]^^^mov     [r8], eax^^^sub     r8, 4^^^cmp     r14, r8^^^jb      short loc_4217C0^^^lea     r13, [r13+r11*4+0]^^^jmp     loc_4211A5^^^movzx   r9d, byte ptr [r15]^^^jmp     short loc_4217B5^^^mov     esi, [r12]^^^mov     [rbp+var_84], eax^^^test    esi, esi^^^mov     dword ptr [rbp+var_B8], esi^^^js      loc_42215E^^^movsxd  rax, esi^^^add     rax, 8^^^mov     [rbp+var_110], rax^^^mov     ecx, dword ptr [rbp+var_B8]^^^mov     dword ptr [rbp+var_D0], 1^^^mov     [rbp+var_11C], 7FFFFFFFh^^^mov     dword ptr [rbp+var_100], 1^^^mov     [rbp+var_F0], ecx^^^jmp     loc_420E0B^^^mov     dword ptr [rbp+var_D0], 1^^^xor     r15d, r15d^^^jmp     short loc_421862^^^mov     dword ptr [rbp+var_D0], 1^^^cmp     dword ptr [rbp+var_B8], r15d^^^jle     short loc_4218B8^^^cmp     [rbp+var_98], 1^^^jle     short loc_4218A8^^^mov     r10, [rbp+var_D8]^^^add     r15d, 1^^^call    hack_digit_14698^^^mov     [r13+0], eax^^^add     r13, 4^^^cmp     eax, 30h^^^jnz     short loc_421858^^^mov     eax, dword ptr [rbp+var_D0]^^^test    eax, eax^^^jnz     short loc_421858^^^add     dword ptr [rbp+var_B8], 1^^^jmp     short loc_421862^^^mov     rax, [rbp+var_A0]^^^cmp     qword ptr [rax], 0^^^jnz     short loc_421875^^^nop     dword ptr [rax]^^^mov     edx, [rbp+var_F0]^^^mov     dword ptr [rbp+var_E0], 0^^^jmp     loc_421060^^^mov     edx, [rbp+var_88]^^^cmp     [rbp+var_11C], edx^^^jle     short loc_421920^^^add     edx, 1^^^mov     [rbp+var_84], 66h^^^mov     dword ptr [rbp+var_100], edx^^^jmp     loc_420DC5^^^mov     rdx, [rbp+var_D8]^^^mov     rsi, [rbp+var_F8]^^^call    mempcpy^^^mov     rdi, rax^^^jmp     loc_4214CE^^^mov     ecx, [rbp+var_11C]^^^sub     eax, 2^^^mov     dword ptr [rbp+var_100], 1^^^mov     [rbp+var_84], eax^^^sub     ecx, 1^^^movsxd  rax, ecx^^^mov     dword ptr [rbp+var_B8], ecx^^^add     rax, 8^^^mov     [rbp+var_110], rax^^^jmp     loc_420DE9^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_422766^^^mov     byte ptr [rax], 2Dh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_421335^^^test    al, 10h^^^jz      loc_42133F^^^mov     eax, [rbp+var_BC]^^^test    eax, eax^^^jz      loc_4221E9^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_42270C^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_42270C^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^jmp     loc_421335^^^mov     esi, [r12]^^^mov     [rbp+var_84], 66h^^^test    esi, esi^^^mov     dword ptr [rbp+var_B8], esi^^^movsxd  rdx, esi^^^js      loc_4221D5^^^mov     ecx, [rbp+var_80]^^^test    ecx, ecx^^^jnz     loc_421EB7^^^movsxd  rax, [rbp+var_88]^^^mov     esi, dword ptr [rbp+var_B8]^^^mov     dword ptr [rbp+var_D0], 1^^^mov     [rbp+var_11C], 7FFFFFFFh^^^mov     [rbp+var_F0], esi^^^lea     ecx, [rax+1]^^^lea     rax, [rdx+rax+2]^^^mov     dword ptr [rbp+var_100], ecx^^^mov     [rbp+var_110], rax^^^jmp     loc_420E0B^^^mov     r9d, [rbp+var_BC]^^^test    r9d, r9d^^^jnz     loc_421F40^^^test    r13, r13^^^jnz     short loc_421A78^^^jmp     loc_42169D^^^mov     [rax], cl^^^add     rax, 1^^^mov     [rbx+28h], rax^^^add     r15d, 1^^^sub     r13, 1^^^jz      loc_42169D^^^movzx   ecx, byte ptr [rdx]^^^mov     rax, [rbx+28h]^^^add     rdx, 1^^^cmp     rax, [rbx+30h]^^^jb      short loc_421A60^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     [rbp+var_130], rdx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     rdx, [rbp+var_130]^^^jnz     short loc_421A6A^^^mov     r8d, [rbp+var_128]^^^mov     r15d, eax^^^test    r8d, r8d^^^jz      loc_4203E0^^^jmp     loc_4212DA^^^mov     r13, rdi^^^sub     r13, rdx^^^cmp     r13, 14h^^^setnle  al^^^jmp     loc_421668^^^test    rsi, rsi^^^jz      loc_422019^^^mov     rcx, [rbp+var_A0]^^^bsf     rsi, rsi^^^mov     rcx, [rcx+r14]^^^test    rcx, rcx^^^jz      short loc_421AFE^^^bsf     rcx, rcx^^^cmp     esi, ecx^^^cmovg   esi, ecx^^^mov     r15d, 40h^^^sub     r15d, r8d^^^test    r13d, r13d^^^jnz     loc_421FA8^^^cmp     esi, r15d^^^jl      loc_422351^^^movsxd  rdi, r13d^^^mov     rsi, r9^^^mov     ecx, r15d^^^sub     rdx, rdi^^^mov     [rbp+var_B8], rdi^^^mov     rdi, r10^^^call    __mpn_rshift^^^mov     rdi, [rbp+var_A0]^^^mov     rdx, [rbp+var_98]^^^add     r13d, 1^^^sub     rdx, [rbp+var_B8]^^^mov     ecx, r15d^^^movsxd  r13, r13d^^^sub     [rbp+var_90], r13^^^lea     rsi, [rdi+r14]^^^call    __mpn_rshift^^^mov     rdx, [rbp+var_98]^^^mov     rax, rdx^^^sub     rax, [rbp+var_B8]^^^mov     rcx, [rbp+var_A0]^^^sub     rdx, r13^^^cmp     qword ptr [rcx+rax*8-8], 0^^^cmovz   rax, rdx^^^mov     [rbp+var_98], rax^^^jmp     loc_420D40^^^mov     rbx, r12^^^mov     r15d, [rbp+var_F0]^^^mov     r14, [rbp+var_100]^^^mov     r12, [rbp+var_110]^^^jmp     loc_421628^^^mov     [rbp+var_11C], 6^^^jmp     loc_420D99^^^mov     rdi, [rbp+var_118]^^^mov     eax, [rbp+var_C0]^^^sub     [rbp+var_88], 1^^^mov     [rbp+var_124], 0^^^mov     r13, rdi^^^mov     dword ptr [rdi+8], 30h^^^mov     [rdi+0Ch], eax^^^add     r13, 10h^^^jmp     loc_420FC4^^^mov     eax, [r13-4]^^^cmp     eax, [rbp+var_C0]^^^jz      loc_4223F9^^^test    al, 1^^^jnz     loc_42108A^^^mov     rcx, [rbp+var_98]^^^cmp     rcx, 1^^^jz      loc_42244F^^^cmp     [rbp+var_90], 0^^^jnz     loc_42108A^^^test    rcx, rcx^^^mov     rax, rcx^^^jz      loc_421130^^^mov     rcx, [rbp+var_A0]^^^jmp     short loc_421C4A^^^sub     rax, 1^^^jz      loc_421130^^^cmp     qword ptr [rcx+rax*8-8], 0^^^jz      short loc_421C40^^^jmp     loc_42108A^^^mov     rdx, [rbp+var_98]^^^mov     ecx, r13d^^^mov     rsi, r15^^^mov     r13d, offset unk_4AEDB8^^^call    __mpn_lshift^^^mov     rdx, [rbp+var_98]^^^mov     rcx, [rbp+var_A0]^^^mov     r10d, 0Ch^^^mov     [rbp+var_D0], rbx^^^mov     dword ptr [rbp+var_B8], 0^^^mov     ebx, r10d^^^mov     [rbp+var_E0], r12^^^mov     [rcx+rdx*8], rax^^^mov     eax, [rbp+var_88]^^^add     rdx, 1^^^mov     [rbp+var_98], rdx^^^mov     [rbp+var_80], 1^^^neg     eax^^^mov     [rbp+var_88], eax^^^sub     r13, 18h^^^cmp     [r13+14h], eax^^^jg      loc_421D88^^^mov     rdx, [r13+8]^^^mov     rax, [rbp+var_98]^^^mov     rcx, [r13+0]^^^sub     rdx, 1^^^cmp     rdx, rax^^^jle     loc_421E87^^^lea     rsi, unk_4AEDC8[rcx*8]^^^mov     rdi, [rbp+var_A8]^^^mov     rcx, [rbp+var_A0]^^^mov     r8, rax^^^call    __mpn_mul^^^mov     rdx, [rbp+var_98]^^^mov     rcx, rdx^^^add     rcx, [r13+8]^^^lea     r12, [rcx-1]^^^sub     rcx, 2^^^test    rax, rax^^^mov     rax, [rbp+var_A8]^^^cmovz   r12, rcx^^^lea     r8, [r12-1]^^^mov     r15, r12^^^sub     r15, rdx^^^bsr     r14, [rax+r8*8]^^^add     r15, 1^^^shl     r15d, 6^^^xor     r14d, 3Fh^^^mov     eax, r14d^^^not     eax^^^add     r15d, eax^^^mov     eax, [rbp+var_88]^^^lea     edx, [rax+3]^^^cmp     edx, r15d^^^jz      loc_42202A^^^lea     edx, [rax+2]^^^mov     rdi, [rbp+var_A8]^^^cmp     r15d, edx^^^jle     short loc_421DE0^^^lea     edx, [rax+3]^^^cmp     edx, r15d^^^jz      short loc_421DBF^^^nop     dword ptr [rax+00h]^^^sub     ebx, 1^^^cmp     r13, offset unk_4AEC98^^^jz      loc_422207^^^test    eax, eax^^^jg      loc_421CCB^^^mov     rbx, [rbp+var_D0]^^^mov     r12, [rbp+var_E0]^^^mov     esi, dword ptr [rbp+var_B8]^^^mov     [rbp+var_88], esi^^^jmp     loc_420D40^^^mov     rdi, [rbp+var_A8]^^^mov     rdx, [rbp+var_58]^^^cmp     [rdi+r8*8], rdx^^^jb      short loc_421DE0^^^jnz     short loc_421D88^^^mov     rcx, [rbp+var_60]^^^cmp     [rdi+r12*8-10h], rcx^^^jnb     short loc_421D88^^^nop     dword ptr [rax]^^^mov     ecx, ebx^^^mov     edx, 1^^^sub     eax, r15d^^^shl     edx, cl^^^mov     rcx, [rdi]^^^or      dword ptr [rbp+var_B8], edx^^^mov     edx, r14d^^^mov     [rbp+var_88], eax^^^mov     r8d, 1^^^sub     edx, eax^^^test    eax, eax^^^cmovs   r14d, edx^^^test    rcx, rcx^^^lea     rdx, [rdi+8]^^^jz      short loc_421E23^^^jmp     loc_422441^^^mov     r8, r9^^^mov     rcx, [rdx]^^^mov     rsi, rdx^^^add     rdx, 8^^^mov     r10d, r8d^^^lea     r9, [r8+1]^^^test    rcx, rcx^^^jz      short loc_421E20^^^cmp     r14d, 3Fh^^^jz      loc_4222A6^^^bsf     rax, rcx^^^mov     ecx, 3Fh^^^sub     ecx, r14d^^^test    r10d, r10d^^^jnz     loc_422192^^^cmp     eax, ecx^^^jl      loc_422409^^^movsxd  r10, r10d^^^sub     r12, r10^^^mov     rdi, [rbp+var_A0]^^^mov     rdx, r12^^^call    __mpn_rshift^^^mov     [rbp+var_98], r12^^^mov     eax, [rbp+var_88]^^^jmp     loc_421D88^^^mov     rsi, [rbp+var_A0]^^^mov     rdi, [rbp+var_A8]^^^lea     rcx, unk_4AEDC8[rcx*8]^^^mov     r8, rdx^^^mov     rdx, rax^^^call    __mpn_mul^^^jmp     loc_421D13^^^call    _IO_padn^^^jmp     loc_4212BD^^^add     rdx, 2^^^mov     [rbp+var_110], rdx^^^jmp     loc_421816^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_42263D^^^mov     byte ptr [rax], 2Bh^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_421335^^^cmp     [rbp+var_11D], 67h^^^jnz     loc_421113^^^cmp     [rbp+var_84], 66h^^^jnz     loc_421113^^^test    byte ptr [r12+0Ch], 8^^^jz      loc_421113^^^mov     rdx, [rbp+var_118]^^^add     rdx, 0Ch^^^cmp     rax, rdx^^^jnz     loc_421113^^^mov     rdi, [rbp+var_118]^^^xor     edx, edx^^^cmp     dword ptr [rdi+8], 30h^^^setz    dl^^^sub     dword ptr [rbp+var_E0], edx^^^jmp     loc_421113^^^test    r13, r13^^^jnz     short loc_421F80^^^jmp     loc_42169D^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     short loc_421F93^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx], esi^^^setz    cl^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, cl^^^jnz     loc_4212C6^^^add     r15d, 1^^^sub     r13, 1^^^jz      loc_42169D^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r14]^^^add     r14, 4^^^test    rax, rax^^^jnz     short loc_421F50^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^setz    cl^^^jmp     short loc_421F6A^^^cmp     esi, r15d^^^jge     loc_421B19^^^lea     r8, ds:0FFFFFFFFFFFFFFF8h[rax*8]^^^lea     r14d, [r13-1]^^^mov     rdi, r10^^^mov     ecx, r15d^^^movsxd  r13, r13d^^^lea     rsi, [r10+r8]^^^movsxd  r14, r14d^^^mov     [rbp+var_148], r8^^^sub     rdx, r14^^^call    __mpn_rshift^^^mov     rdi, [rbp+var_A0]^^^mov     r8, [rbp+var_148]^^^mov     ecx, r15d^^^mov     rdx, [rbp+var_98]^^^sub     [rbp+var_90], r13^^^lea     rsi, [rdi+r8]^^^sub     rdx, r14^^^call    __mpn_rshift^^^mov     rdx, [rbp+var_98]^^^mov     rax, rdx^^^sub     rax, r14^^^jmp     loc_421B74^^^mov     rcx, [rbp+var_A0]^^^bsf     rsi, [rcx+r14]^^^jmp     loc_421AFE^^^cmp     r14d, 3Ch^^^jg      loc_4223B1^^^mov     ecx, 3Ch^^^mov     edx, 0Ah^^^mov     [rbp+var_60], 0^^^sub     ecx, r14d^^^shl     rdx, cl^^^mov     [rbp+var_58], rdx^^^jmp     loc_421D6D^^^mov     rax, [rbp+var_A0]^^^mov     dword ptr [rbp+var_D0], 1^^^cmp     qword ptr [rax], 0^^^jz      loc_42184F^^^jmp     loc_420FAC^^^mov     rax, r13^^^jnz     loc_421113^^^mov     esi, [rbp+var_C0]^^^cmp     [rax-4], esi^^^lea     rcx, [rax-4]^^^cmovz   rax, rcx^^^lea     rcx, [rax-4]^^^cmp     r14, rcx^^^ja      short loc_4220CA^^^mov     edi, [rax-4]^^^cmp     edi, 39h^^^jz      short loc_4220BA^^^jmp     loc_42213E^^^mov     edi, [rcx-4]^^^cmp     edi, 39h^^^jnz     loc_422141^^^mov     rax, rcx^^^mov     rcx, rsi^^^lea     rsi, [rcx-4]^^^mov     dword ptr [rax-4], 30h^^^cmp     r14, rsi^^^jbe     short loc_4220A8^^^cmp     [rbp+var_84], 66h^^^jz      loc_4222DD^^^cmp     [rbp+var_80], 1^^^mov     rdi, [rbp+var_118]^^^mov     dword ptr [rdi+8], 31h^^^sbb     eax, eax^^^and     eax, 2^^^sub     eax, 1^^^add     eax, [rbp+var_88]^^^test    eax, eax^^^mov     [rbp+var_88], eax^^^jnz     short loc_422108^^^mov     [rbp+var_80], 0^^^mov     ecx, [rbp+var_124]^^^add     ecx, r15d^^^cmp     [rbp+var_11C], ecx^^^jge     loc_421130^^^mov     eax, ecx^^^sub     eax, [rbp+var_11C]^^^cdqe^^^shl     rax, 2^^^sub     r13, rax^^^mov     eax, [rbp+var_11C]^^^sub     eax, ecx^^^add     r15d, eax^^^jmp     loc_421130^^^mov     rcx, rax^^^add     edi, 1^^^mov     [rcx-4], edi^^^jmp     loc_421130^^^mov     r13, r14^^^mov     [rbp+var_124], 0^^^jmp     loc_420F7E^^^mov     [rbp+var_110], 0Eh^^^mov     dword ptr [rbp+var_B8], 6^^^jmp     loc_421816^^^mov     eax, [rbp+var_40]^^^mov     r15d, [rbp+var_104]^^^jmp     loc_4212F3^^^add     edx, dword ptr [rbp+var_E0]^^^jmp     loc_42207E^^^cmp     eax, ecx^^^jge     loc_421E60^^^lea     eax, [r10-1]^^^lea     rsi, [rdi+r8*8-8]^^^cdqe^^^sub     r12, rax^^^jmp     loc_421E66^^^mov     dword ptr [r13+8], 30h^^^add     r13, 0Ch^^^mov     esi, [rbp+var_88]^^^jmp     loc_42123E^^^call    _IO_padn^^^mov     rcx, [rbp+var_140]^^^jmp     loc_421388^^^mov     edx, 6^^^mov     dword ptr [rbp+var_B8], 6^^^jmp     loc_4219EF^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     loc_42277E^^^mov     byte ptr [rax], 20h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^jmp     loc_421335^^^test    eax, eax^^^mov     rbx, [rbp+var_D0]^^^mov     r12, [rbp+var_E0]^^^jle     loc_421DAE^^^mov     rdx, [rbp+var_98]^^^mov     rsi, [rbp+var_A0]^^^mov     ecx, 0Ah^^^mov     rdi, [rbp+var_A8]^^^call    __mpn_mul_1^^^mov     rsi, [rbp+var_A8]^^^mov     eax, 4^^^mov     r13, [rbp+var_98]^^^bsf     rdx, [rsi]^^^cmp     [rbp+var_88], 4^^^cmovle  eax, [rbp+var_88]^^^cmp     edx, eax^^^jge     loc_42231E^^^mov     rdi, [rbp+var_A0]^^^mov     ecx, 40h^^^mov     rdx, r13^^^sub     ecx, eax^^^call    __mpn_lshift^^^test    rax, rax^^^jz      short loc_422293^^^mov     rdx, [rbp+var_A0]^^^mov     [rdx+r13*8], rax^^^add     r13, 1^^^mov     [rbp+var_98], r13^^^or      dword ptr [rbp+var_B8], 1^^^jmp     loc_421DAE^^^movsxd  r10, r10d^^^sub     r12, r10^^^test    r12, r12^^^jle     short loc_4222D1^^^mov     rcx, [rbp+var_A0]^^^lea     rdi, [rdi+r8*8]^^^xor     edx, edx^^^xchg    ax, ax^^^mov     rsi, [rdi+rdx*8]^^^mov     [rcx+rdx*8], rsi^^^add     rdx, 1^^^cmp     rdx, r12^^^jnz     short loc_4222C0^^^mov     [rbp+var_98], r12^^^jmp     loc_421D88^^^mov     ecx, [rbp+var_11C]^^^cmp     [rbp+var_124], ecx^^^jz      loc_422465^^^mov     r14, [rbp+var_118]^^^mov     rdi, [rbp+var_118]^^^add     [rbp+var_124], 1^^^add     r14, 4^^^mov     dword ptr [rdi+4], 31h^^^jmp     loc_422108^^^call    _IO_padn^^^jmp     loc_4216EA^^^mov     rdi, [rbp+var_A0]^^^mov     ecx, eax^^^mov     rdx, r13^^^call    __mpn_rshift^^^jmp     loc_422293^^^mov     r9, r10^^^xor     r14d, r14d^^^xor     eax, eax^^^xor     r13d, r13d^^^jmp     loc_420CB8^^^mov     rax, rdx^^^xor     esi, esi^^^mov     rdx, r13^^^jmp     loc_4210E0^^^mov     ecx, r8d^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     dword ptr [rbp+var_148], r8d^^^call    __mpn_lshift^^^mov     rdi, [rbp+var_A0]^^^mov     r8d, dword ptr [rbp+var_148]^^^mov     rdx, [rbp+var_98]^^^mov     ecx, r8d^^^mov     rsi, rdi^^^call    __mpn_lshift^^^test    rax, rax^^^jz      loc_420D40^^^mov     rdx, [rbp+var_98]^^^mov     rcx, [rbp+var_A0]^^^mov     [rcx+rdx*8], rax^^^add     rdx, 1^^^mov     [rbp+var_98], rdx^^^jmp     loc_420D40^^^mov     rsi, 0A000000000000000h^^^mov     ecx, 40h^^^mov     edx, 2^^^mov     [rbp+var_60], rsi^^^lea     rsi, [rbp+var_60]^^^sub     ecx, r14d^^^mov     [rbp+var_148], r8^^^mov     [rbp+var_58], 0^^^mov     rdi, rsi^^^call    __mpn_lshift^^^mov     eax, [rbp+var_88]^^^mov     r8, [rbp+var_148]^^^jmp     loc_421D6D^^^test    byte ptr [r13-8], 1^^^jnz     loc_42108A^^^jmp     loc_421C0C^^^mov     rsi, rdi^^^mov     rdi, [rbp+var_A0]^^^lea     ecx, [r14+1]^^^mov     rdx, r12^^^call    __mpn_lshift^^^lea     rdx, [r12+1]^^^mov     [rbp+var_98], rdx^^^mov     rdx, [rbp+var_A0]^^^mov     [rdx+r12*8], rax^^^mov     eax, [rbp+var_88]^^^jmp     loc_421D88^^^mov     rsi, rdi^^^xor     r8d, r8d^^^xor     r10d, r10d^^^jmp     loc_421E39^^^mov     rax, [rbp+var_A0]^^^cmp     qword ptr [rax], 0^^^jz      loc_421130^^^jmp     loc_421C1D^^^mov     rdi, [rbp+var_118]^^^mov     eax, [rbp+var_C0]^^^test    r15d, r15d^^^mov     [rdi+4], eax^^^mov     dword ptr [rdi], 31h^^^jle     short loc_4224E8^^^movsxd  rax, [rbp+var_124]^^^mov     rdi, [rbp+var_118]^^^add     r15d, 1^^^mov     dword ptr [rdi+rax*4+8], 30h^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^movsxd  rcx, dword ptr [r12+8]^^^add     r15d, [rbp+var_124]^^^add     [rbp+var_88], 1^^^mov     r14, [rbp+var_118]^^^mov     [rbp+var_124], 1^^^mov     rax, fs:[rax]^^^movzx   eax, word ptr [rax+rcx*2]^^^and     eax, 100h^^^cmp     eax, 1^^^sbb     eax, eax^^^and     eax, 20h^^^add     eax, 45h^^^mov     [rbp+var_84], eax^^^jmp     loc_422108^^^test    byte ptr [r12+0Ch], 8^^^jz      short loc_42249A^^^jmp     short loc_422480^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^setz    al^^^or      r15d, 0FFFFFFFFh^^^movzx   r9d, [rbp+var_138]^^^test    al, al^^^jnz     loc_4203E0^^^jmp     loc_4202BA^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^setz    sil^^^movzx   r9d, [rbp+var_138]^^^jmp     loc_420383^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^setz    sil^^^movzx   r9d, [rbp+var_138]^^^jmp     loc_4202FF^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __woverflow^^^add     eax, 1^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^setz    sil^^^movzx   r9d, [rbp+var_138]^^^jmp     loc_420341^^^mov     esi, 2Bh^^^jmp     loc_4224F7^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __overflow^^^jmp     loc_422513^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^or      r15d, 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_4203E0^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^call    __overflow^^^add     eax, 1^^^setz    al^^^test    al, al^^^jnz     loc_4212C6^^^jmp     loc_421335^^^mov     rdx, [rbp+var_E0]^^^mov     rsi, rdi^^^mov     rdi, [rbp+var_B8]^^^call    _i18n_number_rewrite_0^^^mov     rdi, [rbp+var_E0]^^^mov     rdx, rax^^^jmp     loc_42163B^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r15d, eax^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^movzx   r9d, [rbp+var_138]^^^jnz     loc_4208E2^^^jmp     loc_4203E0^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r15d, eax^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^movzx   r9d, [rbp+var_138]^^^jnz     loc_42038E^^^jmp     loc_4203E0^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^setz    al^^^jmp     loc_422650^^^mov     rdi, r13^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^jnz     loc_420ECC^^^mov     rdi, r13^^^or      r15d, 0FFFFFFFFh^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_118], rax^^^jz      loc_4203E0^^^mov     [rbp+var_128], 1^^^mov     r14, [rbp+var_118]^^^jmp     loc_420EF4^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^call    __overflow^^^add     eax, 1^^^setz    al^^^jmp     loc_422650^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    __overflow^^^add     eax, 1^^^setz    al^^^jmp     loc_422650^^^movzx   esi, cl^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_130], edx^^^mov     dword ptr [rbp+var_148], r8d^^^mov     [rbp+var_138], r9b^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r15d, eax^^^mov     edx, dword ptr [rbp+var_130]^^^mov     r8d, dword ptr [rbp+var_148]^^^movzx   r9d, [rbp+var_138]^^^jnz     loc_4208C5^^^jmp     loc_4203E0^^^mov     esi, 2Bh^^^jmp     loc_422605^^^mov     esi, 20h^^^jmp     loc_4224F7^^^mov     rdi, rdx^^^mov     [rbp+var_130], rdx^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_B8], rax^^^mov     rdx, [rbp+var_130]^^^jnz     loc_421472^^^mov     rdi, [rbp+var_118]^^^or      r15d, 0FFFFFFFFh^^^call    free^^^jmp     loc_4203E0^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^setz    al^^^jmp     loc_422650^^^xor     eax, eax^^^jmp     loc_4206C2^^^mov     esi, 20h^^^jmp     loc_422605^^^cmp     [rbp+var_11D], 67h^^^jnz     loc_4211C1^^^cmp     [rbp+var_88], 4^^^jnz     loc_4211C1^^^mov     edx, 6^^^mov     esi, offset unk_49BD18^^^mov     rdi, r14^^^call    wmemcpy^^^mov     edx, [rbp+var_C0]^^^lea     rax, [r14+8]^^^cmp     r13, rax^^^mov     [r14+4], edx^^^jnb     short loc_42289B^^^add     r13, 14h^^^jmp     loc_421249^^^mov     rdx, r13^^^lea     rdi, [r14+18h]^^^mov     esi, 30h^^^sub     rdx, rax^^^add     r13, 10h^^^sar     rdx, 2^^^call    wmemset^^^jmp     loc_421249^^^mov     rdi, [rbp+var_B8]^^^call    free^^^mov     rdi, [rbp+var_118]^^^call    free^^^jmp     loc_4216AB^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^setz    al^^^jmp     loc_422650^^^
__overflow$$$mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jnz     short loc_42BB84^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     rax, [rdi+0D8h]^^^mov     rax, [rax+18h]^^^jmp     rax^^^
two_way_long_needle_0$$$push    r15^^^mov     r15, rcx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^mov     rsi, rcx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rdx^^^mov     rdi, rbx^^^sub     rsp, 838h^^^lea     rdx, [rsp+868h+var_48]^^^call    critical_factorization_0^^^mov     [rsp+868h+var_858], r15^^^mov     r14, rax^^^lea     rdx, [rsp+868h+var_48]^^^movq    xmm1, [rsp+868h+var_858]^^^lea     rax, [rsp+868h+var_848]^^^punpcklqdq xmm1, xmm1^^^movdqa  xmm0, xmm1^^^nop     dword ptr [rax+rax+00h]^^^movdqa  xmmword ptr [rax], xmm0^^^add     rax, 10h^^^cmp     rax, rdx^^^jnz     short loc_475D78^^^test    r15, r15^^^lea     r13, [r15-1]^^^jz      short loc_475DA8^^^xor     eax, eax^^^movzx   edx, byte ptr [rbx+rax]^^^mov     rcx, r13^^^sub     rcx, rax^^^add     rax, 1^^^cmp     rax, r15^^^mov     [rsp+rdx*8+868h+var_848], rcx^^^jnz     short loc_475D90^^^mov     rcx, [rsp+868h+var_48]^^^mov     rdx, r14^^^mov     rdi, rbx^^^mov     rsi, rcx^^^mov     [rsp+868h+var_860], rcx^^^add     rsi, rbx^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_475ECA^^^lea     rdi, [r14-1]^^^mov     r9d, 1^^^mov     r8, r15^^^xor     edx, edx^^^xor     esi, esi^^^sub     r8, [rsp+868h+var_860]^^^lea     r10, [rbp+rdi+0]^^^sub     r9, r14^^^sub     r12, r15^^^jmp     short loc_475E14^^^test    rdx, rdx^^^jz      short loc_475E06^^^cmp     [rsp+868h+var_860], rax^^^cmova   rax, r8^^^add     rsi, rax^^^xor     edx, edx^^^cmp     r12, rsi^^^jb      loc_475EB6^^^lea     r11, [rbp+rsi+0]^^^movzx   eax, byte ptr [r11+r13]^^^mov     rax, [rsp+rax*8+868h+var_848]^^^test    rax, rax^^^jnz     short loc_475DF8^^^cmp     rdx, r14^^^mov     rax, r14^^^cmovnb  rax, rdx^^^cmp     rax, r13^^^jb      short loc_475E49^^^jmp     short loc_475E60^^^add     rax, 1^^^cmp     rax, r13^^^jnb     short loc_475E60^^^movzx   ecx, byte ptr [r11+rax]^^^cmp     [rbx+rax], cl^^^jz      short loc_475E40^^^add     rsi, r9^^^jmp     short loc_475E06^^^cmp     r14, rdx^^^mov     rax, r14^^^jbe     short loc_475E98^^^movzx   ecx, byte ptr [r10+rsi]^^^mov     rax, rdi^^^cmp     [rbx+rdi], cl^^^jz      short loc_475E93^^^jmp     loc_475FB5^^^movzx   ecx, byte ptr [r11+rax-1]^^^lea     r15, [rax-1]^^^cmp     [rbx+rax-1], cl^^^jnz     short loc_475E98^^^mov     rax, r15^^^cmp     rax, rdx^^^jnz     short loc_475E80^^^add     rdx, 1^^^cmp     rdx, rax^^^ja      loc_475FAD^^^add     rsi, [rsp+868h+var_860]^^^mov     rdx, r8^^^cmp     r12, rsi^^^jnb     loc_475E14^^^xor     eax, eax^^^add     rsp, 838h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, r15^^^mov     r9d, 1^^^lea     rdi, [r14-1]^^^sub     rax, r14^^^lea     rsi, [rbp+r13+0]^^^lea     r8, [rbp+r14+0]^^^cmp     rax, r14^^^cmovb   rax, r14^^^xor     r11d, r11d^^^sub     r9, r14^^^lea     r10, [rax+1]^^^sub     r12, r15^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   eax, byte ptr [rsi+r11]^^^mov     rax, [rsp+rax*8+868h+var_848]^^^test    rax, rax^^^jnz     short loc_475F80^^^cmp     r14, r13^^^lea     rdx, [rbp+r11+0]^^^jnb     short loc_475F42^^^movzx   ecx, byte ptr [r8+r11]^^^mov     rax, r14^^^lea     rdx, [rbp+r11+0]^^^cmp     [rbx+r14], cl^^^jz      short loc_475F39^^^jmp     short loc_475F98^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_475F98^^^add     rax, 1^^^cmp     rax, r13^^^jb      short loc_475F30^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_475F73^^^movzx   eax, byte ptr [rdx+rdi]^^^cmp     [rbx+rdi], al^^^jnz     short loc_475FA8^^^mov     rax, rdi^^^jmp     short loc_475F69^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_475FA8^^^sub     rax, 1^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_475F60^^^mov     rax, rdx^^^jmp     loc_475EB8^^^add     r11, rax^^^cmp     r11, r12^^^jbe     loc_475F00^^^jmp     loc_475EB6^^^lea     rcx, [r9+r11]^^^lea     r11, [rcx+rax]^^^jmp     short loc_475F83^^^add     r11, r10^^^jmp     short loc_475F83^^^mov     rax, r11^^^jmp     loc_475EB8^^^mov     rax, r14^^^jmp     loc_475E98^^^
_dl_lookup_symbol_x$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rsi^^^push    r14^^^mov     r14, rdx^^^push    r13^^^mov     r13, r8^^^push    r12^^^mov     r12d, 1505h^^^push    rbx^^^sub     rsp, 0F8h^^^movzx   eax, byte ptr [rdi]^^^mov     [rbp+var_A8], rdi^^^mov     [rbp+var_B8], rcx^^^mov     [rbp+var_AC], r9d^^^test    al, al^^^jz      short loc_452ED7^^^mov     rdx, rdi^^^nop     word ptr [rax+rax+00h]^^^mov     rcx, r12^^^movzx   eax, al^^^add     rdx, 1^^^shl     rcx, 5^^^add     r12, rcx^^^add     r12, rax^^^movzx   eax, byte ptr [rdx]^^^test    al, al^^^jnz     short loc_452EB8^^^and     r12d, 0FFFFFFFFh^^^mov     edi, 0FFFFFFFFh^^^test    r13, r13^^^mov     [rbp+var_60], 0^^^mov     [rbp+var_40], rdi^^^mov     [rbp+var_58], 0^^^jz      short loc_452F02^^^test    [rbp+arg_0], 0FFFFFFFAh^^^jnz     loc_453409^^^cmp     [rbp+arg_8], 0^^^mov     rcx, [rbp+var_B8]^^^mov     r9, [rcx]^^^jnz     loc_4533D2^^^mov     [rbp+var_C0], 0^^^test    r9, r9^^^jz      loc_4532B1^^^mov     rax, [rbp+var_C0]^^^mov     rbx, [rbp+var_B8]^^^jmp     short loc_452F59^^^test    eax, 80000000h^^^jnz     loc_453018^^^add     rbx, 8^^^mov     r9, [rbx]^^^test    r9, r9^^^jz      short loc_452F9F^^^xor     eax, eax^^^mov     edx, [rbp+var_AC]^^^mov     rcx, [rbp+arg_8]^^^lea     r8, [rbp+var_60]^^^mov     rdi, [rbp+var_A8]^^^mov     rsi, r12^^^mov     [rsp+120h+var_F8], r15^^^mov     [rsp+120h+var_118], r13^^^mov     [rsp+120h+var_120], rax^^^mov     [rsp+120h+var_100], edx^^^mov     edx, [rbp+arg_0]^^^mov     [rsp+120h+var_108], rcx^^^mov     rcx, [r14]^^^mov     [rsp+120h+var_110], edx^^^lea     rdx, [rbp+var_40]^^^call    do_lookup_x^^^test    eax, eax^^^jle     short loc_452F40^^^mov     rax, [rbp+var_60]^^^test    rax, rax^^^jz      loc_4532B1^^^mov     rcx, [r14]^^^test    rcx, rcx^^^jz      short loc_452FC4^^^movzx   eax, byte ptr [rcx+5]^^^and     eax, 3^^^cmp     eax, 3^^^jz      loc_4531C0^^^mov     rbx, [rbp+var_58]^^^xor     r12d, r12d^^^movzx   eax, byte ptr [rbx+314h]^^^and     eax, 3^^^cmp     al, 2^^^jz      loc_4534CF^^^mov     esi, [rbx+3CCh]^^^test    esi, esi^^^jz      loc_4534AB^^^mov     eax, cs:_dl_debug_mask^^^test    eax, 804h^^^jnz     loc_453422^^^mov     rax, [rbp+var_60]^^^mov     [r14], rax^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     [rbp+arg_8], 0^^^jnz     loc_452F4B^^^test    r13, r13^^^jz      loc_45353B^^^xor     ebx, ebx^^^test    r15, r15^^^jz      short loc_453037^^^mov     rbx, [r15+8]^^^mov     rcx, [rbp+var_A8]^^^mov     r15, [r13+0]^^^cmp     eax, 0FFFFFFFEh^^^mov     r13, [r13+10h]^^^mov     eax, offset unk_49A0C9^^^mov     r12d, offset aNoVersionSymbo^^^cmovnz  r12, rax^^^mov     [rbp+var_A0], offset aSymbol^^^mov     [rbp+var_90], offset aVersion^^^mov     rdi, rcx^^^mov     [rbp+var_98], rcx^^^mov     [rbp+var_88], r15^^^mov     [rbp+var_78], r13^^^mov     [rbp+var_68], r12^^^mov     [rbp+var_80], offset aNotDefinedInFi^^^mov     [rbp+var_70], offset aWithLinkTimeRe^^^call    strlen^^^mov     edi, offset aVersion^^^mov     [rbp+var_D8], rax^^^call    strlen^^^mov     rdi, r15^^^mov     [rbp+var_A8], rax^^^call    strlen^^^mov     rdx, [rbp+var_D8]^^^mov     edi, offset aNotDefinedInFi^^^lea     r15, [rdx+rax+8]^^^add     r15, [rbp+var_A8]^^^call    strlen^^^mov     rdi, r13^^^add     r15, rax^^^call    strlen^^^lea     r13, [r15+rax]^^^mov     edi, offset aWithLinkTimeRe^^^call    strlen^^^mov     rdi, r12^^^add     r13, rax^^^call    strlen^^^lea     rax, [r13+rax+1Eh]^^^mov     esi, offset aSymbol^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+120h+var_E1]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_98]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_90]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_88]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_80]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_78]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_70]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_68]^^^mov     rdi, rax^^^call    sub_400320^^^cmp     byte ptr [rbx], 0^^^jnz     short loc_453197^^^mov     rax, cs:_dl_argv^^^mov     rbx, [rax]^^^mov     eax, offset aMainProgram^^^test    rbx, rbx^^^cmovz   rbx, rax^^^mov     rsi, rbx^^^mov     rcx, r12^^^mov     edx, offset aRelocationErro^^^xor     edi, edi^^^xor     ebx, ebx^^^call    _dl_signal_cerror^^^mov     qword ptr [r14], 0^^^jmp     loc_453003^^^cmp     [rbp+var_AC], 1^^^jz      loc_453287^^^mov     rdx, [rbp+var_B8]^^^mov     [rbp+var_50], 0^^^mov     [rbp+var_48], 0^^^mov     r9, [rdx]^^^test    r9, r9^^^jz      loc_453799^^^mov     rbx, rdx^^^mov     rax, [rbp+var_C0]^^^jmp     short loc_453212^^^mov     r9, [rbx+8]^^^test    r9, r9^^^jz      short loc_453257^^^mov     rcx, [r14]^^^add     rbx, 8^^^xor     eax, eax^^^mov     rdx, [rbp+arg_8]^^^mov     rdi, [rbp+var_A8]^^^lea     r8, [rbp+var_50]^^^mov     rsi, r12^^^mov     [rsp+120h+var_F8], 0^^^mov     [rsp+120h+var_100], 1^^^mov     [rsp+120h+var_118], r13^^^mov     [rsp+120h+var_120], rax^^^mov     [rsp+120h+var_108], rdx^^^mov     edx, [rbp+arg_0]^^^mov     [rsp+120h+var_110], edx^^^lea     rdx, [rbp+var_40]^^^call    do_lookup_x^^^test    eax, eax^^^jz      short loc_453200^^^mov     rax, [rbp+var_50]^^^test    rax, rax^^^jz      loc_453799^^^cmp     [rbp+var_48], r15^^^jz      loc_453799^^^mov     rax, [r14]^^^mov     [rbp+var_58], r15^^^mov     rbx, r15^^^mov     r12d, 1^^^mov     [rbp+var_60], rax^^^jmp     loc_452FCB^^^mov     rbx, [rbp+var_58]^^^mov     r12d, 1^^^cmp     rbx, r15^^^jz      loc_452FCB^^^mov     [rbp+var_60], rcx^^^mov     [rbp+var_58], r15^^^mov     rbx, r15^^^mov     r12d, [rbp+var_AC]^^^jmp     loc_452FCB^^^mov     rax, [r14]^^^test    rax, rax^^^jz      short loc_4532C4^^^movzx   eax, byte ptr [rax+4]^^^shr     al, 4^^^cmp     al, 2^^^jz      short loc_4532CB^^^cmp     [rbp+arg_8], 0^^^jz      short loc_4532D9^^^mov     qword ptr [r14], 0^^^xor     ebx, ebx^^^jmp     loc_453003^^^test    r15, r15^^^mov     ebx, offset unk_49A0C9^^^jz      short loc_4532E7^^^mov     rbx, [r15+8]^^^mov     r15d, offset unk_49A0C9^^^test    r13, r13^^^mov     r12, r15^^^jz      short loc_45330A^^^mov     r12, [r13+0]^^^mov     r15d, offset aVersion^^^test    r12, r12^^^jnz     short loc_45330A^^^mov     r12d, offset unk_49A0C9^^^mov     rax, [rbp+var_A8]^^^mov     [rbp+var_88], r12^^^mov     [rbp+var_A0], offset undefined_msg^^^mov     [rbp+var_90], r15^^^mov     rdi, rax^^^mov     [rbp+var_98], rax^^^call    strlen^^^mov     rdi, r15^^^mov     r13, rax^^^call    strlen^^^lea     r13, [r13+rax+13h]^^^mov     rdi, r12^^^call    strlen^^^lea     rax, [r13+rax+1Eh]^^^mov     esi, offset undefined_msg^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+120h+var_E1]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_98]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_90]^^^mov     rdi, rax^^^call    near ptr qword_400310^^^mov     rsi, [rbp+var_88]^^^mov     rdi, rax^^^call    sub_400320^^^cmp     byte ptr [rbx], 0^^^jnz     short loc_4533BB^^^mov     rax, cs:_dl_argv^^^mov     rbx, [rax]^^^mov     eax, offset aMainProgram^^^test    rbx, rbx^^^cmovz   rbx, rax^^^mov     rcx, r12^^^mov     edx, offset aSymbolLookupEr^^^mov     rsi, rbx^^^xor     edi, edi^^^call    _dl_signal_cerror^^^jmp     loc_4532CB^^^mov     rax, [r9]^^^mov     rdx, [rbp+arg_8]^^^mov     [rbp+var_C0], 0^^^cmp     [rax], rdx^^^jz      loc_452F22^^^mov     rcx, [rbp+arg_8]^^^xor     edx, edx^^^add     rdx, 1^^^cmp     [rax+rdx*8], rcx^^^jnz     short loc_4533F3^^^mov     [rbp+var_C0], rdx^^^jmp     loc_452F22^^^mov     ecx, offset __PRETTY_FUNCTION___11310^^^mov     edx, 2D8h^^^mov     esi, offset aDlLookup_c^^^mov     edi, offset aVersionVoid0Fl^^^call    __assert_fail^^^test    al, 4^^^mov     rsi, [r15+8]^^^jz      loc_452FFC^^^mov     rcx, [rbx+8]^^^test    r12d, r12d^^^mov     r9d, offset aProtected^^^mov     eax, offset aNormal^^^mov     r8, [rbx+30h]^^^cmovz   r9, rax^^^cmp     byte ptr [rcx], 0^^^jnz     short loc_453457^^^mov     rax, cs:_dl_argv^^^mov     rcx, [rax]^^^cmp     byte ptr [rsi], 0^^^mov     rdx, [r15+30h]^^^jnz     short loc_453476^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     eax, offset aMainProgram^^^test    rsi, rsi^^^cmovz   rsi, rax^^^mov     rax, [rbp+var_A8]^^^mov     edi, offset aBindingFileSLu^^^mov     [rsp+120h+var_120], rax^^^xor     eax, eax^^^call    _dl_debug_printf^^^test    r13, r13^^^jz      short loc_4534BA^^^mov     rsi, [r13+0]^^^mov     edi, offset aS_1^^^xor     eax, eax^^^call    _dl_debug_printf_c^^^mov     rbx, [rbp+var_58]^^^jmp     loc_452FFC^^^mov     dword ptr [rbx+3CCh], 1^^^jmp     loc_452FEB^^^mov     edi, (offset aCallingFiniSLu+18h)^^^xor     eax, eax^^^call    _dl_debug_printf_c^^^mov     rbx, [rbp+var_58]^^^jmp     loc_452FFC^^^test    byte ptr [rbp+arg_0], 1^^^jz      loc_452FDD^^^cmp     r15, rbx^^^jz      loc_453583^^^test    byte ptr [rbx+3D4h], 8^^^jnz     loc_452FDD^^^mov     r9, [r15+3C0h]^^^mov     rcx, [r15+3B8h]^^^test    rcx, rcx^^^mov     [rbp+var_C0], rcx^^^jz      short loc_453554^^^mov     rdx, [rcx]^^^test    rdx, rdx^^^jz      short loc_453554^^^xor     eax, eax^^^cmp     rdx, rbx^^^jz      short loc_453532^^^mov     rcx, [rbp+var_C0]^^^add     eax, 1^^^mov     edx, eax^^^mov     rdx, [rcx+rdx*8]^^^test    rdx, rdx^^^jz      short loc_453554^^^cmp     rdx, rbx^^^jnz     short loc_453518^^^mov     rbx, [rbp+var_58]^^^jmp     loc_452FDD^^^mov     ecx, offset __PRETTY_FUNCTION___11310^^^mov     edx, 2EEh^^^mov     esi, offset aDlLookup_c^^^mov     edi, offset aVersionVoid0^^^call    __assert_fail^^^test    r9, r9^^^jz      short loc_45358B^^^mov     r8d, [r9]^^^test    r8d, r8d^^^jz      short loc_45358E^^^cmp     [r9+8], rbx^^^jz      short loc_453532^^^lea     edx, [r8-1]^^^xor     eax, eax^^^shl     rdx, 3^^^cmp     rax, rdx^^^jz      short loc_45358E^^^add     rax, 8^^^cmp     [r9+rax+8], rbx^^^jnz     short loc_453571^^^jmp     short loc_453532^^^mov     rbx, r15^^^jmp     loc_452FDD^^^xor     r8d, r8d^^^mov     edx, [rbp+arg_0]^^^mov     rax, [rbx+460h]^^^and     edx, 4^^^mov     [rbp+var_C8], rax^^^mov     [rbp+var_D0], rdx^^^jnz     loc_45364E^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_4535D1^^^mov     edi, offset _dl_load_lock^^^mov     [rbp+var_E8], r8d^^^call    near ptr 0^^^mov     r8d, [rbp+var_E8]^^^mov     rax, [r15+30h]^^^lea     rax, [rax+rax*8]^^^shl     rax, 4^^^mov     rax, ds:_dl_ns[rax]^^^cmp     rax, rbx^^^jz      short loc_4535F7^^^test    rax, rax^^^jz      short loc_4535F7^^^mov     rax, [rax+18h]^^^cmp     rax, rbx^^^jnz     short loc_4535E9^^^test    rax, rax^^^mov     edx, 0FFFFFFFFh^^^jz      loc_45370C^^^mov     rcx, [rbp+var_C8]^^^cmp     rcx, [rbx+460h]^^^jnz     loc_453707^^^mov     esi, [rbx+3D4h]^^^xor     edx, edx^^^test    sil, 8^^^jnz     loc_45370C^^^movzx   eax, byte ptr [r15+314h]^^^and     eax, 3^^^cmp     al, 2^^^jz      loc_453825^^^or      esi, 8^^^xor     edx, edx^^^mov     [rbx+3D4h], esi^^^jmp     loc_45370C^^^xor     eax, eax^^^xchg    eax, fs:1Ch^^^cmp     eax, 2^^^jnz     short loc_453678^^^mov     rdi, fs:10h^^^mov     edx, 1^^^add     rdi, 1Ch^^^mov     al, 0CAh^^^mov     esi, 81h^^^syscall^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_4536A8^^^mov     edi, offset _dl_load_lock^^^mov     [rbp+var_E8], r8d^^^mov     [rbp+var_E0], r9^^^call    near ptr 0^^^mov     r9, [rbp+var_E0]^^^mov     r8d, [rbp+var_E8]^^^mov     rax, rbx^^^mov     rcx, [r15+3B8h]^^^cmp     [rbp+var_C0], rcx^^^mov     rbx, rax^^^jz      loc_4537A8^^^test    rcx, rcx^^^jz      loc_4537A8^^^mov     rdx, [rcx]^^^test    rdx, rdx^^^jz      loc_4537A8^^^xor     esi, esi^^^cmp     rax, rdx^^^jz      short loc_4536F5^^^add     esi, 1^^^mov     edx, esi^^^mov     rdx, [rcx+rdx*8]^^^test    rdx, rdx^^^jz      loc_4537A8^^^cmp     rax, rdx^^^jnz     short loc_4536DE^^^xor     edx, edx^^^mov     rcx, [rbp+var_C8]^^^cmp     rcx, [rax+460h]^^^jz      short loc_45370C^^^mov     edx, 0FFFFFFFFh^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_45372C^^^mov     edi, offset _dl_load_lock^^^mov     dword ptr [rbp+var_D8], edx^^^call    near ptr 0^^^mov     edx, dword ptr [rbp+var_D8]^^^cmp     [rbp+var_D0], 0^^^jz      short loc_453742^^^mov     dword ptr fs:1Ch, 1^^^cmp     edx, 0FFFFFFFFh^^^jnz     loc_453532^^^test    byte ptr [rbp+arg_0], 4^^^jz      short loc_45375F^^^mov     rcx, [r15+380h]^^^mov     [rbp+var_B8], rcx^^^mov     edx, [rbp+arg_0]^^^mov     rax, [rbp+arg_8]^^^mov     r8, r13^^^mov     r9d, [rbp+var_AC]^^^mov     rcx, [rbp+var_B8]^^^mov     rsi, r15^^^mov     rdi, [rbp+var_A8]^^^mov     dword ptr [rsp+120h+var_120], edx^^^mov     rdx, r14^^^mov     [rsp+120h+var_118], rax^^^call    _dl_lookup_symbol_x^^^mov     rbx, rax^^^jmp     loc_453003^^^mov     rbx, [rbp+var_58]^^^mov     r12d, 1^^^jmp     loc_452FCB^^^mov     rdx, [r15+3C0h]^^^test    rdx, rdx^^^jz      loc_4535D1^^^cmp     r9, rdx^^^jz      short loc_4537FA^^^mov     r8d, [rdx]^^^test    r8d, r8d^^^jz      loc_4535D1^^^cmp     rax, [rdx+8]^^^jz      loc_4536F5^^^lea     ecx, [r8-1]^^^lea     rsi, ds:0[rcx*8]^^^xor     ecx, ecx^^^cmp     rcx, rsi^^^jz      loc_4535D1^^^add     rcx, 8^^^cmp     rax, [rdx+rcx+8]^^^jnz     short loc_4537E1^^^jmp     loc_4536F5^^^mov     ecx, [r9]^^^cmp     ecx, r8d^^^jbe     loc_4535D1^^^mov     edx, r8d^^^cmp     rax, [r9+rdx*8+8]^^^jz      loc_4536F5^^^add     r8d, 1^^^cmp     ecx, r8d^^^ja      short loc_453806^^^mov     r8d, ecx^^^jmp     loc_4535D1^^^test    byte ptr [r15+3D4h], 8^^^jnz     loc_45363E^^^mov     eax, [r15+3C8h]^^^cmp     eax, r8d^^^jbe     short loc_4538AD^^^mov     rax, [r15+3C0h]^^^mov     edx, r8d^^^mov     [rax+rdx*8+8], rbx^^^mov     rax, [r15+3C0h]^^^add     r8d, 1^^^mov     [rax], r8d^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jnz     short loc_45386C^^^xor     edx, edx^^^jmp     loc_45370C^^^mov     rcx, [r15+8]^^^mov     r8, [r15+30h]^^^cmp     byte ptr [rcx], 0^^^jnz     short loc_453883^^^mov     rax, cs:_dl_argv^^^mov     rcx, [rax]^^^mov     rsi, [rbx+8]^^^mov     rdx, [rbx+30h]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_45389A^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     edi, offset aFileSLuNeede_0^^^xor     eax, eax^^^call    _dl_debug_printf^^^xor     edx, edx^^^jmp     loc_45370C^^^test    eax, eax^^^mov     edi, 58h^^^mov     dword ptr [rbp+var_C0], 0Ah^^^jz      short loc_4538D0^^^add     eax, eax^^^lea     rdi, ds:8[rax*8]^^^mov     dword ptr [rbp+var_C0], eax^^^mov     dword ptr [rbp+var_D8], esi^^^mov     [rbp+var_E8], r8d^^^call    malloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     esi, dword ptr [rbp+var_D8]^^^mov     r8d, [rbp+var_E8]^^^jz      loc_45363E^^^test    r8d, r8d^^^mov     r9d, r8d^^^jz      short loc_453949^^^mov     rsi, [r15+3C0h]^^^lea     rdx, ds:0[r9*8]^^^lea     rdi, [rax+8]^^^mov     [rbp+var_E8], r8d^^^mov     [rbp+var_E0], r9^^^mov     [rbp+var_D8], rax^^^add     rsi, 8^^^call    memcpy^^^mov     r9, [rbp+var_E0]^^^mov     r8d, [rbp+var_E8]^^^mov     rcx, [rbp+var_D8]^^^add     r8d, 1^^^mov     [rcx+r9*8+8], rbx^^^mov     [rcx], r8d^^^mov     rdi, [r15+3C0h]^^^mov     [r15+3C0h], rcx^^^mov     ecx, dword ptr [rbp+var_C0]^^^test    rdi, rdi^^^mov     [r15+3C8h], ecx^^^jz      loc_45385C^^^call    _dl_scope_free^^^jmp     loc_45385C^^^
sub_47116B$$$movsxd  rax, dword ptr [rbp-10F8h]^^^xor     edx, edx^^^imul    rax, 48h^^^add     rax, [rbp-10E0h]^^^mov     rdi, [rax+38h]^^^mov     [rbp-10F0h], rax^^^lea     rax, ds:1Eh[rdi*8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rcx, [rsp+arg_7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     esi, edx^^^cmp     rsi, rdi^^^jnb     short loc_4711D3^^^mov     r8, [rbp-10F0h]^^^mov     eax, edx^^^add     edx, 1^^^add     eax, [r8+30h]^^^shl     rax, 4^^^add     rax, [rbp-1118h]^^^mov     [rcx+rsi*8], rax^^^jmp     short loc_4711A2^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_471747^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_471747^^^mov     dword ptr [rax], 25h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^mov     rcx, [rbp-10F0h]^^^movzx   eax, byte ptr [rcx+0Ch]^^^test    al, 8^^^jz      loc_471732^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4716FC^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4716FC^^^mov     rdi, [rbp-10F0h]^^^mov     dword ptr [rax], 23h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^mov     r8d, 4^^^mov     edx, 3^^^mov     ecx, 2^^^movzx   eax, byte ptr [rdi+0Ch]^^^test    al, al^^^jns     short loc_47129A^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_471762^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_471762^^^mov     dword ptr [rax], 27h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^mov     ecx, edx^^^mov     edx, r8d^^^mov     r8, [rbp-10F0h]^^^movzx   eax, byte ptr [r8+0Ch]^^^test    al, 40h^^^jz      loc_47164F^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_4716CE^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_4716CE^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rcx+20h], rax^^^mov     r8, [rbp-10F0h]^^^mov     ecx, edx^^^movzx   eax, byte ptr [r8+0Ch]^^^test    al, 20h^^^jz      short loc_47130F^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_471680^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_471680^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^add     ecx, 1^^^mov     r8, [rbp-10F0h]^^^cmp     dword ptr [r8+10h], 30h^^^jz      loc_471540^^^mov     r8, [rbp-10F0h]^^^test    byte ptr [r8+0Dh], 8^^^jz      short loc_47135E^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4716D5^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4716D5^^^mov     dword ptr [rax], 49h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^add     ecx, 1^^^mov     r8, [rbp-10F0h]^^^mov     eax, [r8+4]^^^test    eax, eax^^^jz      loc_4713F8^^^lea     rsi, [rbp-120h]^^^cdqe^^^mov     edi, 0Ah^^^lea     r8, [rsi+30h]^^^xor     edx, edx^^^sub     r8, 4^^^div     rdi^^^mov     edx, ds:_itowa_lower_digits[rdx*4]^^^test    rax, rax^^^mov     [r8], edx^^^jnz     short loc_471383^^^add     rsi, 30h^^^mov     [rbp-1128h], rsi^^^jmp     short loc_4713EF^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r8]^^^test    rax, rax^^^jz      loc_471593^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_471593^^^mov     [rdx], esi^^^add     rdx, 4^^^add     esi, 1^^^mov     [rax+20h], rdx^^^jz      loc_47158A^^^cmp     ecx, 7FFFFFFFh^^^jz      loc_47158A^^^add     r8, 4^^^add     ecx, 1^^^cmp     r8, [rbp-1128h]^^^jb      short loc_4713A8^^^mov     r8, [rbp-10F0h]^^^cmp     dword ptr [r8], 0FFFFFFFFh^^^jz      loc_4714D3^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4715ED^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4715ED^^^mov     dword ptr [rax], 2Eh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     ecx, 7FFFFFFFh^^^jz      loc_47158A^^^mov     r8, [rbp-10F0h]^^^lea     rsi, [rbp-120h]^^^add     ecx, 1^^^mov     edi, 0Ah^^^movsxd  rax, dword ptr [r8]^^^lea     r8, [rsi+30h]^^^xor     edx, edx^^^sub     r8, 4^^^div     rdi^^^mov     edx, ds:_itowa_lower_digits[rdx*4]^^^test    rax, rax^^^mov     [r8], edx^^^jnz     short loc_47145E^^^add     rsi, 30h^^^mov     [rbp-1128h], rsi^^^jmp     short loc_4714CA^^^mov     rax, [rbx+0A0h]^^^mov     esi, [r8]^^^test    rax, rax^^^jz      loc_4715C0^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+28h]^^^jnb     loc_4715C0^^^mov     [rdx], esi^^^add     rdx, 4^^^add     esi, 1^^^mov     [rax+20h], rdx^^^jz      loc_47158A^^^cmp     ecx, 7FFFFFFFh^^^jz      loc_47158A^^^add     r8, 4^^^add     ecx, 1^^^cmp     r8, [rbp-1128h]^^^jb      short loc_471483^^^mov     r8, [rbp-10F0h]^^^mov     esi, [r8+8]^^^test    esi, esi^^^jz      short loc_47151A^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_471614^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_471614^^^mov     [rax], esi^^^add     rax, 4^^^add     esi, 1^^^mov     [rdx+20h], rax^^^jz      short loc_47158A^^^cmp     ecx, 7FFFFFFFh^^^jz      short loc_47158A^^^add     ecx, 1^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471636^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     ecx, eax^^^jbe     loc_4702B1^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      short loc_47156C^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     short loc_47156C^^^mov     dword ptr [rax], 30h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^add     ecx, 1^^^jmp     loc_471321^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^jnz     short loc_471564^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^mov     [rbp-11D0h], r8^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^mov     r8, [rbp-11D0h]^^^jnz     loc_4713DC^^^jmp     short loc_47158A^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^mov     [rbp-11D0h], r8^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^mov     r8, [rbp-11D0h]^^^jnz     loc_4714B7^^^jmp     short loc_47158A^^^mov     esi, 2Eh^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^jnz     loc_471435^^^jmp     loc_47158A^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^jnz     loc_47150F^^^jmp     loc_47158A^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7F2h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^test    al, 10h^^^jz      loc_4712DC^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      short loc_4716A7^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     short loc_4716A7^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^jmp     loc_4712CE^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^jnz     loc_47130C^^^jmp     loc_47158A^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^add     eax, 1^^^mov     edx, [rbp-11C8h]^^^jnz     loc_4712CE^^^jmp     loc_47158A^^^mov     esi, 2Bh^^^jmp     short loc_4716AC^^^mov     esi, 49h^^^mov     rdi, rbx^^^mov     [rbp-11B8h], ecx^^^call    __woverflow^^^add     eax, 1^^^mov     ecx, [rbp-11B8h]^^^jnz     loc_47135B^^^jmp     loc_47158A^^^mov     esi, 23h^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^jz      loc_47158A^^^mov     rsi, [rbp-10F0h]^^^mov     r8d, 4^^^mov     edx, 3^^^mov     ecx, 2^^^movzx   eax, byte ptr [rsi+0Ch]^^^jmp     loc_471259^^^mov     r8d, 3^^^mov     edx, 2^^^mov     ecx, 1^^^jmp     loc_471259^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __woverflow^^^add     eax, 1^^^jnz     loc_4711FF^^^jmp     loc_47158A^^^mov     esi, 27h^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^mov     [rbp-11D0h], r8d^^^call    __woverflow^^^add     eax, 1^^^mov     edx, [rbp-11C8h]^^^mov     r8d, [rbp-11D0h]^^^jnz     loc_471289^^^jmp     loc_47158A^^^
_dl_catch_error$$$push    rbx^^^sub     rsp, 120h^^^mov     [rsp+128h+var_120], rdi^^^mov     [rsp+128h+var_118], rsi^^^mov     [rsp+128h+var_110], rdx^^^mov     [rsp+128h+var_108], rcx^^^mov     [rsp+128h+var_100], r8^^^mov     [rsp+128h+var_F0], 0^^^call    cs:_dl_error_catch_tsd^^^mov     [rsp+128h+var_128], rax^^^mov     rax, [rax]^^^lea     rdi, [rsp+128h+var_E0]^^^xor     esi, esi^^^mov     [rsp+128h+var_10], rax^^^call    __sigsetjmp^^^test    eax, eax^^^mov     ebx, eax^^^jnz     short loc_4556C0^^^mov     rax, [rsp+128h+var_128]^^^lea     rdx, [rsp+128h+var_F8]^^^mov     rdi, [rsp+128h+var_100]^^^mov     [rax], rdx^^^call    [rsp+128h+var_108]^^^mov     rax, [rsp+128h+var_10]^^^mov     rdx, [rsp+128h+var_128]^^^mov     [rdx], rax^^^mov     rdx, [rsp+128h+var_118]^^^mov     rax, [rsp+128h+var_120]^^^mov     qword ptr [rax], 0^^^mov     qword ptr [rdx], 0^^^mov     rdx, [rsp+128h+var_110]^^^mov     byte ptr [rdx], 0^^^add     rsp, 120h^^^mov     eax, ebx^^^pop     rbx^^^retn^^^mov     rax, [rsp+128h+var_10]^^^mov     rdx, [rsp+128h+var_128]^^^cmp     ebx, 0FFFFFFFFh^^^mov     [rdx], rax^^^mov     rax, [rsp+128h+var_F8]^^^mov     rdx, [rsp+128h+var_120]^^^mov     [rdx], rax^^^mov     rax, [rsp+128h+var_F0]^^^mov     rdx, [rsp+128h+var_118]^^^mov     [rdx], rax^^^movzx   eax, [rsp+128h+var_E8]^^^mov     rdx, [rsp+128h+var_110]^^^mov     [rdx], al^^^mov     eax, 0^^^cmovz   ebx, eax^^^jmp     short loc_4556B5^^^
do_encoding$$$mov     rdx, [rdi+48h]^^^mov     eax, 0FFFFFFFFh^^^mov     ecx, [rdx+58h]^^^test    ecx, ecx^^^jnz     short locret_474AEE^^^mov     eax, [rdx+48h]^^^cmp     eax, [rdx+4Ch]^^^mov     edx, 0^^^cmovnz  eax, edx^^^rep retn^^^
plural_eval$$$mov     [rsp+var_18], rbp^^^mov     rbp, rdi^^^mov     [rsp+var_20], rbx^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^mov     eax, [rbp+0]^^^mov     rbx, rsi^^^cmp     eax, 1^^^jz      loc_41228A^^^jle     loc_4122C0^^^cmp     eax, 2^^^jz      short loc_412220^^^cmp     eax, 3^^^jz      short loc_412260^^^xor     ebx, ebx^^^mov     rax, rbx        ^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rdi, [rbp+8]^^^mov     rsi, rbx^^^call    plural_eval^^^mov     r12d, [rbp+4]^^^mov     r13, rax^^^cmp     r12d, 0Fh^^^jz      short loc_4122A8^^^cmp     r12d, 0Eh^^^jnz     loc_4122E8^^^test    rax, rax^^^jz      short loc_4121FA^^^mov     rdi, [rbp+10h]^^^mov     rsi, rbx^^^xor     ebx, ebx^^^call    plural_eval^^^test    rax, rax^^^setnz   bl^^^jmp     short loc_4121FC^^^mov     rdi, [rbp+8]^^^mov     rsi, rbx^^^call    plural_eval^^^cmp     rax, 1^^^sbb     eax, eax^^^not     eax^^^add     eax, 2^^^cdqe^^^mov     rbp, [rbp+rax*8+8]^^^mov     eax, [rbp+0]^^^cmp     eax, 1^^^jnz     loc_4121EA^^^mov     rdi, [rbp+8]^^^mov     rsi, rbx^^^xor     ebx, ebx^^^call    plural_eval^^^test    rax, rax^^^setz    bl^^^jmp     loc_4121FC      ^^^test    rax, rax^^^jz      short loc_412248^^^mov     ebx, 1^^^jmp     loc_4121FC      ^^^test    eax, eax^^^jnz     loc_4121FA^^^mov     eax, [rbp+4]^^^test    eax, eax^^^jz      loc_4121FC      ^^^cmp     eax, 1^^^jnz     loc_4121FA^^^mov     rbx, [rbp+8]^^^jmp     loc_4121FC      ^^^mov     rdi, [rbp+10h]^^^mov     rsi, rbx^^^sub     r12d, 3^^^xor     ebx, ebx^^^call    plural_eval^^^cmp     r12d, 0Ah       ^^^mov     rcx, rax^^^ja      loc_4121FC      ^^^jmp     ds:off_49A9E8[r12*8]^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setz    bl^^^jmp     loc_4121FC      ^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setnb   bl^^^jmp     loc_4121FC      ^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setbe   bl^^^jmp     loc_4121FC      ^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setnbe  bl^^^jmp     loc_4121FC      ^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setb    bl^^^jmp     loc_4121FC      ^^^mov     rbx, r13        ^^^sub     rbx, rax^^^jmp     loc_4121FC      ^^^lea     rbx, [rax+r13]  ^^^jmp     loc_4121FC      ^^^mov     rax, r13        ^^^xor     edx, edx^^^div     rcx^^^mov     rbx, rdx^^^jmp     loc_4121FC      ^^^mov     rax, r13        ^^^xor     edx, edx^^^div     rcx^^^mov     rbx, rax^^^jmp     loc_4121FC      ^^^mov     rbx, rax        ^^^imul    rbx, r13^^^jmp     loc_4121FC      ^^^xor     ebx, ebx        ^^^cmp     r13, rax^^^setnz   bl^^^jmp     loc_4121FC      ^^^
do_dlsym_private$$$push    rbx^^^lea     rdx, [rdi+18h]^^^mov     rbx, rdi^^^xor     r9d, r9d^^^sub     rsp, 30h^^^mov     rsi, [rdi]^^^mov     qword ptr [rdi+18h], 0^^^mov     rdi, [rdi+8]^^^lea     r8, [rsp+38h+var_28]^^^mov     [rsp+38h+var_28], offset aGlibc_private^^^mov     [rsp+38h+var_1C], 1^^^mov     [rsp+38h+var_20], 963CF85h^^^mov     rcx, [rsi+380h]^^^mov     [rsp+38h+var_18], 0^^^mov     [rsp+38h+var_30], 0^^^mov     [rsp+38h+var_38], 0^^^call    _dl_lookup_symbol_x^^^mov     [rbx+10h], rax^^^add     rsp, 30h^^^pop     rbx^^^retn^^^
posix_memalign$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, rsi^^^test    dil, 7^^^mov     rsi, rdx^^^mov     eax, 16h^^^jz      short loc_409400^^^pop     rbx^^^retn^^^mov     rax, rdi^^^shr     rax, 3^^^lea     rdx, [rax-1]^^^test    rdx, rax^^^jz      short loc_409420^^^mov     eax, 16h^^^pop     rbx^^^retn^^^test    rdi, rdi^^^jz      short loc_409410^^^mov     rax, cs:__memalign_hook^^^test    rax, rax^^^jnz     short loc_40944A^^^call    memalign^^^mov     rdx, rax^^^test    rdx, rdx^^^mov     eax, 0Ch^^^jz      short loc_4093F5^^^mov     [rbx], rdx^^^xor     al, al^^^pop     rbx^^^retn^^^mov     rdx, [rsp+8]^^^call    rax ^^^mov     rdx, rax^^^jmp     short loc_409439^^^
_IO_padn$$$push    r14^^^push    r13^^^mov     r13d, offset blanks^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 20h^^^cmp     esi, 20h^^^jz      short loc_425F63^^^cmp     esi, 30h^^^mov     r13d, offset zeroes^^^jz      short loc_425F63^^^mov     [rsp+48h+var_3C], esi^^^lea     r13, [rsp+48h+var_38]^^^movd    xmm1, [rsp+48h+var_3C]^^^pshufd  xmm0, xmm1, 0^^^movdqa  xmm1, xmm0^^^punpckhwd xmm1, xmm0^^^punpcklwd xmm0, xmm0^^^movdqa  xmm2, xmm0^^^punpcklwd xmm0, xmm1^^^punpckhwd xmm2, xmm1^^^punpcklwd xmm0, xmm2^^^movdqa  xmm2, xmm0^^^punpckhbw xmm2, xmm0^^^punpcklbw xmm0, xmm0^^^movdqa  xmm1, xmm0^^^punpcklbw xmm0, xmm2^^^punpckhbw xmm1, xmm2^^^movdqa  xmm2, xmm0^^^punpcklbw xmm0, xmm1^^^punpckhbw xmm2, xmm1^^^punpcklbw xmm0, xmm2^^^movdqa  [rsp+48h+var_38], xmm0^^^cmp     edx, 0Fh^^^jle     short loc_425FB9^^^lea     ebx, [rdx-10h]^^^lea     r14d, [rdx-20h]^^^xor     ebp, ebp^^^mov     eax, ebx^^^and     eax, 0FFFFFFF0h^^^sub     r14d, eax^^^jmp     short loc_425F8A^^^mov     edx, ebx^^^sub     ebx, 10h^^^cmp     ebx, r14d^^^jz      short loc_425FC0^^^mov     rax, [r12+0D8h]^^^mov     edx, 10h^^^mov     rsi, r13^^^mov     rdi, r12^^^call    qword ptr [rax+38h]^^^add     rbp, rax^^^cmp     rax, 10h^^^jz      short loc_425F80^^^add     rsp, 20h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^xor     ebp, ebp^^^nop     dword ptr [rax+rax+00h]^^^test    edx, edx^^^jle     short loc_425FA9^^^mov     rax, [r12+0D8h]^^^mov     rsi, r13^^^mov     rdi, r12^^^movsxd  rdx, edx^^^call    qword ptr [rax+38h]^^^add     rsp, 20h^^^add     rbp, rax^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
sub_40F0FD$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 1^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
tdestroy_recurse$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 18h^^^mov     rbp, [rdi+8]^^^test    rbp, rbp^^^jz      loc_44DC0A^^^mov     r13, [rbp+8]^^^test    r13, r13^^^jz      loc_44DAD5^^^mov     r14, [r13+8]^^^test    r14, r14^^^jz      short loc_44DA41^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44D9FC^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44D9DE^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44D9EF^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DA34^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DA16^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DA27^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     r14, [r13+10h]^^^test    r14, r14^^^jz      short loc_44DAC7^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DA82^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DA64^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DA75^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DABA^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DA9C^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DAAD^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     rdi, [r13+0]^^^call    rbx^^^mov     rdi, r13^^^call    free^^^mov     r13, [rbp+10h]^^^test    r13, r13^^^jz      loc_44DBFC^^^mov     r14, [r13+8]^^^test    r14, r14^^^jz      short loc_44DB68^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DB23^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DB05^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DB16^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DB5B^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DB3D^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DB4E^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     r14, [r13+10h]^^^test    r14, r14^^^jz      short loc_44DBEE^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DBA9^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DB8B^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DB9C^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DBE1^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DBC3^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DBD4^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     rdi, [r13+0]^^^call    rbx^^^mov     rdi, r13^^^call    free^^^mov     rdi, [rbp+0]^^^call    rbx^^^mov     rdi, rbp^^^call    free^^^mov     rbp, [r12+10h]^^^test    rbp, rbp^^^jz      loc_44DF06^^^mov     r13, [rbp+8]^^^test    r13, r13^^^jz      loc_44DD3F^^^mov     r14, [r13+8]^^^test    r14, r14^^^jz      short loc_44DCAB^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DC66^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DC48^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DC59^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DC9E^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DC80^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DC91^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     r14, [r13+10h]^^^test    r14, r14^^^jz      short loc_44DD31^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DCEC^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DCCE^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DCDF^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DD24^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DD06^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DD17^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     rdi, [r13+0]^^^call    rbx^^^mov     rdi, r13^^^call    free^^^mov     r13, [rbp+10h]^^^test    r13, r13^^^jz      loc_44DEF8^^^mov     r14, [r13+8]^^^test    r14, r14^^^jz      short loc_44DDD2^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DD8D^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DD6F^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DD80^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      short loc_44DDC5^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DDA7^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DDB8^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     r14, [r13+10h]^^^test    r14, r14^^^jz      loc_44DEEA^^^mov     r15, [r14+8]^^^test    r15, r15^^^jz      short loc_44DE17^^^mov     rdi, [r15+8]^^^test    rdi, rdi^^^jz      short loc_44DDF9^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15+10h]^^^test    rdi, rdi^^^jz      short loc_44DE0A^^^mov     rsi, rbx^^^call    tdestroy_recurse^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     r15, [r14+10h]^^^test    r15, r15^^^jz      loc_44DEDD^^^mov     rax, [r15+8]^^^test    rax, rax^^^jz      short loc_44DE7A^^^mov     rdi, [rax+8]^^^test    rdi, rdi^^^jz      short loc_44DE48^^^mov     rsi, rbx^^^mov     [rsp+48h+var_40], rax^^^call    tdestroy_recurse^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, [rax+10h]^^^test    rdi, rdi^^^jz      short loc_44DE63^^^mov     rsi, rbx^^^mov     [rsp+48h+var_40], rax^^^call    tdestroy_recurse^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, [rax]^^^mov     [rsp+48h+var_40], rax^^^call    rbx^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, rax^^^call    free^^^mov     rax, [r15+10h]^^^test    rax, rax^^^jz      short loc_44DED0^^^mov     rdi, [rax+8]^^^test    rdi, rdi^^^jz      short loc_44DE9E^^^mov     rsi, rbx^^^mov     [rsp+48h+var_40], rax^^^call    tdestroy_recurse^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, [rax+10h]^^^test    rdi, rdi^^^jz      short loc_44DEB9^^^mov     rsi, rbx^^^mov     [rsp+48h+var_40], rax^^^call    tdestroy_recurse^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, [rax]^^^mov     [rsp+48h+var_40], rax^^^call    rbx^^^mov     rax, [rsp+48h+var_40]^^^mov     rdi, rax^^^call    free^^^mov     rdi, [r15]^^^call    rbx^^^mov     rdi, r15^^^call    free^^^mov     rdi, [r14]^^^call    rbx^^^mov     rdi, r14^^^call    free^^^mov     rdi, [r13+0]^^^call    rbx^^^mov     rdi, r13^^^call    free^^^mov     rdi, [rbp+0]^^^call    rbx^^^mov     rdi, rbp^^^call    free^^^mov     rdi, [r12]^^^call    rbx^^^add     rsp, 18h^^^mov     rdi, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     free^^^
vdprintf$$$push    r12             ^^^mov     r12d, edi^^^mov     r8d, offset _IO_wfile_jumps^^^push    rbp^^^mov     rbp, rdx^^^xor     edx, edx^^^push    rbx^^^mov     rbx, rsi^^^mov     esi, 8000h^^^sub     rsp, 230h^^^lea     rdi, [rsp+248h+var_F8]^^^mov     rcx, rsp^^^mov     [rsp+248h+var_70], 0^^^call    _IO_no_init^^^lea     rdi, [rsp+248h+var_F8]^^^mov     [rsp+248h+var_20], offset _IO_file_jumps^^^call    _IO_new_file_init^^^lea     rdi, [rsp+248h+var_F8]^^^mov     esi, r12d^^^call    _IO_new_file_attach^^^test    rax, rax^^^jz      loc_426700^^^mov     eax, [rsp+248h+var_F8]^^^lea     rdi, [rsp+248h+var_F8]^^^mov     rsi, rbx^^^mov     rdx, rbp^^^and     eax, 0FFFFEFB3h^^^or      eax, 44h^^^mov     [rsp+248h+var_F8], eax^^^call    vfprintf^^^cmp     eax, 0FFFFFFFFh^^^mov     ebx, eax^^^jz      short loc_4266AE^^^mov     eax, [rsp+248h+var_38]^^^test    eax, eax^^^jle     short loc_4266D8^^^mov     rax, [rsp+248h+var_58]^^^lea     rdi, [rsp+248h+var_F8]^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^test    al, al^^^mov     eax, 0FFFFFFFFh^^^cmovnz  ebx, eax^^^mov     rax, [rsp+248h+var_20]^^^xor     esi, esi^^^lea     rdi, [rsp+248h+var_F8]^^^call    qword ptr [rax+10h]^^^add     rsp, 230h^^^mov     eax, ebx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     rsi, [rsp+248h+var_D8]^^^mov     rdx, [rsp+248h+var_D0]^^^lea     rdi, [rsp+248h+var_F8]^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^jmp     short loc_4266A4^^^lea     rdi, [rsp+248h+var_F8]^^^mov     ebx, 0FFFFFFFFh^^^call    _IO_un_link^^^jmp     short loc_4266C3^^^
__wunderflow$$$push    rbx^^^cmp     dword ptr [rdi+0C0h], 0^^^mov     rbx, rdi^^^jl      short loc_427400^^^jz      short loc_427410^^^mov     eax, [rbx]^^^test    ah, 8^^^jnz     loc_42744C^^^mov     rax, [rbx+0A0h]^^^mov     rcx, [rax]^^^mov     rdx, [rax+8]^^^cmp     rcx, rdx^^^jb      loc_4274E0^^^mov     ecx, [rbx]^^^test    ch, 1^^^jnz     loc_427460^^^cmp     qword ptr [rbx+60h], 0^^^jz      loc_427498^^^lea     rsi, [rbx+0A0h]^^^lea     rdi, [rbx+60h]^^^call    save_for_wbackup_isra_0^^^mov     edx, eax^^^mov     eax, 0FFFFFFFFh^^^test    edx, edx^^^jz      loc_4274CC^^^pop     rbx^^^retn^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     esi, 1^^^call    _IO_fwide^^^mov     edx, eax^^^mov     eax, 0FFFFFFFFh^^^cmp     edx, 1^^^jnz     short loc_4273F6^^^mov     ecx, [rbx+0C0h]^^^test    ecx, ecx^^^jnz     loc_42739F^^^mov     esi, 1^^^mov     rdi, rbx^^^call    _IO_fwide^^^mov     eax, [rbx]^^^test    ah, 8^^^jz      loc_4273AA^^^mov     rdi, rbx^^^call    _IO_switch_to_wget_mode^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_4273AA^^^jmp     short loc_4273F6^^^mov     rdi, [rax+50h]^^^mov     rsi, [rax+40h]^^^and     ch, 0FEh^^^mov     [rbx], ecx^^^mov     [rax+50h], rdx^^^mov     rdx, [rax+10h]^^^cmp     rdi, rsi^^^mov     [rax+8], rdi^^^mov     [rax+10h], rsi^^^mov     [rax], rsi^^^mov     [rax+40h], rdx^^^mov     rdx, rdi^^^jbe     loc_4273CC^^^mov     eax, [rsi]^^^pop     rbx^^^retn^^^cmp     qword ptr [rbx+48h], 0^^^jz      short loc_4274CC^^^test    ch, 1^^^jnz     short loc_4274E8^^^mov     rdi, [rax+40h]^^^call    free^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+40h], 0^^^mov     qword ptr [rax+50h], 0^^^mov     qword ptr [rax+48h], 0^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+20h]^^^jmp     rax^^^mov     eax, [rcx]^^^pop     rbx^^^retn^^^and     ch, 0FEh^^^mov     rdi, [rax+10h]^^^mov     [rbx], ecx^^^mov     rcx, [rax+50h]^^^mov     [rax+50h], rdx^^^mov     rdx, [rax+40h]^^^mov     [rax+40h], rdi^^^mov     [rax+8], rcx^^^mov     [rax+10h], rdx^^^mov     [rax], rdx^^^jmp     short loc_4274A8^^^
openaux$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, [rdi]^^^mov     edx, 1^^^mov     ecx, [rbx+8]^^^mov     r8d, [rbx+0Ch]^^^movzx   eax, byte ptr [rdi+314h]^^^mov     r9, [rdi+30h]^^^and     eax, 3^^^movzx   esi, al^^^test    al, al^^^cmovnz  edx, esi^^^mov     rsi, [rbx+18h]^^^call    _dl_map_object^^^mov     [rbx+20h], rax^^^pop     rbx^^^retn^^^
print_search_path$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^mov     r14d, 1^^^push    r13^^^push    r12^^^mov     r12, rdi^^^mov     edi, offset aSearchPath^^^push    rbx^^^sub     rsp, 28h^^^mov     rax, cs:max_capstrlen^^^add     rax, cs:max_dirnamelen^^^mov     [rbp+var_40], rsi^^^mov     [rbp+var_48], rdx^^^add     rax, 1Eh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^xor     eax, eax^^^lea     r13, [rsp+50h+var_48+7]^^^call    _dl_debug_printf^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+1]^^^mov     [rbp+var_38], rax^^^jmp     loc_400AFF^^^mov     rdx, [rax+20h]^^^mov     rsi, [rax+18h]^^^mov     rdi, r13^^^xor     ebx, ebx^^^call    mempcpy^^^mov     r15, rax^^^jmp     short loc_400AF2^^^mov     rax, [r12]^^^cmp     dword ptr [rax+rbx*4+28h], 1^^^jz      short loc_400AEF^^^mov     rax, rbx^^^mov     rdi, r15^^^shl     rax, 4^^^add     rax, cs:capstr^^^mov     rdx, [rax+8]^^^mov     rsi, [rax]^^^call    mempcpy^^^cmp     r13, rax^^^jz      short loc_400AC8^^^cmp     rax, [rbp+var_38]^^^jnz     short loc_400ACD^^^cmp     byte ptr [r13+0], 2Fh^^^jnz     short loc_400ACD^^^mov     byte ptr [rax], 0^^^jmp     short loc_400AD1^^^mov     byte ptr [rax-1], 0^^^test    r14d, r14d^^^mov     eax, offset aS_2^^^mov     edi, (offset aSSSS+8)^^^cmovz   rdi, rax^^^mov     rsi, r13^^^xor     eax, eax^^^xor     r14d, r14d^^^call    _dl_debug_printf_c^^^inc     rbx^^^cmp     rbx, cs:ncapstr^^^jb      short loc_400A8E^^^add     r12, 8^^^mov     rax, [r12]^^^test    rax, rax^^^jz      short loc_400B16^^^mov     rdx, [rbp+var_40]^^^cmp     [rax+8], rdx^^^jz      loc_400A77^^^cmp     [rbp+var_48], 0^^^jz      short loc_400B4A^^^mov     rdx, [rbp+var_48]^^^cmp     byte ptr [rdx], 0^^^jnz     short loc_400B34^^^mov     rax, cs:_dl_argv^^^mov     rax, [rax]^^^mov     [rbp+var_48], rax^^^mov     rdx, [rbp+var_48]^^^mov     rsi, [rbp+var_40]^^^mov     edi, offset aSFromFileS^^^xor     eax, eax^^^call    _dl_debug_printf_c^^^jmp     short loc_400B5A^^^mov     rsi, [rbp+var_40]^^^mov     edi, offset aS  ^^^xor     eax, eax^^^call    _dl_debug_printf_c^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
fcntl$$$push    rbp             ^^^mov     ebp, edi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 78h^^^cmp     esi, 7^^^lea     rax, [rsp+88h+arg_0]^^^mov     [rsp+88h+var_38], rdx^^^mov     [rsp+88h+var_78], 18h^^^mov     [rsp+88h+var_70], rax^^^lea     rax, [rsp+88h+var_48]^^^mov     [rsp+88h+var_68], rax^^^jnz     short loc_40F2B0^^^mov     ecx, cs:__libc_multiple_threads^^^test    ecx, ecx^^^jz      short loc_40F2B0^^^call    __libc_enable_asynccancel^^^mov     rdx, rbx^^^mov     r8d, eax^^^mov     esi, 7^^^movsxd  rdi, ebp^^^mov     eax, 48h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      loc_40F36B^^^mov     edi, r8d^^^mov     [rsp+88h+var_80], eax^^^call    __libc_disable_asynccancel^^^mov     eax, [rsp+88h+var_80]^^^add     rsp, 78h^^^pop     rbx^^^pop     rbp^^^retn^^^cmp     esi, 9^^^jz      short loc_40F2E0^^^mov     rdx, rbx^^^movsxd  rsi, esi^^^movsxd  rdi, ebp^^^mov     eax, 48h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^jbe     short loc_40F2A4^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_40F2A4^^^mov     edx, cs:miss_F_GETOWN_EX^^^test    edx, edx^^^jnz     short loc_40F2B5^^^movsxd  r9, ebp^^^mov     r8d, 48h^^^lea     rdx, [rsp+88h+var_58]^^^mov     esi, 10h^^^mov     rdi, r9^^^mov     eax, r8d^^^syscall^^^cmp     eax, 0FFFFF000h^^^jbe     short loc_40F340^^^cmp     eax, 0FFFFFFEAh^^^jnz     short loc_40F355^^^mov     rdx, rbx^^^mov     esi, 9^^^mov     rdi, r9^^^mov     eax, r8d^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_40F380^^^mov     cs:miss_F_GETOWN_EX, 1^^^jmp     loc_40F2A4^^^mov     eax, [rsp+88h+var_54]^^^mov     edx, eax^^^neg     edx^^^cmp     [rsp+88h+var_58], 2^^^cmovz   eax, edx^^^jmp     loc_40F2A4^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_40F2A4^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_40F294^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_40F329^^^
sub_472A8B$$$mov     edi, [rbp-10CCh]^^^lea     rsi, [rbp-10C0h]^^^mov     edx, 0FA0h^^^call    strerror_r^^^mov     dword ptr [rbp-1138h], 0^^^mov     r8, rax^^^
_L_lock_3335$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42CD42^^^
sub_4736D8$$$mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      short loc_473735^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     short loc_473735^^^mov     dword ptr [rax], 25h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_47372C^^^add     r14d, 1^^^jmp     loc_46F40A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4736FC^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^
open_path.isra.5$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 0F8h^^^mov     rax, [rcx]^^^mov     [rbp+var_D8], rdi^^^mov     [rbp+var_D0], rsi^^^mov     [rbp+var_EC], edx^^^mov     [rbp+var_108], rcx^^^mov     [rbp+var_F8], r8^^^test    rax, rax^^^mov     [rbp+var_E0], r9^^^mov     [rbp+var_E8], rax^^^jz      loc_450481^^^mov     rax, rsi^^^add     rax, cs:max_capstrlen^^^mov     rdx, rsi^^^add     rax, cs:max_dirnamelen^^^not     rdx^^^mov     [rbp+var_F0], 0^^^mov     [rbp+var_110], 0^^^mov     [rbp+var_100], rdx^^^add     rax, 1Eh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^mov     rax, [rbp+var_E8]^^^lea     r14, [rsp+120h+var_111]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^xchg    ax, ax^^^test    byte ptr cs:_dl_debug_mask, 1^^^mov     r12, [rax]^^^jnz     loc_45056D^^^mov     rdx, [r12+20h]^^^mov     rsi, [r12+18h]^^^mov     rdi, r14^^^xor     r15d, r15d^^^mov     ebx, 1^^^call    mempcpy^^^mov     rdx, cs:ncapstr^^^mov     [rbp+var_C8], rax^^^test    rdx, rdx^^^jnz     short loc_450310^^^jmp     loc_4504F0^^^cmp     ecx, 0FFFFFFFFh^^^jz      loc_4503A8^^^mov     dword ptr [r12+rbx*4+24h], 2^^^mov     r15d, 1^^^mov     r11d, [rbp+var_EC]^^^test    r11d, r11d^^^jnz     loc_45050C^^^cmp     ecx, 0FFFFFFFFh^^^jnz     loc_4504A0^^^mov     rdx, cs:ncapstr^^^cmp     rbx, rdx^^^lea     rax, [rbx+1]^^^jnb     loc_450438^^^mov     rbx, rax^^^cmp     dword ptr [r12+rbx*4+24h], 1^^^jz      short loc_450300^^^mov     rax, rbx^^^mov     rdi, [rbp+var_C8]^^^shl     rax, 4^^^sub     rax, 10h^^^add     rax, cs:capstr^^^mov     rdx, [rax+8]^^^mov     rsi, [rax]^^^call    mempcpy^^^mov     rdx, [rbp+var_D0]^^^mov     rsi, [rbp+var_D8]^^^mov     rdi, rax^^^call    mempcpy^^^mov     r13, rax^^^sub     r13, r14^^^test    byte ptr cs:_dl_debug_mask, 1^^^jnz     loc_4504F8^^^mov     rdx, [rbp+arg_8]^^^mov     rsi, [rbp+var_E0]^^^xor     ecx, ecx^^^mov     rdi, r14^^^call    open_verify_isra_4^^^mov     ecx, eax^^^mov     eax, [r12+rbx*4+24h]^^^test    eax, eax^^^jz      loc_4502C8^^^cmp     eax, 1^^^setnz   al^^^movzx   eax, al^^^or      r15d, eax^^^cmp     ecx, 0FFFFFFFFh^^^jnz     loc_4502E0^^^jmp     loc_4502F9^^^cmp     [rbp+arg_0], 0^^^jz      short loc_4503D4^^^mov     rdx, [rbp+arg_0]^^^mov     rax, [rdx+30h]^^^lea     rax, [rax+rax*8]^^^shl     rax, 4^^^mov     rdx, ds:_dl_ns[rax]^^^mov     eax, 1^^^test    byte ptr [rdx+315h], 8^^^jnz     short loc_45041D^^^mov     rax, [rbp+var_100]^^^add     r13, r14^^^lea     rdx, [rbp+var_C0]^^^mov     rsi, r14^^^mov     edi, 1^^^mov     byte ptr [r13+rax+0], 0^^^call    _xstat^^^test    eax, eax^^^jnz     short loc_450412^^^mov     eax, [rbp+var_A8]^^^and     eax, 0F000h^^^cmp     eax, 4000h^^^jz      loc_4504DD^^^mov     dword ptr [r12+rbx*4+24h], 1^^^xor     eax, eax^^^mov     rdx, cs:ncapstr^^^or      r15d, eax^^^lea     rax, [rbx+1]^^^cmp     rbx, rdx^^^jb      loc_45030D^^^nop     dword ptr [rax+00h]^^^test    r15d, r15d^^^jz      short loc_450451^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^cmp     eax, 2^^^jz      short loc_450451^^^cmp     eax, 0Dh^^^jnz     short loc_450481^^^add     [rbp+var_E8], 8^^^or      [rbp+var_F0], r15d^^^mov     rax, [rbp+var_E8]^^^cmp     qword ptr [rax], 0^^^jnz     loc_450280^^^mov     r9d, [rbp+var_F0]^^^test    r9d, r9d^^^jz      loc_45059B^^^mov     ecx, 0FFFFFFFFh^^^lea     rsp, [rbp-28h]^^^mov     eax, ecx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rdi, r13^^^mov     [rbp+var_118], ecx^^^call    malloc^^^mov     rdx, [rbp+var_F8]^^^test    rax, rax^^^mov     ecx, [rbp+var_118]^^^mov     [rdx], rax^^^jz      loc_4505DC^^^mov     rdx, r13^^^mov     rsi, r14^^^mov     rdi, rax^^^call    memcpy^^^mov     ecx, [rbp+var_118]^^^jmp     short loc_450486^^^mov     dword ptr [r12+rbx*4+24h], 2^^^mov     eax, 1^^^jmp     loc_45041D^^^xor     r15d, r15d^^^jmp     loc_450451^^^mov     rsi, r14^^^mov     edi, offset aTryingFileS^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_450366^^^mov     r10d, cs:__libc_enable_secure^^^test    r10d, r10d^^^jz      loc_4502F0^^^lea     rdx, [rbp+var_C0]^^^mov     esi, ecx^^^mov     edi, 1^^^mov     [rbp+var_118], ecx^^^call    _fxstat^^^test    eax, eax^^^mov     ecx, [rbp+var_118]^^^jnz     short loc_45054C^^^test    byte ptr [rbp+var_A8+1], 8^^^jnz     loc_4502F0^^^mov     edi, ecx^^^call    close^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rdx, cs:ncapstr^^^mov     dword ptr fs:[rax], 2^^^jmp     loc_450300^^^mov     rbx, [r12+8]^^^cmp     rbx, [rbp+var_110]^^^jz      loc_450290^^^mov     rdx, [r12+10h]^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    print_search_path^^^mov     [rbp+var_110], rbx^^^jmp     loc_450290^^^mov     rdx, [rbp+var_108]^^^mov     r8d, [rdx+8]^^^test    r8d, r8d^^^jz      short loc_4505B3^^^mov     rdi, [rdx]^^^call    free^^^cmp     [rbp+var_108], offset rtld_search_dirs^^^mov     ecx, 0FFFFFFFFh^^^jz      loc_450486^^^mov     rax, [rbp+var_108]^^^mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_450486^^^mov     edi, ecx^^^call    close^^^mov     ecx, 0FFFFFFFFh^^^jmp     loc_450486^^^
memalign$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_10], r12^^^mov     rbx, rdi^^^mov     [rsp+var_18], rbp^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^mov     rax, cs:__memalign_hook^^^mov     r12, rsi^^^test    rax, rax^^^jnz     loc_4083A4^^^cmp     rdi, 10h^^^jbe     loc_408220^^^cmp     rdi, 1Fh^^^jbe     loc_408208^^^mov     rax, 8000000000000000h^^^cmp     rdi, rax^^^ja      loc_4082D8^^^mov     rax, rdi^^^not     rax^^^sub     rax, 20h^^^cmp     r12, rax^^^ja      loc_4082F0^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rbp, fs:[rax]^^^test    rbp, rbp^^^jz      loc_408310^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_408189^^^lock cmpxchg [rbp+0], esi^^^jnz     _L_lock_11872^^^jmp     short loc_408193^^^cmpxchg [rbp+0], esi^^^jnz     _L_lock_11872^^^mov     rdx, r12^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4081B9^^^lock dec dword ptr [rbp+0]^^^jnz     _L_unlock_11890^^^jmp     short loc_4081C2^^^dec     dword ptr [rbp+0]^^^jnz     _L_unlock_11890^^^test    r13, r13^^^jz      loc_408250^^^mov     rax, [r13-8]^^^test    al, 2^^^jnz     short loc_4081E5^^^test    al, 4^^^mov     edx, offset main_arena^^^jnz     short loc_408240^^^cmp     rdx, rbp^^^jnz     loc_4083C3^^^mov     rax, r13^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFBFh^^^mov     ebx, 20h^^^jmp     loc_40814F^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     rdi, rsi^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     malloc^^^lea     rax, [r13-10h]^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdx, [rax]^^^jmp     short loc_4081DC^^^cmp     rbp, offset main_arena^^^jz      loc_408348^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40827D^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_11979^^^jmp     short loc_40828A^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_11979^^^mov     edi, offset main_arena^^^mov     rdx, r12^^^mov     rsi, rbx^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4082B5^^^lock dec cs:main_arena^^^jnz     _L_unlock_11989^^^jmp     short loc_4082C1^^^dec     cs:main_arena^^^jnz     _L_unlock_11989^^^mov     ebp, offset main_arena^^^test    r13, r13^^^jz      loc_4081E5^^^jmp     loc_4081CB^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r13d, r13d^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_4081E5^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r13d, r13d^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_4081E5^^^call    get_free_list^^^test    rax, rax^^^mov     rbp, rax^^^jnz     loc_408193^^^lea     rdi, [rbx+r12+20h]^^^xor     esi, esi^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbp, rax^^^jnz     loc_408193^^^xor     r13d, r13d^^^jmp     loc_4081E5^^^call    get_free_list^^^test    rax, rax^^^mov     rbp, rax^^^jz      short loc_408389^^^mov     rdx, r12^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    _int_memalign^^^mov     r13, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40837B^^^lock dec dword ptr [rbp+0]^^^jnz     _L_unlock_12106^^^jmp     short loc_408384^^^dec     dword ptr [rbp+0]^^^jnz     _L_unlock_12106^^^jmp     loc_4082C6^^^mov     esi, offset main_arena^^^mov     rdi, r12^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_4081E5^^^jmp     short loc_408355^^^mov     rdx, [rsp+28h]^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     rax^^^mov     ecx, offset __func___12469^^^mov     edx, 0C46h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPMchunkptrChar^^^call    __malloc_assert^^^
critical_factorization$$$push    r12^^^mov     ecx, 1^^^mov     r12, rdx^^^xor     r8d, r8d^^^mov     r10, 0FFFFFFFFFFFFFFFFh^^^push    rbp^^^mov     ebp, 1^^^push    rbx^^^nop     dword ptr [rax+rax+00h]^^^lea     rax, [rcx+r8]^^^cmp     rax, rsi^^^jnb     short loc_445472^^^lea     r9, [rdi+r10]^^^movzx   edx, byte ptr [r9+rcx]^^^cmp     [rdi+rax], dl^^^jnb     loc_4454E0^^^mov     r8, rax^^^mov     ecx, 1^^^mov     rbp, rax^^^lea     rax, [rcx+r8]^^^sub     rbp, r10^^^cmp     rax, rsi^^^jb      short loc_445449^^^mov     [r12], rbp^^^mov     ebx, 1^^^mov     r8d, 1^^^xor     r9d, r9d^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^nop     dword ptr [rax+rax+00h]^^^lea     rcx, [r8+r9]^^^cmp     rsi, rcx^^^jbe     short loc_4454BF^^^lea     r11, [rdi+rax]^^^movzx   edx, byte ptr [r11+r8]^^^cmp     [rdi+rcx], dl^^^jbe     short loc_445500^^^mov     r9, rcx^^^mov     r8d, 1^^^mov     rbx, rcx^^^lea     rcx, [r8+r9]^^^sub     rbx, rax^^^cmp     rsi, rcx^^^ja      short loc_445499^^^add     rax, 1^^^add     r10, 1^^^cmp     rax, r10^^^jnb     short loc_4454D2^^^mov     rbx, rbp^^^mov     rax, r10^^^mov     [r12], rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^jz      short loc_445520^^^mov     r10, r8^^^mov     ebp, 1^^^add     r8, 1^^^mov     ecx, 1^^^jmp     loc_445440^^^jz      short loc_445530^^^mov     rax, r9^^^mov     ebx, 1^^^add     r9, 1^^^mov     r8d, 1^^^jmp     loc_445490^^^cmp     rcx, rbp^^^jz      short loc_445540^^^add     rcx, 1^^^jmp     loc_445440^^^cmp     r8, rbx^^^jz      short loc_445550^^^add     r8, 1^^^jmp     loc_445490^^^mov     rbp, rcx^^^mov     r8, rax^^^mov     ecx, 1^^^jmp     loc_445440^^^mov     rbx, r8^^^mov     r9, rcx^^^mov     r8d, 1^^^jmp     loc_445490^^^
_L_lock_12263$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40849E^^^
timelocal$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 128h^^^call    tzset^^^mov     eax, [rbx]^^^mov     ecx, [rbx+4]^^^xor     esi, esi^^^mov     edx, [rbx+8]^^^movsxd  rbp, dword ptr [rbx+14h]^^^mov     r8d, [rbx+0Ch]^^^mov     [rsp+158h+var_100], eax^^^mov     eax, [rbx+20h]^^^mov     [rsp+158h+var_F0], ecx^^^mov     ecx, [rbx+10h]^^^mov     [rsp+158h+var_EC], edx^^^test    eax, eax^^^setnz   sil^^^sar     eax, 1Fh^^^or      esi, eax^^^mov     eax, ecx^^^mov     [rsp+158h+var_104], esi^^^mov     esi, 2AAAAAABh^^^imul    esi^^^mov     eax, ecx^^^sar     eax, 1Fh^^^mov     esi, edx^^^sar     esi, 1^^^sub     esi, eax^^^mov     eax, esi^^^mov     esi, ecx^^^lea     edx, [rax+rax*2]^^^shl     edx, 2^^^sub     esi, edx^^^mov     edi, esi^^^shr     edi, 1Fh^^^sub     eax, edi^^^cdqe^^^add     rbp, rax^^^xor     eax, eax^^^mov     rcx, rbp^^^and     ecx, 3^^^jnz     short loc_47891D^^^mov     rax, rbp^^^mov     rdx, 0A3D70A3D70A3D70Bh^^^imul    rdx^^^mov     rax, rbp^^^sar     rax, 3Fh^^^add     rdx, rbp^^^sar     rdx, 6^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^lea     r9, [rax+rax*4]^^^mov     eax, 1^^^shl     r9, 2^^^cmp     rbp, r9^^^jz      loc_4792E0^^^lea     edx, [rdi+rdi]^^^cdqe^^^movsxd  r8, r8d^^^xor     r15d, r15d^^^mov     [rsp+158h+var_FC], 0^^^add     edi, edx^^^lea     rdx, [rax+rax]^^^lea     esi, [rsi+rdi*4]^^^add     rdx, rax^^^lea     rax, [rax+rdx*4]^^^movsxd  rsi, esi^^^mov     rdx, cs:localtime_offset^^^add     rsi, rax^^^movzx   eax, ds:__mon_yday[rsi+rsi]^^^mov     [rsp+158h+var_F8], rdx^^^sub     eax, 1^^^cdqe^^^add     rax, r8^^^mov     [rsp+158h+var_130], rax^^^mov     eax, [rsp+158h+var_100]^^^test    eax, eax^^^js      short loc_478985^^^cmp     [rsp+158h+var_100], 3Bh^^^mov     r15b, 3Bh^^^mov     [rsp+158h+var_FC], 3Bh^^^jle     loc_479570^^^mov     r13, rbp^^^xor     eax, eax^^^mov     r8d, 51EB851Fh^^^sar     r13, 2^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_140], r8d^^^add     r13d, 1DBh^^^test    rcx, rcx^^^setz    al^^^sub     r13d, eax^^^mov     eax, r13d^^^mov     ecx, r13d^^^imul    r8d^^^mov     eax, r13d^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^mov     r14d, edx^^^lea     eax, [rax+rax*4]^^^sub     ecx, eax^^^mov     eax, ecx^^^shr     eax, 1Fh^^^sub     r14d, eax^^^lea     rax, [rbp-46h]^^^mov     ecx, r14d^^^sar     ecx, 2^^^lea     rdx, [rax+rax*8]^^^mov     [rsp+158h+var_124], ecx^^^movsxd  rcx, [rsp+158h+var_EC]^^^lea     rax, [rax+rdx*8]^^^lea     rdx, [rax+rax*4]^^^mov     eax, r13d^^^add     rdx, [rsp+158h+var_130]^^^mov     [rsp+158h+var_120], rcx^^^movsxd  rcx, [rsp+158h+var_F0]^^^sub     eax, r14d^^^mov     [rsp+158h+var_118], rcx^^^mov     ecx, [rsp+158h+var_124]^^^lea     eax, [rcx+rax-1DDh]^^^mov     rcx, [rsp+158h+var_120]^^^cdqe^^^add     rax, rdx^^^lea     rax, [rax+rax*2]^^^lea     rax, [rcx+rax*8]^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^add     rax, [rsp+158h+var_118]^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^add     rax, r15^^^mov     [rsp+158h+var_110], rax^^^mov     eax, dword ptr [rsp+158h+var_F8]^^^neg     eax^^^cdqe^^^sub     [rsp+158h+var_110], rax^^^mov     rsi, [rsp+158h+var_110]^^^mov     [rsp+158h+var_58], rsi^^^mov     [rsp+158h+var_68], rsi^^^lea     rsi, [rsp+158h+var_E8]^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^mov     r8d, [rsp+158h+var_140]^^^jz      loc_478B6F^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^imul    r8d^^^mov     eax, esi^^^mov     r8d, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+158h+var_124]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+158h+var_118]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_478B98^^^test    r12, r12^^^js      loc_479588^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_479678^^^cmp     r12, [rsp+158h+var_110]^^^jz      loc_4792F8^^^mov     [rsp+158h+var_68], rax^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^xor     r8d, r8d^^^mov     rcx, [rsp+158h+var_58]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_58], r12^^^test    eax, eax^^^setnz   r8b^^^mov     [rsp+158h+var_138], rcx^^^mov     [rsp+158h+var_108], r8d^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^jz      loc_478CD9^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+158h+var_124]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+158h+var_118]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_478D02^^^test    r12, r12^^^js      loc_4795B0^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_479678^^^cmp     [rsp+158h+var_138], r12^^^jz      loc_479430^^^mov     [rsp+158h+var_68], rax^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^xor     r8d, r8d^^^mov     rcx, [rsp+158h+var_58]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_58], r12^^^test    eax, eax^^^setnz   r8b^^^mov     [rsp+158h+var_138], rcx^^^mov     [rsp+158h+var_108], r8d^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^jz      loc_478E43^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+158h+var_124]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+158h+var_118]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_478E6C^^^test    r12, r12^^^js      loc_4795D8^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_479678^^^cmp     [rsp+158h+var_138], r12^^^jz      loc_479470^^^mov     [rsp+158h+var_68], rax^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^xor     r8d, r8d^^^mov     rcx, [rsp+158h+var_58]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_58], r12^^^test    eax, eax^^^setnz   r8b^^^mov     [rsp+158h+var_138], rcx^^^mov     [rsp+158h+var_108], r8d^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^jz      loc_478FAD^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+158h+var_124]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+158h+var_118]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_478FD6^^^test    r12, r12^^^js      loc_479600^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_479678^^^cmp     [rsp+158h+var_138], r12^^^jz      loc_4794B0^^^mov     [rsp+158h+var_68], rax^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^xor     r8d, r8d^^^mov     rcx, [rsp+158h+var_58]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_58], r12^^^test    eax, eax^^^setnz   r8b^^^mov     [rsp+158h+var_138], rcx^^^mov     [rsp+158h+var_108], r8d^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^jz      loc_479117^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+158h+var_124]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+158h+var_118]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_479140^^^test    r12, r12^^^js      loc_479628^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_479678^^^cmp     [rsp+158h+var_138], r12^^^jz      loc_4794F0^^^mov     [rsp+158h+var_68], rax^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^xor     r8d, r8d^^^mov     rcx, [rsp+158h+var_58]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_58], r12^^^test    eax, eax^^^setnz   r8b^^^mov     [rsp+158h+var_138], rcx^^^mov     [rsp+158h+var_108], r8d^^^call    ranged_convert_constprop_3^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+158h+var_68]^^^jz      loc_479281^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^sub     r13d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+158h+var_120]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^mov     esi, edx^^^sar     edx, 2^^^lea     rdi, [rax+rax*8]^^^sub     esi, r14d^^^add     r13d, esi^^^mov     esi, [rsp+158h+var_124]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+158h+var_130]^^^sub     esi, edx^^^add     esi, r13d^^^movsxd  rdx, dword ptr [rcx+8]^^^movsxd  rsi, esi^^^sub     rax, rdi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rax, [r8+rax*8]^^^sub     rax, rdx^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^movsxd  rdx, dword ptr [rcx+4]^^^add     rax, [rsp+158h+var_118]^^^sub     rax, rdx^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^movsxd  rdx, dword ptr [rcx]^^^add     rax, r15^^^sub     rax, rdx^^^lea     rdx, [r12+rax]^^^cmp     r12, rdx^^^setle   cl^^^shr     rax, 3Fh^^^cmp     cl, al^^^jnz     short loc_4792AA^^^test    r12, r12^^^js      loc_479650^^^lea     rax, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rdx, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rdx, rax^^^cmp     r12, rdx^^^jz      loc_479678^^^cmp     r12, [rsp+158h+var_138]^^^jz      loc_479530^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^add     rsp, 128h^^^mov     rax, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^and     edx, 3^^^xor     eax, eax^^^cmp     rdx, 1^^^setz    al^^^jmp     loc_47891D^^^cmp     r12, [rsp+158h+var_58]^^^jz      loc_478BAC^^^mov     edx, dword ptr [rsp+158h+var_C8]^^^test    edx, edx^^^js      short loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      short loc_479330^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_478BAC^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rax, [rsp+158h+var_F8]^^^add     rax, r12^^^sub     rax, [rsp+158h+var_110]^^^mov     cs:localtime_offset, rax^^^mov     eax, dword ptr [rsp+158h+var_E8]^^^cmp     [rsp+158h+var_100], eax^^^jz      loc_4793DA^^^mov     r14d, [rsp+158h+var_FC]^^^xor     r13d, r13d^^^test    r14d, r14d^^^jnz     short loc_479369^^^xor     r13d, r13d^^^cmp     eax, 3Ch^^^setz    r13b^^^sub     r13d, [rsp+158h+var_FC]^^^movsxd  rbp, [rsp+158h+var_100]^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_58]^^^add     rbp, r12^^^movsxd  r14, r13d^^^add     r14, rbp^^^mov     [rsp+158h+var_58], r14^^^call    localtime_r^^^mov     ecx, [rsp+158h+var_100]^^^test    rax, rax^^^setz    al^^^cmp     rbp, r12^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^setl    dl^^^movzx   eax, al^^^shr     ecx, 1Fh^^^xor     edx, ecx^^^movzx   edx, dl^^^or      eax, edx^^^cmp     rbp, r14^^^setnle  dl^^^shr     r13d, 1Fh^^^xor     edx, r13d^^^movzx   edx, dl^^^or      eax, edx^^^jnz     loc_4792C5^^^mov     r12, [rsp+158h+var_58]^^^mov     rax, [rsp+158h+var_E8]^^^mov     [rbx], rax^^^mov     rax, [rsp+158h+var_E0]^^^mov     [rbx+8], rax^^^mov     rax, [rsp+158h+var_D8]^^^mov     [rbx+10h], rax^^^mov     rax, [rsp+158h+var_D0]^^^mov     [rbx+18h], rax^^^mov     rax, [rsp+158h+var_C8]^^^mov     [rbx+20h], rax^^^mov     rax, [rsp+158h+var_C0]^^^mov     [rbx+28h], rax^^^mov     rax, [rsp+158h+var_B8]^^^mov     [rbx+30h], rax^^^jmp     loc_4792C5^^^cmp     r12, [rsp+158h+var_58]^^^jz      loc_478D16^^^mov     edx, dword ptr [rsp+158h+var_C8]^^^test    edx, edx^^^js      loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      loc_479748^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_478D16^^^jmp     loc_479330^^^cmp     r12, [rsp+158h+var_58]^^^jz      loc_478E80^^^mov     edx, dword ptr [rsp+158h+var_C8]^^^test    edx, edx^^^js      loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      loc_479760^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_478E80^^^jmp     loc_479330^^^cmp     r12, [rsp+158h+var_58]^^^jz      loc_478FEA^^^mov     edx, dword ptr [rsp+158h+var_C8]^^^test    edx, edx^^^js      loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      loc_479780^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_478FEA^^^jmp     loc_479330^^^cmp     r12, [rsp+158h+var_58]^^^jz      loc_479154^^^mov     edx, dword ptr [rsp+158h+var_C8]^^^test    edx, edx^^^js      loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      loc_4797A0^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_479154^^^jmp     loc_479330^^^cmp     [rsp+158h+var_58], r12^^^jz      loc_4792BE^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^test    eax, eax^^^js      loc_479330^^^cmp     [rsp+158h+var_104], 0^^^jl      loc_4797C0^^^setnz   dl^^^test    eax, eax^^^setnz   al^^^cmp     dl, al^^^jz      loc_4792BE^^^jmp     loc_479330^^^mov     esi, [rsp+158h+var_100]^^^movsxd  r15, [rsp+158h+var_100]^^^mov     [rsp+158h+var_FC], esi^^^jmp     loc_478985^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_478B98^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_478D02^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_478E6C^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_478FD6^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_479140^^^lea     rax, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rdx, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rdx, rax^^^jmp     loc_4792AA^^^mov     r15d, [rsp+158h+var_104]^^^mov     eax, dword ptr [rsp+158h+var_C8]^^^test    r15d, r15d^^^js      loc_479330^^^cmp     [rsp+158h+var_104], eax^^^jz      loc_479330^^^test    eax, eax^^^mov     r13, 0FFFFFFFFFFF6D390h^^^mov     r14d, [rsp+158h+var_104]^^^jns     short loc_4796FE^^^jmp     loc_479330^^^lea     rsi, [rsp+158h+var_A8]^^^lea     rdi, [rsp+158h+var_48]^^^call    ranged_convert_constprop_3^^^cmp     r14d, [rsp+158h+var_88]^^^jz      loc_4797E0^^^mov     r12, [rsp+158h+var_68]^^^mov     rax, r12^^^sub     rax, r13^^^cmp     r12, rax^^^mov     [rsp+158h+var_48], rax^^^jle     short loc_479718^^^sub     r13, 92C70h^^^cmp     r13, 0FFFFFFFFEFF23C00h^^^jz      loc_479330^^^lea     rax, [r12+r13]^^^cmp     r12, rax^^^mov     [rsp+158h+var_48], rax^^^jle     short loc_4796D7^^^jmp     short loc_4796AC^^^lea     rsi, [rsp+158h+var_A8]^^^lea     rdi, [rsp+158h+var_48]^^^call    ranged_convert_constprop_3^^^cmp     r14d, [rsp+158h+var_88]^^^jz      loc_4797E0^^^mov     r12, [rsp+158h+var_68]^^^jmp     short loc_4796EA^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+158h+var_108], edx^^^jg      loc_478D16^^^jmp     loc_479330^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+158h+var_108], edx^^^jg      loc_478E80^^^jmp     loc_479330^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+158h+var_108], edx^^^jg      loc_478FEA^^^jmp     loc_479330^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+158h+var_108], edx^^^jg      loc_479154^^^jmp     loc_479330^^^test    eax, eax^^^setnz   al^^^movzx   eax, al^^^cmp     eax, [rsp+158h+var_108]^^^jl      loc_4792BE^^^jmp     loc_479330^^^mov     rsi, [rsp+158h+var_130]^^^lea     rax, [rsp+158h+var_A8]^^^mov     r9, [rsp+158h+var_48]^^^mov     r8d, [rsp+158h+var_FC]^^^mov     ecx, [rsp+158h+var_F0]^^^mov     rdi, rbp^^^mov     edx, [rsp+158h+var_EC]^^^mov     [rsp+158h+var_158], rax^^^call    guess_time_tm_isra_0^^^lea     rsi, [rsp+158h+var_E8]^^^lea     rdi, [rsp+158h+var_68]^^^mov     [rsp+158h+var_68], rax^^^call    ranged_convert_constprop_3^^^mov     r12, [rsp+158h+var_68]^^^jmp     loc_479330^^^
__strcpy_sse2$$$mov     rcx, rsi        ^^^and     ecx, 7^^^mov     rdx, rdi^^^jz      short loc_430216^^^neg     ecx^^^add     ecx, 8^^^mov     al, [rsi]^^^test    al, al^^^mov     [rdx], al^^^jz      loc_4302C8^^^inc     rsi^^^inc     rdx^^^dec     ecx^^^jnz     short loc_430200^^^mov     r8, 0FEFEFEFEFEFEFEFFh^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     loc_4302B0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4302B0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4302B0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4302B0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4302B0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4302B0^^^mov     [rdx], rax^^^add     rdx, 8^^^mov     rax, [rsi]^^^add     rsi, 8^^^mov     r9, rax^^^add     r9, r8^^^jnb     short loc_4302B0^^^xor     r9, rax^^^or      r9, r8^^^inc     r9^^^jnz     short loc_4302B0^^^mov     [rdx], rax^^^add     rdx, 8^^^jmp     loc_430220^^^mov     [rdx], al^^^test    al, al^^^jz      short loc_4302C8^^^inc     rdx^^^mov     [rdx], ah^^^test    ah, ah^^^jz      short loc_4302C8^^^inc     rdx^^^shr     rax, 10h^^^jmp     short loc_4302B0^^^mov     rax, rdi^^^retn^^^
frame_dummy$$$push    rbp^^^mov     eax, offset __register_frame_info^^^test    rax, rax^^^mov     rbp, rsp^^^jz      short loc_40113D^^^mov     esi, offset object_6048^^^mov     edi, offset __EH_FRAME_BEGIN__^^^call    __register_frame_info^^^cmp     cs:__JCR_LIST__, 0^^^jz      short loc_401160^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_401160^^^pop     rbp^^^mov     edi, offset __JCR_LIST__^^^jmp     rax^^^pop     rbp^^^retn^^^
__memmove_chk_ssse3_back$$$cmp     rcx, rdx^^^jb      __chk_fail^^^nop     dword ptr [rax+00000000h]^^^
sub_44CEED$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 3^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
sub_47381D$$$test    byte ptr [rbx+74h], 4^^^jz      short loc_473830^^^cmp     dword ptr [rbp-114Ch], 0^^^jz      loc_47394E^^^cmp     dword ptr [rbp-1138h], 0^^^mov     edx, [r12]^^^jz      loc_47391B^^^cmp     edx, 30h^^^jnb     loc_473908^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^movsxd  rdx, r14d^^^mov     [rax], rdx^^^jmp     loc_46F40A^^^mov     edi, offset aNInWritableSeg^^^call    __libc_fatal^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_473858^^^cmp     dword ptr [rbp-1184h], 0^^^jz      loc_4739AF^^^cmp     edx, 30h^^^jnb     short loc_47399F^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14b^^^jmp     loc_46F40A^^^mov     rdi, r13^^^call    wcslen^^^lea     rsi, ds:4[rax*4]^^^mov     rdi, r13^^^call    __readonly_area^^^test    eax, eax^^^mov     [rbp-114Ch], eax^^^jns     loc_473830^^^jmp     loc_47324F^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_47393B^^^cmp     dword ptr [rbp-1154h], 0^^^jnz     short loc_4739D6^^^cmp     edx, 30h^^^jnb     short loc_4739F5^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14d^^^jmp     loc_46F40A^^^cmp     edx, 30h^^^jnb     short loc_473A05^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^mov     [rax], r14w^^^jmp     loc_46F40A^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4739CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4739E9^^^
__gconv_transform_internal_ucs2$$$push    r15^^^mov     rax, rsi^^^add     rax, 38h^^^push    r14^^^mov     r14, rdx^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 0B8h^^^mov     ebx, [rsi+10h]^^^mov     [rsp+0E8h+var_80], rdi^^^add     rdi, 68h^^^mov     [rsp+0E8h+var_C0], rsi^^^mov     [rsp+0E8h+var_A8], r8^^^mov     [rsp+0E8h+var_A0], r9^^^test    bl, 1^^^mov     r12d, [rsp+0E8h+arg_0]^^^mov     [rsp+0E8h+var_98], rdi^^^mov     [rsp+0E8h+var_90], rax^^^mov     [rsp+0E8h+var_B0], 0^^^jnz     short loc_45E24D^^^mov     rdi, [rsp+0E8h+var_80]^^^mov     rdi, [rdi+90h]^^^mov     [rsp+0E8h+var_B0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^cmp     qword ptr [rdi+68h], 0^^^jz      short loc_45E24D^^^mov     rax, [rsp+0E8h+var_B0]^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0E8h+var_B0], rax^^^test    r12d, r12d^^^jnz     loc_45E799^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     loc_45E7FF^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     r15, [rax]^^^mov     rdi, rax^^^cmp     [rsp+0E8h+var_A0], 0^^^mov     [rsp+0E8h+var_88], 0^^^lea     rax, [rsp+0E8h+var_78]^^^mov     r12d, [rsp+0E8h+arg_8]^^^cmovz   rax, [rsp+0E8h+var_88]^^^mov     r13, [rdi+8]^^^mov     [rsp+0E8h+var_78], 0^^^test    r12d, r12d^^^mov     [rsp+0E8h+var_88], rax^^^jnz     loc_45E5B8^^^mov     rax, [r14]^^^mov     [rsp+0E8h+var_C8], rax^^^mov     rdi, rax^^^nop     dword ptr [rax]^^^mov     r12d, ebx^^^mov     [rsp+0E8h+var_58], rdi^^^mov     [rsp+0E8h+var_68], r15^^^and     r12d, 2^^^mov     rax, rdi^^^mov     rbx, r15^^^mov     dword ptr [rsp+0E8h+var_B8], 4^^^jmp     short loc_45E33C^^^lea     rsi, [rax+4]^^^cmp     rbp, rsi^^^jb      loc_45E5AB^^^lea     rcx, [rbx+2]^^^cmp     r13, rcx^^^jb      loc_45E59E^^^mov     edx, [rax]^^^cmp     edx, 0FFFFh^^^ja      loc_45E500^^^lea     edi, [rdx-0D800h]^^^cmp     edi, 7FFh^^^jbe     loc_45E4CB^^^mov     rax, [rsp+0E8h+var_58]^^^mov     [rbx], dx^^^mov     rbx, rcx^^^mov     [rsp+0E8h+var_68], rcx^^^add     rax, 4^^^mov     [rsp+0E8h+var_58], rax^^^cmp     rbp, rax^^^jnz     short loc_45E2E0^^^cmp     [rsp+0E8h+var_A8], 0^^^mov     [r14], rax^^^jnz     loc_45E4F3^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     r12, [rdx+30h]^^^test    r12, r12^^^jz      short loc_45E391^^^xchg    ax, ax^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45E387^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r15^^^mov     rdx, [r14]^^^mov     rsi, [rsp+0E8h+var_C8]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45E360^^^mov     rdi, [rsp+0E8h+var_C0]^^^add     dword ptr [rdi+14h], 1^^^test    byte ptr [rdi+10h], 1^^^jnz     loc_45E82A^^^cmp     r15, rbx^^^jnb     short loc_45E410^^^mov     rdi, [rsp+0E8h+var_C0]^^^mov     rax, [rdi]^^^mov     rdi, [rsp+0E8h+var_B0]^^^mov     [rsp+0E8h+var_68], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0E8h+arg_8]^^^xor     r8d, r8d^^^mov     dword ptr [rsp+0E8h+var_E8], 0^^^mov     r9, [rsp+0E8h+var_A0]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0E8h+var_68]^^^mov     rsi, [rsp+0E8h+var_90]^^^mov     rdi, [rsp+0E8h+var_98]^^^mov     dword ptr [rsp+0E8h+var_E0], eax^^^call    [rsp+0E8h+var_B0]^^^cmp     eax, 4^^^jz      short loc_45E432^^^mov     rdx, [rsp+0E8h+var_68]^^^cmp     rdx, rbx^^^jnz     loc_45E83F^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^mov     r11d, dword ptr [rsp+0E8h+var_B8]^^^test    r11d, r11d^^^jnz     short loc_45E443^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rdi, [r14]^^^mov     r15, [rdx]^^^mov     [rsp+0E8h+var_C8], rdi^^^mov     ebx, [rdx+10h]^^^jmp     loc_45E2B8^^^cmp     dword ptr [rsp+0E8h+var_B8], 5^^^jz      short loc_45E41A^^^mov     r11d, dword ptr [rsp+0E8h+var_B8]^^^test    r11d, r11d^^^jz      short loc_45E41A^^^cmp     dword ptr [rsp+0E8h+var_B8], 7^^^jnz     short loc_45E4B5^^^mov     r10d, [rsp+0E8h+arg_8]^^^test    r10d, r10d^^^jz      short loc_45E4B5^^^mov     rdx, [r14]^^^mov     rax, rbp^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45E851^^^xor     ecx, ecx^^^cmp     rbp, rdx^^^mov     rax, rdx^^^mov     r8, [rsp+0E8h+var_C0]^^^jbe     loc_45E727^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r8+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, rbp^^^mov     [r14], rax^^^jnz     short loc_45E47D^^^sub     eax, edx^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rcx, [rdx+20h]^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^mov     eax, dword ptr [rsp+0E8h+var_B8]^^^add     rsp, 0B8h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+0E8h+var_88], 0^^^jz      short loc_45E4DC^^^test    r12d, r12d^^^jnz     loc_45E706^^^cmp     [rsp+0E8h+var_A8], 0^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^mov     [r14], rax^^^jz      loc_45E350^^^mov     rax, [rsp+0E8h+var_A8]^^^mov     [rax], rbx^^^jmp     short loc_45E4B5^^^shr     edx, 7^^^cmp     edx, 1C00h^^^jz      loc_45E770^^^cmp     [rsp+0E8h+var_88], 0^^^jz      short loc_45E4DC^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     r10, [rdx+30h]^^^test    r10, r10^^^jz      loc_45E73E^^^mov     rbx, r10^^^jmp     short loc_45E53B^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jz      loc_45E72E^^^mov     rdi, [rbx]^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [rsp+0E8h+var_68]^^^mov     rdx, [rbx+18h]^^^mov     r9, rbp^^^lea     r8, [rsp+0E8h+var_58]^^^mov     rcx, [r14]^^^mov     [rsp+0E8h+var_E8], rax^^^mov     rsi, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_E0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^jz      short loc_45E52E^^^cmp     eax, 5^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^jz      loc_45E9F2^^^mov     rbx, [rsp+0E8h+var_68]^^^mov     rax, [rsp+0E8h+var_58]^^^jmp     loc_45E33C^^^mov     dword ptr [rsp+0E8h+var_B8], 5^^^jmp     loc_45E341^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^jmp     loc_45E341^^^mov     r10, [rdi+20h]^^^mov     edx, [r10]^^^test    dl, 7^^^jz      loc_45E6F9^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     loc_45E780^^^mov     rax, [r14]^^^and     edx, 7^^^mov     [rsp+0E8h+var_58], r15^^^mov     ecx, 4^^^mov     [rsp+0E8h+var_68], rax^^^jz      short loc_45E616^^^lea     r12, [rsp+0E8h+var_48]^^^xor     cl, cl^^^movzx   esi, byte ptr [r10+rcx+4]^^^mov     [r12+rcx], sil^^^add     rcx, 1^^^cmp     rcx, rdx^^^jb      short loc_45E5FB^^^mov     ecx, 4^^^sub     rcx, rdx^^^add     rcx, rax^^^cmp     rbp, rcx^^^jb      loc_45E9BC^^^lea     rcx, [r15+2]^^^mov     dword ptr [rsp+0E8h+var_B8], 5^^^cmp     r13, rcx^^^jb      loc_45E4B5^^^lea     r12, [rsp+0E8h+var_48]^^^movzx   esi, byte ptr [rax]^^^add     rax, 1^^^mov     [rsp+0E8h+var_68], rax^^^mov     [r12+rdx], sil^^^add     rdx, 1^^^cmp     rbp, rax^^^jbe     short loc_45E661^^^cmp     rdx, 3^^^jbe     short loc_45E63F^^^mov     eax, [rsp+0E8h+var_48]^^^add     rdx, r12^^^mov     [rsp+0E8h+var_68], r12^^^mov     [rsp+0E8h+var_C8], rdx^^^cmp     eax, 0FFFFh^^^ja      loc_45E8BB^^^lea     edx, [rax-0D800h]^^^cmp     edx, 7FFh^^^jbe     loc_45E883^^^mov     [r15], ax^^^mov     [rsp+0E8h+var_58], rcx^^^lea     rax, [r12+4]^^^mov     [rsp+0E8h+var_68], rax^^^lea     rax, [r12+4]^^^mov     edx, [r10]^^^sub     rax, r12^^^mov     rcx, rdx^^^and     ecx, 7^^^cmp     rax, rcx^^^jle     loc_45E86A^^^mov     rdi, [r14]^^^sub     rax, rcx^^^and     edx, 0FFFFFFF8h^^^mov     r15, [rsp+0E8h+var_58]^^^add     rax, rdi^^^mov     [rsp+0E8h+var_C8], rax^^^mov     [r14], rax^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     [r10], edx^^^mov     rdi, [rsp+0E8h+var_C8]^^^mov     ebx, [rax+10h]^^^jmp     loc_45E2B8^^^mov     rdi, [r14]^^^mov     [rsp+0E8h+var_C8], rdi^^^jmp     loc_45E2B8^^^mov     rdi, [rsp+0E8h+var_88]^^^mov     [rsp+0E8h+var_58], rsi^^^mov     rax, rsi^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^add     qword ptr [rdi], 1^^^jmp     loc_45E33C^^^xor     eax, eax^^^jmp     loc_45E49B^^^mov     rax, [rsp+0E8h+var_58]^^^mov     rbx, [rsp+0E8h+var_68]^^^test    r12d, r12d^^^jz      loc_45E4DC^^^mov     rdx, [rsp+0E8h+var_88]^^^add     rax, 4^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^mov     [rsp+0E8h+var_58], rax^^^add     qword ptr [rdx], 1^^^jmp     loc_45E33C^^^mov     [rsp+0E8h+var_58], rsi^^^mov     rax, rsi^^^jmp     loc_45E33C^^^mov     ecx, offset __PRETTY_FUNCTION___12666^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^cmp     [rsp+0E8h+var_A8], 0^^^jnz     short loc_45E811^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     rax, [rdx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rdx+10h], 1^^^mov     dword ptr [rsp+0E8h+var_B8], 0^^^jnz     loc_45E4B5^^^mov     rdi, [rsp+0E8h+var_B0]^^^call    _dl_mcount_wrapper_check^^^mov     edi, [rsp+0E8h+arg_8]^^^mov     dword ptr [rsp+0E8h+var_E8], r12d^^^xor     r8d, r8d^^^mov     r9, [rsp+0E8h+var_A0]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0E8h+var_90]^^^mov     dword ptr [rsp+0E8h+var_E0], edi^^^mov     rdi, [rsp+0E8h+var_98]^^^call    [rsp+0E8h+var_B0]^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^jmp     loc_45E4B5^^^mov     rdx, [rsp+0E8h+var_A8]^^^mov     rdi, [rsp+0E8h+var_C0]^^^mov     r15, [rdx]^^^jmp     loc_45E26D^^^mov     ecx, offset __PRETTY_FUNCTION___12666^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0E8h+var_A0]^^^mov     [rdi], rbx^^^mov     rax, [rsp+0E8h+var_78]^^^add     [rdx], rax^^^jmp     loc_45E443^^^sub     rdx, rbx^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^add     rdx, rdx^^^add     [r14], rdx^^^jmp     loc_45E410^^^mov     ecx, offset __PRETTY_FUNCTION___12666^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12623^^^mov     edx, 1C0h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInptrBytebufSt^^^call    __assert_fail^^^cmp     [rsp+0E8h+var_88], 0^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jz      loc_45E4B5^^^and     ebx, 2^^^jz      loc_45E4B5^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [r12+4]^^^mov     [rsp+0E8h+var_68], rax^^^add     qword ptr [rdi], 1^^^jmp     loc_45E6B3^^^shr     eax, 7^^^cmp     eax, 1C00h^^^jz      loc_45E6A1^^^cmp     [rsp+0E8h+var_88], 0^^^jz      loc_45EA95^^^mov     rax, [rsp+0E8h+var_C0]^^^mov     r11, [rax+30h]^^^test    r11, r11^^^jz      loc_45EA8D^^^mov     [rsp+0E8h+var_B8], r15^^^mov     r15, r13^^^mov     r13d, ebx^^^mov     rbx, r11^^^mov     rdi, [rbx]^^^mov     [rsp+0E8h+var_D0], r10^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rsp+0E8h+var_88]^^^lea     rax, [rsp+0E8h+var_58]^^^mov     rdx, [rbx+18h]^^^mov     r9, [rsp+0E8h+var_C8]^^^lea     r8, [rsp+0E8h+var_68]^^^mov     rcx, [r14]^^^mov     [rsp+0E8h+var_E8], rax^^^mov     rsi, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_E0], rdi^^^mov     rdi, [rsp+0E8h+var_80]^^^call    qword ptr [rbx]^^^cmp     eax, 6^^^mov     r10, [rsp+0E8h+var_D0]^^^jnz     loc_45EA07^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45E8F5^^^mov     ebx, r13d^^^mov     rax, [rsp+0E8h+var_68]^^^mov     r13, r15^^^mov     r15, [rsp+0E8h+var_B8]^^^and     ebx, 2^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jz      short loc_45E984^^^mov     rdx, [rsp+0E8h+var_88]^^^add     rax, 4^^^mov     [rsp+0E8h+var_68], rax^^^add     qword ptr [rdx], 1^^^cmp     rax, r12^^^jnz     loc_45E6B3^^^cmp     dword ptr [rsp+0E8h+var_B8], 7^^^jz      loc_45EA20^^^mov     ebx, dword ptr [rsp+0E8h+var_B8]^^^test    ebx, ebx^^^jnz     loc_45E4B5^^^mov     rax, [r14]^^^mov     rdx, [rsp+0E8h+var_C0]^^^mov     [rsp+0E8h+var_C8], rax^^^mov     ebx, [rdx+10h]^^^mov     rdi, rax^^^jmp     loc_45E2B8^^^cmp     rbp, rax^^^mov     [r14], rbp^^^mov     dword ptr [rsp+0E8h+var_B8], 7^^^jbe     loc_45E4B5^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^mov     [r10+rdx+4], cl^^^add     rdx, 1^^^cmp     rax, rbp^^^mov     [rsp+0E8h+var_68], rax^^^jnz     short loc_45E9D0^^^jmp     loc_45E4AD^^^mov     rax, [rsp+0E8h+var_58]^^^mov     rbx, [rsp+0E8h+var_68]^^^jmp     loc_45E341^^^mov     r13, r15^^^mov     r15, [rsp+0E8h+var_B8]^^^mov     dword ptr [rsp+0E8h+var_B8], eax^^^mov     rax, [rsp+0E8h+var_68]^^^jmp     loc_45E984^^^lea     rdx, [rax+4]^^^cmp     [rsp+0E8h+var_C8], rdx^^^jz      loc_45EAD4^^^mov     ecx, [r10]^^^mov     rdx, [rsp+0E8h+var_C8]^^^mov     rsi, rcx^^^sub     rdx, rax^^^and     ecx, 0FFFFFFF8h^^^and     esi, 7^^^mov     rdi, rdx^^^sub     rdi, rsi^^^movsxd  rsi, ecx^^^add     [r14], rdi^^^cmp     rdx, rsi^^^jle     short loc_45EABB^^^cmp     rdx, 7^^^jg      short loc_45EAA2^^^or      edx, ecx^^^cmp     [rsp+0E8h+var_C8], rax^^^mov     [r10], edx^^^jbe     loc_45E4B5^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [r10+4], dl^^^add     r10, 1^^^cmp     rax, [rsp+0E8h+var_C8]^^^mov     [rsp+0E8h+var_68], rax^^^jnz     short loc_45EA6A^^^jmp     loc_45E4B5^^^mov     rax, r12^^^jmp     loc_45E962^^^mov     dword ptr [rsp+0E8h+var_B8], 6^^^jmp     loc_45E4B5^^^mov     ecx, offset __PRETTY_FUNCTION___12623^^^mov     edx, 1DDh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptr7^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12623^^^mov     edx, 1DCh^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendInptrStat^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12623^^^mov     edx, 1D2h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInendBytebuf4^^^call    __assert_fail^^^
__register_frame_table$$$push    rbx^^^mov     rbx, rdi^^^mov     edi, 30h^^^call    malloc^^^mov     rdi, rbx^^^mov     rsi, rax^^^pop     rbx^^^jmp     __register_frame_info_table^^^
do_out$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^mov     r13, r8^^^mov     [rsp+var_18], r12^^^sub     rsp, 48h^^^mov     r12, [rdi+90h]^^^mov     rax, [rsp+48h+arg_0]^^^mov     [rdi+98h], r9^^^mov     r14, rcx^^^mov     [rdi+0B8h], rsi^^^mov     [rsp+48h+var_30], rdx^^^mov     [rdi+0A0h], rax^^^cmp     qword ptr [r12], 0^^^mov     rbp, [r12+28h]^^^jz      short loc_474D15^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rcx, r14^^^lea     rdx, [rsp+48h+var_30]^^^lea     rsi, [rbx+98h]^^^mov     [rsp+48h+var_40], 0^^^mov     [rsp+48h+var_48], 0^^^lea     r9, [rsp+48h+var_38]^^^mov     rdi, r12^^^call    rbp^^^mov     rdx, [rsp+48h+var_30]^^^cmp     eax, 7^^^mov     [r13+0], rdx^^^mov     rdx, [rsp+48h+arg_8]^^^mov     rcx, [rbx+98h]^^^mov     [rdx], rcx^^^mov     edx, 2^^^ja      short loc_474D73^^^mov     eax, eax^^^mov     edx, ds:CSWTCH_15[rax*4]^^^mov     eax, edx^^^mov     rbx, [rsp+48h+var_28]^^^mov     rbp, [rsp+48h+var_20]^^^mov     r12, [rsp+48h+var_18]^^^mov     r13, [rsp+48h+var_10]^^^mov     r14, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^
getdtablesize$$$sub     rsp, 18h^^^mov     edi, 7^^^mov     rsi, rsp^^^call    getrlimit64^^^mov     edx, 100h^^^test    eax, eax^^^cmovns  edx, [rsp+18h+var_18]^^^add     rsp, 18h^^^mov     eax, edx^^^retn^^^
_Unwind_GetDataRelBase$$$mov     rax, [rdi+0B0h]^^^retn^^^
sigaction$$$lea     eax, [rdi-20h]  ^^^cmp     eax, 1^^^jbe     short loc_462D1D^^^jmp     __libc_sigaction^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^or      eax, 0FFFFFFFFh^^^retn^^^
_dl_next_tls_modid$$$sub     rsp, 8^^^cmp     cs:_dl_tls_dtv_gaps, 0^^^jnz     short loc_456124^^^mov     rdx, cs:_dl_tls_max_dtv_idx^^^lea     rax, [rdx+1]^^^mov     cs:_dl_tls_max_dtv_idx, rax^^^add     rsp, 8^^^retn^^^mov     rax, cs:_dl_tls_static_nelem^^^mov     rdx, cs:_dl_tls_max_dtv_idx^^^mov     rcx, cs:_dl_tls_dtv_slotinfo_list^^^add     rax, 1^^^cmp     rax, rdx^^^ja      short loc_4561AA^^^mov     rdi, [rcx]^^^lea     r9, [rdx+1]^^^xor     esi, esi^^^mov     r8, rax^^^sub     r8, rsi^^^cmp     r8, rdi^^^jnb     short loc_456190^^^add     r8, 1^^^shl     r8, 4^^^cmp     qword ptr [rcx+r8+8], 0^^^jz      short loc_4561A1^^^add     rax, 1^^^cmp     rax, r9^^^jbe     short loc_45614B^^^mov     ecx, offset __PRETTY_FUNCTION___11158^^^mov     edx, 4Ch^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aResult_dl_tls_^^^call    __assert_fail^^^mov     rcx, [rcx+8]^^^test    rcx, rcx^^^jz      short loc_4561A1^^^add     rsi, rdi^^^mov     rdi, [rcx]^^^jmp     short loc_45614B^^^cmp     rdx, rax^^^jnb     loc_45611F^^^lea     rcx, [rdx+1]^^^cmp     rcx, rax^^^jnz     short loc_4561BF^^^mov     cs:_dl_tls_dtv_gaps, 0^^^jmp     loc_456114^^^mov     ecx, offset __PRETTY_FUNCTION___11158^^^mov     edx, 5Ah^^^mov     esi, offset aDlTls_c^^^mov     edi, offset aResult_dl_tl_0^^^call    __assert_fail^^^
__get_child_max$$$sub     rsp, 18h^^^mov     edi, 6^^^mov     rsi, rsp^^^call    getrlimit64^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^test    eax, eax^^^cmovz   rdx, [rsp+18h+var_18]^^^add     rsp, 18h^^^mov     rax, rdx^^^retn^^^
_nl_unload_locale$$$push    rbx^^^mov     rax, [rdi+20h]^^^mov     rbx, rdi^^^test    rax, rax^^^jz      short loc_46230F^^^call    rax^^^mov     eax, [rbx+18h]^^^test    eax, eax^^^jnz     short loc_462340^^^mov     rdi, [rbx+8]^^^call    free^^^mov     eax, [rbx+18h]^^^cmp     eax, 2^^^jz      short loc_46232F^^^mov     rdi, [rbx]^^^call    free^^^mov     rdi, rbx^^^pop     rbx^^^jmp     free^^^cmp     eax, 1^^^jnz     short loc_462322^^^mov     rsi, [rbx+10h]^^^mov     rdi, [rbx+8]^^^call    munmap^^^mov     eax, [rbx+18h]^^^jmp     short loc_462322^^^
__memmove_ssse3_back$$$mov     rax, rdi^^^cmp     rdi, rsi^^^jb      short loc_43C06E^^^jz      locret_43E4BE^^^cmp     rdx, 90h^^^jnb     loc_43C0F0^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^cmp     rdx, 90h^^^jnb     short loc_43C090^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     r8, rdi^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^add     rdi, 10h^^^mov     r9, rdi^^^sub     r9, r8^^^sub     rdx, r9^^^add     rsi, r9^^^mov     r9, rsi^^^and     r9, 0Fh^^^jz      loc_43C150^^^mov     rcx, cs:__x86_64_data_cache_size^^^cmp     rdx, rcx^^^jnb     loc_43D8F0^^^lea     r11, unk_49D270^^^sub     rdx, 80h^^^movsxd  r9, dword ptr [r11+r9*4]^^^add     r9, r11^^^jmp     r9^^^ud2^^^mov     rcx, cs:__x86_64_data_cache_size^^^shl     rcx, 1^^^cmp     rdx, rcx^^^ja      loc_43DAA0^^^add     rdi, rdx^^^add     rsi, rdx^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^lea     r8, [rdi-10h]^^^mov     r9, rdi^^^and     r9, 0Fh^^^xor     rdi, r9^^^sub     rsi, r9^^^sub     rdx, r9^^^mov     r9, rsi^^^and     r9, 0Fh^^^jz      loc_43C1F0^^^lea     r11, unk_49D2B0^^^sub     rdx, 80h^^^movsxd  r9, dword ptr [r11+r9*4]^^^add     r9, r11^^^jmp     r9^^^ud2^^^mov     r9, rdx^^^shr     r9, 8^^^add     r9, rdx^^^cmp     r9, cs:__x86_64_data_cache_size_half^^^jnb     loc_43D8F0^^^sub     rdx, 80h^^^xchg    ax, ax^^^movdqa  xmm1, xmmword ptr [rsi]^^^movdqa  xmmword ptr [rdi], xmm1^^^movaps  xmm2, xmmword ptr [rsi+10h]^^^movaps  xmmword ptr [rdi+10h], xmm2^^^movaps  xmm3, xmmword ptr [rsi+20h]^^^movaps  xmmword ptr [rdi+20h], xmm3^^^movaps  xmm4, xmmword ptr [rsi+30h]^^^movaps  xmmword ptr [rdi+30h], xmm4^^^movaps  xmm1, xmmword ptr [rsi+40h]^^^movaps  xmmword ptr [rdi+40h], xmm1^^^movaps  xmm2, xmmword ptr [rsi+50h]^^^movaps  xmmword ptr [rdi+50h], xmm2^^^movaps  xmm3, xmmword ptr [rsi+60h]^^^movaps  xmmword ptr [rdi+60h], xmm3^^^movaps  xmm4, xmmword ptr [rsi+70h]^^^movaps  xmmword ptr [rdi+70h], xmm4^^^sub     rdx, 80h^^^lea     rsi, [rsi+80h]^^^lea     rdi, [rdi+80h]^^^jnb     short loc_43C170^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-10h]^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm2, xmmword ptr [rsi-20h]^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm3, xmmword ptr [rsi-30h]^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm4, xmmword ptr [rsi-40h]^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm5, xmmword ptr [rsi-50h]^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm5, xmmword ptr [rsi-60h]^^^movaps  xmmword ptr [rdi-60h], xmm5^^^movaps  xmm5, xmmword ptr [rsi-70h]^^^movaps  xmmword ptr [rdi-70h], xmm5^^^movaps  xmm5, xmmword ptr [rsi-80h]^^^movaps  xmmword ptr [rdi-80h], xmm5^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     short loc_43C1F7^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-1]^^^movaps  xmm2, xmmword ptr [rsi+0Fh]^^^movaps  xmm3, xmmword ptr [rsi+1Fh]^^^movaps  xmm4, xmmword ptr [rsi+2Fh]^^^movaps  xmm5, xmmword ptr [rsi+3Fh]^^^movaps  xmm6, xmmword ptr [rsi+4Fh]^^^movaps  xmm7, xmmword ptr [rsi+5Fh]^^^movaps  xmm8, xmmword ptr [rsi+6Fh]^^^movaps  xmm9, xmmword ptr [rsi+7Fh]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 1^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 1^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 1^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 1^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 1^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 1^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 1^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 1^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C270^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-1]^^^movaps  xmm2, xmmword ptr [rsi-11h]^^^palignr xmm1, xmm2, 1^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-21h]^^^palignr xmm2, xmm3, 1^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-31h]^^^palignr xmm3, xmm4, 1^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-41h]^^^palignr xmm4, xmm5, 1^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-51h]^^^palignr xmm5, xmm6, 1^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-61h]^^^palignr xmm6, xmm7, 1^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-71h]^^^palignr xmm7, xmm8, 1^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-81h]^^^palignr xmm8, xmm9, 1^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43C330^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-2]^^^movaps  xmm2, xmmword ptr [rsi+0Eh]^^^movaps  xmm3, xmmword ptr [rsi+1Eh]^^^movaps  xmm4, xmmword ptr [rsi+2Eh]^^^movaps  xmm5, xmmword ptr [rsi+3Eh]^^^movaps  xmm6, xmmword ptr [rsi+4Eh]^^^movaps  xmm7, xmmword ptr [rsi+5Eh]^^^movaps  xmm8, xmmword ptr [rsi+6Eh]^^^movaps  xmm9, xmmword ptr [rsi+7Eh]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 2^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 2^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 2^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 2^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 2^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 2^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 2^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 2^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C3F0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-2]^^^movaps  xmm2, xmmword ptr [rsi-12h]^^^palignr xmm1, xmm2, 2^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-22h]^^^palignr xmm2, xmm3, 2^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-32h]^^^palignr xmm3, xmm4, 2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-42h]^^^palignr xmm4, xmm5, 2^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-52h]^^^palignr xmm5, xmm6, 2^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-62h]^^^palignr xmm6, xmm7, 2^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-72h]^^^palignr xmm7, xmm8, 2^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-82h]^^^palignr xmm8, xmm9, 2^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43C4B0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-3]^^^movaps  xmm2, xmmword ptr [rsi+0Dh]^^^movaps  xmm3, xmmword ptr [rsi+1Dh]^^^movaps  xmm4, xmmword ptr [rsi+2Dh]^^^movaps  xmm5, xmmword ptr [rsi+3Dh]^^^movaps  xmm6, xmmword ptr [rsi+4Dh]^^^movaps  xmm7, xmmword ptr [rsi+5Dh]^^^movaps  xmm8, xmmword ptr [rsi+6Dh]^^^movaps  xmm9, xmmword ptr [rsi+7Dh]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 3^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 3^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 3^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 3^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 3^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 3^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 3^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 3^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C570^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-3]^^^movaps  xmm2, xmmword ptr [rsi-13h]^^^palignr xmm1, xmm2, 3^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-23h]^^^palignr xmm2, xmm3, 3^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-33h]^^^palignr xmm3, xmm4, 3^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-43h]^^^palignr xmm4, xmm5, 3^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-53h]^^^palignr xmm5, xmm6, 3^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-63h]^^^palignr xmm6, xmm7, 3^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-73h]^^^palignr xmm7, xmm8, 3^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-83h]^^^palignr xmm8, xmm9, 3^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43C630^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-4]^^^movaps  xmm2, xmmword ptr [rsi+0Ch]^^^movaps  xmm3, xmmword ptr [rsi+1Ch]^^^movaps  xmm4, xmmword ptr [rsi+2Ch]^^^movaps  xmm5, xmmword ptr [rsi+3Ch]^^^movaps  xmm6, xmmword ptr [rsi+4Ch]^^^movaps  xmm7, xmmword ptr [rsi+5Ch]^^^movaps  xmm8, xmmword ptr [rsi+6Ch]^^^movaps  xmm9, xmmword ptr [rsi+7Ch]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 4^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 4^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 4^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 4^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 4^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 4^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 4^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 4^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C6F0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-4]^^^movaps  xmm2, xmmword ptr [rsi-14h]^^^palignr xmm1, xmm2, 4^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-24h]^^^palignr xmm2, xmm3, 4^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-34h]^^^palignr xmm3, xmm4, 4^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-44h]^^^palignr xmm4, xmm5, 4^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-54h]^^^palignr xmm5, xmm6, 4^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-64h]^^^palignr xmm6, xmm7, 4^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-74h]^^^palignr xmm7, xmm8, 4^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-84h]^^^palignr xmm8, xmm9, 4^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43C7B0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-5]^^^movaps  xmm2, xmmword ptr [rsi+0Bh]^^^movaps  xmm3, xmmword ptr [rsi+1Bh]^^^movaps  xmm4, xmmword ptr [rsi+2Bh]^^^movaps  xmm5, xmmword ptr [rsi+3Bh]^^^movaps  xmm6, xmmword ptr [rsi+4Bh]^^^movaps  xmm7, xmmword ptr [rsi+5Bh]^^^movaps  xmm8, xmmword ptr [rsi+6Bh]^^^movaps  xmm9, xmmword ptr [rsi+7Bh]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 5^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 5^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 5^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 5^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 5^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 5^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 5^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 5^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C870^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-5]^^^movaps  xmm2, xmmword ptr [rsi-15h]^^^palignr xmm1, xmm2, 5^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-25h]^^^palignr xmm2, xmm3, 5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-35h]^^^palignr xmm3, xmm4, 5^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-45h]^^^palignr xmm4, xmm5, 5^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-55h]^^^palignr xmm5, xmm6, 5^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-65h]^^^palignr xmm6, xmm7, 5^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-75h]^^^palignr xmm7, xmm8, 5^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-85h]^^^palignr xmm8, xmm9, 5^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43C930^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-6]^^^movaps  xmm2, xmmword ptr [rsi+0Ah]^^^movaps  xmm3, xmmword ptr [rsi+1Ah]^^^movaps  xmm4, xmmword ptr [rsi+2Ah]^^^movaps  xmm5, xmmword ptr [rsi+3Ah]^^^movaps  xmm6, xmmword ptr [rsi+4Ah]^^^movaps  xmm7, xmmword ptr [rsi+5Ah]^^^movaps  xmm8, xmmword ptr [rsi+6Ah]^^^movaps  xmm9, xmmword ptr [rsi+7Ah]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 6^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 6^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 6^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 6^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 6^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 6^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 6^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 6^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43C9F0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-6]^^^movaps  xmm2, xmmword ptr [rsi-16h]^^^palignr xmm1, xmm2, 6^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-26h]^^^palignr xmm2, xmm3, 6^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-36h]^^^palignr xmm3, xmm4, 6^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-46h]^^^palignr xmm4, xmm5, 6^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-56h]^^^palignr xmm5, xmm6, 6^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-66h]^^^palignr xmm6, xmm7, 6^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-76h]^^^palignr xmm7, xmm8, 6^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-86h]^^^palignr xmm8, xmm9, 6^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43CAB0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-7]^^^movaps  xmm2, xmmword ptr [rsi+9]^^^movaps  xmm3, xmmword ptr [rsi+19h]^^^movaps  xmm4, xmmword ptr [rsi+29h]^^^movaps  xmm5, xmmword ptr [rsi+39h]^^^movaps  xmm6, xmmword ptr [rsi+49h]^^^movaps  xmm7, xmmword ptr [rsi+59h]^^^movaps  xmm8, xmmword ptr [rsi+69h]^^^movaps  xmm9, xmmword ptr [rsi+79h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 7^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 7^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 7^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 7^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 7^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 7^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 7^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 7^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43CB70^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-7]^^^movaps  xmm2, xmmword ptr [rsi-17h]^^^palignr xmm1, xmm2, 7^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-27h]^^^palignr xmm2, xmm3, 7^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-37h]^^^palignr xmm3, xmm4, 7^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-47h]^^^palignr xmm4, xmm5, 7^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-57h]^^^palignr xmm5, xmm6, 7^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-67h]^^^palignr xmm6, xmm7, 7^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-77h]^^^palignr xmm7, xmm8, 7^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-87h]^^^palignr xmm8, xmm9, 7^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43CC30^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-8]^^^movaps  xmm2, xmmword ptr [rsi+8]^^^movaps  xmm3, xmmword ptr [rsi+18h]^^^movaps  xmm4, xmmword ptr [rsi+28h]^^^movaps  xmm5, xmmword ptr [rsi+38h]^^^movaps  xmm6, xmmword ptr [rsi+48h]^^^movaps  xmm7, xmmword ptr [rsi+58h]^^^movaps  xmm8, xmmword ptr [rsi+68h]^^^movaps  xmm9, xmmword ptr [rsi+78h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 8^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 8^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 8^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 8^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 8^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 8^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 8^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 8^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43CCF0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-8]^^^movaps  xmm2, xmmword ptr [rsi-18h]^^^palignr xmm1, xmm2, 8^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-28h]^^^palignr xmm2, xmm3, 8^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-38h]^^^palignr xmm3, xmm4, 8^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-48h]^^^palignr xmm4, xmm5, 8^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-58h]^^^palignr xmm5, xmm6, 8^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-68h]^^^palignr xmm6, xmm7, 8^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-78h]^^^palignr xmm7, xmm8, 8^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-88h]^^^palignr xmm8, xmm9, 8^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43CDB0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-9]^^^movaps  xmm2, xmmword ptr [rsi+7]^^^movaps  xmm3, xmmword ptr [rsi+17h]^^^movaps  xmm4, xmmword ptr [rsi+27h]^^^movaps  xmm5, xmmword ptr [rsi+37h]^^^movaps  xmm6, xmmword ptr [rsi+47h]^^^movaps  xmm7, xmmword ptr [rsi+57h]^^^movaps  xmm8, xmmword ptr [rsi+67h]^^^movaps  xmm9, xmmword ptr [rsi+77h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 9^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 9^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 9^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 9^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 9^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 9^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 9^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 9^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43CE70^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-9]^^^movaps  xmm2, xmmword ptr [rsi-19h]^^^palignr xmm1, xmm2, 9^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-29h]^^^palignr xmm2, xmm3, 9^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-39h]^^^palignr xmm3, xmm4, 9^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-49h]^^^palignr xmm4, xmm5, 9^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-59h]^^^palignr xmm5, xmm6, 9^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-69h]^^^palignr xmm6, xmm7, 9^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-79h]^^^palignr xmm7, xmm8, 9^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-89h]^^^palignr xmm8, xmm9, 9^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43CF30^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-0Ah]^^^movaps  xmm2, xmmword ptr [rsi+6]^^^movaps  xmm3, xmmword ptr [rsi+16h]^^^movaps  xmm4, xmmword ptr [rsi+26h]^^^movaps  xmm5, xmmword ptr [rsi+36h]^^^movaps  xmm6, xmmword ptr [rsi+46h]^^^movaps  xmm7, xmmword ptr [rsi+56h]^^^movaps  xmm8, xmmword ptr [rsi+66h]^^^movaps  xmm9, xmmword ptr [rsi+76h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Ah^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Ah^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Ah^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Ah^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Ah^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Ah^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Ah^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43CFF0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Ah]^^^movaps  xmm2, xmmword ptr [rsi-1Ah]^^^palignr xmm1, xmm2, 0Ah^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Ah]^^^palignr xmm2, xmm3, 0Ah^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Ah]^^^palignr xmm3, xmm4, 0Ah^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Ah]^^^palignr xmm4, xmm5, 0Ah^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Ah]^^^palignr xmm5, xmm6, 0Ah^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Ah]^^^palignr xmm6, xmm7, 0Ah^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Ah]^^^palignr xmm7, xmm8, 0Ah^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Ah]^^^palignr xmm8, xmm9, 0Ah^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D0B0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-0Bh]^^^movaps  xmm2, xmmword ptr [rsi+5]^^^movaps  xmm3, xmmword ptr [rsi+15h]^^^movaps  xmm4, xmmword ptr [rsi+25h]^^^movaps  xmm5, xmmword ptr [rsi+35h]^^^movaps  xmm6, xmmword ptr [rsi+45h]^^^movaps  xmm7, xmmword ptr [rsi+55h]^^^movaps  xmm8, xmmword ptr [rsi+65h]^^^movaps  xmm9, xmmword ptr [rsi+75h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Bh^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Bh^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Bh^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Bh^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Bh^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Bh^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Bh^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D170^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Bh]^^^movaps  xmm2, xmmword ptr [rsi-1Bh]^^^palignr xmm1, xmm2, 0Bh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Bh]^^^palignr xmm2, xmm3, 0Bh^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Bh]^^^palignr xmm3, xmm4, 0Bh^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Bh]^^^palignr xmm4, xmm5, 0Bh^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Bh]^^^palignr xmm5, xmm6, 0Bh^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Bh]^^^palignr xmm6, xmm7, 0Bh^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Bh]^^^palignr xmm7, xmm8, 0Bh^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Bh]^^^palignr xmm8, xmm9, 0Bh^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D230^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movdqa  xmm1, xmmword ptr [rsi-0Ch]^^^movaps  xmm2, xmmword ptr [rsi+4]^^^movaps  xmm3, xmmword ptr [rsi+14h]^^^movaps  xmm4, xmmword ptr [rsi+24h]^^^movaps  xmm5, xmmword ptr [rsi+34h]^^^movaps  xmm6, xmmword ptr [rsi+44h]^^^movaps  xmm7, xmmword ptr [rsi+54h]^^^movaps  xmm8, xmmword ptr [rsi+64h]^^^movaps  xmm9, xmmword ptr [rsi+74h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Ch^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Ch^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Ch^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Ch^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Ch^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Ch^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Ch^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D2F0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Ch]^^^movaps  xmm2, xmmword ptr [rsi-1Ch]^^^palignr xmm1, xmm2, 0Ch^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Ch]^^^palignr xmm2, xmm3, 0Ch^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Ch]^^^palignr xmm3, xmm4, 0Ch^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Ch]^^^palignr xmm4, xmm5, 0Ch^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Ch]^^^palignr xmm5, xmm6, 0Ch^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Ch]^^^palignr xmm6, xmm7, 0Ch^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Ch]^^^palignr xmm7, xmm8, 0Ch^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Ch]^^^palignr xmm8, xmm9, 0Ch^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D3B0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-0Dh]^^^movaps  xmm2, xmmword ptr [rsi+3]^^^movaps  xmm3, xmmword ptr [rsi+13h]^^^movaps  xmm4, xmmword ptr [rsi+23h]^^^movaps  xmm5, xmmword ptr [rsi+33h]^^^movaps  xmm6, xmmword ptr [rsi+43h]^^^movaps  xmm7, xmmword ptr [rsi+53h]^^^movaps  xmm8, xmmword ptr [rsi+63h]^^^movaps  xmm9, xmmword ptr [rsi+73h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Dh^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Dh^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Dh^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Dh^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Dh^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Dh^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Dh^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D470^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Dh]^^^movaps  xmm2, xmmword ptr [rsi-1Dh]^^^palignr xmm1, xmm2, 0Dh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Dh]^^^palignr xmm2, xmm3, 0Dh^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Dh]^^^palignr xmm3, xmm4, 0Dh^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Dh]^^^palignr xmm4, xmm5, 0Dh^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Dh]^^^palignr xmm5, xmm6, 0Dh^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Dh]^^^palignr xmm6, xmm7, 0Dh^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Dh]^^^palignr xmm7, xmm8, 0Dh^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Dh]^^^palignr xmm8, xmm9, 0Dh^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D530^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-0Eh]^^^movaps  xmm2, xmmword ptr [rsi+2]^^^movaps  xmm3, xmmword ptr [rsi+12h]^^^movaps  xmm4, xmmword ptr [rsi+22h]^^^movaps  xmm5, xmmword ptr [rsi+32h]^^^movaps  xmm6, xmmword ptr [rsi+42h]^^^movaps  xmm7, xmmword ptr [rsi+52h]^^^movaps  xmm8, xmmword ptr [rsi+62h]^^^movaps  xmm9, xmmword ptr [rsi+72h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Eh^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Eh^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Eh^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Eh^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Eh^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Eh^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Eh^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D5F0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Eh]^^^movaps  xmm2, xmmword ptr [rsi-1Eh]^^^palignr xmm1, xmm2, 0Eh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Eh]^^^palignr xmm2, xmm3, 0Eh^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Eh]^^^palignr xmm3, xmm4, 0Eh^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Eh]^^^palignr xmm4, xmm5, 0Eh^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Eh]^^^palignr xmm5, xmm6, 0Eh^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Eh]^^^palignr xmm6, xmm7, 0Eh^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Eh]^^^palignr xmm7, xmm8, 0Eh^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Eh]^^^palignr xmm8, xmm9, 0Eh^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D6B0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^sub     rdx, 80h^^^movaps  xmm1, xmmword ptr [rsi-0Fh]^^^movaps  xmm2, xmmword ptr [rsi+1]^^^movaps  xmm3, xmmword ptr [rsi+11h]^^^movaps  xmm4, xmmword ptr [rsi+21h]^^^movaps  xmm5, xmmword ptr [rsi+31h]^^^movaps  xmm6, xmmword ptr [rsi+41h]^^^movaps  xmm7, xmmword ptr [rsi+51h]^^^movaps  xmm8, xmmword ptr [rsi+61h]^^^movaps  xmm9, xmmword ptr [rsi+71h]^^^lea     rsi, [rsi+80h]^^^palignr xmm9, xmm8, 0Fh^^^movaps  xmmword ptr [rdi+70h], xmm9^^^palignr xmm8, xmm7, 0Fh^^^movaps  xmmword ptr [rdi+60h], xmm8^^^palignr xmm7, xmm6, 0Fh^^^movaps  xmmword ptr [rdi+50h], xmm7^^^palignr xmm6, xmm5, 0Fh^^^movaps  xmmword ptr [rdi+40h], xmm6^^^palignr xmm5, xmm4, 0Fh^^^movaps  xmmword ptr [rdi+30h], xmm5^^^palignr xmm4, xmm3, 0Fh^^^movaps  xmmword ptr [rdi+20h], xmm4^^^palignr xmm3, xmm2, 0Fh^^^movaps  xmmword ptr [rdi+10h], xmm3^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmmword ptr [rdi], xmm2^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D770^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movaps  xmm1, xmmword ptr [rsi-0Fh]^^^movaps  xmm2, xmmword ptr [rsi-1Fh]^^^palignr xmm1, xmm2, 0Fh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm3, xmmword ptr [rsi-2Fh]^^^palignr xmm2, xmm3, 0Fh^^^movaps  xmmword ptr [rdi-20h], xmm2^^^movaps  xmm4, xmmword ptr [rsi-3Fh]^^^palignr xmm3, xmm4, 0Fh^^^movaps  xmmword ptr [rdi-30h], xmm3^^^movaps  xmm5, xmmword ptr [rsi-4Fh]^^^palignr xmm4, xmm5, 0Fh^^^movaps  xmmword ptr [rdi-40h], xmm4^^^movaps  xmm6, xmmword ptr [rsi-5Fh]^^^palignr xmm5, xmm6, 0Fh^^^movaps  xmmword ptr [rdi-50h], xmm5^^^movaps  xmm7, xmmword ptr [rsi-6Fh]^^^palignr xmm6, xmm7, 0Fh^^^movaps  xmmword ptr [rdi-60h], xmm6^^^movaps  xmm8, xmmword ptr [rsi-7Fh]^^^palignr xmm7, xmm8, 0Fh^^^movaps  xmmword ptr [rdi-70h], xmm7^^^movaps  xmm9, xmmword ptr [rsi-8Fh]^^^palignr xmm8, xmm9, 0Fh^^^movaps  xmmword ptr [rdi-80h], xmm8^^^sub     rdx, 80h^^^lea     rdi, [rdi-80h]^^^lea     rsi, [rsi-80h]^^^jnb     loc_43D830^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rdi, rdx^^^sub     rsi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movdqu  xmm1, xmmword ptr [rsi]^^^movdqu  xmmword ptr [r8], xmm0^^^movdqa  xmmword ptr [rdi], xmm1^^^sub     rdx, 10h^^^add     rsi, 10h^^^add     rdi, 10h^^^mov     rcx, cs:__x86_64_shared_cache_size_half^^^mov     r9, rsi^^^sub     r9, rdi^^^cmp     r9, rdx^^^jnb     short loc_43D924^^^cmp     r9, rcx^^^jbe     loc_43D9E5^^^cmp     rdx, rcx^^^ja      short loc_43D92C^^^mov     rcx, rdx^^^sub     rdx, rcx^^^cmp     rdx, 1000h^^^jbe     loc_43D9E2^^^mov     r9, rcx^^^shl     r9, 3^^^cmp     rdx, r9^^^jbe     short loc_43D94E^^^add     rdx, rcx^^^xor     rcx, rcx^^^sub     rdx, 80h^^^sub     rdx, 80h^^^prefetcht0 byte ptr [rsi+200h]^^^prefetcht0 byte ptr [rsi+300h]^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^movdqu  xmm4, xmmword ptr [rsi+40h]^^^movdqu  xmm5, xmmword ptr [rsi+50h]^^^movdqu  xmm6, xmmword ptr [rsi+60h]^^^movdqu  xmm7, xmmword ptr [rsi+70h]^^^lfence^^^movntdq xmmword ptr [rdi], xmm0^^^movntdq xmmword ptr [rdi+10h], xmm1^^^movntdq xmmword ptr [rdi+20h], xmm2^^^movntdq xmmword ptr [rdi+30h], xmm3^^^movntdq xmmword ptr [rdi+40h], xmm4^^^movntdq xmmword ptr [rdi+50h], xmm5^^^movntdq xmmword ptr [rdi+60h], xmm6^^^movntdq xmmword ptr [rdi+70h], xmm7^^^lea     rsi, [rsi+80h]^^^lea     rdi, [rdi+80h]^^^jnb     short loc_43D955^^^sfence^^^cmp     rcx, 80h^^^jb      loc_43DA71^^^add     rdx, 80h^^^add     rdx, rcx^^^sub     rdx, 80h^^^prefetchnta byte ptr [rsi+1C0h]^^^prefetchnta byte ptr [rsi+280h]^^^prefetchnta byte ptr [rdi+1C0h]^^^prefetchnta byte ptr [rdi+280h]^^^sub     rdx, 80h^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^movdqu  xmm4, xmmword ptr [rsi+40h]^^^movdqu  xmm5, xmmword ptr [rsi+50h]^^^movdqu  xmm6, xmmword ptr [rsi+60h]^^^movdqu  xmm7, xmmword ptr [rsi+70h]^^^movdqa  xmmword ptr [rdi], xmm0^^^movdqa  xmmword ptr [rdi+10h], xmm1^^^movdqa  xmmword ptr [rdi+20h], xmm2^^^movdqa  xmmword ptr [rdi+30h], xmm3^^^movdqa  xmmword ptr [rdi+40h], xmm4^^^movdqa  xmmword ptr [rdi+50h], xmm5^^^movdqa  xmmword ptr [rdi+60h], xmm6^^^movdqa  xmmword ptr [rdi+70h], xmm7^^^lea     rsi, [rsi+80h]^^^lea     rdi, [rdi+80h]^^^jnb     loc_43D9EC^^^add     rdx, 80h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, unk_49D030^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^add     rsi, rdx^^^add     rdi, rdx^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^lea     r8, [rdi-10h]^^^mov     r9, rdi^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^sub     r9, rdi^^^sub     rsi, r9^^^sub     rdx, r9^^^mov     rcx, cs:__x86_64_shared_cache_size_half^^^mov     r9, rdi^^^sub     r9, rsi^^^cmp     r9, rdx^^^jnb     short loc_43DADA^^^cmp     r9, rcx^^^jbe     loc_43DB99^^^cmp     rdx, rcx^^^ja      short loc_43DAE2^^^mov     rcx, rdx^^^sub     rdx, rcx^^^cmp     rdx, 1000h^^^jbe     loc_43DB96^^^mov     r9, rcx^^^shl     r9, 3^^^cmp     rdx, r9^^^jbe     short loc_43DB04^^^add     rdx, rcx^^^xor     rcx, rcx^^^sub     rdx, 80h^^^sub     rdx, 80h^^^prefetcht0 byte ptr [rsi-200h]^^^prefetcht0 byte ptr [rsi-300h]^^^movdqu  xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmm2, xmmword ptr [rsi-20h]^^^movdqu  xmm3, xmmword ptr [rsi-30h]^^^movdqu  xmm4, xmmword ptr [rsi-40h]^^^movdqu  xmm5, xmmword ptr [rsi-50h]^^^movdqu  xmm6, xmmword ptr [rsi-60h]^^^movdqu  xmm7, xmmword ptr [rsi-70h]^^^movdqu  xmm8, xmmword ptr [rsi-80h]^^^lfence^^^movntdq xmmword ptr [rdi-10h], xmm1^^^movntdq xmmword ptr [rdi-20h], xmm2^^^movntdq xmmword ptr [rdi-30h], xmm3^^^movntdq xmmword ptr [rdi-40h], xmm4^^^movntdq xmmword ptr [rdi-50h], xmm5^^^movntdq xmmword ptr [rdi-60h], xmm6^^^movntdq xmmword ptr [rdi-70h], xmm7^^^movntdq xmmword ptr [rdi-80h], xmm8^^^lea     rsi, [rsi-80h]^^^lea     rdi, [rdi-80h]^^^jnb     short loc_43DB0B^^^sfence^^^cmp     rcx, 80h^^^jb      loc_43DC1F^^^add     rdx, 80h^^^add     rdx, rcx^^^sub     rdx, 80h^^^prefetchnta byte ptr [rsi-1C0h]^^^prefetchnta byte ptr [rsi-280h]^^^prefetchnta byte ptr [rdi-1C0h]^^^prefetchnta byte ptr [rdi-280h]^^^sub     rdx, 80h^^^movdqu  xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmm2, xmmword ptr [rsi-20h]^^^movdqu  xmm3, xmmword ptr [rsi-30h]^^^movdqu  xmm4, xmmword ptr [rsi-40h]^^^movdqu  xmm5, xmmword ptr [rsi-50h]^^^movdqu  xmm6, xmmword ptr [rsi-60h]^^^movdqu  xmm7, xmmword ptr [rsi-70h]^^^movdqu  xmm8, xmmword ptr [rsi-80h]^^^movdqa  xmmword ptr [rdi-10h], xmm1^^^movdqa  xmmword ptr [rdi-20h], xmm2^^^movdqa  xmmword ptr [rdi-30h], xmm3^^^movdqa  xmmword ptr [rdi-40h], xmm4^^^movdqa  xmmword ptr [rdi-50h], xmm5^^^movdqa  xmmword ptr [rdi-60h], xmm6^^^movdqa  xmmword ptr [rdi-70h], xmm7^^^movdqa  xmmword ptr [rdi-80h], xmm8^^^lea     rsi, [rsi-80h]^^^lea     rdi, [rdi-80h]^^^jnb     short loc_43DBA0^^^movdqu  xmmword ptr [r8], xmm0^^^add     rdx, 80h^^^sub     rsi, rdx^^^sub     rdi, rdx^^^lea     r11, unk_49CDF0^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lddqu   xmm0, xmmword ptr [rsi-80h]^^^movdqu  xmmword ptr [rdi-80h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-70h]^^^movdqu  xmmword ptr [rdi-70h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-60h]^^^movdqu  xmmword ptr [rdi-60h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-50h]^^^movdqu  xmmword ptr [rdi-50h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-40h]^^^movdqu  xmmword ptr [rdi-40h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-30h]^^^movdqu  xmmword ptr [rdi-30h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-20h]^^^movdqu  xmmword ptr [rdi-20h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-10h], xmm0^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Fh]^^^movdqu  xmmword ptr [rdi-8Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Fh]^^^movdqu  xmmword ptr [rdi-7Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Fh]^^^movdqu  xmmword ptr [rdi-6Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Fh]^^^movdqu  xmmword ptr [rdi-5Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Fh]^^^movdqu  xmmword ptr [rdi-4Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Fh]^^^movdqu  xmmword ptr [rdi-3Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Fh]^^^movdqu  xmmword ptr [rdi-2Fh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Fh]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Fh], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Fh]^^^mov     rcx, [rsi-8]^^^mov     [rdi-0Fh], rdx^^^mov     [rdi-8], rcx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Eh]^^^movdqu  xmmword ptr [rdi-8Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Eh]^^^movdqu  xmmword ptr [rdi-7Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Eh]^^^movdqu  xmmword ptr [rdi-6Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Eh]^^^movdqu  xmmword ptr [rdi-5Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Eh]^^^movdqu  xmmword ptr [rdi-4Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Eh]^^^movdqu  xmmword ptr [rdi-3Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Eh]^^^movdqu  xmmword ptr [rdi-2Eh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Eh]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Eh], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Eh]^^^mov     rcx, [rsi-8]^^^mov     [rdi-0Eh], rdx^^^mov     [rdi-8], rcx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Dh]^^^movdqu  xmmword ptr [rdi-8Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Dh]^^^movdqu  xmmword ptr [rdi-7Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Dh]^^^movdqu  xmmword ptr [rdi-6Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Dh]^^^movdqu  xmmword ptr [rdi-5Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Dh]^^^movdqu  xmmword ptr [rdi-4Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Dh]^^^movdqu  xmmword ptr [rdi-3Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Dh]^^^movdqu  xmmword ptr [rdi-2Dh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Dh]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Dh], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Dh]^^^mov     rcx, [rsi-8]^^^mov     [rdi-0Dh], rdx^^^mov     [rdi-8], rcx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Ch]^^^movdqu  xmmword ptr [rdi-8Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Ch]^^^movdqu  xmmword ptr [rdi-7Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Ch]^^^movdqu  xmmword ptr [rdi-6Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Ch]^^^movdqu  xmmword ptr [rdi-5Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Ch]^^^movdqu  xmmword ptr [rdi-4Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Ch]^^^movdqu  xmmword ptr [rdi-3Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Ch]^^^movdqu  xmmword ptr [rdi-2Ch], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Ch]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Ch], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Ch]^^^mov     ecx, [rsi-4]^^^mov     [rdi-0Ch], rdx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Bh]^^^movdqu  xmmword ptr [rdi-8Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Bh]^^^movdqu  xmmword ptr [rdi-7Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Bh]^^^movdqu  xmmword ptr [rdi-6Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Bh]^^^movdqu  xmmword ptr [rdi-5Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Bh]^^^movdqu  xmmword ptr [rdi-4Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Bh]^^^movdqu  xmmword ptr [rdi-3Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Bh]^^^movdqu  xmmword ptr [rdi-2Bh], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Bh]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Bh], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Bh]^^^mov     ecx, [rsi-4]^^^mov     [rdi-0Bh], rdx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-8Ah]^^^movdqu  xmmword ptr [rdi-8Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-7Ah]^^^movdqu  xmmword ptr [rdi-7Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-6Ah]^^^movdqu  xmmword ptr [rdi-6Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-5Ah]^^^movdqu  xmmword ptr [rdi-5Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-4Ah]^^^movdqu  xmmword ptr [rdi-4Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-3Ah]^^^movdqu  xmmword ptr [rdi-3Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-2Ah]^^^movdqu  xmmword ptr [rdi-2Ah], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-1Ah]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-1Ah], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-0Ah]^^^mov     ecx, [rsi-4]^^^mov     [rdi-0Ah], rdx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-89h]^^^movdqu  xmmword ptr [rdi-89h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-79h]^^^movdqu  xmmword ptr [rdi-79h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-69h]^^^movdqu  xmmword ptr [rdi-69h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-59h]^^^movdqu  xmmword ptr [rdi-59h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-49h]^^^movdqu  xmmword ptr [rdi-49h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-39h]^^^movdqu  xmmword ptr [rdi-39h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-29h]^^^movdqu  xmmword ptr [rdi-29h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-19h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-19h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-9]^^^mov     ecx, [rsi-4]^^^mov     [rdi-9], rdx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-88h]^^^movdqu  xmmword ptr [rdi-88h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-78h]^^^movdqu  xmmword ptr [rdi-78h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-68h]^^^movdqu  xmmword ptr [rdi-68h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-58h]^^^movdqu  xmmword ptr [rdi-58h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-48h]^^^movdqu  xmmword ptr [rdi-48h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-38h]^^^movdqu  xmmword ptr [rdi-38h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-28h]^^^movdqu  xmmword ptr [rdi-28h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-18h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-18h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     rdx, [rsi-8]^^^mov     [rdi-8], rdx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-87h]^^^movdqu  xmmword ptr [rdi-87h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-77h]^^^movdqu  xmmword ptr [rdi-77h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-67h]^^^movdqu  xmmword ptr [rdi-67h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-57h]^^^movdqu  xmmword ptr [rdi-57h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-47h]^^^movdqu  xmmword ptr [rdi-47h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-37h]^^^movdqu  xmmword ptr [rdi-37h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-27h]^^^movdqu  xmmword ptr [rdi-27h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-17h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-17h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     edx, [rsi-7]^^^mov     ecx, [rsi-4]^^^mov     [rdi-7], edx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-86h]^^^movdqu  xmmword ptr [rdi-86h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-76h]^^^movdqu  xmmword ptr [rdi-76h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-66h]^^^movdqu  xmmword ptr [rdi-66h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-56h]^^^movdqu  xmmword ptr [rdi-56h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-46h]^^^movdqu  xmmword ptr [rdi-46h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-36h]^^^movdqu  xmmword ptr [rdi-36h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-26h]^^^movdqu  xmmword ptr [rdi-26h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-16h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-16h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     edx, [rsi-6]^^^mov     ecx, [rsi-4]^^^mov     [rdi-6], edx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-85h]^^^movdqu  xmmword ptr [rdi-85h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-75h]^^^movdqu  xmmword ptr [rdi-75h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-65h]^^^movdqu  xmmword ptr [rdi-65h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-55h]^^^movdqu  xmmword ptr [rdi-55h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-45h]^^^movdqu  xmmword ptr [rdi-45h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-35h]^^^movdqu  xmmword ptr [rdi-35h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-25h]^^^movdqu  xmmword ptr [rdi-25h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-15h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-15h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     edx, [rsi-5]^^^mov     ecx, [rsi-4]^^^mov     [rdi-5], edx^^^mov     [rdi-4], ecx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-84h]^^^movdqu  xmmword ptr [rdi-84h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-74h]^^^movdqu  xmmword ptr [rdi-74h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-64h]^^^movdqu  xmmword ptr [rdi-64h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-54h]^^^movdqu  xmmword ptr [rdi-54h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-44h]^^^movdqu  xmmword ptr [rdi-44h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-34h]^^^movdqu  xmmword ptr [rdi-34h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-24h]^^^movdqu  xmmword ptr [rdi-24h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-14h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-14h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     edx, [rsi-4]^^^mov     [rdi-4], edx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-83h]^^^movdqu  xmmword ptr [rdi-83h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-73h]^^^movdqu  xmmword ptr [rdi-73h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-63h]^^^movdqu  xmmword ptr [rdi-63h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-53h]^^^movdqu  xmmword ptr [rdi-53h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-43h]^^^movdqu  xmmword ptr [rdi-43h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-33h]^^^movdqu  xmmword ptr [rdi-33h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-23h]^^^movdqu  xmmword ptr [rdi-23h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-13h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-13h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^mov     dx, [rsi-3]^^^mov     cx, [rsi-2]^^^mov     [rdi-3], dx^^^mov     [rdi-2], cx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-82h]^^^movdqu  xmmword ptr [rdi-82h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-72h]^^^movdqu  xmmword ptr [rdi-72h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-62h]^^^movdqu  xmmword ptr [rdi-62h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-52h]^^^movdqu  xmmword ptr [rdi-52h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-42h]^^^movdqu  xmmword ptr [rdi-42h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-32h]^^^movdqu  xmmword ptr [rdi-32h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-22h]^^^movdqu  xmmword ptr [rdi-22h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-12h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-12h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^movzx   edx, word ptr [rsi-2]^^^mov     [rdi-2], dx^^^retn^^^lddqu   xmm0, xmmword ptr [rsi-81h]^^^movdqu  xmmword ptr [rdi-81h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-71h]^^^movdqu  xmmword ptr [rdi-71h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-61h]^^^movdqu  xmmword ptr [rdi-61h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-51h]^^^movdqu  xmmword ptr [rdi-51h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-41h]^^^movdqu  xmmword ptr [rdi-41h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-31h]^^^movdqu  xmmword ptr [rdi-31h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-21h]^^^movdqu  xmmword ptr [rdi-21h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi-11h]^^^lddqu   xmm1, xmmword ptr [rsi-10h]^^^movdqu  xmmword ptr [rdi-11h], xmm0^^^movdqu  xmmword ptr [rdi-10h], xmm1^^^retn^^^movzx   edx, byte ptr [rsi-1]^^^mov     [rdi-1], dl^^^retn^^^lddqu   xmm0, xmmword ptr [rsi+70h]^^^movdqu  xmmword ptr [rdi+70h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+60h]^^^movdqu  xmmword ptr [rdi+60h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+50h]^^^movdqu  xmmword ptr [rdi+50h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+40h]^^^movdqu  xmmword ptr [rdi+40h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+30h]^^^movdqu  xmmword ptr [rdi+30h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+20h]^^^movdqu  xmmword ptr [rdi+20h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi+10h]^^^movdqu  xmmword ptr [rdi+10h], xmm0^^^lddqu   xmm0, xmmword ptr [rsi]^^^movdqu  xmmword ptr [rdi], xmm0^^^retn^^^
_dl_start_profile$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 298h^^^mov     rbx, cs:_dl_profile_map^^^movzx   ecx, word ptr [rbx+2B0h]^^^mov     rax, [rbx+2A0h]^^^lea     rdx, ds:0[rcx*8]^^^shl     rcx, 6^^^sub     rcx, rdx^^^add     rcx, rax^^^cmp     rax, rcx^^^jnb     loc_47A37A^^^mov     r12, cs:_dl_pagesize^^^mov     r8, 0FFFFFFFFFFFFFFFFh^^^xor     edi, edi^^^mov     r9, 1FFFFFFFFh^^^mov     rsi, 100000001h^^^mov     r11, r12^^^add     r12, r8^^^neg     r11^^^jmp     short loc_479EF1^^^add     rax, 38h^^^cmp     rax, rcx^^^jnb     short loc_479F25^^^mov     rdx, r9^^^and     rdx, [rax]^^^cmp     rdx, rsi^^^jnz     short loc_479EE8^^^mov     r10, [rax+10h]^^^lea     rdx, [r12+r10]^^^add     rdx, [rax+28h]^^^and     r10, r11^^^and     rdx, r11^^^cmp     r8, r10^^^cmova   r8, r10^^^cmp     rdx, rdi^^^cmova   rdi, rdx^^^add     rax, 38h^^^cmp     rax, rcx^^^jb      short loc_479EF1^^^mov     rcx, r8^^^mov     rsi, rdi^^^mov     rax, [rbx]^^^mov     rdx, 28F5C28F5C28F5C3h^^^mov     cs:running, 0^^^mov     cs:log_hashfraction, 5^^^lea     r12, [rdi+rax+3]^^^add     r8, rax^^^and     r8, 0FFFFFFFFFFFFFFFCh^^^and     r12, 0FFFFFFFFFFFFFFFCh^^^mov     cs:lowpc, r8^^^mov     rax, r12^^^sub     rax, r8^^^mov     r14, rax^^^mov     cs:textsize, rax^^^lea     rax, [rax+rax*2]^^^shr     r14, 1^^^shr     rax, 2^^^mul     rdx^^^shr     rdx, 2^^^mov     eax, edx^^^mov     cs:fromlimit, edx^^^cmp     eax, 31h^^^ja      loc_47A110^^^mov     cs:fromlimit, 32h^^^mov     r15d, 3EC8h^^^mov     [rbp+var_2A8], 320h^^^mov     rax, r14^^^mov     [rbp+var_80], rcx^^^mov     [rbp+var_78], rsi^^^shr     rax, 1^^^mov     dword ptr [rbp+var_50], 6E6F6D67h^^^mov     dword ptr [rbp+var_50+4], 1FFFFh^^^mov     [rbp+var_48], 0^^^mov     [rbp+var_40], 0^^^mov     dword ptr [rbp+var_70], eax^^^call    __profile_frequency^^^mov     rdi, cs:_dl_profile_output^^^mov     rdx, 73646E6F636573h^^^mov     dword ptr [rbp+var_70+4], eax^^^mov     [rbp+var_68], rdx^^^mov     dword ptr [rbp+var_60], 0^^^mov     word ptr [rbp+var_60+4], 0^^^mov     byte ptr [rbp+var_60+6], 0^^^mov     byte ptr [rbp+var_60+7], 73h^^^call    strlen^^^mov     rdi, cs:_dl_profile^^^mov     rbx, rax^^^call    strlen^^^lea     rax, [rbx+rax+28h]^^^mov     rsi, cs:_dl_profile_output^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rbx, [rsp+2C0h+var_2B1]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    near ptr qword_400310^^^mov     rsi, cs:_dl_profile^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 2Fh^^^call    near ptr qword_400310^^^mov     rcx, 656C69666F72702Eh^^^mov     byte ptr [rax+8], 0^^^mov     edx, 1B6h^^^mov     [rax], rcx^^^mov     esi, 20042h^^^xor     eax, eax^^^mov     rdi, rbx^^^call    open64^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jz      loc_47A140^^^lea     rdx, [rbp+var_110]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^js      short loc_47A0BA^^^mov     eax, [rbp+var_F8]^^^and     eax, 0F000h^^^cmp     eax, 8000h^^^jz      loc_47A158^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, offset aSCannotStatFil^^^mov     edi, r13d^^^mov     r14d, fs:[rax]^^^call    close^^^lea     rsi, [rbp+var_2A0]^^^mov     edx, 190h^^^mov     edi, r14d^^^call    strerror_r^^^mov     rdx, rbx^^^mov     rcx, rax^^^mov     rsi, r12^^^mov     edi, 2^^^xor     eax, eax^^^call    _dl_dprintf^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     eax, 100000h^^^jbe     loc_47A51B^^^mov     cs:fromlimit, 100000h^^^mov     r15d, 14000048h^^^mov     [rbp+var_2A8], 1000000h^^^jmp     loc_479FB1^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, offset aSCannotOpenFil^^^mov     r14d, fs:[rax]^^^jmp     short loc_47A0D3^^^mov     rax, [rbp+var_E0]^^^add     r15, r14^^^mov     [rbp+var_2B0], r15^^^test    rax, rax^^^jz      loc_47A39F^^^cmp     [rbp+var_2B0], rax^^^jz      short loc_47A1B3^^^mov     edi, r13d^^^call    close^^^mov     rcx, cs:_dl_profile^^^mov     rdx, rbx^^^mov     esi, offset aSFileIsNoCorre^^^mov     edi, 2^^^xor     eax, eax^^^call    _dl_dprintf^^^jmp     loc_47A0FC^^^test    rax, rax^^^js      loc_47A4C1^^^mov     rsp, [rbp-2B8h]^^^mov     rsi, [rbp+var_2B0]^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, r13d^^^mov     ecx, 1^^^mov     edx, 3^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r15, rax^^^jz      loc_47A38D^^^mov     edi, r13d^^^call    close^^^lea     r8, [r15+40h]^^^cmp     [rbp+var_E0], 0^^^lea     r13, [r8+r14+4]^^^lea     rax, [r13+4]^^^mov     cs:narcsp, r13^^^mov     cs:data, rax^^^jnz     loc_47A456^^^mov     rax, [rbp+var_50]^^^mov     dword ptr [r15+14h], 0^^^mov     [r15], rax^^^mov     rax, [rbp+var_48]^^^mov     [r15+8], rax^^^mov     eax, [rbp+var_40]^^^mov     [r15+10h], eax^^^mov     rax, [rbp+var_80]^^^mov     [r15+18h], rax^^^mov     rax, [rbp+var_78]^^^mov     [r15+20h], rax^^^mov     rax, [rbp+var_70]^^^mov     [r15+28h], rax^^^mov     rax, [rbp+var_68]^^^mov     [r15+30h], rax^^^mov     rax, [rbp+var_60]^^^mov     [r15+38h], rax^^^mov     dword ptr [r13-4], 1^^^mov     rdi, [rbp+var_2A8]^^^mov     esi, 1^^^mov     [rbp+var_2C0], r8^^^add     rdi, r14^^^call    calloc^^^test    rax, rax^^^mov     cs:tos, rax^^^mov     r8, [rbp+var_2C0]^^^jz      loc_47A53D^^^mov     esi, cs:fromlimit^^^mov     cs:fromidx, 0^^^lea     r11, [rax+r14]^^^mov     edx, [r13+0]^^^mov     cs:froms, r11^^^cmp     edx, esi^^^jnb     short loc_47A2B6^^^mov     esi, [r13+0]^^^test    rsi, rsi^^^mov     cs:narcs, esi^^^jz      short loc_47A317^^^lea     rdx, [rsi+rsi*4]^^^lea     rdx, [r13+rdx*4-8]^^^nop     word ptr [rax+rax+00h]^^^mov     r9d, cs:fromidx^^^mov     rcx, [rdx]^^^lea     r10, [rdx-8]^^^sub     rdx, 14h^^^mov     edi, r9d^^^add     r9d, 1^^^shr     rcx, 2^^^mov     cs:fromidx, r9d^^^mov     r9, rdi^^^lea     rcx, [rax+rcx*2]^^^shl     r9, 4^^^add     r9, r11^^^sub     rsi, 1^^^mov     [r9], r10^^^movzx   r10d, word ptr [rcx]^^^mov     [r9+8], r10w^^^mov     [rcx], di^^^jnz     short loc_47A2D0^^^mov     rsi, cs:lowpc^^^mov     eax, 10000h^^^sub     r12, rsi^^^cmp     r14, r12^^^jnb     short loc_47A35B^^^xor     edx, edx^^^mov     rax, r12^^^div     r14^^^mov     rdi, rax^^^mov     eax, 1^^^cmp     rdi, 0FFFFh^^^ja      short loc_47A35B^^^cmp     rdi, 0FFh^^^jbe     loc_47A4CD^^^mov     eax, 10000h^^^xor     edx, edx^^^div     rdi^^^mov     rdx, rsi^^^mov     ecx, eax^^^mov     rsi, r14^^^mov     rdi, r8^^^call    profil^^^mov     cs:running, 1^^^jmp     loc_47A0FC^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^xor     esi, esi^^^xor     edi, edi^^^mov     r8, rcx^^^jmp     loc_479F2B^^^mov     r12d, offset aSCannotMapFile^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^jmp     loc_47A0C7^^^mov     rcx, cs:_dl_pagesize^^^mov     esi, 10h^^^xor     edx, edx^^^mov     [rbp-2B8h], rsp^^^lea     rax, [rcx+1Eh]^^^mov     [rbp+var_2C0], rcx^^^div     rsi^^^mov     rdx, rcx^^^xor     sil, sil^^^shl     rax, 4^^^sub     rsp, rax^^^lea     r15, [rsp+2C0h+var_2B1]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r15^^^call    sub_400390^^^mov     rcx, [rbp+var_2C0]^^^mov     rsi, [rbp+var_2B0]^^^xor     edx, edx^^^mov     edi, r13d^^^neg     rcx^^^and     rsi, rcx^^^call    lseek64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47A4C1^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rdx, cs:_dl_pagesize^^^mov     rsi, r15^^^mov     edi, r13d^^^sub     rdx, 1^^^and     rdx, [rbp+var_2B0]^^^call    write^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     loc_47A1A3^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 4^^^jz      short loc_47A410^^^mov     r12d, offset aSCannotCreateF^^^mov     rsp, [rbp-2B8h]^^^jmp     loc_47A0C7^^^lea     rsi, [rbp+var_50]^^^mov     edx, 14h^^^mov     rdi, r15^^^mov     [rbp+var_2C0], r8^^^call    sub_400370^^^test    eax, eax^^^jnz     short loc_47A4A4^^^mov     eax, [r15+14h]^^^test    eax, eax^^^jnz     short loc_47A4A4^^^lea     rdi, [r15+18h]^^^lea     rsi, [rbp+var_80]^^^mov     edx, 28h^^^call    sub_400370^^^test    eax, eax^^^mov     r8, [rbp+var_2C0]^^^jnz     short loc_47A4A4^^^mov     eax, [r13-4]^^^cmp     eax, 1^^^jz      loc_47A25D^^^test    r15, r15^^^jz      loc_47A183^^^mov     rsi, [rbp+var_2B0]^^^mov     rdi, r15^^^call    munmap^^^jmp     loc_47A183^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^jmp     loc_47A444^^^mov     rax, 0FFFFFFFFFFFFFFh^^^cmp     r12, rax^^^jbe     short loc_47A4FD^^^mov     rcx, r14^^^mov     rax, r12^^^xor     edx, edx^^^shr     rcx, 8^^^div     rcx^^^xor     edx, edx^^^mov     rcx, rax^^^mov     eax, 1000000h^^^div     rcx^^^jmp     loc_47A35B^^^mov     rax, r12^^^xor     edx, edx^^^shl     rax, 8^^^div     r14^^^xor     edx, edx^^^mov     rcx, rax^^^mov     eax, 1000000h^^^div     rcx^^^jmp     loc_47A35B^^^mov     rdx, rax^^^shl     rax, 6^^^shl     rdx, 4^^^add     rax, rdx^^^mov     [rbp+var_2A8], rdx^^^lea     r15, ds:48h[rax*4]^^^jmp     loc_479FB1^^^mov     rsi, [rbp+var_2B0]^^^mov     rdi, r15^^^call    munmap^^^mov     edi, 2^^^mov     esi, offset aOutOfMemoryWhi^^^xor     eax, eax^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^
_L_lock_1183$$$lea     rdi, syslog_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40FFF7^^^
_nl_find_msg$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 88h^^^mov     r10d, [rdi+8]^^^mov     [rbp+var_78], rdi^^^mov     [rbp+var_90], rsi^^^mov     [rbp+var_68], rdx^^^mov     dword ptr [rbp+var_80], ecx^^^mov     [rbp+var_88], r8^^^test    r10d, r10d^^^jle     loc_412840^^^mov     rax, [rbp+var_78]^^^mov     rbx, [rax+10h]^^^test    rbx, rbx^^^jz      loc_412720^^^cmp     qword ptr [rbx+60h], 0^^^mov     edx, [rbx+28h]^^^mov     [rbp+var_54], edx^^^jz      loc_412738^^^mov     rdi, [rbp+var_68]^^^call    strlen^^^mov     rdi, [rbp+var_68]^^^mov     dword ptr [rbp+var_60], eax^^^call    __hash_string^^^mov     esi, [rbx+58h]^^^xor     edx, edx^^^mov     r15d, eax^^^div     esi^^^lea     ecx, [rsi-2]^^^mov     eax, r15d^^^mov     r14d, esi^^^mov     r13d, edx^^^xor     edx, edx^^^div     ecx^^^mov     eax, dword ptr [rbp+var_60]^^^mov     ecx, [rbx+68h]^^^mov     [rbp+var_70], rax^^^mov     eax, ecx^^^lea     r15d, [rdx+1]^^^mov     rdx, [rbx+60h]^^^mov     r8d, r15d^^^sub     r14d, r15d^^^mov     ecx, r15d^^^sub     r8d, esi^^^mov     r15d, eax^^^jmp     loc_41255A^^^mov     r9, [rbx+30h]^^^mov     edi, [rbx+18h]^^^mov     eax, r12d^^^lea     rax, [r9+rax*8]^^^test    edi, edi^^^mov     esi, [rax]^^^jz      short loc_4124EE^^^bswap   esi^^^cmp     esi, dword ptr [rbp+var_60]^^^jb      short loc_412546^^^test    edi, edi^^^mov     rsi, [rbx]^^^jz      loc_412710^^^mov     eax, [rax+4]^^^bswap   eax^^^mov     eax, eax^^^mov     rdi, [rbp+var_68]^^^add     rsi, rax^^^mov     [rbp+var_B0], rdx^^^mov     dword ptr [rbp+var_A8], ecx^^^mov     [rbp+var_A0], r8d^^^call    sub_4003A0^^^test    eax, eax^^^mov     rdx, [rbp+var_B0]^^^mov     ecx, dword ptr [rbp+var_A8]^^^setz    al^^^mov     r8d, [rbp+var_A0]^^^test    al, al^^^jnz     loc_4125D9^^^lea     eax, [r13+r8+0]^^^lea     esi, [r13+rcx+0]^^^cmp     r13d, r14d^^^mov     r13d, eax^^^cmovb   r13d, esi^^^mov     eax, r13d^^^test    r15d, r15d^^^mov     r12d, [rdx+rax*4]^^^jz      short loc_412569^^^bswap   r12d^^^test    r12d, r12d^^^jz      loc_412720^^^sub     r12d, 1^^^cmp     [rbp+var_54], r12d^^^ja      loc_4124D8^^^mov     eax, r12d^^^sub     eax, [rbp+var_54]^^^mov     rsi, [rbp+var_70]^^^shl     rax, 4^^^add     rax, [rbx+48h]^^^cmp     [rax], rsi^^^jbe     short loc_412546^^^mov     rsi, [rax+8]^^^mov     rdi, [rbp+var_68]^^^mov     [rbp+var_B0], rdx^^^mov     dword ptr [rbp+var_A8], ecx^^^mov     [rbp+var_A0], r8d^^^call    sub_4003A0^^^test    eax, eax^^^mov     r8d, [rbp+var_A0]^^^mov     ecx, dword ptr [rbp+var_A8]^^^setz    al^^^mov     rdx, [rbp+var_B0]^^^test    al, al^^^jz      loc_412546^^^mov     edx, [rbp+var_54]^^^mov     [rbp+var_70], rdx^^^cmp     r12, [rbp+var_70]^^^jnb     loc_4127E8^^^mov     edi, [rbx+18h]^^^mov     rdx, [rbx]^^^lea     rax, ds:0[r12*8]^^^test    edi, edi^^^jz      loc_412820^^^add     rax, [rbx+38h]^^^mov     esi, dword ptr [rbp+var_80]^^^mov     ecx, [rax+4]^^^mov     eax, [rax]^^^bswap   ecx^^^bswap   eax^^^mov     ecx, ecx^^^add     eax, 1^^^test    esi, esi^^^lea     r14, [rdx+rcx]^^^mov     [rbp+var_68], rax^^^jz      loc_41280D^^^cmp     [rbp+var_90], 0^^^jz      loc_41284A^^^mov     rsi, [rbp+var_90]^^^mov     r15, [rsi+10h]^^^test    r15, r15^^^jz      loc_41284A^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_41265D^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^mov     rdx, [rbx+78h]^^^xor     r13d, r13d^^^test    rdx, rdx^^^jz      short loc_4126B0^^^lea     rax, [rdx+rdx*2]^^^mov     [rbp+var_60], r12^^^mov     r12, rbx^^^lea     r13, ds:0FFFFFFFFFFFFFFE8h[rax*8]^^^add     r13, [rbx+70h]^^^mov     rbx, rdx^^^jmp     short loc_412695^^^sub     r13, 18h^^^test    rbx, rbx^^^jz      loc_412882^^^mov     rdi, [r13+0]^^^mov     rsi, r15^^^sub     rbx, 1^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_412688^^^mov     rbx, r12^^^mov     r12, [rbp+var_60]^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_4126C6^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^test    r13, r13^^^jz      loc_412891^^^cmp     qword ptr [r13+8], 0FFFFFFFFFFFFFFFFh^^^jz      loc_41280D^^^mov     rax, [r13+10h]^^^test    rax, rax^^^jz      loc_412E83^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_412E7B^^^mov     rax, [rax+r12*8]^^^test    rax, rax^^^jz      loc_412933^^^lea     r14, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp+var_68], rax^^^jmp     loc_41280D^^^mov     eax, [rax+4]^^^jmp     loc_412505^^^xor     r14d, r14d^^^lea     rsp, [rbp-28h]^^^mov     rax, r14^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     ecx, [rbp+var_54]^^^xor     r13d, r13d^^^mov     [rbp+var_70], rcx^^^mov     r14, rcx^^^jmp     short loc_41277D^^^mov     rcx, [rbp+var_60]^^^lea     r12, [r14+r13]^^^mov     rdi, [rbp+var_68]^^^shr     r12, 1^^^mov     esi, [rcx+r12*8+4]^^^add     rsi, r15^^^call    sub_4003A0^^^test    eax, eax^^^js      short loc_4127D0^^^test    eax, eax^^^jz      loc_4125E0^^^lea     r13, [r12+1]^^^cmp     r14, r13^^^jbe     short loc_412720^^^mov     r8d, [rbx+18h]^^^mov     rdx, [rbx+30h]^^^mov     r15, [rbx]^^^test    r8d, r8d^^^mov     [rbp+var_60], rdx^^^jz      short loc_412750^^^lea     r12, [r14+r13]^^^mov     rdi, [rbp+var_68]^^^shr     r12, 1^^^mov     esi, [rdx+r12*8+4]^^^bswap   esi^^^mov     esi, esi^^^add     rsi, r15^^^call    sub_4003A0^^^test    eax, eax^^^jns     short loc_412770^^^cmp     r12, r13^^^jbe     loc_412720^^^mov     r14, r12^^^mov     rdx, [rbp+var_60]^^^jmp     short loc_412796^^^cmp     r13, r12^^^jnb     loc_412720^^^mov     r14, r12^^^jmp     loc_412750^^^mov     rax, r12^^^sub     rax, [rbp+var_70]^^^shl     rax, 4^^^add     rax, [rbx+50h]^^^mov     r14, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp+var_68], rax^^^mov     esi, dword ptr [rbp+var_80]^^^test    esi, esi^^^jnz     loc_412625^^^mov     rdx, [rbp+var_68]^^^mov     rax, [rbp+var_88]^^^mov     [rax], rdx^^^jmp     loc_412723^^^add     rax, [rbx+38h]^^^mov     r14d, [rax+4]^^^mov     eax, [rax]^^^add     eax, 1^^^add     r14, rdx^^^mov     [rbp+var_68], rax^^^jmp     short loc_412802^^^call    _nl_load_domain^^^jmp     loc_41245A^^^mov     ecx, cs:output_charset_cached_11289^^^mov     r15, cs:output_charset_cache_11288^^^test    ecx, ecx^^^jz      loc_412AE8^^^test    r15, r15^^^jnz     loc_412647^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r15, [rax+0B0h]^^^jmp     loc_412647^^^mov     rbx, r12^^^xor     r13d, r13d^^^mov     r12, [rbp+var_60]^^^jmp     loc_4126B0^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_4128A7^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^mov     rdx, [rbx+78h]^^^test    rdx, rdx^^^mov     [rbp+var_60], rdx^^^jz      loc_412E38^^^mov     rsi, [rbx+70h]^^^lea     rax, [rdx+rdx*2]^^^mov     rcx, rdx^^^mov     [rbp+var_80], rbx^^^mov     [rbp+var_98], r12^^^mov     rbx, r15^^^mov     r15, rcx^^^lea     rdx, [rsi+rax*8-18h]^^^mov     [rbp+var_70], rsi^^^mov     r13, rdx^^^jmp     short loc_4128F5^^^sub     r13, 18h^^^test    r15, r15^^^jz      loc_412BBC^^^mov     rdi, [r13+0]^^^mov     rsi, rbx^^^sub     r15, 1^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_4128E8^^^mov     rbx, [rbp+var_80]^^^mov     r12, [rbp+var_98]^^^mov     esi, 0^^^test    rsi, rsi^^^jz      loc_4126CF^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^jmp     loc_4126CF^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412951^^^lock cmpxchg cs:lock_11232, esi^^^jnz     _L_lock_1258^^^jmp     short loc_41295E^^^cmpxchg cs:lock_11232, esi^^^jnz     _L_lock_1258^^^mov     rax, cs:freemem_11243^^^mov     r15, cs:freemem_size_11244^^^xor     ebx, ebx^^^mov     [rbp+var_50], r14^^^add     rax, 8^^^mov     rcx, r15^^^mov     r15, r12^^^mov     [rbp+var_40], rax^^^mov     r12, [rbp+var_68]^^^jmp     loc_412A0D^^^test    ebx, ebx^^^jz      loc_412A5E^^^add     ebx, 1^^^mov     rdx, cs:transmem_list^^^imul    ecx, ebx, 0FF0h^^^mov     rdi, rdx^^^mov     [rbp+var_B0], rdx^^^movsxd  rcx, ecx^^^mov     rsi, rcx^^^mov     cs:freemem_size_11244, rcx^^^mov     [rbp+var_A8], rcx^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_B0]^^^mov     rcx, [rbp+var_A8]^^^jz      loc_412A8E^^^mov     rdx, [rdx]^^^sub     rcx, 8^^^mov     [rax], rdx^^^lea     rdx, [rax+8]^^^mov     cs:transmem_list, rax^^^add     rax, 10h^^^mov     cs:freemem_size_11244, rcx^^^mov     cs:freemem_11243, rdx^^^mov     [rbp+var_40], rax^^^cmp     rcx, 7^^^jbe     loc_412990^^^mov     rdx, r12^^^add     rdx, [rbp+var_50]^^^mov     rdi, [r13+8]^^^lea     r8, [rax+rcx-8]^^^lea     r9, [rbp+var_38]^^^lea     rcx, [rbp+var_40]^^^lea     rsi, [rbp+var_50]^^^call    __gconv^^^cmp     eax, 4^^^jz      loc_412B19^^^test    eax, eax^^^jz      loc_412B19^^^cmp     eax, 5^^^jnz     loc_412B90^^^test    ebx, ebx^^^mov     [rbp+var_50], r14^^^jnz     loc_412998^^^mov     edi, 0FF0h^^^mov     cs:freemem_size_11244, 0FF0h^^^call    malloc^^^test    rax, rax^^^jz      short loc_412AA0^^^mov     rdx, cs:transmem_list^^^mov     ecx, 0FE8h^^^mov     ebx, 1^^^jmp     loc_4129E9^^^mov     rax, [rdx]^^^mov     rdi, rdx^^^mov     cs:transmem_list, rax^^^call    free^^^mov     cs:freemem_11243, 0^^^mov     cs:freemem_size_11244, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412ACE^^^lock dec cs:lock_11232^^^jnz     _L_unlock_1405^^^jmp     short loc_412ADA^^^dec     cs:lock_11232^^^jnz     _L_unlock_1405^^^or      r14, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_412723^^^mov     edi, offset aOutput_charset^^^call    getenv^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_412B03^^^cmp     byte ptr [rax], 0^^^jnz     loc_412DF7^^^mov     r15, cs:output_charset_cache_11288^^^mov     cs:output_charset_cached_11289, 1^^^jmp     loc_41285F^^^mov     rax, cs:freemem_11243^^^mov     rdx, [rbp+var_40]^^^sub     rdx, rax^^^sub     rdx, 8^^^mov     [rax], rdx^^^mov     rdx, [r13+10h]^^^mov     [rdx+r15*8], rax^^^mov     rdx, [rbp+var_40]^^^sub     rax, rdx^^^add     rax, cs:freemem_size_11244^^^mov     rcx, rax^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^and     ecx, 7^^^mov     cs:freemem_size_11244, rax^^^add     rdx, rcx^^^mov     cs:freemem_11243, rdx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412B77^^^lock dec cs:lock_11232^^^jnz     _L_unlock_1480^^^jmp     short loc_412B83^^^dec     cs:lock_11232^^^jnz     _L_unlock_1480^^^mov     rax, [r13+10h]^^^mov     rax, [rax+r15*8]^^^jmp     loc_4126FE^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412BA8^^^lock dec cs:lock_11232^^^jnz     _L_unlock_1492^^^jmp     short loc_412BB4^^^dec     cs:lock_11232^^^jnz     _L_unlock_1492^^^xor     r14d, r14d^^^jmp     loc_412723^^^mov     r15, rbx^^^mov     r12, [rbp+var_98]^^^mov     rbx, [rbp+var_80]^^^mov     rdi, [rbp+var_70]^^^mov     rcx, [rbp+var_60]^^^lea     rsi, [rcx+rcx*2+3]^^^shl     rsi, 3^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_412EE2^^^mov     rdi, r15^^^mov     [rbx+70h], rax^^^call    strdup^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_412EE2^^^mov     rdx, [rbp+var_60]^^^mov     rsi, [rbp+var_90]^^^lea     r8, [rbp+var_38]^^^mov     rdi, [rbp+var_78]^^^xor     ecx, ecx^^^lea     rax, [rdx+rdx*2]^^^mov     edx, offset unk_49A0C9^^^lea     r13, [r13+rax*8+0]^^^mov     [r13+0], r15^^^mov     qword ptr [r13+8], 0FFFFFFFFFFFFFFFFh^^^call    _nl_find_msg^^^test    rax, rax^^^jz      loc_412DE5^^^mov     esi, offset aCharset^^^mov     rdi, rax^^^call    sub_400360^^^test    rax, rax^^^jz      loc_412DE5^^^movzx   ecx, byte ptr [rax+8]^^^xor     edx, edx^^^lea     rsi, [rax+8]^^^test    cl, cl^^^jnz     short loc_412C87^^^jmp     short loc_412C8F^^^cmp     ecx, 9^^^jz      short loc_412C8F^^^cmp     ecx, 0Ah^^^jz      short loc_412C8F^^^add     rdx, 1^^^movzx   ecx, byte ptr [rax+rdx+8]^^^test    cl, cl^^^jz      short loc_412C8F^^^movsx   ecx, cl^^^cmp     ecx, 20h^^^jnz     short loc_412C70^^^lea     rax, [rdx+1Fh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rcx, [rsp+0B0h+var_A8+7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rcx^^^mov     [rbp+var_A8], rcx^^^call    mempcpy^^^xor     edi, edi^^^mov     byte ptr [rax], 0^^^mov     rax, r15^^^mov     rcx, [rbp+var_A8]^^^jmp     short loc_412CD8^^^add     rax, 1^^^cmp     dl, 2Fh^^^setz    dl^^^movzx   edx, dl^^^add     rdi, rdx^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jnz     short loc_412CC8^^^sub     rax, r15^^^movzx   edx, byte ptr [r15]^^^add     rax, 29h^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r8, [rsp+0B0h+var_A8+7]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^test    dl, dl^^^mov     rax, r8^^^jz      short loc_412D24^^^mov     r9, cs:off_499B18^^^mov     rsi, r15^^^movsx   rdx, dl^^^add     rsi, 1^^^mov     edx, [r9+rdx*4]^^^mov     [rax], dl^^^movzx   edx, byte ptr [rsi]^^^add     rax, 1^^^test    dl, dl^^^jnz     short loc_412D0B^^^cmp     rdi, 1^^^jbe     loc_412E59^^^mov     byte ptr [rax], 0^^^xor     edi, edi^^^mov     rax, rcx^^^jmp     short loc_412D48^^^add     rax, 1^^^cmp     dl, 2Fh^^^setz    dl^^^movzx   edx, dl^^^add     rdi, rdx^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jnz     short loc_412D38^^^sub     rax, rcx^^^movzx   edx, byte ptr [rcx]^^^add     rax, 21h^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rsi, [rsp+0B0h+var_A8+7]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^test    dl, dl^^^mov     rax, rsi^^^jz      short loc_412D90^^^mov     r9, cs:off_499B18^^^movsx   rdx, dl^^^add     rcx, 1^^^mov     edx, [r9+rdx*4]^^^mov     [rax], dl^^^movzx   edx, byte ptr [rcx]^^^add     rax, 1^^^test    dl, dl^^^jnz     short loc_412D77^^^cmp     rdi, 1^^^jbe     loc_412E48^^^lea     rdx, [r13+8]^^^mov     byte ptr [rax], 0^^^mov     ecx, 1^^^mov     rdi, r8^^^call    __gconv_open^^^test    eax, eax^^^jz      short loc_412DE5^^^add     eax, 1^^^jz      short loc_412DDD^^^mov     ecx, 0^^^test    rcx, rcx^^^jz      short loc_412DCD^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^mov     rdi, r15^^^xor     r14d, r14d^^^call    free^^^jmp     loc_412723^^^mov     qword ptr [r13+8], 0FFFFFFFFFFFFFFFFh^^^mov     qword ptr [r13+10h], 0^^^add     qword ptr [rbx+78h], 1^^^jmp     loc_412914^^^mov     rdi, rax^^^call    strlen^^^lea     rdx, [rax+1]^^^mov     rdi, rdx^^^mov     [rbp+var_B0], rdx^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp+var_B0]^^^jz      short loc_412E2C^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     cs:output_charset_cache_11288, r15^^^jmp     loc_412B0A^^^mov     rcx, [rbx+70h]^^^mov     [rbp+var_70], rcx^^^mov     rdi, rcx^^^jmp     loc_412BCE^^^test    rdi, rdi^^^mov     byte ptr [rax], 2Fh^^^jz      short loc_412E6E^^^add     rax, 1^^^jmp     loc_412D9A^^^test    rdi, rdi^^^mov     byte ptr [rax], 2Fh^^^jz      loc_412F05^^^add     rax, 1^^^jmp     loc_412D2E^^^mov     byte ptr [rax+1], 2Fh^^^add     rax, 2^^^jmp     loc_412D9A^^^mov     r14, rax^^^jmp     loc_412723^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412EA1^^^lock cmpxchg cs:lock_11232, esi^^^jnz     _L_lock_2074^^^jmp     short loc_412EAE^^^cmpxchg cs:lock_11232, esi^^^jnz     _L_lock_2074^^^cmp     qword ptr [r13+10h], 0^^^jz      short loc_412F20^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_412ECD^^^lock dec cs:lock_11232^^^jnz     _L_unlock_2081^^^jmp     short loc_412ED9^^^dec     cs:lock_11232^^^jnz     _L_unlock_2081^^^mov     rax, [r13+10h]^^^jmp     loc_4126E7^^^mov     esi, 0^^^or      r14, 0FFFFFFFFFFFFFFFFh^^^test    rsi, rsi^^^jz      loc_412723^^^lea     rdi, [rbx+80h]^^^call    near ptr 0^^^jmp     loc_412723^^^mov     rdx, 54494C534E415254h^^^mov     byte ptr [rax+1], 2Fh^^^mov     [rax+2], rdx^^^add     rax, 0Ah^^^jmp     loc_412D2E^^^mov     edi, [rbp+var_54]^^^add     edi, [rbx+40h]^^^mov     esi, 8^^^call    calloc^^^test    rax, rax^^^mov     [r13+10h], rax^^^jnz     loc_41295E^^^mov     qword ptr [r13+10h], 0FFFFFFFFFFFFFFFFh^^^jmp     loc_412EB5^^^
__do_global_dtors_aux$$$push    rbp^^^mov     rbp, rsp^^^push    rbx^^^sub     rsp, 8^^^cmp     cs:completed_6036, 0^^^jnz     short loc_401111^^^mov     ebx, offset __DTOR_END__^^^mov     rax, cs:dtor_idx_6038^^^sub     rbx, offset __DTOR_LIST__^^^sar     rbx, 3^^^sub     rbx, 1^^^cmp     rax, rbx^^^jnb     short loc_4010F6^^^nop     word ptr [rax+rax+00h]^^^add     rax, 1^^^mov     cs:dtor_idx_6038, rax^^^call    ds:__DTOR_LIST__[rax*8]^^^mov     rax, cs:dtor_idx_6038^^^cmp     rax, rbx^^^jb      short loc_4010D8^^^mov     eax, offset __deregister_frame_info^^^test    rax, rax^^^jz      short loc_40110A^^^mov     edi, offset __EH_FRAME_BEGIN__^^^call    __deregister_frame_info^^^mov     cs:completed_6036, 1^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^
_L_lock_13361$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_408C52^^^
__libc_dlopen_mode$$$sub     rsp, 78h^^^mov     ecx, offset do_dlopen^^^mov     rax, [rsp+78h]^^^mov     [rsp+78h+var_68], rdi^^^lea     r8, [rsp+78h+var_68]^^^mov     [rsp+78h+var_60], esi^^^lea     rdx, [rsp+78h+var_9]^^^lea     rsi, [rsp+78h+var_28]^^^lea     rdi, [rsp+78h+var_18]^^^mov     [rsp+78h+var_28], 0^^^mov     [rsp+78h+var_58], rax^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     loc_47AAD0^^^cmp     [rsp+78h+var_28], 0^^^jnz     loc_47AAD0^^^mov     rax, [rsp+78h+var_50]^^^lea     r8, [rsp+78h+var_48]^^^lea     rdx, [rsp+78h+var_9]^^^lea     rsi, [rsp+78h+var_28]^^^lea     rdi, [rsp+78h+var_18]^^^mov     ecx, offset do_dlsym_private^^^mov     [rsp+78h+var_40], offset a_dl_open_hook^^^mov     [rsp+78h+var_28], 0^^^mov     [rsp+78h+var_48], rax^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     short loc_47AAF8^^^cmp     [rsp+78h+var_28], 0^^^jnz     short loc_47AAF8^^^mov     rdx, [rsp+78h+var_38]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_47AAA7^^^mov     rax, [rdx]^^^mov     rdx, [rsp+78h+var_30]^^^add     rax, [rdx+8]^^^jz      short loc_47AB09^^^mov     qword ptr [rax], offset _dl_open_hook^^^mov     rdi, [rsp+78h+var_50]^^^call    __libc_register_dlfcn_hook^^^mov     rax, [rsp+78h+var_50]^^^add     rsp, 78h^^^retn^^^xor     eax, eax^^^cmp     [rsp+78h+var_9], 0^^^jz      short loc_47AAC8^^^mov     rdi, [rsp+78h+var_28]^^^mov     [rsp+78h+var_70], rax^^^call    free^^^mov     rax, [rsp+78h+var_70]^^^add     rsp, 78h^^^retn^^^cmp     [rsp+78h+var_9], 0^^^jz      short loc_47AB09^^^mov     rdi, [rsp+78h+var_28]^^^call    free^^^mov     rdi, [rsp+78h+var_50]^^^call    __libc_register_dlfcn_hook^^^mov     rax, [rsp+78h+var_50]^^^jmp     short loc_47AAC8^^^
mallopt$$$jmp     mALLOPt         ^^^
__dladdr$$$xor     ecx, ecx^^^xor     edx, edx^^^jmp     _dl_addr^^^
_IO_fwide$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^xor     edx, edx^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 48h^^^cmp     esi, 0^^^mov     rbx, rdi^^^mov     ebp, 0FFFFFFFFh^^^jl      short loc_474E94^^^setnz   bpl^^^movzx   ebp, bpl^^^test    ebp, ebp^^^setz    dl^^^test    dl, dl^^^mov     eax, [rbx+0C0h]^^^jnz     loc_475033^^^test    eax, eax^^^jnz     loc_475033^^^cmp     ebp, 1^^^jnz     loc_47502B^^^mov     r12, [rbx+0A0h]^^^mov     rdi, rsp^^^mov     rax, [r12+8]^^^lea     r13, [r12+68h]^^^mov     [rbx+98h], r13^^^mov     qword ptr [r12+58h], 0^^^mov     [r12], rax^^^mov     rax, [r12+18h]^^^mov     [r12+20h], rax^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+60h], 0^^^call    __wcsmbs_clone_conv^^^cmp     [rsp+48h+var_40], 1^^^jnz     loc_47504C^^^cmp     [rsp+48h+var_30], 1^^^jnz     loc_475065^^^xor     eax, eax^^^mov     ecx, 1Ah^^^mov     rdi, r13^^^rep stosq^^^mov     qword ptr [r12+0A8h], 1^^^mov     dword ptr [r12+0D0h], 1^^^mov     edx, 1^^^mov     dword ptr [r12+0C8h], 1^^^mov     qword ptr [r12+70h], offset do_out^^^xor     esi, esi^^^mov     rax, [rsp+48h+var_48]^^^mov     qword ptr [r12+78h], offset do_unshift^^^mov     rdi, rbx^^^mov     qword ptr [r12+80h], offset do_in^^^mov     qword ptr [r12+88h], offset do_encoding^^^mov     qword ptr [r12+90h], offset do_always_noconv^^^mov     qword ptr [r12+98h], offset do_length^^^mov     [r12+0B0h], rax^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [r12+0F0h], 1^^^mov     dword ptr [r12+118h], 1^^^mov     dword ptr [r12+110h], 1^^^mov     qword ptr [r12+0A0h], offset do_max_length^^^add     rax, 58h^^^mov     [r12+0D8h], rax^^^mov     rax, [rsp+48h+var_38]^^^mov     [r12+0F8h], rax^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [r12+130h], offset __libio_translit^^^add     rax, 58h^^^mov     [r12+120h], rax^^^mov     rax, [rbx+0A0h]^^^mov     rax, [rax+140h]^^^mov     [rbx+0D8h], rax^^^call    qword ptr [rax+80h]^^^mov     [rbx+90h], rax^^^mov     [rbx+0C0h], ebp^^^mov     eax, ebp^^^mov     rbx, [rsp+48h+var_20]^^^mov     rbp, [rsp+48h+var_18]^^^mov     r12, [rsp+48h+var_10]^^^mov     r13, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___13040^^^mov     edx, 8Bh^^^mov     esi, offset aIofwide_c^^^mov     edi, offset aFcts_towc_nste^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___13040^^^mov     edx, 8Ch^^^mov     esi, offset aIofwide_c^^^mov     edi, offset aFcts_tomb_nste^^^call    __assert_fail^^^
__strncasecmp_l_sse2$$$mov     rax, [rcx]      ^^^test    dword ptr [rax+278h], 1^^^jnz     __strncasecmp_l_nonascii^^^test    rdx, rdx^^^jz      loc_4853F1^^^cmp     rdx, 1^^^jz      loc_485400^^^mov     r11, rdx^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm5, cs:xmmword_49CA70^^^movdqa  xmm6, cs:xmmword_49CA80^^^movdqa  xmm7, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_482ED0^^^cmp     eax, 30h^^^ja      loc_482ED0^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853D0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     dword ptr [rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_482F10^^^ja      short loc_482EF3^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_4B2D58^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^jmp     loc_482FB0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4832B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4832B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 1^^^pslldq  xmm2, 0Fh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483170^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_4832E0^^^cmp     r11, 0Fh^^^jbe     short loc_4832E0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48317A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_483500^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_483500^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 2^^^pslldq  xmm2, 0Eh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4833C0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_483530^^^cmp     r11, 0Eh^^^jbe     short loc_483530^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4833CA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_483750^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_483750^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 3^^^pslldq  xmm2, 0Dh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483610^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_483780^^^cmp     r11, 0Dh^^^jbe     short loc_483780^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48361A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4839A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4839A0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 4^^^pslldq  xmm2, 0Ch^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483860^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_4839D0^^^cmp     r11, 0Ch^^^jbe     short loc_4839D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48386A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_483BF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_483BF0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 5^^^pslldq  xmm2, 0Bh^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483AB0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_483C20^^^cmp     r11, 0Bh^^^jbe     short loc_483C20^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_483ABA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_483E40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_483E40^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 6^^^pslldq  xmm2, 0Ah^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483D00^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_483E70^^^cmp     r11, 0Ah^^^jbe     short loc_483E70^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_483D0A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_484090^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_484090^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 7^^^pslldq  xmm2, 9^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_483F50^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_4840C0^^^cmp     r11, 9^^^jbe     short loc_4840C0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_483F5A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4842E0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4842E0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 8^^^pslldq  xmm2, 8^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4841A0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_484310^^^cmp     r11, 8^^^jbe     short loc_484310^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4841AA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_484530^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_484530^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 9^^^pslldq  xmm2, 7^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4843F0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_484560^^^cmp     r11, 7^^^jbe     short loc_484560^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4843FA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_484780^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_484780^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ah^^^pslldq  xmm2, 6^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_484640^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_4847B0^^^cmp     r11, 6^^^jbe     short loc_4847B0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48464A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4849D0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4849D0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Bh^^^pslldq  xmm2, 5^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_484890^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_484A00^^^cmp     r11, 5^^^jbe     short loc_484A00^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_48489A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_484C20^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_484C20^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Ch^^^pslldq  xmm2, 4^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_484AE0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_484C50^^^cmp     r11, 4^^^jbe     short loc_484C50^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_484AEA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_484E70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_484E70^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Dh^^^pslldq  xmm2, 3^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_484D30^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_484EA0^^^cmp     r11, 3^^^jbe     short loc_484EA0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_484D3A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4850C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4850C0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Eh^^^pslldq  xmm2, 2^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_484F80^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_4850F0^^^cmp     r11, 2^^^jbe     short loc_4850F0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_484F8A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_485350^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_4853B5^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4853F1^^^test    r9, r9^^^jz      loc_4853F1^^^mov     r11, r9^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_485310^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_485310^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^psrldq  xmm3, 0Fh^^^pslldq  xmm2, 1^^^por     xmm2, xmm3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4853B0^^^sub     r11, 10h^^^jbe     loc_4853F1^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_4851D0^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_485340^^^cmp     r11, 1^^^jbe     short loc_485340^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_4851DA^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm3^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm3^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm3, xmm10^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^nop     word ptr [rax+rax+00000000h]^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_4853D0^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^sub     r11, rdx^^^jbe     short loc_4853F1^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^movzx   ecx, byte ptr [rsi]^^^movzx   eax, byte ptr [rdi]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
closelog$$$sub     rsp, 18h^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_410054^^^lock cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_1244^^^jmp     short loc_410061^^^cmpxchg cs:syslog_lock, esi^^^jnz     _L_lock_1244^^^mov     eax, cs:connected^^^test    eax, eax^^^jnz     short loc_410090^^^mov     cs:LogTag, 0^^^mov     cs:LogType, 2^^^xor     edi, edi^^^add     rsp, 18h^^^jmp     cancel_handler^^^mov     edi, cs:LogFile^^^call    close^^^mov     cs:LogFile, 0FFFFFFFFh^^^mov     cs:connected, 0^^^jmp     short loc_41006B^^^
_L_unlock_4744$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     sub_42B0F0^^^
sub_482AA0$$$mov     rsi, [rbx+18h]^^^mov     edx, 1^^^pop     rbx^^^jmp     _dl_rtld_di_serinfo^^^
_IO_helper_overflow$$$mov     [rsp+var_20], rbx^^^mov     rbx, rdi^^^mov     [rsp+var_18], rbp^^^mov     [rsp+var_8], r13^^^mov     [rsp+var_10], r12^^^sub     rsp, 28h^^^mov     rdx, [rbx+28h]^^^mov     ebp, esi^^^mov     rsi, [rbx+20h]^^^mov     rdi, [rdi+0E0h]^^^mov     r13d, edx^^^sub     r13d, esi^^^jnz     short loc_41A668^^^cmp     rdx, [rbx+30h]^^^jnb     short loc_41A6AF^^^mov     [rdx], bpl^^^add     rdx, 1^^^movzx   eax, bpl^^^mov     [rbx+28h], rdx^^^mov     rbx, [rsp+28h+var_20]^^^mov     rbp, [rsp+28h+var_18]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rax, [rdi+0D8h]^^^movsxd  r13, r13d^^^mov     rdx, r13^^^call    qword ptr [rax+38h]^^^mov     r12, rax^^^lea     rax, [rax-1]^^^cmp     rax, 0FFFFFFFFFFFFFFFDh^^^ja      short loc_41A6A8^^^mov     rdi, [rbx+20h]^^^mov     rdx, r13^^^sub     rdx, r12^^^lea     rsi, [rdi+r12]^^^call    sub_400340^^^mov     rdx, [rbx+28h]^^^sub     rdx, r12^^^mov     [rbx+28h], rdx^^^jmp     short loc_41A634^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_41A649^^^movzx   esi, bpl^^^mov     rdi, rbx^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     __overflow^^^
__dlopen$$$sub     rsp, 28h^^^mov     [rsp+28h+var_28], rdi^^^mov     [rsp+28h+var_20], esi^^^mov     edi, offset dlopen_doit^^^mov     rsi, rsp^^^mov     [rsp+28h+var_10], rdx^^^call    _dlerror_run^^^xor     edx, edx^^^test    eax, eax^^^jnz     short loc_48D52D^^^mov     rdi, [rsp+28h+var_18]^^^call    __libc_register_dl_open_hook^^^mov     rdi, [rsp+28h+var_18]^^^call    __libc_register_dlfcn_hook^^^mov     rdx, [rsp+28h+var_18]^^^mov     rax, rdx^^^add     rsp, 28h^^^retn^^^
tzset$$$sub     rsp, 8^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447BE4^^^lock cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_2118^^^jmp     short loc_447BF1^^^cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_2118^^^mov     edi, 1^^^call    tzset_internal_part_0^^^mov     eax, cs:__use_tzfile^^^test    eax, eax^^^jnz     short loc_447C21^^^mov     rax, cs:tz_rules^^^mov     cs:tzname, rax^^^mov     rax, cs:qword_6C5730^^^mov     cs:off_6C3298, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447C39^^^lock dec cs:tzset_lock^^^jnz     _L_unlock_2135^^^jmp     short loc_447C45^^^dec     cs:tzset_lock^^^jnz     _L_unlock_2135^^^add     rsp, 8^^^retn^^^
_L_unlock_12293$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4084D7^^^
_IO_unsave_wmarkers$$$push    rbx^^^cmp     qword ptr [rdi+60h], 0^^^mov     rbx, rdi^^^jz      short loc_427AF3^^^mov     qword ptr [rdi+60h], 0^^^cmp     qword ptr [rbx+48h], 0^^^jz      short loc_427B30^^^mov     eax, [rbx]^^^test    ah, 1^^^jnz     short loc_427B38^^^mov     rax, [rbx+0A0h]^^^mov     rdi, [rax+40h]^^^call    free^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+40h], 0^^^mov     qword ptr [rax+50h], 0^^^mov     qword ptr [rax+48h], 0^^^pop     rbx^^^retn^^^and     ah, 0FEh^^^mov     [rbx], eax^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax+8]^^^mov     rcx, [rax+50h]^^^mov     [rax+50h], rdx^^^mov     [rax+8], rcx^^^mov     rdx, [rax+40h]^^^mov     rcx, [rax+10h]^^^mov     [rax], rdx^^^mov     [rax+10h], rdx^^^mov     [rax+40h], rcx^^^jmp     short loc_427B08^^^
read_alias_file$$$push    rbp^^^movsxd  rdx, esi^^^mov     rsi, rdi^^^lea     rax, [rdx+2Ch]^^^mov     rbp, rsp^^^push    r15^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 1E8h^^^sub     rsp, rax^^^lea     rbx, [rsp+210h+var_201]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rbx^^^call    mempcpy^^^mov     rdx, 2E656C61636F6C2Fh^^^mov     rdi, rbx^^^mov     dword ptr [rax+8], 61696C61h^^^mov     [rax], rdx^^^mov     word ptr [rax+0Ch], 73h^^^mov     esi, offset aRce^^^call    fopen64^^^xor     ebx, ebx^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_41556E^^^mov     eax, [rax]^^^mov     [rbp+var_1E8], 0^^^or      ah, 80h^^^test    al, 10h^^^mov     [r13+0], eax^^^jnz     loc_415551^^^nop     word ptr [rax+rax+00000000h]^^^lea     rdi, [rbp+var_1C0]^^^mov     rdx, r13^^^mov     esi, 190h^^^call    fgets_unlocked^^^test    rax, rax^^^jz      loc_415551^^^lea     rdi, [rbp+var_1C0]^^^mov     esi, 0Ah^^^lea     rbx, [rbp+var_1C0]^^^call    sub_4003C0^^^mov     r14, rax^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^movzx   edx, [rbp+var_1C0]^^^mov     rax, fs:[rax]^^^movzx   ecx, dl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jz      short loc_415349^^^nop     dword ptr [rax+00h]^^^add     rbx, 1^^^movzx   edx, byte ptr [rbx]^^^movzx   ecx, dl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_415338^^^cmp     dl, 23h^^^jz      loc_415540^^^test    dl, dl^^^jz      loc_415540^^^movzx   ecx, byte ptr [rbx+1]^^^lea     rdx, [rbx+1]^^^test    cl, cl^^^jnz     short loc_41537F^^^jmp     loc_4155B8^^^add     rdx, 1^^^movzx   ecx, byte ptr [rdx]^^^test    cl, cl^^^jz      loc_4155B8^^^movzx   ecx, cl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jz      short loc_415370^^^mov     byte ptr [rdx], 0^^^lea     r12, [rdx+1]^^^movzx   edx, byte ptr [rdx+1]^^^jmp     short loc_4153A9^^^add     r12, 1^^^movzx   edx, byte ptr [r12]^^^movzx   ecx, dl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_4153A0^^^test    dl, dl^^^jz      loc_415540^^^movzx   edx, byte ptr [r12+1]^^^test    dl, dl^^^jz      short loc_4153FA^^^movzx   esi, dl^^^lea     rcx, [r12+1]^^^test    byte ptr [rax+rsi*2+1], 20h^^^jz      short loc_4153F2^^^jmp     loc_415668^^^movzx   esi, dl^^^add     rcx, 1^^^test    byte ptr [rax+rsi*2+1], 20h^^^jnz     loc_415668^^^movzx   edx, byte ptr [rcx+1]^^^test    dl, dl^^^jnz     short loc_4153E0^^^mov     rax, cs:nmap^^^mov     [rbp+var_1C8], rax^^^mov     rax, cs:maxmap^^^cmp     [rbp+var_1C8], rax^^^jb      short loc_415456^^^test    rax, rax^^^mov     esi, 640h^^^mov     r15d, 64h^^^jz      short loc_415433^^^mov     rsi, rax^^^lea     r15, [rax+rax]^^^shl     rsi, 5^^^mov     rdi, cs:map^^^call    realloc^^^test    rax, rax^^^jz      loc_415551^^^mov     cs:map, rax^^^mov     cs:maxmap, r15^^^mov     rdi, rbx^^^call    strlen^^^lea     rdx, [rax+1]^^^mov     rdi, r12^^^mov     [rbp-208h], rdx^^^call    strlen^^^mov     r8, cs:string_space_act^^^mov     rdx, [rbp-208h]^^^lea     rcx, [rax+1]^^^mov     rax, cs:string_space_max^^^lea     rsi, [rdx+r8]^^^mov     [rbp+var_1D8], rsi^^^add     rsi, rcx^^^cmp     rsi, rax^^^mov     [rbp+var_1E0], rsi^^^ja      loc_4155C8^^^mov     r15, cs:string_space^^^mov     rax, cs:map^^^mov     rsi, [rbp+var_1C8]^^^lea     rdi, [r15+r8]^^^mov     [rbp+var_210], rcx^^^shl     rsi, 4^^^add     rsi, rax^^^mov     [rbp+var_1D0], rsi^^^mov     rsi, rbx^^^call    memcpy^^^mov     rdx, [rbp+var_1D0]^^^mov     rdi, [rbp+var_1D8]^^^mov     rsi, r12^^^mov     rcx, [rbp+var_210]^^^mov     [rdx], rax^^^add     rdi, r15^^^mov     rdx, rcx^^^call    memcpy^^^mov     rsi, [rbp+var_1D0]^^^add     [rbp+var_1E8], 1^^^mov     [rsi+8], rax^^^mov     rax, [rbp+var_1E0]^^^mov     cs:string_space_act, rax^^^mov     rax, [rbp+var_1C8]^^^add     rax, 1^^^mov     cs:nmap, rax^^^nop     word ptr [rax+rax+00000000h]^^^test    r14, r14^^^jz      short loc_415580^^^mov     eax, [r13+0]^^^test    al, 10h^^^jz      loc_4152E0^^^mov     rdi, r13^^^mov     rbx, [rbp+var_1E8]^^^call    fclose^^^cmp     [rbp+var_1E8], 0^^^jnz     loc_41567D^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     rdi, [rbp+var_1C0]^^^mov     rdx, r13^^^mov     esi, 190h^^^call    fgets_unlocked^^^test    rax, rax^^^jz      short loc_415545^^^lea     rdi, [rbp+var_1C0]^^^mov     esi, 0Ah^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_415580^^^jmp     short loc_415545^^^mov     r12, rdx^^^xor     edx, edx^^^jmp     loc_4153A9^^^lea     r10, [rcx+rdx]^^^mov     r9, cs:string_space^^^mov     esi, 400h^^^mov     [rbp-208h], rdx^^^mov     [rbp+var_210], rcx^^^cmp     r10, 400h^^^mov     [rbp+var_1F0], r8^^^cmovb   r10, rsi^^^mov     rdi, r9^^^mov     [rbp+var_200], r9^^^add     r10, rax^^^mov     rsi, r10^^^mov     [rbp+var_1F8], r10^^^call    realloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp-208h]^^^mov     rcx, [rbp+var_210]^^^mov     r8, [rbp+var_1F0]^^^mov     r9, [rbp+var_200]^^^mov     r10, [rbp+var_1F8]^^^jz      loc_415551^^^cmp     r9, r15^^^mov     rax, cs:map^^^jnz     short loc_4156A6^^^mov     cs:string_space, r15^^^mov     cs:string_space_max, r10^^^jmp     loc_4154B6^^^cmp     dl, 0Ah^^^mov     byte ptr [rcx], 0^^^jnz     loc_4153FA^^^mov     byte ptr [rcx+1], 0Ah^^^jmp     loc_4153FA^^^mov     rsi, cs:nmap^^^mov     rdi, cs:map^^^mov     ecx, offset alias_compare^^^mov     edx, 10h^^^call    qsort^^^mov     rbx, [rbp+var_1E8]^^^jmp     loc_41556E^^^cmp     [rbp+var_1C8], 0^^^jz      short loc_41564F^^^mov     rsi, r15^^^xor     edi, edi^^^sub     rsi, r9^^^mov     [rbp+var_1D0], rsi^^^mov     rsi, rax^^^movq    xmm1, [rbp+var_1D0]^^^punpcklqdq xmm1, xmm1^^^movdqa  xmm0, xmm1^^^movdqu  xmm1, xmmword ptr [rsi]^^^add     rdi, 1^^^paddq   xmm1, xmm0^^^movdqu  xmmword ptr [rsi], xmm1^^^add     rsi, 10h^^^cmp     rdi, [rbp+var_1C8]^^^jnz     short loc_4156D2^^^jmp     loc_41564F^^^
getdelim$$$push    r15             ^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^mov     rbx, rcx^^^sub     rsp, 28h^^^test    rsi, rsi^^^mov     [rsp+58h+var_48], rsi^^^mov     [rsp+58h+var_3C], edx^^^jz      loc_4746F5^^^test    rdi, rdi^^^jz      loc_4746F5^^^mov     ecx, [rcx]^^^mov     eax, ecx^^^mov     r13d, ecx^^^and     eax, 8000h^^^jnz     short loc_47453A^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_474533^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_47451D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_60^^^jmp     short loc_474526^^^cmpxchg [rdx], esi^^^jnz     _L_lock_60^^^mov     rdx, [rbx+88h]^^^mov     ecx, [rbx]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     r13d, ecx^^^and     ecx, 20h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^jnz     loc_474680^^^cmp     qword ptr [r12], 0^^^jz      short loc_47455C^^^mov     rax, [rsp+58h+var_48]^^^cmp     qword ptr [rax], 0^^^jnz     short loc_47457F^^^mov     rdx, [rsp+58h+var_48]^^^mov     edi, 78h^^^mov     qword ptr [rdx], 78h^^^call    malloc^^^test    rax, rax^^^mov     [r12], rax^^^jz      loc_47470C^^^mov     r14, [rbx+8]^^^mov     r13, [rbx+10h]^^^sub     r13, r14^^^test    r13, r13^^^jle     loc_474662^^^mov     [rsp+58h+var_50], 0^^^jmp     short loc_474611^^^lea     r14, [rdx+rdx]^^^mov     rdi, [r12]^^^cmp     rax, r14^^^cmovnb  r14, rax^^^mov     rsi, r14^^^call    realloc^^^test    rax, rax^^^jz      loc_474670^^^mov     rdx, [rsp+58h+var_48]^^^mov     [r12], rax^^^mov     [rdx], r14^^^mov     r14, [rbx+8]^^^mov     rdi, [rsp+58h+var_50]^^^mov     rdx, r13^^^mov     rsi, r14^^^add     rdi, rax^^^call    memcpy^^^add     [rbx+8], r13^^^test    r15, r15^^^jnz     loc_4746D8^^^mov     rdi, rbx^^^call    __underflow^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_4746D8^^^mov     r14, [rbx+8]^^^mov     r13, [rbx+10h]^^^mov     [rsp+58h+var_50], rbp^^^sub     r13, r14^^^mov     esi, [rsp+58h+var_3C]^^^mov     rdx, r13^^^mov     rdi, r14^^^call    memchr^^^test    rax, rax^^^mov     r15, rax^^^jz      short loc_474632^^^mov     r13, rax^^^sub     r13, r14^^^add     r13, 1^^^mov     rbp, [rsp+58h+var_50]^^^add     rbp, r13^^^cmp     rbp, 0FFFFFFFFFFFFFFFFh^^^jl      loc_474718^^^mov     rcx, [rsp+58h+var_48]^^^lea     rax, [rbp+1]^^^mov     rdx, [rcx]^^^cmp     rax, rdx^^^ja      loc_4745A0^^^mov     rax, [r12]^^^jmp     loc_4745D0^^^mov     rdi, rbx^^^call    __underflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4746E5^^^nop^^^mov     r13d, [rbx]^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^nop     word ptr [rax+rax+00h]^^^and     r13d, 8000h^^^jnz     short loc_4746C1^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_4746C1^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4746B9^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_265^^^jmp     short loc_4746C1^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_265^^^add     rsp, 28h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [r12]^^^mov     byte ptr [rax+rbp], 0^^^mov     r13d, [rbx]^^^jmp     short loc_474680^^^mov     r14, [rbx+8]^^^mov     r13, [rbx+10h]^^^sub     r13, r14^^^jmp     loc_474593^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     short loc_4746C1^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_474680^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, [rbx]^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 4Bh^^^jmp     loc_474680^^^
__dlsym$$$push    rbx^^^mov     eax, 0^^^sub     rsp, 20h^^^test    rax, rax^^^mov     [rsp+28h+var_18], rdx^^^mov     [rsp+28h+var_28], rdi^^^mov     [rsp+28h+var_20], rsi^^^jz      short loc_48D5B7^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     rsi, rsp^^^mov     edi, offset dlsym_doit^^^xor     ebx, ebx^^^call    _dlerror_run^^^test    eax, eax^^^mov     eax, 0^^^cmovz   rbx, [rsp+28h+var_10]^^^test    rax, rax^^^jz      short loc_48D5E2^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^add     rsp, 20h^^^mov     rax, rbx^^^pop     rbx^^^retn^^^
_L_lock_37$$$lea     rdi, lock_10964^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_413B64^^^
_IO_sungetc$$$mov     rax, [rdi+8]^^^cmp     rax, [rdi+18h]^^^push    rbx^^^mov     rbx, rdi^^^jbe     short loc_42C730^^^lea     rdx, [rax-1]^^^mov     [rdi+8], rdx^^^movzx   eax, byte ptr [rax-1]^^^and     dword ptr [rbx], 0FFFFFFEFh^^^pop     rbx^^^retn^^^mov     rax, [rdi+0D8h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+30h]^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_42C72A^^^pop     rbx^^^retn^^^
__mktime_internal$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 138h^^^mov     eax, [rdi]^^^mov     ecx, [rdi+4]^^^mov     [rsp+168h+var_138], rsi^^^xor     esi, esi^^^mov     [rsp+168h+var_F8], rdx^^^mov     edx, [rdi+8]^^^mov     r8d, [rdi+0Ch]^^^mov     [rsp+168h+var_108], eax^^^mov     eax, [rdi+20h]^^^mov     [rsp+168h+var_F0], ecx^^^mov     ecx, [rdi+10h]^^^mov     [rsp+168h+var_EC], edx^^^test    eax, eax^^^setnz   sil^^^sar     eax, 1Fh^^^or      esi, eax^^^mov     eax, ecx^^^mov     [rsp+168h+var_10C], esi^^^mov     esi, 2AAAAAABh^^^imul    esi^^^mov     eax, ecx^^^sar     eax, 1Fh^^^mov     esi, edx^^^sar     esi, 1^^^sub     esi, eax^^^mov     ebp, esi^^^mov     esi, ecx^^^lea     eax, [rbp+rbp*2+0]^^^shl     eax, 2^^^sub     esi, eax^^^movsxd  rax, dword ptr [rbx+14h]^^^mov     edi, esi^^^shr     edi, 1Fh^^^sub     ebp, edi^^^movsxd  rbp, ebp^^^add     rbp, rax^^^xor     eax, eax^^^mov     rcx, rbp^^^and     ecx, 3^^^jnz     short loc_4778E4^^^mov     rax, rbp^^^mov     rdx, 0A3D70A3D70A3D70Bh^^^imul    rdx^^^mov     rax, rbp^^^sar     rax, 3Fh^^^add     rdx, rbp^^^sar     rdx, 6^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^lea     r9, [rax+rax*4]^^^mov     eax, 1^^^shl     r9, 2^^^cmp     rbp, r9^^^jz      loc_4782E0^^^lea     edx, [rdi+rdi]^^^cdqe^^^mov     r12d, [rsp+168h+var_108]^^^movsxd  r8, r8d^^^xor     r15d, r15d^^^mov     [rsp+168h+var_104], 0^^^add     edi, edx^^^lea     rdx, [rax+rax]^^^lea     esi, [rsi+rdi*4]^^^add     rdx, rax^^^lea     rax, [rax+rdx*4]^^^movsxd  rsi, esi^^^mov     rdx, [rsp+168h+var_F8]^^^add     rsi, rax^^^movzx   eax, ds:__mon_yday[rsi+rsi]^^^mov     rdx, [rdx]^^^mov     [rsp+168h+var_100], rdx^^^sub     eax, 1^^^cdqe^^^add     r8, rax^^^test    r12d, r12d^^^mov     [rsp+168h+var_140], r8^^^js      short loc_47794F^^^cmp     [rsp+168h+var_108], 3Bh^^^mov     r15b, 3Bh^^^mov     [rsp+168h+var_104], 3Bh^^^jle     loc_478580^^^mov     r13, rbp^^^xor     eax, eax^^^mov     r8d, 51EB851Fh^^^sar     r13, 2^^^mov     rdi, [rsp+168h+var_138]^^^mov     [rsp+168h+var_150], r8d^^^add     r13d, 1DBh^^^test    rcx, rcx^^^setz    al^^^sub     r13d, eax^^^mov     eax, r13d^^^mov     ecx, r13d^^^imul    r8d^^^mov     eax, r13d^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^mov     r14d, edx^^^lea     eax, [rax+rax*4]^^^sub     ecx, eax^^^mov     eax, ecx^^^shr     eax, 1Fh^^^sub     r14d, eax^^^lea     rax, [rbp-46h]^^^mov     ecx, r14d^^^sar     ecx, 2^^^lea     rdx, [rax+rax*8]^^^mov     [rsp+168h+var_12C], ecx^^^movsxd  rcx, [rsp+168h+var_EC]^^^lea     rax, [rax+rdx*8]^^^lea     rdx, [rax+rax*4]^^^mov     eax, r13d^^^add     rdx, [rsp+168h+var_140]^^^mov     [rsp+168h+var_128], rcx^^^movsxd  rcx, [rsp+168h+var_F0]^^^sub     eax, r14d^^^mov     [rsp+168h+var_120], rcx^^^mov     ecx, [rsp+168h+var_12C]^^^lea     eax, [rcx+rax-1DDh]^^^mov     rcx, [rsp+168h+var_128]^^^cdqe^^^add     rax, rdx^^^lea     rax, [rax+rax*2]^^^lea     rax, [rcx+rax*8]^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^add     rax, [rsp+168h+var_120]^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^lea     rdx, [rsp+168h+var_E8]^^^add     rax, r15^^^mov     [rsp+168h+var_118], rax^^^mov     eax, dword ptr [rsp+168h+var_100]^^^neg     eax^^^cdqe^^^sub     [rsp+168h+var_118], rax^^^mov     rsi, [rsp+168h+var_118]^^^mov     [rsp+168h+var_58], rsi^^^mov     [rsp+168h+var_68], rsi^^^lea     rsi, [rsp+168h+var_68]^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^mov     r8d, [rsp+168h+var_150]^^^jz      loc_477B41^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^imul    r8d^^^mov     eax, esi^^^mov     r8d, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+168h+var_12C]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+168h+var_120]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_477B6A^^^test    r12, r12^^^js      loc_478598^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_478688^^^cmp     r12, [rsp+168h+var_118]^^^jz      loc_4782F8^^^mov     r11d, dword ptr [rsp+168h+var_C8]^^^mov     rcx, [rsp+168h+var_58]^^^xor     r8d, r8d^^^mov     rdi, [rsp+168h+var_138]^^^lea     rdx, [rsp+168h+var_E8]^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_58], r12^^^mov     [rsp+168h+var_68], rax^^^test    r11d, r11d^^^mov     [rsp+168h+var_148], rcx^^^setnz   r8b^^^mov     [rsp+168h+var_110], r8d^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^jz      loc_477CB5^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+168h+var_12C]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+168h+var_120]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_477CDE^^^test    r12, r12^^^js      loc_4785C0^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_478688^^^cmp     [rsp+168h+var_148], r12^^^jz      loc_478440^^^mov     r10d, dword ptr [rsp+168h+var_C8]^^^mov     rcx, [rsp+168h+var_58]^^^xor     r8d, r8d^^^mov     rdi, [rsp+168h+var_138]^^^lea     rdx, [rsp+168h+var_E8]^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_58], r12^^^mov     [rsp+168h+var_68], rax^^^test    r10d, r10d^^^mov     [rsp+168h+var_148], rcx^^^setnz   r8b^^^mov     [rsp+168h+var_110], r8d^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^jz      loc_477E29^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+168h+var_12C]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+168h+var_120]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_477E52^^^test    r12, r12^^^js      loc_4785E8^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_478688^^^cmp     [rsp+168h+var_148], r12^^^jz      loc_478480^^^mov     r9d, dword ptr [rsp+168h+var_C8]^^^mov     rcx, [rsp+168h+var_58]^^^xor     r8d, r8d^^^mov     rdi, [rsp+168h+var_138]^^^lea     rdx, [rsp+168h+var_E8]^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_58], r12^^^mov     [rsp+168h+var_68], rax^^^test    r9d, r9d^^^mov     [rsp+168h+var_148], rcx^^^setnz   r8b^^^mov     [rsp+168h+var_110], r8d^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^jz      loc_477F9D^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+168h+var_12C]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+168h+var_120]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_477FC6^^^test    r12, r12^^^js      loc_478610^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_478688^^^cmp     [rsp+168h+var_148], r12^^^jz      loc_4784C0^^^mov     edi, dword ptr [rsp+168h+var_C8]^^^mov     rcx, [rsp+168h+var_58]^^^xor     r8d, r8d^^^lea     rdx, [rsp+168h+var_E8]^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_58], r12^^^mov     [rsp+168h+var_68], rax^^^test    edi, edi^^^mov     rdi, [rsp+168h+var_138]^^^mov     [rsp+168h+var_148], rcx^^^setnz   r8b^^^mov     [rsp+168h+var_110], r8d^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^jz      loc_47810F^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^lea     rdi, [rax+rax*8]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     rax, rdi^^^mov     edi, r13d^^^sub     edi, esi^^^mov     esi, edx^^^sar     edx, 2^^^sub     esi, r14d^^^add     esi, edi^^^mov     edi, [rsp+168h+var_12C]^^^sub     edi, edx^^^add     esi, edi^^^movsxd  rsi, esi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rdx, [r8+rax*8]^^^movsxd  rax, dword ptr [rcx+8]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx+4]^^^add     rdx, [rsp+168h+var_120]^^^sub     rdx, rax^^^lea     rax, ds:0[rdx*4]^^^shl     rdx, 6^^^sub     rdx, rax^^^movsxd  rax, dword ptr [rcx]^^^add     rdx, r15^^^sub     rdx, rax^^^lea     rax, [r12+rdx]^^^cmp     r12, rax^^^setle   cl^^^shr     rdx, 3Fh^^^cmp     cl, dl^^^jnz     short loc_478138^^^test    r12, r12^^^js      loc_478638^^^lea     rdx, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rax, rdx^^^cmp     r12, rax^^^jz      loc_478688^^^cmp     [rsp+168h+var_148], r12^^^jz      loc_478500^^^mov     esi, dword ptr [rsp+168h+var_C8]^^^mov     rcx, [rsp+168h+var_58]^^^xor     r8d, r8d^^^mov     rdi, [rsp+168h+var_138]^^^lea     rdx, [rsp+168h+var_E8]^^^mov     [rsp+168h+var_58], r12^^^mov     [rsp+168h+var_68], rax^^^test    esi, esi^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_148], rcx^^^setnz   r8b^^^mov     [rsp+168h+var_110], r8d^^^call    ranged_convert^^^test    rax, rax^^^mov     rcx, rax^^^mov     r12, [rsp+168h+var_68]^^^jz      loc_478281^^^movsxd  rdi, dword ptr [rax+14h]^^^xor     eax, eax^^^mov     edx, 51EB851Fh^^^mov     esi, edi^^^sar     esi, 2^^^add     esi, 1DBh^^^test    dil, 3^^^setz    al^^^sub     esi, eax^^^mov     eax, esi^^^mov     r8d, esi^^^sub     r13d, esi^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 3^^^sub     edx, eax^^^lea     eax, [rdx+rdx*4]^^^lea     eax, [rax+rax*4]^^^sub     r8d, eax^^^mov     eax, r8d^^^mov     r8, [rsp+168h+var_128]^^^shr     eax, 1Fh^^^sub     edx, eax^^^mov     rax, rbp^^^sub     rax, rdi^^^mov     esi, edx^^^sar     edx, 2^^^lea     rdi, [rax+rax*8]^^^sub     esi, r14d^^^add     r13d, esi^^^mov     esi, [rsp+168h+var_12C]^^^lea     rax, [rax+rdi*8]^^^movsxd  rdi, dword ptr [rcx+1Ch]^^^lea     rax, [rax+rax*4]^^^add     rax, [rsp+168h+var_140]^^^sub     esi, edx^^^add     esi, r13d^^^movsxd  rdx, dword ptr [rcx+8]^^^movsxd  rsi, esi^^^sub     rax, rdi^^^add     rax, rsi^^^lea     rax, [rax+rax*2]^^^lea     rax, [r8+rax*8]^^^sub     rax, rdx^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^movsxd  rdx, dword ptr [rcx+4]^^^add     rax, [rsp+168h+var_120]^^^sub     rax, rdx^^^lea     rdx, ds:0[rax*4]^^^shl     rax, 6^^^sub     rax, rdx^^^movsxd  rdx, dword ptr [rcx]^^^add     rax, r15^^^sub     rax, rdx^^^lea     rdx, [r12+rax]^^^cmp     r12, rdx^^^setle   cl^^^shr     rax, 3Fh^^^cmp     cl, al^^^jnz     short loc_4782AA^^^test    r12, r12^^^js      loc_478660^^^lea     rax, [r12-1]^^^mov     rcx, 7FFFFFFFFFFFFFFDh^^^mov     rdx, 7FFFFFFFFFFFFFFFh^^^cmp     r12, rcx^^^cmovg   rdx, rax^^^cmp     r12, rdx^^^jz      loc_478688^^^cmp     r12, [rsp+168h+var_148]^^^jz      loc_478540^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^add     rsp, 138h^^^mov     rax, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^and     edx, 3^^^xor     eax, eax^^^cmp     rdx, 1^^^setz    al^^^jmp     loc_4778E4^^^cmp     r12, [rsp+168h+var_58]^^^jz      loc_477B7E^^^mov     edx, dword ptr [rsp+168h+var_C8]^^^test    edx, edx^^^js      short loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      short loc_478330^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_477B7E^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rax, [rsp+168h+var_100]^^^mov     rdx, [rsp+168h+var_F8]^^^add     rax, r12^^^sub     rax, [rsp+168h+var_118]^^^mov     [rdx], rax^^^mov     eax, dword ptr [rsp+168h+var_E8]^^^cmp     [rsp+168h+var_108], eax^^^jz      loc_4783DE^^^mov     edx, [rsp+168h+var_104]^^^xor     r13d, r13d^^^test    edx, edx^^^jnz     short loc_47836B^^^xor     r13d, r13d^^^cmp     eax, 3Ch^^^setz    r13b^^^sub     r13d, [rsp+168h+var_104]^^^movsxd  rbp, [rsp+168h+var_108]^^^lea     rsi, [rsp+168h+var_E8]^^^lea     rdi, [rsp+168h+var_58]^^^add     rbp, r12^^^movsxd  r14, r13d^^^add     r14, rbp^^^mov     [rsp+168h+var_58], r14^^^call    [rsp+168h+var_138]^^^mov     ecx, [rsp+168h+var_108]^^^test    rax, rax^^^setz    al^^^cmp     rbp, r12^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^setl    dl^^^movzx   eax, al^^^shr     ecx, 1Fh^^^xor     edx, ecx^^^movzx   edx, dl^^^or      eax, edx^^^cmp     rbp, r14^^^setnle  dl^^^shr     r13d, 1Fh^^^xor     edx, r13d^^^movzx   edx, dl^^^or      eax, edx^^^jnz     loc_4782C5^^^mov     r12, [rsp+168h+var_58]^^^mov     rax, [rsp+168h+var_E8]^^^mov     [rbx], rax^^^mov     rax, [rsp+168h+var_E0]^^^mov     [rbx+8], rax^^^mov     rax, [rsp+168h+var_D8]^^^mov     [rbx+10h], rax^^^mov     rax, [rsp+168h+var_D0]^^^mov     [rbx+18h], rax^^^mov     rax, [rsp+168h+var_C8]^^^mov     [rbx+20h], rax^^^mov     rax, [rsp+168h+var_C0]^^^mov     [rbx+28h], rax^^^mov     rax, [rsp+168h+var_B8]^^^mov     [rbx+30h], rax^^^jmp     loc_4782C5^^^cmp     r12, [rsp+168h+var_58]^^^jz      loc_477CF2^^^mov     edx, dword ptr [rsp+168h+var_C8]^^^test    edx, edx^^^js      loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      loc_478730^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_477CF2^^^jmp     loc_478330^^^cmp     r12, [rsp+168h+var_58]^^^jz      loc_477E66^^^mov     edx, dword ptr [rsp+168h+var_C8]^^^test    edx, edx^^^js      loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      loc_478750^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_477E66^^^jmp     loc_478330^^^cmp     r12, [rsp+168h+var_58]^^^jz      loc_477FDA^^^mov     edx, dword ptr [rsp+168h+var_C8]^^^test    edx, edx^^^js      loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      loc_4787A0^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_477FDA^^^jmp     loc_478330^^^cmp     r12, [rsp+168h+var_58]^^^jz      loc_47814C^^^mov     edx, dword ptr [rsp+168h+var_C8]^^^test    edx, edx^^^js      loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      loc_4787C0^^^setnz   cl^^^test    edx, edx^^^setnz   dl^^^cmp     cl, dl^^^jz      loc_47814C^^^jmp     loc_478330^^^cmp     [rsp+168h+var_58], r12^^^jz      loc_4782BE^^^mov     eax, dword ptr [rsp+168h+var_C8]^^^test    eax, eax^^^js      loc_478330^^^cmp     [rsp+168h+var_10C], 0^^^jl      loc_4787E0^^^setnz   dl^^^test    eax, eax^^^setnz   al^^^cmp     dl, al^^^jz      loc_4782BE^^^jmp     loc_478330^^^mov     esi, [rsp+168h+var_108]^^^movsxd  r15, [rsp+168h+var_108]^^^mov     [rsp+168h+var_104], esi^^^jmp     loc_47794F^^^lea     rdx, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rax, rdx^^^jmp     loc_477B6A^^^lea     rcx, [r12+1]^^^mov     rdx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rdx^^^cmovl   rax, rcx^^^jmp     loc_477CDE^^^lea     rcx, [r12+1]^^^mov     rdx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rdx^^^cmovl   rax, rcx^^^jmp     loc_477E52^^^lea     rcx, [r12+1]^^^mov     rdx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rdx^^^cmovl   rax, rcx^^^jmp     loc_477FC6^^^lea     rcx, [r12+1]^^^mov     rdx, 8000000000000002h^^^mov     rax, 8000000000000000h^^^cmp     r12, rdx^^^cmovl   rax, rcx^^^jmp     loc_478138^^^lea     rax, [r12+1]^^^mov     rcx, 8000000000000002h^^^mov     rdx, 8000000000000000h^^^cmp     r12, rcx^^^cmovl   rdx, rax^^^jmp     loc_4782AA^^^mov     ecx, [rsp+168h+var_10C]^^^mov     eax, dword ptr [rsp+168h+var_C8]^^^test    ecx, ecx^^^js      loc_478330^^^cmp     eax, [rsp+168h+var_10C]^^^jz      loc_478330^^^test    eax, eax^^^mov     r13, 0FFFFFFFFFFF6D390h^^^js      loc_478330^^^mov     r14d, [rsp+168h+var_10C]^^^mov     r15, [rsp+168h+var_138]^^^jmp     short loc_4786EB^^^mov     rax, r12^^^sub     rax, r13^^^cmp     r12, rax^^^mov     [rsp+168h+var_48], rax^^^jle     loc_478770^^^sub     r13, 92C70h^^^cmp     r13, 0FFFFFFFFEFF23C00h^^^jz      loc_478330^^^lea     rax, [r12+r13]^^^cmp     r12, rax^^^mov     [rsp+168h+var_48], rax^^^jle     short loc_4786C0^^^lea     rdx, [rsp+168h+var_A8]^^^lea     rsi, [rsp+168h+var_48]^^^mov     rdi, r15^^^call    ranged_convert^^^cmp     [rsp+168h+var_88], r14d^^^jz      loc_478800^^^mov     r12, [rsp+168h+var_68]^^^jmp     short loc_4786C0^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+168h+var_110], edx^^^jg      loc_477CF2^^^jmp     loc_478330^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+168h+var_110], edx^^^jg      loc_477E66^^^jmp     loc_478330^^^lea     rdx, [rsp+168h+var_A8]^^^lea     rsi, [rsp+168h+var_48]^^^mov     rdi, r15^^^call    ranged_convert^^^cmp     [rsp+168h+var_88], r14d^^^jz      short loc_478800^^^mov     r12, [rsp+168h+var_68]^^^jmp     loc_4786D7^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+168h+var_110], edx^^^jg      loc_477FDA^^^jmp     loc_478330^^^test    edx, edx^^^setnz   dl^^^movzx   edx, dl^^^cmp     [rsp+168h+var_110], edx^^^jg      loc_47814C^^^jmp     loc_478330^^^test    eax, eax^^^setnz   al^^^movzx   eax, al^^^cmp     eax, [rsp+168h+var_110]^^^jl      loc_4782BE^^^jmp     loc_478330^^^mov     edx, [rsp+168h+var_EC]^^^mov     rsi, [rsp+168h+var_140]^^^lea     rax, [rsp+168h+var_A8]^^^mov     r9, [rsp+168h+var_48]^^^mov     r8d, [rsp+168h+var_104]^^^mov     rdi, rbp^^^mov     ecx, [rsp+168h+var_F0]^^^mov     [rsp+168h+var_168], rax^^^call    guess_time_tm_isra_0^^^mov     rdi, [rsp+168h+var_138]^^^lea     rdx, [rsp+168h+var_E8]^^^lea     rsi, [rsp+168h+var_68]^^^mov     [rsp+168h+var_68], rax^^^call    ranged_convert^^^mov     r12, [rsp+168h+var_68]^^^jmp     loc_478330^^^
_L_lock_32$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4256AF^^^
_L_lock_31$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_425BB6^^^
_L_lock_30$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4025CF^^^
_IO_setb$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^mov     rbx, rdi^^^sub     rsp, 28h^^^mov     rdi, [rdi+38h]^^^mov     rbp, rsi^^^mov     eax, [rbx]^^^test    rdi, rdi^^^jz      short loc_42BE03^^^test    al, 1^^^jz      short loc_42BE30^^^mov     [rbx+40h], rdx^^^mov     edx, eax^^^or      eax, 1^^^and     edx, 0FFFFFFFEh^^^test    ecx, ecx^^^mov     [rbx+38h], rbp^^^cmovz   edx, eax^^^mov     rbp, [rsp+28h+var_8]^^^mov     [rbx], edx^^^mov     rbx, [rsp+28h+var_10]^^^add     rsp, 28h^^^retn^^^mov     rsi, [rbx+40h]^^^mov     [rsp+28h+var_20], rdx^^^mov     [rsp+28h+var_28], ecx^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     eax, [rbx]^^^mov     ecx, [rsp+28h+var_28]^^^mov     rdx, [rsp+28h+var_20]^^^jmp     short loc_42BE03^^^
_Unwind_DebugHook$$$retn^^^
sub_40EAE9$$$mov     eax, 80h^^^pop     rbx^^^retn^^^
_nl_find_locale$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_10], r14^^^mov     r14, rcx^^^mov     [rbp+var_8], r15^^^mov     [rbp+var_20], r12^^^mov     r15d, edx^^^mov     [rbp+var_18], r13^^^sub     rsp, 0B0h^^^mov     rbx, [rcx]^^^mov     [rbp+var_68], rdi^^^mov     [rbp+var_70], rsi^^^movzx   r13d, byte ptr [rbx]^^^test    r13b, r13b^^^jz      loc_461850^^^mov     esi, offset _nl_C_name^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jz      loc_461B41^^^mov     esi, offset _nl_POSIX_name^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jz      loc_461B41^^^mov     rdi, rbx^^^call    strlen^^^cmp     rax, 0FFh^^^mov     r12, rax^^^ja      loc_4618FE^^^mov     ecx, 4^^^mov     edx, offset slashdot_10614^^^mov     rsi, rax^^^mov     rdi, rbx^^^call    memmem^^^test    rax, rax^^^jnz     loc_4618FE^^^cmp     r12, 2^^^jz      loc_4618D0^^^jbe     short loc_4617FE^^^cmp     r13b, 2Eh^^^jz      loc_461B5E^^^cmp     byte ptr [rbx+r12-3], 2Fh^^^jz      loc_4618E6^^^mov     rdx, r12^^^mov     esi, 2Fh^^^mov     rdi, rbx^^^call    memchr^^^test    rax, rax^^^jnz     loc_461B49^^^cmp     [rbp+var_68], 0^^^mov     [r14], rbx^^^jnz     loc_461923^^^mov     rsi, r14^^^mov     edi, r15d^^^call    _nl_load_locale_from_archive^^^test    rax, rax^^^jz      loc_461913^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     edi, offset aLc_all^^^call    getenv^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_46186F^^^movzx   r13d, byte ptr [rax]^^^test    r13b, r13b^^^jnz     loc_46177D^^^movsxd  r12, r15d^^^movzx   edi, ds:_nl_category_name_idxs[r12]^^^add     rdi, 4A17E0h^^^call    getenv^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_46189C^^^movzx   r13d, byte ptr [rax]^^^test    r13b, r13b^^^jnz     loc_46177D^^^mov     edi, offset aLang^^^call    getenv^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_4618BB^^^movzx   r13d, byte ptr [rax]^^^test    r13b, r13b^^^jnz     loc_46177D^^^mov     qword ptr [r14], offset _nl_C_name^^^mov     rax, ds:_nl_C[r12*8]^^^jmp     loc_461839^^^cmp     r13b, 2Eh^^^jnz     loc_4617FE^^^cmp     byte ptr [rbx+1], 2Eh^^^jnz     loc_4617FE^^^jmp     short loc_4618FE^^^cmp     byte ptr [rbx+r12-2], 2Eh^^^jnz     loc_4617FE^^^cmp     byte ptr [rbx+r12-1], 2Eh^^^jnz     loc_4617FE^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^jmp     loc_461839^^^mov     [rbp+var_70], 10h^^^mov     [rbp+var_68], offset _nl_default_locale_path^^^mov     rdi, [r14]^^^call    _nl_expand_alias^^^test    rax, rax^^^mov     rsi, rax^^^jz      loc_461C0E^^^mov     rdi, rsi^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^repne scasb^^^not     rcx^^^lea     rax, [rcx+1Eh]^^^mov     rdx, rcx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0B0h+var_79]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^lea     r9, [rbp+var_38]^^^lea     r8, [rbp+var_50]^^^lea     rcx, [rbp+var_40]^^^lea     rdx, [rbp+var_60]^^^lea     rsi, [rbp+var_48]^^^mov     rdi, rax^^^call    _nl_explode_name^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^jz      loc_461C07^^^mov     rax, [rbp+var_60]^^^movsxd  r12, r15d^^^mov     r9, [rbp+var_40]^^^movzx   r14d, ds:_nl_category_name_idxs[r12]^^^lea     r10, _nl_locale_file_list[r12*8]^^^mov     r8, [rbp+var_48]^^^mov     rdx, [rbp+var_70]^^^mov     rsi, [rbp+var_68]^^^mov     ecx, r13d^^^mov     [rsp+0B0h+var_A0], rax^^^mov     rax, [rbp+var_38]^^^mov     rdi, r10^^^mov     [rbp+var_78], r10^^^mov     [rsp+0B0h+var_90], 0^^^add     r14, 4A17E0h^^^mov     [rsp+0B0h+var_A8], rax^^^mov     rax, [rbp+var_50]^^^mov     [rsp+0B0h+var_98], r14^^^mov     [rsp+0B0h+var_B0], rax^^^call    _nl_make_l10nflist^^^test    rax, rax^^^mov     rbx, rax^^^mov     r10, [rbp+var_78]^^^jz      loc_461C2F^^^and     r13b, 1^^^jz      short loc_461A09^^^mov     rdi, [rbp+var_38]^^^call    free^^^cmp     dword ptr [rbx+8], 0^^^jnz     short loc_461A1A^^^mov     esi, r15d^^^mov     rdi, rbx^^^call    _nl_load_locale^^^cmp     qword ptr [rbx+10h], 0^^^jz      loc_461BAC^^^cmp     [rbp+var_50], 0^^^jz      loc_461AEF^^^movsxd  rdx, ds:codeset_idx_10656[r12*4]^^^mov     rax, [rbx+10h]^^^mov     rsi, [rax+rdx*8+40h]^^^test    rsi, rsi^^^jz      loc_461C16^^^or      r13, 0FFFFFFFFFFFFFFFFh^^^xor     r14d, r14d^^^mov     rdi, rsi^^^mov     eax, r14d^^^mov     rcx, r13^^^repne scasb^^^not     rcx^^^add     rcx, 20h^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rcx^^^lea     r12, [rsp+0B0h+var_79]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    strip^^^mov     rsi, [rbp+var_50]^^^mov     eax, r14d^^^mov     rcx, r13^^^mov     rdi, rsi^^^repne scasb^^^not     rcx^^^add     rcx, 20h^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rcx^^^lea     r13, [rsp+0B0h+var_79]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r13^^^call    strip^^^mov     rcx, cs:off_499B18^^^mov     rax, r12^^^movsx   rdx, byte ptr [rax]^^^mov     edx, [rcx+rdx*4]^^^mov     [rax], dl^^^add     rax, 1^^^test    dl, dl^^^jnz     short loc_461AB3^^^mov     rax, r13^^^movsx   rdx, byte ptr [rax]^^^mov     edx, [rcx+rdx*4]^^^mov     [rax], dl^^^add     rax, 1^^^test    dl, dl^^^jnz     short loc_461AC7^^^mov     rsi, r12^^^mov     rdi, r13^^^call    __gconv_compare_alias^^^mov     edx, eax^^^xor     eax, eax^^^test    edx, edx^^^jnz     loc_461839^^^mov     r12, [rbx+10h]^^^cmp     qword ptr [r12], 0^^^jz      short loc_461B77^^^mov     rdi, [rbp+var_60]^^^test    rdi, rdi^^^jz      short loc_461B58^^^mov     edx, offset _nl_C_locobj^^^mov     esi, offset aTranslit^^^call    sub_400380^^^test    eax, eax^^^mov     r12, [rbx+10h]^^^jnz     short loc_461B23^^^mov     dword ptr [r12+34h], 1^^^mov     edx, [r12+30h]^^^mov     rax, r12^^^cmp     edx, 0FFFFFFFDh^^^ja      loc_461839^^^add     edx, 1^^^mov     [r12+30h], edx^^^jmp     loc_461839^^^movsxd  r12, r15d^^^jmp     loc_4618BB^^^cmp     r13b, 2Fh^^^jz      loc_461817^^^jmp     loc_4618FE^^^mov     r12, [rbx+10h]^^^jmp     short loc_461B23^^^cmp     byte ptr [rbx+1], 2Eh^^^jnz     loc_4617F2^^^cmp     byte ptr [rbx+2], 2Fh^^^jnz     loc_4617F2^^^jmp     loc_4618FE^^^mov     rdi, [rbx]^^^mov     esi, 2Fh^^^call    strrchr^^^cmp     byte ptr [rax-2], 2Fh^^^lea     rdi, [rax-1]^^^jz      short loc_461B98^^^sub     rdi, 1^^^cmp     byte ptr [rdi-1], 2Fh^^^jnz     short loc_461B8E^^^mov     rsi, rax^^^sub     rsi, rdi^^^call    strndup^^^mov     [r12], rax^^^jmp     loc_461AFA^^^mov     rdi, [rbx+20h]^^^xor     r13d, r13d^^^test    rdi, rdi^^^jz      short loc_461BEE^^^xor     r14d, r14d^^^jmp     short loc_461BDD^^^mov     rax, [rbx+r13*8+20h]^^^cmp     qword ptr [rax+10h], 0^^^jnz     short loc_461BEE^^^add     r14d, 1^^^movsxd  r13, r14d^^^mov     rdi, [rbx+r13*8+20h]^^^test    rdi, rdi^^^jz      short loc_461BEE^^^mov     eax, [rdi+8]^^^test    eax, eax^^^jnz     short loc_461BC0^^^mov     esi, r15d^^^call    _nl_load_locale^^^jmp     short loc_461BC0^^^add     r13, 4^^^mov     rax, [rbx+r13*8]^^^mov     [rbx+20h], rax^^^mov     rbx, [rbx+r13*8]^^^test    rbx, rbx^^^jnz     loc_461A25^^^xor     eax, eax^^^jmp     loc_461839^^^mov     rsi, [r14]^^^jmp     loc_461937^^^mov     ecx, offset __PRETTY_FUNCTION___10661^^^mov     edx, 115h^^^mov     esi, offset aFindlocale_c^^^mov     edi, offset aLocale_codeset^^^call    __assert_fail^^^mov     rax, [rbp+var_60]^^^mov     r9, [rbp+var_40]^^^mov     ecx, r13d^^^mov     r8, [rbp+var_48]^^^mov     rdx, [rbp+var_70]^^^mov     rdi, r10^^^mov     rsi, [rbp+var_68]^^^mov     [rsp+0B0h+var_90], 1^^^mov     [rsp+0B0h+var_A0], rax^^^mov     rax, [rbp+var_38]^^^mov     [rsp+0B0h+var_98], r14^^^mov     [rsp+0B0h+var_A8], rax^^^mov     rax, [rbp+var_50]^^^mov     [rsp+0B0h+var_B0], rax^^^call    _nl_make_l10nflist^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_4619FA^^^xor     eax, eax^^^jmp     loc_461839^^^
_L_lock_39$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_425A33^^^
_IO_str_init_static_internal$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^test    rdx, rdx^^^mov     rbp, rsi^^^mov     r12, rcx^^^jnz     short loc_42DC68^^^xor     esi, esi^^^mov     rdi, rbp^^^call    sub_400350^^^mov     r13, rax^^^xor     ecx, ecx^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    _IO_setb^^^test    r12, r12^^^mov     [rbx+20h], rbp^^^mov     [rbx+18h], rbp^^^mov     [rbx+8], rbp^^^jz      short loc_42DC80^^^mov     [rbx+28h], r12^^^mov     [rbx+30h], r13^^^mov     [rbx+10h], r12^^^mov     qword ptr [rbx+0E0h], 0^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^add     rdx, rsi^^^mov     r13, 0FFFFFFFFFFFFFFFFh^^^cmp     rsi, rdx^^^cmovb   r13, rdx^^^jmp     short loc_42DC13^^^mov     [rbx+28h], rbp^^^mov     [rbx+30h], rbp^^^mov     [rbx+10h], r13^^^jmp     short loc_42DC40^^^
sub_41E17E$$$mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41E1FC^^^movsx   eax, dil^^^mov     dword ptr [rbp-590h], 1^^^mov     dword ptr [rbp-5B8h], 0^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step4_jumps_13264[rax*8]^^^jmp     loc_41B826^^^mov     rax, [rbx+28h]^^^cmp     rax, [rbx+30h]^^^jnb     short loc_41E223^^^mov     byte ptr [rax], 25h^^^add     rax, 1^^^mov     [rbx+28h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_41E21A^^^add     r14d, 1^^^jmp     loc_41C308^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-590h], 1^^^mov     dword ptr [rbp-5B8h], 0^^^jmp     loc_41B826^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __overflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_41E1EA^^^mov     r14d, eax^^^jmp     loc_41ACB3^^^
_L_unlock_83$$$lea     rdi, [rsi]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_47515B^^^
_L_lock_324$$$lea     rdi, lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_401E36^^^
sigprocmask$$$mov     r10d, 8^^^movsxd  rdi, edi^^^mov     eax, 0Eh^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_41782A^^^rep retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_IO_default_seekpos$$$mov     rax, [rdi+0D8h]^^^mov     ecx, edx^^^xor     edx, edx^^^mov     rax, [rax+48h]^^^jmp     rax^^^
_dl_fini$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 28h^^^mov     r15, cs:_dl_nns^^^sub     r15, 1^^^js      loc_48F64B^^^lea     rax, [r15+r15*8]^^^mov     [rbp+var_48], 0^^^xor     r13d, r13d^^^shl     rax, 4^^^add     rax, 6C5FE8h^^^mov     [rbp+var_40], rax^^^nop^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48F4B4^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     rdx, [rbp+var_40]^^^xor     r14d, r14d^^^mov     ecx, [rdx]^^^test    ecx, ecx^^^jz      loc_48F567^^^mov     esi, ecx^^^shl     rsi, 3^^^cmp     rsi, [rbp+var_48]^^^jbe     short loc_48F4FE^^^cmp     [rbp+var_48], 0^^^jnz     loc_48F6A8^^^lea     rax, [rsi+1Eh]^^^mov     edi, 10h^^^xor     edx, edx^^^mov     [rbp+var_48], rsi^^^div     rdi^^^shl     rax, 4^^^sub     rsp, rax^^^lea     r13, [rsp+50h+var_48+7]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, [rbp+var_40]^^^xor     r14d, r14d^^^mov     rax, [rdx-8]^^^test    rax, rax^^^jnz     short loc_48F519^^^jmp     short loc_48F550^^^mov     rax, [rax+18h]^^^test    rax, rax^^^jz      short loc_48F550^^^cmp     [rax+28h], rax^^^jnz     short loc_48F510^^^cmp     ecx, r14d^^^jbe     loc_48F6EF^^^mov     edx, r14d^^^mov     [r13+rdx*8+0], rax^^^mov     [rax+3DCh], r14d^^^add     r14d, 1^^^add     dword ptr [rax+310h], 1^^^mov     rax, [rax+18h]^^^test    rax, rax^^^jnz     short loc_48F519^^^nop     dword ptr [rax+rax+00h]^^^cmp     r14d, ecx^^^jnz     loc_48F708^^^mov     esi, r14d^^^mov     rdx, r15^^^mov     rdi, r13^^^call    _dl_sort_fini_constprop_0^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48F57B^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^test    r14d, r14d^^^jz      loc_48F639^^^xor     r12d, r12d^^^nop     word ptr [rax+rax+00000000h]^^^mov     rbx, [r13+r12*8+0]^^^movzx   eax, byte ptr [rbx+314h]^^^test    al, 8^^^jz      loc_48F625^^^and     eax, 0FFFFFFF7h^^^mov     [rbx+314h], al^^^mov     rax, [rbx+110h]^^^test    rax, rax^^^jz      loc_48F660^^^test    byte ptr cs:_dl_debug_mask, 2^^^jnz     loc_48F677^^^test    rax, rax^^^jz      short loc_48F610^^^mov     rax, [rax+8]^^^mov     rcx, [rbx]^^^add     rax, rcx^^^mov     [rbp+var_38], rax^^^mov     rax, [rbx+120h]^^^mov     rax, [rax+8]^^^shr     rax, 3^^^test    eax, eax^^^jz      short loc_48F610^^^sub     eax, 1^^^jmp     short loc_48F5FA^^^mov     eax, edx^^^mov     rdi, [rbp+var_38]^^^mov     edx, eax^^^mov     [rbp+var_50], eax^^^call    qword ptr [rdi+rdx*8]^^^mov     eax, [rbp+var_50]^^^test    eax, eax^^^lea     edx, [rax-1]^^^jnz     short loc_48F5F8^^^mov     rax, [rbx+0A8h]^^^test    rax, rax^^^jz      short loc_48F625^^^mov     rax, [rax+8]^^^add     rax, [rbx]^^^call    rax^^^add     r12, 1^^^sub     dword ptr [rbx+310h], 1^^^cmp     r14d, r12d^^^ja      loc_48F590^^^sub     [rbp+var_40], 90h^^^sub     r15, 1^^^jns     loc_48F4A0^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     qword ptr [rbx+0A8h], 0^^^jz      short loc_48F625^^^test    byte ptr cs:_dl_debug_mask, 2^^^jz      loc_48F5CA^^^mov     rsi, [rbx+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48F68A^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^xor     eax, eax^^^mov     rdx, r15^^^mov     edi, offset aCallingFiniSLu^^^call    _dl_debug_printf^^^mov     rax, [rbx+110h]^^^jmp     loc_48F5CA^^^add     rsi, 0Fh^^^xor     edx, edx^^^mov     edi, 10h^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rsi+1Eh]^^^div     rdi^^^shl     rax, 4^^^sub     rsp, rax^^^lea     rax, [rsp+50h+var_48+7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+rsi]^^^cmp     r13, rdx^^^jz      short loc_48F6E3^^^mov     [rbp+var_48], rsi^^^mov     r13, rax^^^jmp     loc_48F4FE^^^add     [rbp+var_48], rsi^^^mov     r13, rax^^^jmp     loc_48F4FE^^^mov     ecx, offset __PRETTY_FUNCTION___10580^^^mov     edx, 0C5h^^^mov     esi, offset aDlFini_c^^^mov     edi, offset aINloaded^^^call    __assert_fail^^^test    r15, r15^^^jz      short loc_48F73B^^^test    r15, r15^^^jz      loc_48F559^^^sub     ecx, 1^^^cmp     ecx, r14d^^^jz      loc_48F559^^^mov     ecx, offset __PRETTY_FUNCTION___10580^^^mov     edx, 0D0h^^^mov     esi, offset aDlFini_c^^^mov     edi, offset aNs0INloadedINl^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10580^^^mov     edx, 0CFh^^^mov     esi, offset aDlFini_c^^^mov     edi, offset aNs0INloaded^^^call    __assert_fail^^^
sub_4719C3$$$jmp     short sub_471972^^^
compute_offset$$$mov     r8d, 3Bh^^^cmp     esi, 3Bh^^^mov     ecx, 3Ch^^^mov     eax, r8d^^^cmovbe  eax, esi^^^imul    eax, ecx^^^cmp     edi, 3Bh^^^mov     ecx, 18h^^^cmova   edi, r8d^^^add     eax, edi^^^cmp     edx, 18h^^^cmovbe  ecx, edx^^^imul    ecx, 0E10h^^^add     eax, ecx^^^retn^^^
_L_unlock_5552$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_405064^^^
__libc_alloca_cutoff$$$mov     rax, fs:698h^^^shr     rax, 2^^^lea     rdx, [rax-1]^^^mov     eax, 10000h^^^cmp     rdx, 0FFFFh^^^ja      short loc_4109C8^^^mov     rax, fs:698h^^^shr     rax, 2^^^mov     edx, 40000h^^^test    rax, rax^^^cmovz   rax, rdx^^^cmp     rax, rdi^^^setnb   al^^^movzx   eax, al^^^retn^^^
_L_lock_36$$$lea     rdi, [r9]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4750FB^^^
__gconv_alias_compare$$$mov     rsi, [rsi]^^^mov     rdi, [rdi]^^^jmp     sub_4003A0^^^
sub_4719C5$$$cmp     dword ptr [rbp-1138h], 0^^^mov     edx, [r12]^^^jz      loc_4727C3^^^cmp     edx, 30h^^^jnb     loc_472257^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^test    rax, rax^^^mov     r8, rax^^^jns     loc_472245^^^neg     r8^^^mov     dword ptr [rbp-1144h], 0Ah^^^mov     r10d, 1^^^cmp     dword ptr [rbp-1130h], 0^^^jl      loc_471D15^^^mov     dword ptr [rbp-1164h], 20h^^^jnz     loc_471D1F^^^test    r8, r8^^^jnz     loc_471D1F^^^cmp     dword ptr [rbp-1170h], 0^^^jz      loc_47227C^^^cmp     dword ptr [rbp-1144h], 8^^^jnz     loc_47227C^^^lea     rax, [r9-4]^^^mov     dword ptr [r9-4], 30h^^^mov     [rbp-1138h], rax^^^mov     rax, r9^^^sub     rax, [rbp-1138h]^^^movsxd  rdx, dword ptr [rbp-1130h]^^^sar     rax, 2^^^cmp     rdx, rax^^^jg      short loc_471AAC^^^cmp     dword ptr [rbp-1170h], 0^^^jz      short loc_471AAC^^^test    r8, r8^^^jz      short loc_471AAC^^^cmp     dword ptr [rbp-1144h], 8^^^jnz     short loc_471AAC^^^mov     rax, [rbp-1138h]^^^mov     dword ptr [rax-4], 30h^^^sub     rax, 4^^^mov     [rbp-1138h], rax^^^sub     r9, [rbp-1138h]^^^mov     rcx, r9^^^mov     [rbp-1178h], r9^^^sar     rcx, 2^^^neg     rcx^^^mov     rax, rcx^^^mov     [rbp-1130h], rcx^^^add     rax, rdx^^^mov     edx, 0^^^cmovs   rax, rdx^^^cmp     dword ptr [rbp-1158h], 0^^^mov     [rbp-1154h], eax^^^jnz     loc_471C23^^^mov     edx, [rbp-1148h]^^^add     edx, ecx^^^sub     edx, eax^^^cmp     dword ptr [rbp-1170h], 0^^^setnz   al^^^test    r8, r8^^^setnz   cl^^^and     al, cl^^^mov     [rbp-1148h], al^^^jz      short loc_471B1E^^^cmp     dword ptr [rbp-1144h], 10h^^^lea     eax, [rdx-2]^^^cmovz   edx, eax^^^mov     eax, [rbp-116Ch]^^^or      eax, r10d^^^or      eax, [rbp-1168h]^^^cmp     eax, 1^^^adc     edx, 0FFFFFFFFh^^^cmp     dword ptr [rbp-1164h], 20h^^^jz      loc_471F2E^^^test    r10d, r10d^^^jz      loc_471E50^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_471E26^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_471E26^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_472273^^^add     r14d, 1^^^cmp     byte ptr [rbp-1148h], 0^^^jz      short loc_471B9C^^^cmp     dword ptr [rbp-1144h], 10h^^^jz      loc_471FB6^^^add     edx, [rbp-1154h]^^^test    edx, edx^^^jle     short loc_471BD8^^^movsxd  rdx, edx^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471EA0^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_471E97^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_471F9D^^^mov     rcx, [rbp-1178h]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rsi, [rbp-1138h]^^^sar     rcx, 2^^^mov     rdx, rcx^^^mov     [rbp-11B8h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-11B8h]^^^cmp     rcx, rax^^^jz      loc_471F7D^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^test    r10d, r10d^^^jz      loc_4720CF^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_471DFA^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_471DFA^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_471DF1^^^sub     dword ptr [rbp-1148h], 1^^^add     r14d, 1^^^cmp     dword ptr [rbp-1170h], 0^^^jz      short loc_471C8B^^^test    r8, r8^^^jz      short loc_471C8B^^^cmp     dword ptr [rbp-1144h], 10h^^^jz      loc_47211E^^^cmp     dword ptr [rbp-1154h], 0^^^jle     short loc_471CCA^^^movsxd  rdx, dword ptr [rbp-1154h]^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471EA0^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_4721D7^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_471F9D^^^mov     rcx, [rbp-1178h]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rsi, [rbp-1138h]^^^sar     rcx, 2^^^mov     rdx, rcx^^^mov     [rbp-11B8h], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-11B8h]^^^cmp     rcx, rax^^^jz      loc_4721E0^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     dword ptr [rbp-1130h], 1^^^cmp     dword ptr [rbp-10F4h], 58h^^^mov     ecx, offset _itowa_upper_digits^^^mov     eax, offset _itowa_lower_digits^^^cmovnz  rcx, rax^^^cmp     dword ptr [rbp-1144h], 0Ah^^^jz      loc_4737D7^^^cmp     dword ptr [rbp-1144h], 10h^^^jz      loc_473782^^^cmp     dword ptr [rbp-1144h], 8^^^jz      loc_473377^^^mov     edi, [rbp-1144h]^^^mov     rsi, r9^^^mov     rax, r8^^^xor     edx, edx^^^sub     rsi, 4^^^div     rdi^^^mov     edx, [rcx+rdx*4]^^^test    rax, rax^^^mov     [rsi], edx^^^jnz     short loc_471D67^^^cmp     qword ptr [rbp-1140h], 0^^^mov     [rbp-1138h], rsi^^^jnz     loc_47339A^^^cmp     dword ptr [rbp-1144h], 0Ah^^^jnz     loc_471A62^^^cmp     dword ptr [rbp-1188h], 0^^^jz      loc_471A62^^^mov     rdi, [rbp-1138h]^^^mov     rdx, r9^^^mov     rsi, r9^^^mov     [rbp-11D0h], r8^^^mov     [rbp-11C0h], r9^^^mov     [rbp-11B8h], r10d^^^call    _i18n_number_rewrite_1^^^mov     r8, [rbp-11D0h]^^^mov     [rbp-1138h], rax^^^mov     r9, [rbp-11C0h]^^^mov     r10d, [rbp-11B8h]^^^jmp     loc_471A62^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-11D0h], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-11D0h]^^^jnz     loc_471C58^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-11C8h]^^^jnz     loc_471B75^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     dword ptr [rbp-1168h], 0^^^jz      loc_471EDF^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      short loc_471EB9^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     short loc_471EB9^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_471B82^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 65Dh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-11C8h]^^^jnz     short loc_471E81^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     dword ptr [rbp-116Ch], 0^^^jz      loc_471B86^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_47202C^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_47202C^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_471B82^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^test    edx, edx^^^jle     loc_4720C8^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-11B8h], r10d^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     r10d, [rbp-11B8h]^^^ja      loc_471EA0^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_4720BF^^^add     r14d, edx^^^xor     edx, edx^^^jmp     loc_471B40^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^add     r14d, ecx^^^sub     rdx, rax^^^cmp     rcx, rdx^^^jbe     loc_46F40A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 65Dh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_472095^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_472095^^^mov     dword ptr [rax], 30h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_47208C^^^mov     rcx, [rbx+0A0h]^^^mov     esi, [rbp-10F4h]^^^test    rcx, rcx^^^jz      short loc_47206B^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     short loc_47206B^^^mov     [rax], esi^^^add     rax, 4^^^add     esi, 1^^^mov     [rcx+20h], rax^^^jz      short loc_47205F^^^cmp     r14d, 7FFFFFFEh^^^jz      short loc_472056^^^add     r14d, 2^^^jmp     loc_471B9C^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-11C8h]^^^jnz     loc_471F18^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, [rbp-10F4h]^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-11C8h]^^^jnz     short loc_47201A^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     [rbp-11C8h], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, [rbp-11C8h]^^^jnz     loc_471FE2^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^xor     edx, edx^^^jmp     loc_471B40^^^cmp     dword ptr [rbp-1168h], 0^^^jz      loc_472292^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4721AB^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_4721AB^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_471C65^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_472338^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_472338^^^mov     dword ptr [rax], 30h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_47232F^^^mov     rdx, [rbx+0A0h]^^^mov     esi, [rbp-10F4h]^^^test    rdx, rdx^^^jz      loc_472316^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_472316^^^mov     [rax], esi^^^add     rax, 4^^^add     esi, 1^^^mov     [rdx+20h], rax^^^jz      loc_47230A^^^cmp     r14d, 7FFFFFFEh^^^jz      loc_4722D9^^^add     r14d, 2^^^sub     dword ptr [rbp-1148h], 2^^^jmp     loc_471C8B^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp-11D0h], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-11D0h]^^^jnz     loc_472108^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_47226A^^^mov     edx, [rbp-1130h]^^^sub     edx, [rbp-1154h]^^^add     r14d, ecx^^^add     edx, [rbp-1148h]^^^test    edx, edx^^^jle     loc_46F40A^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471EA0^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_46F407^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     dword ptr [rbp-1144h], 0Ah^^^xor     r10d, r10d^^^jmp     loc_471A0F^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_4719ED^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     [rbp-1138h], r9^^^mov     dword ptr [rbp-1164h], 20h^^^jmp     loc_471A62^^^cmp     dword ptr [rbp-116Ch], 0^^^jz      loc_471C70^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      short loc_4722E2^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     short loc_4722E2^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_471C65^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-11D0h], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp-11D0h]^^^jnz     short loc_4722C3^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     r14d, [rbp-10F4h]^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_47218E^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_47214A^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^movsxd  rax, dword ptr [rbp-10F8h]^^^mov     rsi, [rbp-10E0h]^^^imul    rax, 48h^^^add     rsi, rax^^^jz      loc_47242B^^^movsxd  rax, dword ptr [rsi+30h]^^^lea     rdx, [rbp-70h]^^^mov     rdi, rbx^^^shl     rax, 4^^^add     rax, [rbp-1118h]^^^mov     [rbp-70h], rax^^^call    __printf_fphex^^^test    eax, eax^^^js      loc_472422^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_46FE77^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_46F0F7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^movsxd  rax, dword ptr [rbp-10F8h]^^^imul    rax, 48h^^^add     rax, [rbp-10E0h]^^^jz      loc_4731E1^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbp-1118h]^^^shl     rax, 4^^^mov     r8, [rdx+rax]^^^test    r8, r8^^^jz      loc_4731B9^^^mov     dword ptr [rbp-1180h], 78h^^^mov     dword ptr [rbp-11ACh], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-11A4h], 1^^^mov     dword ptr [rbp-1160h], 10h^^^jmp     loc_46F607^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^lea     rsi, [rbp-0B0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-1120h]^^^mov     r8d, [rbp-1128h]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, [rbp-1180h]^^^mov     [rbp-0B0h], r8d^^^and     edx, 1^^^mov     r8d, [rbp-10F0h]^^^mov     byte ptr [rbp-0A3h], 4^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-11A4h]^^^mov     [rbp-0A8h], eax^^^movzx   eax, byte ptr [rbp-118Ch]^^^mov     [rbp-0ACh], r8d^^^and     edx, 1^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-1160h]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-1194h]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-1198h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-1190h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-11ACh]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^cmp     dword ptr [rbp-1160h], 0^^^mov     [rbp-0A4h], al^^^movsx   eax, byte ptr [rbp-11A5h]^^^mov     [rbp-0A0h], eax^^^jz      loc_473875^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-78h], edx^^^mov     [rbp-80h], rax^^^lea     rax, [rbp-80h]^^^lea     rdx, [rbp-70h]^^^mov     rdi, rbx^^^mov     [rbp-70h], rax^^^call    __printf_fphex^^^jmp     loc_472390^^^mov     dword ptr [rbp-1144h], 8^^^cmp     dword ptr [rbp-1138h], 0^^^mov     edx, [r12]^^^jz      short loc_47258A^^^cmp     edx, 30h^^^jnb     short loc_4725C6^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^mov     dword ptr [rbp-1168h], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-116Ch], 0^^^jmp     loc_471A0F^^^cmp     dword ptr [rbp-1184h], 0^^^jz      short loc_4725E6^^^cmp     edx, 30h^^^jnb     short loc_4725D6^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, byte ptr [rax]^^^mov     dword ptr [rbp-1168h], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-116Ch], 0^^^jmp     loc_471A0F^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_47256B^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4725A6^^^cmp     dword ptr [rbp-1154h], 0^^^jnz     loc_4730AD^^^cmp     edx, 30h^^^jnb     loc_47309A^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8d, [rax]^^^mov     dword ptr [rbp-1168h], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-116Ch], 0^^^jmp     loc_471A0F^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_4726BD^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     short loc_4726BD^^^mov     dword ptr [rax], 25h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      short loc_4726B4^^^add     r14d, 1^^^jmp     loc_46F0FA^^^movsxd  rax, dword ptr [rbp-10F8h]^^^imul    rax, 48h^^^add     rax, [rbp-10E0h]^^^jz      loc_472700^^^movsxd  rax, dword ptr [rax+30h]^^^shl     rax, 4^^^cmp     dword ptr [rbp-1120h], 0^^^jz      short loc_4726E9^^^mov     rdx, [rbp-1118h]^^^mov     r8, [rdx+rax]^^^test    r8, r8^^^jns     short loc_4726D7^^^neg     r8^^^mov     dword ptr [rbp-1160h], 0Ah^^^mov     r10d, 1^^^jmp     loc_46F607^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 25h^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_472651^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     dword ptr [rbp-1160h], 0Ah^^^xor     r10d, r10d^^^jmp     loc_46F607^^^cmp     dword ptr [rbp-11A0h], 0^^^jz      short loc_472728^^^mov     rcx, [rbp-1118h]^^^movsx   r8, byte ptr [rcx+rax]^^^jmp     short loc_472697^^^cmp     dword ptr [rbp-1120h], 0^^^mov     edx, [r12]^^^jz      short loc_472751^^^cmp     edx, 30h^^^jnb     short loc_472741^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_472697^^^cmp     dword ptr [rbp-118Ch], 0^^^jnz     short loc_472776^^^mov     rsi, [rbp-1118h]^^^movsxd  r8, dword ptr [rsi+rax]^^^jmp     loc_472697^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_472720^^^cmp     dword ptr [rbp-11A0h], 0^^^jz      short loc_472797^^^cmp     edx, 30h^^^jnb     short loc_472787^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   r8, byte ptr [rax]^^^jmp     loc_472697^^^mov     rdi, [rbp-1118h]^^^movsx   r8, word ptr [rdi+rax]^^^jmp     loc_472697^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_47276D^^^cmp     dword ptr [rbp-118Ch], 0^^^jnz     loc_473762^^^cmp     edx, 30h^^^jnb     loc_47374F^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsxd  r8, dword ptr [rax]^^^jmp     loc_472697^^^cmp     dword ptr [rbp-1184h], 0^^^jz      short loc_472807^^^cmp     edx, 30h^^^jnb     short loc_4727F7^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   rax, byte ptr [rax]^^^jmp     loc_4719F0^^^mov     dword ptr [rbp-1144h], 0Ah^^^jmp     loc_47254B^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4727DF^^^cmp     dword ptr [rbp-1154h], 0^^^jnz     loc_47327C^^^cmp     edx, 30h^^^jnb     loc_473269^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsxd  rax, dword ptr [rax]^^^jmp     loc_4719F0^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_47260A^^^cmp     edx, 30h^^^jnb     short loc_4730F0^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, word ptr [rax]^^^mov     dword ptr [rbp-1168h], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-116Ch], 0^^^jmp     loc_471A0F^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4730C0^^^cmp     dword ptr [rbp-1128h], 4^^^jg      short loc_4731CC^^^mov     dword ptr [rbp-1128h], 5^^^mov     dword ptr [rbp-1120h], 0^^^mov     r8d, offset asc_4B01E0^^^jmp     loc_470D0A^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_473259^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_4723E9^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_4731F8^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_47282B^^^cmp     edx, 30h^^^jnb     short loc_4732D7^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   rax, word ptr [rax]^^^jmp     loc_4719F0^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_47328F^^^mov     rsi, r9^^^mov     rdx, r8^^^mov     rax, rdx^^^shr     rdx, 3^^^sub     rsi, 4^^^and     eax, 7^^^test    rdx, rdx^^^mov     eax, [rcx+rax*4]^^^mov     [rsi], eax^^^jnz     short loc_47337D^^^jmp     loc_471D7A^^^cmp     dword ptr [rbp-1178h], 0^^^jz      loc_471D8F^^^mov     ecx, [rbp-1150h]^^^mov     rdx, [rbp-1140h]^^^mov     rsi, r9^^^mov     rdi, [rbp-1138h]^^^mov     [rbp-11D0h], r8^^^mov     [rbp-11C0h], r9^^^mov     [rbp-11B8h], r10d^^^call    group_number_0^^^mov     r10d, [rbp-11B8h]^^^mov     [rbp-1138h], rax^^^mov     r9, [rbp-11C0h]^^^mov     r8, [rbp-11D0h]^^^jmp     loc_471D8F^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_4727BB^^^cmp     edx, 30h^^^jnb     loc_4737FA^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movsx   r8, word ptr [rax]^^^jmp     loc_472697^^^mov     rsi, r9^^^mov     rdx, r8^^^mov     rax, rdx^^^shr     rdx, 4^^^sub     rsi, 4^^^and     eax, 0Fh^^^test    rdx, rdx^^^mov     eax, [rcx+rax*4]^^^mov     [rsi], eax^^^jnz     short loc_473788^^^jmp     loc_471D7A^^^mov     rsi, r9^^^mov     rax, r8^^^mov     edi, 0Ah^^^xor     edx, edx^^^sub     rsi, 4^^^div     rdi^^^mov     edx, [rcx+rdx*4]^^^test    rax, rax^^^mov     [rsi], edx^^^jnz     short loc_4737E2^^^jmp     loc_471D7A^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_473779^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     loc_47398C^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-80h], rax^^^jmp     loc_472528^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_473895^^^
__cache_sysconf$$$sub     rsp, 18h^^^mov     eax, cs:__cpu_features^^^test    eax, eax^^^jz      short loc_40EF20^^^cmp     eax, 1^^^jz      short loc_40EF48^^^cmp     eax, 2^^^jz      short loc_40EF38^^^xor     eax, eax^^^add     rsp, 18h^^^retn^^^mov     [rsp+18h+var_10], edi^^^call    __init_cpu_features^^^mov     eax, cs:__cpu_features^^^mov     edi, [rsp+18h+var_10]^^^jmp     short loc_40EF0E^^^add     rsp, 18h^^^jmp     handle_amd^^^mov     esi, cs:dword_6C60A4^^^add     rsp, 18h^^^jmp     handle_intel^^^
__tz_convert$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdx^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 48h^^^test    rdi, rdi^^^mov     rbp, rdi^^^mov     r12d, esi^^^jz      loc_447E68^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447C9A^^^lock cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_2170^^^jmp     short loc_447CA7^^^cmpxchg cs:tzset_lock, esi^^^jnz     _L_lock_2170^^^xor     edx, edx^^^cmp     rbx, offset _tmbuf^^^setz    dl^^^xor     eax, eax^^^test    r12d, r12d^^^setnz   al^^^test    edx, eax^^^jnz     loc_447D98^^^mov     eax, cs:is_initialized_11109^^^test    eax, eax^^^jz      loc_447D98^^^mov     eax, cs:__use_tzfile^^^test    eax, eax^^^jnz     loc_447D78^^^xor     esi, esi^^^mov     rdx, rbx^^^mov     rdi, rbp^^^call    __offtime^^^test    eax, eax^^^jnz     loc_447DE0^^^xor     ebx, ebx^^^mov     [rsp+48h+var_48], 0^^^mov     [rsp+48h+var_38], 0^^^test    rbx, rbx^^^jz      short loc_447D35^^^test    r12d, r12d^^^jz      loc_447DC0^^^mov     rsi, [rbx+28h]^^^sub     rsi, [rsp+48h+var_48]^^^mov     rdx, rbx^^^mov     rdi, rbp^^^call    __offtime^^^test    eax, eax^^^jz      loc_447DB8^^^mov     eax, [rsp+48h+var_38]^^^add     [rbx], eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_447D4D^^^lock dec cs:tzset_lock^^^jnz     _L_unlock_2249^^^jmp     short loc_447D59^^^dec     cs:tzset_lock^^^jnz     _L_unlock_2249^^^mov     rax, rbx^^^mov     rbp, [rsp+48h+var_18]^^^mov     rbx, [rsp+48h+var_20]^^^mov     r12, [rsp+48h+var_10]^^^mov     r13, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^mov     rdi, [rbp+0]^^^lea     rcx, [rsp+48h+var_38]^^^mov     r8, rbx^^^mov     rdx, rsp^^^mov     esi, r12d^^^call    __tzfile_compute^^^jmp     loc_447D06^^^mov     edi, 1^^^call    tzset_internal_part_0^^^mov     eax, cs:__use_tzfile^^^test    eax, eax^^^jz      loc_447CDF^^^jmp     short loc_447D78^^^xor     ebx, ebx^^^jmp     loc_447D35^^^mov     dword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+30h], offset unk_49D715^^^xor     esi, esi^^^mov     qword ptr [rbx+28h], 0^^^jmp     loc_447D18^^^mov     esi, [rbx+14h]^^^mov     edi, offset tz_rules^^^mov     r13, [rbp+0]^^^add     esi, 76Ch^^^call    compute_change^^^mov     esi, [rbx+14h]^^^mov     edi, offset qword_6C5730^^^add     esi, 76Ch^^^call    compute_change^^^test    r12d, r12d^^^jz      loc_447CF6^^^mov     rdx, cs:qword_6C5720^^^mov     rcx, cs:qword_6C5750^^^cmp     rdx, rcx^^^jg      short loc_447E7D^^^xor     eax, eax^^^cmp     r13, rdx^^^jl      short loc_447E35^^^xor     eax, eax^^^cmp     r13, rcx^^^setl    al^^^mov     [rbx+20h], eax^^^cdqe^^^mov     rdx, tzname[rax*8]^^^mov     [rbx+30h], rdx^^^lea     rdx, [rax+rax]^^^add     rax, rdx^^^shl     rax, 4^^^mov     rax, ds:qword_6C5718[rax]^^^mov     [rbx+28h], rax^^^jmp     loc_447CF6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebx, ebx^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_447D59^^^cmp     r13, rcx^^^mov     eax, 1^^^jl      short loc_447E35^^^xor     eax, eax^^^cmp     r13, rdx^^^setnl   al^^^jmp     short loc_447E35^^^
decompose_rpath$$$push    r14^^^mov     rax, cs:_dl_inhibit_rpath^^^push    r13^^^mov     r13, rcx^^^test    rax, rax^^^push    r12^^^mov     r12, rdi^^^mov     rdi, rdx^^^push    rbp^^^push    rbx^^^mov     r14, [rdx+8]^^^jnz     loc_450D4E^^^mov     edx, 1^^^call    expand_dynamic_string_token^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_450D3B^^^movzx   eax, byte ptr [rax]^^^xor     edx, edx^^^mov     rcx, rbx^^^test    al, al^^^jz      short loc_450D20^^^nop     word ptr [rax+rax+00000000h]^^^lea     rsi, [rdx+1]^^^cmp     al, 3Ah^^^cmovz   rdx, rsi^^^add     rcx, 1^^^movzx   eax, byte ptr [rcx]^^^test    al, al^^^jnz     short loc_450CB0^^^lea     rdi, ds:10h[rdx*8]^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_450DBC^^^mov     r9, r14^^^mov     r8, r13^^^mov     rdi, rbx^^^xor     ecx, ecx^^^mov     edx, (offset aScopeU+9)^^^mov     rsi, rax^^^call    fillin_rpath^^^mov     rdi, rbx^^^call    free^^^pop     rbx^^^mov     [r12], rbp^^^mov     dword ptr [r12+8], 1^^^mov     eax, 1^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rdi, rbx^^^call    free^^^pop     rbx^^^pop     rbp^^^mov     qword ptr [r12], 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     ecx, offset aCannotCreateRu^^^xor     edx, edx^^^xor     esi, esi^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^cmp     cs:__libc_enable_secure, 0^^^jnz     loc_450C85^^^movzx   edx, byte ptr [rax]^^^mov     rcx, r14^^^jmp     short loc_450D78^^^test    dl, dl^^^jz      short loc_450DAA^^^movzx   edx, byte ptr [rax+1]^^^add     rcx, 1^^^add     rax, 1^^^movzx   r8d, byte ptr [rcx]^^^cmp     r8b, dl^^^jz      short loc_450D68^^^test    r8b, r8b^^^jz      short loc_450DAA^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      loc_450C85^^^add     rax, 1^^^cmp     dl, 3Ah^^^jnz     short loc_450D86^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      loc_450C85^^^mov     rcx, r14^^^jmp     short loc_450D78^^^cmp     dl, 3Ah^^^jz      loc_450D28^^^test    dl, dl^^^jnz     short loc_450D86^^^jmp     loc_450D28^^^mov     rdi, rbx^^^nop^^^call    free^^^mov     ecx, offset aCannotCreateCa^^^jmp     loc_450D40^^^
hack_digit.14698$$$push    rbp^^^push    rbx^^^mov     rbx, r10^^^sub     rsp, 8^^^mov     eax, [r10+30h]^^^test    eax, eax^^^jz      short loc_41FF1C^^^cmp     dword ptr [r10+2Ch], 66h^^^jz      loc_420020^^^mov     r9, [rbx+20h]^^^test    r9, r9^^^jz      loc_41FFF0^^^mov     r10, [rbx+18h]^^^cmp     r9, r10^^^jg      short loc_41FFB0^^^mov     rdx, [rbx+10h]^^^mov     rdi, [rbx+8]^^^mov     rcx, r10^^^mov     r8, [rbx]^^^xor     esi, esi^^^call    __mpn_divrem^^^mov     r10, [rbx+20h]^^^mov     rdx, [rbx+18h]^^^mov     rcx, [rbx+8]^^^sub     rdx, r10^^^test    r10, r10^^^mov     [rcx+rdx*8], rax^^^mov     rbp, [rcx]^^^mov     [rbx+18h], r10^^^jz      short loc_41FF98^^^mov     rdi, [rbx+10h]^^^lea     rax, [r10-1]^^^cmp     qword ptr [rdi+rax*8], 0^^^jz      short loc_41FF90^^^jmp     loc_42004C^^^cmp     qword ptr [rdi+rax*8-8], 0^^^jnz     loc_420048^^^sub     rax, 1^^^test    rax, rax^^^mov     r10, rax^^^jnz     short loc_41FF80^^^mov     qword ptr [rbx+18h], 1^^^add     rsp, 8^^^add     ebp, 30h^^^pop     rbx^^^mov     eax, ebp^^^pop     rbp^^^retn^^^mov     rdi, [rbx+10h]^^^mov     ebp, 30h^^^mov     ecx, 0Ah^^^mov     rdx, r10^^^mov     rsi, rdi^^^call    __mpn_mul_1^^^test    rax, rax^^^jz      short loc_41FFE2^^^mov     rdx, [rbx+18h]^^^mov     rcx, [rbx+10h]^^^mov     [rcx+rdx*8], rax^^^add     rdx, 1^^^mov     [rbx+18h], rdx^^^add     rsp, 8^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rdx, [rbx+18h]^^^mov     rdi, [rbx+10h]^^^mov     ecx, 0Ah^^^sub     rdx, 1^^^mov     rsi, rdi^^^lea     rbx, [rdi+rdx*8]^^^mov     rbp, [rbx]^^^call    __mpn_mul_1^^^mov     [rbx], rax^^^add     rsp, 8^^^add     ebp, 30h^^^pop     rbx^^^mov     eax, ebp^^^pop     rbp^^^retn^^^mov     eax, [r10+28h]^^^mov     ebp, 30h^^^lea     edx, [rax-1]^^^test    eax, eax^^^mov     [r10+28h], edx^^^jle     loc_41FF1C^^^add     rsp, 8^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^retn^^^mov     [rbx+18h], rax^^^add     ebp, 30h^^^jmp     loc_41FFB9^^^
sYSTRIm.isra.1$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_10], r14^^^xor     r12d, r12d^^^mov     [rsp+var_8], r15^^^mov     [rsp+var_18], r13^^^sub     rsp, 38h^^^mov     rax, [rsi]^^^mov     r14, rdx^^^mov     rbp, [rax+8]^^^mov     rax, cs:_dl_pagesize^^^and     rbp, 0FFFFFFFFFFFFFFF8h^^^neg     rax^^^mov     r15, rbp^^^sub     r15, rdi^^^sub     r15, 21h^^^and     r15, rax^^^jle     short loc_403385^^^xor     edi, edi^^^call    cs:__morecore^^^mov     r13, rax^^^mov     rax, rbp^^^add     rax, [rbx]^^^cmp     r13, rax^^^jz      short loc_4033B0^^^mov     eax, r12d^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^mov     rdi, r15^^^neg     rdi^^^call    cs:__morecore^^^mov     rax, cs:__after_morecore_hook^^^test    rax, rax^^^jnz     short loc_4033F3^^^xor     edi, edi^^^xor     r12d, r12d^^^call    cs:__morecore^^^test    rax, rax^^^jz      short loc_403385^^^sub     r13, rax^^^jz      short loc_403385^^^mov     rax, [rbx]^^^sub     rbp, r13^^^sub     [r14], r13^^^or      rbp, 1^^^mov     r12b, 1^^^mov     [rax+8], rbp^^^jmp     short loc_403385^^^call    rax ^^^jmp     short loc_4033C8^^^
_L_unlock_157$$$lea     rdi, [rsi]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_425C6C^^^
_L_unlock_754$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42B9FC^^^
readdir64$$$push    r13             ^^^mov     esi, 1^^^xor     eax, eax^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     rbp, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, fs:[rbp+0]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_44BFF6^^^lock cmpxchg [rbx+4], esi^^^jnz     _L_lock_20^^^jmp     short loc_44C000^^^cmpxchg [rbx+4], esi^^^jnz     _L_lock_20^^^mov     rcx, [rbx+18h]^^^mov     rax, [rbx+10h]^^^lea     r13, [rbx+30h]^^^jmp     short loc_44C02E^^^lea     rdx, [rbx+rcx+30h]^^^movzx   esi, word ptr [rdx+10h]^^^add     rcx, rsi^^^cmp     qword ptr [rdx], 0^^^mov     rsi, [rdx+8]^^^mov     [rbx+18h], rcx^^^mov     [rbx+20h], rsi^^^jnz     short loc_44C060^^^cmp     rcx, rax^^^jb      short loc_44C010^^^mov     rdx, [rbx+8]^^^mov     edi, [rbx]^^^mov     rsi, r13^^^call    __getdents64^^^cmp     rax, 0^^^jle     short loc_44C050^^^mov     [rbx+10h], rax^^^xor     ecx, ecx^^^jmp     short loc_44C010^^^jnz     short loc_44C084^^^mov     fs:[rbp+0], r12d^^^xor     edx, edx^^^nop     dword ptr [rax+00000000h]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_44C071^^^lock dec dword ptr [rbx+4]^^^jnz     short _L_unlock_88^^^jmp     short loc_44C076^^^dec     dword ptr [rbx+4]^^^jnz     short _L_unlock_88^^^add     rsp, 8^^^mov     rax, rdx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^xor     edx, edx^^^cmp     dword ptr fs:[rbp+0], 2^^^jnz     short loc_44C060^^^jmp     short loc_44C052^^^
_dl_debug_initialize$$$test    rsi, rsi^^^mov     eax, offset _r_debug^^^jz      short loc_4557B8^^^lea     rax, [rsi+rsi*8]^^^shl     rax, 4^^^add     rax, 6C6048h^^^test    rdi, rdi^^^setnz   dl^^^jz      short loc_4557F0^^^test    dl, dl^^^lea     rdx, [rsi+rsi*8]^^^cmovz   rdi, cs:qword_6C61C0^^^mov     dword ptr [rax], 1^^^shl     rdx, 4^^^mov     rdx, ds:_dl_ns[rdx]^^^mov     qword ptr [rax+10h], offset _dl_debug_state^^^mov     [rax+20h], rdi^^^mov     [rax+8], rdx^^^retn^^^cmp     qword ptr [rax+8], 0^^^jz      short loc_4557C0^^^rep retn^^^
register_printf_modifier$$$push    r12^^^push    rbp^^^push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^test    eax, eax^^^jz      short loc_42444A^^^mov     rbp, rdi^^^jmp     short loc_424443^^^add     rbp, 4^^^mov     eax, [rbp+0]^^^test    eax, eax^^^jz      short loc_424468^^^cmp     eax, 0FFh^^^jbe     short loc_424438^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^pop     rbx^^^pop     rbp^^^mov     eax, esi^^^pop     r12^^^retn^^^mov     edx, cs:next_bit^^^sub     edx, 10h^^^cmp     edx, 7^^^jbe     loc_424576^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_424498^^^lock cmpxchg cs:lock_3, esi^^^jnz     _L_lock_135^^^jmp     short loc_4244A5^^^cmpxchg cs:lock_3, esi^^^jnz     _L_lock_135^^^cmp     cs:__printf_modifier_table, 0^^^jz      loc_424550^^^sub     rbp, rbx^^^sar     rbp, 2^^^lea     rdi, ds:10h[rbp*4]^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     esi, 0FFFFFFFFh^^^jz      short loc_424525^^^movzx   edx, byte ptr [rbx]^^^mov     rax, cs:__printf_modifier_table^^^lea     rsi, [rbx+4]^^^mov     ecx, cs:next_bit^^^lea     rdi, [r12+0Ch]^^^mov     rax, [rax+rdx*8]^^^mov     rdx, rbp^^^mov     [r12], rax^^^mov     eax, 1^^^shl     eax, cl^^^add     ecx, 1^^^mov     [r12+8], eax^^^mov     cs:next_bit, ecx^^^call    wmemcpy^^^movzx   edx, byte ptr [rbx]^^^mov     rax, cs:__printf_modifier_table^^^mov     esi, [r12+8]^^^mov     [rax+rdx*8], r12^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42453D^^^lock dec cs:lock_3^^^jnz     _L_unlock_182^^^jmp     short loc_424549^^^dec     cs:lock_3^^^jnz     _L_unlock_182^^^pop     rbx^^^pop     rbp^^^mov     eax, esi^^^pop     r12^^^retn^^^mov     esi, 8^^^mov     edi, 0FFh^^^call    calloc^^^test    rax, rax^^^mov     cs:__printf_modifier_table, rax^^^mov     esi, 0FFFFFFFFh^^^jnz     loc_4244B3^^^jmp     short loc_424525^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 1Ch^^^jmp     loc_42445D^^^
__strncasecmp_sse42$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
__strcasecmp_l_ssse3$$$mov     rax, [rdx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strcasecmp_l_nonascii^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm5, cs:xmmword_49CA70^^^movdqa  xmm6, cs:xmmword_49CA80^^^movdqa  xmm7, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_43EC30^^^cmp     eax, 30h^^^ja      loc_43EC30^^^movlpd  xmm1, qword ptr [rdi]^^^movlpd  xmm2, qword ptr [rsi]^^^movhpd  xmm1, qword ptr [rdi+8]^^^movhpd  xmm2, qword ptr [rsi+8]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C60^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     dword ptr [rax+00000000h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^cmp     ecx, eax^^^jz      short loc_43EC70^^^ja      short loc_43EC53^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_49D2F0^^^movsxd  r9, dword ptr [r10+r9*4]^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^mov     rcx, 10h^^^mov     r9, 10h^^^pxor    xmm0, xmm0^^^nop     dword ptr [rax+rax+00000000h]^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^jmp     loc_43ED00^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43EFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43EFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43EE90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFEh^^^jnz     short loc_43EFD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43EE9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 1^^^psrldq  xmm3, 1^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43F1B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43F1B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43F090^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFFCh^^^jnz     short loc_43F1D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43F09A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 2^^^psrldq  xmm3, 2^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43F3B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43F3B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43F290^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF8h^^^jnz     short loc_43F3D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43F29A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 3^^^psrldq  xmm3, 3^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43F5B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43F5B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43F490^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFF0h^^^jnz     short loc_43F5D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43F49A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 4^^^psrldq  xmm3, 4^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43F7B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43F7B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43F690^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFE0h^^^jnz     short loc_43F7D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43F69A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 5^^^psrldq  xmm3, 5^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43F9B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43F9B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43F890^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FFC0h^^^jnz     short loc_43F9D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43F89A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 6^^^psrldq  xmm3, 6^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43FBB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43FBB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43FA90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF80h^^^jnz     short loc_43FBD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43FA9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 7^^^psrldq  xmm3, 7^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43FDB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43FDB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 8^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43FC90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FF00h^^^jnz     short loc_43FDD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43FC9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 8^^^psrldq  xmm3, 8^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 7^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_43FFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_43FFB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 9^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_43FE90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FE00h^^^jnz     short loc_43FFD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_43FE9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 9^^^psrldq  xmm3, 9^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 6^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4401B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4401B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ah^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440090^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0FC00h^^^jnz     short loc_4401D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_44009A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ah^^^psrldq  xmm3, 0Ah^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 5^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4403B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4403B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Bh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440290^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F800h^^^jnz     short loc_4403D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_44029A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Bh^^^psrldq  xmm3, 0Bh^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 4^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4405B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4405B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Ch^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440490^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0F000h^^^jnz     short loc_4405D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_44049A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Ch^^^psrldq  xmm3, 0Ch^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 3^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4407B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4407B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Dh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440690^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0E000h^^^jnz     short loc_4407D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_44069A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Dh^^^psrldq  xmm3, 0Dh^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 2^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_4409B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_4409B0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Eh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440890^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 0C000h^^^jnz     short loc_4409D0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_44089A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm0, 0Eh^^^psrldq  xmm3, 0Eh^^^jmp     loc_440BE0^^^pxor    xmm0, xmm0^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^pslldq  xmm2, 1^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_440C45^^^movdqa  xmm3, xmmword ptr [rdi]^^^pxor    xmm0, xmm0^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^nop     dword ptr [rax]^^^add     r10, 10h^^^jg      loc_440BB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^add     r10, 10h^^^jg      loc_440BB0^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^movdqa  xmm2, xmmword ptr [rdi+rcx]^^^movdqa  xmm4, xmm2^^^palignr xmm2, xmm3, 0Fh^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm2^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm2^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm2, xmm10^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_440C40^^^add     rcx, 10h^^^movdqa  xmm3, xmm4^^^jmp     loc_440A90^^^pcmpeqb xmm0, xmm3^^^pmovmskb edx, xmm0^^^test    edx, 8000h^^^jnz     short loc_440BD0^^^pxor    xmm0, xmm0^^^sub     r10, 1000h^^^jmp     loc_440A9A^^^movdqa  xmm1, xmmword ptr [rsi+rcx]^^^psrldq  xmm3, 0Fh^^^psrldq  xmm0, 0Fh^^^nop^^^movdqa  xmm8, xmm1^^^movdqa  xmm9, xmm6^^^movdqa  xmm10, xmm3^^^movdqa  xmm11, xmm6^^^pcmpgtb xmm8, xmm5^^^pcmpgtb xmm9, xmm1^^^pcmpgtb xmm10, xmm5^^^pcmpgtb xmm11, xmm3^^^pand    xmm8, xmm9^^^pand    xmm10, xmm11^^^pand    xmm8, xmm7^^^pand    xmm10, xmm7^^^por     xmm1, xmm8^^^por     xmm3, xmm10^^^pcmpeqb xmm1, xmm3^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^not     edx^^^nop     word ptr [rax+rax+00000000h]^^^lea     rax, [r9+rcx-10h]^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_440C60^^^xchg    rsi, rdi^^^nop     dword ptr [rax+rax+00000000h]^^^bsf     rdx, rdx^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
_L_unlock_148$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40278B^^^
_dl_protect_relro$$$mov     rax, cs:_dl_pagesize^^^push    rbx^^^mov     rbx, rdi^^^mov     rsi, [rdi+450h]^^^add     rsi, [rdi]^^^neg     rax^^^mov     rdi, rax^^^and     rdi, rsi^^^add     rsi, [rbx+458h]^^^and     rsi, rax^^^cmp     rdi, rsi^^^jz      short loc_453FAE^^^sub     rsi, rdi^^^mov     edx, 1^^^call    mprotect^^^test    eax, eax^^^js      short loc_453FB0^^^pop     rbx^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rsi, [rbx+8]^^^mov     ecx, offset errstring_10964^^^xor     edx, edx^^^mov     edi, fs:[rax]^^^call    _dl_signal_error^^^
__mbsrtowcs_l$$$push    r15^^^mov     r15, rdi^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 198h^^^mov     rbx, [r8]^^^mov     [rsp+1C8h+var_68], 0^^^mov     [rsp+1C8h+var_1A8], rsi^^^mov     rsi, rdx^^^mov     [rsp+1C8h+var_84], 0^^^mov     [rsp+1C8h+var_80], 1^^^mov     rax, [rbx+28h]^^^mov     [rsp+1C8h+var_88], 1^^^mov     [rsp+1C8h+var_78], rcx^^^test    rax, rax^^^jz      loc_47703A^^^mov     r12, [rax]^^^cmp     qword ptr [r12], 0^^^mov     rbp, [r12+28h]^^^jz      short loc_476D0D^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^test    r15, r15^^^jz      loc_476EF0^^^mov     rcx, [rsp+1C8h+var_1A8]^^^lea     rax, [r15+rsi*4]^^^test    rsi, rsi^^^mov     [rsp+1C8h+var_98], r15^^^mov     [rsp+1C8h+var_90], rax^^^mov     rdx, [rcx]^^^mov     [rsp+1C8h+var_48], rdx^^^jz      loc_476FE8^^^lea     r13, [rsp+1C8h+var_40]^^^lea     r14, [rsp+1C8h+var_48]^^^jmp     short loc_476D8F^^^mov     rdx, [rsp+1C8h+var_48]^^^mov     rcx, [rsp+1C8h+var_98]^^^cmp     rdx, rbx^^^jnz     loc_476E04^^^cmp     byte ptr [rbx-1], 0^^^jz      loc_476E04^^^mov     rsi, [rsp+1C8h+var_90]^^^sub     rsi, rcx^^^sar     rsi, 2^^^test    rsi, rsi^^^jz      short loc_476E04^^^mov     rdi, rdx^^^mov     [rsp+1C8h+var_1B0], rdx^^^call    sub_400330^^^mov     rdx, [rsp+1C8h+var_1B0]^^^mov     rdi, rbp^^^lea     rbx, [rdx+rax+1]^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rdi, r12^^^mov     [rsp+1C8h+var_1C0], 1^^^mov     [rsp+1C8h+var_1C8], 0^^^mov     r9, r13^^^mov     rcx, rbx^^^mov     rdx, r14^^^lea     rsi, [rsp+1C8h+var_98]^^^call    rbp^^^cmp     eax, 4^^^setnz   dil^^^cmp     eax, 7^^^jz      loc_476D58^^^test    dil, dil^^^jz      loc_476D58^^^mov     rcx, [rsp+1C8h+var_98]^^^mov     rdx, [rsp+1C8h+var_48]^^^mov     edi, 1^^^mov     rsi, [rsp+1C8h+var_1A8]^^^sub     rcx, r15^^^sar     rcx, 2^^^cmp     eax, 4^^^mov     rbx, rcx^^^mov     [rsi], rdx^^^jnz     loc_476EA8^^^lea     rdx, [rcx-1]^^^mov     esi, [r15+rdx*4]^^^test    esi, esi^^^jnz     short loc_476E55^^^test    rcx, rcx^^^jz      loc_477008^^^mov     rcx, [rsp+1C8h+var_78]^^^mov     ecx, [rcx]^^^test    ecx, ecx^^^jnz     loc_477021^^^mov     rsi, [rsp+1C8h+var_1A8]^^^mov     rbx, rdx^^^mov     qword ptr [rsi], 0^^^test    eax, eax^^^setnz   dl^^^mov     ecx, edx^^^and     ecx, edi^^^test    cl, cl^^^jnz     short loc_476EBE^^^cmp     eax, 5^^^jz      short loc_476E8C^^^test    dl, dl^^^jz      short loc_476E8C^^^cmp     eax, 7^^^xchg    ax, ax^^^jz      short loc_476E8C^^^test    dil, dil^^^jz      short loc_476E8C^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 54h^^^add     rsp, 198h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    eax, eax^^^jz      loc_476E1F^^^mov     ecx, edi^^^mov     edx, 1^^^and     ecx, 1^^^test    cl, cl^^^jz      short loc_476E62^^^cmp     eax, 7^^^jz      short loc_476E62^^^cmp     eax, 6^^^jz      short loc_476E62^^^cmp     eax, 5^^^jz      short loc_476E8C^^^mov     ecx, offset __PRETTY_FUNCTION___11487_0^^^mov     edx, 9Fh^^^mov     esi, offset aMbsrtowcs_l_c^^^mov     edi, offset aStatus__gconv_^^^call    __assert_fail^^^mov     rsi, [rsp+1C8h+var_1A8]^^^lea     r15, [rsp+1C8h+var_198]^^^lea     r13, [rsp+1C8h+var_40]^^^lea     r14, [rsp+1C8h+var_48]^^^mov     rbx, [rsi]^^^mov     rdi, rbx^^^mov     [rsp+1C8h+var_48], rbx^^^call    strlen^^^lea     rax, [rbx+rax+1]^^^xor     ebx, ebx^^^mov     [rsp+1C8h+var_1A0], rax^^^mov     rax, [rsp+1C8h+var_78]^^^mov     rax, [rax]^^^mov     [rsp+1C8h+var_58], rax^^^lea     rax, [rsp+1C8h+var_58]^^^mov     [rsp+1C8h+var_78], rax^^^lea     rax, [r15+100h]^^^mov     [rsp+1C8h+var_1A8], rax^^^mov     [rsp+1C8h+var_90], rax^^^mov     rdi, rbp^^^mov     [rsp+1C8h+var_98], r15^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rcx, [rsp+1C8h+var_1A0]^^^mov     rdx, r14^^^mov     [rsp+1C8h+var_1C0], 1^^^mov     [rsp+1C8h+var_1C8], 0^^^mov     r9, r13^^^mov     rsi, [rsp+1C8h+var_1A8]^^^mov     rdi, r12^^^call    rbp^^^mov     rcx, [rsp+1C8h+var_98]^^^mov     rdx, rcx^^^sub     rdx, r15^^^sar     rdx, 2^^^add     rbx, rdx^^^cmp     eax, 5^^^jz      short loc_476F60^^^cmp     eax, 4^^^jz      short loc_476FC8^^^test    eax, eax^^^mov     edx, 1^^^mov     edi, 1^^^jnz     loc_476EBE^^^mov     edi, [rcx-4]^^^test    edi, edi^^^jnz     short loc_476FEF^^^sub     rbx, 1^^^test    eax, eax^^^setnz   dl^^^cmp     eax, 4^^^setnz   dil^^^mov     ecx, edx^^^and     ecx, edi^^^jmp     loc_476E5E^^^xor     ebx, ebx^^^jmp     loc_476E8C^^^mov     ecx, offset __PRETTY_FUNCTION___11487_0^^^mov     edx, 64h^^^mov     esi, offset aMbsrtowcs_l_c^^^mov     edi, offset aWchar_tData___^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11487_0^^^mov     edx, 93h^^^mov     esi, offset aMbsrtowcs_l_c^^^mov     edi, offset aResult0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11487_0^^^mov     edx, 94h^^^mov     esi, offset aMbsrtowcs_l_c^^^mov     edi, offset aData___statep_^^^call    __assert_fail^^^cmp     rbx, offset _nl_C_LC_CTYPE^^^mov     eax, offset __wcsmbs_gconv_fcts_c^^^jz      loc_476CF1^^^mov     rdi, rbx^^^mov     [rsp+1C8h+var_1B0], rdx^^^call    __wcsmbs_load_conv^^^mov     rax, [rbx+28h]^^^mov     rsi, [rsp+1C8h+var_1B0]^^^jmp     loc_476CF1^^^
__handle_registered_modifier_mb$$$push    r14^^^mov     rax, cs:__printf_modifier_table^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, [rdi]^^^push    rbx^^^movzx   edx, byte ptr [rbp+0]^^^mov     r9, [rax+rdx*8]^^^mov     eax, 1^^^test    r9, r9^^^jz      loc_424649^^^movzx   r10d, byte ptr [rbp+1]^^^lea     r11, [rbp+1]^^^xor     r14d, r14d^^^xor     r12d, r12d^^^xor     r13d, r13d^^^movzx   ebx, r10b^^^xchg    ax, ax^^^test    r10b, r10b^^^lea     rdx, [r9+0Ch]^^^jz      short loc_424652^^^mov     eax, [r9+0Ch]^^^test    eax, eax^^^jz      short loc_424657^^^cmp     eax, ebx^^^jnz     short loc_42462D^^^mov     rax, r11^^^jmp     short loc_424600^^^mov     r8d, [rdx]^^^test    r8d, r8d^^^jz      short loc_424615^^^movzx   ecx, cl^^^cmp     r8d, ecx^^^jnz     short loc_42462D^^^add     rax, 1^^^add     rdx, 4^^^movzx   ecx, byte ptr [rax]^^^test    cl, cl^^^jnz     short loc_4245F0^^^mov     edx, [rdx]^^^test    edx, edx^^^jnz     short loc_42462D^^^mov     rdx, rax^^^movsxd  rcx, r12d^^^sub     rdx, rbp^^^cmp     rdx, rcx^^^jle     short loc_42462D^^^mov     r13d, [r9+8]^^^mov     r12d, edx^^^mov     r14, rax^^^mov     r9, [r9]^^^test    r9, r9^^^jnz     short loc_4245D0^^^test    r13d, r13d^^^mov     eax, 1^^^jz      short loc_424649^^^or      [rsi+0Eh], r13w^^^xor     al, al^^^mov     [rdi], r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^mov     rax, r11^^^jmp     short loc_42460F^^^mov     rax, r11^^^jmp     short loc_424615^^^
__pthread_initialize_minimal$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^mov     rax, cs:_dl_phdr^^^test    rax, rax^^^jz      short loc_4017B0^^^mov     rdx, cs:_dl_phnum^^^lea     rcx, ds:0[rdx*8]^^^shl     rdx, 6^^^sub     rdx, rcx^^^add     rdx, rax^^^cmp     rax, rdx^^^jb      short loc_401769^^^jmp     short loc_4017B0^^^add     rax, 38h^^^cmp     rax, rdx^^^jnb     short loc_4017B0^^^cmp     dword ptr [rax], 7^^^jnz     short loc_401760^^^mov     rbx, [rax+30h]^^^mov     rbp, [rax+28h]^^^mov     r13, [rax+20h]^^^mov     r14, [rax+10h]^^^cmp     rbx, 40h^^^ja      loc_401970^^^mov     rsi, r14^^^mov     [rsp+58h+var_40], 0FFFFFFFFFFFFFFC0h^^^mov     [rsp+58h+var_48], 3Fh^^^mov     edi, 940h^^^mov     r12d, 40h^^^jmp     short loc_4017D9^^^xor     esi, esi^^^mov     [rsp+58h+var_40], 0FFFFFFFFFFFFFFC0h^^^mov     [rsp+58h+var_48], 3Fh^^^mov     edi, 940h^^^mov     r12d, 40h^^^xor     ebx, ebx^^^xor     r14d, r14d^^^xor     r13d, r13d^^^xor     ebp, ebp^^^mov     rax, cs:_dl_tls_static_size^^^mov     [rsp+58h+var_50], rsi^^^lea     r15, [rbp+rax+3Fh]^^^and     r15, 0FFFFFFFFFFFFFFC0h^^^add     rdi, r15^^^call    sbrk^^^mov     rcx, [rsp+58h+var_48]^^^mov     cs:static_dtv, 3Eh^^^mov     rsi, [rsp+58h+var_50]^^^add     rcx, rax^^^and     rcx, [rsp+58h+var_40]^^^test    rbx, rbx^^^jz      short loc_401888^^^lea     rax, [rbp+rbx-1]^^^xor     edx, edx^^^mov     rdi, r15^^^div     rbx^^^imul    rax, rbx^^^sub     rdi, rax^^^add     rdi, rcx^^^mov     rdx, r13^^^mov     [rsp+58h+var_50], rcx^^^mov     cs:qword_6C3780, rdi^^^mov     cs:qword_6C3FA0, rax^^^mov     cs:byte_6C3788, 1^^^call    memcpy^^^mov     rcx, [rsp+58h+var_50]^^^mov     edi, 1002h^^^mov     eax, 9Eh^^^lea     rsi, [rcx+r15]^^^mov     qword ptr [rsi+8], offset unk_6C3770^^^mov     [rsi], rsi^^^mov     [rsi+10h], rsi^^^syscall^^^test    eax, eax^^^jz      short loc_4018A0^^^mov     edi, offset aCannotSetFsBas^^^call    __libc_fatal^^^mov     rdi, r15^^^mov     rax, rbp^^^sub     rdi, rbp^^^add     rdi, rcx^^^jmp     short loc_40182F^^^and     cs:byte_6C3E74, 0FCh^^^test    rbx, rbx^^^mov     cs:qword_6C3F90, rbx^^^mov     cs:qword_6C3F88, rbp^^^mov     cs:qword_6C3F78, r14^^^mov     cs:qword_6C3F80, r13^^^mov     cs:qword_6C3FA8, 1^^^mov     cs:static_slotinfo, 40h^^^mov     cs:_dl_tls_max_dtv_idx, 1^^^mov     cs:_dl_tls_dtv_slotinfo_list, offset static_slotinfo^^^mov     cs:qword_6C4008, offset static_map^^^jz      short loc_401968^^^lea     rax, [rbp+rbx-1]^^^xor     edx, edx^^^div     rbx^^^mov     rbp, rax^^^imul    rbx, rbp^^^mov     rax, cs:_dl_tls_static_size^^^mov     cs:_dl_tls_static_nelem, 1^^^lea     rax, [rbx+rax+3Fh]^^^mov     cs:_dl_tls_static_used, rbx^^^and     rax, 0FFFFFFFFFFFFFFC0h^^^add     rax, 900h^^^cmp     r12, 40h^^^mov     cs:_dl_tls_static_size, rax^^^mov     eax, 40h^^^cmovnb  rax, r12^^^mov     cs:_dl_tls_static_align, rax^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     bl, 1^^^jmp     short loc_40190C^^^lea     rax, [rbx-1]^^^lea     rdi, [rbx+900h]^^^mov     rsi, r14^^^mov     r12, rbx^^^mov     [rsp+58h+var_48], rax^^^mov     rax, rbx^^^neg     rax^^^mov     [rsp+58h+var_40], rax^^^jmp     loc_4017D9^^^
_L_unlock_141$$$lea     rdi, lock_1^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4179B1^^^
new_composite_name$$$push    r15^^^mov     r15, rsi^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     ebp, 1^^^push    rbx^^^sub     rsp, 28h^^^cmp     edi, 6^^^mov     [rsp+58h+var_3C], edi^^^jz      loc_460C50^^^xor     ebx, ebx^^^mov     edx, 1^^^xor     r13d, r13d^^^jmp     short loc_460C36^^^movsxd  rcx, ebx^^^mov     r12, off_6C35E0[rcx*8]^^^mov     rdi, r12^^^mov     [rsp+58h+var_48], edx^^^mov     [rsp+58h+var_50], rcx^^^call    strlen^^^mov     rcx, [rsp+58h+var_50]^^^mov     r14, rax^^^mov     edx, [rsp+58h+var_48]^^^movzx   eax, ds:_nl_category_name_sizes[rcx]^^^lea     r13, [r13+rax+2]^^^add     r13, r14^^^test    edx, edx^^^jz      short loc_460C27^^^mov     rsi, [r15]^^^mov     edx, 1^^^cmp     r12, rsi^^^jz      short loc_460C27^^^mov     rdi, r12^^^call    sub_4003A0^^^xor     edx, edx^^^test    eax, eax^^^setz    dl^^^cmp     ebp, 0Dh^^^jz      loc_460CC2^^^add     ebx, 1^^^add     ebp, 1^^^cmp     ebx, 6^^^jz      short loc_460C30^^^cmp     ebx, [rsp+58h+var_3C]^^^jnz     short loc_460BD0^^^mov     r12, [r15]^^^movsxd  rcx, ebx^^^jmp     short loc_460BDB^^^xor     ebx, ebx^^^mov     edx, 1^^^xor     r13d, r13d^^^jmp     short loc_460C67^^^add     rbx, 1^^^add     ebp, 1^^^cmp     ebx, 6^^^jz      short loc_460C60^^^mov     r12, [r15+rbx*8]^^^mov     [rsp+58h+var_48], edx^^^mov     dword ptr [rsp+58h+var_50], ebx^^^mov     rdi, r12^^^call    strlen^^^mov     ecx, dword ptr [rsp+58h+var_50]^^^mov     r14, rax^^^mov     edx, [rsp+58h+var_48]^^^movsxd  rcx, ecx^^^movzx   eax, ds:_nl_category_name_sizes[rcx]^^^lea     r13, [r13+rax+2]^^^add     r13, r14^^^test    edx, edx^^^jz      short loc_460CBD^^^mov     rsi, [r15]^^^mov     edx, 1^^^cmp     r12, rsi^^^jz      short loc_460CBD^^^mov     rdi, r12^^^call    sub_4003A0^^^xor     edx, edx^^^test    eax, eax^^^setz    dl^^^cmp     ebp, 0Dh^^^jnz     short loc_460C60^^^test    edx, edx^^^jz      short loc_460D20^^^mov     rbx, [r15]^^^mov     esi, offset _nl_C_name^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jz      short loc_460D10^^^mov     esi, offset _nl_POSIX_name^^^mov     rdi, rbx^^^mov     r13d, offset _nl_C_name^^^call    sub_4003A0^^^test    eax, eax^^^jnz     loc_460DF8^^^add     rsp, 28h^^^mov     rax, r13^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r13d, offset _nl_C_name^^^jmp     short loc_460CF5^^^mov     rdi, r13^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_460CF5^^^cmp     [rsp+58h+var_3C], 6^^^mov     rdi, rax^^^mov     ebp, 1^^^jz      short loc_460D9C^^^xor     ebx, ebx^^^jmp     short loc_460D87^^^movsxd  rax, ebx^^^mov     r12, off_6C35E0[rax*8]^^^movzx   esi, ds:_nl_category_name_idxs[rax]^^^add     rsi, 4A17E0h^^^call    near ptr qword_400310^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 3Dh^^^mov     rsi, r12^^^call    near ptr qword_400310^^^cmp     ebp, 0Dh^^^mov     byte ptr [rax], 3Bh^^^lea     rdi, [rax+1]^^^jz      short loc_460DE8^^^add     ebx, 1^^^add     ebp, 1^^^cmp     ebx, 6^^^jz      short loc_460D81^^^cmp     [rsp+58h+var_3C], ebx^^^jnz     short loc_460D48^^^mov     r12, [r15]^^^movsxd  rax, [rsp+58h+var_3C]^^^jmp     short loc_460D53^^^xor     ebx, ebx^^^jmp     short loc_460DA7^^^add     rbx, 1^^^add     ebp, 1^^^cmp     ebx, 6^^^mov     eax, ebx^^^jz      short loc_460DA0^^^cdqe^^^mov     r12, [r15+rbx*8]^^^movzx   esi, ds:_nl_category_name_idxs[rax]^^^add     rsi, 4A17E0h^^^call    near ptr qword_400310^^^lea     rdi, [rax+1]^^^mov     byte ptr [rax], 3Dh^^^mov     rsi, r12^^^call    near ptr qword_400310^^^cmp     ebp, 0Dh^^^mov     byte ptr [rax], 3Bh^^^lea     rdi, [rax+1]^^^jnz     short loc_460DA0^^^nop     word ptr [rax+rax+00h]^^^mov     byte ptr [rdi-1], 0^^^jmp     loc_460CF5^^^add     r14, 1^^^mov     rdi, r14^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_460CF5^^^add     rsp, 28h^^^mov     rsi, rbx^^^mov     rdx, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^mov     rdi, rax^^^jmp     memcpy^^^
__memset_x86_64$$$cmp     rdx, 1^^^mov     rax, rdi^^^jnz     short loc_40CD2D^^^mov     [rdi], sil^^^retn^^^mov     r9, 101010101010101h^^^mov     r8, rdx^^^movzx   rdx, sil^^^imul    rdx, r9^^^cmp     r8, 90h^^^jg      loc_40D020^^^add     rdi, r8^^^lea     r11, off_498D60^^^jmp     qword ptr [r11+r8*8]^^^retn^^^mov     [rdi-89h], rdx^^^mov     [rdi-81h], rdx^^^mov     [rdi-79h], rdx^^^mov     [rdi-71h], rdx^^^mov     [rdi-69h], rdx^^^mov     [rdi-61h], rdx^^^mov     [rdi-59h], rdx^^^mov     [rdi-51h], rdx^^^mov     [rdi-49h], rdx^^^mov     [rdi-41h], rdx^^^mov     [rdi-39h], rdx^^^mov     [rdi-31h], rdx^^^mov     [rdi-29h], rdx^^^mov     [rdi-21h], rdx^^^mov     [rdi-19h], rdx^^^mov     [rdi-11h], rdx^^^mov     [rdi-9], rdx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-90h], rdx^^^mov     [rdi-88h], rdx^^^mov     [rdi-80h], rdx^^^mov     [rdi-78h], rdx^^^mov     [rdi-70h], rdx^^^mov     [rdi-68h], rdx^^^mov     [rdi-60h], rdx^^^mov     [rdi-58h], rdx^^^mov     [rdi-50h], rdx^^^mov     [rdi-48h], rdx^^^mov     [rdi-40h], rdx^^^mov     [rdi-38h], rdx^^^mov     [rdi-30h], rdx^^^mov     [rdi-28h], rdx^^^mov     [rdi-20h], rdx^^^mov     [rdi-18h], rdx^^^mov     [rdi-10h], rdx^^^mov     [rdi-8], rdx^^^retn^^^mov     [rdi-8Ah], rdx^^^mov     [rdi-82h], rdx^^^mov     [rdi-7Ah], rdx^^^mov     [rdi-72h], rdx^^^mov     [rdi-6Ah], rdx^^^mov     [rdi-62h], rdx^^^mov     [rdi-5Ah], rdx^^^mov     [rdi-52h], rdx^^^mov     [rdi-4Ah], rdx^^^mov     [rdi-42h], rdx^^^mov     [rdi-3Ah], rdx^^^mov     [rdi-32h], rdx^^^mov     [rdi-2Ah], rdx^^^mov     [rdi-22h], rdx^^^mov     [rdi-1Ah], rdx^^^mov     [rdi-12h], rdx^^^mov     [rdi-0Ah], rdx^^^mov     [rdi-2], dx^^^retn^^^mov     [rdi-8Bh], rdx^^^mov     [rdi-83h], rdx^^^mov     [rdi-7Bh], rdx^^^mov     [rdi-73h], rdx^^^mov     [rdi-6Bh], rdx^^^mov     [rdi-63h], rdx^^^mov     [rdi-5Bh], rdx^^^mov     [rdi-53h], rdx^^^mov     [rdi-4Bh], rdx^^^mov     [rdi-43h], rdx^^^mov     [rdi-3Bh], rdx^^^mov     [rdi-33h], rdx^^^mov     [rdi-2Bh], rdx^^^mov     [rdi-23h], rdx^^^mov     [rdi-1Bh], rdx^^^mov     [rdi-13h], rdx^^^mov     [rdi-0Bh], rdx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-8Ch], rdx^^^mov     [rdi-84h], rdx^^^mov     [rdi-7Ch], rdx^^^mov     [rdi-74h], rdx^^^mov     [rdi-6Ch], rdx^^^mov     [rdi-64h], rdx^^^mov     [rdi-5Ch], rdx^^^mov     [rdi-54h], rdx^^^mov     [rdi-4Ch], rdx^^^mov     [rdi-44h], rdx^^^mov     [rdi-3Ch], rdx^^^mov     [rdi-34h], rdx^^^mov     [rdi-2Ch], rdx^^^mov     [rdi-24h], rdx^^^mov     [rdi-1Ch], rdx^^^mov     [rdi-14h], rdx^^^mov     [rdi-0Ch], rdx^^^mov     [rdi-4], edx^^^retn^^^mov     [rdi-8Dh], rdx^^^mov     [rdi-85h], rdx^^^mov     [rdi-7Dh], rdx^^^mov     [rdi-75h], rdx^^^mov     [rdi-6Dh], rdx^^^mov     [rdi-65h], rdx^^^mov     [rdi-5Dh], rdx^^^mov     [rdi-55h], rdx^^^mov     [rdi-4Dh], rdx^^^mov     [rdi-45h], rdx^^^mov     [rdi-3Dh], rdx^^^mov     [rdi-35h], rdx^^^mov     [rdi-2Dh], rdx^^^mov     [rdi-25h], rdx^^^mov     [rdi-1Dh], rdx^^^mov     [rdi-15h], rdx^^^mov     [rdi-0Dh], rdx^^^mov     [rdi-5], edx^^^mov     [rdi-1], dl^^^retn^^^mov     [rdi-8Eh], rdx^^^mov     [rdi-86h], rdx^^^mov     [rdi-7Eh], rdx^^^mov     [rdi-76h], rdx^^^mov     [rdi-6Eh], rdx^^^mov     [rdi-66h], rdx^^^mov     [rdi-5Eh], rdx^^^mov     [rdi-56h], rdx^^^mov     [rdi-4Eh], rdx^^^mov     [rdi-46h], rdx^^^mov     [rdi-3Eh], rdx^^^mov     [rdi-36h], rdx^^^mov     [rdi-2Eh], rdx^^^mov     [rdi-26h], rdx^^^mov     [rdi-1Eh], rdx^^^mov     [rdi-16h], rdx^^^mov     [rdi-0Eh], rdx^^^mov     [rdi-6], edx^^^mov     [rdi-2], dx^^^retn^^^mov     [rdi-8Fh], rdx^^^mov     [rdi-87h], rdx^^^mov     [rdi-7Fh], rdx^^^mov     [rdi-77h], rdx^^^mov     [rdi-6Fh], rdx^^^mov     [rdi-67h], rdx^^^mov     [rdi-5Fh], rdx^^^mov     [rdi-57h], rdx^^^mov     [rdi-4Fh], rdx^^^mov     [rdi-47h], rdx^^^mov     [rdi-3Fh], rdx^^^mov     [rdi-37h], rdx^^^mov     [rdi-2Fh], rdx^^^mov     [rdi-27h], rdx^^^mov     [rdi-1Fh], rdx^^^mov     [rdi-17h], rdx^^^mov     [rdi-0Fh], rdx^^^mov     [rdi-7], edx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^mov     r10, 10h^^^mov     r9, rdi^^^and     r9, 0Fh^^^sub     r10, r9^^^and     r10, 0Fh^^^add     rdi, r10^^^sub     r8, r10^^^lea     r11, off_4991F0^^^jmp     qword ptr [r11+r10*8]^^^
_L_lock_9688$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_406DB7^^^
dl_open_worker$$$push    rbp^^^mov     esi, 24h^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 78h^^^mov     r12, [rdi]^^^mov     eax, [rdi+8]^^^mov     [rbp+var_40], rdi^^^mov     rdi, r12^^^mov     [rbp+var_4C], eax^^^call    sub_4003C0^^^test    rax, rax^^^jz      loc_48C30C^^^mov     rax, [rbp+var_40]^^^mov     rbx, cs:_dl_ns^^^mov     r14, [rax+10h]^^^mov     rax, cs:_dl_nns^^^test    rax, rax^^^jz      short loc_48BCD4^^^mov     [rbp+var_38], offset _dl_ns^^^xor     r15d, r15d^^^mov     rdx, [rbp+var_38]^^^mov     r13, [rdx]^^^test    r13, r13^^^jz      short loc_48BCC3^^^nop     word ptr [rax+rax+00000000h]^^^cmp     r14, [r13+340h]^^^jb      short loc_48BCB3^^^cmp     r14, [r13+348h]^^^jnb     short loc_48BCB3^^^test    byte ptr [r13+315h], 40h^^^jnz     loc_48C180^^^mov     rsi, r14^^^mov     rdi, r13^^^call    _dl_addr_inside_object^^^test    eax, eax^^^jnz     loc_48C180^^^mov     r13, [r13+18h]^^^test    r13, r13^^^jnz     short loc_48BC80^^^mov     rax, cs:_dl_nns^^^add     r15, 1^^^add     [rbp+var_38], 90h^^^cmp     r15, rax^^^jb      short loc_48BC6A^^^mov     rax, [rbp+var_40]^^^mov     r13, [rax+28h]^^^cmp     r13, 0FFFFFFFFFFFFFFFEh^^^jz      loc_48C19F^^^xor     edi, edi^^^mov     rsi, r13^^^call    _dl_debug_initialize^^^mov     edi, [rax+18h]^^^test    edi, edi^^^jnz     loc_48C516^^^mov     rax, [rbp+var_40]^^^mov     r8d, [rbp+var_4C]^^^xor     ecx, ecx^^^mov     edx, 2^^^mov     rdi, rbx^^^mov     rsi, r12^^^mov     r9, [rax+28h]^^^or      r8d, 10000000h^^^call    _dl_map_object^^^mov     rdx, [rbp+var_40]^^^test    rax, rax^^^mov     rbx, rax^^^mov     [rdx+20h], rax^^^jz      loc_48C3A8^^^movsxd  rax, [rbp+var_4C]^^^test    eax, 40000000h^^^mov     [rbp+var_78], rax^^^jnz     loc_48C0D0^^^mov     ecx, [rbx+310h]^^^add     ecx, 1^^^cmp     qword ptr [rbx+2B8h], 0^^^mov     [rbx+310h], ecx^^^jnz     loc_48C46E^^^mov     r8d, [rbp+var_4C]^^^xor     ecx, ecx^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^and     r8d, 88000008h^^^call    _dl_map_object_deps^^^mov     ecx, [rbx+2C0h]^^^test    ecx, ecx^^^jz      short loc_48BDB3^^^xor     r12d, r12d^^^mov     rax, [rbx+2B8h]^^^mov     edx, r12d^^^mov     rax, [rax+rdx*8]^^^mov     rdi, [rax+28h]^^^cmp     qword ptr [rdi+2E0h], 0^^^jz      loc_48C1B9^^^add     r12d, 1^^^cmp     r12d, ecx^^^jb      short loc_48BD8A^^^mov     rax, [rbp+var_40]^^^xor     edi, edi^^^mov     rsi, [rax+28h]^^^call    _dl_debug_initialize^^^mov     dword ptr [rax+18h], 0^^^call    _dl_debug_state^^^test    byte ptr cs:_dl_debug_mask+1, 2^^^jnz     loc_48C4D8^^^mov     edx, [rbp+var_4C]^^^mov     ecx, cs:_dl_lazy^^^and     edx, 8000000h^^^test    ecx, ecx^^^mov     dword ptr [rbp+var_48], edx^^^jz      short loc_48BDFC^^^mov     eax, [rbp+var_4C]^^^and     eax, 1^^^or      edx, eax^^^mov     dword ptr [rbp+var_48], edx^^^mov     rax, rbx^^^xor     edx, edx^^^mov     rsi, [rax+28h]^^^mov     rax, [rax+18h]^^^lea     rcx, [rdx+1]^^^test    byte ptr [rsi+314h], 4^^^cmovz   rdx, rcx^^^test    rax, rax^^^jnz     short loc_48BE01^^^lea     rax, ds:1Eh[rdx*8]^^^mov     [rbp+var_80], rsp^^^xor     r9d, r9d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^mov     rax, rbx^^^lea     r12, [rsp+0A0h+var_91]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, [rax+28h]^^^test    byte ptr [rdx+314h], 4^^^jnz     short loc_48BE54^^^mov     [r12+r9*8], rax^^^add     r9, 1^^^mov     rax, [rax+18h]^^^test    rax, rax^^^jnz     short loc_48BE3F^^^cmp     r9, 1^^^ja      loc_48C1CD^^^test    r9, r9^^^lea     r13, [r9-1]^^^mov     r14d, dword ptr [rbp+var_48]^^^jnz     short loc_48BE83^^^jmp     short loc_48BEA1^^^mov     r13, rax^^^mov     rdi, [r12+r13*8]^^^xor     ecx, ecx^^^mov     edx, r14d^^^mov     rsi, [rdi+380h]^^^call    _dl_relocate_object^^^test    r13, r13^^^lea     rax, [r13-1]^^^jnz     short loc_48BE80^^^mov     edx, [rbx+2C0h]^^^test    edx, edx^^^mov     dword ptr [rbp+var_38], edx^^^jz      loc_48C080^^^mov     eax, edx^^^xor     r13d, r13d^^^mov     byte ptr [rbp+var_68], 0^^^lea     r15, [rbx+2B8h]^^^jmp     short loc_48BEFA^^^xor     r12d, r12d^^^and     edx, 8^^^jnz     short loc_48BEDA^^^cmp     qword ptr [r14+428h], 0^^^jnz     loc_48C4E7^^^test    byte ptr cs:_dl_debug_mask+1, 2^^^jnz     loc_48BF9C^^^mov     eax, [rbx+2C0h]^^^add     r13d, 1^^^cmp     r13d, eax^^^jnb     loc_48C0DF^^^mov     rdx, [rbx+2B8h]^^^mov     ecx, r13d^^^mov     r14, [rdx+rcx*8]^^^movzx   edx, byte ptr [r14+314h]^^^mov     ecx, edx^^^and     ecx, 0Bh^^^cmp     cl, 0Ah^^^jnz     short loc_48BEC4^^^mov     rsi, [r14+380h]^^^mov     rdx, [rsi]^^^test    rdx, rdx^^^jz      loc_48C398^^^xor     r12d, r12d^^^cmp     rdx, r15^^^jnz     short loc_48BF45^^^jmp     short loc_48BFB0^^^cmp     rdx, r15^^^jz      short loc_48BFB0^^^add     r12, 1^^^mov     rdx, [rsi+r12*8]^^^test    rdx, rdx^^^jnz     short loc_48BF40^^^lea     rax, [r12+1]^^^mov     [rbp+var_48], rax^^^mov     rax, [r14+378h]^^^cmp     rax, [rbp+var_48]^^^jbe     short loc_48BFCF^^^lea     rax, ds:0[r12*8]^^^mov     [rbp+var_60], rax^^^mov     rax, [rbp+var_48]^^^mov     qword ptr [rsi+rax*8], 0^^^test    byte ptr cs:_dl_debug_mask+1, 2^^^mov     rax, [r14+380h]^^^mov     rdx, [rbp+var_60]^^^mov     [rax+rdx], r15^^^jz      loc_48BEE7^^^mov     esi, r12d^^^mov     rdi, r14^^^call    _dl_show_scope^^^jmp     loc_48BEE7^^^test    rdx, rdx^^^jnz     loc_48BEED^^^lea     rdx, [r12+1]^^^mov     rax, [r14+378h]^^^mov     [rbp+var_48], rdx^^^cmp     rax, [rbp+var_48]^^^ja      short loc_48BF68^^^lea     rdx, [r14+358h]^^^cmp     rsi, rdx^^^mov     [rbp+var_58], rdx^^^jz      short loc_48BFF0^^^cmp     rax, 3^^^mov     rcx, rdx^^^mov     [rbp+var_70], 4^^^jbe     short loc_48C01E^^^lea     rdx, [rax+rax]^^^mov     rdi, rax^^^mov     [rbp+var_88], rsi^^^shl     rdi, 4^^^mov     [rbp+var_70], rdx^^^call    malloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     rsi, [rbp+var_88]^^^jz      loc_48C43F^^^lea     rax, ds:0[r12*8]^^^mov     rdi, rcx^^^mov     [rbp-98h], rcx^^^mov     rdx, rax^^^mov     [rbp+var_60], rax^^^call    memcpy^^^mov     rdi, [r14+380h]^^^cmp     [rbp+var_58], rdi^^^mov     rcx, [rbp-98h]^^^mov     [r14+380h], rcx^^^jz      short loc_48C063^^^call    _dl_scope_free^^^mov     rcx, [r14+380h]^^^mov     rdx, [rbp+var_70]^^^mov     rsi, rcx^^^mov     [r14+378h], rdx^^^jmp     loc_48BF74^^^mov     rdx, [rbp+var_40]^^^mov     rdi, rbx^^^mov     rax, rdx^^^mov     rcx, [rdx+40h]^^^mov     rdx, [rdx+38h]^^^mov     esi, [rax+30h]^^^call    _dl_init^^^test    [rbp+var_4C], 100h^^^jnz     loc_48C368^^^test    [rbp+var_78], 1000h^^^jnz     loc_48C386^^^test    byte ptr cs:_dl_debug_mask, 40h^^^mov     cs:__libc_multiple_libcs, 1^^^jnz     loc_48C3CB^^^mov     rsp, [rbp+var_80]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     byte ptr [rbp+var_68], 0^^^jz      short loc_48C100^^^mov     rdx, cs:_dl_tls_generation^^^add     rdx, 1^^^test    rdx, rdx^^^mov     cs:_dl_tls_generation, rdx^^^jz      loc_48C3EA^^^mov     r12d, dword ptr [rbp+var_38]^^^cmp     r12d, eax^^^jb      short loc_48C11D^^^jmp     loc_48C080^^^add     r12d, 1^^^cmp     r12d, eax^^^jnb     loc_48C080^^^mov     rdx, [rbx+2B8h]^^^mov     ecx, r12d^^^mov     r13, [rdx+rcx*8]^^^movzx   edx, word ptr [r13+314h]^^^and     dx, 408h^^^cmp     dx, 400h^^^jnz     short loc_48C110^^^cmp     qword ptr [r13+428h], 0^^^jz      short loc_48C110^^^mov     eax, fs:18h^^^test    eax, eax^^^jnz     loc_48C405^^^and     byte ptr [r13+315h], 0FBh^^^mov     rdi, r13^^^call    cs:_dl_init_static_tls^^^test    byte ptr [r13+315h], 4^^^jnz     loc_48C426^^^mov     eax, [rbx+2C0h]^^^jmp     short loc_48C110^^^cmp     [r13+30h], r15^^^jnz     loc_48C455^^^mov     rax, [rbp+var_40]^^^mov     rbx, r13^^^mov     r13, [rax+28h]^^^cmp     r13, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_48BCE6^^^test    rbx, rbx^^^jz      loc_48C52F^^^mov     r13, [rbx+30h]^^^mov     rdx, [rbp+var_40]^^^mov     [rdx+28h], r13^^^jmp     loc_48BCE6^^^xor     edx, edx^^^xor     esi, esi^^^call    _dl_check_map_versions^^^mov     ecx, [rbx+2C0h]^^^jmp     loc_48BDAA^^^lea     rax, [r9+1Eh]^^^mov     [rbp+var_60], rsp^^^mov     rdx, r9^^^xor     esi, esi^^^mov     [rbp+var_88], r9^^^xor     r15d, r15d^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rcx, [rsp+0A0h+var_91]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rcx^^^mov     [rbp-98h], rcx^^^call    sub_400390^^^mov     r9, [rbp+var_88]^^^mov     rcx, [rbp-98h]^^^mov     r8d, 1^^^mov     [rbp+var_68], rbx^^^mov     r14, r8^^^lea     rax, [r9-1]^^^mov     [rbp+var_58], r9^^^mov     [rbp+var_38], rax^^^movzx   r8d, byte ptr [rcx+r15]^^^mov     rbx, [r12+r15*8]^^^add     r8d, 1^^^cmp     r15, [rbp+var_38]^^^mov     [rcx+r15], r8b^^^jnb     short loc_48C27A^^^mov     r13, [rbp+var_38]^^^nop     dword ptr [rax]^^^mov     rax, [r12+r13*8]^^^mov     rax, [rax+3B8h]^^^test    rax, rax^^^jnz     short loc_48C269^^^jmp     short loc_48C271^^^add     rax, 8^^^cmp     rbx, rdx^^^jz      short loc_48C2A9^^^mov     rdx, [rax]^^^test    rdx, rdx^^^jnz     short loc_48C260^^^sub     r13, 1^^^cmp     r15, r13^^^jb      short loc_48C248^^^cmp     r14, [rbp+var_58]^^^mov     r15, r14^^^jz      short loc_48C2F7^^^mov     rdx, [rbp+var_58]^^^lea     rdi, [rcx+r14]^^^xor     esi, esi^^^mov     [rbp-98h], rcx^^^sub     rdx, r14^^^add     r14, 1^^^call    sub_400390^^^mov     rcx, [rbp-98h]^^^jmp     short loc_48C22A^^^mov     r9, r13^^^lea     rsi, [r12+r14*8]^^^lea     rdi, [r12+r15*8]^^^sub     r9, r15^^^mov     [rbp-98h], rcx^^^mov     [rbp+var_90], r8b^^^lea     rdx, ds:0[r9*8]^^^mov     [rbp+var_88], r9^^^call    sub_400340^^^mov     rcx, [rbp-98h]^^^mov     [r12+r13*8], rbx^^^mov     r9, [rbp+var_88]^^^cmp     byte ptr [rcx+r14], 1^^^jle     short loc_48C340^^^mov     r15, r14^^^jmp     short loc_48C283^^^mov     rbx, [rbp+var_68]^^^mov     rsp, [rbp+var_60]^^^mov     r13, [rbp+var_38]^^^mov     r14d, dword ptr [rbp+var_48]^^^jmp     loc_48BE83^^^mov     rdx, [rbp+var_40]^^^mov     r13, [rdx+28h]^^^cmp     r13, 0FFFFFFFFFFFFFFFEh^^^jz      loc_48BC44^^^mov     esi, 2Fh^^^mov     rdi, r12^^^xor     ebx, ebx^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_48BCE6^^^jmp     loc_48BC44^^^lea     rsi, [rcx+r14]^^^lea     rdi, [rcx+r15]^^^mov     rdx, r9^^^call    sub_400340^^^movzx   r8d, [rbp+var_90]^^^mov     rcx, [rbp-98h]^^^mov     [rcx+r13], r8b^^^jmp     loc_48C22A^^^mov     rdi, rbx^^^call    add_to_global^^^test    eax, eax^^^jnz     loc_48C0CC^^^test    [rbp+var_78], 1000h^^^jz      loc_48C0B5^^^or      dword ptr [rbx+3D4h], 8^^^jmp     loc_48C0B5^^^mov     [rbp+var_48], 1^^^xor     r12d, r12d^^^jmp     loc_48BF5B^^^test    byte ptr [rbp+var_4C], 4^^^jnz     loc_48C0D0^^^mov     ecx, offset __PRETTY_FUNCTION___11975^^^mov     edx, 0E8h^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset aMode0x00004^^^call    __assert_fail^^^mov     ecx, [rbx+310h]^^^mov     rdx, [rbx+30h]^^^mov     edi, offset aOpeningFileSLu^^^mov     rsi, [rbx+8]^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_48C0CC^^^mov     edi, 2^^^mov     esi, offset aTlsGenerationC^^^xor     eax, eax^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^cmp     qword ptr [r13+448h], 0Eh^^^jbe     loc_48C159^^^mov     ecx, offset aCannotLoadAnyM^^^xor     edx, edx^^^mov     esi, offset aDlopen^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___11975^^^mov     edx, 220h^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset aImapL_need_tls^^^call    __assert_fail^^^mov     ecx, offset aCannotCreateSc^^^xor     edx, edx^^^mov     esi, offset aDlopen^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___11975^^^mov     edx, 0CBh^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset aNsLL_ns^^^call    __assert_fail^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jz      short loc_48C48B^^^mov     rdx, [rbx+30h]^^^mov     rsi, [rbx+8]^^^mov     edi, offset aOpeningFileSLu^^^xor     eax, eax^^^call    _dl_debug_printf^^^test    [rbp+var_4C], 100h^^^jz      short loc_48C4A5^^^test    byte ptr [rbx+314h], 10h^^^jnz     short loc_48C4A5^^^mov     rdi, rbx^^^call    add_to_global^^^mov     rdx, [rbp+var_40]^^^xor     edi, edi^^^mov     rsi, [rdx+28h]^^^call    _dl_debug_initialize^^^mov     esi, [rax+18h]^^^test    esi, esi^^^jz      loc_48C0D0^^^mov     ecx, offset __PRETTY_FUNCTION___11975^^^mov     edx, 100h^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset a_dl_debug_in_0^^^call    __assert_fail^^^xor     esi, esi^^^mov     rdi, rbx^^^call    _dl_show_scope^^^jmp     loc_48BDDB^^^mov     rdi, r14^^^call    _dl_add_to_slotinfo^^^mov     byte ptr [rbp+var_68], 1^^^test    byte ptr [r14+315h], 4^^^jz      loc_48BEDA^^^mov     eax, dword ptr [rbp+var_38]^^^cmp     [rbx+2C0h], eax^^^cmovz   eax, r13d^^^mov     dword ptr [rbp+var_38], eax^^^jmp     loc_48BEDA^^^mov     ecx, offset __PRETTY_FUNCTION___11975^^^mov     edx, 0DDh^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset a_dl_debug_in_0^^^call    __assert_fail^^^mov     qword ptr [rax+28h], 0^^^xor     r13d, r13d^^^jmp     loc_48BCE6^^^
mbsrtowcs$$$mov     eax, offset state_3^^^test    rcx, rcx^^^cmovz   rcx, rax^^^mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     r8, fs:[rax]^^^jmp     __mbsrtowcs_l^^^
_IO_default_write$$$xor     eax, eax^^^retn^^^
__wuflow$$$push    rbx^^^cmp     dword ptr [rdi+0C0h], 0^^^mov     rbx, rdi^^^jl      short loc_4276E0^^^jz      short loc_4276F0^^^mov     eax, [rbx]^^^test    ah, 8^^^jnz     loc_42772C^^^mov     rcx, [rbx+0A0h]^^^mov     rsi, [rcx]^^^mov     rdx, [rcx+8]^^^cmp     rsi, rdx^^^jb      loc_427770^^^mov     eax, [rbx]^^^test    ah, 1^^^jnz     loc_427740^^^cmp     qword ptr [rbx+60h], 0^^^jz      loc_427780^^^lea     rsi, [rbx+0A0h]^^^lea     rdi, [rbx+60h]^^^call    save_for_wbackup_isra_0^^^mov     edx, eax^^^mov     eax, 0FFFFFFFFh^^^test    edx, edx^^^jz      loc_4277D5^^^pop     rbx^^^retn^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     esi, 1^^^call    _IO_fwide^^^mov     edx, eax^^^mov     eax, 0FFFFFFFFh^^^cmp     edx, 1^^^jnz     short loc_4276D6^^^mov     esi, [rbx+0C0h]^^^test    esi, esi^^^jnz     loc_42767F^^^mov     esi, 1^^^mov     rdi, rbx^^^call    _IO_fwide^^^mov     eax, [rbx]^^^test    ah, 8^^^jz      loc_42768A^^^mov     rdi, rbx^^^call    _IO_switch_to_wget_mode^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_42768A^^^jmp     short loc_4276D6^^^mov     rdi, [rcx+50h]^^^mov     rsi, [rcx+40h]^^^and     ah, 0FEh^^^mov     [rbx], eax^^^mov     [rcx+50h], rdx^^^mov     rdx, [rcx+10h]^^^cmp     rdi, rsi^^^mov     [rcx+8], rdi^^^mov     [rcx+10h], rsi^^^mov     [rcx], rsi^^^mov     [rcx+40h], rdx^^^mov     rdx, rdi^^^jbe     loc_4276AC^^^mov     eax, [rsi]^^^add     rsi, 4^^^mov     [rcx], rsi^^^pop     rbx^^^retn^^^mov     rdi, [rcx+40h]^^^test    rdi, rdi^^^jz      short loc_4277D5^^^test    ah, 1^^^jz      short loc_4277B1^^^and     ah, 0FEh^^^mov     [rbx], eax^^^mov     rax, [rcx+50h]^^^mov     [rcx], rdi^^^mov     [rcx+50h], rdx^^^mov     [rcx+8], rax^^^mov     rax, [rcx+10h]^^^mov     [rcx+10h], rdi^^^mov     [rcx+40h], rax^^^mov     rdi, rax^^^call    free^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+40h], 0^^^mov     qword ptr [rax+50h], 0^^^mov     qword ptr [rax+48h], 0^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+28h]^^^jmp     rax^^^
__mpn_mul_n$$$push    rbp^^^cmp     rsi, rdx^^^mov     rax, rcx^^^mov     rbp, rsp^^^jz      short loc_464340^^^cmp     rax, 1Fh^^^jle     short loc_464330^^^shl     rcx, 4^^^add     rcx, 10h^^^sub     rsp, rcx^^^mov     rcx, rax^^^lea     r8, [rsp+0Fh]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^call    __mpn_impn_mul_n^^^leave^^^retn^^^call    __mpn_impn_mul_n_basecase^^^leave^^^retn^^^cmp     rcx, 1Fh^^^mov     rdx, rcx^^^jg      short loc_464350^^^call    __mpn_impn_sqr_n_basecase^^^leave^^^retn^^^shl     rdx, 4^^^add     rdx, 10h^^^sub     rsp, rdx^^^mov     rdx, rax^^^lea     rcx, [rsp+0Fh]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^call    __mpn_impn_sqr_n^^^leave^^^retn^^^
__mpn_impn_sqr_n_basecase$$$push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^mov     r12, rdx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rcx, [rsi]^^^cmp     rcx, 1^^^jbe     loc_463EE0^^^call    __mpn_mul_1^^^cmp     r12, 1^^^lea     r14, ds:0[r12*8]^^^mov     [rbp+r12*8+0], rax^^^jle     short loc_463ED0^^^add     rbp, 8^^^mov     ebx, 1^^^jmp     short loc_463E98^^^mov     rdx, r12^^^mov     rsi, r13^^^mov     rdi, rbp^^^call    __mpn_addmul_1^^^add     rbx, 1^^^mov     [rbp+r14+0], rax^^^add     rbp, 8^^^cmp     rbx, r12^^^jz      short loc_463ED0^^^mov     rcx, [r13+rbx*8+0]^^^cmp     rcx, 1^^^ja      short loc_463E78^^^mov     eax, 0^^^jnz     short loc_463E86^^^mov     rcx, r12^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     rdi, rbp^^^call    __mpn_add_n^^^jmp     short loc_463E86^^^mov     qword ptr [rbp+r12*8+0], 0^^^nop     word ptr [rax+rax+00000000h]^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^jz      loc_463F80^^^test    rdx, rdx^^^jle     short loc_463EBD^^^mov     rdx, rdi^^^shl     rdx, 3Ch^^^shr     rdx, 3Fh^^^cmp     rdx, r12^^^cmova   rdx, r12^^^test    rdx, rdx^^^jz      loc_463FAA^^^cmp     r12, rdx^^^mov     qword ptr [rdi], 0^^^jz      short loc_463F72^^^mov     eax, 1^^^mov     r8, r12^^^sub     r8, rdx^^^mov     rsi, r8^^^shr     rsi, 1^^^mov     rdi, rsi^^^add     rdi, rdi^^^jz      short loc_463F60^^^pxor    xmm0, xmm0^^^lea     rcx, [rbp+rdx*8+0]^^^xor     edx, edx^^^nop     word ptr [rax+rax+00000000h]^^^add     rdx, 1^^^movdqa  xmmword ptr [rcx], xmm0^^^add     rcx, 10h^^^cmp     rdx, rsi^^^jb      short loc_463F40^^^add     rax, rdi^^^cmp     r8, rdi^^^jz      short loc_463F72^^^nop     dword ptr [rax+00000000h]^^^mov     qword ptr [rbp+rax*8+0], 0^^^add     rax, 1^^^cmp     r12, rax^^^jg      short loc_463F60^^^xor     eax, eax^^^jmp     loc_463E53^^^test    rdx, rdx^^^jle     loc_463EBD^^^xor     eax, eax^^^nop     dword ptr [rax+rax+00h]^^^mov     rdx, [r13+rax*8+0]^^^mov     [rbp+rax*8+0], rdx^^^add     rax, 1^^^cmp     rax, r12^^^jnz     short loc_463F90^^^xor     eax, eax^^^jmp     loc_463E53^^^xor     eax, eax^^^jmp     loc_463F17^^^
_Unwind_SetGR$$$sub     rsp, 8^^^cmp     esi, 11h^^^jg      short loc_4926C8^^^test    byte ptr [rdi+0C7h], 40h^^^lea     rax, dwarf_reg_size_table^^^movsxd  rsi, esi^^^movzx   eax, byte ptr [rax+rsi]^^^jnz     short loc_4926D0^^^cmp     al, 8^^^mov     rcx, [rdi+rsi*8]^^^jz      short loc_4926E8^^^call    abort^^^cmp     byte ptr [rdi+rsi+0D8h], 0^^^jz      short loc_4926C0^^^mov     [rdi+rsi*8], rdx^^^add     rsp, 8^^^retn^^^mov     [rcx], rdx^^^add     rsp, 8^^^retn^^^
dlinfo_doit$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, [rdi+8]^^^cmp     dword ptr [rbx+10h], 0Ah^^^jbe     short loc_482A40^^^mov     ecx, offset aUnsupportedDli^^^xor     edx, edx^^^xor     esi, esi^^^xor     edi, edi^^^call    _dl_signal_error^^^mov     eax, [rbx+10h]^^^jmp     ds:qword_4B2C60[rax*8]^^^
_L_unlock_1255$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     sub_42863E^^^
ranged_convert.constprop.3$$$mov     [rsp+var_10], r13^^^mov     [rsp+var_8], r14^^^mov     r13, rdi^^^mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     r14, rsi^^^mov     [rsp+var_18], r12^^^sub     rsp, 28h^^^call    localtime_r^^^test    rax, rax^^^jz      short loc_477780^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     rbx, [r13+0]^^^xor     ebp, ebp^^^test    rbx, rbx^^^jnz     short loc_4777B6^^^jmp     short loc_47775D^^^mov     r12, rbx^^^sub     r12, rbp^^^sar     r12, 1^^^add     r12, rbp^^^mov     [r13+0], r12^^^mov     rsi, r14^^^mov     rdi, r13^^^call    localtime_r^^^test    rax, rax^^^cmovnz  rbp, r12^^^cmovz   rbx, r12^^^mov     rdx, rbx^^^sar     rdx, 3Fh^^^or      rdx, 1^^^add     rdx, rbp^^^cmp     rbx, rdx^^^jz      short loc_4777E0^^^test    rbx, rbx^^^jns     short loc_477790^^^mov     r12, rbp^^^sub     r12, rbx^^^sar     r12, 1^^^add     r12, rbx^^^jmp     short loc_47779C^^^test    rbp, rbp^^^jz      loc_47775D^^^test    rax, rax^^^jnz     loc_47775D^^^mov     [r13+0], rbp^^^mov     rsi, r14^^^mov     rdi, r13^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     localtime_r^^^
_dl_sym$$$mov     r8d, 2^^^xor     ecx, ecx^^^jmp     do_sym^^^
__gconv_find_shlib$$$push    r12^^^mov     edx, offset known_compare^^^mov     esi, offset loaded^^^push    rbp^^^push    rbx^^^sub     rsp, 10h^^^mov     [rsp+28h+var_20], rdi^^^lea     rdi, [rsp+28h+var_20]^^^call    tfind^^^test    rax, rax^^^jz      loc_460AD0^^^mov     rbx, [rax]^^^test    rbx, rbx^^^jz      loc_460A95^^^mov     eax, [rbx+8]^^^cmp     eax, 0FFFFFFFEh^^^jge     loc_460AA8^^^cmp     qword ptr [rbx+10h], 0^^^jnz     loc_460B66^^^mov     rdi, [rbx]^^^mov     esi, 80000001h^^^call    __libc_dlopen_mode^^^test    rax, rax^^^mov     [rbx+10h], rax^^^jz      loc_460B40^^^mov     esi, 4A09D6h^^^mov     rdi, rax^^^call    __libc_dlsym^^^test    rax, rax^^^mov     [rbx+18h], rax^^^jz      loc_460B47^^^mov     rdi, [rbx+10h]^^^mov     esi, offset aGconv_init^^^call    __libc_dlsym^^^mov     rdi, [rbx+10h]^^^mov     [rbx+20h], rax^^^mov     esi, offset aGconv_end^^^call    __libc_dlsym^^^mov     [rbx+28h], rax^^^mov     rax, [rbx+18h]^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rbx+18h], rax^^^mov     rax, [rbx+20h]^^^test    rax, rax^^^jz      short loc_460A74^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rbx+20h], rax^^^mov     rax, [rbx+28h]^^^test    rax, rax^^^jz      short loc_460A8E^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rbx+28h], rax^^^mov     dword ptr [rbx+8], 1^^^add     rsp, 10h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^cmp     qword ptr [rbx+10h], 0^^^jz      short loc_460A95^^^lea     ecx, [rax+1]^^^test    eax, eax^^^mov     edx, 1^^^mov     rax, rbx^^^cmovg   edx, ecx^^^mov     [rbx+8], edx^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     rbp, [rsp+28h+var_20]^^^mov     rdi, rbp^^^call    strlen^^^lea     rdi, [rax+31h]^^^mov     r12, rax^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_460A95^^^lea     rdi, [rax+30h]^^^lea     rdx, [r12+1]^^^mov     rsi, rbp^^^call    memcpy^^^mov     dword ptr [rbx+8], 0FFFFFFFDh^^^mov     [rbx], rax^^^mov     edx, offset known_compare^^^mov     qword ptr [rbx+10h], 0^^^mov     esi, offset loaded^^^mov     rdi, rbx^^^call    tsearch^^^test    rax, rax^^^jnz     loc_4609D6^^^mov     rdi, rbx^^^xor     ebx, ebx^^^call    free^^^jmp     loc_460A95^^^xor     ebx, ebx^^^jmp     loc_460A95^^^mov     rdi, cs:loaded^^^mov     esi, offset do_release_shlib^^^mov     cs:release_handle, rbx^^^xor     ebx, ebx^^^call    twalk^^^jmp     loc_460A95^^^mov     ecx, offset __PRETTY_FUNCTION___11105^^^mov     edx, 75h^^^mov     esi, offset aGconv_dl_c^^^mov     edi, offset aFoundHandleVoi^^^call    __assert_fail^^^
_L_lock_41$$$lea     rdi, [r9]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_410CF5^^^
execute_cfa_program$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^mov     r12, rdx^^^push    rbx^^^mov     rbx, rcx^^^sub     rsp, 28h^^^cmp     rdi, rsi^^^mov     qword ptr [rcx+120h], 0^^^jnb     loc_49071E^^^mov     rax, [rdx+0C0h]^^^mov     rcx, [rcx+148h]^^^shr     rax, 3Fh^^^add     rax, [rdx+98h]^^^cmp     rcx, rax^^^jnb     loc_49071E^^^lea     r14, off_4B3734^^^xor     r8d, r8d^^^nop     word ptr [rax+rax+00h]^^^movzx   r10d, byte ptr [rdi]^^^lea     rdx, [rdi+1]^^^mov     eax, r10d^^^and     eax, 0C0h^^^cmp     eax, 40h^^^jz      short loc_4906E0^^^cmp     eax, 80h^^^jz      short loc_490730^^^cmp     eax, 0C0h^^^jz      loc_490790^^^cmp     r10b, 2Fh       ^^^jbe     loc_490780^^^call    abort           ^^^and     r10d, 3Fh^^^mov     rdi, rdx^^^imul    r10, [rbx+160h]^^^add     r10, rcx^^^mov     [rbx+148h], r10^^^cmp     r13, rdi^^^jbe     short loc_49071E^^^mov     rax, [r12+0C0h]^^^mov     rcx, [rbx+148h]^^^shr     rax, 3Fh^^^add     rax, [r12+98h]^^^cmp     rcx, rax^^^jb      short loc_4906A0^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^and     r10d, 3Fh^^^xor     r9d, r9d^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490740^^^imul    r9, [rbx+158h]^^^shl     r10, 4^^^mov     rdi, rdx^^^add     r10, rbx^^^mov     dword ptr [r10+8], 1^^^mov     [r10], r9^^^jmp     loc_4906F9^^^movzx   r10d, r10b^^^movsxd  rax, dword ptr [r14+r10*4]^^^add     rax, r14^^^jmp     rax             ^^^and     r10d, 3Fh^^^mov     rdi, rdx^^^shl     r10, 4^^^mov     dword ptr [rbx+r10+8], 0^^^jmp     loc_4906F9^^^xor     eax, eax        ^^^nop     dword ptr [rax+rax+00h]^^^mov     dword ptr [rbx+rax*2+108h], 1^^^mov     [rbx+rax*2+100h], rax^^^add     rax, 8^^^cmp     rax, 80h^^^jnz     short loc_4907B0^^^mov     rdi, rdx        ^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_4907E0^^^mov     rdi, rdx^^^xor     r10d, r10d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r10, rax^^^test    sil, sil^^^js      short loc_490808^^^imul    r10, [rbx+158h]^^^mov     rax, r9^^^shl     rax, 4^^^add     rax, rbx^^^mov     dword ptr [rax+8], 1^^^neg     r10^^^mov     [rax], r10^^^jmp     loc_4906F9^^^movzx   eax, byte ptr [rbx+170h]^^^cmp     al, 0FFh^^^movzx   edi, al^^^jz      short loc_490871^^^mov     eax, edi^^^and     eax, 70h^^^cmp     eax, 20h^^^jz      loc_490EF5^^^jg      loc_490E9B^^^test    eax, eax^^^jnz     loc_490EDE^^^xor     esi, esi^^^jmp     loc_490EBA^^^movzx   eax, byte ptr [rdi+1]^^^add     rdi, 2^^^imul    rax, [rbx+160h]^^^add     rax, rcx^^^mov     [rbx+148h], rax^^^jmp     loc_4906F9^^^movzx   eax, word ptr [rdi+1]^^^add     rdi, 3^^^imul    rax, [rbx+160h]^^^add     rax, rcx^^^mov     [rbx+148h], rax^^^jmp     loc_4906F9^^^mov     eax, [rdi+1]    ^^^add     rdi, 5^^^imul    rax, [rbx+160h]^^^add     rax, rcx^^^mov     [rbx+148h], rax^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_4908E0^^^mov     rdi, rdx^^^xor     r10d, r10d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r10, rax^^^test    sil, sil^^^js      short loc_490908^^^imul    r10, [rbx+158h]^^^mov     rax, r9^^^shl     rax, 4^^^add     rax, rbx^^^mov     dword ptr [rax+8], 1^^^mov     [rax], r10^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490950^^^shl     r9, 4^^^mov     rdi, rdx^^^mov     dword ptr [rbx+r9+8], 0^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490988^^^shl     r9, 4^^^mov     rdi, rdx^^^mov     dword ptr [rbx+r9+8], 6^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_4909C0^^^shl     r9, 4^^^mov     rdi, rdx^^^mov     dword ptr [rbx+r9+8], 0^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_4909F8^^^mov     rdi, rdx^^^xor     r10d, r10d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r10, rax^^^test    sil, sil^^^js      short loc_490A20^^^mov     rax, r9^^^shl     rax, 4^^^add     rax, rbx^^^mov     dword ptr [rax+8], 2^^^mov     [rax], r10^^^jmp     loc_4906F9^^^test    r8, r8          ^^^jz      loc_490EFF^^^mov     rax, r8^^^mov     r8, [r8+120h]^^^mov     rdi, rax^^^mov     rsi, rbx^^^mov     ecx, 29h^^^rep movsq^^^mov     [rbx+120h], rax^^^mov     rdi, rdx^^^jmp     loc_4906F9^^^mov     rax, [rbx+120h] ^^^mov     rdi, rbx^^^mov     ecx, 29h^^^mov     rsi, rax^^^rep movsq^^^mov     [rax+120h], r8^^^mov     rdi, rdx^^^mov     r8, rax^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490AB0^^^mov     [rbx+130h], r9^^^mov     rdi, rdx^^^xor     r9d, r9d^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490AE0^^^mov     [rbx+128h], r9^^^mov     dword ptr [rbx+140h], 1^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490B20^^^mov     rdi, rdx^^^mov     [rbx+130h], r9^^^mov     dword ptr [rbx+140h], 1^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490B60^^^mov     rdi, rdx^^^mov     [rbx+128h], r9^^^jmp     loc_4906F9^^^mov     [rbx+138h], rdx ^^^mov     dword ptr [rbx+140h], 2^^^xor     edi, edi^^^xor     ecx, ecx^^^nop^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rdi, rax^^^test    sil, sil^^^js      short loc_490BA0^^^add     rdi, rdx^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490BD0^^^mov     rax, r9^^^mov     rdi, rdx^^^xor     r9d, r9d^^^shl     rax, 4^^^xor     ecx, ecx^^^add     rax, rbx^^^mov     dword ptr [rax+8], 3^^^mov     [rax], rdx^^^nop     word ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490C10^^^add     rdi, r9^^^jmp     loc_4906F9^^^xor     r15d, r15d      ^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r15, rax^^^test    sil, sil^^^js      short loc_490C40^^^lea     rsi, [rbp+var_40]^^^mov     rdi, rdx^^^mov     [rbp+var_48], r8^^^call    read_sleb128^^^mov     rdi, rax^^^mov     rax, [rbx+158h]^^^mov     rdx, r15^^^imul    rax, [rbp+var_40]^^^shl     rdx, 4^^^add     rdx, rbx^^^mov     dword ptr [rdx+8], 1^^^mov     [rdx], rax^^^mov     r8, [rbp+var_48]^^^jmp     loc_4906F9^^^xor     edi, edi        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      rdi, rax^^^test    sil, sil^^^js      short loc_490CA0^^^lea     rsi, [rbp+var_40]^^^mov     [rbx+130h], rdi^^^mov     rdi, rdx^^^mov     [rbp+var_48], r8^^^call    read_sleb128^^^mov     rdi, rax^^^mov     rax, [rbp+var_40]^^^mov     dword ptr [rbx+140h], 1^^^imul    rax, [rbx+158h]^^^mov     r8, [rbp+var_48]^^^mov     [rbx+128h], rax^^^jmp     loc_4906F9^^^lea     rsi, [rbp+var_40]^^^mov     rdi, rdx^^^mov     [rbp+var_48], r8^^^call    read_sleb128^^^mov     rdi, rax^^^mov     rax, [rbp+var_40]^^^mov     r8, [rbp+var_48]^^^imul    rax, [rbx+158h]^^^mov     [rbx+128h], rax^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490D30^^^mov     rdi, rdx^^^xor     r10d, r10d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r10, rax^^^test    sil, sil^^^js      short loc_490D58^^^imul    r10, [rbx+158h]^^^mov     rax, r9^^^shl     rax, 4^^^add     rax, rbx^^^mov     dword ptr [rax+8], 4^^^mov     [rax], r10^^^jmp     loc_4906F9^^^xor     r15d, r15d      ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r15, rax^^^test    sil, sil^^^js      short loc_490DA0^^^lea     rsi, [rbp+var_40]^^^mov     rdi, rdx^^^mov     [rbp+var_48], r8^^^call    read_sleb128^^^mov     rdi, rax^^^mov     rax, [rbx+158h]^^^mov     rdx, r15^^^imul    rax, [rbp+var_40]^^^shl     rdx, 4^^^add     rdx, rbx^^^mov     dword ptr [rdx+8], 4^^^mov     [rdx], rax^^^mov     r8, [rbp+var_48]^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+00h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490E00^^^mov     rax, r9^^^mov     rdi, rdx^^^xor     r9d, r9d^^^shl     rax, 4^^^xor     ecx, ecx^^^add     rax, rbx^^^mov     dword ptr [rax+8], 5^^^mov     [rax], rdx^^^nop     word ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdi]^^^add     rdi, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490E40^^^add     rdi, r9^^^jmp     loc_4906F9^^^xor     r9d, r9d        ^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   esi, byte ptr [rdx]^^^add     rdx, 1^^^mov     rax, rsi^^^and     eax, 7Fh^^^shl     rax, cl^^^add     ecx, 7^^^or      r9, rax^^^test    sil, sil^^^js      short loc_490E70^^^mov     rdi, rdx^^^mov     [r12+0D0h], r9^^^jmp     loc_4906F9^^^cmp     eax, 40h^^^jz      short loc_490EEB^^^cmp     eax, 50h^^^jz      loc_490871^^^cmp     eax, 30h^^^jnz     loc_4906D1      ^^^mov     rsi, [r12+0B0h]^^^lea     rcx, [rbp+var_38]^^^mov     [rbp+var_48], r8^^^call    read_encoded_value_with_base^^^mov     rdi, rax^^^mov     rax, [rbp+var_38]^^^mov     r8, [rbp+var_48]^^^mov     [rbx+148h], rax^^^jmp     loc_4906F9^^^cmp     eax, 10h^^^jnz     loc_4906D1      ^^^xor     esi, esi^^^jmp     short loc_490EBA^^^mov     rsi, [r12+0B8h]^^^jmp     short loc_490EBA^^^mov     rsi, [r12+0A8h]^^^jmp     short loc_490EBA^^^sub     rsp, 160h^^^lea     rax, [rsp+1B0h+var_1A1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^jmp     loc_490A67^^^
madvise$$$mov     eax, 1Ch^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
__memmove_ssse3$$$mov     rax, rdi^^^cmp     rdi, rsi^^^jb      short loc_4394D6^^^jz      locret_43AF48   ^^^cmp     rdx, 4Fh^^^jbe     short loc_4394D6^^^jmp     short loc_439550^^^cmp     rdx, 4Fh        ^^^lea     r11, off_49CC30^^^ja      short loc_439500^^^movsxd  r9, dword ptr [r11+rdx*4]^^^add     rsi, rdx^^^add     rdi, rdx^^^add     r9, r11^^^jmp     r9              ^^^ud2^^^movdqu  xmm0, xmmword ptr [rsi]^^^mov     rcx, rdi^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^add     rdi, 10h^^^mov     r8, rcx^^^sub     rcx, rdi^^^add     rdx, rcx^^^sub     rsi, rcx^^^mov     rcx, cs:__x86_64_shared_cache_size_half^^^cmp     rdx, rcx^^^mov     r9, rsi^^^ja      loc_43BCC0^^^and     r9, 0Fh^^^jz      short loc_4395B0^^^mov     rcx, cs:__x86_64_data_cache_size_half^^^lea     r11, unk_49CD70^^^movsxd  r9, dword ptr [r11+r9*4]^^^lea     r9, [r11+r9]^^^jmp     r9^^^ud2^^^movdqu  xmm0, xmmword ptr [rsi+rdx-10h]^^^add     rsi, rdx^^^lea     r8, [rdi+rdx-10h]^^^add     rdi, rdx^^^mov     rcx, rdi^^^and     rcx, 0Fh^^^xor     rdi, rcx^^^sub     rdx, rcx^^^sub     rsi, rcx^^^mov     rcx, cs:__x86_64_shared_cache_size_half^^^cmp     rdx, rcx^^^mov     r9, rsi^^^ja      loc_43BE80^^^and     r9, 0Fh^^^jz      loc_4397D0^^^mov     rcx, cs:__x86_64_data_cache_size_half^^^lea     r11, unk_49CDB0^^^movsxd  r9, dword ptr [r11+r9*4]^^^lea     r9, [r11+r9]^^^jmp     r9^^^ud2^^^sub     rdx, 10h^^^movdqa  xmm1, xmmword ptr [rsi]^^^add     rsi, 10h^^^movdqa  xmmword ptr [rdi], xmm1^^^add     rdi, 10h^^^cmp     rdx, 80h        ^^^movdqu  xmmword ptr [r8], xmm0^^^ja      short loc_439620^^^cmp     rdx, 40h^^^jb      short loc_439602^^^movaps  xmm4, xmmword ptr [rsi]^^^movaps  xmm1, xmmword ptr [rsi+10h]^^^movaps  xmm2, xmmword ptr [rsi+20h]^^^movaps  xmm3, xmmword ptr [rsi+30h]^^^movaps  xmmword ptr [rdi], xmm4^^^movaps  xmmword ptr [rdi+10h], xmm1^^^movaps  xmmword ptr [rdi+20h], xmm2^^^movaps  xmmword ptr [rdi+30h], xmm3^^^sub     rdx, 40h^^^add     rsi, 40h^^^add     rdi, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^cmp     rdx, cs:__x86_64_data_cache_size_half^^^lea     rdx, [rdx-80h]^^^jnb     loc_4396E0^^^movdqa  xmm4, xmmword ptr [rsi]^^^movaps  xmm1, xmmword ptr [rsi+10h]^^^movaps  xmm2, xmmword ptr [rsi+20h]^^^movaps  xmm3, xmmword ptr [rsi+30h]^^^movdqa  xmmword ptr [rdi], xmm4^^^movaps  xmmword ptr [rdi+10h], xmm1^^^movaps  xmmword ptr [rdi+20h], xmm2^^^movaps  xmmword ptr [rdi+30h], xmm3^^^sub     rdx, 80h^^^movaps  xmm4, xmmword ptr [rsi+40h]^^^movaps  xmm5, xmmword ptr [rsi+50h]^^^movaps  xmm6, xmmword ptr [rsi+60h]^^^movaps  xmm7, xmmword ptr [rsi+70h]^^^lea     rsi, [rsi+80h]^^^movaps  xmmword ptr [rdi+40h], xmm4^^^movaps  xmmword ptr [rdi+50h], xmm5^^^movaps  xmmword ptr [rdi+60h], xmm6^^^movaps  xmmword ptr [rdi+70h], xmm7^^^lea     rdi, [rdi+80h]^^^jnb     short loc_439631^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_4396C7^^^movdqa  xmm4, xmmword ptr [rsi]^^^sub     rdx, 40h^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmmword ptr [rdi], xmm4^^^movdqa  xmmword ptr [rdi+10h], xmm1^^^movdqa  xmm4, xmmword ptr [rsi+20h]^^^movdqa  xmm1, xmmword ptr [rsi+30h]^^^add     rsi, 40h^^^movdqa  xmmword ptr [rdi+20h], xmm4^^^movdqa  xmmword ptr [rdi+30h], xmm1^^^add     rdi, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^prefetcht0 byte ptr [rsi+1C0h]^^^prefetcht0 byte ptr [rsi+280h]^^^movdqa  xmm0, xmmword ptr [rsi]^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmmword ptr [rsi+20h]^^^movdqa  xmm3, xmmword ptr [rsi+30h]^^^movdqa  xmm4, xmmword ptr [rsi+40h]^^^movdqa  xmm5, xmmword ptr [rsi+50h]^^^movdqa  xmm6, xmmword ptr [rsi+60h]^^^movdqa  xmm7, xmmword ptr [rsi+70h]^^^lea     rsi, [rsi+80h]^^^sub     rdx, 80h^^^movdqa  xmmword ptr [rdi], xmm0^^^movdqa  xmmword ptr [rdi+10h], xmm1^^^movdqa  xmmword ptr [rdi+20h], xmm2^^^movdqa  xmmword ptr [rdi+30h], xmm3^^^movdqa  xmmword ptr [rdi+40h], xmm4^^^movdqa  xmmword ptr [rdi+50h], xmm5^^^movdqa  xmmword ptr [rdi+60h], xmm6^^^movdqa  xmmword ptr [rdi+70h], xmm7^^^lea     rdi, [rdi+80h]^^^jnb     short loc_4396E0^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_439792^^^movdqa  xmm0, xmmword ptr [rsi]^^^sub     rdx, 40h^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmmword ptr [rdi], xmm0^^^movdqa  xmmword ptr [rdi+10h], xmm1^^^movdqa  xmm0, xmmword ptr [rsi+20h]^^^movdqa  xmm1, xmmword ptr [rsi+30h]^^^add     rsi, 40h^^^movdqa  xmmword ptr [rdi+20h], xmm0^^^movdqa  xmmword ptr [rdi+30h], xmm1^^^add     rdi, 40h^^^cmp     rdx, 20h^^^jb      short loc_4397B6^^^movdqa  xmm0, xmmword ptr [rsi]^^^sub     rdx, 20h^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^add     rsi, 20h^^^movdqa  xmmword ptr [rdi], xmm0^^^movdqa  xmmword ptr [rdi+10h], xmm1^^^add     rdi, 20h^^^add     rdi, rdx^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^sub     rdx, 10h^^^movdqa  xmm1, xmmword ptr [rsi-10h]^^^sub     rsi, 10h^^^movdqa  xmmword ptr [rdi-10h], xmm1^^^sub     rdi, 10h^^^cmp     rdx, 80h        ^^^movdqu  xmmword ptr [r8], xmm0^^^ja      short loc_439840^^^cmp     rdx, 40h^^^jb      short loc_439826^^^movaps  xmm0, xmmword ptr [rsi-10h]^^^movaps  xmm1, xmmword ptr [rsi-20h]^^^movaps  xmm2, xmmword ptr [rsi-30h]^^^movaps  xmm3, xmmword ptr [rsi-40h]^^^movaps  xmmword ptr [rdi-10h], xmm0^^^movaps  xmmword ptr [rdi-20h], xmm1^^^movaps  xmmword ptr [rdi-30h], xmm2^^^movaps  xmmword ptr [rdi-40h], xmm3^^^sub     rdx, 40h^^^sub     rsi, 40h^^^sub     rdi, 40h^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^cmp     rdx, cs:__x86_64_data_cache_size_half^^^lea     rdx, [rdx-80h]^^^jnb     loc_439900^^^movdqa  xmm0, xmmword ptr [rsi-10h]^^^movaps  xmm1, xmmword ptr [rsi-20h]^^^movaps  xmm2, xmmword ptr [rsi-30h]^^^movaps  xmm3, xmmword ptr [rsi-40h]^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^movaps  xmmword ptr [rdi-20h], xmm1^^^movaps  xmmword ptr [rdi-30h], xmm2^^^movaps  xmmword ptr [rdi-40h], xmm3^^^sub     rdx, 80h^^^movaps  xmm4, xmmword ptr [rsi-50h]^^^movaps  xmm5, xmmword ptr [rsi-60h]^^^movaps  xmm6, xmmword ptr [rsi-70h]^^^movaps  xmm7, xmmword ptr [rsi-80h]^^^lea     rsi, [rsi-80h]^^^movaps  xmmword ptr [rdi-50h], xmm4^^^movaps  xmmword ptr [rdi-60h], xmm5^^^movaps  xmmword ptr [rdi-70h], xmm6^^^movaps  xmmword ptr [rdi-80h], xmm7^^^lea     rdi, [rdi-80h]^^^jnb     short loc_439851^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_4398E5^^^movdqa  xmm0, xmmword ptr [rsi-10h]^^^sub     rdx, 40h^^^movdqa  xmm1, xmmword ptr [rsi-20h]^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^movdqa  xmmword ptr [rdi-20h], xmm1^^^movdqa  xmm0, xmmword ptr [rsi-30h]^^^movdqa  xmm1, xmmword ptr [rsi-40h]^^^sub     rsi, 40h^^^movdqa  xmmword ptr [rdi-30h], xmm0^^^movdqa  xmmword ptr [rdi-40h], xmm1^^^sub     rdi, 40h^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^prefetcht0 byte ptr [rsi-1C0h]^^^prefetcht0 byte ptr [rsi-280h]^^^movdqa  xmm0, xmmword ptr [rsi-10h]^^^movdqa  xmm1, xmmword ptr [rsi-20h]^^^movdqa  xmm2, xmmword ptr [rsi-30h]^^^movdqa  xmm3, xmmword ptr [rsi-40h]^^^movdqa  xmm4, xmmword ptr [rsi-50h]^^^movdqa  xmm5, xmmword ptr [rsi-60h]^^^movdqa  xmm6, xmmword ptr [rsi-70h]^^^movdqa  xmm7, xmmword ptr [rsi-80h]^^^lea     rsi, [rsi-80h]^^^sub     rdx, 80h^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^movdqa  xmmword ptr [rdi-20h], xmm1^^^movdqa  xmmword ptr [rdi-30h], xmm2^^^movdqa  xmmword ptr [rdi-40h], xmm3^^^movdqa  xmmword ptr [rdi-50h], xmm4^^^movdqa  xmmword ptr [rdi-60h], xmm5^^^movdqa  xmmword ptr [rdi-70h], xmm6^^^movdqa  xmmword ptr [rdi-80h], xmm7^^^lea     rdi, [rdi-80h]^^^jnb     short loc_439900^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_4399B0^^^movdqa  xmm0, xmmword ptr [rsi-10h]^^^sub     rdx, 40h^^^movdqa  xmm1, xmmword ptr [rsi-20h]^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^movdqa  xmmword ptr [rdi-20h], xmm1^^^movdqa  xmm0, xmmword ptr [rsi-30h]^^^movdqa  xmm1, xmmword ptr [rsi-40h]^^^sub     rsi, 40h^^^movdqa  xmmword ptr [rdi-30h], xmm0^^^movdqa  xmmword ptr [rdi-40h], xmm1^^^sub     rdi, 40h^^^cmp     rdx, 20h^^^jb      short loc_4399D6^^^movdqa  xmm0, xmmword ptr [rsi-10h]^^^sub     rdx, 20h^^^movdqa  xmm1, xmmword ptr [rsi-20h]^^^sub     rsi, 20h^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^movdqa  xmmword ptr [rdi-20h], xmm1^^^sub     rdi, 20h^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx             ^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-1]^^^jb      short loc_439A07^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Fh]^^^movaps  xmm3, xmmword ptr [rsi+1Fh]^^^movaps  xmm4, xmmword ptr [rsi+2Fh]^^^movaps  xmm5, xmmword ptr [rsi+3Fh]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 1^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 1^^^palignr xmm3, xmm2, 1^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 1^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_439A6B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-1]^^^jb      short loc_439AB7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-11h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-21h]^^^movaps  xmm4, xmmword ptr [rsi-31h]^^^movaps  xmm5, xmmword ptr [rsi-41h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 1^^^palignr xmm2, xmm3, 1^^^palignr xmm3, xmm4, 1^^^palignr xmm4, xmm5, 1^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_439B14^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-2]^^^jb      short loc_439B57^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Eh]^^^movaps  xmm3, xmmword ptr [rsi+1Eh]^^^movaps  xmm4, xmmword ptr [rsi+2Eh]^^^movaps  xmm5, xmmword ptr [rsi+3Eh]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 2^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 2^^^palignr xmm3, xmm2, 2^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 2^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_439BBB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-2]^^^jb      short loc_439C07^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-12h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-22h]^^^movaps  xmm4, xmmword ptr [rsi-32h]^^^movaps  xmm5, xmmword ptr [rsi-42h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 2^^^palignr xmm2, xmm3, 2^^^palignr xmm3, xmm4, 2^^^palignr xmm4, xmm5, 2^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_439C64^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-3]^^^jb      short loc_439CA7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Dh]^^^movaps  xmm3, xmmword ptr [rsi+1Dh]^^^movaps  xmm4, xmmword ptr [rsi+2Dh]^^^movaps  xmm5, xmmword ptr [rsi+3Dh]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 3^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 3^^^palignr xmm3, xmm2, 3^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 3^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_439D0B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-3]^^^jb      short loc_439D57^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-13h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-23h]^^^movaps  xmm4, xmmword ptr [rsi-33h]^^^movaps  xmm5, xmmword ptr [rsi-43h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 3^^^palignr xmm2, xmm3, 3^^^palignr xmm3, xmm4, 3^^^palignr xmm4, xmm5, 3^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_439DB4^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-4]^^^jb      short loc_439DF7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Ch]^^^movaps  xmm3, xmmword ptr [rsi+1Ch]^^^movaps  xmm4, xmmword ptr [rsi+2Ch]^^^movaps  xmm5, xmmword ptr [rsi+3Ch]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 4^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 4^^^palignr xmm3, xmm2, 4^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 4^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_439E5B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-4]^^^jb      short loc_439EA7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-14h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-24h]^^^movaps  xmm4, xmmword ptr [rsi-34h]^^^movaps  xmm5, xmmword ptr [rsi-44h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 4^^^palignr xmm2, xmm3, 4^^^palignr xmm3, xmm4, 4^^^palignr xmm4, xmm5, 4^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_439F04^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-5]^^^jb      short loc_439F47^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Bh]^^^movaps  xmm3, xmmword ptr [rsi+1Bh]^^^movaps  xmm4, xmmword ptr [rsi+2Bh]^^^movaps  xmm5, xmmword ptr [rsi+3Bh]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 5^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 5^^^palignr xmm3, xmm2, 5^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 5^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_439FAB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-5]^^^jb      short loc_439FF7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-15h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-25h]^^^movaps  xmm4, xmmword ptr [rsi-35h]^^^movaps  xmm5, xmmword ptr [rsi-45h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 5^^^palignr xmm2, xmm3, 5^^^palignr xmm3, xmm4, 5^^^palignr xmm4, xmm5, 5^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A054^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-6]^^^jb      short loc_43A097^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+0Ah]^^^movaps  xmm3, xmmword ptr [rsi+1Ah]^^^movaps  xmm4, xmmword ptr [rsi+2Ah]^^^movaps  xmm5, xmmword ptr [rsi+3Ah]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 6^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 6^^^palignr xmm3, xmm2, 6^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 6^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A0FB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-6]^^^jb      short loc_43A147^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-16h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-26h]^^^movaps  xmm4, xmmword ptr [rsi-36h]^^^movaps  xmm5, xmmword ptr [rsi-46h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 6^^^palignr xmm2, xmm3, 6^^^palignr xmm3, xmm4, 6^^^palignr xmm4, xmm5, 6^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A1A4^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-7]^^^jb      short loc_43A1E7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+9]^^^movaps  xmm3, xmmword ptr [rsi+19h]^^^movaps  xmm4, xmmword ptr [rsi+29h]^^^movaps  xmm5, xmmword ptr [rsi+39h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 7^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 7^^^palignr xmm3, xmm2, 7^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 7^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A24B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-7]^^^jb      short loc_43A297^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-17h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-27h]^^^movaps  xmm4, xmmword ptr [rsi-37h]^^^movaps  xmm5, xmmword ptr [rsi-47h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 7^^^palignr xmm2, xmm3, 7^^^palignr xmm3, xmm4, 7^^^palignr xmm4, xmm5, 7^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A2F4^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+25h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-8]^^^jb      short loc_43A337^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+8]^^^movaps  xmm3, xmmword ptr [rsi+18h]^^^movaps  xmm4, xmmword ptr [rsi+28h]^^^movaps  xmm5, xmmword ptr [rsi+38h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 8^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 8^^^palignr xmm3, xmm2, 8^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 8^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A3A0^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-20h], xmm4^^^add     rsi, rdx^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-8]^^^jb      short loc_43A3E7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-18h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-28h]^^^movaps  xmm4, xmmword ptr [rsi-38h]^^^movaps  xmm5, xmmword ptr [rsi-48h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 8^^^palignr xmm2, xmm3, 8^^^palignr xmm3, xmm4, 8^^^palignr xmm4, xmm5, 8^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A444^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-9]^^^jb      short loc_43A487^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+7]^^^movaps  xmm3, xmmword ptr [rsi+17h]^^^movaps  xmm4, xmmword ptr [rsi+27h]^^^movaps  xmm5, xmmword ptr [rsi+37h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 9^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 9^^^palignr xmm3, xmm2, 9^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 9^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A4EB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-9]^^^jb      short loc_43A537^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-19h]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-29h]^^^movaps  xmm4, xmmword ptr [rsi-39h]^^^movaps  xmm5, xmmword ptr [rsi-49h]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 9^^^palignr xmm2, xmm3, 9^^^palignr xmm3, xmm4, 9^^^palignr xmm4, xmm5, 9^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A594^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Ah]^^^jb      short loc_43A5D7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+6]^^^movaps  xmm3, xmmword ptr [rsi+16h]^^^movaps  xmm4, xmmword ptr [rsi+26h]^^^movaps  xmm5, xmmword ptr [rsi+36h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Ah^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Ah^^^palignr xmm3, xmm2, 0Ah^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Ah^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A63B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Ah]^^^jb      short loc_43A687^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Ah]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Ah]^^^movaps  xmm4, xmmword ptr [rsi-3Ah]^^^movaps  xmm5, xmmword ptr [rsi-4Ah]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Ah^^^palignr xmm2, xmm3, 0Ah^^^palignr xmm3, xmm4, 0Ah^^^palignr xmm4, xmm5, 0Ah^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A6E4^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Bh]^^^jb      short loc_43A727^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+5]^^^movaps  xmm3, xmmword ptr [rsi+15h]^^^movaps  xmm4, xmmword ptr [rsi+25h]^^^movaps  xmm5, xmmword ptr [rsi+35h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Bh^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Bh^^^palignr xmm3, xmm2, 0Bh^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Bh^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A78B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Bh]^^^jb      short loc_43A7D7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Bh]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Bh]^^^movaps  xmm4, xmmword ptr [rsi-3Bh]^^^movaps  xmm5, xmmword ptr [rsi-4Bh]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Bh^^^palignr xmm2, xmm3, 0Bh^^^palignr xmm3, xmm4, 0Bh^^^palignr xmm4, xmm5, 0Bh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A834^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Ch]^^^jb      short loc_43A877^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+4]^^^movaps  xmm3, xmmword ptr [rsi+14h]^^^movaps  xmm4, xmmword ptr [rsi+24h]^^^movaps  xmm5, xmmword ptr [rsi+34h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Ch^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Ch^^^palignr xmm3, xmm2, 0Ch^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Ch^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43A8DB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Ch]^^^jb      short loc_43A927^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Ch]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Ch]^^^movaps  xmm4, xmmword ptr [rsi-3Ch]^^^movaps  xmm5, xmmword ptr [rsi-4Ch]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Ch^^^palignr xmm2, xmm3, 0Ch^^^palignr xmm3, xmm4, 0Ch^^^palignr xmm4, xmm5, 0Ch^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43A984^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Dh]^^^jb      short loc_43A9C7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+3]^^^movaps  xmm3, xmmword ptr [rsi+13h]^^^movaps  xmm4, xmmword ptr [rsi+23h]^^^movaps  xmm5, xmmword ptr [rsi+33h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Dh^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Dh^^^palignr xmm3, xmm2, 0Dh^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Dh^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43AA2B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Dh]^^^jb      short loc_43AA77^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Dh]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Dh]^^^movaps  xmm4, xmmword ptr [rsi-3Dh]^^^movaps  xmm5, xmmword ptr [rsi-4Dh]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Dh^^^palignr xmm2, xmm3, 0Dh^^^palignr xmm3, xmm4, 0Dh^^^palignr xmm4, xmm5, 0Dh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43AAD4^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Eh]^^^jb      short loc_43AB17^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+2]^^^movaps  xmm3, xmmword ptr [rsi+12h]^^^movaps  xmm4, xmmword ptr [rsi+22h]^^^movaps  xmm5, xmmword ptr [rsi+32h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Eh^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Eh^^^palignr xmm3, xmm2, 0Eh^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Eh^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43AB7B^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Eh]^^^jb      short loc_43ABC7^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Eh]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Eh]^^^movaps  xmm4, xmmword ptr [rsi-3Eh]^^^movaps  xmm5, xmmword ptr [rsi-4Eh]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Eh^^^palignr xmm2, xmm3, 0Eh^^^palignr xmm3, xmm4, 0Eh^^^palignr xmm4, xmm5, 0Eh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43AC24^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Fh]^^^jb      short loc_43AC67^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi+1C0h]^^^sub     rdx, 40h^^^movaps  xmm2, xmmword ptr [rsi+1]^^^movaps  xmm3, xmmword ptr [rsi+11h]^^^movaps  xmm4, xmmword ptr [rsi+21h]^^^movaps  xmm5, xmmword ptr [rsi+31h]^^^movdqa  xmm6, xmm5^^^palignr xmm5, xmm4, 0Fh^^^lea     rsi, [rsi+40h]^^^palignr xmm4, xmm3, 0Fh^^^palignr xmm3, xmm2, 0Fh^^^lea     rdi, [rdi+40h]^^^palignr xmm2, xmm1, 0Fh^^^movdqa  xmm1, xmm6^^^movdqa  xmmword ptr [rdi-40h], xmm2^^^movaps  xmmword ptr [rdi-30h], xmm3^^^jb      short loc_43ACCB^^^movaps  xmmword ptr [rdi-20h], xmm4^^^movaps  xmmword ptr [rdi-10h], xmm5^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi-20h], xmm4^^^lea     rdx, [rdx+40h]^^^movaps  xmmword ptr [rdi-10h], xmm5^^^add     rdi, rdx^^^movdqu  xmmword ptr [r8], xmm0^^^add     rsi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^lea     r9, [r9+27h]^^^cmp     rdx, rcx^^^movaps  xmm1, xmmword ptr [rsi-0Fh]^^^jb      short loc_43AD17^^^lea     r9, [r9-7]^^^lea     rdx, [rdx-40h]^^^jmp     r9^^^ud2^^^prefetchnta byte ptr [rsi-1C0h]^^^movaps  xmm2, xmmword ptr [rsi-1Fh]^^^sub     rdx, 40h^^^movaps  xmm3, xmmword ptr [rsi-2Fh]^^^movaps  xmm4, xmmword ptr [rsi-3Fh]^^^movaps  xmm5, xmmword ptr [rsi-4Fh]^^^lea     rsi, [rsi-40h]^^^palignr xmm1, xmm2, 0Fh^^^palignr xmm2, xmm3, 0Fh^^^palignr xmm3, xmm4, 0Fh^^^palignr xmm4, xmm5, 0Fh^^^movaps  xmmword ptr [rdi-10h], xmm1^^^movaps  xmm1, xmm5^^^movaps  xmmword ptr [rdi-20h], xmm2^^^lea     rdi, [rdi-40h]^^^movaps  xmmword ptr [rdi+10h], xmm3^^^jb      short loc_43AD74^^^movaps  xmmword ptr [rdi], xmm4^^^jmp     r9^^^ud2^^^movaps  xmmword ptr [rdi], xmm4^^^lea     rdx, [rdx+40h]^^^movdqu  xmmword ptr [r8], xmm0^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movdqu  xmm0, xmmword ptr [rsi-48h]^^^movdqu  xmm1, xmmword ptr [rsi-38h]^^^mov     r8, [rsi-28h]^^^mov     r9, [rsi-20h]^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rcx, [rsi-8]^^^movdqu  xmmword ptr [rdi-48h], xmm0^^^movdqu  xmmword ptr [rdi-38h], xmm1^^^mov     [rdi-28h], r8^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rcx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-40h]^^^mov     rcx, [rsi-30h]^^^mov     r8, [rsi-28h]^^^mov     r9, [rsi-20h]^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-40h], xmm0^^^mov     [rdi-30h], rcx^^^mov     [rdi-28h], r8^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-38h]^^^mov     r8, [rsi-28h]^^^mov     r9, [rsi-20h]^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rcx, [rsi-8]^^^movdqu  xmmword ptr [rdi-38h], xmm0^^^mov     [rdi-28h], r8^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rcx^^^retn^^^mov     rcx, [rsi-30h]  ^^^mov     r8, [rsi-28h]^^^mov     r9, [rsi-20h]^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rdx, [rsi-8]^^^mov     [rdi-30h], rcx^^^mov     [rdi-28h], r8^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^mov     r8, [rsi-28h]   ^^^mov     r9, [rsi-20h]^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rdx, [rsi-8]^^^mov     [rdi-28h], r8^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^mov     r9, [rsi-20h]   ^^^mov     r10, [rsi-18h]^^^mov     r11, [rsi-10h]^^^mov     rdx, [rsi-8]^^^mov     [rdi-20h], r9^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^mov     r10, [rsi-18h]  ^^^mov     r11, [rsi-10h]^^^mov     rdx, [rsi-8]^^^mov     [rdi-18h], r10^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^mov     r11, [rsi-10h]  ^^^mov     rdx, [rsi-8]^^^mov     [rdi-10h], r11^^^mov     [rdi-8], rdx^^^retn^^^mov     rdx, [rsi-8]    ^^^mov     [rdi-8], rdx^^^retn                    ^^^movdqu  xmm0, xmmword ptr [rsi-49h]^^^movdqu  xmm1, xmmword ptr [rsi-39h]^^^mov     rcx, [rsi-29h]^^^mov     r9, [rsi-21h]^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     r8, [rsi-9]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-49h], xmm0^^^movdqu  xmmword ptr [rdi-39h], xmm1^^^mov     [rdi-29h], rcx^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], r8^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-41h]^^^movdqu  xmm1, xmmword ptr [rsi-31h]^^^mov     r9, [rsi-21h]^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-41h], xmm0^^^movdqu  xmmword ptr [rdi-31h], xmm1^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-39h]^^^mov     r8, [rsi-29h]^^^mov     r9, [rsi-21h]^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-39h], xmm0^^^mov     [rdi-29h], r8^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-31h]^^^mov     r9, [rsi-21h]^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-31h], xmm0^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r8, [rsi-29h]   ^^^mov     r9, [rsi-21h]^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     dl, [rsi-1]^^^mov     [rdi-29h], r8^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-1], dl^^^retn^^^mov     r9, [rsi-21h]   ^^^mov     r10, [rsi-19h]^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     dl, [rsi-1]^^^mov     [rdi-21h], r9^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-1], dl^^^retn^^^mov     r10, [rsi-19h]  ^^^mov     r11, [rsi-11h]^^^mov     rcx, [rsi-9]^^^mov     dl, [rsi-1]^^^mov     [rdi-19h], r10^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-1], dl^^^retn^^^mov     r11, [rsi-11h]  ^^^mov     rcx, [rsi-9]^^^mov     edx, [rsi-4]^^^mov     [rdi-11h], r11^^^mov     [rdi-9], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     rcx, [rsi-9]    ^^^mov     edx, [rsi-4]^^^mov     [rdi-9], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     dl, [rsi-1]     ^^^mov     [rdi-1], dl^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Ah]^^^movdqu  xmm1, xmmword ptr [rsi-3Ah]^^^mov     r8, [rsi-2Ah]^^^mov     r9, [rsi-22h]^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-4Ah], xmm0^^^movdqu  xmmword ptr [rdi-3Ah], xmm1^^^mov     [rdi-2Ah], r8^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-42h]^^^movdqu  xmm1, xmmword ptr [rsi-32h]^^^mov     r8, [rsi-2Ah]^^^mov     r9, [rsi-22h]^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-42h], xmm0^^^movdqu  xmmword ptr [rdi-32h], xmm1^^^mov     [rdi-2Ah], r8^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm1, xmmword ptr [rsi-3Ah]^^^mov     r8, [rsi-2Ah]^^^mov     r9, [rsi-22h]^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-3Ah], xmm1^^^mov     [rdi-2Ah], r8^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-32h]^^^mov     r9, [rsi-22h]^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-32h], xmm0^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r8, [rsi-2Ah]   ^^^mov     r9, [rsi-22h]^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^mov     [rdi-2Ah], r8^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r9, [rsi-22h]   ^^^mov     r10, [rsi-1Ah]^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^mov     [rdi-22h], r9^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r10, [rsi-1Ah]  ^^^mov     r11, [rsi-12h]^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^mov     [rdi-1Ah], r10^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r11, [rsi-12h]  ^^^mov     rcx, [rsi-0Ah]^^^mov     edx, [rsi-4]^^^mov     [rdi-12h], r11^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     rcx, [rsi-0Ah]  ^^^mov     edx, [rsi-4]^^^mov     [rdi-0Ah], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     dx, [rsi-2]     ^^^mov     [rdi-2], dx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Bh]^^^movdqu  xmm1, xmmword ptr [rsi-3Bh]^^^mov     r8, [rsi-2Bh]^^^mov     r9, [rsi-23h]^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-4Bh], xmm0^^^movdqu  xmmword ptr [rdi-3Bh], xmm1^^^mov     [rdi-2Bh], r8^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-43h]^^^movdqu  xmm1, xmmword ptr [rsi-3Bh]^^^mov     r8, [rsi-2Bh]^^^mov     r9, [rsi-23h]^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-43h], xmm0^^^movdqu  xmmword ptr [rdi-3Bh], xmm1^^^mov     [rdi-2Bh], r8^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-3Bh]^^^mov     r8, [rsi-2Bh]^^^mov     r9, [rsi-23h]^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-3Bh], xmm0^^^mov     [rdi-2Bh], r8^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-33h]^^^mov     r9, [rsi-23h]^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-33h], xmm0^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r8, [rsi-2Bh]   ^^^mov     r9, [rsi-23h]^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^mov     [rdi-2Bh], r8^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r9, [rsi-23h]   ^^^mov     r10, [rsi-1Bh]^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^mov     [rdi-23h], r9^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r10, [rsi-1Bh]  ^^^mov     r11, [rsi-13h]^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^mov     [rdi-1Bh], r10^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r11, [rsi-13h]  ^^^mov     rcx, [rsi-0Bh]^^^mov     edx, [rsi-4]^^^mov     [rdi-13h], r11^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     rcx, [rsi-0Bh]  ^^^mov     edx, [rsi-4]^^^mov     [rdi-0Bh], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     dx, [rsi-3]     ^^^mov     cx, [rsi-2]^^^mov     [rdi-3], dx^^^mov     [rdi-2], cx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Ch]^^^movdqu  xmm1, xmmword ptr [rsi-3Ch]^^^mov     r8, [rsi-2Ch]^^^mov     r9, [rsi-24h]^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-4Ch], xmm0^^^movdqu  xmmword ptr [rdi-3Ch], xmm1^^^mov     [rdi-2Ch], r8^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-44h]^^^movdqu  xmm1, xmmword ptr [rsi-34h]^^^mov     r9, [rsi-24h]^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-44h], xmm0^^^movdqu  xmmword ptr [rdi-34h], xmm1^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-3Ch]^^^mov     r8, [rsi-2Ch]^^^mov     r9, [rsi-24h]^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-3Ch], xmm0^^^mov     [rdi-2Ch], r8^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-34h]^^^mov     r9, [rsi-24h]^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^movdqu  xmmword ptr [rdi-34h], xmm0^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r8, [rsi-2Ch]   ^^^mov     r9, [rsi-24h]^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^mov     [rdi-2Ch], r8^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r9, [rsi-24h]   ^^^mov     r10, [rsi-1Ch]^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^mov     [rdi-24h], r9^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r10, [rsi-1Ch]  ^^^mov     r11, [rsi-14h]^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^mov     [rdi-1Ch], r10^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     r11, [rsi-14h]  ^^^mov     rcx, [rsi-0Ch]^^^mov     edx, [rsi-4]^^^mov     [rdi-14h], r11^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     rcx, [rsi-0Ch]  ^^^mov     edx, [rsi-4]^^^mov     [rdi-0Ch], rcx^^^mov     [rdi-4], edx^^^retn^^^mov     edx, [rsi-4]    ^^^mov     [rdi-4], edx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Dh]^^^movdqu  xmm1, xmmword ptr [rsi-3Dh]^^^mov     r8, [rsi-2Dh]^^^mov     r9, [rsi-25h]^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-4Dh], xmm0^^^movdqu  xmmword ptr [rdi-3Dh], xmm1^^^mov     [rdi-2Dh], r8^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-45h]^^^movdqu  xmm1, xmmword ptr [rsi-35h]^^^mov     r9, [rsi-25h]^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-45h], xmm0^^^movdqu  xmmword ptr [rdi-35h], xmm1^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-3Dh]^^^mov     r8, [rsi-2Dh]^^^mov     r9, [rsi-25h]^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-3Dh], xmm0^^^mov     [rdi-2Dh], r8^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-35h]^^^mov     r8, [rsi-2Dh]^^^mov     r9, [rsi-25h]^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-35h], xmm0^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r8, [rsi-2Dh]   ^^^mov     r9, [rsi-25h]^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-2Dh], r8^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r9, [rsi-25h]   ^^^mov     r10, [rsi-1Dh]^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-25h], r9^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r10, [rsi-1Dh]  ^^^mov     r11, [rsi-15h]^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-1Dh], r10^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r11, [rsi-15h]  ^^^mov     rcx, [rsi-0Dh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-15h], r11^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     rcx, [rsi-0Dh]  ^^^mov     rdx, [rsi-8]^^^mov     [rdi-0Dh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     edx, [rsi-5]    ^^^mov     ecx, [rsi-4]^^^mov     [rdi-5], edx^^^mov     [rdi-4], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Eh]^^^movdqu  xmm1, xmmword ptr [rsi-3Eh]^^^mov     r8, [rsi-2Eh]^^^mov     r9, [rsi-26h]^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-4Eh], xmm0^^^movdqu  xmmword ptr [rdi-3Eh], xmm1^^^mov     [rdi-2Eh], r8^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-46h]^^^movdqu  xmm1, xmmword ptr [rsi-36h]^^^mov     r9, [rsi-26h]^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-46h], xmm0^^^movdqu  xmmword ptr [rdi-36h], xmm1^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-3Eh]^^^mov     r8, [rsi-2Eh]^^^mov     r9, [rsi-26h]^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-3Eh], xmm0^^^mov     [rdi-2Eh], r8^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-36h]^^^mov     r9, [rsi-26h]^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-36h], xmm0^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r8, [rsi-2Eh]   ^^^mov     r9, [rsi-26h]^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-2Eh], r8^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r9, [rsi-26h]   ^^^mov     r10, [rsi-1Eh]^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-26h], r9^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r10, [rsi-1Eh]  ^^^mov     r11, [rsi-16h]^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-1Eh], r10^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r11, [rsi-16h]  ^^^mov     rcx, [rsi-0Eh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-16h], r11^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     rcx, [rsi-0Eh]  ^^^mov     rdx, [rsi-8]^^^mov     [rdi-0Eh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     edx, [rsi-6]    ^^^mov     ecx, [rsi-4]^^^mov     [rdi-6], edx^^^mov     [rdi-4], ecx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-4Fh]^^^movdqu  xmm1, xmmword ptr [rsi-3Fh]^^^mov     r8, [rsi-2Fh]^^^mov     r9, [rsi-27h]^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-4Fh], xmm0^^^movdqu  xmmword ptr [rdi-3Fh], xmm1^^^mov     [rdi-2Fh], r8^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-47h]^^^movdqu  xmm1, xmmword ptr [rsi-37h]^^^mov     r9, [rsi-27h]^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-47h], xmm0^^^movdqu  xmmword ptr [rdi-37h], xmm1^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-3Fh]^^^mov     r8, [rsi-2Fh]^^^mov     r9, [rsi-27h]^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-3Fh], xmm0^^^mov     [rdi-2Fh], r8^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^movdqu  xmm0, xmmword ptr [rsi-37h]^^^mov     r9, [rsi-27h]^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^movdqu  xmmword ptr [rdi-37h], xmm0^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r8, [rsi-2Fh]   ^^^mov     r9, [rsi-27h]^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-2Fh], r8^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r9, [rsi-27h]   ^^^mov     r10, [rsi-1Fh]^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-27h], r9^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r10, [rsi-1Fh]  ^^^mov     r11, [rsi-17h]^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-1Fh], r10^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     r11, [rsi-17h]  ^^^mov     rcx, [rsi-0Fh]^^^mov     rdx, [rsi-8]^^^mov     [rdi-17h], r11^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     rcx, [rsi-0Fh]  ^^^mov     rdx, [rsi-8]^^^mov     [rdi-0Fh], rcx^^^mov     [rdi-8], rdx^^^retn^^^mov     edx, [rsi-7]    ^^^mov     ecx, [rsi-4]^^^mov     [rdi-7], edx^^^mov     [rdi-4], ecx^^^retn^^^movdqu  xmm1, xmmword ptr [rsi]^^^lea     rsi, [rsi+10h]^^^movdqu  xmmword ptr [r8], xmm0^^^movntdq xmmword ptr [rdi], xmm1^^^lea     rdi, [rdi+10h]^^^lea     rdx, [rdx-90h]^^^mov     r9, rsi^^^sub     r9, rdi^^^cmp     r9, rdx^^^jnb     short loc_43BCF4^^^shl     rcx, 2^^^cmp     rdx, rcx^^^jb      loc_43BDC0^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^movdqu  xmm4, xmmword ptr [rsi+40h]^^^movdqu  xmm5, xmmword ptr [rsi+50h]^^^movdqu  xmm6, xmmword ptr [rsi+60h]^^^movdqu  xmm7, xmmword ptr [rsi+70h]^^^lea     rsi, [rsi+80h]^^^sub     rdx, 80h^^^movntdq xmmword ptr [rdi], xmm0^^^movntdq xmmword ptr [rdi+10h], xmm1^^^movntdq xmmword ptr [rdi+20h], xmm2^^^movntdq xmmword ptr [rdi+30h], xmm3^^^movntdq xmmword ptr [rdi+40h], xmm4^^^movntdq xmmword ptr [rdi+50h], xmm5^^^movntdq xmmword ptr [rdi+60h], xmm6^^^movntdq xmmword ptr [rdi+70h], xmm7^^^lea     rdi, [rdi+80h]^^^jnb     short loc_43BCF4^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_43BD98^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^lea     rsi, [rsi+40h]^^^movntdq xmmword ptr [rdi], xmm0^^^movntdq xmmword ptr [rdi+10h], xmm1^^^movntdq xmmword ptr [rdi+20h], xmm2^^^movntdq xmmword ptr [rdi+30h], xmm3^^^lea     rdi, [rdi+40h]^^^sub     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^sfence^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^prefetcht0 byte ptr [rsi+1C0h]^^^prefetcht0 byte ptr [rsi+200h]^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^movdqu  xmm4, xmmword ptr [rsi+40h]^^^movdqu  xmm5, xmmword ptr [rsi+50h]^^^movdqu  xmm6, xmmword ptr [rsi+60h]^^^movdqu  xmm7, xmmword ptr [rsi+70h]^^^lea     rsi, [rsi+80h]^^^sub     rdx, 80h^^^movaps  xmmword ptr [rdi], xmm0^^^movaps  xmmword ptr [rdi+10h], xmm1^^^movaps  xmmword ptr [rdi+20h], xmm2^^^movaps  xmmword ptr [rdi+30h], xmm3^^^movaps  xmmword ptr [rdi+40h], xmm4^^^movaps  xmmword ptr [rdi+50h], xmm5^^^movaps  xmmword ptr [rdi+60h], xmm6^^^movaps  xmmword ptr [rdi+70h], xmm7^^^lea     rdi, [rdi+80h]^^^jnb     short loc_43BDC0^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_43BE66^^^movdqu  xmm0, xmmword ptr [rsi]^^^movdqu  xmm1, xmmword ptr [rsi+10h]^^^movdqu  xmm2, xmmword ptr [rsi+20h]^^^movdqu  xmm3, xmmword ptr [rsi+30h]^^^lea     rsi, [rsi+40h]^^^movaps  xmmword ptr [rdi], xmm0^^^movaps  xmmword ptr [rdi+10h], xmm1^^^movaps  xmmword ptr [rdi+20h], xmm2^^^movaps  xmmword ptr [rdi+30h], xmm3^^^lea     rdi, [rdi+40h]^^^sub     rdx, 40h^^^add     rsi, rdx^^^add     rdi, rdx^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^movdqu  xmm1, xmmword ptr [rsi-10h]^^^lea     rsi, [rsi-10h]^^^movdqu  xmmword ptr [r8], xmm0^^^movdqa  xmmword ptr [rdi-10h], xmm1^^^lea     rdi, [rdi-10h]^^^lea     rdx, [rdx-90h]^^^mov     r9, rdi^^^sub     r9, rsi^^^cmp     r9, rdx^^^jnb     short loc_43BEB2^^^cmp     r9, rcx^^^jb      loc_43BF70^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^movdqu  xmm1, xmmword ptr [rsi-20h]^^^movdqu  xmm2, xmmword ptr [rsi-30h]^^^movdqu  xmm3, xmmword ptr [rsi-40h]^^^movdqu  xmm4, xmmword ptr [rsi-50h]^^^movdqu  xmm5, xmmword ptr [rsi-60h]^^^movdqu  xmm6, xmmword ptr [rsi-70h]^^^movdqu  xmm7, xmmword ptr [rsi-80h]^^^lea     rsi, [rsi-80h]^^^sub     rdx, 80h^^^movntdq xmmword ptr [rdi-10h], xmm0^^^movntdq xmmword ptr [rdi-20h], xmm1^^^movntdq xmmword ptr [rdi-30h], xmm2^^^movntdq xmmword ptr [rdi-40h], xmm3^^^movntdq xmmword ptr [rdi-50h], xmm4^^^movntdq xmmword ptr [rdi-60h], xmm5^^^movntdq xmmword ptr [rdi-70h], xmm6^^^movntdq xmmword ptr [rdi-80h], xmm7^^^lea     rdi, [rdi-80h]^^^jnb     short loc_43BEB2^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_43BF54^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^movdqu  xmm1, xmmword ptr [rsi-20h]^^^movdqu  xmm2, xmmword ptr [rsi-30h]^^^movdqu  xmm3, xmmword ptr [rsi-40h]^^^lea     rsi, [rsi-40h]^^^movntdq xmmword ptr [rdi-10h], xmm0^^^movntdq xmmword ptr [rdi-20h], xmm1^^^movntdq xmmword ptr [rdi-30h], xmm2^^^movntdq xmmword ptr [rdi-40h], xmm3^^^lea     rdi, [rdi-40h]^^^sub     rdx, 40h^^^sfence^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^ud2^^^prefetcht0 byte ptr [rsi-1C0h]^^^prefetcht0 byte ptr [rsi-200h]^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^movdqu  xmm1, xmmword ptr [rsi-20h]^^^movdqu  xmm2, xmmword ptr [rsi-30h]^^^movdqu  xmm3, xmmword ptr [rsi-40h]^^^movdqu  xmm4, xmmword ptr [rsi-50h]^^^movdqu  xmm5, xmmword ptr [rsi-60h]^^^movdqu  xmm6, xmmword ptr [rsi-70h]^^^movdqu  xmm7, xmmword ptr [rsi-80h]^^^lea     rsi, [rsi-80h]^^^sub     rdx, 80h^^^movaps  xmmword ptr [rdi-10h], xmm0^^^movaps  xmmword ptr [rdi-20h], xmm1^^^movaps  xmmword ptr [rdi-30h], xmm2^^^movaps  xmmword ptr [rdi-40h], xmm3^^^movaps  xmmword ptr [rdi-50h], xmm4^^^movaps  xmmword ptr [rdi-60h], xmm5^^^movaps  xmmword ptr [rdi-70h], xmm6^^^movaps  xmmword ptr [rdi-80h], xmm7^^^lea     rdi, [rdi-80h]^^^jnb     short loc_43BF70^^^cmp     rdx, 0FFFFFFFFFFFFFFC0h^^^lea     rdx, [rdx+80h]^^^jl      short loc_43C014^^^movdqu  xmm0, xmmword ptr [rsi-10h]^^^movdqu  xmm1, xmmword ptr [rsi-20h]^^^movdqu  xmm2, xmmword ptr [rsi-30h]^^^movdqu  xmm3, xmmword ptr [rsi-40h]^^^lea     rsi, [rsi-40h]^^^movaps  xmmword ptr [rdi-10h], xmm0^^^movaps  xmmword ptr [rdi-20h], xmm1^^^movaps  xmmword ptr [rdi-30h], xmm2^^^movaps  xmmword ptr [rdi-40h], xmm3^^^lea     rdi, [rdi-40h]^^^sub     rdx, 40h^^^lea     r11, off_49CC30^^^movsxd  rdx, dword ptr [r11+rdx*4]^^^lea     rdx, [r11+rdx]^^^jmp     rdx^^^
_L_lock_48$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_402604^^^
add_name_to_object.isra.3$$$push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 8^^^test    rdi, rdi^^^jnz     short loc_44EE1C^^^jmp     short loc_44EE40^^^mov     rax, [rbp+8]^^^test    rax, rax^^^jz      short loc_44EE40^^^mov     rbp, rax^^^mov     rsi, [rbp+0]^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_44EE10^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     rdi, rbx^^^call    strlen^^^lea     rdi, [rax+19h]^^^mov     r13, rax^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^jz      short loc_44EE96^^^test    rbp, rbp^^^jz      short loc_44EEAA^^^lea     rdx, [r13+1]^^^lea     rdi, [rax+18h]^^^mov     rsi, rbx^^^call    memcpy^^^mov     qword ptr [r12+8], 0^^^mov     [r12], rax^^^mov     [rbp+8], r12^^^mov     dword ptr [r12+10h], 0^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     ecx, offset aCannotAllocate^^^xor     edx, edx^^^mov     rsi, rbx^^^mov     edi, 0Ch^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___11035^^^mov     edx, 1DBh^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aLastpVoid0^^^call    __assert_fail^^^
_L_unlock_138$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_425750^^^
dl_iterate_phdr$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 58h^^^mov     rax, cs:_dl_phnum^^^mov     rbx, rdi^^^mov     rbp, rsi^^^test    rax, rax^^^jz      short loc_49503D^^^mov     rdx, cs:_dl_phdr^^^mov     [rsp+58h+var_40], ax^^^mov     rdi, rsp^^^mov     rax, cs:_dl_load_adds^^^mov     [rsp+58h+var_58], 0^^^mov     [rsp+58h+var_50], offset unk_49A0C9^^^mov     [rsp+58h+var_48], rdx^^^mov     edx, cs:dword_6C5FE8^^^mov     [rsp+58h+var_38], rax^^^sub     rax, rdx^^^mov     rdx, rsi^^^mov     esi, 40h^^^mov     [rsp+58h+var_30], rax^^^call    rbx^^^test    eax, eax^^^jnz     short loc_495048^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    __dl_iterate_phdr^^^mov     rbx, [rsp+58h+var_10]^^^mov     rbp, [rsp+58h+var_8]^^^add     rsp, 58h^^^retn^^^
fun$$$push    rbp^^^mov     rbp, rsp^^^mov     eax, offset aFunCalledFromA^^^mov     rdi, rax^^^mov     eax, 0^^^call    printf^^^pop     rbp^^^retn^^^
clearenv$$$sub     rsp, 8          ^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_419094^^^lock cmpxchg cs:envlock, esi^^^jnz     _L_lock_1263^^^jmp     short loc_4190A1^^^cmpxchg cs:envlock, esi^^^jnz     _L_lock_1263^^^mov     rdi, cs:environ^^^cmp     rdi, cs:last_environ^^^jz      short loc_4190F0^^^mov     cs:environ, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4190D4^^^lock dec cs:envlock^^^jnz     _L_unlock_1272^^^jmp     short loc_4190E0^^^dec     cs:envlock^^^jnz     _L_unlock_1272^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^test    rdi, rdi^^^jz      short loc_4190B1^^^call    free^^^mov     cs:last_environ, 0^^^jmp     short loc_4190B1^^^
__dlmopen$$$sub     rsp, 38h^^^mov     [rsp+38h+var_38], rdi^^^mov     [rsp+38h+var_30], rsi^^^mov     edi, offset dlmopen_doit^^^mov     rsi, rsp^^^mov     [rsp+38h+var_28], edx^^^mov     [rsp+38h+var_18], rcx^^^call    _dlerror_run^^^xor     edx, edx^^^test    eax, eax^^^jnz     short loc_482BD2^^^mov     rdi, [rsp+38h+var_20]^^^call    __libc_register_dl_open_hook^^^mov     rdi, [rsp+38h+var_20]^^^call    __libc_register_dlfcn_hook^^^mov     rdx, [rsp+38h+var_20]^^^mov     rax, rdx^^^add     rsp, 38h^^^retn^^^
_IO_wfile_underflow$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 48h^^^mov     eax, [rdi]^^^test    al, 4^^^jnz     loc_4285DC^^^mov     rax, [rdi+0A0h]^^^mov     rdx, [rax]^^^cmp     rdx, [rax+8]^^^jb      loc_428380^^^mov     rdx, [rdi+8]^^^cmp     rdx, [rdi+10h]^^^mov     rbp, [rdi+98h]^^^jb      loc_428398^^^mov     rax, [rdi+38h]^^^mov     [rdi+10h], rax^^^mov     [rdi+8], rax^^^mov     [rdi+18h], rax^^^test    rax, rax^^^jz      loc_4284C0^^^mov     [rbx+30h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     rax, [rbx+0A0h]^^^cmp     qword ptr [rax+30h], 0^^^jz      loc_428498^^^test    dword ptr [rbx], 202h^^^jz      loc_428180^^^mov     r12, cs:stdout^^^mov     edx, [r12]^^^mov     rdi, r12^^^mov     eax, edx^^^and     eax, 8000h^^^jnz     short loc_428161^^^mov     rdx, [r12+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_42815B^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42813F^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_643^^^jmp     short loc_428148^^^cmpxchg [rdx], esi^^^jnz     _L_lock_643^^^mov     rdx, [r12+88h]^^^mov     rdi, cs:stdout^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     edx, [rdi]^^^and     edx, 288h^^^cmp     edx, 280h^^^jz      loc_42852F^^^mov     eax, [r12]^^^test    ah, 80h^^^jz      loc_428438^^^mov     rdi, rbx^^^lea     r12, [rsp+78h+var_58]^^^xor     r14d, r14d^^^call    _IO_switch_to_get_mode^^^mov     rax, [rbx+0A0h]^^^mov     r15, [rbx+10h]^^^mov     r13d, 10h^^^mov     rdx, [rax+30h]^^^mov     [rax], rdx^^^mov     [rax+10h], rdx^^^mov     [rax+8], rdx^^^mov     [rax+28h], rdx^^^mov     [rax+20h], rdx^^^mov     [rax+18h], rdx^^^nop     dword ptr [rax+00h]^^^mov     rdx, [rbx+40h]^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r15^^^mov     rdi, rbx^^^sub     rdx, r15^^^call    qword ptr [rax+70h]^^^test    rax, rax^^^jle     loc_4282E0^^^mov     rdx, [rbx+90h]^^^add     [rbx+10h], rax^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_4281FB^^^add     rdx, rax^^^mov     [rbx+90h], rdx^^^mov     rdx, [rbx+0A0h]^^^test    r14, r14^^^mov     rcx, [rdx+58h]^^^mov     [rdx+60h], rcx^^^mov     rdi, [rbx+8]^^^mov     rcx, [rbx+10h]^^^mov     [rbx+18h], rdi^^^jnz     loc_42855C^^^mov     rax, [rbx+0A0h]^^^lea     r8, [rsp+78h+var_48]^^^lea     rdx, [rax+8]^^^mov     r9, [rax+8]^^^lea     rsi, [rax+58h]^^^mov     [rsp+78h+var_70], rdx^^^mov     rax, [rax+38h]^^^mov     rdx, rdi^^^mov     rdi, rbp^^^mov     [rsp+78h+var_78], rax^^^call    qword ptr [rbp+18h]^^^mov     rsi, [rsp+78h+var_48]^^^xor     r14d, r14d^^^mov     rcx, rsi^^^mov     rdx, [rbx+0A0h]^^^mov     [rbx+8], rsi^^^mov     rdi, [rdx+30h]^^^cmp     [rdx+8], rdi^^^jnz     loc_428480^^^cmp     eax, 2^^^jz      loc_42840D^^^cmp     eax, 1^^^jnz     loc_428543^^^test    r14, r14^^^jnz     short loc_4282C0^^^mov     r15, [rbx+18h]^^^cmp     r15, rsi^^^jb      short loc_428308^^^mov     r14, [rbx+10h]^^^sub     r14, rsi^^^cmp     r14, 0Fh^^^ja      loc_42840D^^^mov     rdx, r14^^^mov     rdi, r12^^^call    memcpy^^^mov     [rbx+10h], r15^^^mov     [rbx+8], r15^^^jmp     loc_4281C0^^^mov     rax, rcx^^^sub     rax, r12^^^jnz     short loc_428340^^^cmp     r14, 10h^^^jz      loc_42840D^^^mov     r15, [rbx+18h]^^^jmp     short loc_4282AD^^^test    r14, r14^^^jnz     short loc_428360^^^test    rax, rax^^^jnz     short loc_428360^^^or      dword ptr [rbx], 10h^^^mov     eax, 0FFFFFFFFh^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rcx, [rbx+10h]^^^mov     rdi, r15^^^sub     rcx, rsi^^^mov     rdx, rcx^^^mov     [rsp+78h+var_60], rcx^^^call    sub_400340^^^mov     r15, [rbx+10h]^^^mov     rcx, [rsp+78h+var_60]^^^mov     rax, [rbx+18h]^^^sub     r15, rcx^^^mov     [rbx+8], rax^^^mov     [rbx+10h], r15^^^jmp     loc_4281C0^^^sub     r14, rax^^^mov     rsi, rcx^^^mov     rdi, r12^^^mov     rdx, r14^^^call    sub_400340^^^jmp     loc_4282C8^^^or      dword ptr [rbx], 20h^^^test    r14, r14^^^jz      short loc_428376^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 54h^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_4282F2^^^mov     eax, [rdx]^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     [rsp+78h+var_40], rdx^^^mov     rdx, [rax+58h]^^^lea     r8, [rsp+78h+var_40]^^^mov     [rax+60h], rdx^^^mov     rax, [rdi+0A0h]^^^mov     rcx, [rdi+10h]^^^mov     rdx, [rdi+8]^^^mov     r9, [rax+30h]^^^lea     rdi, [rax+8]^^^lea     rsi, [rax+58h]^^^mov     [rax], r9^^^mov     [rax+10h], r9^^^mov     [rsp+78h+var_70], rdi^^^mov     rax, [rax+38h]^^^mov     rdi, rbp^^^mov     [rsp+78h+var_78], rax^^^call    qword ptr [rbp+18h]^^^mov     rdx, [rbx+8]^^^mov     rsi, [rsp+78h+var_40]^^^mov     [rbx+18h], rdx^^^mov     rdx, [rbx+0A0h]^^^mov     [rbx+8], rsi^^^mov     rcx, [rdx]^^^cmp     rcx, [rdx+8]^^^jb      loc_4284F8^^^cmp     eax, 2^^^jnz     loc_4284FF^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 54h^^^or      dword ptr [rbx], 20h^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^mov     eax, 0FFFFFFFFh^^^pop     r15^^^retn^^^mov     rdx, [r12+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     loc_428180^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42846D^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_1027^^^jmp     short loc_428475^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_1027^^^jmp     loc_428180^^^mov     rax, [rdx]^^^mov     eax, [rax]^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdi, [rax+40h]^^^test    rdi, rdi^^^jz      short loc_4284AC^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_wdoallocbuf^^^jmp     loc_4280EB^^^mov     rdi, [rbx+48h]^^^test    rdi, rdi^^^jz      short loc_4284D4^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     rax, [rbx+38h]^^^mov     [rbx+10h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+18h], rax^^^jmp     loc_4280CD^^^mov     eax, [rcx]^^^jmp     loc_4282F2^^^mov     rdx, [rbx+10h]^^^mov     rdi, [rbx+38h]^^^sub     rdx, rsi^^^call    sub_400340^^^mov     rax, [rbx+38h]^^^mov     rdx, rax^^^add     rdx, [rbx+10h]^^^mov     [rbx+18h], rax^^^sub     rdx, [rbx+8]^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rdx^^^jmp     loc_4280C4^^^mov     rax, [rdi+0D8h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+18h]^^^jmp     loc_428173^^^mov     ecx, offset __PRETTY_FUNCTION___11594^^^mov     edx, 128h^^^mov     esi, offset aWfileops_c^^^mov     edi, offset aStatus__codecv^^^call    __assert_fail^^^mov     r15, r13^^^lea     r10, [r12+r14]^^^mov     rsi, rdi^^^sub     r15, r14^^^cmp     r15, rax^^^mov     rdi, r10^^^mov     [rsp+78h+var_60], r10^^^cmova   r15, rax^^^mov     rdx, r15^^^add     r14, r15^^^call    mempcpy^^^mov     rdx, [rbx+0A0h]^^^lea     r8, [rsp+78h+var_48]^^^mov     rdi, rbp^^^lea     rcx, [rdx+8]^^^mov     r9, [rdx+8]^^^lea     rsi, [rdx+58h]^^^mov     [rsp+78h+var_70], rcx^^^mov     rdx, [rdx+38h]^^^mov     rcx, rax^^^mov     [rsp+78h+var_78], rdx^^^mov     rdx, r12^^^call    qword ptr [rbp+18h]^^^test    r14, r14^^^mov     r10, [rsp+78h+var_60]^^^jz      loc_42824D^^^mov     rcx, [rsp+78h+var_48]^^^xor     esi, esi^^^mov     rdx, rcx^^^sub     rdx, r10^^^cmovns  rsi, rdx^^^add     rsi, [rbx+8]^^^jmp     loc_428258^^^or      eax, 20h^^^mov     [rdi], eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_4282F2^^^
sub_40A660$$$mov     [rdi-0Bh], dl^^^
malloc$$$mov     [rsp+var_8], r12^^^mov     [rsp+var_18], rbx^^^mov     r12, rdi^^^mov     [rsp+var_10], rbp^^^sub     rsp, 18h^^^mov     rax, cs:__malloc_hook^^^test    rax, rax^^^jnz     loc_407877^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     rdx, fs:[rax]^^^test    rdx, rdx^^^jz      loc_4077E8^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4076D6^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_10577^^^jmp     short loc_4076DF^^^cmpxchg [rdx], esi^^^jnz     _L_lock_10577^^^mov     rbx, rdx^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    _int_malloc^^^mov     rbp, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407704^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_10596^^^jmp     short loc_40770C^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_10596^^^test    rbp, rbp^^^jz      short loc_407760^^^mov     rax, [rbp-8]^^^test    al, 2^^^jnz     short loc_40772B^^^test    al, 4^^^mov     edx, offset main_arena^^^jnz     short loc_407748^^^cmp     rdx, rbx^^^jnz     loc_407890^^^mov     rax, rbp^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^lea     rax, [rbp-10h]^^^and     rax, 0FFFFFFFFFC000000h^^^mov     rdx, [rax]^^^jmp     short loc_407722^^^cmp     rbx, offset main_arena^^^jz      loc_407820^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40778D^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_10652^^^jmp     short loc_40779A^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_10652^^^mov     edi, offset main_arena^^^mov     rsi, r12^^^call    _int_malloc^^^mov     rbp, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4077C2^^^lock dec cs:main_arena^^^jnz     _L_unlock_10661^^^jmp     short loc_4077CE^^^dec     cs:main_arena^^^jnz     _L_unlock_10661^^^mov     ebx, offset main_arena^^^test    rbp, rbp^^^jz      loc_40772B^^^jmp     loc_407711^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_4076E2^^^xor     esi, esi^^^mov     rdi, r12^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_4076E2^^^xor     ebp, ebp^^^jmp     loc_40772B^^^call    get_free_list^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_40785C^^^mov     rsi, r12^^^mov     rdi, rbx^^^call    _int_malloc^^^mov     rbp, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40784F^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_10754^^^jmp     short loc_407857^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_10754^^^jmp     loc_4077D3^^^mov     esi, offset main_arena^^^mov     rdi, r12^^^call    arena_get2_isra_5_part_6^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_40772B^^^jmp     short loc_40782D^^^mov     rsi, [rsp+18h]^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^jmp     rax^^^mov     ecx, offset __func___12409^^^mov     edx, 0B83h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aVictimMchunkpt^^^call    __malloc_assert^^^
sub_40A663$$$mov     [rdi-0Ah], dx^^^mov     [rdi-8], rdx^^^jmp     short sub_40A6AA^^^
_IO_new_file_overflow$$$push    r12^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^test    al, 8^^^jnz     loc_42B290^^^test    ah, 8^^^jz      short loc_42B190^^^mov     rsi, [rdi+20h]^^^test    rsi, rsi^^^jz      loc_42B2B0^^^mov     r12, [rdi+28h]^^^cmp     ebp, 0FFFFFFFFh^^^jz      loc_42B250^^^cmp     [rbx+40h], r12^^^jz      loc_42B200^^^mov     [r12], bpl^^^mov     eax, [rbx]^^^add     r12, 1^^^mov     [rbx+28h], r12^^^test    al, 2^^^jnz     short loc_42B158^^^cmp     ebp, 0Ah^^^jnz     short loc_42B180^^^test    ah, 2^^^jz      short loc_42B180^^^mov     rsi, [rbx+20h]^^^sub     r12, rsi^^^jz      short loc_42B180^^^mov     rdx, r12^^^mov     rdi, rbx^^^call    new_do_write^^^mov     rdx, rax^^^mov     eax, 0FFFFFFFFh^^^cmp     r12, rdx^^^jnz     short loc_42B184^^^nop     dword ptr [rax+00000000h]^^^movzx   eax, bpl^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^cmp     qword ptr [rdi+20h], 0^^^jz      loc_42B2B0^^^mov     rsi, [rdi+8]^^^test    ah, 1^^^jnz     loc_42B2EF^^^mov     rdx, [rbx+40h]^^^cmp     rdx, rsi^^^jz      loc_42B280^^^mov     rcx, [rbx+10h]^^^mov     [rbx+30h], rdx^^^mov     edx, [rbx+0C0h]^^^or      ah, 8^^^mov     [rbx+28h], rsi^^^mov     [rbx+20h], rsi^^^mov     r12, rsi^^^mov     [rbx+8], rcx^^^mov     [rbx+18h], rcx^^^test    edx, edx^^^mov     [rbx], eax^^^jg      loc_42B129^^^test    eax, 202h^^^jz      loc_42B129^^^mov     [rbx+30h], rsi^^^jmp     loc_42B129^^^mov     eax, [rbx+0C0h]^^^test    eax, eax^^^jle     loc_42B2D0^^^mov     rax, [rbx+0A0h]^^^mov     rdi, rbx^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^cmp     eax, 0FFFFFFFFh^^^setz    dl^^^test    dl, dl^^^mov     eax, 0FFFFFFFFh^^^jnz     loc_42B184^^^mov     r12, [rbx+28h]^^^jmp     loc_42B13C^^^xor     eax, eax^^^sub     r12, rsi^^^jz      loc_42B184^^^mov     rdx, r12^^^mov     rdi, rbx^^^call    new_do_write^^^cmp     r12, rax^^^setz    al^^^movzx   eax, al^^^sub     eax, 1^^^jmp     loc_42B184^^^mov     rsi, [rbx+38h]^^^mov     [rbx+10h], rsi^^^mov     rcx, rsi^^^jmp     loc_42B1B9^^^or      eax, 20h^^^mov     [rdi], eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_42B184^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     rsi, [rbx+38h]^^^mov     eax, [rbx]^^^mov     [rbx+18h], rsi^^^mov     [rbx+8], rsi^^^mov     [rbx+10h], rsi^^^jmp     loc_42B19F^^^sub     r12, rsi^^^jz      loc_42B23F^^^mov     rdx, r12^^^mov     rdi, rbx^^^call    new_do_write^^^cmp     r12, rax^^^setnz   dl^^^jmp     loc_42B232^^^mov     r12, [rbx+10h]^^^mov     rdi, rbx^^^sub     r12, rsi^^^call    _IO_free_backup_area^^^mov     rsi, [rbx+18h]^^^mov     rax, rsi^^^sub     rax, [rbx+38h]^^^cmp     r12, rax^^^cmovbe  rax, r12^^^sub     rsi, rax^^^mov     eax, [rbx]^^^mov     [rbx+18h], rsi^^^mov     [rbx+8], rsi^^^jmp     loc_42B1A8^^^
__register_atfork$$$push    r12^^^xor     eax, eax^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^mov     esi, 1^^^sub     rsp, 10h^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_410B21^^^lock cmpxchg cs:__fork_lock, esi^^^jnz     _L_lock_80^^^jmp     short loc_410B2E^^^cmpxchg cs:__fork_lock, esi^^^jnz     _L_lock_80^^^mov     eax, offset fork_handler_pool^^^lea     rsi, [rax+30h]^^^xor     ecx, ecx^^^jmp     short loc_410B50^^^add     ecx, 1^^^add     rsi, 30h^^^cmp     ecx, 30h^^^jz      loc_410BE8^^^mov     edi, [rsi]^^^test    edi, edi^^^jnz     short loc_410B40^^^lea     rcx, [rcx+rcx*2]^^^shl     rcx, 4^^^lea     rsi, [rax+rcx+8]^^^mov     dword ptr [rsi+28h], 1^^^mov     dword ptr [rsi+2Ch], 0^^^mov     [rsi+8], rbp^^^mov     [rsi+10h], rbx^^^mov     [rsi+18h], rdx^^^mov     [rsi+20h], r12^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, cs:__fork_handlers^^^mov     [rsi], rdx^^^mov     rax, rdx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_410BA1^^^lock^^^cmpxchg cs:__fork_handlers, rsi^^^cmp     rdx, rax^^^jnz     short loc_410B88^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_410BC6^^^lock dec cs:__fork_lock^^^jnz     _L_unlock_167^^^jmp     short loc_410BD2^^^dec     cs:__fork_lock^^^jnz     _L_unlock_167^^^cmp     rsi, 1^^^sbb     eax, eax^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^and     eax, 0Ch^^^pop     r12^^^retn^^^mov     rax, [rax]^^^test    rax, rax^^^jnz     loc_410B33^^^mov     esi, 908h^^^mov     edi, 1^^^mov     [rsp+28h+var_20], rdx^^^call    calloc^^^xor     esi, esi^^^test    rax, rax^^^mov     rdx, [rsp+28h+var_20]^^^jz      short loc_410BAE^^^mov     rcx, cs:fork_handler_pool^^^mov     cs:fork_handler_pool, rax^^^mov     [rax], rcx^^^mov     ecx, 2Fh^^^jmp     loc_410B56^^^
compute_change$$$cmp     esi, 0FFFFFFFFh^^^push    rbx^^^jz      loc_446C30^^^cmp     [rdi+28h], esi^^^jz      short loc_446C15^^^xor     ecx, ecx^^^cmp     esi, 7B2h^^^jle     short loc_446BF1^^^lea     eax, [rsi-1]^^^imul    r8d, esi, 16Dh^^^mov     edx, eax^^^sar     edx, 2^^^lea     r8d, [r8+rdx-0AFAB6h]^^^mov     edx, 51EB851Fh^^^imul    edx^^^mov     eax, edx^^^sar     edx, 7^^^sar     eax, 5^^^sub     r8d, eax^^^lea     ecx, [r8+rdx+0Fh]^^^movsxd  rcx, ecx^^^imul    rcx, 15180h^^^mov     eax, [rdi+8]^^^cmp     eax, 1^^^jz      short loc_446C3A^^^jb      short loc_446C20^^^cmp     eax, 2^^^jz      loc_446C98^^^sub     rcx, [rdi+18h]^^^mov     eax, [rdi+14h]^^^mov     [rdi+28h], esi^^^add     rcx, rax^^^mov     [rdi+20h], rcx^^^pop     rbx^^^retn^^^movzx   eax, word ptr [rdi+10h]^^^imul    rax, 15180h^^^add     rcx, rax^^^jmp     short loc_446C04^^^mov     eax, [rdi+8]^^^xor     ecx, ecx^^^cmp     eax, 1^^^jnz     short loc_446BF9^^^movzx   eax, word ptr [rdi+10h]^^^movzx   edx, ax^^^sub     rdx, 1^^^imul    rdx, 15180h^^^add     rcx, rdx^^^cmp     ax, 3Bh^^^jbe     short loc_446C04^^^test    sil, 3^^^jnz     short loc_446C04^^^mov     eax, esi^^^mov     edx, 51EB851Fh^^^mov     r8d, esi^^^imul    edx^^^sar     r8d, 1Fh^^^mov     r9d, 64h^^^mov     eax, edx^^^sar     eax, 5^^^sub     eax, r8d^^^imul    eax, r9d^^^cmp     esi, eax^^^jz      loc_446E50^^^add     rcx, 15180h^^^jmp     loc_446C04^^^xor     eax, eax^^^test    sil, 3^^^jnz     short loc_446CE7^^^mov     eax, esi^^^mov     edx, 51EB851Fh^^^mov     r8d, esi^^^imul    edx^^^sar     r8d, 1Fh^^^mov     eax, edx^^^sar     eax, 5^^^sub     eax, r8d^^^mov     r9d, eax^^^mov     eax, 64h^^^imul    r9d, eax^^^mov     eax, 0Dh^^^cmp     esi, r9d^^^jnz     short loc_446CE7^^^sar     edx, 7^^^mov     eax, esi^^^sub     edx, r8d^^^imul    edx, 190h^^^sub     eax, edx^^^cmp     eax, 1^^^sbb     rax, rax^^^and     eax, 0Dh^^^movzx   r8d, word ptr [rdi+0Ch]^^^mov     edx, 2AAAAAABh^^^mov     r9d, esi^^^movzx   ebx, r8w^^^movzx   r10d, r8w^^^add     rbx, rax^^^add     r10d, 9^^^movzx   r11d, ds:word_4B217E[rbx+rbx]^^^movzx   eax, r11w^^^imul    rax, 15180h^^^add     rcx, rax^^^mov     eax, r10d^^^imul    edx^^^shr     edx, 1^^^lea     edx, [rdx+rdx*2]^^^shl     edx, 2^^^sub     r10d, edx^^^add     r10d, 1^^^cmp     r8w, 3^^^mov     r8d, 51EB851Fh^^^sbb     r9d, 0^^^mov     eax, r9d^^^imul    r8d^^^mov     eax, r9d^^^sar     eax, 1Fh^^^mov     r8d, edx^^^mov     edx, 64h^^^sar     r8d, 5^^^sub     r8d, eax^^^mov     eax, r8d^^^imul    eax, edx^^^mov     edx, 66666667h^^^sub     r9d, eax^^^mov     eax, 1Ah^^^imul    r10d, eax^^^sub     r10d, 2^^^mov     eax, r10d^^^sar     r10d, 1Fh^^^imul    edx^^^lea     eax, [r9+3]^^^sar     edx, 2^^^sub     edx, r10d^^^test    r9d, r9d^^^lea     edx, [r9+rdx+1]^^^cmovs   r9d, eax^^^lea     eax, [r8+3]^^^sar     r9d, 2^^^add     r9d, edx^^^test    r8d, r8d^^^mov     edx, 92492493h^^^cmovns  eax, r8d^^^neg     r8d^^^sar     eax, 2^^^add     eax, r9d^^^movzx   r9d, word ptr [rdi+10h]^^^lea     r8d, [rax+r8*2]^^^mov     eax, r8d^^^imul    edx^^^mov     eax, r8d^^^sar     eax, 1Fh^^^add     edx, r8d^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^mov     edx, r8d^^^sub     edx, eax^^^lea     eax, [rdx+7]^^^test    edx, edx^^^cmovs   edx, eax^^^sub     r9d, edx^^^movzx   edx, word ptr [rdi+0Eh]^^^lea     eax, [r9+7]^^^test    r9d, r9d^^^cmovs   r9d, eax^^^cmp     edx, 1^^^mov     eax, r9d^^^jbe     short loc_446E3F^^^movzx   r8d, ds:__mon_yday[rbx+rbx]^^^movzx   r11d, r11w^^^add     eax, 7^^^sub     r8d, r11d^^^cmp     r8d, eax^^^jle     short loc_446E69^^^lea     r10d, ds:0[rdx*8]^^^sub     r10d, edx^^^lea     r9d, [r9+r10-7]^^^jmp     short loc_446E3A^^^lea     edx, [rax+7]^^^cmp     edx, r8d^^^jge     short loc_446E3F^^^mov     eax, edx^^^cmp     eax, r9d^^^jnz     short loc_446E30^^^cdqe^^^imul    rax, 15180h^^^add     rcx, rax^^^jmp     loc_446C04^^^sar     edx, 7^^^sub     edx, r8d^^^imul    edx, 190h^^^cmp     esi, edx^^^jnz     loc_446C04^^^jmp     loc_446C85^^^mov     eax, r9d^^^jmp     short loc_446E3F^^^
sub_41F37C$$$mov     dword ptr [rbp-610h], 8^^^jmp     loc_41E64E^^^
_L_lock_2170$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_447CA7^^^
_IO_seekmark$$$mov     rdx, [rsi+8]^^^mov     eax, 0FFFFFFFFh^^^cmp     rdx, rdi^^^jnz     short locret_42CFA4^^^mov     eax, [rsi+10h]^^^mov     ecx, [rdx]^^^test    eax, eax^^^js      short loc_42CF90^^^test    ch, 1^^^jz      short loc_42CFB0^^^and     ch, 0FEh^^^mov     rsi, [rdx+58h]^^^cdqe^^^mov     [rdx], ecx^^^mov     rcx, [rdx+10h]^^^mov     [rdx+10h], rsi^^^mov     rsi, [rdx+18h]^^^mov     [rdx+58h], rcx^^^mov     rcx, [rdx+48h]^^^mov     [rdx+48h], rsi^^^mov     [rdx+18h], rcx^^^add     rcx, rax^^^xor     eax, eax^^^mov     [rdx+8], rcx^^^retn^^^test    ch, 1^^^jz      short loc_42CFC0^^^mov     rcx, [rdx+10h]^^^cdqe^^^add     rcx, rax^^^xor     eax, eax^^^mov     [rdx+8], rcx^^^rep retn^^^mov     rcx, [rdx+18h]^^^cdqe^^^add     rcx, rax^^^xor     eax, eax^^^mov     [rdx+8], rcx^^^retn^^^mov     rsi, [rdx+10h]^^^or      ch, 1^^^mov     rdi, [rdx+48h]^^^mov     [rdx], ecx^^^mov     rcx, [rdx+58h]^^^mov     [rdx+58h], rsi^^^mov     rsi, [rdx+18h]^^^mov     [rdx+10h], rcx^^^mov     [rdx+18h], rdi^^^mov     [rdx+48h], rsi^^^jmp     short loc_42CF99^^^
__libc_init_first$$$mov     eax, 0^^^mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^test    rax, rax^^^mov     ebx, edi^^^mov     rbp, rsi^^^mov     r12, rdx^^^jz      short loc_411C4F^^^mov     eax, cs:0^^^test    eax, eax^^^jz      short loc_411CB0^^^movzx   edi, cs:__fpu_control^^^mov     cs:__libc_multiple_libcs, 0^^^call    __setfpucw^^^mov     cs:__libc_argc, ebx^^^mov     cs:__libc_argv, rbp^^^mov     cs:environ, r12^^^call    __libc_init_secure^^^call    _dl_non_dynamic_init^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     edi, ebx^^^call    __init_misc^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^jmp     __ctype_init^^^mov     cs:__libc_multiple_libcs, 1^^^jmp     short loc_411C65^^^
_L_lock_854$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_402D1E^^^
_L_unlock_3203$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42CC05^^^
save_for_wbackup.isra.0$$$push    r15^^^push    r14^^^mov     r14, rdi^^^push    r13^^^mov     r13, rdx^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^sub     rsp, 28h^^^mov     r8, [rsi]^^^mov     rax, [rdi]^^^mov     r15, [r8+10h]^^^sub     rbp, r15^^^sar     rbp, 2^^^test    rax, rax^^^jz      loc_426B20^^^mov     rbx, rbp^^^nop     word ptr [rax+rax+00000000h]^^^movsxd  rdx, dword ptr [rax+10h]^^^mov     rax, [rax]^^^cmp     rbx, rdx^^^cmovg   rbx, rdx^^^test    rax, rax^^^jnz     short loc_426990^^^mov     rsi, [r8+50h]^^^mov     rdi, [r8+40h]^^^mov     rdx, rbp^^^sub     rdx, rbx^^^mov     rcx, rsi^^^sub     rcx, rdi^^^sar     rcx, 2^^^cmp     rdx, rcx^^^ja      short loc_426A20^^^sub     rcx, rdx^^^test    rbx, rbx^^^lea     rbp, ds:0[rcx*4]^^^js      loc_426AD1^^^test    rdx, rdx^^^jnz     loc_426AB8^^^add     rdi, rbp^^^mov     [r8+48h], rdi^^^mov     rax, [r12]^^^mov     rdx, [r14]^^^mov     rcx, [rax+10h]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_426A0E^^^sub     r13, rcx^^^shr     r13, 2^^^nop     dword ptr [rax]^^^sub     [rdx+10h], r13d^^^mov     rdx, [rdx]^^^test    rdx, rdx^^^jnz     short loc_426A00^^^xor     eax, eax^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     rax, ds:190h[rdx*4]^^^mov     [rsp+58h+var_48], rdx^^^mov     [rsp+58h+var_50], rsi^^^mov     rdi, rax^^^mov     [rsp+58h+var_40], rax^^^call    malloc^^^test    rax, rax^^^mov     rdx, [rsp+58h+var_48]^^^mov     rsi, [rsp+58h+var_50]^^^jz      loc_426B6F^^^test    rbx, rbx^^^js      loc_426B3C^^^lea     rsi, [r15+rbx*4]^^^lea     rdi, [rax+190h]^^^mov     [rsp+58h+var_48], rax^^^call    wmemcpy^^^mov     rcx, [rsp+58h+var_48]^^^mov     rax, [r12]^^^mov     ebp, 190h^^^mov     rdi, [rax+40h]^^^mov     [rsp+58h+var_48], rcx^^^call    free^^^mov     rax, [r12]^^^mov     rcx, [rsp+58h+var_48]^^^mov     [rax+40h], rcx^^^add     rcx, [rsp+58h+var_40]^^^mov     rax, [r12]^^^mov     [rax+50h], rcx^^^mov     r8, [r12]^^^mov     rdi, [r8+40h]^^^jmp     loc_4269DD^^^lea     rsi, [r15+rbx*4]^^^add     rdi, rbp^^^call    wmemcpy^^^mov     r8, [r12]^^^mov     rdi, [r8+40h]^^^jmp     loc_4269DD^^^lea     rsi, [rsi+rbx*4]^^^mov     rdx, rbx^^^add     rdi, rbp^^^neg     rdx^^^mov     [rsp+58h+var_48], rcx^^^call    wmemmove^^^mov     rax, [r12]^^^mov     rcx, [rsp+58h+var_48]^^^mov     rdx, r13^^^mov     rsi, [rax+10h]^^^sub     rcx, rbx^^^lea     rdi, ds:0[rcx*4]^^^add     rdi, [rax+40h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    wmemcpy^^^mov     r8, [r12]^^^mov     rdi, [r8+40h]^^^jmp     loc_4269DD^^^mov     rsi, [r8+50h]^^^mov     rdi, [r8+40h]^^^mov     rbx, rbp^^^xor     edx, edx^^^mov     rcx, rsi^^^sub     rcx, rdi^^^sar     rcx, 2^^^jmp     loc_4269C0^^^lea     rsi, [rsi+rbx*4]^^^lea     rdi, [rax+190h]^^^mov     rdx, rbx^^^neg     rdx^^^mov     [rsp+58h+var_48], rax^^^call    wmempcpy^^^mov     rdx, rbp^^^mov     rsi, r15^^^mov     rdi, rax^^^call    wmempcpy^^^mov     rcx, [rsp+58h+var_48]^^^jmp     loc_426A75^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_426A0E^^^
__strncasecmp_avx$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
_dl_check_all_versions$$$push    r13^^^mov     r13d, edx^^^push    r12^^^mov     r12d, esi^^^push    rbp^^^xor     ebp, ebp^^^push    rbx^^^sub     rsp, 8^^^test    rdi, rdi^^^jz      short loc_48FF87^^^mov     rbx, rdi^^^jmp     short loc_48FF5B^^^mov     rbx, [rbx+18h]^^^or      ebp, eax^^^test    rbx, rbx^^^jz      short loc_48FF87^^^xor     eax, eax^^^test    byte ptr [rbx+315h], 2^^^jnz     short loc_48FF50^^^mov     rdi, rbx^^^mov     edx, r13d^^^mov     esi, r12d^^^call    _dl_check_map_versions^^^mov     rbx, [rbx+18h]^^^test    eax, eax^^^setnz   al^^^movzx   eax, al^^^or      ebp, eax^^^test    rbx, rbx^^^jnz     short loc_48FF5B^^^add     rsp, 8^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^
sub_41C100$$$mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      loc_41F548^^^movsx   eax, dil^^^mov     dword ptr [rbp-590h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step3b_jumps_13263[rax*8]^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-590h], 1^^^jmp     loc_41B826^^^
__gconv_transliterate$$$push    r15^^^mov     r11, r9^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 98h^^^cmp     qword ptr [rdi], 0^^^mov     rax, [r8]^^^mov     rdx, [rdi+28h]^^^mov     [rsp+0C8h+var_B0], rdi^^^mov     [rsp+0C8h+var_A0], rsi^^^mov     [rsp+0C8h+var_80], r8^^^mov     [rsp+0C8h+var_98], rax^^^mov     [rsp+0C8h+var_88], rdx^^^jz      short loc_45FBEC^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     [rsp+0C8h+var_88], rdx^^^mov     rcx, 0FFFFFFFFFFFFFFA8h^^^mov     r8, fs:[rcx]^^^mov     rsi, [r8]^^^mov     eax, [rsi+228h]^^^test    rax, rax^^^jz      loc_45FDF8^^^mov     rdx, [rsi+230h]^^^mov     rcx, [rsi+240h]^^^mov     r14, [rsi+238h]^^^mov     r15, [rsi+248h]^^^mov     [rsp+0C8h+var_90], rax^^^mov     [rsp+0C8h+var_A8], 0^^^mov     [rsp+0C8h+var_78], rdx^^^mov     rdx, [rsp+0C8h+var_98]^^^mov     [rsp+0C8h+var_70], rcx^^^add     rdx, 4^^^cmp     r11, rdx^^^jb      loc_45FEA0^^^nop^^^mov     r10, [rsp+0C8h+var_90]^^^add     r10, [rsp+0C8h+var_A8]^^^xor     ebp, ebp^^^mov     rax, [rsp+0C8h+var_78]^^^shr     r10, 1^^^mov     ecx, [rax+r10*4]^^^mov     eax, ecx^^^mov     edx, [r14+rax*4]^^^mov     rax, [rsp+0C8h+var_98]^^^nop     dword ptr [rax+rax+00h]^^^cmp     [rax], edx^^^mov     rsi, rax^^^jnz     short loc_45FCB6^^^add     ebp, 1^^^lea     edx, [rbp+rcx+0]^^^lea     r12, [r14+rdx*4]^^^mov     edx, [r12]^^^test    edx, edx^^^jz      short loc_45FCC8^^^add     rax, 4^^^cmp     r11, rax^^^ja      short loc_45FC78^^^mov     r13d, 7^^^add     rsp, 98h^^^mov     eax, r13d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^add     ecx, ebp^^^test    ebp, ebp^^^lea     r12, [r14+rcx*4]^^^jz      loc_45FDBF^^^test    edx, edx^^^jnz     short loc_45FC9B^^^mov     rdx, [rsp+0C8h+var_70]^^^mov     [rsp+0C8h+var_68], r14^^^mov     r14d, ebp^^^mov     [rsp+0C8h+var_58], r12^^^mov     rbp, [rsp+0C8h+arg_0]^^^mov     r12, [rsp+0C8h+var_88]^^^mov     [rsp+0C8h+var_60], r10^^^mov     r13d, [rdx+r10*4]^^^mov     [rsp+0C8h+var_50], r11^^^mov     eax, r13d^^^mov     edx, [r15+rax*4]^^^nop     dword ptr [rax+00h]^^^lea     rsi, [r15+rax*4]^^^xor     ebx, ebx^^^test    edx, edx^^^mov     rcx, rsi^^^jz      short loc_45FD2A^^^lea     rax, [r15+rax*4+4]^^^nop     word ptr [rax+rax+00h]^^^mov     rcx, rax^^^add     rax, 4^^^add     rbx, 1^^^mov     edx, [rax-4]^^^test    edx, edx^^^jnz     short loc_45FD18^^^mov     rax, [rbp+0]^^^mov     rdi, r12^^^mov     [rsp+0C8h+var_40], rsi^^^mov     [rsp+0C8h+var_B8], rcx^^^mov     [rsp+0C8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^xor     r9d, r9d^^^mov     [rsp+0C8h+var_C0], 0^^^mov     [rsp+0C8h+var_C8], 0^^^lea     r8, [rsp+0C8h+var_48]^^^mov     rcx, [rsp+0C8h+var_B8]^^^lea     rdx, [rsp+0C8h+var_40]^^^mov     rsi, [rsp+0C8h+var_A0]^^^mov     rdi, [rsp+0C8h+var_B0]^^^call    r12^^^cmp     eax, 6^^^jnz     loc_45FED3^^^lea     r13d, [r13+rbx+1]^^^mov     eax, r13d^^^mov     edx, [r15+rax*4]^^^test    edx, edx^^^jnz     loc_45FD00^^^mov     rcx, [rsp+0C8h+var_98]^^^mov     ebp, r14d^^^mov     r10, [rsp+0C8h+var_60]^^^movsxd  rbp, ebp^^^mov     r14, [rsp+0C8h+var_68]^^^mov     r12, [rsp+0C8h+var_58]^^^mov     r11, [rsp+0C8h+var_50]^^^lea     rsi, [rcx+rbp*4]^^^cmp     r11, rsi^^^jbe     loc_45FEC0^^^mov     eax, [rsi]^^^cmp     [r12], eax^^^jb      loc_45FEC0^^^mov     [rsp+0C8h+var_90], r10^^^mov     rdx, r10^^^cmp     [rsp+0C8h+var_A8], rdx^^^jb      loc_45FC50^^^mov     rcx, 0FFFFFFFFFFFFFFA8h^^^mov     r8, fs:[rcx]^^^mov     rsi, [r8]^^^nop     dword ptr [rax]^^^mov     eax, [rsi+260h]^^^test    eax, eax^^^jz      short loc_45FE5F^^^mov     rdx, [rsp+0C8h+var_80]^^^mov     rcx, [rsi+268h]^^^mov     r10, [rdx]^^^mov     rdx, [rsp+0C8h+var_98]^^^add     rdx, 4^^^mov     edi, [r10]^^^cmp     r11, rdx^^^jb      short loc_45FEA0^^^test    eax, eax^^^jle     short loc_45FE5F^^^sub     eax, 1^^^lea     rax, [rax+rax*2]^^^lea     r9, [rcx+rax*4+0Ch]^^^jmp     short loc_45FE59^^^cmp     edi, [rcx+4]^^^ja      short loc_45FE50^^^mov     edx, edi^^^sub     edx, eax^^^mov     eax, edx^^^xor     edx, edx^^^div     dword ptr [rcx+8]^^^test    edx, edx^^^jz      loc_45FFB4^^^add     rcx, 0Ch^^^cmp     rcx, r9^^^jz      short loc_45FE5F^^^mov     eax, [rcx]^^^cmp     edi, eax^^^jnb     short loc_45FE38^^^mov     eax, [rsi+250h]^^^mov     r13d, 6^^^test    eax, eax^^^jz      loc_45FCA1^^^mov     rbx, [rsi+258h]^^^mov     [rsp+0C8h+var_40], rbx^^^mov     rax, [r8]^^^mov     ebp, [rax+250h]^^^mov     rax, [rsp+0C8h+var_98]^^^add     rax, 4^^^cmp     r11, rax^^^jnb     short loc_45FF00^^^nop     dword ptr [rax+00000000h]^^^xor     r13d, r13d^^^cmp     [rsp+0C8h+var_98], r11^^^setnz   r13b^^^lea     r13d, [r13+r13*2+4]^^^jmp     loc_45FCA1^^^add     r10, 1^^^mov     rdx, [rsp+0C8h+var_90]^^^mov     [rsp+0C8h+var_A8], r10^^^jmp     loc_45FDDC^^^cmp     eax, 4^^^mov     r13d, eax^^^jz      loc_45FF91^^^cmp     eax, 5^^^jz      loc_45FCA1^^^mov     rax, [rsp+0C8h+var_48]^^^mov     rdx, [rsp+0C8h+arg_0]^^^mov     [rdx], rax^^^jmp     loc_45FCA1^^^mov     rdx, [rsp+0C8h+arg_0]^^^mov     rdi, [rsp+0C8h+var_88]^^^mov     rax, [rdx]^^^mov     [rsp+0C8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^xor     r9d, r9d^^^lea     rcx, [rbx+rbp*4]^^^mov     [rsp+0C8h+var_C0], 0^^^mov     [rsp+0C8h+var_C8], 0^^^lea     r8, [rsp+0C8h+var_48]^^^lea     rdx, [rsp+0C8h+var_40]^^^mov     rsi, [rsp+0C8h+var_A0]^^^mov     rdi, [rsp+0C8h+var_B0]^^^call    [rsp+0C8h+var_88]^^^cmp     eax, 6^^^jz      loc_45FCA1^^^cmp     eax, 4^^^jnz     short loc_45FF76^^^mov     rax, [rsp+0C8h+var_80]^^^mov     rcx, [rsp+0C8h+arg_8]^^^add     qword ptr [rcx], 1^^^add     qword ptr [rax], 4^^^xor     eax, eax^^^mov     rdx, [rsp+0C8h+var_48]^^^mov     rcx, [rsp+0C8h+arg_0]^^^mov     r13d, eax^^^mov     [rcx], rdx^^^jmp     loc_45FCA1^^^mov     rcx, [rsp+0C8h+var_80]^^^movsxd  rax, r14d^^^xor     r13b, r13b^^^shl     rax, 2^^^add     [rcx], rax^^^mov     rax, [rsp+0C8h+arg_8]^^^add     qword ptr [rax], 1^^^jmp     loc_45FEE8^^^mov     rcx, [rsp+0C8h+var_80]^^^mov     rax, [rsp+0C8h+arg_8]^^^add     r10, 4^^^xor     r13d, r13d^^^mov     [rcx], r10^^^add     qword ptr [rax], 1^^^jmp     loc_45FCA1^^^
__gconv_transform_internal_ucs4le$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rsi^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdx^^^lea     rdx, [rsi+38h]^^^sub     rsp, 78h^^^test    byte ptr [rsi+10h], 1^^^mov     [rsp+0A8h+var_78], rcx^^^mov     [rsp+0A8h+var_68], r8^^^mov     [rsp+0A8h+var_50], r9^^^mov     ebp, [rsp+0A8h+arg_0]^^^mov     [rsp+0A8h+var_60], rax^^^mov     [rsp+0A8h+var_58], rdx^^^mov     [rsp+0A8h+var_70], 0^^^jnz     short loc_45A9C0^^^cmp     qword ptr [rdi+68h], 0^^^mov     rax, [rdi+90h]^^^mov     [rsp+0A8h+var_70], rax^^^jz      short loc_45A9C0^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0A8h+var_70], rax^^^test    ebp, ebp^^^jnz     loc_45AC6A^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45AC5D^^^mov     r13, [r15]^^^mov     r8d, [rsp+0A8h+arg_8]^^^mov     rdx, [r15+8]^^^test    r8d, r8d^^^mov     [rsp+0A8h+var_80], rdx^^^jz      short loc_45AA00^^^mov     rcx, [r15+20h]^^^mov     esi, [rcx]^^^test    sil, 7^^^jnz     loc_45ABC1^^^nop     dword ptr [rax]^^^mov     r12, [rbx]^^^mov     rdx, [rsp+0A8h+var_80]^^^mov     rdi, r13^^^mov     rax, [rsp+0A8h+var_78]^^^sub     rdx, r13^^^mov     rsi, r12^^^sub     rax, r12^^^cmp     rdx, rax^^^cmovg   rdx, rax^^^lea     rax, [rdx+3]^^^test    rdx, rdx^^^cmovs   rdx, rax^^^and     rdx, 0FFFFFFFFFFFFFFFCh^^^lea     rax, [r12+rdx]^^^mov     [rbx], rax^^^call    mempcpy^^^mov     r14, rax^^^mov     rax, [rsp+0A8h+var_78]^^^cmp     rax, [rbx]^^^mov     [rsp+0A8h+var_98], 0^^^mov     [rsp+0A8h+var_84], 4^^^jz      short loc_45AA78^^^lea     rax, [r14+4]^^^cmp     [rsp+0A8h+var_80], rax^^^sbb     edx, edx^^^add     edx, 1^^^cmp     [rsp+0A8h+var_80], rax^^^mov     [rsp+0A8h+var_98], dl^^^sbb     eax, eax^^^and     eax, 0FFFFFFFEh^^^add     eax, 7^^^mov     [rsp+0A8h+var_84], eax^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45AC50^^^mov     rbp, [r15+30h]^^^test    rbp, rbp^^^jz      short loc_45AABA^^^nop     dword ptr [rax]^^^mov     rdi, [rbp+8]^^^test    rdi, rdi^^^jz      short loc_45AAB1^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rbp+18h]^^^mov     r8, r14^^^mov     rcx, r13^^^mov     rdx, [rbx]^^^mov     rsi, r12^^^call    qword ptr [rbp+8]^^^mov     rbp, [rbp+20h]^^^test    rbp, rbp^^^jnz     short loc_45AA90^^^add     dword ptr [r15+14h], 1^^^test    byte ptr [r15+10h], 1^^^jnz     loc_45AD19^^^cmp     r13, r14^^^jnb     short loc_45AB3F^^^mov     rax, [r15]^^^mov     rdi, [rsp+0A8h+var_70]^^^mov     [rsp+0A8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0A8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0A8h+var_A8], 0^^^mov     r9, [rsp+0A8h+var_50]^^^mov     rcx, r14^^^lea     rdx, [rsp+0A8h+var_48]^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_60]^^^mov     [rsp+0A8h+var_A0], eax^^^call    [rsp+0A8h+var_70]^^^cmp     eax, 4^^^jz      short loc_45AB38^^^mov     rdx, [rsp+0A8h+var_48]^^^cmp     rdx, r14^^^jnz     loc_45AD0E^^^test    eax, eax^^^jnz     loc_45ACFD^^^mov     r13, [r15]^^^jmp     loc_45AA00^^^cmp     [rsp+0A8h+var_84], 5^^^jz      short loc_45AB2C^^^cmp     [rsp+0A8h+var_98], 0^^^jz      short loc_45ABAE^^^mov     edi, [rsp+0A8h+arg_8]^^^test    edi, edi^^^jz      short loc_45ABAE^^^mov     rdi, [rbx]^^^mov     rax, [rsp+0A8h+var_78]^^^sub     rax, rdi^^^cmp     rax, 3^^^jg      loc_45ACCB^^^xor     edx, edx^^^cmp     [rsp+0A8h+var_78], rdi^^^mov     rax, rdi^^^mov     r8, [rsp+0A8h+var_78]^^^jbe     loc_45AC35^^^movzx   esi, byte ptr [rax]^^^mov     rcx, [r15+20h]^^^add     rax, 1^^^mov     [rcx+rdx+4], sil^^^add     rdx, 1^^^cmp     rax, r8^^^mov     [rbx], rax^^^jnz     short loc_45AB7B^^^sub     eax, edi^^^mov     rcx, [r15+20h]^^^mov     [rsp+0A8h+var_84], 7^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     eax, [rsp+0A8h+var_84]^^^add     rsp, 78h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45AD21^^^mov     rax, rsi^^^mov     rdx, [rbx]^^^and     eax, 7^^^cmp     [rsp+0A8h+var_78], rdx^^^jbe     short loc_45AC03^^^cmp     rax, 3^^^ja      short loc_45AC03^^^movzx   edi, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rcx+rax+4], dil^^^add     rax, 1^^^mov     [rbx], rdx^^^cmp     rax, 3^^^ja      short loc_45AC03^^^cmp     [rsp+0A8h+var_78], rdx^^^ja      short loc_45ABE3^^^cmp     rax, 3^^^jbe     short loc_45AC3C^^^movzx   eax, byte ptr [rcx+4]^^^mov     [r13+0], al^^^movzx   eax, byte ptr [rcx+5]^^^mov     [r13+1], al^^^movzx   eax, byte ptr [rcx+6]^^^mov     [r13+2], al^^^movzx   eax, byte ptr [rcx+7]^^^mov     [r13+3], al^^^add     r13, 4^^^and     dword ptr [rcx], 0FFFFFFF8h^^^jmp     loc_45AA00^^^xor     eax, eax^^^jmp     loc_45AB99^^^and     esi, 0FFFFFFF8h^^^mov     [rsp+0A8h+var_84], 7^^^or      esi, eax^^^mov     [rcx], esi^^^jmp     loc_45ABAE^^^mov     rdx, [rsp+0A8h+var_68]^^^mov     [rdx], r14^^^jmp     loc_45ABAE^^^mov     rax, [rsp+0A8h+var_68]^^^mov     r13, [rax]^^^jmp     loc_45A9D7^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     short loc_45ACE4^^^mov     rax, [r15+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [r15+10h], 1^^^mov     [rsp+0A8h+var_84], 0^^^jnz     loc_45ABAE^^^mov     rdi, [rsp+0A8h+var_70]^^^call    _dl_mcount_wrapper_check^^^mov     edx, [rsp+0A8h+arg_8]^^^mov     [rsp+0A8h+var_A8], ebp^^^xor     r8d, r8d^^^mov     r9, [rsp+0A8h+var_50]^^^xor     ecx, ecx^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_60]^^^mov     [rsp+0A8h+var_A0], edx^^^xor     edx, edx^^^call    [rsp+0A8h+var_70]^^^mov     [rsp+0A8h+var_84], eax^^^jmp     loc_45ABAE^^^mov     ecx, offset __PRETTY_FUNCTION___11796^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11796^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^cmp     eax, 7^^^mov     [rsp+0A8h+var_84], eax^^^setz    [rsp+0A8h+var_98]^^^jmp     loc_45AB3F^^^sub     rdx, r14^^^add     [rbx], rdx^^^jmp     loc_45AB24^^^mov     [r15], r14^^^jmp     loc_45AB3F^^^mov     ecx, offset __PRETTY_FUNCTION___11796^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^
__mpn_mul_1$$$push    rbx^^^xor     r10, r10^^^mov     rax, [rsi]^^^mov     rbx, rdx^^^mul     rcx^^^mov     r11, rbx^^^add     rax, r10^^^adc     rdx, 0^^^and     ebx, 3^^^jz      short loc_4637FE^^^cmp     ebx, 2^^^jz      short loc_46382A^^^jg      short loc_463815^^^dec     r11^^^jnz     short loc_4637E0^^^mov     [rdi], rax^^^jmp     loc_4638C4^^^lea     rsi, [rsi+r11*8+8]^^^lea     rdi, [rdi+r11*8-8]^^^neg     r11^^^xor     r10, r10^^^xor     ebx, ebx^^^mov     r9, rax^^^mov     rax, [rsi+r11*8]^^^mov     r8, rdx^^^jmp     short loc_463864^^^lea     rsi, [rsi+r11*8]^^^lea     rdi, [rdi+r11*8-10h]^^^neg     r11^^^xor     r10, r10^^^mov     r8, rax^^^mov     rbx, rdx^^^jmp     short loc_463872^^^lea     rsi, [rsi+r11*8-8]^^^lea     rdi, [rdi+r11*8-18h]^^^neg     r11^^^mov     rbx, rax^^^mov     r10, rdx^^^jmp     short loc_463885^^^lea     rsi, [rsi+r11*8-10h]^^^lea     rdi, [rdi+r11*8-20h]^^^neg     r11^^^xor     r8, r8^^^xor     ebx, ebx^^^mov     r10, rax^^^mov     rax, [rsi+r11*8+18h]^^^mov     r9, rdx^^^jmp     short loc_4638A9^^^mov     [rdi+r11*8], r10^^^add     r9, rax^^^mov     rax, [rsi+r11*8]^^^adc     r8, rdx^^^mov     r10d, 0^^^mul     rcx^^^mov     [rdi+r11*8+8], r9^^^add     r8, rax^^^adc     rbx, rdx^^^mov     rax, [rsi+r11*8+8]^^^mul     rcx^^^mov     [rdi+r11*8+10h], r8^^^add     rbx, rax^^^adc     r10, rdx^^^mov     rax, [rsi+r11*8+10h]^^^mul     rcx^^^mov     [rdi+r11*8+18h], rbx^^^mov     r8d, 0^^^mov     rbx, r8^^^add     r10, rax^^^mov     rax, [rsi+r11*8+18h]^^^mov     r9, r8^^^adc     r9, rdx^^^mul     rcx^^^add     r11, 4^^^js      short loc_463850^^^mov     [rdi+r11*8], r10^^^add     r9, rax^^^adc     rdx, r8^^^mov     [rdi+r11*8+8], r9^^^add     rdx, r8^^^mov     rax, rdx^^^pop     rbx^^^retn^^^
__stpcpy_ssse3$$$mov     rcx, rsi^^^mov     rdx, rdi^^^cmp     byte ptr [rcx], 0^^^jz      loc_443AF0^^^cmp     byte ptr [rcx+1], 0^^^jz      loc_443B00^^^cmp     byte ptr [rcx+2], 0^^^jz      loc_443B10^^^cmp     byte ptr [rcx+3], 0^^^jz      loc_443B30^^^cmp     byte ptr [rcx+4], 0^^^jz      loc_443B40^^^cmp     byte ptr [rcx+5], 0^^^jz      loc_443B50^^^cmp     byte ptr [rcx+6], 0^^^jz      loc_443B70^^^cmp     byte ptr [rcx+7], 0^^^jz      loc_443A80^^^cmp     byte ptr [rcx+8], 0^^^jz      loc_443B80^^^cmp     byte ptr [rcx+9], 0^^^jz      loc_443BA0^^^cmp     byte ptr [rcx+0Ah], 0^^^jz      loc_443BC0^^^cmp     byte ptr [rcx+0Bh], 0^^^jz      loc_443BE0^^^cmp     byte ptr [rcx+0Ch], 0^^^jz      loc_443C00^^^cmp     byte ptr [rcx+0Dh], 0^^^jz      loc_443C20^^^cmp     byte ptr [rcx+0Eh], 0^^^jz      loc_443C40^^^cmp     byte ptr [rcx+0Fh], 0^^^jz      loc_443AD0^^^lea     rsi, [rcx+10h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm0, xmm0^^^mov     r9, [rcx]^^^mov     [rdx], r9^^^pcmpeqb xmm0, xmmword ptr [rsi]^^^mov     r9, [rcx+8]^^^mov     [rdx+8], r9^^^pmovmskb eax, xmm0^^^sub     rsi, rcx^^^test    rax, rax^^^jnz     loc_443A30^^^mov     rax, rdx^^^lea     rdx, [rdx+10h]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rax, rdx^^^sub     rcx, rax^^^mov     rax, rcx^^^and     rax, 0Fh^^^mov     rsi, 0^^^jz      loc_4425D6^^^cmp     rax, 8^^^jnb     short loc_44258F^^^cmp     rax, 1^^^jz      loc_442750^^^cmp     rax, 2^^^jz      loc_442890^^^cmp     rax, 3^^^jz      loc_4429D0^^^cmp     rax, 4^^^jz      loc_442B10^^^cmp     rax, 5^^^jz      loc_442C50^^^cmp     rax, 6^^^jz      loc_442D90^^^jmp     loc_442EE0^^^jz      loc_443030^^^cmp     rax, 9^^^jz      loc_443170^^^cmp     rax, 0Ah^^^jz      loc_4432B0^^^cmp     rax, 0Bh^^^jz      loc_4433F0^^^cmp     rax, 0Ch^^^jz      loc_443530^^^cmp     rax, 0Dh^^^jz      loc_443670^^^cmp     rax, 0Eh^^^jz      loc_4437B0^^^jmp     loc_4438F0^^^movaps  xmm1, xmmword ptr [rcx]^^^movaps  xmm2, xmmword ptr [rcx+10h]^^^movaps  xmmword ptr [rdx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmm3, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmm4, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm3^^^pcmpeqb xmm0, xmm4^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm4^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmm2, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmm3, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_443A30^^^movaps  xmmword ptr [rdx+rsi], xmm3^^^mov     rax, rcx^^^lea     rcx, [rcx+rsi+10h]^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^sub     rdx, rax^^^mov     rsi, 0FFFFFFFFFFFFFFC0h^^^nop     dword ptr [rax+rax+00000000h]^^^movaps  xmm2, xmmword ptr [rcx]^^^movaps  xmm4, xmm2^^^movaps  xmm5, xmmword ptr [rcx+10h]^^^movaps  xmm3, xmmword ptr [rcx+20h]^^^movaps  xmm6, xmm3^^^movaps  xmm7, xmmword ptr [rcx+30h]^^^pminub  xmm2, xmm5^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb eax, xmm3^^^lea     rdx, [rdx+40h]^^^lea     rcx, [rcx+40h]^^^test    rax, rax^^^jnz     short loc_4426F8^^^movaps  xmmword ptr [rdx-40h], xmm4^^^movaps  xmmword ptr [rdx-30h], xmm5^^^movaps  xmmword ptr [rdx-20h], xmm6^^^movaps  xmmword ptr [rdx-10h], xmm7^^^jmp     short loc_4426B0^^^pcmpeqb xmm0, xmm4^^^pmovmskb eax, xmm0^^^test    rax, rax^^^jnz     loc_443A30^^^pcmpeqb xmm0, xmm5^^^pmovmskb eax, xmm0^^^movaps  xmmword ptr [rdx-40h], xmm4^^^test    rax, rax^^^lea     rsi, [rsi+10h]^^^jnz     loc_443A30^^^pcmpeqb xmm0, xmm6^^^pmovmskb eax, xmm0^^^movaps  xmmword ptr [rdx-30h], xmm5^^^test    rax, rax^^^lea     rsi, [rsi+10h]^^^jnz     loc_443A30^^^movaps  xmmword ptr [rdx-20h], xmm6^^^pcmpeqb xmm0, xmm7^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-1]^^^movaps  xmm2, xmmword ptr [rcx+0Fh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44287A^^^palignr xmm2, xmm1, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44287A^^^palignr xmm2, xmm3, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44287A^^^palignr xmm2, xmm1, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44287A^^^palignr xmm2, xmm3, 1^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Fh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Fh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-1]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Fh]^^^movaps  xmm3, xmmword ptr [rcx+1Fh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Fh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Fh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 1^^^test    rax, rax^^^palignr xmm4, xmm3, 1^^^jnz     loc_442758^^^palignr xmm3, xmm2, 1^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 1^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442810^^^movdqu  xmm1, xmmword ptr [rcx-1]^^^mov     rsi, 0Fh^^^movdqu  xmmword ptr [rdx-1], xmm1^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-2]^^^movaps  xmm2, xmmword ptr [rcx+0Eh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4429BA^^^palignr xmm2, xmm1, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4429BA^^^palignr xmm2, xmm3, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4429BA^^^palignr xmm2, xmm1, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4429BA^^^palignr xmm2, xmm3, 2^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Eh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Eh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-2]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Eh]^^^movaps  xmm3, xmmword ptr [rcx+1Eh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Eh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Eh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 2^^^test    rax, rax^^^palignr xmm4, xmm3, 2^^^jnz     loc_442898^^^palignr xmm3, xmm2, 2^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 2^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442950^^^movdqu  xmm1, xmmword ptr [rcx-2]^^^mov     rsi, 0Eh^^^movdqu  xmmword ptr [rdx-2], xmm1^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-3]^^^movaps  xmm2, xmmword ptr [rcx+0Dh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442AFA^^^palignr xmm2, xmm1, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_442AFA^^^palignr xmm2, xmm3, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442AFA^^^palignr xmm2, xmm1, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_442AFA^^^palignr xmm2, xmm3, 3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Dh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Dh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-3]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Dh]^^^movaps  xmm3, xmmword ptr [rcx+1Dh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Dh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Dh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 3^^^test    rax, rax^^^palignr xmm4, xmm3, 3^^^jnz     loc_4429D8^^^palignr xmm3, xmm2, 3^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 3^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442A90^^^movdqu  xmm1, xmmword ptr [rcx-3]^^^mov     rsi, 0Dh^^^movdqu  xmmword ptr [rdx-3], xmm1^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-4]^^^movaps  xmm2, xmmword ptr [rcx+0Ch]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442C3A^^^palignr xmm2, xmm1, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_442C3A^^^palignr xmm2, xmm3, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442C3A^^^palignr xmm2, xmm1, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_442C3A^^^palignr xmm2, xmm3, 4^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Ch]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Ch]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-4]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Ch]^^^movaps  xmm3, xmmword ptr [rcx+1Ch]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Ch]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Ch]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 4^^^test    rax, rax^^^palignr xmm4, xmm3, 4^^^jnz     loc_442B18^^^palignr xmm3, xmm2, 4^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 4^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442BD0^^^movdqu  xmm1, xmmword ptr [rcx-4]^^^mov     rsi, 0Ch^^^movdqu  xmmword ptr [rdx-4], xmm1^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-5]^^^movaps  xmm2, xmmword ptr [rcx+0Bh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442D7A^^^palignr xmm2, xmm1, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_442D7A^^^palignr xmm2, xmm3, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442D7A^^^palignr xmm2, xmm1, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_442D7A^^^palignr xmm2, xmm3, 5^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Bh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Bh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-5]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Bh]^^^movaps  xmm3, xmmword ptr [rcx+1Bh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Bh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Bh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 5^^^test    rax, rax^^^palignr xmm4, xmm3, 5^^^jnz     loc_442C58^^^palignr xmm3, xmm2, 5^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 5^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442D10^^^movdqu  xmm1, xmmword ptr [rcx-5]^^^mov     rsi, 0Bh^^^movdqu  xmmword ptr [rdx-5], xmm1^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-6]^^^movaps  xmm2, xmmword ptr [rcx+0Ah]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442EBA^^^palignr xmm2, xmm1, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_442EBA^^^palignr xmm2, xmm3, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_442EBA^^^palignr xmm2, xmm1, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_442EBA^^^palignr xmm2, xmm3, 6^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Ah]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Ah]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-6]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Ah]^^^movaps  xmm3, xmmword ptr [rcx+1Ah]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Ah]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Ah]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 6^^^test    rax, rax^^^palignr xmm4, xmm3, 6^^^jnz     loc_442D98^^^palignr xmm3, xmm2, 6^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 6^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442E50^^^mov     r9, [rcx]^^^mov     esi, [rcx+6]^^^mov     [rdx], r9^^^mov     [rdx+6], esi^^^mov     rsi, 0Ah^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-7]^^^movaps  xmm2, xmmword ptr [rcx+9]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44300A^^^palignr xmm2, xmm1, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44300A^^^palignr xmm2, xmm3, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44300A^^^palignr xmm2, xmm1, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44300A^^^palignr xmm2, xmm3, 7^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+19h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-9]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-7]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+9]^^^movaps  xmm3, xmmword ptr [rcx+19h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+29h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+39h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 7^^^test    rax, rax^^^palignr xmm4, xmm3, 7^^^jnz     loc_442EE8^^^palignr xmm3, xmm2, 7^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 7^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442FA0^^^mov     r9, [rcx]^^^mov     esi, [rcx+5]^^^mov     [rdx], r9^^^mov     [rdx+5], esi^^^mov     rsi, 9^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-8]^^^movaps  xmm2, xmmword ptr [rcx+8]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44315A^^^palignr xmm2, xmm1, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44315A^^^palignr xmm2, xmm3, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44315A^^^palignr xmm2, xmm1, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44315A^^^palignr xmm2, xmm3, 8^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+18h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-8]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-8]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+8]^^^movaps  xmm3, xmmword ptr [rcx+18h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+28h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+38h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 8^^^test    rax, rax^^^palignr xmm4, xmm3, 8^^^jnz     loc_443038^^^palignr xmm3, xmm2, 8^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 8^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4430F0^^^mov     r9, [rcx]^^^mov     rsi, 8^^^mov     [rdx], r9^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-9]^^^movaps  xmm2, xmmword ptr [rcx+7]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44329A^^^palignr xmm2, xmm1, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44329A^^^palignr xmm2, xmm3, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44329A^^^palignr xmm2, xmm1, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44329A^^^palignr xmm2, xmm3, 9^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+17h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-7]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-9]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+7]^^^movaps  xmm3, xmmword ptr [rcx+17h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+27h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+37h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 9^^^test    rax, rax^^^palignr xmm4, xmm3, 9^^^jnz     loc_443178^^^palignr xmm3, xmm2, 9^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 9^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_443230^^^mov     r9, [rcx-1]^^^mov     rsi, 7^^^mov     [rdx-1], r9^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Ah]^^^movaps  xmm2, xmmword ptr [rcx+6]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4433DA^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4433DA^^^palignr xmm2, xmm3, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4433DA^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4433DA^^^palignr xmm2, xmm3, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+16h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-6]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Ah]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+6]^^^movaps  xmm3, xmmword ptr [rcx+16h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+26h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+36h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Ah^^^test    rax, rax^^^palignr xmm4, xmm3, 0Ah^^^jnz     loc_4432B8^^^palignr xmm3, xmm2, 0Ah^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_443370^^^mov     r9, [rcx-2]^^^mov     rsi, 6^^^mov     [rdx-2], r9^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Bh]^^^movaps  xmm2, xmmword ptr [rcx+5]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44351A^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44351A^^^palignr xmm2, xmm3, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44351A^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44351A^^^palignr xmm2, xmm3, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+15h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-5]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Bh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+5]^^^movaps  xmm3, xmmword ptr [rcx+15h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+25h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+35h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Bh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Bh^^^jnz     loc_4433F8^^^palignr xmm3, xmm2, 0Bh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4434B0^^^mov     r9, [rcx-3]^^^mov     rsi, 5^^^mov     [rdx-3], r9^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Ch]^^^movaps  xmm2, xmmword ptr [rcx+4]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44365A^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44365A^^^palignr xmm2, xmm3, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44365A^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44365A^^^palignr xmm2, xmm3, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+14h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-4]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Ch]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+4]^^^movaps  xmm3, xmmword ptr [rcx+14h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+24h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+34h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Ch^^^test    rax, rax^^^palignr xmm4, xmm3, 0Ch^^^jnz     loc_443538^^^palignr xmm3, xmm2, 0Ch^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4435F0^^^mov     r9d, [rcx]^^^mov     rsi, 4^^^mov     [rdx], r9d^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Dh]^^^movaps  xmm2, xmmword ptr [rcx+3]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44379A^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44379A^^^palignr xmm2, xmm3, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44379A^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44379A^^^palignr xmm2, xmm3, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+13h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-3]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Dh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+3]^^^movaps  xmm3, xmmword ptr [rcx+13h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+23h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+33h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Dh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Dh^^^jnz     loc_443678^^^palignr xmm3, xmm2, 0Dh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_443730^^^mov     r9d, [rcx-1]^^^mov     rsi, 3^^^mov     [rdx-1], r9d^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Eh]^^^movaps  xmm2, xmmword ptr [rcx+2]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4438DA^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4438DA^^^palignr xmm2, xmm3, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4438DA^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4438DA^^^palignr xmm2, xmm3, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+12h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-2]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Eh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+2]^^^movaps  xmm3, xmmword ptr [rcx+12h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+22h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+32h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Eh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Eh^^^jnz     loc_4437B8^^^palignr xmm3, xmm2, 0Eh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_443870^^^mov     r9d, [rcx-2]^^^mov     rsi, 2^^^mov     [rdx-2], r9d^^^jmp     loc_443A30^^^movaps  xmm1, xmmword ptr [rcx-0Fh]^^^movaps  xmm2, xmmword ptr [rcx+1]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_443A1A^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_443A1A^^^palignr xmm2, xmm3, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_443A1A^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_443A1A^^^palignr xmm2, xmm3, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+11h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-1]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Fh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+1]^^^movaps  xmm3, xmmword ptr [rcx+11h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+21h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+31h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Fh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Fh^^^jnz     loc_4438F8^^^palignr xmm3, xmm2, 0Fh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4439B0^^^mov     r9d, [rcx-3]^^^mov     rsi, 1^^^mov     [rdx-3], r9d^^^nop     dword ptr [rax+00000000h]^^^add     rdx, rsi^^^add     rcx, rsi^^^test    al, al^^^jz      short loc_443A90^^^test    al, 1^^^jnz     loc_443AF0^^^test    al, 2^^^jnz     loc_443B00^^^test    al, 4^^^jnz     loc_443B10^^^test    al, 8^^^jnz     loc_443B30^^^test    al, 10h^^^jnz     loc_443B40^^^test    al, 20h^^^jnz     loc_443B50^^^test    al, 40h^^^jnz     loc_443B70^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^lea     rax, [rdx+7]^^^retn^^^test    ah, 1^^^jnz     loc_443B80^^^test    ah, 2^^^jnz     loc_443BA0^^^test    ah, 4^^^jnz     loc_443BC0^^^test    ah, 8^^^jnz     loc_443BE0^^^test    ah, 10h^^^jnz     loc_443C00^^^test    ah, 20h^^^jnz     loc_443C20^^^test    ah, 40h^^^jnz     loc_443C40^^^nop^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+8]^^^mov     [rdx+8], rax^^^lea     rax, [rdx+0Fh]^^^retn^^^mov     al, [rcx]^^^mov     [rdx], al^^^lea     rax, [rdx]^^^retn^^^mov     ax, [rcx]^^^mov     [rdx], ax^^^lea     rax, [rdx+1]^^^retn^^^mov     ax, [rcx]^^^mov     [rdx], ax^^^mov     al, [rcx+2]^^^mov     [rdx+2], al^^^lea     rax, [rdx+2]^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^lea     rax, [rdx+3]^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     al, [rcx+4]^^^mov     [rdx+4], al^^^lea     rax, [rdx+4]^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     ax, [rcx+4]^^^mov     [rdx+4], ax^^^lea     rax, [rdx+5]^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     eax, [rcx+3]^^^mov     [rdx+3], eax^^^lea     rax, [rdx+6]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+5]^^^mov     [rdx+5], eax^^^lea     rax, [rdx+8]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+6]^^^mov     [rdx+6], eax^^^lea     rax, [rdx+9]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+7]^^^mov     [rdx+7], eax^^^lea     rax, [rdx+0Ah]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+8]^^^mov     [rdx+8], eax^^^lea     rax, [rdx+0Bh]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+5]^^^mov     [rdx+5], rax^^^lea     rax, [rdx+0Ch]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+6]^^^mov     [rdx+6], rax^^^lea     rax, [rdx+0Dh]^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+7]^^^mov     [rdx+7], rax^^^lea     rax, [rdx+0Eh]^^^retn^^^
uw_update_context$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^mov     rbp, rsi^^^sub     rsp, 18h^^^mov     rbx, rdi^^^call    uw_update_context_1^^^mov     rax, [rbp+168h]^^^mov     rdx, rax^^^shl     rdx, 4^^^cmp     dword ptr [rbp+rdx+8], 6^^^jz      short loc_492278^^^cmp     eax, 11h^^^jg      short loc_49226C^^^test    byte ptr [rbx+0C7h], 40h^^^lea     rdx, dwarf_reg_size_table^^^cdqe^^^mov     rcx, [rbx+rax*8]^^^movzx   edx, byte ptr [rdx+rax]^^^jz      short loc_492267^^^cmp     byte ptr [rbx+rax+0D8h], 0^^^jnz     short loc_492298^^^cmp     dl, 8^^^jz      short loc_4922B8^^^call    abort^^^mov     qword ptr [rbx+98h], 0^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^retn^^^mov     rax, rcx^^^mov     [rbx+98h], rax^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^retn^^^mov     rax, [rcx]^^^jmp     short loc_49229B^^^
read_sleb128$$$mov     rax, rdi^^^xor     r8d, r8d^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   edi, byte ptr [rax]^^^add     rax, 1^^^mov     rdx, rdi^^^and     edx, 7Fh^^^shl     rdx, cl^^^add     ecx, 7^^^or      r8, rdx^^^test    dil, dil^^^js      short loc_490430^^^cmp     ecx, 3Fh^^^ja      short loc_490462^^^and     edi, 40h^^^jz      short loc_490462^^^mov     rdx, 0FFFFFFFFFFFFFFFFh^^^shl     rdx, cl^^^or      r8, rdx^^^mov     [rsi], r8^^^retn^^^
_dl_reloc_bad_type$$$movsxd  rdx, edx^^^push    rbp^^^mov     rbp, rdi^^^lea     rax, [rdx+rdx*8]^^^push    rbx^^^mov     ebx, esi^^^lea     rax, [rdx+rax*2]^^^sub     rsp, 38h^^^lea     rsi, msg_10971[rax+rax]^^^mov     rdi, rsp^^^call    near ptr qword_400310^^^cmp     ebx, 0FFh^^^ja      short loc_454030^^^mov     edx, ebx^^^and     ebx, 0Fh^^^mov     rsi, [rbp+8]^^^shr     edx, 4^^^mov     byte ptr [rax+2], 0^^^mov     rcx, rsp^^^and     edx, 0Fh^^^xor     edi, edi^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax], dl^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rbx]^^^mov     [rax+1], dl^^^xor     edx, edx^^^call    _dl_signal_error^^^mov     edx, ebx^^^shr     edx, 1Ch^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax], dl^^^mov     edx, ebx^^^shr     edx, 18h^^^and     edx, 0Fh^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax+1], dl^^^mov     edx, ebx^^^shr     edx, 14h^^^and     edx, 0Fh^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax+2], dl^^^mov     edx, ebx^^^shr     edx, 10h^^^and     edx, 0Fh^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax+3], dl^^^mov     edx, ebx^^^shr     edx, 0Ch^^^and     edx, 0Fh^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax+4], dl^^^mov     edx, ebx^^^shr     edx, 8^^^and     edx, 0Fh^^^movzx   edx, byte ptr ds:_itoa_lower_digits[rdx]^^^mov     [rax+5], dl^^^add     rax, 6^^^jmp     loc_453FFE^^^
__register_frame_info_bases$$$test    rdi, rdi^^^push    rbx^^^mov     rbx, rsi^^^jz      short loc_4944B0^^^mov     r11d, [rdi]^^^test    r11d, r11d^^^jz      short loc_4944B0^^^cmp     cs:qword_6C1FD0, 0^^^mov     qword ptr [rsi+20h], 0^^^mov     qword ptr [rsi], 0FFFFFFFFFFFFFFFFh^^^mov     [rsi+8], rdx^^^mov     [rsi+10h], rcx^^^mov     [rsi+18h], rdi^^^mov     word ptr [rsi+20h], 7F8h^^^jz      short loc_494497^^^lea     rdi, object_mutex^^^call    near ptr 0^^^mov     rax, cs:unseen_objects^^^mov     cs:unseen_objects, rbx^^^lea     rdi, object_mutex^^^mov     [rbx+28h], rax^^^pop     rbx^^^jmp     near ptr 0^^^mov     rax, cs:unseen_objects^^^mov     cs:unseen_objects, rsi^^^mov     [rsi+28h], rax^^^nop     dword ptr [rax+00000000h]^^^pop     rbx^^^retn^^^
cancel_handler_0$$$mov     eax, 0^^^test    rax, rax^^^jz      short locret_494EC4^^^mov     edi, offset _dl_load_write_lock^^^jmp     near ptr 0^^^retn^^^
_nl_load_domain$$$push    rbp^^^mov     rdx, fs:10h^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_10], r14^^^mov     rbx, rdi^^^mov     [rbp+var_20], r12^^^mov     [rbp+var_18], r13^^^mov     r14, rsi^^^mov     [rbp+var_8], r15^^^sub     rsp, 180h^^^cmp     rdx, cs:qword_6C5538^^^jz      short loc_413B6B^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_413B57^^^lock cmpxchg cs:lock_10964, esi^^^jnz     _L_lock_37^^^jmp     short loc_413B64^^^cmpxchg cs:lock_10964, esi^^^jnz     _L_lock_37^^^mov     cs:qword_6C5538, rdx^^^mov     eax, cs:dword_6C5534^^^mov     ecx, [rbx+8]^^^mov     edx, eax^^^test    ecx, ecx^^^lea     eax, [rdx+1]^^^mov     cs:dword_6C5534, eax^^^jz      short loc_413BD8^^^test    edx, edx^^^mov     cs:dword_6C5534, edx^^^jnz     short loc_413BBC^^^mov     cs:qword_6C5538, 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_413BB0^^^lock dec cs:lock_10964^^^jnz     _L_unlock_75^^^jmp     short loc_413BBC^^^dec     cs:lock_10964^^^jnz     _L_unlock_75^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     rdi, [rbx]^^^mov     dword ptr [rbx+8], 0FFFFFFFFh^^^mov     qword ptr [rbx+10h], 0^^^test    rdi, rdi^^^jz      loc_413D20^^^xor     esi, esi^^^xor     eax, eax^^^call    __open_nocancel^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jz      loc_413D9E^^^lea     rdx, [rbp+var_E0]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^jnz     loc_413D94^^^mov     r15, [rbp+var_B0]^^^cmp     r15, 2Fh^^^jbe     loc_413D94^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, r12d^^^mov     ecx, 2^^^mov     edx, 1^^^mov     rsi, r15^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r13, rax^^^jz      loc_413D3D^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^mov     dword ptr [rbp+var_E8], 1^^^mov     edx, [r13+0]^^^cmp     edx, 0DE120495h^^^jnz     loc_414CD0^^^mov     edi, 0C8h^^^mov     dword ptr [rbp+var_178], edx^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     edx, dword ptr [rbp+var_178]^^^jz      loc_413D9E^^^mov     ecx, dword ptr [rbp+var_E8]^^^mov     [rbx+10h], rax^^^mov     [rax], r13^^^mov     [rax+10h], r15^^^mov     qword ptr [r12+20h], 0^^^mov     [rax+8], ecx^^^xor     eax, eax^^^cmp     edx, 950412DEh^^^setnz   al^^^mov     edx, [r13+4]^^^test    eax, eax^^^mov     [r12+18h], eax^^^jz      short loc_413CD8^^^bswap   edx^^^xor     edi, edi^^^cmp     edx, 1FFFFh^^^jbe     loc_413DB0^^^call    free^^^mov     eax, dword ptr [rbp+var_E8]^^^test    eax, eax^^^jnz     loc_413FE0^^^mov     rdi, r13^^^call    free^^^mov     rdi, r12^^^call    free^^^mov     eax, cs:dword_6C5534^^^mov     qword ptr [rbx+10h], 0^^^nop     word ptr [rax+rax+00000000h]^^^sub     eax, 1^^^mov     dword ptr [rbx+8], 1^^^test    eax, eax^^^mov     cs:dword_6C5534, eax^^^jz      loc_413B8D^^^jmp     loc_413BBC^^^mov     rdi, r15^^^call    malloc^^^test    rax, rax^^^jz      short loc_413D94^^^mov     [rbp+var_F8], r14^^^mov     [rbp+var_E8], rax^^^mov     r13, r15^^^mov     r14, rax^^^jmp     short loc_413D71^^^test    rax, rax^^^jle     short loc_413D94^^^sub     r13, rax^^^jz      loc_414D00^^^add     r14, rax^^^mov     rdx, r13^^^mov     rsi, r14^^^mov     edi, r12d^^^call    __read_nocancel^^^cdqe^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_413D60^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 4^^^jz      short loc_413D71^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^mov     eax, cs:dword_6C5534^^^jmp     loc_413D20^^^test    eax, eax^^^mov     ecx, [r13+8]^^^jz      loc_413FB0^^^bswap   ecx^^^mov     [r12+28h], ecx^^^mov     ecx, [r13+0Ch]^^^bswap   ecx^^^mov     ecx, ecx^^^add     rcx, r13^^^mov     [r12+30h], rcx^^^mov     ecx, [r13+10h]^^^bswap   ecx^^^mov     ecx, ecx^^^add     rcx, r13^^^mov     [r12+38h], rcx^^^mov     ecx, [r13+14h]^^^bswap   ecx^^^xor     esi, esi^^^cmp     ecx, 2^^^mov     [r12+58h], ecx^^^jbe     short loc_413E04^^^test    eax, eax^^^jnz     loc_413FF0^^^mov     esi, [r13+18h]^^^add     rsi, r13^^^test    dx, dx^^^mov     [r12+60h], rsi^^^mov     [r12+68h], eax^^^jz      loc_413F30^^^test    rsi, rsi^^^jz      loc_414019^^^test    eax, eax^^^jz      loc_414108^^^mov     r8d, [r13+24h]^^^bswap   r8d^^^mov     dword ptr [rbp+var_F8], r8d^^^mov     edx, dword ptr [rbp+var_F8]^^^test    edx, edx^^^jz      loc_413F30^^^test    eax, eax^^^jz      loc_414120^^^mov     eax, [r13+1Ch]^^^mov     edi, [r13+20h]^^^bswap   eax^^^bswap   edi^^^mov     dword ptr [rbp+var_F0], eax^^^mov     edi, edi^^^mov     eax, dword ptr [rbp+var_F0]^^^mov     r8d, [r12+18h]^^^add     rdi, r13^^^mov     [rbp+var_104], r8d^^^lea     rax, ds:1Eh[rax*8]^^^shr     rax, 4^^^shl     rax, 4^^^sub     rsp, rax^^^mov     eax, dword ptr [rbp+var_F0]^^^lea     rcx, [rsp+180h+var_178+7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^test    eax, eax^^^jz      loc_414133^^^mov     eax, dword ptr [rbp+var_F0]^^^mov     r9d, offset aI  ^^^mov     r10d, [rbp+var_104]^^^sub     eax, 1^^^lea     r8, ds:8[rax*8]^^^xor     eax, eax^^^jmp     short loc_413F1E^^^mov     edx, [rdi+rax+4]^^^mov     esi, [rdi+rax]^^^bswap   edx^^^mov     edx, edx^^^add     rdx, r13^^^bswap   esi^^^test    esi, esi^^^jz      loc_414019^^^sub     esi, 1^^^cmp     byte ptr [rdx+rsi], 0^^^jnz     loc_414019^^^movzx   esi, byte ptr [rdx]^^^cmp     sil, 50h^^^jz      loc_414028^^^cmp     sil, 49h^^^mov     esi, 0^^^jnz     short loc_413F0D^^^cmp     byte ptr [rdx+1], 0^^^cmovz   rsi, r9^^^mov     [rcx+rax], rsi^^^add     rax, 8^^^cmp     rax, r8^^^jz      loc_414133^^^test    r10d, r10d^^^jnz     short loc_413EC8^^^mov     edx, [rdi+rax+4]^^^mov     esi, [rdi+rax]^^^add     rdx, r13^^^jmp     short loc_413ED8^^^mov     dword ptr [r12+40h], 0^^^mov     qword ptr [r12+48h], 0^^^mov     qword ptr [r12+50h], 0^^^mov     eax, 0^^^mov     qword ptr [r12+70h], 0^^^mov     qword ptr [r12+78h], 0^^^test    rax, rax^^^jz      short loc_413F76^^^lea     rdi, [r12+80h]^^^xor     esi, esi^^^call    near ptr 0^^^lea     r8, [rbp+var_38]^^^xor     ecx, ecx^^^mov     edx, offset unk_49A0C9^^^mov     rsi, r14^^^mov     rdi, rbx^^^call    _nl_find_msg^^^lea     rdx, [r12+0C0h]^^^lea     rsi, [r12+0B8h]^^^mov     rdi, rax^^^call    __gettext_extract_plural^^^mov     eax, cs:dword_6C5534^^^jmp     loc_413D20^^^mov     [r12+28h], ecx^^^mov     ecx, [r13+0Ch]^^^add     rcx, r13^^^mov     [r12+30h], rcx^^^mov     ecx, [r13+10h]^^^add     rcx, r13^^^mov     [r12+38h], rcx^^^mov     ecx, [r13+14h]^^^jmp     loc_413DE9^^^mov     rsi, r15^^^mov     rdi, r13^^^call    munmap^^^jmp     loc_413D01^^^mov     esi, [r13+18h]^^^bswap   esi^^^mov     esi, esi^^^jmp     loc_413E01^^^mov     r13, [rbp+var_110]^^^mov     r15, [rbp+var_130]^^^mov     r12, [rbp+var_138]^^^mov     rbx, [rbp+var_140]^^^mov     rdi, [r12+20h]^^^jmp     loc_413CE6^^^xor     esi, esi^^^cmp     byte ptr [rdx+1], 52h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+2], 49h^^^jnz     loc_413F0D^^^movzx   r11d, byte ptr [rdx+3]^^^cmp     r11b, 64h^^^setz    byte ptr [rbp+var_100]^^^cmp     r11b, 69h^^^setz    byte ptr [rbp+var_110]^^^jz      short loc_414080^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     short loc_414080^^^cmp     r11b, 6Fh^^^jz      short loc_414080^^^cmp     r11b, 75h^^^jz      short loc_414080^^^cmp     r11b, 78h^^^jz      short loc_414080^^^cmp     r11b, 58h^^^jnz     loc_413F0D^^^movzx   esi, byte ptr [rdx+4]^^^cmp     sil, 38h^^^jz      loc_414BC0^^^cmp     sil, 31h^^^jz      loc_414C16^^^cmp     sil, 33h^^^jnz     loc_4147D6^^^cmp     byte ptr [rdx+5], 32h^^^jz      short loc_4140AF^^^xor     esi, esi^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+6], 0^^^jnz     short loc_4140A8^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_41515B^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_415151^^^cmp     r11b, 6Fh^^^jz      loc_415147^^^cmp     r11b, 75h^^^jz      loc_41513D^^^cmp     r11b, 78h^^^jz      loc_415133^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^mov     ecx, [r13+24h]^^^mov     dword ptr [rbp+var_F8], ecx^^^jmp     loc_413E36^^^mov     esi, [r13+1Ch]^^^mov     edi, [r13+20h]^^^mov     dword ptr [rbp+var_F0], esi^^^jmp     loc_413E60^^^mov     eax, [rbp+var_104]^^^test    eax, eax^^^jz      loc_414799^^^mov     eax, [r13+28h]^^^bswap   eax^^^mov     eax, eax^^^add     rax, r13^^^mov     [rbp+var_120], rax^^^mov     eax, [r13+2Ch]^^^bswap   eax^^^mov     eax, eax^^^add     rax, r13^^^mov     [rbp+var_148], r14^^^mov     r14d, dword ptr [rbp+var_F0]^^^mov     [rbp+var_128], rax^^^mov     eax, [r12+58h]^^^mov     [rbp+var_130], r15^^^mov     [rbp+var_100], 0^^^mov     r15, rcx^^^mov     [rbp+var_108], 0^^^mov     [rbp+var_110], r13^^^mov     [rbp+var_138], r12^^^mov     [rbp+var_140], rbx^^^shl     rax, 2^^^mov     [rbp+var_150], rax^^^mov     [rbp+var_118], rax^^^xchg    ax, ax^^^xor     r13d, r13d^^^mov     eax, [rbp+var_104]^^^mov     dword ptr [rbp+var_F0], r13d^^^test    eax, eax^^^jz      loc_414730^^^test    r13d, r13d^^^jnz     loc_41475E^^^mov     r8, [rbp+var_100]^^^mov     rcx, [rbp+var_120]^^^mov     ebx, [rcx+r8*4]^^^bswap   ebx^^^mov     ebx, ebx^^^add     rbx, [rbp+var_110]^^^mov     eax, [rbx+8]^^^bswap   eax^^^cmp     eax, 0FFFFFFFFh^^^setnz   al^^^xor     r12d, r12d^^^test    al, al^^^jz      short loc_414260^^^mov     eax, [rbp+var_104]^^^add     rbx, 4^^^test    eax, eax^^^jnz     loc_4146D4^^^jmp     short loc_41424A^^^cmp     eax, r14d^^^jnb     loc_413FFD^^^mov     rdi, [r15+rax*8]^^^test    rdi, rdi^^^jz      loc_414789^^^call    strlen^^^add     rbx, 8^^^add     r12, rax^^^mov     edx, [rbx]^^^mov     eax, [rbx+4]^^^add     r12, rdx^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_414228^^^nop     word ptr [rax+rax+00000000h]^^^mov     [rbp+r13*8+var_50], r12^^^add     r13, 1^^^cmp     r13, 2^^^jnz     loc_4141C3^^^mov     rax, [rbp+var_48]^^^add     [rbp+var_118], rax^^^mov     rdx, [rbp+var_50]^^^add     [rbp+var_108], 1^^^add     [rbp+var_118], rdx^^^add     [rbp+var_100], 1^^^mov     ecx, dword ptr [rbp+var_100]^^^cmp     dword ptr [rbp+var_F8], ecx^^^ja      loc_4141C0^^^cmp     [rbp+var_108], 0^^^mov     rcx, r15^^^mov     r13, [rbp+var_110]^^^mov     r12, [rbp+var_138]^^^mov     rbx, [rbp+var_140]^^^mov     r14, [rbp+var_148]^^^mov     r15, [rbp+var_130]^^^jz      loc_413F30^^^mov     eax, [rbp+var_108]^^^mov     rdi, [rbp+var_118]^^^mov     [rbp+var_178], rcx^^^add     eax, eax^^^shl     rax, 4^^^add     rdi, rax^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_F0], rax^^^mov     rcx, [rbp+var_178]^^^jz      loc_414019^^^mov     r8d, [rbp+var_108]^^^mov     rax, [rbp+var_F0]^^^mov     rdx, [rbp+var_F0]^^^mov     [rbp+var_110], r13^^^mov     r13, rcx^^^mov     [rbp+var_E8], 0^^^mov     dword ptr [rbp+var_138], 0^^^mov     [r12+20h], rax^^^mov     [rbp+var_168], rbx^^^mov     rax, r8^^^mov     [rbp+var_160], r8^^^mov     [rbp+var_170], r14^^^shl     rax, 4^^^add     rdx, rax^^^add     rax, rdx^^^mov     [rbp+var_140], rdx^^^mov     [rbp+var_148], rax^^^add     rax, [rbp+var_150]^^^mov     [rbp+var_150], r12^^^mov     r12, rax^^^mov     esi, [rbp+var_104]^^^xor     ecx, ecx^^^test    esi, esi^^^mov     r8, [rbp+var_E8]^^^jz      loc_4147B0^^^test    ecx, ecx^^^jnz     loc_41497A^^^mov     rdx, [rbp+var_120]^^^mov     eax, [rdx+r8*4]^^^bswap   eax^^^mov     eax, eax^^^add     rax, [rbp+var_110]^^^mov     edx, [rax+8]^^^bswap   edx^^^cmp     edx, 0FFFFFFFFh^^^setnz   dl^^^test    dl, dl^^^jz      short loc_414400^^^add     rax, 4^^^test    esi, esi^^^jnz     loc_414702^^^jmp     short loc_4143F8^^^cmp     qword ptr [r13+rdx*8+0], 0^^^jz      loc_4144EE^^^add     rax, 8^^^mov     edx, [rax+4]^^^cmp     edx, 0FFFFFFFFh^^^jnz     short loc_4143E8^^^add     ecx, 1^^^cmp     ecx, 2^^^jnz     short loc_414398^^^mov     ecx, dword ptr [rbp+var_138]^^^xor     r15d, r15d^^^mov     [rbp+var_100], r13^^^shl     rcx, 4^^^mov     [rbp+var_118], rcx^^^mov     ebx, [rbp+var_104]^^^mov     r8, [rbp+var_E8]^^^test    ebx, ebx^^^jz      loc_414957^^^test    r15d, r15d^^^jnz     loc_414C76^^^mov     rcx, [rbp+var_120]^^^mov     eax, [rcx+r8*4]^^^mov     rbx, [rbp+var_110]^^^bswap   eax^^^mov     eax, eax^^^add     rbx, rax^^^mov     r13d, [rbx]^^^bswap   r13d^^^mov     r13d, r13d^^^add     r13, [rbp+var_110]^^^mov     rax, [rbp+var_F0]^^^test    r15d, r15d^^^cmovnz  rax, [rbp+var_140]^^^mov     r11d, [rbp+var_104]^^^add     rax, [rbp+var_118]^^^test    r11d, r11d^^^mov     [rbp+var_130], rax^^^jz      loc_41494B^^^mov     eax, [rbx+8]^^^bswap   eax^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^test    al, al^^^jz      loc_414848^^^mov     r10d, [rbp+var_104]^^^test    r10d, r10d^^^jz      loc_414C96^^^mov     eax, [rbx+4]^^^bswap   eax^^^mov     eax, eax^^^mov     r8, [rbp+var_130]^^^mov     [r8], rax^^^mov     [r8+8], r13^^^add     r15d, 1^^^cmp     r15d, 2^^^jnz     loc_414423^^^add     dword ptr [rbp+var_138], 1^^^mov     r13, [rbp+var_100]^^^add     [rbp+var_E8], 1^^^mov     eax, dword ptr [rbp+var_E8]^^^cmp     dword ptr [rbp+var_F8], eax^^^ja      loc_414390^^^mov     ecx, [rbp+var_108]^^^cmp     dword ptr [rbp+var_138], ecx^^^mov     r12, [rbp+var_150]^^^mov     rbx, [rbp+var_168]^^^mov     r14, [rbp+var_170]^^^jnz     loc_41512E^^^mov     edx, [r12+58h]^^^test    edx, edx^^^jz      loc_4145D8^^^xor     eax, eax^^^cmp     dword ptr [r12+68h], 0^^^mov     rcx, [r12+60h]^^^jnz     loc_414711^^^mov     r8d, edx^^^mov     rsi, [rbp+var_160]^^^shr     r8d, 2^^^lea     eax, ds:0[r8*4]^^^shl     rsi, 5^^^add     rsi, [rbp+var_F0]^^^test    eax, eax^^^jz      loc_41511D^^^lea     rdi, [rcx+10h]^^^cmp     edx, 0Bh^^^lea     r9, [rsi+10h]^^^setnbe  r10b^^^cmp     rsi, rdi^^^setnbe  dil^^^cmp     rcx, r9^^^setnbe  r9b^^^or      edi, r9d^^^test    r10b, dil^^^jz      loc_41511D^^^xor     edi, edi^^^xor     r9d, r9d^^^movdqu  xmm0, xmmword ptr [rcx+rdi]^^^add     r9d, 1^^^movdqu  xmmword ptr [rsi+rdi], xmm0^^^add     rdi, 10h^^^cmp     r8d, r9d^^^ja      short loc_4145A6^^^cmp     eax, edx^^^jz      short loc_4145D8^^^mov     esi, eax^^^mov     r8, [rbp+var_148]^^^add     eax, 1^^^mov     edi, [rcx+rsi*4]^^^cmp     eax, edx^^^mov     [r8+rsi*4], edi^^^jb      short loc_4145C1^^^mov     [rbp+var_E8], r14^^^mov     r15, [rbp+var_148]^^^mov     r14, rbx^^^mov     rbx, [rbp+var_F0]^^^xor     r13d, r13d^^^mov     eax, r13d^^^shl     rax, 4^^^mov     rdi, [rbx+rax+8]^^^call    __hash_string^^^mov     esi, [r12+58h]^^^xor     edx, edx^^^mov     edi, eax^^^div     esi^^^lea     r8d, [rsi-2]^^^mov     eax, edi^^^mov     edi, esi^^^mov     ecx, edx^^^xor     edx, edx^^^div     r8d^^^add     edx, 1^^^mov     r8d, edx^^^sub     edi, edx^^^sub     r8d, esi^^^mov     esi, r8d^^^jmp     short loc_41463F^^^lea     eax, [rcx+rsi]^^^lea     r8d, [rcx+rdx]^^^cmp     ecx, edi^^^mov     ecx, eax^^^cmovb   ecx, r8d^^^mov     eax, ecx^^^lea     rax, [r15+rax*4]^^^mov     r8d, [rax]^^^test    r8d, r8d^^^jnz     short loc_414630^^^mov     edx, [r12+28h]^^^lea     edx, [r13+rdx+1]^^^add     r13d, 1^^^cmp     r13d, [rbp+var_108]^^^mov     [rax], edx^^^jnz     short loc_4145F3^^^mov     rax, [rbp+var_F0]^^^mov     rcx, [rbp+var_140]^^^mov     rbx, r14^^^mov     r8, [rbp+var_148]^^^mov     r14, [rbp+var_E8]^^^mov     [r12+40h], r13d^^^mov     dword ptr [r12+68h], 0^^^mov     [r12+48h], rax^^^mov     [r12+50h], rcx^^^mov     [r12+60h], r8^^^jmp     loc_413F4B^^^cmp     eax, r14d^^^jnb     loc_413FFD^^^mov     eax, eax^^^mov     rdi, [r15+rax*8]^^^test    rdi, rdi^^^jz      loc_414789^^^call    strlen^^^add     rbx, 8^^^add     r12, rax^^^mov     edx, [rbx]^^^mov     eax, [rbx+4]^^^bswap   edx^^^mov     edx, edx^^^add     r12, rdx^^^bswap   eax^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4146B0^^^jmp     loc_414260^^^mov     edx, edx^^^cmp     qword ptr [r13+rdx*8+0], 0^^^jz      loc_4144EE^^^add     rax, 8^^^mov     edx, [rax+4]^^^bswap   edx^^^cmp     edx, 0FFFFFFFFh^^^jnz     short loc_4146F0^^^jmp     loc_414400^^^mov     r8, [rbp+var_148]^^^mov     esi, [rcx+rax*4]^^^bswap   esi^^^mov     [r8+rax*4], esi^^^add     rax, 1^^^cmp     edx, eax^^^ja      short loc_414711^^^jmp     loc_4145D8^^^mov     eax, dword ptr [rbp+var_F0]^^^test    eax, eax^^^jnz     short loc_414775^^^mov     rdx, [rbp+var_100]^^^mov     rcx, [rbp+var_120]^^^mov     ebx, [rcx+rdx*4]^^^add     rbx, [rbp+var_110]^^^cmp     dword ptr [rbx+8], 0FFFFFFFFh^^^setnz   al^^^jmp     loc_414209^^^mov     rsi, [rbp+var_100]^^^mov     r8, [rbp+var_128]^^^mov     ebx, [r8+rsi*4]^^^jmp     loc_4141F3^^^mov     rsi, [rbp+var_100]^^^mov     r8, [rbp+var_128]^^^mov     ebx, [r8+rsi*4]^^^jmp     short loc_41474B^^^mov     eax, dword ptr [rbp+var_F0]^^^mov     [rbp+rax*8+var_50], r12^^^jmp     loc_414290^^^mov     eax, [r13+28h]^^^add     rax, r13^^^mov     [rbp+var_120], rax^^^mov     eax, [r13+2Ch]^^^jmp     loc_41415B^^^test    ecx, ecx^^^jnz     loc_4149F0^^^mov     rdx, [rbp+var_120]^^^mov     eax, [rdx+r8*4]^^^add     rax, [rbp+var_110]^^^cmp     dword ptr [rax+8], 0FFFFFFFFh^^^setnz   dl^^^jmp     loc_4143D0^^^cmp     sil, 36h^^^jnz     loc_41498A^^^cmp     byte ptr [rdx+5], 34h^^^jnz     loc_4140A8^^^xor     esi, esi^^^cmp     byte ptr [rdx+6], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414D3B^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414D31^^^cmp     r11b, 6Fh^^^jz      loc_414D27^^^cmp     r11b, 75h^^^jz      loc_41516F^^^cmp     r11b, 78h^^^jz      loc_415165^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^mov     r9d, [rbp+var_104]^^^mov     rcx, [rbp+var_130]^^^add     rbx, 4^^^mov     [rbp+var_154], r15d^^^mov     r15, r13^^^test    r9d, r9d^^^mov     [rcx+8], r12^^^jnz     loc_41491A^^^jmp     short loc_4148AD^^^cmp     r14d, 0FFFFFFFFh^^^jz      loc_41492E^^^mov     r8, [rbp+var_100]^^^add     rbx, 8^^^mov     r14, [r8+r14*8]^^^mov     rdi, r14^^^call    strlen^^^mov     r13, rax^^^mov     rdi, r12^^^mov     rdx, rax^^^mov     rsi, r14^^^add     r12, r13^^^call    memcpy^^^mov     r13d, [rbx]^^^mov     r14d, [rbx+4]^^^test    r13d, r13d^^^jz      short loc_414878^^^mov     rsi, r15^^^mov     rdi, r12^^^mov     rdx, r13^^^call    memcpy^^^add     r12, r13^^^add     r15, r13^^^jmp     short loc_414878^^^mov     r13d, r13d^^^mov     rsi, r15^^^mov     rdi, r12^^^mov     rdx, r13^^^add     r12, r13^^^add     r15, r13^^^call    memcpy^^^cmp     r14d, 0FFFFFFFFh^^^jz      short loc_41492E^^^mov     rcx, [rbp+var_100]^^^mov     r14d, r14d^^^add     rbx, 8^^^mov     r14, [rcx+r14*8]^^^mov     rdi, r14^^^call    strlen^^^mov     r13, rax^^^mov     rdi, r12^^^mov     rdx, rax^^^mov     rsi, r14^^^add     r12, r13^^^call    memcpy^^^mov     r13d, [rbx]^^^mov     r14d, [rbx+4]^^^bswap   r13d^^^bswap   r14d^^^test    r13d, r13d^^^jz      short loc_4148E6^^^jmp     short loc_4148CF^^^mov     r8, [rbp+var_130]^^^mov     rax, r12^^^mov     r15d, [rbp+var_154]^^^sub     rax, [r8+8]^^^mov     [r8], rax^^^jmp     loc_4144D2^^^cmp     dword ptr [rbx+8], 0FFFFFFFFh^^^setz    al^^^jmp     loc_4144A5^^^test    r15d, r15d^^^jnz     loc_414C86^^^mov     rcx, [rbp+var_120]^^^mov     ebx, [rcx+r8*4]^^^add     rbx, [rbp+var_110]^^^mov     r13d, [rbx]^^^jmp     loc_414463^^^mov     rdx, [rbp+var_128]^^^mov     eax, [rdx+r8*4]^^^jmp     loc_4143BA^^^cmp     sil, 4Ch^^^jnz     short loc_414A00^^^cmp     byte ptr [rdx+5], 45h^^^jnz     loc_4140A8^^^cmp     byte ptr [rdx+6], 41h^^^jnz     loc_4140A8^^^cmp     byte ptr [rdx+7], 53h^^^jnz     loc_4140A8^^^xor     esi, esi^^^cmp     byte ptr [rdx+8], 54h^^^jnz     loc_413F0D^^^movzx   esi, byte ptr [rdx+9]^^^cmp     sil, 38h^^^jz      loc_41504D^^^cmp     sil, 31h^^^jz      loc_414F9B^^^cmp     sil, 33h^^^jz      loc_414F3D^^^cmp     sil, 36h^^^jz      loc_415179^^^xor     esi, esi^^^jmp     loc_413F0D^^^mov     rdx, [rbp+var_128]^^^mov     eax, [rdx+r8*4]^^^jmp     loc_4147C3^^^cmp     sil, 46h^^^jnz     loc_414AD0^^^xor     esi, esi^^^cmp     byte ptr [rdx+5], 41h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+6], 53h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+7], 54h^^^jnz     loc_413F0D^^^movzx   esi, byte ptr [rdx+8]^^^cmp     sil, 38h^^^mov     byte ptr [rbp+var_118], sil^^^mov     esi, 0^^^jz      loc_414E65^^^cmp     byte ptr [rbp+var_118], 31h^^^jz      loc_414E09^^^cmp     byte ptr [rbp+var_118], 33h^^^jz      loc_414DA9^^^cmp     byte ptr [rbp+var_118], 36h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+9], 34h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+0Ah], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414D9F^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414D95^^^cmp     r11b, 6Fh^^^jz      loc_414D8B^^^cmp     r11b, 75h^^^jz      loc_414D81^^^cmp     r11b, 78h^^^jz      loc_414D77^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^cmp     sil, 4Dh^^^jnz     short loc_414B48^^^xor     esi, esi^^^cmp     byte ptr [rdx+5], 41h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+6], 58h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+7], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_4150EB^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_4150E1^^^cmp     r11b, 6Fh^^^jz      loc_4150D7^^^cmp     r11b, 75h^^^jz      loc_4150CD^^^cmp     r11b, 78h^^^jz      loc_415091^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^cmp     sil, 50h^^^jnz     loc_4140A8^^^xor     esi, esi^^^cmp     byte ptr [rdx+5], 54h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+6], 52h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+7], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_415113^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_415109^^^cmp     r11b, 6Fh^^^jz      loc_4150FF^^^cmp     r11b, 75h^^^jz      loc_4150F5^^^cmp     r11b, 78h^^^jz      loc_415124^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+5], 0^^^jnz     loc_4140A8^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414CC6^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414CBC^^^cmp     r11b, 6Fh^^^jz      loc_414CB2^^^cmp     r11b, 75h^^^jz      loc_414CA8^^^cmp     r11b, 78h^^^jz      loc_414C9E^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+5], 36h^^^jnz     loc_4140A8^^^cmp     byte ptr [rdx+6], 0^^^jnz     loc_4140A8^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414D6D^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414D63^^^cmp     r11b, 6Fh^^^jz      loc_414D59^^^cmp     r11b, 75h^^^jz      loc_414D4F^^^cmp     r11b, 78h^^^jz      loc_414D45^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^mov     rcx, [rbp+var_128]^^^mov     eax, [rcx+r8*4]^^^jmp     loc_41444C^^^mov     rcx, [rbp+var_128]^^^mov     ebx, [rcx+r8*4]^^^jmp     loc_41496B^^^mov     eax, [rbx+4]^^^jmp     loc_4144C4^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^cmp     edx, 950412DEh^^^jz      loc_413C7F^^^cmp     dword ptr [rbp+var_E8], 0^^^jz      loc_4151C7^^^mov     rsi, r15^^^mov     rdi, r13^^^call    munmap^^^mov     eax, cs:dword_6C5534^^^jmp     loc_413D20^^^mov     r13, [rbp+var_E8]^^^mov     r14, [rbp+var_F8]^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^mov     dword ptr [rbp+var_E8], 0^^^jmp     loc_413C6F^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+9], 32h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+0Ah], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414F33^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414F29^^^cmp     r11b, 6Fh^^^jz      loc_414F1F^^^cmp     r11b, 75h^^^jz      loc_414F15^^^cmp     r11b, 78h^^^jz      loc_414EA7^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+9], 36h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+0Ah], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_414F0B^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_414F01^^^cmp     r11b, 6Fh^^^jz      loc_414EF7^^^cmp     r11b, 75h^^^jz      loc_414EED^^^cmp     r11b, 78h^^^jz      short loc_414EB1^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+9], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     short loc_414EE3^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     short loc_414ED9^^^cmp     r11b, 6Fh^^^jz      short loc_414ECF^^^cmp     r11b, 75h^^^jz      short loc_414EC5^^^cmp     r11b, 78h^^^jz      short loc_414EBB^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^xor     esi, esi^^^cmp     byte ptr [rdx+0Ah], 32h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+0Bh], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     loc_415043^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     loc_415039^^^cmp     r11b, 6Fh^^^jz      loc_41502F^^^cmp     r11b, 75h^^^jz      loc_415025^^^cmp     r11b, 78h^^^jz      short loc_414FE9^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^cmp     byte ptr [rdx+0Ah], 36h^^^jnz     loc_4149E6^^^xor     esi, esi^^^cmp     byte ptr [rdx+0Bh], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     short loc_41501B^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     short loc_415011^^^cmp     r11b, 6Fh^^^jz      short loc_415007^^^cmp     r11b, 75h^^^jz      short loc_414FFD^^^cmp     r11b, 78h^^^jz      short loc_414FF3^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^xor     esi, esi^^^cmp     byte ptr [rdx+0Ah], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     short loc_4150C3^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     short loc_4150B9^^^cmp     r11b, 6Fh^^^jz      short loc_4150AF^^^cmp     r11b, 75h^^^jz      short loc_4150A5^^^cmp     r11b, 78h^^^jz      short loc_41509B^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, 496BC2h^^^jmp     loc_413F0D^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^xor     eax, eax^^^jmp     loc_4145C1^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^call    abort^^^mov     esi, 499799h^^^jmp     loc_413F0D^^^mov     esi, offset unk_4AE2DE^^^jmp     loc_413F0D^^^mov     esi, 4996D4h^^^jmp     loc_413F0D^^^mov     esi, (offset aInternalAscii+0Fh)^^^jmp     loc_413F0D^^^mov     esi, (offset aNumsize1ND+14h)^^^jmp     loc_413F0D^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^xor     esi, esi^^^cmp     byte ptr [rdx+0Ah], 34h^^^jnz     loc_413F0D^^^cmp     byte ptr [rdx+0Bh], 0^^^jnz     loc_413F0D^^^cmp     byte ptr [rbp+var_100], 0^^^jnz     short loc_415202^^^cmp     byte ptr [rbp+var_110], 0^^^jnz     short loc_4151F8^^^cmp     r11b, 6Fh^^^jz      short loc_4151EE^^^cmp     r11b, 75h^^^jz      short loc_4151E4^^^cmp     r11b, 78h^^^jz      short loc_4151DA^^^cmp     r11b, 58h^^^jnz     loc_41512E^^^mov     esi, offset aLx_0^^^jmp     loc_413F0D^^^mov     rdi, r13^^^call    free^^^mov     eax, cs:dword_6C5534^^^jmp     loc_413D20^^^mov     esi, offset aLx ^^^jmp     loc_413F0D^^^mov     esi, offset aLu ^^^jmp     loc_413F0D^^^mov     esi, offset aLo ^^^jmp     loc_413F0D^^^mov     esi, offset aLi ^^^jmp     loc_413F0D^^^mov     esi, offset aLd ^^^jmp     loc_413F0D^^^
__do_global_ctors_aux$$$push    rbp^^^mov     rbp, rsp^^^push    rbx^^^sub     rsp, 8^^^mov     rax, cs:__CTOR_LIST__^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_49508F^^^mov     ebx, offset __CTOR_LIST__^^^nop     dword ptr [rax+rax+00h]^^^sub     rbx, 8^^^call    rax ^^^mov     rax, [rbx]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_495080^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^
_L_lock_10843$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4078EF^^^
sub_425750$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
_IO_switch_to_wget_mode$$$mov     rax, [rdi+0A0h]^^^push    rbx^^^mov     rbx, rdi^^^mov     rdx, [rax+18h]^^^cmp     [rax+20h], rdx^^^ja      short loc_427370^^^mov     ecx, [rbx]^^^test    ch, 1^^^jnz     short loc_427360^^^mov     rdx, [rax+30h]^^^mov     [rax+10h], rdx^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+8]^^^jbe     short loc_427342^^^mov     [rax+8], rdx^^^mov     rdx, [rax+20h]^^^and     ch, 0F7h^^^mov     [rax], rdx^^^mov     [rax+28h], rdx^^^mov     [rax+18h], rdx^^^mov     [rbx], ecx^^^xor     eax, eax^^^pop     rbx^^^retn^^^mov     rdx, [rax+48h]^^^mov     [rax+10h], rdx^^^jmp     short loc_427342^^^mov     rax, [rax+140h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_427358^^^mov     rax, [rbx+0A0h]^^^jmp     short loc_427325^^^
malloc_printerr$$$mov     [rsp+var_10], rbp^^^mov     ebp, edi^^^mov     [rsp+var_18], rbx^^^mov     eax, ebp^^^mov     [rsp+var_8], r12^^^sub     rsp, 38h^^^and     eax, 5^^^mov     rbx, rsi^^^mov     rdi, rdx^^^cmp     eax, 5^^^jz      loc_4034B8^^^test    bpl, 1^^^jnz     short loc_403450^^^and     ebp, 2^^^jnz     loc_4034D1^^^mov     rbx, [rsp+38h+var_18]^^^mov     rbp, [rsp+38h+var_10]^^^mov     r12, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^lea     rsi, [rsp+38h+var_28]^^^xor     ecx, ecx^^^mov     edx, 10h^^^mov     [rsp+38h+var_28], 0^^^mov     r12, rsp^^^call    _itoa_word^^^cmp     rax, rsp^^^mov     r8, rax^^^jbe     short loc_403488^^^nop     dword ptr [rax+00000000h]^^^sub     r8, 1^^^cmp     r8, r12^^^mov     byte ptr [r8], 30h^^^jnz     short loc_403478^^^mov     r8, rsp^^^mov     rax, cs:__libc_argv^^^mov     edi, ebp^^^mov     rcx, rbx^^^mov     esi, offset aGlibcDetectedS^^^mov     rdx, [rax]^^^mov     eax, offset aUnknown^^^test    rdx, rdx^^^cmovz   rdx, rax^^^and     edi, 2^^^xor     eax, eax^^^call    __libc_message^^^jmp     short loc_403438^^^mov     edi, ebp^^^mov     rdx, rsi^^^xor     eax, eax^^^and     edi, 2^^^mov     esi, (offset aSCannotCreateF+18h)^^^call    __libc_message^^^jmp     loc_403438^^^call    abort^^^
_L_lock_101$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4254B1^^^
fread_unlocked$$$mov     [rsp+var_8], r12^^^mov     r12, rdx^^^mov     [rsp+var_18], rbx^^^imul    r12, rsi^^^mov     [rsp+var_10], rbp^^^sub     rsp, 18h^^^mov     rbp, rsi^^^mov     rbx, rdx^^^test    r12, r12^^^jnz     short loc_4753C0^^^xor     ebx, ebx^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rsi, rdi^^^mov     rdx, r12^^^mov     rdi, rcx^^^call    _IO_sgetn^^^cmp     r12, rax^^^jz      short loc_4753A7^^^xor     edx, edx^^^div     rbp^^^mov     rbx, rax^^^jmp     short loc_4753A7^^^
_IO_str_count$$$mov     rax, [rdi+10h]^^^cmp     [rdi+28h], rax^^^cmovnb  rax, [rdi+28h]^^^sub     rax, [rdi+18h]^^^retn^^^
_L_lock_3271$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42CCAF^^^
qsort_r.constprop.1$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^mov     r14, rsi^^^shl     r14, 4^^^push    r13^^^add     r14, rdx^^^mov     r13, rcx^^^push    r12^^^mov     r12, rdi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 68h^^^cmp     rdx, 20h^^^mov     [rbp+var_80], rsi^^^ja      short loc_417F15^^^mov     r14, rsi^^^imul    r14, rdx^^^cmp     r14, 3FFh^^^jbe     loc_418150^^^mov     ecx, cs:pagesize_9193^^^test    ecx, ecx^^^jz      loc_418180^^^xor     edx, edx^^^movsxd  rcx, ecx^^^mov     rax, r14^^^div     rcx^^^cmp     rax, cs:phys_pages_9192^^^ja      loc_4180C0^^^mov     r15, 0FFFFFFFFFFFFFFC0h^^^mov     rdi, r14^^^mov     edx, fs:[r15]^^^mov     [rbp+var_90], edx^^^call    malloc^^^mov     edx, [rbp+var_90]^^^test    rax, rax^^^mov     [rbp+var_88], rax^^^mov     fs:[r15], edx^^^jz      loc_4180C0^^^mov     [rbp+var_40], rax^^^mov     r15, rax^^^cmp     rbx, 20h^^^mov     [rbp+var_60], rbx^^^mov     [rbp+var_58], 4^^^mov     [rbp+var_50], r13^^^mov     [rbp+var_48], 0^^^jbe     loc_4180E8^^^mov     rcx, [rbp+var_80]^^^shl     rcx, 3^^^add     r15, rcx^^^lea     rax, [r15+rcx]^^^mov     rsi, r15^^^cmp     r15, rax^^^mov     [rbp+var_78], rax^^^jnb     short loc_417FDF^^^mov     rax, r15^^^mov     rdx, r12^^^nop     dword ptr [rax]^^^mov     [rax], rdx^^^add     rax, 8^^^add     rdx, rbx^^^cmp     [rbp+var_78], rax^^^ja      short loc_417FC8^^^mov     rsi, rcx^^^add     rsi, [rbp+var_40]^^^cmp     [rbp+var_80], 1^^^mov     [rbp+var_60], 8^^^mov     [rbp+var_58], 3^^^jbe     loc_4181C7^^^mov     rdx, [rbp+var_80]^^^lea     rdi, [rbp+var_60]^^^call    msort_with_tmp_part_0^^^mov     [rbp+var_68], r12^^^mov     [rbp+var_70], 0^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, [rbp+var_70]^^^mov     r13, [r15+rax*8]^^^cmp     r13, [rbp+var_68]^^^jz      short loc_418088^^^mov     rdi, [rbp+var_78]^^^mov     rsi, [rbp+var_68]^^^mov     rdx, rbx^^^call    memcpy^^^mov     rdi, [rbp+var_68]^^^mov     rcx, [rbp+var_70]^^^jmp     short loc_418049^^^mov     rdi, r13^^^mov     rcx, r14^^^mov     r13, rax^^^mov     r14, r13^^^xor     edx, edx^^^mov     [r15+rcx*8], rdi^^^sub     r14, r12^^^mov     rsi, r13^^^mov     rax, r14^^^div     rbx^^^mov     rdx, rbx^^^mov     r14, rax^^^call    memcpy^^^lea     rdx, [r15+r14*8]^^^mov     rax, [rdx]^^^cmp     [rbp+var_68], rax^^^jnz     short loc_418040^^^mov     rsi, [rbp+var_78]^^^mov     [rdx], r13^^^mov     rdi, r13^^^mov     rdx, rbx^^^call    memcpy^^^add     [rbp+var_70], 1^^^add     [rbp+var_68], rbx^^^mov     rax, [rbp+var_80]^^^cmp     [rbp+var_70], rax^^^jnz     loc_418018^^^mov     rdi, [rbp+var_88]^^^call    free^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rsi, [rbp+var_80]^^^mov     rcx, r13^^^mov     rdx, rbx^^^mov     rdi, r12^^^xor     r8d, r8d^^^call    _quicksort^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^test    bl, 3^^^jnz     short loc_418120^^^test    r12b, 3^^^jnz     short loc_418120^^^cmp     rbx, 4^^^jz      loc_4181EE^^^cmp     rbx, 8^^^jz      loc_4181D7^^^and     ebx, 7^^^jnz     short loc_418120^^^test    r12b, 7^^^jnz     short loc_418120^^^mov     [rbp+var_58], 2^^^nop     word ptr [rax+rax+00h]^^^cmp     [rbp+var_80], 1^^^jbe     loc_41809F^^^mov     rdx, [rbp+var_80]^^^lea     rdi, [rbp+var_60]^^^mov     rsi, r12^^^call    msort_with_tmp_part_0^^^mov     rdi, [rbp+var_88]^^^call    free^^^jmp     loc_4180AB^^^add     r14, 1Eh^^^mov     [rbp+var_88], 0^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r14^^^lea     r15, [rsp+90h+var_88+7]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_40], r15^^^jmp     loc_417F82^^^mov     edi, 55h^^^call    sysconf^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, 1FFFFFFFFFFFFFFFh^^^jz      short loc_4181A9^^^lea     rdx, [rax+3]^^^test    rax, rax^^^cmovns  rdx, rax^^^sar     rdx, 2^^^mov     cs:phys_pages_9192, rdx^^^mov     edi, 1Eh^^^call    sysconf^^^mov     ecx, eax^^^mov     cs:pagesize_9193, eax^^^jmp     loc_417F30^^^cmp     [rbp+var_80], 0^^^jnz     loc_418007^^^jmp     loc_41809F^^^test    r12b, 7^^^jnz     loc_418107^^^mov     [rbp+var_58], 1^^^jmp     loc_418120^^^mov     [rbp+var_58], 0^^^jmp     loc_418120^^^
__strcpy_ssse3$$$mov     rcx, rsi^^^mov     rdx, rdi^^^cmp     byte ptr [rcx], 0^^^jz      loc_442340^^^cmp     byte ptr [rcx+1], 0^^^jz      loc_442350^^^cmp     byte ptr [rcx+2], 0^^^jz      loc_442360^^^cmp     byte ptr [rcx+3], 0^^^jz      loc_442370^^^cmp     byte ptr [rcx+4], 0^^^jz      loc_442380^^^cmp     byte ptr [rcx+5], 0^^^jz      loc_442390^^^cmp     byte ptr [rcx+6], 0^^^jz      loc_4423A0^^^cmp     byte ptr [rcx+7], 0^^^jz      loc_4422D0^^^cmp     byte ptr [rcx+8], 0^^^jz      loc_4423B0^^^cmp     byte ptr [rcx+9], 0^^^jz      loc_4423C0^^^cmp     byte ptr [rcx+0Ah], 0^^^jz      loc_4423D0^^^cmp     byte ptr [rcx+0Bh], 0^^^jz      loc_4423E0^^^cmp     byte ptr [rcx+0Ch], 0^^^jz      loc_4423F0^^^cmp     byte ptr [rcx+0Dh], 0^^^jz      loc_442410^^^cmp     byte ptr [rcx+0Eh], 0^^^jz      loc_442430^^^cmp     byte ptr [rcx+0Fh], 0^^^jz      loc_442320^^^lea     rsi, [rcx+10h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm0, xmm0^^^mov     r9, [rcx]^^^mov     [rdx], r9^^^pcmpeqb xmm0, xmmword ptr [rsi]^^^mov     r9, [rcx+8]^^^mov     [rdx+8], r9^^^pmovmskb eax, xmm0^^^sub     rsi, rcx^^^test    rax, rax^^^jnz     loc_442280^^^mov     rax, rdx^^^lea     rdx, [rdx+10h]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rax, rdx^^^sub     rcx, rax^^^mov     rax, rcx^^^and     rax, 0Fh^^^mov     rsi, 0^^^jz      loc_440E26^^^cmp     rax, 8^^^jnb     short loc_440DDF^^^cmp     rax, 1^^^jz      loc_440FA0^^^cmp     rax, 2^^^jz      loc_4410E0^^^cmp     rax, 3^^^jz      loc_441220^^^cmp     rax, 4^^^jz      loc_441360^^^cmp     rax, 5^^^jz      loc_4414A0^^^cmp     rax, 6^^^jz      loc_4415E0^^^jmp     loc_441730^^^jz      loc_441880^^^cmp     rax, 9^^^jz      loc_4419C0^^^cmp     rax, 0Ah^^^jz      loc_441B00^^^cmp     rax, 0Bh^^^jz      loc_441C40^^^cmp     rax, 0Ch^^^jz      loc_441D80^^^cmp     rax, 0Dh^^^jz      loc_441EC0^^^cmp     rax, 0Eh^^^jz      loc_442000^^^jmp     loc_442140^^^movaps  xmm1, xmmword ptr [rcx]^^^movaps  xmm2, xmmword ptr [rcx+10h]^^^movaps  xmmword ptr [rdx], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmm3, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmm4, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm3^^^pcmpeqb xmm0, xmm4^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmm1, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm4^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmm2, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm1^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmm3, xmmword ptr [rcx+rsi+10h]^^^movaps  xmmword ptr [rdx+rsi], xmm2^^^pcmpeqb xmm0, xmm3^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^test    rax, rax^^^jnz     loc_442280^^^movaps  xmmword ptr [rdx+rsi], xmm3^^^mov     rax, rcx^^^lea     rcx, [rcx+rsi+10h]^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^sub     rdx, rax^^^mov     rsi, 0FFFFFFFFFFFFFFC0h^^^nop     dword ptr [rax+rax+00000000h]^^^movaps  xmm2, xmmword ptr [rcx]^^^movaps  xmm4, xmm2^^^movaps  xmm5, xmmword ptr [rcx+10h]^^^movaps  xmm3, xmmword ptr [rcx+20h]^^^movaps  xmm6, xmm3^^^movaps  xmm7, xmmword ptr [rcx+30h]^^^pminub  xmm2, xmm5^^^pminub  xmm3, xmm7^^^pminub  xmm3, xmm2^^^pcmpeqb xmm3, xmm0^^^pmovmskb eax, xmm3^^^lea     rdx, [rdx+40h]^^^lea     rcx, [rcx+40h]^^^test    rax, rax^^^jnz     short loc_440F48^^^movaps  xmmword ptr [rdx-40h], xmm4^^^movaps  xmmword ptr [rdx-30h], xmm5^^^movaps  xmmword ptr [rdx-20h], xmm6^^^movaps  xmmword ptr [rdx-10h], xmm7^^^jmp     short loc_440F00^^^pcmpeqb xmm0, xmm4^^^pmovmskb eax, xmm0^^^test    rax, rax^^^jnz     loc_442280^^^pcmpeqb xmm0, xmm5^^^pmovmskb eax, xmm0^^^movaps  xmmword ptr [rdx-40h], xmm4^^^test    rax, rax^^^lea     rsi, [rsi+10h]^^^jnz     loc_442280^^^pcmpeqb xmm0, xmm6^^^pmovmskb eax, xmm0^^^movaps  xmmword ptr [rdx-30h], xmm5^^^test    rax, rax^^^lea     rsi, [rsi+10h]^^^jnz     loc_442280^^^movaps  xmmword ptr [rdx-20h], xmm6^^^pcmpeqb xmm0, xmm7^^^pmovmskb eax, xmm0^^^lea     rsi, [rsi+10h]^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-1]^^^movaps  xmm2, xmmword ptr [rcx+0Fh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4410CA^^^palignr xmm2, xmm1, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4410CA^^^palignr xmm2, xmm3, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4410CA^^^palignr xmm2, xmm1, 1^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Fh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4410CA^^^palignr xmm2, xmm3, 1^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Fh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Fh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-1]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Fh]^^^movaps  xmm3, xmmword ptr [rcx+1Fh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Fh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Fh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 1^^^test    rax, rax^^^palignr xmm4, xmm3, 1^^^jnz     loc_440FA8^^^palignr xmm3, xmm2, 1^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 1^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441060^^^movdqu  xmm1, xmmword ptr [rcx-1]^^^mov     rsi, 0Fh^^^movdqu  xmmword ptr [rdx-1], xmm1^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-2]^^^movaps  xmm2, xmmword ptr [rcx+0Eh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44120A^^^palignr xmm2, xmm1, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44120A^^^palignr xmm2, xmm3, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44120A^^^palignr xmm2, xmm1, 2^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Eh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44120A^^^palignr xmm2, xmm3, 2^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Eh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Eh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-2]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Eh]^^^movaps  xmm3, xmmword ptr [rcx+1Eh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Eh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Eh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 2^^^test    rax, rax^^^palignr xmm4, xmm3, 2^^^jnz     loc_4410E8^^^palignr xmm3, xmm2, 2^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 2^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4411A0^^^movdqu  xmm1, xmmword ptr [rcx-2]^^^mov     rsi, 0Eh^^^movdqu  xmmword ptr [rdx-2], xmm1^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-3]^^^movaps  xmm2, xmmword ptr [rcx+0Dh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44134A^^^palignr xmm2, xmm1, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44134A^^^palignr xmm2, xmm3, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44134A^^^palignr xmm2, xmm1, 3^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Dh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44134A^^^palignr xmm2, xmm3, 3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Dh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Dh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-3]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Dh]^^^movaps  xmm3, xmmword ptr [rcx+1Dh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Dh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Dh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 3^^^test    rax, rax^^^palignr xmm4, xmm3, 3^^^jnz     loc_441228^^^palignr xmm3, xmm2, 3^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 3^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4412E0^^^movdqu  xmm1, xmmword ptr [rcx-3]^^^mov     rsi, 0Dh^^^movdqu  xmmword ptr [rdx-3], xmm1^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-4]^^^movaps  xmm2, xmmword ptr [rcx+0Ch]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44148A^^^palignr xmm2, xmm1, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44148A^^^palignr xmm2, xmm3, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44148A^^^palignr xmm2, xmm1, 4^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ch]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44148A^^^palignr xmm2, xmm3, 4^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Ch]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Ch]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-4]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Ch]^^^movaps  xmm3, xmmword ptr [rcx+1Ch]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Ch]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Ch]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 4^^^test    rax, rax^^^palignr xmm4, xmm3, 4^^^jnz     loc_441368^^^palignr xmm3, xmm2, 4^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 4^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441420^^^movdqu  xmm1, xmmword ptr [rcx-4]^^^mov     rsi, 0Ch^^^movdqu  xmmword ptr [rdx-4], xmm1^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-5]^^^movaps  xmm2, xmmword ptr [rcx+0Bh]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4415CA^^^palignr xmm2, xmm1, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4415CA^^^palignr xmm2, xmm3, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4415CA^^^palignr xmm2, xmm1, 5^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Bh]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4415CA^^^palignr xmm2, xmm3, 5^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Bh]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Bh]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-5]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Bh]^^^movaps  xmm3, xmmword ptr [rcx+1Bh]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Bh]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Bh]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 5^^^test    rax, rax^^^palignr xmm4, xmm3, 5^^^jnz     loc_4414A8^^^palignr xmm3, xmm2, 5^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 5^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441560^^^movdqu  xmm1, xmmword ptr [rcx-5]^^^mov     rsi, 0Bh^^^movdqu  xmmword ptr [rdx-5], xmm1^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-6]^^^movaps  xmm2, xmmword ptr [rcx+0Ah]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44170A^^^palignr xmm2, xmm1, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44170A^^^palignr xmm2, xmm3, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44170A^^^palignr xmm2, xmm1, 6^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+1Ah]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44170A^^^palignr xmm2, xmm3, 6^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+1Ah]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-0Ah]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-6]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+0Ah]^^^movaps  xmm3, xmmword ptr [rcx+1Ah]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+2Ah]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+3Ah]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 6^^^test    rax, rax^^^palignr xmm4, xmm3, 6^^^jnz     loc_4415E8^^^palignr xmm3, xmm2, 6^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 6^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4416A0^^^mov     r9, [rcx]^^^mov     esi, [rcx+6]^^^mov     [rdx], r9^^^mov     [rdx+6], esi^^^mov     rsi, 0Ah^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-7]^^^movaps  xmm2, xmmword ptr [rcx+9]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44185A^^^palignr xmm2, xmm1, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44185A^^^palignr xmm2, xmm3, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44185A^^^palignr xmm2, xmm1, 7^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+19h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44185A^^^palignr xmm2, xmm3, 7^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+19h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-9]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-7]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+9]^^^movaps  xmm3, xmmword ptr [rcx+19h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+29h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+39h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 7^^^test    rax, rax^^^palignr xmm4, xmm3, 7^^^jnz     loc_441738^^^palignr xmm3, xmm2, 7^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 7^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4417F0^^^mov     r9, [rcx]^^^mov     esi, [rcx+5]^^^mov     [rdx], r9^^^mov     [rdx+5], esi^^^mov     rsi, 9^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-8]^^^movaps  xmm2, xmmword ptr [rcx+8]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4419AA^^^palignr xmm2, xmm1, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_4419AA^^^palignr xmm2, xmm3, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_4419AA^^^palignr xmm2, xmm1, 8^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+18h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_4419AA^^^palignr xmm2, xmm3, 8^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+18h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-8]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-8]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+8]^^^movaps  xmm3, xmmword ptr [rcx+18h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+28h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+38h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 8^^^test    rax, rax^^^palignr xmm4, xmm3, 8^^^jnz     loc_441888^^^palignr xmm3, xmm2, 8^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 8^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441940^^^mov     r9, [rcx]^^^mov     rsi, 8^^^mov     [rdx], r9^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-9]^^^movaps  xmm2, xmmword ptr [rcx+7]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441AEA^^^palignr xmm2, xmm1, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_441AEA^^^palignr xmm2, xmm3, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441AEA^^^palignr xmm2, xmm1, 9^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+17h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_441AEA^^^palignr xmm2, xmm3, 9^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+17h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-7]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-9]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+7]^^^movaps  xmm3, xmmword ptr [rcx+17h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+27h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+37h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 9^^^test    rax, rax^^^palignr xmm4, xmm3, 9^^^jnz     loc_4419C8^^^palignr xmm3, xmm2, 9^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 9^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441A80^^^mov     r9, [rcx-1]^^^mov     rsi, 7^^^mov     [rdx-1], r9^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Ah]^^^movaps  xmm2, xmmword ptr [rcx+6]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441C2A^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_441C2A^^^palignr xmm2, xmm3, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441C2A^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+16h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_441C2A^^^palignr xmm2, xmm3, 0Ah^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+16h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-6]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Ah]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+6]^^^movaps  xmm3, xmmword ptr [rcx+16h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+26h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+36h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Ah^^^test    rax, rax^^^palignr xmm4, xmm3, 0Ah^^^jnz     loc_441B08^^^palignr xmm3, xmm2, 0Ah^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Ah^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441BC0^^^mov     r9, [rcx-2]^^^mov     rsi, 6^^^mov     [rdx-2], r9^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Bh]^^^movaps  xmm2, xmmword ptr [rcx+5]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441D6A^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_441D6A^^^palignr xmm2, xmm3, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441D6A^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+15h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_441D6A^^^palignr xmm2, xmm3, 0Bh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+15h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-5]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Bh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+5]^^^movaps  xmm3, xmmword ptr [rcx+15h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+25h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+35h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Bh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Bh^^^jnz     loc_441C48^^^palignr xmm3, xmm2, 0Bh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Bh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441D00^^^mov     r9, [rcx-3]^^^mov     rsi, 5^^^mov     [rdx-3], r9^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Ch]^^^movaps  xmm2, xmmword ptr [rcx+4]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441EAA^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_441EAA^^^palignr xmm2, xmm3, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441EAA^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+14h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_441EAA^^^palignr xmm2, xmm3, 0Ch^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+14h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-4]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Ch]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+4]^^^movaps  xmm3, xmmword ptr [rcx+14h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+24h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+34h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Ch^^^test    rax, rax^^^palignr xmm4, xmm3, 0Ch^^^jnz     loc_441D88^^^palignr xmm3, xmm2, 0Ch^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Ch^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441E40^^^mov     r9d, [rcx]^^^mov     rsi, 4^^^mov     [rdx], r9d^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Dh]^^^movaps  xmm2, xmmword ptr [rcx+3]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441FEA^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_441FEA^^^palignr xmm2, xmm3, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_441FEA^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+13h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_441FEA^^^palignr xmm2, xmm3, 0Dh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+13h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-3]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Dh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+3]^^^movaps  xmm3, xmmword ptr [rcx+13h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+23h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+33h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Dh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Dh^^^jnz     loc_441EC8^^^palignr xmm3, xmm2, 0Dh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Dh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_441F80^^^mov     r9d, [rcx-1]^^^mov     rsi, 3^^^mov     [rdx-1], r9d^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Eh]^^^movaps  xmm2, xmmword ptr [rcx+2]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44212A^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44212A^^^palignr xmm2, xmm3, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44212A^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+12h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44212A^^^palignr xmm2, xmm3, 0Eh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+12h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-2]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Eh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+2]^^^movaps  xmm3, xmmword ptr [rcx+12h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+22h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+32h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Eh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Eh^^^jnz     loc_442008^^^palignr xmm3, xmm2, 0Eh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Eh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_4420C0^^^mov     r9d, [rcx-2]^^^mov     rsi, 2^^^mov     [rdx-2], r9d^^^jmp     loc_442280^^^movaps  xmm1, xmmword ptr [rcx-0Fh]^^^movaps  xmm2, xmmword ptr [rcx+1]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44226A^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm1, xmm2^^^test    rax, rax^^^jnz     loc_44226A^^^palignr xmm2, xmm3, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^movaps  xmm3, xmm2^^^test    rax, rax^^^jnz     loc_44226A^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^movaps  xmm2, xmmword ptr [rcx+11h]^^^pcmpeqb xmm0, xmm2^^^lea     rdx, [rdx+10h]^^^pmovmskb eax, xmm0^^^lea     rcx, [rcx+10h]^^^test    rax, rax^^^jnz     loc_44226A^^^palignr xmm2, xmm3, 0Fh^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rcx, [rcx+11h]^^^lea     rdx, [rdx+10h]^^^mov     rax, rcx^^^and     rcx, 0FFFFFFFFFFFFFFC0h^^^sub     rax, rcx^^^lea     rcx, [rcx-1]^^^sub     rdx, rax^^^movaps  xmm1, xmmword ptr [rcx-0Fh]^^^nop     word ptr [rax+rax+00h]^^^movaps  xmm2, xmmword ptr [rcx+1]^^^movaps  xmm3, xmmword ptr [rcx+11h]^^^movaps  xmm6, xmm3^^^movaps  xmm4, xmmword ptr [rcx+21h]^^^movaps  xmm7, xmm4^^^movaps  xmm5, xmmword ptr [rcx+31h]^^^pminub  xmm6, xmm2^^^pminub  xmm7, xmm5^^^pminub  xmm7, xmm6^^^pcmpeqb xmm7, xmm0^^^pmovmskb eax, xmm7^^^movaps  xmm7, xmm5^^^palignr xmm5, xmm4, 0Fh^^^test    rax, rax^^^palignr xmm4, xmm3, 0Fh^^^jnz     loc_442148^^^palignr xmm3, xmm2, 0Fh^^^lea     rcx, [rcx+40h]^^^palignr xmm2, xmm1, 0Fh^^^movaps  xmm1, xmm7^^^movaps  xmmword ptr [rdx+30h], xmm5^^^movaps  xmmword ptr [rdx+20h], xmm4^^^movaps  xmmword ptr [rdx+10h], xmm3^^^movaps  xmmword ptr [rdx], xmm2^^^lea     rdx, [rdx+40h]^^^jmp     short loc_442200^^^mov     r9d, [rcx-3]^^^mov     rsi, 1^^^mov     [rdx-3], r9d^^^nop     dword ptr [rax+00000000h]^^^add     rdx, rsi^^^add     rcx, rsi^^^test    al, al^^^jz      short loc_4422E0^^^test    al, 1^^^jnz     loc_442340^^^test    al, 2^^^jnz     loc_442350^^^test    al, 4^^^jnz     loc_442360^^^test    al, 8^^^jnz     loc_442370^^^test    al, 10h^^^jnz     loc_442380^^^test    al, 20h^^^jnz     loc_442390^^^test    al, 40h^^^jnz     loc_4423A0^^^nop     word ptr [rax+rax+00000000h]^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, rdi^^^retn^^^test    ah, 1^^^jnz     loc_4423B0^^^test    ah, 2^^^jnz     loc_4423C0^^^test    ah, 4^^^jnz     loc_4423D0^^^test    ah, 8^^^jnz     loc_4423E0^^^test    ah, 10h^^^jnz     loc_4423F0^^^test    ah, 20h^^^jnz     loc_442410^^^test    ah, 40h^^^jnz     loc_442430^^^nop^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+8]^^^mov     [rdx+8], rax^^^mov     rax, rdi^^^retn^^^mov     al, [rcx]^^^mov     [rdx], al^^^mov     rax, rdi^^^retn^^^mov     ax, [rcx]^^^mov     [rdx], ax^^^mov     rax, rdi^^^retn^^^mov     ax, [rcx]^^^mov     [rdx], ax^^^mov     al, [rcx+2]^^^mov     [rdx+2], al^^^mov     rax, rdi^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     rax, rdi^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     al, [rcx+4]^^^mov     [rdx+4], al^^^mov     rax, rdi^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     ax, [rcx+4]^^^mov     [rdx+4], ax^^^mov     rax, rdi^^^retn^^^mov     eax, [rcx]^^^mov     [rdx], eax^^^mov     eax, [rcx+3]^^^mov     [rdx+3], eax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+5]^^^mov     [rdx+5], eax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+6]^^^mov     [rdx+6], eax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+7]^^^mov     [rdx+7], eax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     eax, [rcx+8]^^^mov     [rdx+8], eax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+5]^^^mov     [rdx+5], rax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+6]^^^mov     [rdx+6], rax^^^mov     rax, rdi^^^retn^^^mov     rax, [rcx]^^^mov     [rdx], rax^^^mov     rax, [rcx+7]^^^mov     [rdx+7], rax^^^mov     rax, rdi^^^retn^^^
_L_lock_8486$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40644B^^^
__libc_csu_fini$$$push    rbx^^^mov     ebx, offset __CTOR_LIST__^^^sub     rbx, offset __fini_array_start^^^sar     rbx, 3^^^test    rbx, rbx^^^jz      short loc_401AED^^^nop     word ptr [rax+rax+00000000h]^^^call    ds:__preinit_array_end[rbx*8]^^^sub     rbx, 1^^^jnz     short loc_401AE0^^^pop     rbx^^^jmp     _term_proc^^^
_IO_file_setbuf_mmap$$$mov     rax, [rdi+0A0h]^^^push    rbx^^^mov     rbx, rdi^^^mov     qword ptr [rdi+0D8h], offset _IO_file_jumps^^^mov     qword ptr [rax+140h], offset _IO_wfile_jumps^^^call    _IO_default_setbuf^^^test    rax, rax^^^jz      short loc_42A140^^^mov     rax, [rbx+38h]^^^mov     [rbx+30h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     rax, rbx^^^pop     rbx^^^retn^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rbx+0D8h], offset _IO_file_jumps_mmap^^^mov     qword ptr [rax+140h], offset _IO_wfile_jumps_mmap^^^xor     eax, eax^^^pop     rbx^^^retn^^^
_IO_iter_file$$$mov     rax, rdi^^^retn^^^
fdopendir$$$push    rbx             ^^^mov     esi, edi^^^mov     ebx, edi^^^mov     edi, 1^^^sub     rsp, 90h^^^mov     rdx, rsp^^^call    _fxstat^^^test    eax, eax^^^js      short loc_479941^^^mov     eax, [rsp+98h+var_80]^^^and     eax, 0F000h^^^cmp     eax, 4000h^^^jnz     short loc_479957^^^xor     eax, eax^^^mov     esi, 3^^^mov     edi, ebx^^^call    fcntl^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_479941^^^mov     edx, eax^^^and     edx, 3^^^cmp     edx, 1^^^jz      short loc_479945^^^mov     rcx, rsp^^^mov     edx, eax^^^xor     esi, esi^^^mov     edi, ebx^^^call    __alloc_dir^^^add     rsp, 90h^^^pop     rbx^^^retn^^^xor     eax, eax^^^jmp     short loc_479938^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^xor     eax, eax^^^jmp     short loc_479938^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 14h^^^xor     eax, eax^^^jmp     short loc_479938^^^
malloc_consolidate.part.3$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_40365D^^^lock^^^or      dword ptr [rdi+4], 1^^^lea     rcx, [rdi+58h]^^^lea     r8, [rdi+50h]^^^lea     rax, [rdi+8]^^^xor     r9d, r9d^^^mov     rbx, r9^^^xchg    rbx, [rax]^^^test    rbx, rbx^^^jnz     loc_403712^^^jmp     loc_403790^^^mov     rdx, [r12+10h]^^^add     rbp, r15^^^mov     rsi, [r12+18h]^^^cmp     r12, [rdx+18h]^^^jnz     loc_403802^^^cmp     r12, [rsi+10h]^^^jnz     loc_403802^^^cmp     qword ptr [r12+8], 3FFh^^^mov     [rdx+18h], rsi^^^mov     [rsi+10h], rdx^^^jbe     short loc_4036CA^^^mov     rsi, [r12+20h]^^^test    rsi, rsi^^^jnz     loc_403840^^^mov     rdx, [r13+68h]^^^cmp     rbp, 3FFh^^^mov     [r13+68h], rbx^^^mov     [rdx+18h], rbx^^^jbe     short loc_4036EF^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     rsi, rbp^^^mov     [rbx+18h], rcx^^^mov     [rbx+10h], rdx^^^or      rsi, 1^^^mov     [rbx+rbp], rbp^^^mov     [rbx+8], rsi^^^test    r14, r14^^^jz      loc_403790^^^mov     rbx, r14^^^mov     rdx, [rbx+8]^^^mov     r14, [rbx+10h]^^^mov     rbp, rdx^^^and     rbp, 0FFFFFFFFFFFFFFFAh^^^and     edx, 1^^^lea     r12, [rbx+rbp]^^^mov     r15, [r12+8]^^^jnz     short loc_40376B^^^mov     rdx, [rbx]^^^sub     rbx, rdx^^^add     rbp, rdx^^^mov     rdx, [rbx+10h]^^^mov     rsi, [rbx+18h]^^^cmp     rbx, [rdx+18h]^^^jnz     short loc_4037C4^^^cmp     rbx, [rsi+10h]^^^jnz     short loc_4037C4^^^cmp     qword ptr [rbx+8], 3FFh^^^mov     [rdx+18h], rsi^^^mov     [rsi+10h], rdx^^^jbe     short loc_40376B^^^mov     rsi, [rbx+20h]^^^test    rsi, rsi^^^jnz     loc_403872^^^and     r15, 0FFFFFFFFFFFFFFF8h^^^cmp     r12, [r13+58h]^^^jz      short loc_4037B0^^^test    byte ptr [r12+r15+8], 1^^^jz      loc_403688^^^and     qword ptr [r12+8], 0FFFFFFFFFFFFFFFEh^^^jmp     loc_4036CA^^^add     rax, 8^^^lea     rdx, [rax-8]^^^cmp     r8, rdx^^^jnz     loc_403670^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^add     r15, rbp^^^or      r15, 1^^^mov     [rbx+8], r15^^^mov     [r13+58h], rbx^^^jmp     loc_403706^^^mov     edi, cs:check_action^^^mov     rdx, rbx^^^mov     esi, offset aCorruptedDoubl^^^mov     [rsp+58h+var_50], rax^^^mov     [rsp+58h+var_40], rcx^^^mov     [rsp+58h+var_48], r8^^^mov     [rsp+58h+var_58], r9^^^call    malloc_printerr^^^mov     rax, [rsp+58h+var_50]^^^mov     rcx, [rsp+58h+var_40]^^^mov     r8, [rsp+58h+var_48]^^^mov     r9, [rsp+58h+var_58]^^^jmp     loc_40376B^^^mov     edi, cs:check_action^^^mov     rdx, r12^^^mov     esi, offset aCorruptedDoubl^^^mov     [rsp+58h+var_50], rax^^^mov     [rsp+58h+var_40], rcx^^^mov     [rsp+58h+var_48], r8^^^mov     [rsp+58h+var_58], r9^^^call    malloc_printerr^^^mov     rax, [rsp+58h+var_50]^^^mov     rcx, [rsp+58h+var_40]^^^mov     r8, [rsp+58h+var_48]^^^mov     r9, [rsp+58h+var_58]^^^jmp     loc_4036CA^^^cmp     r12, [rsi+28h]^^^jnz     loc_403949^^^mov     rdi, [r12+28h]^^^cmp     r12, [rdi+20h]^^^jnz     loc_403930^^^cmp     qword ptr [rdx+20h], 0^^^jz      short loc_40389E^^^mov     [rsi+28h], rdi^^^mov     rdx, [r12+28h]^^^mov     [rdx+20h], rsi^^^jmp     loc_4036CA^^^cmp     rbx, [rsi+28h]^^^jnz     loc_403917^^^mov     rdi, [rbx+28h]^^^cmp     rbx, [rdi+20h]^^^jnz     short loc_4038FE^^^cmp     qword ptr [rdx+20h], 0^^^jz      short loc_4038C2^^^mov     [rsi+28h], rdi^^^mov     rdx, [rbx+28h]^^^mov     [rdx+20h], rsi^^^jmp     loc_40376B^^^cmp     r12, rsi^^^jz      short loc_4038E4^^^mov     [rdx+20h], rsi^^^mov     rsi, [r12+20h]^^^mov     [rdx+28h], rdi^^^mov     [rsi+28h], rdx^^^mov     rsi, [r12+28h]^^^mov     [rsi+20h], rdx^^^jmp     loc_4036CA^^^cmp     rbx, rsi^^^jz      short loc_4038F1^^^mov     [rdx+20h], rsi^^^mov     rsi, [rbx+20h]^^^mov     [rdx+28h], rdi^^^mov     [rsi+28h], rdx^^^mov     rsi, [rbx+28h]^^^mov     [rsi+20h], rdx^^^jmp     loc_40376B^^^mov     [rdx+28h], rdx^^^mov     [rdx+20h], rdx^^^jmp     loc_4036CA^^^mov     [rdx+28h], rdx^^^mov     [rdx+20h], rdx^^^jmp     loc_40376B^^^mov     ecx, offset __func___12720^^^mov     edx, 10BEh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPBk_nextsizeFd^^^call    __malloc_assert^^^mov     ecx, offset __func___12720^^^mov     edx, 10BEh^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPFd_nextsizeBk^^^call    __malloc_assert^^^mov     ecx, offset __func___12720^^^mov     edx, 10C6h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextchunkBk_ne^^^call    __malloc_assert^^^mov     ecx, offset __func___12720^^^mov     edx, 10C6h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aNextchunkFd_ne^^^call    __malloc_assert^^^
strndup$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^mov     rbx, rdi^^^call    sub_400330^^^lea     rdi, [rax+1]^^^mov     rbp, rax^^^call    malloc^^^test    rax, rax^^^mov     rdi, rax^^^jz      short loc_4754C0^^^mov     byte ptr [rax+rbp], 0^^^mov     rdx, rbp^^^mov     rsi, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^jmp     memcpy^^^xor     eax, eax^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
__ctype_tolower_loc$$$mov     rax, 0FFFFFFFFFFFFFFE0h^^^add     rax, fs:0^^^retn^^^
str_to_mpn.isra.0$$$push    r15^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 18h^^^test    esi, esi^^^mov     qword ptr [rcx], 0^^^mov     r14, [rsp+48h+arg_0]^^^jle     loc_47B52D^^^xor     r13d, r13d^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movzx   eax, byte ptr [rbx]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_47B2C7^^^test    r14, r14^^^jz      short loc_47B2C1^^^cmp     al, [r14]^^^jz      loc_47B370^^^add     rbx, r9^^^movzx   eax, byte ptr [rbx]^^^lea     rdx, [r13+r13*4+0]^^^movsx   rax, al^^^add     rbx, 1^^^sub     ebp, 1^^^lea     r13, [rax+rdx*2-30h]^^^lea     eax, [rcx+1]^^^jz      short loc_47B318^^^cmp     eax, 13h^^^jz      short loc_47B2F0^^^mov     ecx, eax^^^jmp     short loc_47B2A8^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jnz     loc_47B3B8^^^xor     al, al^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^xor     r13d, r13d^^^mov     ecx, eax^^^jmp     short loc_47B2A8^^^mov     rdx, [r8]^^^test    rdx, rdx^^^jle     short loc_47B333^^^mov     esi, 12h^^^sub     esi, ecx^^^movsxd  rsi, esi^^^cmp     rdx, rsi^^^jle     loc_47B450^^^mov     rdx, [r12]^^^cdqe^^^mov     rcx, ds:_tens_in_limb[rax*8]^^^test    rdx, rdx^^^jnz     loc_47B47A^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^add     rsp, 18h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jz      loc_47B4F1^^^cmp     [rbx+1], al^^^jnz     loc_47B2C1^^^mov     eax, 2^^^jmp     short loc_47B39E^^^add     rax, 1^^^cmp     [rbx+rax-1], dl^^^jnz     loc_47B2C1^^^movzx   edx, byte ptr [r14+rax]^^^test    dl, dl^^^jnz     short loc_47B390^^^add     rbx, rax^^^movzx   eax, byte ptr [rbx]^^^jmp     loc_47B2C7^^^mov     rcx, 8AC7230489E80000h^^^mov     rsi, r15^^^mov     rdi, r15^^^mov     [rsp+48h+var_40], r8^^^mov     [rsp+48h+var_48], r9^^^call    __mpn_mul_1^^^mov     rcx, rax^^^mov     rax, [r15]^^^xor     esi, esi^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^mov     r8, [rsp+48h+var_40]^^^mov     r9, [rsp+48h+var_48]^^^add     r13, rax^^^cmp     rax, r13^^^mov     [r15], r13^^^jbe     short loc_47B41A^^^nop     word ptr [rax+rax+00h]^^^sub     rdx, 1^^^jz      loc_47B4E0^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_47B400^^^xor     esi, esi^^^xor     r13d, r13d^^^xor     eax, eax^^^add     rcx, rsi^^^jz      loc_47B2E6^^^mov     rdx, [r12]^^^cmp     rdx, 4^^^jg      loc_47B4FB^^^mov     [r15+rdx*8], rcx^^^mov     ecx, eax^^^add     qword ptr [r12], 1^^^jmp     loc_47B2A8^^^cdqe^^^mov     qword ptr [r8], 0^^^imul    r13, ds:_tens_in_limb[rdx*8]^^^add     rdx, rax^^^mov     rcx, ds:_tens_in_limb[rdx*8]^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jz      loc_47B34A^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_mul_1^^^mov     rsi, [r15]^^^mov     rcx, rax^^^xor     eax, eax^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^add     r13, rsi^^^cmp     rsi, r13^^^mov     [r15], r13^^^ja      short loc_47B4C8^^^add     rcx, rax^^^jz      loc_47B355^^^mov     rdx, [r12]^^^cmp     rdx, 4^^^jg      short loc_47B514^^^mov     [r15+rdx*8], rcx^^^add     rdx, 1^^^mov     [r12], rdx^^^jmp     loc_47B355^^^sub     rdx, 1^^^jz      short loc_47B4EA^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_47B4C8^^^xor     eax, eax^^^jmp     short loc_47B4A0^^^mov     esi, 1^^^jmp     loc_47B41A^^^mov     eax, 1^^^jmp     short loc_47B4A0^^^mov     eax, 1^^^jmp     loc_47B3A7^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 137h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNsize128224641^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 16Fh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNsize128224641^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 126h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDigcnt0^^^call    __assert_fail^^^
sub_40EACD$$$mov     eax, 40h^^^pop     rbx^^^retn^^^
_IO_sputbackwc$$$push    rbx^^^mov     rdx, [rdi+0A0h]^^^mov     rbx, rdi^^^mov     rcx, [rdx]^^^cmp     rcx, [rdx+10h]^^^jbe     short loc_427889^^^cmp     [rcx-4], esi^^^jz      short loc_4278A0^^^mov     rdx, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rdx+30h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42789E^^^and     dword ptr [rbx], 0FFFFFFEFh^^^pop     rbx^^^retn^^^sub     rcx, 4^^^mov     eax, esi^^^mov     [rdx], rcx^^^jmp     short loc_427896^^^
_IO_list_lock$$$mov     rdx, fs:10h^^^cmp     rdx, cs:qword_6C5628^^^jz      short loc_42D2F6^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_42D2E2^^^lock cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_4117^^^jmp     short loc_42D2EF^^^cmpxchg cs:list_all_lock, esi^^^jnz     _L_lock_4117^^^mov     cs:qword_6C5628, rdx^^^add     cs:dword_6C5624, 1^^^retn^^^
_IO_old_init$$$mov     rax, [rdi+88h]^^^or      esi, 0FBAD0000h^^^mov     dword ptr [rdi+74h], 0^^^mov     [rdi], esi^^^mov     qword ptr [rdi+38h], 0^^^mov     qword ptr [rdi+40h], 0^^^mov     qword ptr [rdi+18h], 0^^^test    rax, rax^^^mov     qword ptr [rdi+8], 0^^^mov     qword ptr [rdi+10h], 0^^^mov     qword ptr [rdi+20h], 0^^^mov     qword ptr [rdi+28h], 0^^^mov     qword ptr [rdi+30h], 0^^^mov     qword ptr [rdi+68h], 0^^^mov     qword ptr [rdi+48h], 0^^^mov     qword ptr [rdi+50h], 0^^^mov     qword ptr [rdi+58h], 0^^^mov     qword ptr [rdi+60h], 0^^^mov     word ptr [rdi+80h], 0^^^jz      short locret_42C501^^^mov     dword ptr [rax], 0^^^mov     dword ptr [rax+4], 0^^^mov     qword ptr [rax+8], 0^^^rep retn^^^
_L_unlock_16$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short locret_424AE0^^^
isnanl$$$mov     rax, [rsp+arg_0]^^^mov     edx, [rsp+arg_8]^^^mov     [rsp+var_18], rax^^^mov     eax, dword ptr [rsp+var_18+4]^^^mov     [rsp+var_10], edx^^^movsx   ecx, word ptr [rsp+var_10]^^^and     eax, 7FFFFFFFh^^^or      eax, dword ptr [rsp+var_18]^^^add     ecx, ecx^^^mov     edx, eax^^^neg     edx^^^or      edx, eax^^^movzx   eax, cx^^^shr     edx, 1Fh^^^or      edx, eax^^^mov     eax, 0FFFEh^^^sub     eax, edx^^^sar     eax, 10h^^^retn^^^
_L_unlock_1164$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_41AB24^^^
__strncasecmp_l_sse42$$$mov     rax, [rcx]^^^test    dword ptr [rax+278h], 1^^^jnz     __strncasecmp_l_nonascii^^^test    rdx, rdx^^^jz      loc_4873C1^^^cmp     rdx, 1^^^jz      loc_4873D0^^^mov     r11, rdx^^^mov     ecx, esi^^^mov     eax, edi^^^and     rcx, 3Fh^^^and     rax, 3Fh^^^movdqa  xmm4, cs:xmmword_49CA70^^^movdqa  xmm5, cs:xmmword_49CA80^^^movdqa  xmm6, cs:xmmword_49CA90^^^cmp     ecx, 30h^^^ja      loc_485510^^^cmp     eax, 30h^^^ja      loc_485510^^^movdqu  xmm1, xmmword ptr [rdi]^^^movdqu  xmm2, xmmword ptr [rsi]^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pxor    xmm0, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb edx, xmm1^^^sub     edx, 0FFFFh^^^jnz     loc_4873A0^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rsi, 10h^^^add     rdi, 10h^^^nop     dword ptr [rax+rax+00h]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     edx, 0FFFFh^^^xor     r8d, r8d^^^and     ecx, 0Fh^^^and     eax, 0Fh^^^pxor    xmm0, xmm0^^^cmp     ecx, eax^^^jz      short loc_485560^^^ja      short loc_485537^^^mov     r8d, edx^^^xchg    eax, ecx^^^xchg    rsi, rdi^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm1, xmmword ptr [rsi]^^^lea     r9, [rax+0Fh]^^^sub     r9, rcx^^^lea     r10, unk_4B2CD8^^^movsxd  r9, dword ptr [r10+r9*4]^^^pcmpeqb xmm0, xmm1^^^lea     r10, [r10+r9]^^^jmp     r10^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm0, xmm1^^^movdqa  xmm2, xmmword ptr [rdi]^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm1, xmm2^^^psubb   xmm1, xmm0^^^pmovmskb r9d, xmm1^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9, 10h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_4856D0^^^sub     r11, 10h^^^jbe     loc_4873C1^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^lea     rdx, [rdx+10h]^^^jbe     short loc_4856D0^^^sub     r11, 10h^^^jbe     loc_4873C1^^^jmp     loc_485600^^^jnb     loc_4873C1^^^sub     r11, rcx^^^jbe     loc_4873C1^^^lea     rcx, [rdx+rcx-10h]^^^movzx   eax, byte ptr [rdi+rcx]^^^movzx   edx, byte ptr [rsi+rcx]^^^lea     rcx, unk_4A3180^^^mov     eax, [rcx+rax*4]^^^mov     edx, [rcx+rdx*4]^^^sub     eax, edx^^^retn^^^pslldq  xmm2, 0Fh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 1^^^lea     r10, [rdi+1]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4858B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_4858B0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 1^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_4857B0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 1^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 0Eh^^^ja      loc_4857BA^^^jmp     loc_487306^^^pslldq  xmm2, 0Eh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 2^^^lea     r10, [rdi+2]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_485A90^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_485A90^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 2^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_485990^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 2^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 0Dh^^^ja      loc_48599A^^^jmp     loc_487306^^^pslldq  xmm2, 0Dh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 3^^^lea     r10, [rdi+3]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^add     r10, 10h^^^jg      loc_485C60^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_485C60^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 3^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_485B62^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 3^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 0Ch^^^ja      loc_485B6C^^^jmp     loc_487306^^^pslldq  xmm2, 0Ch^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 4^^^lea     r10, [rdi+4]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_485E40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_485E40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 4^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_485D40^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 4^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 0Bh^^^ja      loc_485D4A^^^jmp     loc_487306^^^pslldq  xmm2, 0Bh^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 5^^^lea     r10, [rdi+5]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486020^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486020^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 5^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_485F20^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 5^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 0Ah^^^ja      loc_485F2A^^^jmp     loc_487306^^^pslldq  xmm2, 0Ah^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 6^^^lea     r10, [rdi+6]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486200^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486200^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 6^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_486100^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 6^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 9^^^ja      loc_48610A^^^jmp     loc_487306^^^pslldq  xmm2, 9^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 7^^^lea     r10, [rdi+7]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4863E0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_4863E0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 7^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_4862E0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 7^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 8^^^ja      loc_4862EA^^^jmp     loc_487306^^^pslldq  xmm2, 8^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 8^^^lea     r10, [rdi+8]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4865C0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_4865C0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 8^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_4864C0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 8^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 7^^^ja      loc_4864CA^^^jmp     loc_487306^^^pslldq  xmm2, 7^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 9^^^lea     r10, [rdi+9]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4867A0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_4867A0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 9^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_4866A0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 9^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 6^^^ja      loc_4866AA^^^jmp     loc_487306^^^pslldq  xmm2, 6^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Ah^^^lea     r10, [rdi+0Ah]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486980^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486980^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ah^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_486880^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ah^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 5^^^ja      loc_48688A^^^jmp     loc_487306^^^pslldq  xmm2, 5^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Bh^^^lea     r10, [rdi+0Bh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486B60^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486B60^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Bh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_486A60^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Bh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 4^^^ja      loc_486A6A^^^jmp     loc_487306^^^pslldq  xmm2, 4^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Ch^^^lea     r10, [rdi+0Ch]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486D40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486D40^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Ch^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_486C40^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Ch^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 3^^^ja      loc_486C4A^^^jmp     loc_487306^^^pslldq  xmm2, 3^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Dh^^^lea     r10, [rdi+0Dh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_486F20^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_486F20^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Dh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_486E20^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Dh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 2^^^ja      loc_486E2A^^^jmp     loc_487306^^^pslldq  xmm2, 2^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Eh^^^lea     r10, [rdi+0Eh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_487100^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_487100^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Eh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_487000^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Eh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     loc_487306^^^cmp     ecx, 1^^^ja      loc_48700A^^^jmp     loc_487306^^^pslldq  xmm2, 1^^^movdqa  xmm7, xmm1^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm2^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm1^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm2^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm1, xmm7^^^por     xmm2, xmm9^^^pcmpeqb xmm2, xmm1^^^psubb   xmm2, xmm0^^^pmovmskb r9d, xmm2^^^shr     edx, cl^^^shr     r9d, cl^^^sub     edx, r9d^^^jnz     loc_48738D^^^movdqa  xmm3, xmmword ptr [rdi]^^^lea     r9, [rcx+r11-10h]^^^cmp     r11, r9^^^jb      loc_4873C1^^^test    r9, r9^^^jz      loc_4873C1^^^mov     r11, r9^^^mov     rcx, 10h^^^mov     r9d, 0Fh^^^lea     r10, [rdi+0Fh]^^^and     r10, 0FFFh^^^sub     r10, 1000h^^^mov     rdx, rcx^^^nop     word ptr [rax+rax+00000000h]^^^add     r10, 10h^^^jg      loc_4872E0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^add     r10, 10h^^^jg      loc_4872E0^^^movdqa  xmm0, xmmword ptr [rdi+rdx]^^^palignr xmm0, xmmword ptr [rdi+rdx-10h], 0Fh^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^jbe     loc_487360^^^sub     r11, 10h^^^jbe     loc_4873C1^^^add     rdx, 10h^^^jmp     loc_4871E0^^^sub     r10, 1000h^^^movdqa  xmm0, xmmword ptr [rdi+rdx-10h]^^^psrldq  xmm0, 0Fh^^^pcmpistri xmm0, xmm0, 3Ah^^^cmp     rcx, r11^^^jnb     short loc_487306^^^cmp     ecx, 0^^^ja      loc_4871EA^^^movdqa  xmm1, xmmword ptr [rsi+rdx]^^^movdqa  xmm7, xmm0^^^movdqa  xmm8, xmm5^^^movdqa  xmm9, xmm1^^^movdqa  xmm10, xmm5^^^pcmpgtb xmm7, xmm4^^^pcmpgtb xmm8, xmm0^^^pcmpgtb xmm9, xmm4^^^pcmpgtb xmm10, xmm1^^^pand    xmm7, xmm8^^^pand    xmm9, xmm10^^^pand    xmm7, xmm6^^^pand    xmm9, xmm6^^^por     xmm0, xmm7^^^por     xmm1, xmm9^^^pcmpistri xmm0, xmm1, 1Ah^^^nop     dword ptr [rax+rax+00000000h]^^^jnb     short loc_4873C1^^^sub     r11, rcx^^^jbe     short loc_4873C1^^^add     rdx, rcx^^^lea     rdi, [rdi+r9-10h]^^^movzx   eax, byte ptr [rdi+rdx]^^^movzx   edx, byte ptr [rsi+rdx]^^^test    r8d, r8d^^^jz      short loc_48737D^^^xchg    eax, edx^^^lea     rcx, unk_4A3180^^^mov     edx, [rcx+rdx*4]^^^mov     eax, [rcx+rax*4]^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+rax]^^^lea     rsi, [rsi+rcx]^^^test    r8d, r8d^^^jz      short loc_4873A0^^^xchg    rsi, rdi^^^nop     dword ptr [rax]^^^bsf     rdx, rdx^^^sub     r11, rdx^^^jbe     short loc_4873C1^^^movzx   ecx, byte ptr [rsi+rdx]^^^movzx   eax, byte ptr [rdi+rdx]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^xor     eax, eax^^^retn^^^movzx   ecx, byte ptr [rsi]^^^movzx   eax, byte ptr [rdi]^^^lea     rdx, unk_4A3180^^^mov     ecx, [rdx+rcx*4]^^^mov     eax, [rdx+rax*4]^^^sub     eax, ecx^^^retn^^^
alias_compare$$$mov     rsi, [rsi]^^^mov     rdi, [rdi]^^^mov     edx, offset _nl_C_locobj^^^jmp     sub_400380^^^
_IO_getline$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12d, ecx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 28h^^^mov     edx, [rdi+0C0h]^^^mov     [rsp+58h+var_48], rsi^^^mov     [rsp+58h+var_3C], r8d^^^test    edx, edx^^^jz      loc_474915^^^xor     eax, eax^^^test    rbx, rbx^^^jz      loc_474890^^^mov     r15, [rsp+58h+var_48]^^^jmp     short loc_474852^^^cmp     r13, rbx^^^mov     esi, r12d^^^mov     rdi, r14^^^cmovnb  r13, rbx^^^mov     rdx, r13^^^call    memchr^^^test    rax, rax^^^mov     rcx, rax^^^jnz     short loc_4748A0^^^mov     rdi, r15^^^mov     rdx, r13^^^mov     rsi, r14^^^sub     rbx, r13^^^add     r15, r13^^^call    memcpy^^^add     [rbp+8], r13^^^test    rbx, rbx^^^jz      short loc_474888^^^mov     r14, [rbp+8]^^^mov     r13, [rbp+10h]^^^sub     r13, r14^^^test    r13, r13^^^jg      short loc_474818^^^mov     rdi, rbp^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_474888^^^cmp     r12d, eax^^^jz      short loc_4748F2^^^sub     rbx, 1^^^mov     [r15], al^^^add     r15, 1^^^test    rbx, rbx^^^jnz     short loc_474852^^^nop     dword ptr [rax+00h]^^^mov     rax, r15^^^sub     rax, [rsp+58h+var_48]^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rbx, rax^^^mov     eax, [rsp+58h+var_3C]^^^mov     r12, r15^^^sub     rbx, r14^^^sub     r12, [rsp+58h+var_48]^^^test    eax, eax^^^js      short loc_4748C3^^^add     rcx, 1^^^cmp     [rsp+58h+var_3C], 1^^^sbb     rbx, 0FFFFFFFFFFFFFFFFh^^^mov     rdx, rbx^^^mov     rsi, r14^^^mov     rdi, r15^^^mov     [rsp+58h+var_50], rcx^^^call    memcpy^^^mov     rcx, [rsp+58h+var_50]^^^lea     rax, [rbx+r12]^^^mov     [rbp+8], rcx^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     [rsp+58h+var_3C], 0^^^jle     short loc_474902^^^mov     [r15], r12b^^^add     r15, 1^^^jmp     short loc_474888^^^jz      short loc_474888^^^mov     esi, r12d^^^mov     rdi, rbp^^^call    _IO_sputbackc^^^nop^^^jmp     loc_474888^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^jmp     loc_4747FF^^^
setitimer$$$mov     eax, 26h        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
argz_create_sep$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     ebp, esi^^^mov     [rsp+var_8], r14^^^sub     rsp, 28h^^^mov     r12, rdx^^^mov     r14, rcx^^^call    strlen^^^lea     r13, [rax+1]^^^cmp     r13, 1^^^jbe     loc_476320^^^mov     rdi, r13^^^call    malloc^^^mov     rcx, rax^^^mov     [r12], rax^^^mov     eax, 0Ch^^^test    rcx, rcx^^^jnz     short loc_4762C6^^^nop     dword ptr [rax+00h]^^^mov     rbx, [rsp+28h+var_28]^^^mov     rbp, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_18]^^^mov     r13, [rsp+28h+var_10]^^^mov     r14, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^mov     [rcx], dl^^^add     rcx, 1^^^add     rbx, 1^^^test    dl, dl^^^jz      short loc_4762F0^^^movzx   edx, byte ptr [rbx]^^^movsx   eax, dl^^^cmp     eax, ebp^^^jnz     short loc_4762B8^^^cmp     rcx, [r12]^^^jbe     short loc_476310^^^cmp     byte ptr [rcx-1], 0^^^jz      short loc_476310^^^mov     byte ptr [rcx], 0^^^add     rbx, 1^^^add     rcx, 1^^^test    dl, dl^^^jnz     short loc_4762C6^^^nop     dword ptr [rax+rax+00h]^^^test    r13, r13^^^jnz     short loc_476306^^^mov     rdi, [r12]^^^call    free^^^mov     qword ptr [r12], 0^^^mov     [r14], r13^^^xor     eax, eax^^^jmp     short loc_476298^^^sub     r13, 1^^^jmp     short loc_4762BE^^^mov     qword ptr [r12], 0^^^xor     eax, eax^^^mov     qword ptr [r14], 0^^^jmp     loc_476298^^^
trecurse$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^cmp     qword ptr [rdi+8], 0^^^mov     rbp, rsi^^^mov     r12d, edx^^^jz      short loc_44D858^^^xor     esi, esi^^^mov     rdi, rbx^^^call    rbp^^^mov     rdi, [rbx+8]^^^test    rdi, rdi^^^jz      short loc_44D810^^^lea     edx, [r12+1]^^^mov     rsi, rbp^^^call    trecurse^^^mov     rdi, rbx^^^mov     edx, r12d^^^mov     esi, 1^^^call    rbp^^^mov     rdi, [rbx+10h]^^^test    rdi, rdi^^^jz      short loc_44D833^^^lea     edx, [r12+1]^^^mov     rsi, rbp^^^call    trecurse^^^mov     edx, r12d^^^mov     esi, 2^^^mov     rdi, rbx^^^mov     rax, rbp^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^jmp     rax^^^cmp     qword ptr [rdi+10h], 0^^^mov     esi, 3^^^jnz     short loc_44D7F3^^^jmp     short loc_44D83B^^^
_IO_file_doallocate$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 0A8h^^^mov     eax, [rdi+70h]^^^mov     ebp, 2000h^^^mov     r12d, 2000h^^^test    eax, eax^^^js      short loc_4743E9^^^mov     rax, [rdi+0D8h]^^^mov     rsi, rsp^^^call    qword ptr [rax+90h]^^^test    eax, eax^^^js      short loc_4743E9^^^mov     eax, [rsp+0A8h+var_90]^^^and     eax, 0F000h^^^cmp     eax, 2000h^^^jz      loc_474448^^^mov     rax, [rsp+0A8h+var_70]^^^mov     ebp, 2000h^^^mov     r12d, 2000h^^^test    rax, rax^^^jle     short loc_4743E9^^^lea     rbp, [rax+0FFFh]^^^mov     r12, rax^^^and     rbp, 0FFFFFFFFFFFFF000h^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^mov     rsi, rbp^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_474425^^^lea     rdx, [rax+r12]^^^mov     rsi, rax^^^mov     ecx, 1^^^mov     rdi, rbx^^^call    _IO_setb^^^mov     eax, 1^^^mov     rbx, [rsp+0A8h+var_18]^^^mov     rbp, [rsp+0A8h+var_10]^^^mov     r12, [rsp+0A8h+var_8]^^^add     rsp, 0A8h^^^retn^^^mov     rdx, [rsp+0A8h+var_80]^^^mov     rax, rdx^^^shr     rdx, 8^^^shr     rax, 20h^^^and     edx, 0FFFh^^^and     eax, 0FFFFF000h^^^or      eax, edx^^^sub     eax, 88h^^^cmp     eax, 7^^^ja      short loc_474480^^^or      dword ptr [rbx], 200h^^^jmp     loc_4743C3^^^mov     rbp, 0FFFFFFFFFFFFFFC0h^^^mov     edi, [rbx+70h]^^^mov     r12d, fs:[rbp+0]^^^call    isatty^^^test    eax, eax^^^mov     fs:[rbp+0], r12d^^^jz      loc_4743C3^^^jmp     short loc_47446F^^^
memmem$$$push    r15^^^push    r14^^^mov     r14, rcx^^^push    r13^^^mov     r13, rdi^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 28h^^^test    rcx, rcx^^^jz      loc_476130^^^cmp     rcx, rsi^^^ja      loc_47612D^^^cmp     rcx, 1Fh^^^ja      loc_476142^^^movzx   esi, byte ptr [rdx]^^^mov     rdx, r12^^^call    memchr^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_476130^^^cmp     r14, 1^^^jz      loc_476130^^^sub     r13, rax^^^lea     r15, [r13+r12+0]^^^cmp     r14, r15^^^ja      loc_47612D^^^lea     rdx, [rsp+58h+var_48]^^^mov     rsi, r14^^^mov     rdi, rbx^^^call    critical_factorization_0^^^mov     r12, [rsp+58h+var_48]^^^mov     rdx, rax^^^mov     rdi, rbx^^^mov     r13, rax^^^lea     rsi, [rbx+r12]^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_47614C^^^lea     rdi, [r13-1]^^^mov     r10, r14^^^mov     r8d, 1^^^xor     esi, esi^^^mov     [rsp+58h+var_50], 0^^^sub     r10, r12^^^lea     r9, [rbp+rdi+0]^^^sub     r8, r13^^^sub     r15, r14^^^cmp     [rsp+58h+var_50], r13^^^mov     rax, [rsp+58h+var_50]^^^cmovb   rax, r13^^^cmp     r14, rax^^^jbe     short loc_4760C6^^^lea     rcx, [rbp+rax+0]^^^movzx   edx, byte ptr [rcx+rsi]^^^cmp     [rbx+rax], dl^^^jnz     loc_476208^^^lea     rdx, [rbp+rsi+0]^^^jmp     short loc_4760BD^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     loc_476208^^^add     rax, 1^^^cmp     r14, rax^^^ja      short loc_4760B0^^^cmp     r13, [rsp+58h+var_50]^^^mov     rax, r13^^^jbe     short loc_47610A^^^movzx   edx, byte ptr [r9+rsi]^^^mov     rax, rdi^^^lea     r11, [rbp+rsi+0]^^^cmp     [rbx+rdi], dl^^^jz      short loc_476103^^^jmp     loc_476234^^^movzx   ecx, byte ptr [rax+r11-1]^^^lea     rdx, [rax-1]^^^cmp     [rbx+rax-1], cl^^^jnz     short loc_47610A^^^mov     rax, rdx^^^cmp     rax, [rsp+58h+var_50]^^^jnz     short loc_4760F0^^^mov     rcx, [rsp+58h+var_50]^^^add     rcx, 1^^^cmp     rcx, rax^^^ja      loc_476225^^^add     rsi, r12^^^mov     [rsp+58h+var_50], r10^^^cmp     r15, rsi^^^jnb     loc_476080^^^xor     ebp, ebp^^^nop^^^add     rsp, 28h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^call    two_way_long_needle_0^^^mov     rbp, rax^^^jmp     short loc_476130^^^mov     rax, r14^^^lea     rsi, [r13-1]^^^mov     r8d, 1^^^sub     rax, r13^^^lea     rdi, [rbp+r13+0]^^^cmp     rax, r13^^^lea     r9, [rbp+rsi+0]^^^cmovb   rax, r13^^^xor     r11d, r11d^^^sub     r8, r13^^^lea     r10, [rax+1]^^^sub     r15, r14^^^mov     [rsp+58h+var_48], r10^^^nop^^^cmp     r14, r13^^^jbe     short loc_4761B2^^^movzx   ecx, byte ptr [rdi+r11]^^^mov     rax, r13^^^lea     rdx, [rbp+r11+0]^^^cmp     [rbx+r13], cl^^^jz      short loc_4761A9^^^jmp     short loc_4761F0^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_4761F0^^^add     rax, 1^^^cmp     r14, rax^^^ja      short loc_4761A0^^^cmp     rsi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_47622D^^^movzx   eax, byte ptr [r9+r11]^^^cmp     [rbx+rsi], al^^^jnz     short loc_476220^^^mov     rax, rsi^^^lea     rdx, [rbp+r11+0]^^^jmp     short loc_4761D9^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_476220^^^sub     rax, 1^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_4761D0^^^mov     rbp, rdx^^^jmp     loc_476130^^^lea     rcx, [r8+r11]^^^lea     r11, [rcx+rax]^^^cmp     r15, r11^^^jnb     short loc_476180^^^xor     ebp, ebp^^^jmp     loc_476130^^^add     rsi, r8^^^mov     [rsp+58h+var_50], 0^^^add     rsi, rax^^^jmp     loc_476124^^^add     r11, r10^^^jmp     short loc_4761F8^^^add     rbp, rsi^^^jmp     loc_476130^^^lea     rdx, [rbp+r11+0]^^^jmp     short loc_4761E3^^^mov     rax, r13^^^jmp     loc_47610A^^^
_IO_wdoallocbuf$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     rax, [rdi+0A0h]^^^cmp     qword ptr [rax+30h], 0^^^jz      short loc_4271C0^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^test    byte ptr [rdi], 2^^^jz      short loc_4271F0^^^mov     edx, [rdi+74h]^^^lea     r12, [rax+13Ch]^^^lea     rbp, [rax+138h]^^^or      edx, 8^^^mov     [rax+30h], rbp^^^mov     [rax+38h], r12^^^mov     [rbx+74h], edx^^^jmp     short loc_4271A4^^^mov     rax, [rax+140h]^^^call    qword ptr [rax+68h]^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_4271A4^^^mov     rax, [rbx+0A0h]^^^mov     edx, [rbx+74h]^^^mov     rdi, [rax+30h]^^^lea     r12, [rax+13Ch]^^^lea     rbp, [rax+138h]^^^test    rdi, rdi^^^jz      short loc_4271D6^^^test    dl, 8^^^jnz     short loc_4271D6^^^mov     rax, [rax+38h]^^^sub     rax, rdi^^^sar     rax, 2^^^lea     rsi, ds:0FFFh[rax*4]^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     rax, [rbx+0A0h]^^^mov     edx, [rbx+74h]^^^jmp     short loc_4271D6^^^
_IO_init_wmarker$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^mov     eax, [rsi]^^^mov     [rdi+8], rsi^^^test    ah, 8^^^jnz     short loc_4279A0^^^mov     rdx, [rsi+0A0h]^^^test    ah, 1^^^mov     rax, [rdx]^^^jnz     short loc_427990^^^sub     rax, [rdx+10h]^^^shr     rax, 2^^^mov     [rbx+10h], eax^^^mov     rax, [rsi+60h]^^^mov     [rbx], rax^^^mov     [rsi+60h], rbx^^^add     rsp, 10h^^^pop     rbx^^^retn^^^sub     rax, [rdx+8]^^^shr     rax, 2^^^jmp     short loc_42797A^^^mov     rdi, rsi^^^mov     [rsp+18h+var_10], rsi^^^call    _IO_switch_to_wget_mode^^^mov     rsi, [rsp+18h+var_10]^^^mov     eax, [rsi]^^^jmp     short loc_427963^^^
__fcntl_nocancel$$$lea     rax, [rsp+arg_0]^^^cmp     esi, 9^^^mov     [rsp+var_28], rdx^^^mov     [rsp+var_68], 18h^^^mov     r8, rdx^^^mov     [rsp+var_60], rax^^^lea     rax, [rsp+var_38]^^^mov     [rsp+var_58], rax^^^jz      short loc_40F188^^^mov     rdx, r8^^^movsxd  rsi, esi^^^movsxd  rdi, edi^^^mov     eax, 48h^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_40F1F0^^^rep retn^^^mov     eax, cs:miss_F_GETOWN_EX^^^test    eax, eax^^^jnz     short loc_40F169^^^movsxd  r10, edi^^^mov     r9d, 48h^^^lea     rdx, [rsp+var_48]^^^mov     esi, 10h^^^mov     rdi, r10^^^mov     eax, r9d^^^syscall^^^cmp     eax, 0FFFFF000h^^^ja      short loc_40F1C8^^^mov     eax, [rsp+var_44]^^^mov     edx, eax^^^neg     edx^^^cmp     [rsp+var_48], 2^^^cmovz   eax, edx^^^retn^^^cmp     eax, 0FFFFFFEAh^^^jnz     short loc_40F208^^^mov     rdx, r8^^^mov     esi, 9^^^mov     rdi, r10^^^mov     eax, r9d^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_40F21A^^^mov     cs:miss_F_GETOWN_EX, 1^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_40F1E5^^^
_IO_switch_to_main_get_area$$$mov     rax, [rdi+10h]^^^mov     rdx, [rdi+58h]^^^and     dword ptr [rdi], 0FFFFFEFFh^^^mov     [rdi+10h], rdx^^^mov     [rdi+58h], rax^^^mov     rdx, [rdi+18h]^^^mov     rax, [rdi+48h]^^^mov     [rdi+48h], rdx^^^mov     [rdi+18h], rax^^^mov     [rdi+8], rax^^^retn^^^
_L_unlock_13236$$$lea     rdi, [r12]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_408AFF^^^
_L_unlock_12881$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4088F1^^^
mempcpy$$$cmp     rdx, 20h        ^^^jnb     short loc_40AE20^^^test    dl, 1^^^jz      short loc_40ADB6^^^movzx   ecx, byte ptr [rsi]^^^mov     [rdi], cl^^^inc     rsi^^^inc     rdi^^^test    dl, 2^^^jz      short loc_40ADC9^^^movzx   ecx, word ptr [rsi]^^^mov     [rdi], cx^^^add     rsi, 2^^^add     rdi, 2^^^test    dl, 4^^^jz      short loc_40ADDA^^^mov     ecx, [rsi]^^^mov     [rdi], ecx^^^add     rsi, 4^^^add     rdi, 4^^^test    dl, 8^^^jz      short loc_40ADF0^^^mov     rcx, [rsi]^^^mov     [rdi], rcx^^^add     rsi, 8^^^add     rdi, 8^^^nop     dword ptr [rax]^^^and     edx, 0F0h^^^jz      short loc_40AE1B^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rcx, [rsi]^^^mov     r8, [rsi+8]^^^mov     [rdi], rcx^^^mov     [rdi+8], r8^^^sub     edx, 10h^^^lea     rsi, [rsi+10h]^^^lea     rdi, [rdi+10h]^^^jnz     short loc_40AE00^^^mov     rax, rdi^^^retn^^^mov     ecx, esi^^^and     ecx, 7^^^jz      short loc_40AE50^^^lea     rdx, [rcx+rdx-8]^^^sub     ecx, 8^^^nop^^^movzx   eax, byte ptr [rsi]^^^mov     [rdi], al^^^inc     ecx^^^lea     rsi, [rsi+1]^^^lea     rdi, [rdi+1]^^^jnz     short loc_40AE30^^^nop     dword ptr [rax+rax+00000000h]^^^cmp     rdx, 400h^^^ja      short loc_40AED0^^^mov     ecx, edx^^^shr     ecx, 5^^^jz      short loc_40AEC0^^^dec     ecx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     [rdi], rax^^^mov     [rdi+8], r8^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^lea     rsi, [rsi+20h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40AEC0^^^dec     ecx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     [rdi], rax^^^mov     [rdi+8], r8^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^lea     rsi, [rsi+20h]^^^lea     rdi, [rdi+20h]^^^jnz     short loc_40AE60^^^nop     word ptr [rax+rax+00000000h]^^^and     edx, 1Fh^^^jnz     loc_40ADA6^^^mov     rax, rdi^^^retn^^^mov     r11, cs:__x86_64_data_cache_size_half^^^cmp     r11, rdx^^^cmova   r11, rdx^^^mov     rcx, r11^^^and     r11, 0FFFFFFFFFFFFFFF8h^^^shr     rcx, 3^^^jz      short loc_40AEF0^^^rep movsq^^^xchg    ax, ax^^^sub     rdx, r11^^^test    rdx, 0FFFFFFFFFFFFFFF8h^^^jnz     short loc_40AF10^^^and     edx, 7^^^jnz     loc_40ADA6^^^mov     rax, rdi^^^retn^^^mov     r8, cs:__x86_64_shared_cache_size_half^^^cmp     r8, rdx^^^cmova   r8, rdx^^^mov     rcx, r8^^^and     r8, 0FFFFFFFFFFFFFFC0h^^^shr     rcx, 6^^^jz      loc_40B0DA^^^mov     [rsp+var_8], r14^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_20], rbx^^^cmp     cs:__x86_64_prefetchw, 0^^^jz      loc_40B010^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rsi+380h]^^^prefetcht0 byte ptr [rsi+3C0h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jz      loc_40B0C6^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^prefetchw byte ptr [rdi+340h]^^^prefetchw byte ptr [rdi+380h]^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jnz     loc_40AF50^^^jmp     loc_40B0C6^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rsi+380h]^^^prefetcht0 byte ptr [rsi+3C0h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jz      short loc_40B0C6^^^dec     rcx^^^mov     rax, [rsi]^^^mov     rbx, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^prefetcht0 byte ptr [rdi+340h]^^^prefetcht0 byte ptr [rdi+380h]^^^mov     [rdi], rax^^^mov     [rdi+8], rbx^^^mov     [rdi+10h], r9^^^mov     [rdi+18h], r10^^^mov     [rdi+20h], r11^^^mov     [rdi+28h], r12^^^mov     [rdi+30h], r13^^^mov     [rdi+38h], r14^^^lea     rsi, [rsi+40h]^^^lea     rdi, [rdi+40h]^^^jnz     loc_40B010^^^mov     rbx, [rsp+var_20]^^^mov     r12, [rsp+var_18]^^^mov     r13, [rsp+var_10]^^^mov     r14, [rsp+var_8]^^^sub     rdx, r8^^^test    rdx, 0FFFFFFFFFFFFFFC0h^^^jnz     short loc_40B100^^^and     edx, 3Fh^^^jnz     loc_40ADA6^^^mov     rax, rdi^^^retn^^^mov     rcx, rdx^^^shr     rcx, 7^^^jz      loc_40B1E5^^^mov     [rsp+var_8], r14^^^mov     [rsp+var_10], r13^^^mov     [rsp+var_18], r12^^^nop     dword ptr [rax+00h]^^^prefetchnta byte ptr [rsi+300h]^^^prefetchnta byte ptr [rsi+340h]^^^dec     rcx^^^mov     rax, [rsi]^^^mov     r8, [rsi+8]^^^mov     r9, [rsi+10h]^^^mov     r10, [rsi+18h]^^^mov     r11, [rsi+20h]^^^mov     r12, [rsi+28h]^^^mov     r13, [rsi+30h]^^^mov     r14, [rsi+38h]^^^movnti  qword ptr [rdi], rax^^^movnti  qword ptr [rdi+8], r8^^^movnti  qword ptr [rdi+10h], r9^^^movnti  qword ptr [rdi+18h], r10^^^movnti  qword ptr [rdi+20h], r11^^^movnti  qword ptr [rdi+28h], r12^^^movnti  qword ptr [rdi+30h], r13^^^movnti  qword ptr [rdi+38h], r14^^^mov     rax, [rsi+40h]^^^mov     r8, [rsi+48h]^^^mov     r9, [rsi+50h]^^^mov     r10, [rsi+58h]^^^mov     r11, [rsi+60h]^^^mov     r12, [rsi+68h]^^^mov     r13, [rsi+70h]^^^mov     r14, [rsi+78h]^^^movnti  qword ptr [rdi+40h], rax^^^movnti  qword ptr [rdi+48h], r8^^^movnti  qword ptr [rdi+50h], r9^^^movnti  qword ptr [rdi+58h], r10^^^movnti  qword ptr [rdi+60h], r11^^^movnti  qword ptr [rdi+68h], r12^^^movnti  qword ptr [rdi+70h], r13^^^movnti  qword ptr [rdi+78h], r14^^^lea     rsi, [rsi+80h]^^^lea     rdi, [rdi+80h]^^^jnz     loc_40B120^^^sfence^^^mov     r12, [rsp+var_18]^^^mov     r13, [rsp+var_10]^^^mov     r14, [rsp+var_8]^^^and     edx, 7Fh^^^jnz     loc_40ADA6^^^mov     rax, rdi^^^retn^^^
sub_47476F$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
_IO_wpadn$$$push    r14^^^push    r13^^^mov     r13d, offset blanks_0^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 40h^^^cmp     esi, 20h^^^jz      short loc_4268C7^^^cmp     esi, 30h^^^mov     r13d, offset zeroes_0^^^jz      short loc_4268C7^^^mov     [rsp+68h+var_2C], esi^^^mov     [rsp+68h+var_30], esi^^^mov     r13, rsp^^^mov     [rsp+68h+var_34], esi^^^mov     [rsp+68h+var_38], esi^^^mov     [rsp+68h+var_3C], esi^^^mov     [rsp+68h+var_40], esi^^^mov     [rsp+68h+var_44], esi^^^mov     [rsp+68h+var_48], esi^^^mov     [rsp+68h+var_4C], esi^^^mov     [rsp+68h+var_50], esi^^^mov     [rsp+68h+var_54], esi^^^mov     [rsp+68h+var_58], esi^^^mov     [rsp+68h+var_5C], esi^^^mov     [rsp+68h+var_60], esi^^^mov     [rsp+68h+var_64], esi^^^mov     [rsp+68h+var_68], esi^^^cmp     edx, 0Fh^^^jle     short loc_426919^^^lea     ebx, [rdx-10h]^^^lea     r14d, [rdx-20h]^^^xor     ebp, ebp^^^mov     eax, ebx^^^and     eax, 0FFFFFFF0h^^^sub     r14d, eax^^^jmp     short loc_4268EA^^^mov     edx, ebx^^^sub     ebx, 10h^^^cmp     ebx, r14d^^^jz      short loc_426920^^^mov     rax, [r12+0D8h]^^^mov     edx, 10h^^^mov     rsi, r13^^^mov     rdi, r12^^^call    qword ptr [rax+38h]^^^add     rbp, rax^^^cmp     rax, 10h^^^jz      short loc_4268E0^^^add     rsp, 40h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^xor     ebp, ebp^^^nop     dword ptr [rax+rax+00h]^^^test    edx, edx^^^jle     short loc_426909^^^mov     rax, [r12+0D8h]^^^mov     rsi, r13^^^mov     rdi, r12^^^movsxd  rdx, edx^^^call    qword ptr [rax+38h]^^^add     rsp, 40h^^^add     rbp, rax^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
wmempcpy$$$shl     rdx, 2          ^^^jmp     mempcpy^^^
_L_lock_11417$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_407E28^^^
_IO_file_seekoff_maybe_mmap$$$mov     rax, [rdi+0D8h]^^^push    rbx^^^mov     rbx, rdi^^^call    qword ptr [rax+80h]^^^test    rax, rax^^^js      short loc_428F80^^^mov     [rbx+90h], rax^^^pop     rbx^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^pop     rbx^^^retn^^^
mallinfo$$$mov     ecx, cs:__libc_malloc_initialized^^^push    rbx^^^mov     rbx, rdi^^^test    ecx, ecx^^^js      short loc_4093B8^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40936E^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_14350^^^jmp     short loc_40937B^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_14350^^^mov     esi, offset main_arena^^^mov     rdi, rbx^^^call    mALLINFo^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4093A0^^^lock dec cs:main_arena^^^jnz     _L_unlock_14356^^^jmp     short loc_4093AC^^^dec     cs:main_arena^^^jnz     _L_unlock_14356^^^mov     rax, rbx^^^pop     rbx^^^retn^^^call    ptmalloc_init_part_8^^^nop     dword ptr [rax]^^^jmp     short loc_40934E^^^
____strtof_l_internal$$$push    r15^^^mov     r9, rsi^^^mov     r8, rcx^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 118h^^^test    edx, edx^^^mov     rax, [rcx+8]^^^mov     [rsp+148h+var_110], rdi^^^jnz     loc_47D60C^^^mov     [rsp+148h+var_F8], 0^^^mov     [rsp+148h+var_100], 0^^^mov     r12, [rax+40h]^^^mov     [rsp+148h+var_130], r8^^^mov     [rsp+148h+var_138], r9^^^mov     rdi, r12^^^call    strlen^^^test    rax, rax^^^mov     r11, rax^^^mov     r8, [rsp+148h+var_130]^^^mov     r9, [rsp+148h+var_138]^^^jz      loc_47D6EE^^^mov     rdx, [rsp+148h+var_110]^^^mov     [rsp+148h+var_58], 0^^^mov     rax, [r8+68h]^^^sub     rdx, 1^^^jmp     short loc_47B5DB^^^mov     rdx, rbx^^^movzx   ebp, byte ptr [rdx+1]^^^lea     rbx, [rdx+1]^^^movsx   rcx, bpl^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_47B5D8^^^cmp     bpl, 2Dh^^^jz      loc_47C148^^^cmp     bpl, 2Bh^^^mov     ecx, ebp^^^mov     [rsp+148h+var_DC], 0^^^jz      loc_47C160^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      loc_47C734^^^cmp     al, bpl^^^mov     edx, 1^^^jz      short loc_47B63F^^^jmp     loc_47B8C0^^^add     rdx, 1^^^cmp     sil, [rbx+rdx-1]^^^jnz     loc_47B8C0^^^movzx   esi, byte ptr [r12+rdx]^^^test    sil, sil^^^jnz     short loc_47B630^^^movzx   edx, byte ptr [rbx+rdx]^^^cmp     dl, 2Fh^^^jle     loc_47B8C0^^^cmp     dl, 39h^^^jg      loc_47B8C0^^^cmp     bpl, 30h^^^mov     rdx, [r8+70h]^^^jz      loc_47C240^^^mov     byte ptr [rsp+148h+var_F0], 0^^^mov     byte ptr [rsp+148h+var_E8], 1^^^mov     dword ptr [rsp+148h+var_108], 0Ah^^^cmp     [rsp+148h+var_100], 0^^^jnz     loc_47D689^^^cmp     bpl, 30h^^^mov     r14, rbx^^^jnz     short loc_47B6A8^^^nop     dword ptr [rax+00h]^^^add     r14, 1^^^movzx   ebp, byte ptr [r14]^^^cmp     bpl, 30h^^^jz      short loc_47B698^^^mov     ecx, ebp^^^movsx   rsi, bpl^^^xor     r15d, r15d^^^mov     r13, r14^^^mov     edi, [rdx+rsi*4]^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^ja      loc_47B940^^^lea     esi, [rbp-30h]^^^cmp     sil, 9^^^jbe     loc_47B928^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^jz      loc_47B910^^^cmp     [rsp+148h+var_100], 0^^^jnz     loc_47D63B^^^cmp     rbx, r13^^^jb      loc_47C280^^^cmp     r15, 1^^^sbb     rcx, rcx^^^test    al, al^^^jz      short loc_47B729^^^cmp     [r13+0], al^^^mov     rbx, r15^^^jnz     short loc_47B780^^^xor     eax, eax^^^jmp     short loc_47B71F^^^add     rax, 1^^^cmp     dl, [r13+rax+0]^^^jnz     loc_47C4D0^^^movzx   edx, byte ptr [r12+rax+1]^^^test    dl, dl^^^jnz     short loc_47B710^^^add     r13, r11^^^xor     eax, eax^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^movzx   ebp, byte ptr [r13+0]^^^jnz     loc_47B9F9^^^mov     rdx, [r8+70h]^^^jmp     short loc_47B763^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_47B756^^^cmp     bpl, 30h^^^cmovnz  rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     esi, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     sil, 9^^^jbe     short loc_47B748^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     short loc_47B748^^^test    rbx, rbx^^^js      loc_47D4A8^^^mov     rax, [r8+70h]^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 70h^^^jnz     loc_47BA70^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^jz      loc_47BA70^^^movzx   r10d, byte ptr [r13+1]^^^cmp     r10b, 2Dh^^^jz      loc_47C4EA^^^cmp     r10b, 2Bh^^^jz      loc_47C345^^^lea     rdi, [r13+1]^^^mov     dword ptr [rsp+148h+var_F8], 0^^^lea     eax, [r10-30h]^^^cmp     al, 9^^^ja      loc_47BA78^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^jnz     loc_47C970^^^mov     eax, dword ptr [rsp+148h+var_F8]^^^test    eax, eax^^^jz      loc_47C5E7^^^mov     rax, 7FFFFFFFFFFFFFC2h^^^cmp     r15, rax^^^ja      loc_47D439^^^lea     rax, [r15+3Dh]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+148h+var_110], rax^^^imul    rbp^^^mov     rax, [rsp+148h+var_110]^^^sar     rax, 3Fh^^^mov     rbp, rdx^^^sar     rbp, 2^^^sub     rbp, rax^^^mov     rax, [rsp+148h+var_110]^^^mov     rdx, 6666666666666667h^^^mov     rsi, [rsp+148h+var_58]^^^imul    rdx^^^mov     rax, [rsp+148h+var_110]^^^sar     rax, 3Fh^^^sar     rdx, 2^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^mov     rdx, [rsp+148h+var_110]^^^add     rax, rax^^^sub     rdx, rax^^^nop     dword ptr [rax]^^^cmp     rbp, rsi^^^jl      loc_47CE0A^^^movsx   r10d, r10b^^^jz      loc_47CDFA^^^sub     r10d, 30h^^^movsxd  r10, r10d^^^lea     rax, [rsi+rsi*4]^^^add     rdi, 1^^^lea     rsi, [r10+rax*2]^^^mov     [rsp+148h+var_58], rsi^^^movzx   r10d, byte ptr [rdi]^^^lea     eax, [r10-30h]^^^cmp     al, 9^^^jbe     short loc_47B868^^^mov     r10d, dword ptr [rsp+148h+var_F8]^^^test    r10d, r10d^^^jz      loc_47BA7B^^^neg     rsi^^^mov     [rsp+148h+var_58], rsi^^^jmp     loc_47BA7B^^^lea     edx, [rbp-30h]^^^cmp     dl, 9^^^jbe     loc_47B65F^^^mov     rax, cs:off_499B10^^^movsx   rbp, bpl^^^movzx   eax, byte ptr [rax+rbp*4]^^^cmp     al, 69h^^^jz      loc_47C500^^^cmp     al, 6Eh^^^jz      loc_47C57C^^^test    r9, r9^^^xorps   xmm0, xmm0^^^jz      short loc_47B8FB^^^mov     rdi, [rsp+148h+var_110]^^^mov     [r9], rdi^^^add     rsp, 118h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movsx   rsi, bpl^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^ja      loc_47B6DA^^^nop     dword ptr [rax+00h]^^^add     r15, 1^^^movzx   ebp, byte ptr [r13+1]^^^add     r13, 1^^^mov     ecx, ebp^^^jmp     loc_47B6C2^^^cmp     dil, 60h^^^mov     r10d, edi^^^jg      loc_47C318^^^test    al, al^^^jz      loc_47BA29^^^xor     esi, esi^^^cmp     al, cl^^^jz      loc_47BA1E^^^cmp     byte ptr [rsp+148h+var_E8], 0^^^jz      loc_47D006^^^cmp     r10b, 65h^^^jnz     short loc_47B981^^^xor     r15d, r15d^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^mov     r13, r14^^^jz      loc_47B6C2^^^mov     rcx, [rsp+148h+var_F8]^^^mov     rdx, [rsp+148h+var_100]^^^mov     rsi, r14^^^mov     rdi, rbx^^^mov     [rsp+148h+var_138], r9^^^call    __correctly_grouped_prefixmb^^^mov     r9, [rsp+148h+var_138]^^^test    r9, r9^^^jz      short loc_47B9C0^^^cmp     rbx, rax^^^jz      loc_47D28E^^^mov     [rsp+148h+var_110], rax^^^mov     rdi, rax^^^mov     [r9], rdi^^^nop     dword ptr [rax+00000000h]^^^mov     r8d, [rsp+148h+var_DC]^^^xorps   xmm0, xmm0^^^test    r8d, r8d^^^jz      loc_47B8FB^^^movss   xmm0, cs:dword_4B27CC^^^jmp     loc_47B8FB^^^cmp     bpl, 30h^^^jz      short loc_47B9EC^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^cmovz   rcx, rax^^^add     r13, 1^^^add     rax, 1^^^movzx   ebp, byte ptr [r13+0]^^^lea     edx, [rbp-30h]^^^lea     rbx, [rax+r15]^^^cmp     dl, 9^^^ja      loc_47B780^^^jmp     short loc_47B9DE^^^add     rsi, 1^^^cmp     dil, [r14+rsi]^^^jnz     loc_47B95F^^^movzx   edi, byte ptr [r12+rsi+1]^^^test    dil, dil^^^jnz     short loc_47BA10^^^cmp     rbx, r14^^^jnz     loc_47C4BE^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^jz      loc_47C4BE^^^movzx   esi, byte ptr [r14+r11]^^^xor     r15d, r15d^^^mov     r13, r14^^^lea     edi, [rsi-30h]^^^cmp     dil, 9^^^jbe     loc_47B6C2^^^movsx   rsi, sil^^^mov     esi, [rdx+rsi*4]^^^sub     esi, 61h^^^cmp     sil, 5^^^jbe     loc_47B6C2^^^jmp     loc_47B96A^^^cmp     al, 65h^^^jz      loc_47C332^^^mov     rdi, r13^^^cmp     rbx, r15^^^xchg    ax, ax^^^ja      loc_47C118^^^test    rbx, rbx^^^jnz     loc_47C170^^^test    r9, r9^^^jz      short loc_47BA97^^^mov     [r9], rdi^^^test    rbx, rbx^^^jz      loc_47B9C0^^^test    rcx, rcx^^^mov     r13, r14^^^jz      loc_47BB6A^^^movzx   esi, byte ptr [r12]^^^movzx   edi, byte ptr [r12+1]^^^jmp     short loc_47BAC4^^^add     r14, 1^^^cmp     [r14], sil^^^jnz     short loc_47BAC0^^^test    dil, dil^^^jz      short loc_47BAF5^^^xor     eax, eax^^^cmp     [r14+1], dil^^^jz      short loc_47BAEB^^^jmp     short loc_47BAC0^^^add     rax, 1^^^cmp     dl, [r14+rax+1]^^^jnz     short loc_47BAC0^^^movzx   edx, byte ptr [r12+rax+2]^^^test    dl, dl^^^jnz     short loc_47BAE0^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^mov     rdx, 7FFFFFFFFFFFFFFFh^^^cmovnz  rax, rdx^^^cmp     rcx, rax^^^ja      loc_47D77C^^^mov     rax, [rsp+148h+var_58]^^^mov     rdx, 8000000000000000h^^^add     rdx, rax^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^jz      loc_47CDAB^^^cmp     rcx, rdx^^^ja      loc_47D795^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^lea     rdx, ds:0[rcx*4]^^^lea     r13, [rcx+r11]^^^cmovnz  rdx, rcx^^^add     r13, r14^^^sub     rbx, rcx^^^sub     rax, rdx^^^mov     [rsp+148h+var_58], rax^^^cmp     dword ptr [rsp+148h+var_108], 10h^^^jz      loc_47C35B^^^mov     rax, [rsp+148h+var_58]^^^test    rax, rax^^^js      loc_47C9AB^^^mov     rdx, rbx^^^sub     rdx, r15^^^cmp     rdx, rax^^^cmovg   rdx, rax^^^lea     r14, [rdx+r15]^^^sub     rax, rdx^^^mov     edx, 27h^^^mov     [rsp+148h+var_58], rax^^^sub     rdx, r14^^^cmp     rax, rdx^^^jg      loc_47D4ED^^^cmp     rax, 0FFFFFFFFFFFFFFD4h^^^jl      loc_47D4DA^^^test    r14, r14^^^mov     dword ptr [rsp+148h+var_110], 0^^^jnz     loc_47C73B^^^cmp     rbx, r14^^^jbe     loc_47D4C1^^^mov     rcx, [rsp+148h+var_58]^^^test    rcx, rcx^^^jg      loc_47D4C1^^^mov     esi, 1Ah^^^sub     esi, dword ptr [rsp+148h+var_110]^^^mov     edx, 55555556h^^^mov     byte ptr [rsp+148h+var_D0], 0^^^mov     [rsp+148h+var_CC], 0^^^mov     eax, esi^^^sar     esi, 1Fh^^^imul    edx^^^sub     edx, esi^^^movsxd  rdx, edx^^^lea     rax, [r14+rdx+2]^^^cmp     rbx, rax^^^jle     short loc_47BC29^^^mov     rbx, rax^^^mov     byte ptr [rsp+148h+var_D0], 1^^^mov     [rsp+148h+var_CC], 1^^^sub     ebx, r14d^^^lea     rdx, [rsp+148h+var_C8]^^^lea     r10, [rsp+148h+var_98]^^^mov     r12d, ebx^^^mov     dword ptr [rsp+148h+var_E8], ebx^^^mov     ebp, offset _fpioconst_pow10^^^sub     r12d, ecx^^^mov     [rsp+148h+var_108], rdx^^^mov     [rsp+148h+var_F0], rdx^^^mov     [rsp+148h+var_F8], r10^^^mov     r14, r10^^^mov     ebx, 1^^^xor     r15d, r15d^^^mov     [rsp+148h+var_D8], r11^^^jmp     short loc_47BC9F^^^mov     r15, [rbp+8]^^^mov     rax, [rbp+0]^^^mov     rdi, r14^^^sub     r15, 1^^^lea     rsi, unk_4AEDC8[rax*8]^^^lea     rdx, ds:0[r15*8]^^^call    memcpy^^^add     ebx, ebx^^^add     rbp, 18h^^^test    r12d, r12d^^^jz      short loc_47BCFE^^^test    r12d, ebx^^^jz      short loc_47BC94^^^xor     r12d, ebx^^^test    r15, r15^^^jz      short loc_47BC70^^^mov     rax, [rbp+0]^^^mov     rdx, [rbp+8]^^^mov     r8, r15^^^mov     rdi, [rsp+148h+var_F0]^^^mov     rcx, r14^^^lea     rsi, unk_4AEDC8[rax*8]^^^sub     rdx, 1^^^call    __mpn_mul^^^mov     rdx, [rbp+8]^^^test    rax, rax^^^lea     r15, [r15+rdx-1]^^^jnz     loc_47C4D8^^^mov     rax, r14^^^sub     r15, 1^^^add     ebx, ebx^^^add     rbp, 18h^^^test    r12d, r12d^^^mov     r14, [rsp+148h+var_F0]^^^mov     [rsp+148h+var_F0], rax^^^jnz     short loc_47BC9F^^^cmp     r14, [rsp+148h+var_108]^^^mov     r11, [rsp+148h+var_D8]^^^jz      loc_47D180^^^mov     rdx, [rsp+148h+var_100]^^^mov     esi, dword ptr [rsp+148h+var_E8]^^^lea     r8, [rsp+148h+var_58]^^^lea     rcx, [rsp+148h+var_68]^^^mov     r9, r11^^^mov     rdi, r13^^^mov     [rsp+148h+var_148], rdx^^^mov     rdx, [rsp+148h+var_108]^^^call    str_to_mpn_isra_0^^^lea     r10, [r15-1]^^^bsr     rbx, [rsp+r10*8+148h+var_98]^^^mov     [rsp+148h+var_100], r10^^^xor     rbx, 3Fh^^^test    ebx, ebx^^^jle     short loc_47BD87^^^mov     rsi, [rsp+148h+var_F8]^^^mov     ecx, ebx^^^mov     rdx, r15^^^mov     rdi, rsi^^^call    __mpn_lshift^^^mov     rsi, [rsp+148h+var_108]^^^mov     rdx, [rsp+148h+var_68]^^^mov     ecx, ebx^^^mov     rdi, rsi^^^call    __mpn_lshift^^^test    rax, rax^^^jnz     loc_47C62F^^^movsxd  rbx, dword ptr [rsp+148h+var_110]^^^cmp     r15, 1^^^mov     [rsp+148h+var_58], rbx^^^jz      loc_47CBFA^^^cmp     r15, 2^^^jz      loc_47C9BD^^^mov     r10, [rsp+148h+var_100]^^^mov     rdx, [rsp+148h+var_68]^^^mov     rax, r15^^^mov     rdi, [rsp+148h+var_108]^^^lea     r13, [r15-2]^^^mov     rbp, [rsp+r10*8+148h+var_98]^^^mov     r10, [rsp+148h+var_F8]^^^sub     rax, rdx^^^mov     r12, [rsp+r13*8+148h+var_98]^^^lea     rsi, [r10+rax*8]^^^call    __mpn_cmp^^^test    eax, eax^^^mov     rax, [rsp+148h+var_68]^^^jle     short loc_47BE06^^^mov     [rsp+rax*8+148h+var_C8], 0^^^add     rax, 1^^^mov     [rsp+148h+var_68], rax^^^cmp     rax, r15^^^jge     loc_47CFA7^^^mov     r14, r15^^^mov     ecx, dword ptr [rsp+148h+var_110]^^^sub     r14, rax^^^mov     rdx, r14^^^shl     rdx, 6^^^test    ecx, ecx^^^jle     loc_47D26C^^^add     rbx, rdx^^^cmp     rbx, 18h^^^jg      loc_47D1B9^^^cmp     r14, 1^^^jnz     loc_47D59C^^^mov     [rsp+148h+var_48], 0^^^mov     dword ptr [rsp+148h+var_D8], 0^^^mov     edx, r14d^^^shl     edx, 6^^^add     dword ptr [rsp+148h+var_110], edx^^^test    eax, eax^^^mov     edx, eax^^^jle     short loc_47BE8F^^^mov     rcx, [rsp+148h+var_108]^^^lea     eax, [rdx-1]^^^movsxd  rdx, edx^^^add     rdx, r14^^^lea     rdx, [rcx+rdx*8]^^^movsxd  rcx, eax^^^sub     eax, 1^^^mov     rcx, [rsp+rcx*8+148h+var_C8]^^^mov     [rdx], rcx^^^sub     rdx, 8^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_47BE75^^^test    r14, r14^^^js      short loc_47BEF1^^^lea     rsi, [r14+1]^^^mov     rcx, rsi^^^shr     rcx, 1^^^cmp     rsi, 3^^^lea     rdi, [rcx+rcx]^^^jbe     loc_47D600^^^test    rdi, rdi^^^jz      loc_47D600^^^pxor    xmm0, xmm0^^^mov     r8, [rsp+148h+var_108]^^^xor     eax, eax^^^mov     rdx, rax^^^add     rax, 1^^^shl     rdx, 4^^^cmp     rcx, rax^^^movdqa  xmmword ptr [r8+rdx], xmm0^^^ja      short loc_47BEC0^^^cmp     rsi, rdi^^^jz      short loc_47BEF1^^^mov     rax, [rsp+148h+var_108]^^^mov     qword ptr [rax+rdi*8], 0^^^add     rdi, 1^^^cmp     r14, rdi^^^jge     short loc_47BEE0^^^cmp     dword ptr [rsp+148h+var_110], 18h^^^mov     [rsp+r15*8+148h+var_98], 0^^^mov     rcx, [rsp+r15*8+148h+var_C8]^^^jg      loc_47D38D^^^lea     r10, [r15+1]^^^mov     r14d, r15d^^^mov     [rsp+148h+var_E8], r10^^^lea     r10d, [r14-1]^^^add     r14d, 1^^^sub     r14d, r15d^^^mov     dword ptr [rsp+148h+var_F0], r10d^^^lea     r10d, [r15-2]^^^mov     [rsp+148h+var_D0], r10d^^^nop     dword ptr [rax]^^^cmp     rcx, rbp^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_47BF99^^^mov     r10, [rsp+148h+var_100]^^^mov     rdx, rcx^^^mov     rbx, [rsp+r10*8+148h+var_C8]^^^mov     rax, rbx^^^div     rbp^^^mov     rbx, rax^^^mov     rcx, rdx^^^mov     rax, r12^^^mul     rbx^^^jmp     short loc_47BF7F^^^xor     esi, esi^^^cmp     rax, r12^^^setb    sil^^^sub     rax, r12^^^sub     rdx, rsi^^^cmp     rdx, rcx^^^ja      short loc_47BF90^^^jnz     short loc_47BF99^^^cmp     rax, [rsp+r13*8+148h+var_C8]^^^jbe     short loc_47BF99^^^sub     rbx, 1^^^add     rcx, rbp^^^jnb     short loc_47BF70^^^mov     rdx, [rsp+148h+var_E8]^^^mov     rsi, [rsp+148h+var_F8]^^^mov     rcx, rbx^^^mov     rdi, [rsp+148h+var_108]^^^call    __mpn_submul_1^^^cmp     [rsp+r15*8+148h+var_C8], rax^^^jz      short loc_47BFDC^^^mov     rsi, [rsp+148h+var_108]^^^mov     rdx, [rsp+148h+var_F8]^^^mov     rcx, r15^^^mov     rdi, rsi^^^call    __mpn_add_n^^^test    rax, rax^^^jz      loc_47D5CE^^^sub     rbx, 1^^^mov     r10, [rsp+148h+var_100]^^^mov     edx, dword ptr [rsp+148h+var_F0]^^^mov     eax, [rsp+148h+var_D0]^^^mov     rcx, [rsp+r10*8+148h+var_C8]^^^test    edx, edx^^^mov     [rsp+r15*8+148h+var_C8], rcx^^^jg      short loc_47C002^^^jmp     short loc_47C023^^^mov     eax, edx^^^movsxd  rdx, eax^^^test    eax, eax^^^mov     rsi, [rsp+rdx*8+148h+var_C8]^^^lea     edx, [r14+rax]^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+148h+var_C8], rsi^^^lea     edx, [rax-1]^^^jg      short loc_47C000^^^mov     eax, dword ptr [rsp+148h+var_110]^^^mov     [rsp+148h+var_C8], 0^^^test    eax, eax^^^jnz     loc_47C690^^^test    rbx, rbx^^^jz      loc_47C6B0^^^bsr     rdx, rbx^^^mov     rax, [rsp+148h+var_58]^^^xor     edx, 3Fh^^^movsxd  rsi, edx^^^sub     rax, rsi^^^mov     esi, 40h^^^sub     esi, edx^^^mov     [rsp+148h+var_58], rax^^^cmp     esi, 18h^^^jle     loc_47D7AE^^^lea     r10d, [rdx+18h]^^^mov     ecx, 28h^^^sub     ecx, edx^^^mov     rdx, rbx^^^mov     dword ptr [rsp+148h+var_D8], r10d^^^shr     rdx, cl^^^lea     r10, [rsp+148h+var_48]^^^mov     [rsp+148h+var_48], rdx^^^movsxd  rdx, r15d^^^mov     ecx, r15d^^^cmp     [rsp+rdx*8+148h+var_C8], 0^^^not     ecx^^^jnz     short loc_47C0D5^^^mov     edx, ecx^^^shr     edx, 1Fh^^^test    dl, dl^^^jz      short loc_47C0D5^^^lea     edx, [r15-1]^^^mov     r15d, edx^^^sub     edx, 1^^^movsxd  rcx, r15d^^^cmp     [rsp+rcx*8+148h+var_C8], 0^^^mov     ecx, r15d^^^not     ecx^^^jnz     short loc_47C0D5^^^test    r15d, r15d^^^jns     short loc_47C0B7^^^mov     r8d, 3Fh^^^mov     r9d, [rsp+148h+var_CC]^^^sub     r8d, dword ptr [rsp+148h+var_D8]^^^shr     ecx, 1Fh^^^lea     rsi, [rax-1]^^^or      r9d, ecx^^^mov     edx, [rsp+148h+var_DC]^^^movsxd  r8, r8d^^^mov     rcx, rbx^^^mov     rdi, r10^^^call    round_and_return^^^jmp     loc_47B8FB^^^sub     r13, 1^^^sub     rbx, 1^^^cmp     byte ptr [r13-1], 30h^^^jz      short loc_47C110^^^cmp     rbx, r15^^^jnb     loc_47BA86^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 3C7h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noInt_no^^^call    __assert_fail^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     [rsp+148h+var_DC], 1^^^mov     ecx, ebp^^^jmp     loc_47B60C^^^movzx   ebp, byte ptr [rdx+2]^^^lea     rbx, [rdx+2]^^^mov     ecx, ebp^^^jmp     loc_47B60C^^^cmp     rbx, r15^^^jnz     loc_47BA8F^^^cmp     [rsp+148h+var_58], 0^^^jns     loc_47BA8F^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^lea     rdx, [r13-1]^^^jz      loc_47C222^^^mov     rax, [r8+68h]^^^jmp     short loc_47C1D3^^^mov     rsi, [rsp+148h+var_58]^^^sub     r15, 1^^^add     rsi, 4^^^sub     rbx, 1^^^mov     [rsp+148h+var_58], rsi^^^jz      loc_47BA8F^^^shr     rsi, 3Fh^^^test    sil, sil^^^jz      loc_47BA8F^^^sub     rdx, 1^^^movzx   esi, byte ptr [rdx]^^^movsx   r10, sil^^^test    byte ptr [rax+r10*2+1], 10h^^^jz      short loc_47C1CF^^^cmp     sil, 30h^^^jz      short loc_47C1A0^^^jmp     loc_47BA8F^^^mov     rax, [rsp+148h+var_58]^^^sub     r15, 1^^^add     rax, 1^^^sub     rbx, 1^^^mov     [rsp+148h+var_58], rax^^^jz      loc_47BA8F^^^shr     rax, 3Fh^^^test    al, al^^^jz      loc_47BA8F^^^sub     rdx, 1^^^movzx   eax, byte ptr [rdx]^^^movsx   esi, al^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_47C21E^^^cmp     al, 30h^^^jz      short loc_47C1F0^^^jmp     loc_47BA8F^^^movsx   rsi, byte ptr [rbx+1]^^^cmp     dword ptr [rdx+rsi*4], 78h^^^jnz     loc_47B66D^^^movzx   ebp, byte ptr [rbx+2]^^^mov     byte ptr [rsp+148h+var_F0], 1^^^add     rbx, 2^^^mov     byte ptr [rsp+148h+var_E8], 0^^^mov     [rsp+148h+var_F8], 0^^^mov     dword ptr [rsp+148h+var_108], 10h^^^mov     ecx, ebp^^^jmp     loc_47B67F^^^cmp     [rsp+148h+var_F8], 0^^^jz      loc_47B6EF^^^mov     rcx, [rsp+148h+var_F8]^^^mov     rdx, [rsp+148h+var_100]^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     [rsp+148h+var_130], r8^^^mov     [rsp+148h+var_138], r9^^^mov     [rsp+148h+var_128], r11^^^call    __correctly_grouped_prefixmb^^^cmp     rax, r13^^^mov     r8, [rsp+148h+var_130]^^^mov     r9, [rsp+148h+var_138]^^^mov     r11, [rsp+148h+var_128]^^^jz      loc_47CE71^^^cmp     rbx, rax^^^jz      loc_47B8EB^^^cmp     r14, rax^^^ja      loc_47C5D6^^^mov     rdi, r14^^^mov     ebx, 0^^^jnb     loc_47D281^^^nop     dword ptr [rax+rax+00000000h]^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rbx+1]^^^sub     ecx, 30h^^^cmp     cl, 9^^^cmovbe  rbx, rdx^^^add     rdi, 1^^^cmp     rdi, rax^^^jnz     short loc_47C2F0^^^mov     r15, rbx^^^xor     ecx, ecx^^^jmp     loc_47BA8F^^^cmp     byte ptr [rsp+148h+var_E8], 0^^^jnz     loc_47B94D^^^cmp     dil, 66h^^^jle     loc_47B6C2^^^jmp     loc_47B94D^^^cmp     byte ptr [rsp+148h+var_E8], 0^^^jz      loc_47BA78^^^nop     dword ptr [rax]^^^jmp     loc_47B7A8^^^lea     rdi, [r13+2]^^^movzx   r10d, byte ptr [r13+2]^^^mov     dword ptr [rsp+148h+var_F8], 0^^^jmp     loc_47B7CD^^^movzx   edx, byte ptr [r13+0]^^^mov     rdi, [r8+68h]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jnz     short loc_47C399^^^nop^^^add     r13, 1^^^movzx   edx, byte ptr [r13+0]^^^movsx   rax, dl^^^test    byte ptr [rdi+rax*2+1], 10h^^^jz      short loc_47C370^^^jmp     short loc_47C399^^^add     r13, 1^^^movzx   edx, byte ptr [r13+0]^^^cmp     dl, 30h^^^jz      short loc_47C390^^^movsx   eax, dl^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_47C650^^^mov     rax, [r8+70h]^^^movsx   rdx, dl^^^add     r13, 1^^^mov     eax, [rax+rdx*4]^^^sub     eax, 57h^^^cdqe^^^mov     r9d, ds:nbits_12637[rax*4]^^^test    r9d, r9d^^^jz      loc_47D51D^^^mov     ecx, 18h^^^mov     rdx, rax^^^sub     ecx, r9d^^^shl     rdx, cl^^^mov     rcx, [rsp+148h+var_58]^^^mov     [rsp+148h+var_48], rdx^^^test    rcx, rcx^^^js      loc_47D047^^^mov     rax, 7FFFFFFFFFFFFFFFh^^^movsxd  rsi, r9d^^^sub     rax, rcx^^^sub     rax, rsi^^^lea     rsi, [rax+4]^^^add     rax, 1^^^cmovs   rax, rsi^^^sar     rax, 2^^^cmp     r15, rax^^^ja      loc_47D5B5^^^lea     eax, [r9-1]^^^cdqe^^^lea     rsi, [rax+r15*4-4]^^^add     rsi, rcx^^^sub     rbx, 1^^^mov     [rsp+148h+var_58], rsi^^^jz      loc_47CD8D^^^mov     eax, 17h^^^sub     eax, r9d^^^jmp     short loc_47C47E^^^movsxd  r9, r9d^^^add     r13, 1^^^cmp     eax, 2^^^jle     loc_47CDB4^^^lea     ecx, [rax-3]^^^sub     eax, 4^^^shl     r9, cl^^^or      rdx, r9^^^sub     rbx, 1^^^mov     [rsp+148h+var_48], rdx^^^jz      loc_47CD8D^^^movzx   ecx, byte ptr [r13+0]^^^movsx   r9, cl^^^test    byte ptr [rdi+r9*2+1], 10h^^^jnz     short loc_47C497^^^add     r13, r11^^^movzx   ecx, byte ptr [r13+0]^^^movsx   r9d, cl^^^sub     r9d, 30h^^^cmp     r9d, 9^^^jbe     short loc_47C450^^^mov     r9, [r8+70h]^^^movsx   rcx, cl^^^add     r13, 1^^^mov     r9d, [r9+rcx*4]^^^sub     r9d, 57h^^^movsxd  r9, r9d^^^jmp     short loc_47C457^^^mov     r13, r14^^^xor     r15d, r15d^^^jmp     loc_47B6C2^^^mov     rbx, r15^^^jmp     loc_47B780^^^mov     rax, r14^^^mov     r14, [rsp+148h+var_F0]^^^mov     [rsp+148h+var_F0], rax^^^jmp     loc_47BC94^^^lea     rdi, [r13+2]^^^movzx   r10d, byte ptr [r13+2]^^^mov     dword ptr [rsp+148h+var_F8], 1^^^jmp     loc_47B7CD^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aInf^^^mov     rdi, rbx^^^mov     [rsp+148h+var_138], r9^^^call    sub_4003B0^^^test    eax, eax^^^mov     r9, [rsp+148h+var_138]^^^jnz     loc_47B8EB^^^test    r9, r9^^^jz      short loc_47C55B^^^lea     rbp, [rbx+3]^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 5^^^mov     esi, offset aInity^^^add     rbx, 8^^^mov     rdi, rbp^^^call    sub_4003B0^^^mov     r9, [rsp+148h+var_138]^^^test    eax, eax^^^cmovz   rbp, rbx^^^mov     [r9], rbp^^^mov     edi, [rsp+148h+var_DC]^^^movss   xmm0, cs:dword_4B27C0^^^test    edi, edi^^^jz      loc_47B8FB^^^movss   xmm0, cs:dword_4B27C4^^^jmp     loc_47B8FB^^^mov     ecx, offset _nl_C_locobj^^^mov     edx, 3^^^mov     esi, offset aNan^^^mov     rdi, rbx^^^mov     [rsp+148h+var_130], r8^^^mov     [rsp+148h+var_138], r9^^^call    sub_4003B0^^^test    eax, eax^^^mov     r8, [rsp+148h+var_130]^^^mov     r9, [rsp+148h+var_138]^^^jnz     loc_47B8EB^^^cmp     byte ptr [rbx+3], 28h^^^lea     rsi, [rbx+3]^^^movss   xmm0, cs:dword_4B27C8^^^jz      loc_47D0FC^^^test    r9, r9^^^jz      loc_47B8FB^^^mov     [r9], rsi^^^jmp     loc_47B8FB^^^test    r9, r9^^^jz      loc_47B9C0^^^mov     [r9], rax^^^jmp     loc_47B9C0^^^test    r15, r15^^^jz      short loc_47C65B^^^test    rcx, rcx^^^nop^^^jnz     loc_47D727^^^mov     rax, r15^^^shr     rax, 3Fh^^^test    al, al^^^jnz     loc_47D727^^^mov     [rsp+148h+var_110], 27h^^^sub     [rsp+148h+var_110], r15^^^cmp     [rsp+148h+var_110], 0^^^jns     loc_47D713^^^xor     ebp, ebp^^^mov     [rsp+148h+var_110], 0^^^jmp     loc_47B82C^^^mov     rdx, [rsp+148h+var_68]^^^mov     [rsp+rdx*8+148h+var_C8], rax^^^add     rdx, 1^^^mov     [rsp+148h+var_68], rdx^^^jmp     loc_47BD87^^^cdqe^^^add     r13, 1^^^jmp     loc_47C3C1^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47D1A6^^^mov     rax, 7FFFFFFFFFFFFFD8h^^^cmp     rcx, rax^^^ja      loc_47D583^^^lea     rax, [rcx+27h]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+148h+var_110], rax^^^jmp     loc_47B816^^^cmp     dword ptr [rsp+148h+var_110], 0FFFFFFD9h^^^jge     short loc_47C6E8^^^mov     [rsp+148h+var_48], rbx^^^add     dword ptr [rsp+148h+var_110], 40h^^^jmp     loc_47BF38^^^sub     [rsp+148h+var_58], 40h^^^cmp     dword ptr [rsp+148h+var_110], 18h^^^mov     [rsp+148h+var_48], rbx^^^jle     loc_47BF38^^^lea     r10, [rsp+148h+var_48]^^^nop     dword ptr [rax+00h]^^^mov     rax, [rsp+148h+var_58]^^^jmp     loc_47C097^^^mov     eax, 18h^^^sub     eax, dword ptr [rsp+148h+var_110]^^^lea     r10, [rsp+148h+var_48]^^^mov     dword ptr [rsp+148h+var_D8], eax^^^jz      short loc_47C6D8^^^mov     ecx, eax^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+148h+var_128], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^sub     ecx, dword ptr [rsp+148h+var_D8]^^^mov     rax, rbx^^^mov     r10, [rsp+148h+var_128]^^^shr     rax, cl^^^or      [rsp+148h+var_48], rax^^^jmp     short loc_47C6D8^^^xor     edx, edx^^^jmp     loc_47B649^^^mov     rdx, [rsp+148h+var_100]^^^lea     r10, [rsp+148h+var_C8]^^^lea     r8, [rsp+148h+var_58]^^^lea     rcx, [rsp+148h+var_68]^^^mov     r9, r11^^^mov     rdi, r13^^^mov     esi, r14d^^^mov     [rsp+148h+var_128], r11^^^mov     [rsp+148h+var_108], r10^^^mov     [rsp+148h+var_148], rdx^^^mov     rdx, r10^^^call    str_to_mpn_isra_0^^^mov     r13, rax^^^mov     rax, [rsp+148h+var_58]^^^mov     rbp, [rsp+148h+var_68]^^^mov     r11, [rsp+148h+var_128]^^^test    rax, rax^^^jle     loc_47C8AB^^^mov     r9, [rsp+148h+var_108]^^^lea     r10, [rsp+148h+var_98]^^^mov     [rsp+148h+var_110], rbx^^^mov     rdx, rbp^^^mov     r12d, offset _fpioconst_pow10^^^mov     rbp, r14^^^mov     r15d, 1^^^mov     [rsp+148h+var_F8], r10^^^mov     [rsp+148h+var_F0], r13^^^mov     rbx, r9^^^mov     r14, r10^^^mov     [rsp+148h+var_E8], r11^^^jmp     short loc_47C82A^^^lea     rcx, unk_4AEDC8[rax*8]^^^mov     r8, r13^^^mov     rsi, rbx^^^mov     rdi, r14^^^call    __mpn_mul^^^mov     rdx, r13^^^add     rdx, [rsp+148h+var_68]^^^test    rax, rax^^^mov     [rsp+148h+var_68], rdx^^^jnz     short loc_47C80D^^^sub     rdx, 1^^^mov     [rsp+148h+var_68], rdx^^^mov     rax, [rsp+148h+var_58]^^^mov     rcx, rbx^^^mov     rbx, r14^^^mov     r14, rcx^^^add     r15d, r15d^^^add     r12, 18h^^^test    rax, rax^^^jz      short loc_47C86D^^^movsxd  rcx, r15d^^^test    rcx, rax^^^jz      short loc_47C81E^^^mov     r13, [r12+8]^^^xor     rax, rcx^^^mov     [rsp+148h+var_58], rax^^^mov     rax, [r12]^^^sub     r13, 1^^^cmp     r13, rdx^^^jle     short loc_47C7D3^^^lea     rsi, unk_4AEDC8[rax*8]^^^mov     r8, rdx^^^mov     rcx, rbx^^^mov     rdx, r13^^^mov     rdi, r14^^^call    __mpn_mul^^^jmp     loc_47C7E9^^^mov     r9, rbx^^^cmp     r9, [rsp+148h+var_F8]^^^mov     r14, rbp^^^mov     rbx, [rsp+148h+var_110]^^^mov     r13, [rsp+148h+var_F0]^^^mov     rbp, rdx^^^mov     r11, [rsp+148h+var_E8]^^^jnz     short loc_47C8AB^^^mov     rdi, [rsp+148h+var_108]^^^lea     rdx, ds:0[rdx*8]^^^mov     rsi, r9^^^mov     [rsp+148h+var_128], r11^^^call    memcpy^^^mov     r11, [rsp+148h+var_128]^^^lea     rcx, [rbp-1]^^^mov     eax, ebp^^^shl     eax, 6^^^bsr     rdx, [rsp+rcx*8+148h+var_C8]^^^xor     edx, 3Fh^^^sub     eax, edx^^^cmp     eax, 80h^^^mov     dword ptr [rsp+148h+var_110], eax^^^jg      loc_47D570^^^cmp     eax, 18h^^^jle     loc_47CE7B^^^lea     r9d, [rax-18h]^^^mov     r10d, r9d^^^and     r9d, 3Fh^^^movsxd  r8, r9d^^^sar     r10d, 6^^^test    r8, r8^^^movsxd  rdx, r10d^^^jnz     loc_47D06C^^^mov     r15, [rsp+148h+var_108]^^^lea     rsi, [rdx-1]^^^mov     r8b, 3Fh^^^mov     rdx, [r15+rdx*8]^^^mov     [rsp+148h+var_48], rdx^^^xor     ecx, ecx^^^cmp     [rsp+148h+var_C8], 0^^^jnz     short loc_47C934^^^mov     rdx, [rsp+148h+var_108]^^^add     rdx, 8^^^add     rdx, 8^^^add     ecx, 1^^^cmp     qword ptr [rdx-8], 0^^^jz      short loc_47C926^^^cmp     rbx, r14^^^mov     r9d, 1^^^ja      short loc_47C94C^^^movsxd  rcx, ecx^^^xor     r9d, r9d^^^cmp     rcx, rsi^^^setl    r9b^^^mov     rcx, [rsp+rsi*8+148h+var_C8]^^^mov     edx, [rsp+148h+var_DC]^^^sub     eax, 1^^^lea     rdi, [rsp+148h+var_48]^^^movsxd  rsi, eax^^^call    round_and_return^^^jmp     loc_47B8FB^^^mov     eax, dword ptr [rsp+148h+var_F8]^^^test    eax, eax^^^jz      loc_47CF68^^^mov     rax, 1FFFFFFFFFFFFFDAh^^^cmp     r15, rax^^^ja      loc_47D46F^^^lea     rax, ds:95h[r15*4]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+148h+var_110], rax^^^jmp     loc_47B816^^^mov     rdx, r15^^^neg     rdx^^^cmp     rdx, rax^^^cmovl   rdx, rax^^^jmp     loc_47BB93^^^cmp     [rsp+148h+var_68], 1^^^mov     r12, [rsp+148h+var_98]^^^mov     rbp, [rsp+148h+var_90]^^^jg      loc_47CD6D^^^mov     r14, [rsp+148h+var_C8]^^^xor     r13d, r13d^^^cmp     rbp, r14^^^jbe     loc_47CD7D^^^mov     esi, dword ptr [rsp+148h+var_110]^^^test    esi, esi^^^jle     loc_47D371^^^mov     r15d, 18h^^^sub     r15d, dword ptr [rsp+148h+var_110]^^^lea     r10, [rsp+148h+var_48]^^^jz      short loc_47CA36^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     ecx, r15d^^^mov     edx, 1^^^mov     [rsp+148h+var_128], r10^^^call    __mpn_lshift^^^mov     r14, [rsp+148h+var_C8]^^^mov     r10, [rsp+148h+var_128]^^^add     dword ptr [rsp+148h+var_110], 40h^^^cmp     dword ptr [rsp+148h+var_110], 18h^^^jg      loc_47D2AA^^^mov     r13, r14^^^xor     r14d, r14d^^^mov     r8d, dword ptr [rsp+148h+var_110]^^^mov     rdi, r12^^^xor     ecx, ecx^^^neg     rdi^^^mov     esi, 40h^^^cmp     r13, rbp^^^jz      loc_47CB4B^^^mov     rdx, r13^^^mov     rax, r14^^^div     rbp^^^mov     rbx, rax^^^mov     r13, rdx^^^mov     rax, r12^^^mul     rbx^^^nop     dword ptr [rax+00h]^^^cmp     rdx, r13^^^ja      short loc_47CA8F^^^test    rax, rax^^^jz      short loc_47CA9F^^^cmp     rdx, r13^^^jnz     short loc_47CA9F^^^sub     rbx, 1^^^sub     rax, r12^^^sbb     rdx, 0^^^add     r13, rbp^^^jnb     short loc_47CA80^^^mov     r14, rcx^^^sub     r14, rax^^^sbb     r13, rdx^^^test    r8d, r8d^^^jnz     loc_47CB30^^^test    rbx, rbx^^^jz      loc_47CB6D^^^bsr     rdx, rbx^^^mov     rax, [rsp+148h+var_58]^^^xor     edx, 3Fh^^^movsxd  r8, edx^^^sub     rax, r8^^^mov     r8d, esi^^^sub     r8d, edx^^^mov     [rsp+148h+var_58], rax^^^cmp     r8d, 18h^^^jle     loc_47CB76^^^mov     ecx, 28h^^^lea     r15d, [rdx+18h]^^^sub     ecx, edx^^^mov     rdx, rbx^^^shr     rdx, cl^^^mov     [rsp+148h+var_48], rdx^^^test    r13, r13^^^jnz     loc_47D03C^^^cmp     byte ptr [rsp+148h+var_D0], 0^^^jnz     loc_47D03C^^^xor     r9d, r9d^^^test    r14, r14^^^setnz   r9b^^^mov     r8d, 3Fh^^^lea     rsi, [rax-1]^^^sub     r8d, r15d^^^jmp     loc_47C0EF^^^cmp     r8d, 0FFFFFFD9h^^^jge     short loc_47CB98^^^add     r8d, 40h^^^cmp     r13, rbp^^^mov     [rsp+148h+var_48], rbx^^^jnz     loc_47CA67^^^add     r13, r14^^^jnb     loc_47CBDD^^^sub     r13, r12^^^mov     r14, rcx^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^add     r14, r12^^^adc     r13, 0^^^jmp     loc_47CAA8^^^sub     [rsp+148h+var_58], 40h^^^cmp     r8d, 18h^^^mov     [rsp+148h+var_48], rbx^^^jle     loc_47CA5E^^^mov     rax, [rsp+148h+var_58]^^^jmp     loc_47CB00^^^mov     r15d, 18h^^^mov     dword ptr [rsp+148h+var_110], r8d^^^sub     r15d, r8d^^^jz      short loc_47CB88^^^mov     ecx, r15d^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+148h+var_128], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^mov     rax, rbx^^^mov     r10, [rsp+148h+var_128]^^^sub     ecx, r15d^^^shr     rax, cl^^^or      [rsp+148h+var_48], rax^^^jmp     short loc_47CB88^^^xor     eax, eax^^^test    r12, r12^^^mov     rdx, r12^^^setnz   al^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^sub     rdx, rax^^^mov     rax, rdi^^^jmp     loc_47CA80^^^mov     rax, [rsp+148h+var_C8]^^^mov     rcx, [rsp+148h+var_98]^^^cmp     rax, rcx^^^jnb     loc_47D5E7^^^cmp     [rsp+148h+var_68], 1^^^jnz     loc_47D5E7^^^mov     esi, dword ptr [rsp+148h+var_110]^^^xor     edi, edi^^^mov     r8d, 40h^^^mov     r9, rax^^^mov     rdx, r9^^^mov     rax, rdi^^^div     rcx^^^test    esi, esi^^^mov     r9, rdx^^^jnz     loc_47CCC8^^^test    rax, rax^^^jz      loc_47CCDD^^^bsr     r10, rax^^^mov     rsi, [rsp+148h+var_58]^^^xor     r10d, 3Fh^^^movsxd  r11, r10d^^^sub     rsi, r11^^^mov     r11d, r8d^^^sub     r11d, r10d^^^mov     [rsp+148h+var_58], rsi^^^cmp     r11d, 18h^^^jle     loc_47D568^^^mov     ecx, 28h^^^mov     rbp, rdx^^^mov     edx, r10d^^^sub     ecx, r10d^^^mov     rbx, rax^^^lea     r12d, [rdx+18h]^^^shr     rax, cl^^^lea     r10, [rsp+148h+var_48]^^^mov     [rsp+148h+var_48], rax^^^xor     r9d, r9d^^^mov     r8d, 3Fh^^^test    rbp, rbp^^^setnz   r9b^^^sub     r8d, r12d^^^sub     rsi, 1^^^or      r9d, [rsp+148h+var_CC]^^^jmp     loc_47C0EF^^^cmp     esi, 0FFFFFFD9h^^^jge     short loc_47CD18^^^mov     [rsp+148h+var_48], rax^^^add     esi, 40h^^^jmp     loc_47CC31^^^sub     [rsp+148h+var_58], 40h^^^cmp     esi, 18h^^^mov     [rsp+148h+var_48], rax^^^jle     loc_47CC31^^^lea     r10, [rsp+148h+var_48]^^^mov     rbx, rax^^^mov     rbp, rdx^^^xor     r12d, r12d^^^mov     rsi, [rsp+148h+var_58]^^^jmp     short loc_47CCA4^^^mov     r12d, 18h^^^mov     dword ptr [rsp+148h+var_110], esi^^^mov     rbx, rax^^^sub     r12d, esi^^^mov     rbp, rdx^^^lea     r10, [rsp+148h+var_48]^^^test    r12d, r12d^^^jle     short loc_47CD08^^^mov     ecx, r12d^^^mov     rsi, r10^^^mov     rdi, r10^^^mov     edx, 1^^^mov     [rsp+148h+var_128], r10^^^call    __mpn_lshift^^^mov     ecx, 40h^^^mov     rax, rbx^^^mov     r10, [rsp+148h+var_128]^^^sub     ecx, r12d^^^shr     rax, cl^^^or      [rsp+148h+var_48], rax^^^jmp     short loc_47CD08^^^mov     r13, [rsp+148h+var_C0]^^^mov     r14, [rsp+148h+var_C8]^^^xor     r15d, r15d^^^lea     r10, [rsp+148h+var_48]^^^jmp     loc_47CA4C^^^mov     edx, [rsp+148h+var_DC]^^^lea     rdi, [rsp+148h+var_48]^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^call    round_and_return^^^jmp     loc_47B8FB^^^shr     rdx, 2^^^jmp     loc_47BB3B^^^mov     ecx, 3^^^mov     rdi, r9^^^mov     r8d, 3Fh^^^sub     ecx, eax^^^shr     rdi, cl^^^mov     rcx, rdi^^^lea     rdi, [rsp+148h+var_48]^^^or      rcx, rdx^^^mov     edx, [rsp+148h+var_DC]^^^mov     [rsp+148h+var_48], rcx^^^lea     ecx, [rax+3Dh]^^^shl     r9, cl^^^mov     rcx, r9^^^mov     r9d, 1^^^call    round_and_return^^^jmp     loc_47B8FB^^^sub     r10d, 30h^^^movsxd  r10, r10d^^^cmp     r10, rdx^^^jle     loc_47B882^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47D024^^^mov     ebp, dword ptr [rsp+148h+var_F8]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^test    ebp, ebp^^^mov     dword ptr fs:[rax], 22h^^^jnz     loc_47D024^^^mov     r11d, [rsp+148h+var_DC]^^^mov     edx, 7F800000h^^^test    r11d, r11d^^^jz      short loc_47CE48^^^mov     edx, 0FF800000h^^^nop     word ptr [rax+rax+00h]^^^add     rdi, 1^^^movzx   eax, byte ptr [rdi]^^^sub     eax, 30h^^^cmp     al, 9^^^jbe     short loc_47CE48^^^mov     [rsp+148h+var_E0], edx^^^test    r9, r9^^^movss   xmm0, [rsp+148h+var_E0]^^^jz      loc_47B8FB^^^mov     [r9], rdi^^^jmp     loc_47B8FB^^^movzx   eax, byte ptr [r12]^^^jmp     loc_47B6EF^^^cmp     rbx, r14^^^jnz     loc_47D0D0^^^lea     ebx, [rax-1]^^^mov     edx, ebx^^^sar     edx, 1Fh^^^shr     edx, 1Ah^^^lea     eax, [rbx+rdx]^^^and     eax, 3Fh^^^sub     eax, edx^^^movsxd  rdx, eax^^^cmp     rdx, 17h^^^jz      loc_47D3A4^^^cmp     rdx, 16h^^^jle     loc_47D2BF^^^test    rbp, rbp^^^jg      loc_47D456^^^lea     r10, [rsp+148h+var_48]^^^mov     edx, 1^^^mov     rsi, [rsp+148h+var_108]^^^sub     rdx, rbp^^^lea     ecx, [rax-17h]^^^lea     rdi, [r10+rdx*8]^^^mov     rdx, rbp^^^mov     [rsp+148h+var_128], r10^^^call    __mpn_rshift^^^mov     rdx, [rsp+148h+var_68]^^^mov     r10, [rsp+148h+var_128]^^^neg     rdx^^^test    rdx, rdx^^^mov     [rsp+rdx*8+148h+var_48], rax^^^jle     short loc_47CF4C^^^mov     rsi, rdx^^^shr     rsi, 1^^^cmp     rdx, 3^^^lea     rax, [rsi+rsi]^^^jbe     loc_47D516^^^test    rax, rax^^^jz      loc_47D516^^^pxor    xmm0, xmm0^^^xor     ecx, ecx^^^mov     rdi, rcx^^^add     rcx, 1^^^shl     rdi, 4^^^cmp     rsi, rcx^^^movdqa  xmmword ptr [r10+rdi], xmm0^^^ja      short loc_47CF20^^^cmp     rdx, rax^^^jz      short loc_47CF4C^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rdx, rax^^^jg      short loc_47CF3B^^^mov     edx, [rsp+148h+var_DC]^^^movsxd  rsi, ebx^^^xor     r9d, r9d^^^xor     r8d, r8d^^^xor     ecx, ecx^^^mov     rdi, r10^^^call    round_and_return^^^jmp     loc_47B8FB^^^test    r15, r15^^^jz      loc_47D097^^^test    rcx, rcx^^^jnz     loc_47D536^^^mov     rax, 1FFFFFFFFFFFFFFFh^^^cmp     r15, rax^^^ja      loc_47D536^^^mov     eax, 20h^^^sub     rax, r15^^^lea     rax, ds:3[rax*4]^^^mov     [rsp+148h+var_110], rax^^^jmp     loc_47C613^^^jnz     loc_47D54F^^^test    r15d, r15d^^^mov     eax, r15d^^^jle     short loc_47CFD9^^^sub     eax, 1^^^movsxd  rdx, eax^^^mov     rcx, [rsp+rdx*8+148h+var_C8]^^^lea     edx, [rax+1]^^^sub     eax, 1^^^cmp     eax, 0FFFFFFFFh^^^movsxd  rdx, edx^^^mov     [rsp+rdx*8+148h+var_C8], rcx^^^jnz     short loc_47CFB8^^^mov     [rsp+148h+var_C8], 0^^^mov     [rsp+r15*8+148h+var_98], 0^^^mov     rcx, [rsp+r15*8+148h+var_C8]^^^mov     dword ptr [rsp+148h+var_D8], 0^^^jmp     loc_47BF10^^^cmp     rbx, r14^^^jz      loc_47B96A^^^xor     r15d, r15d^^^cmp     r10b, 70h^^^mov     r13, r14^^^jz      loc_47B6C2^^^jmp     loc_47B96A^^^mov     ebx, [rsp+148h+var_DC]^^^xor     edx, edx^^^test    ebx, ebx^^^jz      loc_47CE48^^^mov     edx, 80000000h^^^jmp     loc_47CE48^^^mov     r9d, 1^^^jmp     loc_47CB1E^^^movsxd  rax, r9d^^^mov     rsi, 7FFFFFFFFFFFFFFFh^^^sub     rsi, rax^^^lea     rax, [rsi+4]^^^add     rsi, 1^^^cmovns  rax, rsi^^^sar     rax, 2^^^jmp     loc_47C41C^^^sub     r8, 1^^^cmp     rcx, rdx^^^jg      loc_47D1F3^^^mov     rdi, [rsp+rdx*8+148h+var_C8]^^^mov     ecx, r9d^^^mov     rsi, rdx^^^shr     rdi, cl^^^mov     [rsp+148h+var_48], rdi^^^jmp     loc_47C910^^^cmp     rcx, 0FFFFFFFFFFFFFFFFh^^^jz      loc_47D35E^^^mov     rax, 1FFFFFFFFFFFFFDFh^^^cmp     rcx, rax^^^ja      loc_47D488^^^lea     rax, ds:83h[rcx*4]^^^mov     rbp, 6666666666666667h^^^mov     [rsp+148h+var_110], rax^^^jmp     loc_47B816^^^lea     r10, [rsp+148h+var_48]^^^mov     rsi, [rsp+148h+var_108]^^^lea     rdx, ds:0[rbp*8]^^^mov     [rsp+148h+var_128], r11^^^mov     rdi, r10^^^call    memcpy^^^mov     r11, [rsp+148h+var_128]^^^jmp     loc_47BBCE^^^mov     rcx, [r8+70h]^^^mov     rbp, rsi^^^jmp     short loc_47D10B^^^mov     rbp, r12^^^movzx   eax, byte ptr [rbp+1]^^^lea     r12, [rbp+1]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_47D108^^^movsx   rdx, al^^^mov     edx, [rcx+rdx*4]^^^sub     edx, 61h^^^cmp     dl, 19h^^^jbe     short loc_47D108^^^cmp     al, 5Fh^^^jz      short loc_47D108^^^cmp     al, 29h^^^movss   xmm0, cs:dword_4B27C8^^^jnz     loc_47C5C5^^^lea     rdi, [rbx+4]^^^lea     rsi, [rsp+148h+var_40]^^^xor     ecx, ecx^^^xor     edx, edx^^^movss   dword ptr [rsp+148h+var_128], xmm0^^^mov     [rsp+148h+var_138], r9^^^call    ____strtoull_l_internal^^^cmp     [rsp+148h+var_40], r12^^^movss   xmm0, dword ptr [rsp+148h+var_128]^^^mov     r9, [rsp+148h+var_138]^^^jz      loc_47D740^^^lea     rsi, [rbp+2]^^^jmp     loc_47C5C5^^^mov     rsi, [rsp+148h+var_108]^^^mov     rdi, [rsp+148h+var_F8]^^^lea     rdx, ds:0[r15*8]^^^mov     [rsp+148h+var_128], r11^^^call    memcpy^^^mov     r11, [rsp+148h+var_128]^^^jmp     loc_47BD0E^^^mov     ebp, 3^^^mov     [rsp+148h+var_110], 27h^^^jmp     loc_47B82C^^^mov     edx, 18h^^^sub     edx, dword ptr [rsp+148h+var_110]^^^mov     dword ptr [rsp+148h+var_D8], edx^^^jz      loc_47BE53^^^lea     r10, [rsp+148h+var_48]^^^mov     ecx, edx^^^mov     edx, 1^^^mov     rsi, r10^^^mov     rdi, r10^^^call    __mpn_lshift^^^mov     rax, [rsp+148h+var_68]^^^jmp     loc_47BE53^^^lea     r13, [rdx+1]^^^mov     rdi, [rsp+rdx*8+148h+var_C8]^^^mov     r12d, 40h^^^sub     r12d, r9d^^^mov     r11, rdx^^^mov     rsi, r13^^^mov     ecx, r9d^^^add     r10d, 1^^^sub     r11, rdx^^^shr     rdi, cl^^^movsxd  rcx, r10d^^^mov     [rsp+148h+var_100], rdi^^^mov     rdi, [rsp+rcx*8+148h+var_C8]^^^mov     ecx, r12d^^^mov     r15, rdi^^^shl     r15, cl^^^mov     rcx, [rsp+148h+var_100]^^^or      r15, rcx^^^mov     [rsp+r11*8+148h+var_48], r15^^^mov     r11, rsi^^^add     rsi, 1^^^cmp     rsi, rbp^^^jnz     short loc_47D20E^^^sub     rsi, rdx^^^lea     rcx, [rsi+r13-2]^^^sub     rcx, rdx^^^test    rcx, rcx^^^jle     loc_47D081^^^mov     rsi, rdx^^^jmp     loc_47C910^^^sub     [rsp+148h+var_58], rdx^^^mov     dword ptr [rsp+148h+var_D8], 0^^^jmp     loc_47BE5D^^^mov     rdi, rax^^^xor     ecx, ecx^^^xor     r15d, r15d^^^jmp     loc_47BA8F^^^sub     r14, 1^^^cmp     byte ptr [rsp+148h+var_F0], 0^^^cmovz   r14, [rsp+148h+var_110]^^^mov     [rsp+148h+var_110], r14^^^mov     rdi, r14^^^jmp     loc_47B9B6^^^mov     r13, r14^^^mov     rax, [rsp+148h+var_58]^^^xor     ebx, ebx^^^xor     r14d, r14d^^^jmp     loc_47CB00^^^mov     r12d, 1^^^mov     ecx, 17h^^^lea     r10, [rsp+148h+var_48]^^^sub     ecx, eax^^^mov     rax, r12^^^mov     rsi, [rsp+148h+var_108]^^^sub     rax, rbp^^^mov     rdx, rbp^^^mov     [rsp+148h+var_128], r10^^^lea     rdi, [r10+rax*8]^^^call    __mpn_lshift^^^sub     r12, [rsp+148h+var_68]^^^mov     r10, [rsp+148h+var_128]^^^test    r12, r12^^^jle     loc_47CF4C^^^mov     rcx, r12^^^shr     rcx, 1^^^cmp     r12, 3^^^lea     rax, [rcx+rcx]^^^jbe     loc_47D4A1^^^test    rax, rax^^^jz      loc_47D4A1^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rcx, rdx^^^movdqa  xmmword ptr [r10+rsi], xmm0^^^ja      short loc_47D329^^^cmp     r12, rax^^^jz      loc_47CF4C^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rax, r12^^^jl      short loc_47D348^^^jmp     loc_47CF4C^^^mov     ebp, 0Dh^^^mov     [rsp+148h+var_110], 83h^^^jmp     loc_47B82C^^^sub     rbx, 40h^^^xor     r15d, r15d^^^lea     r10, [rsp+148h+var_48]^^^mov     [rsp+148h+var_58], rbx^^^jmp     loc_47CA3B^^^mov     rax, [rsp+148h+var_58]^^^xor     ebx, ebx^^^lea     r10, [rsp+148h+var_48]^^^jmp     loc_47C097^^^mov     r12d, 1^^^lea     r10, [rsp+148h+var_48]^^^mov     rsi, [rsp+148h+var_108]^^^mov     rax, r12^^^lea     rdx, ds:0[rbp*8]^^^sub     rax, rbp^^^mov     [rsp+148h+var_128], r10^^^lea     rdi, [r10+rax*8]^^^call    memcpy^^^sub     r12, [rsp+148h+var_68]^^^mov     r10, [rsp+148h+var_128]^^^test    r12, r12^^^jle     loc_47CF4C^^^mov     rcx, r12^^^shr     rcx, 1^^^cmp     r12, 3^^^lea     rax, [rcx+rcx]^^^jbe     short loc_47D452^^^test    rax, rax^^^jz      short loc_47D452^^^pxor    xmm0, xmm0^^^xor     edx, edx^^^mov     rsi, rdx^^^add     rdx, 1^^^shl     rsi, 4^^^cmp     rdx, rcx^^^movdqa  xmmword ptr [r10+rsi], xmm0^^^jb      short loc_47D404^^^cmp     rax, r12^^^jz      loc_47CF4C^^^mov     qword ptr [r10+rax*8], 0^^^add     rax, 1^^^cmp     rax, r12^^^jl      short loc_47D423^^^jmp     loc_47CF4C^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 374h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintmax_^^^call    __assert_fail^^^xor     eax, eax^^^jmp     short loc_47D423^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 4E3h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsize2464164^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 354h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintma_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 368h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroUintm^^^call    __assert_fail^^^xor     eax, eax^^^jmp     loc_47D348^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 335h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noUintmax_^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 50Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDig_noInt_noEx^^^call    __assert_fail^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_47B9C0^^^mov     r9d, [rsp+148h+var_DC]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^movss   xmm0, cs:dword_4B27C0^^^test    r9d, r9d^^^mov     dword ptr fs:[rax], 22h^^^jz      loc_47B8FB^^^jmp     loc_47C56F^^^xor     eax, eax^^^jmp     loc_47CF3B^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 416h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aBits0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 35Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zero0Int_^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 646h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsizeDensize^^^call    __assert_fail^^^mov     esi, r11d^^^jmp     loc_47CCE6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_47C55B^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 388h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroUin_0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 621h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aEmpty1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 42Bh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aInt_noUintma_1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 670h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aCy0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 573h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNumsize1ND^^^call    __assert_fail^^^xor     edi, edi^^^mov     rax, [rsp+148h+var_108]^^^jmp     loc_47BEE0^^^mov     rcx, [rax+50h]^^^movzx   edx, byte ptr [rcx]^^^mov     [rsp+148h+var_F8], rcx^^^sub     edx, 1^^^cmp     dl, 7Dh^^^ja      loc_47B578^^^mov     rdx, [rax+48h]^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+148h+var_100], rdx^^^jz      loc_47B578^^^jmp     loc_47B58A^^^mov     r10, [rsp+148h+var_100]^^^movzx   esi, byte ptr [r10]^^^test    sil, sil^^^jz      loc_47D707^^^cmp     sil, cl^^^jnz     loc_47B6E6^^^mov     ecx, 1^^^jmp     short loc_47D66F^^^add     rcx, 1^^^cmp     sil, [r13+rcx-1]^^^jnz     loc_47B6E6^^^mov     rdi, [rsp+148h+var_100]^^^movzx   esi, byte ptr [rdi+rcx]^^^test    sil, sil^^^jnz     short loc_47D660^^^sub     rcx, 1^^^add     r13, rcx^^^jmp     loc_47B92C^^^mov     r10, [rsp+148h+var_100]^^^mov     r14, rbx^^^movzx   esi, byte ptr [r10]^^^cmp     bpl, 30h^^^jz      short loc_47D6D1^^^test    sil, sil^^^jz      short loc_47D6E5^^^cmp     sil, bpl^^^jnz     loc_47B6A8^^^mov     ecx, 1^^^jmp     short loc_47D6BB^^^add     rcx, 1^^^cmp     dil, [r14+rcx-1]^^^jnz     short loc_47D6DE^^^mov     r15, [rsp+148h+var_100]^^^movzx   edi, byte ptr [r15+rcx]^^^test    dil, dil^^^jnz     short loc_47D6B0^^^sub     rcx, 1^^^add     r14, rcx^^^movzx   ebp, byte ptr [r14+1]^^^add     r14, 1^^^mov     ecx, ebp^^^jmp     short loc_47D695^^^mov     ecx, esi^^^jmp     loc_47B6A8^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_47D6CE^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 202h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDecimal_len0^^^call    __assert_fail^^^mov     rcx, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_47D681^^^mov     rbp, 6666666666666667h^^^mov     rax, [rsp+148h+var_110]^^^jmp     loc_47B816^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 37Ch^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zero0In_0^^^call    __assert_fail^^^test    eax, 7FFFFFh^^^movss   [rsp+148h+var_E0], xmm0^^^mov     edx, 400000h^^^mov     ecx, [rsp+148h+var_E0]^^^jz      short loc_47D75E^^^mov     edx, eax^^^and     edx, 7FFFFFh^^^mov     eax, ecx^^^and     edx, 7FFFFFh^^^and     eax, 0FF800000h^^^or      eax, edx^^^mov     [rsp+148h+var_E0], eax^^^movss   xmm0, [rsp+148h+var_E0]^^^jmp     loc_47D177^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 3FAh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroBase1^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12540^^^mov     edx, 3FEh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aLead_zeroBas_0^^^call    __assert_fail^^^mov     dword ptr [rsp+148h+var_110], esi^^^jmp     loc_47C6B9^^^
sub_40F09D$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 0^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
__register_frame_info$$$xor     ecx, ecx^^^xor     edx, edx^^^jmp     __register_frame_info_bases^^^
_dl_dst_count$$$push    r14^^^mov     rax, rdi^^^mov     r14d, cs:__libc_enable_secure^^^push    r13^^^mov     r13d, esi^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^xor     ebp, ebp^^^push    rbx^^^jmp     short loc_4506F7^^^add     rbp, 1^^^lea     rdi, [rbx+rax]^^^mov     esi, 24h^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_450750^^^lea     rbx, [rax+1]^^^mov     r8d, r14d^^^mov     ecx, r13d^^^mov     edx, offset aOrigin^^^mov     rdi, r12^^^mov     rsi, rbx^^^call    is_dst^^^test    rax, rax^^^jnz     short loc_4506E0^^^xor     r8d, r8d^^^mov     ecx, r13d^^^mov     edx, offset aPlatform^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    is_dst^^^test    rax, rax^^^jnz     short loc_4506E0^^^xor     r8d, r8d^^^mov     ecx, r13d^^^mov     edx, offset off_49FB4A^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    is_dst^^^test    rax, rax^^^jz      short loc_4506E4^^^jmp     short loc_4506E0^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
_IO_vfscanf_internal$$$push    rbp             ^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 338h^^^mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     [rbp+var_270], rdx^^^mov     [rbp+var_2C8], rcx^^^mov     rax, fs:[rax]^^^mov     [rbp+var_260], rax^^^mov     rax, [rax]^^^mov     [rbp+var_2F0], rax^^^mov     rax, [rdx]^^^mov     [rbp+var_E0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_D8], rax^^^mov     rax, [rdx+10h]^^^mov     [rbp+var_D0], rax^^^mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jnz     loc_46557F^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     eax, [rbx]^^^test    al, 4^^^jnz     loc_4686E8^^^test    r13, r13^^^jz      loc_469798^^^mov     rcx, [rbp+var_260]^^^mov     rdx, [rcx+8]^^^mov     rsi, [rdx+40h]^^^mov     rdx, [rdx+48h]^^^cmp     byte ptr [rdx], 0^^^mov     [rbp+var_230], rdx^^^mov     edx, 0^^^cmovnz  rdx, [rbp+var_230]^^^xor     edi, edi^^^mov     [rbp+var_2A8], rsi^^^mov     [rbp+var_230], rdx^^^mov     edx, 0^^^test    rdx, rdx^^^setnz   dil^^^mov     [rbp+var_2E0], edi^^^jnz     loc_466711^^^mov     [rbp+var_100], offset funlockfile^^^mov     [rbp+var_F8], rbx^^^and     eax, 8000h^^^jz      loc_46560D^^^mov     [rbp+var_90], 0^^^movzx   edx, byte ptr [r13+0]^^^lea     rax, [rbp+var_220]^^^xor     r9d, r9d^^^xor     r12d, r12d^^^xor     r14d, r14d^^^add     rax, 0BBh^^^mov     [rbp+var_279], 0^^^mov     [rbp+var_258], 0^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_290], 0^^^mov     r15d, r9d^^^test    dl, dl^^^mov     [rbp+var_278], 0^^^mov     [rbp+var_298], 0^^^mov     [rbp+var_2A0], 0^^^mov     [rbp+var_2B0], 0^^^mov     [rbp+var_234], 0^^^mov     [rbp+var_238], 0^^^mov     [rbp+var_2F8], rax^^^jz      loc_46509B^^^xchg    ax, ax^^^test    dl, 80h^^^jnz     loc_465190^^^lea     rcx, [r13+1]^^^cmp     dl, 25h^^^mov     [rbp+var_248], rcx^^^jz      loc_465220^^^mov     rsi, [rbp+var_260]^^^movzx   ecx, dl^^^mov     rax, [rsi+68h]^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     loc_465210^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4654FB^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46ABE6^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^test    r15d, r15d^^^jz      short loc_465078^^^mov     rcx, [rbp+var_260]^^^mov     rax, [rcx+68h]^^^movsxd  rcx, r12d^^^test    byte ptr [rax+rcx*2+1], 20h^^^jz      short loc_465078^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rcx, [rbx+8]^^^cmp     rcx, [rbx+10h]^^^jnb     loc_468D5D^^^movzx   r12d, byte ptr [rcx]^^^add     rcx, 1^^^mov     [rbx+8], rcx^^^movsxd  rcx, r12d^^^add     r14, 1^^^test    byte ptr [rax+rcx*2+1], 20h^^^jnz     short loc_465050^^^movzx   edx, dl^^^cmp     r12d, edx^^^jnz     loc_469D12^^^xor     r15d, r15d^^^mov     r13, [rbp+var_248]^^^movzx   edx, byte ptr [r13+0]^^^test    dl, dl^^^jnz     loc_464FD0^^^xor     r13d, r13d^^^test    r15d, r15d^^^jz      short loc_465120^^^mov     r14d, [rbp+var_234]^^^mov     r13, [rbp+var_260]^^^jmp     short loc_4650DE^^^mov     rdx, [rbx+8]^^^cmp     rdx, [rbx+10h]^^^jnb     loc_46B5F5^^^movzx   r12d, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^movsxd  rax, r12d^^^add     rax, rax^^^mov     rdx, [r13+68h]^^^test    byte ptr [rdx+rax+1], 20h^^^jz      short loc_465101^^^cmp     r12d, 0FFFFFFFFh^^^jnz     short loc_4650B3^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rdx, [r13+68h]^^^mov     fs:[rax], r14d^^^mov     rax, 0FFFFFFFFFFFFFFFEh^^^test    byte ptr [rdx+rax+1], 20h^^^jnz     short loc_4650DE^^^xor     r13d, r13d^^^cmp     r12d, 0FFFFFFFFh^^^jz      short loc_465120^^^movzx   esi, r12b^^^mov     rdi, rbx^^^call    _IO_sputbackc^^^nop     word ptr [rax+rax+00000000h]^^^mov     eax, [rbx]^^^test    ah, 80h^^^jz      loc_465597^^^nop     dword ptr [rax+rax+00h]^^^mov     eax, [rbp+var_2E0]^^^test    eax, eax^^^jnz     loc_4655E1^^^cmp     [rbp+var_279], 0^^^jnz     loc_4655FC^^^cmp     [rbp+var_2C8], 0^^^jz      short loc_46515F^^^mov     rcx, [rbp+var_2C8]^^^or      [rcx], r13d^^^cmp     [rbp+var_238], 0FFFFFFFFh^^^jz      loc_46AFA0^^^cmp     [rbp+var_278], 0^^^jnz     loc_46AF7E^^^mov     eax, [rbp+var_238]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rdi, r13^^^call    strlen^^^lea     rdx, [rbp+var_90]^^^mov     rsi, rax^^^mov     rdi, r13^^^call    mbrlen^^^test    eax, eax^^^jle     loc_465538^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_465542^^^sub     eax, 1^^^mov     [rbp+var_248], r13^^^lea     rdx, [r13+rax+1]^^^mov     rcx, [rbx+8]^^^cmp     rcx, [rbx+10h]^^^jnb     loc_46AFEE^^^movzx   eax, byte ptr [rcx]^^^add     rcx, 1^^^mov     [rbx+8], rcx^^^movzx   r12d, byte ptr [r13+0]^^^cmp     r12d, eax^^^jnz     loc_4674A8^^^add     r13, 1^^^add     r14, 1^^^cmp     r13, rdx^^^jnz     short loc_4651CB^^^mov     [rbp+var_248], r13^^^jmp     loc_465087^^^mov     r15d, 1^^^jmp     loc_465087^^^movzx   eax, byte ptr [r13+1]^^^xor     r11d, r11d^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      loc_4653E2^^^movzx   edx, byte ptr [r13+2]^^^mov     r11d, eax^^^lea     rax, [r13+2]^^^movzx   esi, dl^^^mov     ecx, edx^^^mov     r13d, edx^^^sub     esi, 30h^^^cmp     esi, 9^^^ja      short loc_465273^^^add     rax, 1^^^lea     r11d, [r11+r11*4]^^^movzx   ecx, cl^^^movzx   edx, byte ptr [rax]^^^lea     r11d, [rcx+r11*2-30h]^^^movzx   esi, dl^^^mov     ecx, edx^^^sub     esi, 30h^^^cmp     esi, 9^^^jbe     short loc_465250^^^mov     r13d, edx^^^cmp     dl, 24h^^^jz      loc_4653D7^^^mov     r8d, r11d^^^mov     dword ptr [rbp+var_250], 0^^^xor     r11d, r11d^^^test    r8d, r8d^^^mov     edx, 0FFFFFFFFh^^^cmovz   r8d, edx^^^lea     edx, [r13-4Ch]^^^lea     rcx, [rax+1]^^^cmp     dl, 2Eh         ^^^jbe     loc_4654E0^^^mov     rcx, rax        ^^^nop     dword ptr [rax+00h]^^^test    r13b, r13b^^^jz      loc_46AC0C^^^lea     rdi, [rcx+1]^^^mov     [rbp+var_248], rdi^^^test    r15d, r15d^^^jnz     short loc_465310^^^cmp     r13b, 63h^^^jz      short loc_4652D8^^^cmp     r13b, 5Bh^^^jnz     short loc_4652FC^^^nop     dword ptr [rax]^^^sub     r13d, 25h^^^cmp     r13b, 53h^^^jbe     loc_4653CB^^^mov     eax, [rbx]      ^^^mov     r13d, 2^^^test    ah, 80h^^^jnz     loc_465130^^^jmp     loc_465597^^^cmp     r13b, 6Eh^^^jz      short loc_4652D8^^^cmp     r13b, 43h^^^jz      short loc_4652D8^^^nop     dword ptr [rax+rax+00000000h]^^^mov     r15, 0FFFFFFFFFFFFFFC0h^^^mov     r9d, [rbp+var_234]^^^mov     rdx, [rbp+var_260]^^^mov     esi, fs:[r15]^^^mov     dword ptr fs:[r15], 0^^^nop     dword ptr [rax+00000000h]^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46AF55^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46AED8^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     rax, [rdx+68h]^^^movsxd  rdi, r12d^^^test    byte ptr [rax+rdi*2+1], 20h^^^jnz     short loc_465338^^^cmp     r12d, 0FFFFFFFFh^^^mov     [rbp+var_234], r9d^^^mov     fs:[r15], esi^^^jz      loc_4652D8^^^movzx   esi, r12b^^^mov     rdi, rbx^^^sub     r13d, 25h^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^sub     r14, 1^^^mov     [rbp+var_358], r11d^^^call    _IO_sputbackc^^^cmp     r13b, 53h       ^^^mov     r11d, [rbp+var_358]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     rcx, [rbp+var_348]^^^ja      loc_4652E6      ^^^movzx   r13d, r13b^^^jmp     ds:off_4AFD70[r13*8]^^^add     rax, 1^^^mov     [rbp+var_248], rax^^^mov     rdx, [rbp+var_248]^^^mov     dword ptr [rbp+var_250], 0^^^mov     ecx, 0^^^add     rdx, 1^^^cmp     [rbp+var_230], 0^^^jnz     short loc_465423^^^jmp     short loc_465463^^^cmp     r13b, 2Ah^^^jz      short loc_465432^^^cmp     r13b, 49h^^^jnz     short loc_465490^^^or      ch, 4^^^add     rdx, 1^^^movzx   r13d, byte ptr [rdx-1]^^^lea     rax, [rdx-1]^^^cmp     r13b, 27h^^^jnz     short loc_465410^^^cmp     r13b, 2Ah^^^jz      short loc_465488^^^cmp     r13b, 49h^^^jz      short loc_46541C^^^mov     eax, ecx^^^or      al, 80h^^^cmp     r13b, 27h^^^cmovz   ecx, eax^^^jmp     short loc_46541F^^^cmp     r13b, 27h^^^jz      short loc_465472^^^cmp     r13b, 49h^^^jnz     short loc_465490^^^or      ch, 4^^^add     rdx, 1^^^movzx   r13d, byte ptr [rdx-1]^^^lea     rax, [rdx-1]^^^cmp     r13b, 2Ah^^^jnz     short loc_465450^^^cmp     r13b, 2Ah^^^jz      short loc_4654D2^^^cmp     r13b, 49h^^^jnz     short loc_46545F^^^xchg    ax, ax^^^jmp     short loc_46545C^^^or      ecx, 8^^^jmp     short loc_46541F^^^movzx   edx, r13b^^^mov     dword ptr [rbp+var_250], ecx^^^mov     r8d, 0FFFFFFFFh^^^lea     ecx, [rdx-30h]^^^cmp     ecx, 9^^^ja      loc_465298^^^xor     r8d, r8d^^^nop^^^add     rax, 1^^^lea     r8d, [r8+r8*4]^^^movzx   r13d, byte ptr [rax]^^^lea     r8d, [rdx+r8*2-30h]^^^movzx   edx, r13b^^^lea     ecx, [rdx-30h]^^^cmp     ecx, 9^^^jbe     short loc_4654B0^^^jmp     loc_46528C^^^or      ecx, 8^^^jmp     short loc_46545F^^^movzx   edx, dl^^^jmp     ds:off_4B0010[rdx*8]^^^or      dword ptr [rbp+var_250], 1^^^movzx   r13d, byte ptr [rax+1]^^^jmp     loc_4652B0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edi, [rbp+var_234]^^^mov     fs:[rax], edi^^^mov     r8d, [rbp+var_238]^^^mov     r13d, 1^^^test    r8d, r8d^^^jnz     loc_465120^^^mov     eax, [rbx]^^^mov     [rbp+var_238], 0FFFFFFFFh^^^test    ah, 80h^^^jnz     loc_465130^^^jmp     short loc_465597^^^movzx   edx, byte ptr [r13+0]^^^jmp     loc_464FD9^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^mov     r9d, [rbp+var_238]^^^mov     r13d, 1^^^test    r9d, r9d^^^jnz     loc_465120^^^mov     eax, [rbx]^^^mov     [rbp+var_238], 0FFFFFFFFh^^^test    ah, 80h^^^jnz     loc_465130^^^jmp     short loc_465597^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_464EAC^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_46517A^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     loc_465130^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4655CB^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_1323^^^jmp     short loc_4655D3^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_1323^^^mov     eax, [rbp+var_2E0]^^^test    eax, eax^^^jz      loc_46513E^^^lea     rdi, [rbp+var_100]^^^xor     esi, esi^^^call    near ptr 0^^^cmp     [rbp+var_279], 0^^^jz      loc_46514B^^^mov     rdi, [rbp+var_240]^^^call    free^^^jmp     loc_46514B^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_465651^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_46563D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_1379^^^jmp     short loc_465646^^^cmpxchg [rdx], esi^^^jnz     _L_lock_1379^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^jmp     loc_464F2E^^^movzx   r13d, byte ptr [rax+1]^^^or      dword ptr [rbp+var_250], 2000h^^^cmp     r13b, 6Ch^^^jnz     loc_4652B0^^^lea     rcx, [rax+2]^^^or      dword ptr [rbp+var_250], 1^^^movzx   r13d, byte ptr [rax+2]^^^jmp     loc_4652B0^^^movzx   r13d, byte ptr [rax+1]^^^cmp     r13b, 6Ch^^^jz      loc_467A04^^^or      dword ptr [rbp+var_250], 1^^^jmp     loc_4652B0^^^movzx   r13d, byte ptr [rax+1]^^^cmp     r13b, 68h^^^jz      loc_4679EC^^^or      dword ptr [rbp+var_250], 4^^^jmp     loc_4652B0^^^movzx   edx, byte ptr [rax+1]^^^cmp     dl, 53h^^^jz      short loc_4656F1^^^cmp     dl, 73h^^^jz      short loc_4656F1^^^cmp     dl, 5Bh^^^jz      short loc_4656F1^^^mov     [rbp+var_248], rcx^^^mov     rcx, rax^^^jmp     loc_4652C4^^^or      dword ptr [rbp+var_250], 3^^^movzx   r13d, byte ptr [rax+1]^^^jmp     loc_4652B0^^^test    byte ptr [rbx+74h], 10h^^^jz      loc_4669F9^^^mov     rcx, rax^^^jmp     loc_4652B9^^^or      dword ptr [rbp+var_250], 40h^^^mov     dword ptr [rbp+var_228], 0Ah^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_465A20^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46DFE1^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^cmp     r12d, 2Bh^^^lea     r9, [r14+1]^^^jz      short loc_46574C^^^cmp     r12d, 2Dh^^^jnz     loc_4659BB^^^cmp     [rbp+var_258], 0^^^jz      loc_46A0D7^^^mov     rdi, [rbp+var_240]^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^mov     [rdi], r12b^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A10B^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^cmp     r12d, 30h^^^lea     r9, [r14+2]^^^mov     r13d, 1^^^mov     r14d, 2^^^jnz     loc_4659CE^^^test    r8d, r8d^^^jz      loc_4659CE^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], r13^^^jz      loc_469E39^^^mov     rdi, [rbp+var_240]^^^mov     byte ptr [rdi+r13], 30h^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469D29^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r9, 1^^^test    r8d, r8d^^^jz      short loc_46580C^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 78h^^^jz      loc_467A26^^^mov     eax, dword ptr [rbp+var_228]^^^test    eax, eax^^^mov     eax, 8^^^cmovnz  eax, dword ptr [rbp+var_228]^^^mov     dword ptr [rbp+var_228], eax^^^mov     r13, r14^^^cmp     dword ptr [rbp+var_228], 0Ah^^^jz      loc_4659DC^^^mov     edi, dword ptr [rbp+var_250]^^^mov     r10, [rbp+var_240]^^^mov     rsi, [rbp+var_258]^^^and     edi, 80h^^^mov     dword ptr [rbp+var_268], edi^^^nop     word ptr [rax+rax+00000000h]^^^test    r8d, r8d^^^jz      short loc_465897^^^cmp     r12d, 0FFFFFFFFh^^^jz      short loc_465897^^^cmp     dword ptr [rbp+var_228], 10h^^^jz      loc_4663A8^^^lea     eax, [r12-30h]^^^cmp     eax, 9^^^ja      loc_466260^^^lea     eax, [r12-2Fh]^^^cmp     eax, dword ptr [rbp+var_228]^^^jle     loc_466213^^^mov     [rbp+var_240], r10^^^mov     [rbp+var_258], rsi^^^test    r13, r13^^^jz      loc_4664E1^^^cmp     r13, 1^^^jz      loc_46746F^^^cmp     r12d, 0FFFFFFFFh^^^mov     r14, r9^^^jz      short loc_4658DF^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^call    _IO_sputbackc^^^mov     r11d, [rbp+var_358]^^^sub     r14, 1^^^cmp     [rbp+var_258], r13^^^jz      loc_469D7C^^^mov     r15, [rbp+var_240]^^^mov     rdi, r15^^^mov     byte ptr [rdi+r13], 0^^^mov     ecx, dword ptr [rbp+var_250]^^^lea     rsi, [rbp+var_80]^^^mov     r13d, dword ptr [rbp+var_250]^^^mov     edx, dword ptr [rbp+var_228]^^^mov     rdi, r15^^^mov     [rbp+var_358], r11d^^^and     ecx, 80h^^^and     r13d, 40h^^^jz      loc_46666E^^^call    __strtoll_internal^^^mov     r11d, [rbp+var_358]^^^mov     rdi, [rbp+var_240]^^^cmp     rdi, [rbp+var_80]^^^jz      loc_469C8D^^^xor     r15d, r15d^^^test    byte ptr [rbp+var_250], 8^^^jnz     loc_465087^^^test    r13d, r13d^^^jz      loc_46667F^^^test    byte ptr [rbp+var_250], 1^^^jnz     loc_466935^^^test    byte ptr [rbp+var_250], 4^^^jz      loc_467ABA^^^test    r11d, r11d^^^jnz     loc_468AC4^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_468223^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^mov     [rdx], ax^^^add     [rbp+var_238], 1^^^xor     r15d, r15d^^^jmp     loc_465087^^^xor     r13d, r13d^^^cmp     r12d, 30h^^^mov     r14d, 1^^^jz      loc_4657A3^^^mov     eax, dword ptr [rbp+var_228]^^^test    eax, eax^^^jnz     loc_465829^^^test    dword ptr [rbp+var_250], 400h^^^jnz     loc_46A2F7^^^mov     dword ptr [rbp+var_228], 0Ah^^^jmp     loc_465836^^^and     dword ptr [rbp+var_250], 0FFFFFFF9h^^^or      dword ptr [rbp+var_250], 1001h^^^cmp     r12d, 0FFFFFFFFh^^^mov     dword ptr [rbp+var_228], 10h^^^jnz     loc_46571E^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, [rbp+var_234]^^^mov     fs:[rax], esi^^^mov     edx, [rbp+var_238]^^^mov     r13d, 1^^^test    edx, edx^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^test    byte ptr [rbp+var_250], 1^^^jz      loc_466A0B^^^mov     esi, dword ptr [rbp+var_250]^^^and     esi, 8^^^mov     dword ptr [rbp+var_268], esi^^^jz      loc_466785^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_467B83^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A25D^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rsi, [rbp+var_260]^^^movsxd  rdx, r12d^^^add     r14, 1^^^mov     [rbp+var_70], 0^^^mov     rax, [rsi+68h]^^^test    byte ptr [rax+rdx*2+1], 20h^^^jnz     loc_46709E^^^mov     edi, dword ptr [rbp+var_250]^^^mov     r15, [rbp+var_298]^^^lea     r13, [rbp+var_C0]^^^mov     dword ptr [rbp+var_228], r8d^^^and     edi, 2100h^^^mov     dword ptr [rbp+var_288], edi^^^nop     dword ptr [rax]^^^mov     r9d, dword ptr [rbp+var_268]^^^mov     byte ptr [rbp+var_C0], r12b^^^test    r9d, r9d^^^jz      loc_466740^^^nop^^^lea     rcx, [rbp+var_70]^^^xor     edi, edi^^^mov     edx, 1^^^mov     rsi, r13^^^call    mbrtowc^^^cmp     rax, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_467000^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46997E^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     byte ptr [rbp+var_C0], r12b^^^jmp     short loc_465B00^^^test    byte ptr [rbp+var_250], 1^^^jz      loc_466C4F^^^mov     ecx, dword ptr [rbp+var_250]^^^cmp     r8d, 0FFFFFFFFh^^^mov     eax, 1^^^cmovz   r8d, eax^^^and     ecx, 8^^^mov     dword ptr [rbp+var_268], ecx^^^jz      loc_466855^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_467B50^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A0B0^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     esi, dword ptr [rbp+var_250]^^^movsxd  r15, r8d^^^add     r14, 1^^^sub     r15, 1^^^mov     [rbp+var_A0], 0^^^mov     dword ptr [rbp+var_228], r8d^^^mov     [rbp+var_250], r15^^^mov     r15, [rbp+var_298]^^^and     esi, 2100h^^^mov     dword ptr [rbp+var_288], esi^^^nop     dword ptr [rax+00h]^^^mov     eax, dword ptr [rbp+var_268]^^^mov     byte ptr [rbp+var_C0], r12b^^^lea     r13, [rbp+var_C0]^^^test    eax, eax^^^jnz     loc_465C70^^^mov     eax, dword ptr [rbp+var_288]^^^test    eax, eax^^^jz      short loc_465C20^^^mov     rax, [rbp+var_278]^^^mov     rdx, [rbp+var_290]^^^mov     rdi, [rax]^^^shl     rdx, 2^^^lea     rax, [rdi+rdx]^^^cmp     r15, rax^^^jz      loc_467F44^^^lea     rcx, [rbp+var_A0]^^^mov     edx, 1^^^mov     rsi, r13^^^mov     rdi, r15^^^call    mbrtowc^^^cmp     rax, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_466620^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469638^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     byte ptr [rbp+var_C0], r12b^^^jmp     short loc_465C20^^^lea     rcx, [rbp+var_A0]^^^xor     edi, edi^^^mov     edx, 1^^^mov     rsi, r13^^^call    mbrtowc^^^cmp     rax, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_466620^^^mov     rax, [rbx+8]^^^cmp     [rbx+10h], rax^^^jbe     loc_4696D4^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     byte ptr [rbp+var_C0], r12b^^^jmp     short loc_465C70^^^mov     r13d, dword ptr [rbp+var_250]^^^mov     esi, dword ptr [rbp+var_250]^^^and     r13d, 1^^^jz      loc_466E06^^^and     esi, 8^^^mov     dword ptr [rbp+var_228], esi^^^jnz     loc_465DB6^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_468428^^^test    r11d, r11d^^^jnz     loc_469414^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4693FD^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46B42F^^^mov     edi, 190h^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^call    malloc^^^mov     rsi, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_298], rax^^^mov     rcx, [rbp+var_348]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rsi], rax^^^jz      loc_46B401^^^cmp     [rbp+var_2B0], 0^^^jz      loc_468B58^^^mov     rdi, [rbp+var_2B0]^^^mov     rax, [rdi]^^^cmp     rax, 20h^^^lea     rdx, [rax+1]^^^jz      loc_468B58^^^mov     rdi, [rbp+var_278]^^^mov     rsi, [rbp+var_2B0]^^^mov     [rsi+rax*8+10h], rdi^^^mov     [rsi], rdx^^^mov     [rbp+var_290], 64h^^^xor     r15d, r15d^^^cmp     byte ptr [rcx+1], 5Eh^^^jz      loc_467F2E^^^test    r8d, r8d^^^mov     eax, 7FFFFFFFh^^^cmovs   r8d, eax^^^cmp     [rbp+var_258], 0FFh^^^jbe     loc_467F07^^^mov     rdi, [rbp+var_240]^^^xor     eax, eax^^^mov     ecx, 20h^^^rep stosq^^^mov     rdx, [rbp+var_248]^^^movzx   eax, byte ptr [rdx]^^^cmp     al, 2Dh^^^jz      short loc_465E0A^^^cmp     al, 5Dh^^^mov     rdx, [rbp+var_248]^^^jnz     short loc_465E3E^^^mov     rdi, [rbp+var_240]^^^movzx   eax, al^^^add     [rbp+var_248], 1^^^mov     rdx, [rbp+var_248]^^^mov     byte ptr [rdi+rax], 1^^^jmp     short loc_465E3E^^^mov     rdi, [rbp+var_240]^^^movzx   eax, al^^^mov     byte ptr [rdi+rax], 1^^^movzx   eax, byte ptr [rdx]^^^test    al, al^^^jz      loc_467900^^^add     rdx, 1^^^cmp     al, 5Dh^^^jz      loc_46751E^^^cmp     al, 2Dh^^^jnz     short loc_465E30^^^movzx   edi, byte ptr [rdx]^^^test    dil, dil^^^jz      short loc_465E30^^^cmp     dil, 5Dh^^^jz      short loc_465E30^^^movzx   ecx, byte ptr [rdx-2]^^^cmp     cl, dil^^^ja      short loc_465E30^^^jnb     short loc_465E3E^^^mov     rsi, [rbp+var_240]^^^movzx   eax, cl^^^add     ecx, 1^^^mov     byte ptr [rsi+rax], 1^^^cmp     [rdx], cl^^^ja      short loc_465E79^^^jmp     short loc_465E3E^^^xor     r15d, r15d      ^^^test    byte ptr [rbp+var_250], 8^^^jnz     loc_465087^^^test    byte ptr [rbp+var_250], 1^^^jz      loc_467FCF^^^test    r11d, r11d^^^jnz     loc_46855F^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_468BC0^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^xor     r15d, r15d^^^mov     [rax], r14^^^jmp     loc_465087^^^or      dword ptr [rbp+var_250], 40h^^^mov     dword ptr [rbp+var_228], 0^^^jmp     loc_465714^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_466ED8^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B2A6^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46B284^^^cmp     r12d, 2Bh^^^jz      short loc_465F44^^^cmp     r12d, 2Dh^^^mov     byte ptr [rbp+var_2FC], 0^^^jnz     short loc_465F81^^^cmp     r12d, 2Dh^^^setz    byte ptr [rbp+var_2FC]^^^test    r8d, r8d^^^jz      loc_46BA00^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B5BA^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^xor     eax, eax^^^add     r14, 1^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^mov     eax, [rax+rdx*4]^^^cmp     eax, 6Eh^^^jz      loc_467C58^^^cmp     eax, 69h^^^jz      loc_468034^^^cmp     r12d, 30h^^^jnz     short loc_465FB4^^^test    r8d, r8d^^^jnz     loc_466F20^^^xor     r15d, r15d^^^mov     byte ptr [rbp+var_2B8], 65h^^^mov     ecx, dword ptr [rbp+var_250]^^^mov     esi, dword ptr [rbp+var_250]^^^lea     eax, [r12-30h]^^^mov     [rbp+var_228], r14^^^mov     byte ptr [rbp+var_2C0], 0^^^mov     r9d, r8d^^^mov     byte ptr [rbp+var_268], 0^^^mov     r14, [rbp+var_240]^^^and     ecx, 800h^^^and     esi, 80h^^^cmp     eax, 9^^^mov     [rbp+var_2DC], ecx^^^mov     dword ptr [rbp+var_2D8], esi^^^mov     rdx, [rbp+var_258]^^^mov     dword ptr [rbp+var_288], r11d^^^ja      short loc_466074^^^cmp     rdx, r15^^^jz      loc_46BAAB^^^mov     [r14+r15], r12b^^^add     r15, 1^^^test    r9d, r9d^^^jz      loc_468687^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4687FE^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46DE46^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^xor     eax, eax^^^add     [rbp+var_228], 1^^^test    r9d, r9d^^^setnle  al^^^sub     r9d, eax^^^lea     eax, [r12-30h]^^^cmp     eax, 9^^^jbe     short loc_466019^^^cmp     byte ptr [rbp+var_2C0], 0^^^jz      loc_46732A^^^movzx   ecx, byte ptr [rbp+var_2B8]^^^cmp     [r14+r15-1], cl^^^jz      loc_46790B^^^test    r9d, r9d^^^mov     r8d, 7FFFFFFFh^^^cmovg   r8d, r9d^^^cmp     byte ptr [rbp+var_268], 0^^^jz      loc_467133^^^mov     rsi, [rbp+var_2A8]^^^movzx   eax, byte ptr [rsi]^^^mov     r13, rsi^^^test    al, al^^^jnz     loc_4671B0^^^mov     rcx, [rbp+var_2A8]^^^cmp     byte ptr [rcx], 0^^^jz      short loc_466126^^^mov     r13, rcx^^^mov     dword ptr [rbp+var_268], r9d^^^mov     dword ptr [rbp+var_2D0], r8d^^^mov     [rbp+var_258], rbx^^^nop     word ptr [rax+rax+00000000h]^^^cmp     rdx, r15^^^jz      loc_46DD43^^^movzx   eax, byte ptr [r13+0]^^^add     r13, 1^^^mov     [r14+r15], al^^^add     r15, 1^^^cmp     byte ptr [r13+0], 0^^^jnz     short loc_4660F0^^^mov     r9d, dword ptr [rbp+var_268]^^^mov     r8d, dword ptr [rbp+var_2D0]^^^mov     rbx, [rbp+var_258]^^^test    r9d, r9d^^^jle     short loc_46612E^^^mov     r9d, r8d^^^mov     byte ptr [rbp+var_268], 1^^^jmp     loc_46602A^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_466EED^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469B66^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^cmp     r12d, 25h^^^jnz     loc_46BB59^^^add     r14, 1^^^xor     r15d, r15d^^^jmp     loc_465087^^^mov     dword ptr [rbp+var_228], 8^^^jmp     loc_465714^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     [rbp+var_328], rsi^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rdx, [rbp+var_338]^^^mov     rsi, [rbp+var_328]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4662E6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jnz     loc_4663E8^^^test    r8d, r8d^^^cmovg   r8d, r15d^^^sub     r13, 1^^^cmp     rsi, r13^^^jz      loc_4696F0^^^xor     eax, eax^^^mov     [r10+r13], r12b^^^add     r13, 1^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4663D0^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469665^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r9, 1^^^jmp     loc_465860^^^cmp     dword ptr [rbp+var_228], 0Ah^^^jnz     loc_465897^^^mov     r15d, dword ptr [rbp+var_268]^^^test    r15d, r15d^^^jz      loc_465897^^^mov     rdx, [rbp+var_230]^^^test    r8d, r8d^^^mov     r15d, 7FFFFFFFh^^^cmovg   r15d, r8d^^^movzx   eax, byte ptr [rdx]^^^movzx   edx, al^^^cmp     r12d, edx^^^jnz     loc_46672C^^^cmp     rsi, r13^^^mov     r14, [rbp+var_230]^^^jz      short loc_466305^^^mov     [r10+r13], r12b^^^add     r13, 1^^^cmp     byte ptr [r14+1], 0^^^lea     rdx, [r14+1]^^^jz      loc_466208^^^test    r15d, r15d^^^jz      loc_4663E8^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_466183^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, byte ptr [rdx]^^^add     r9, 1^^^sub     r15d, 1^^^movzx   ecx, al^^^cmp     ecx, r12d^^^jnz     loc_466200^^^cmp     rsi, r13^^^mov     r14, rdx^^^jnz     short loc_4662AC^^^lea     rcx, [r13+r13+0]^^^mov     edi, 100h^^^cmp     rcx, 100h^^^cmovb   rcx, rdi^^^cmp     [rbp+var_279], 0^^^mov     rdi, r10^^^jz      loc_4682CF^^^mov     rsi, rcx^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     [rbp+var_258], rax^^^mov     rcx, [rbp+var_348]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46B0C4^^^cmp     [rbp+var_279], 0^^^jz      loc_46906B^^^mov     rsi, rcx^^^mov     r10, [rbp+var_258]^^^jmp     loc_4662AC^^^mov     rdi, [rbp+var_260]^^^movsxd  rdx, r12d^^^mov     rax, [rdi+68h]^^^test    byte ptr [rax+rdx*2+1], 10h^^^jnz     loc_466213^^^jmp     loc_465897^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^jmp     loc_465860^^^cmp     [rbp+var_230], rdx^^^mov     [rbp+var_240], r10^^^mov     [rbp+var_258], rsi^^^jnb     loc_4658A5^^^mov     rax, [rbp+var_230]^^^sub     rax, rdx^^^add     r13, rax^^^cmp     r12d, 0FFFFFFFFh^^^jz      short loc_466450^^^sub     r9, 1^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    _IO_sputbackc^^^mov     r11d, [rbp+var_358]^^^mov     r9, [rbp+var_340]^^^mov     rdx, [rbp+var_338]^^^lea     r14, [rdx-1]^^^cmp     [rbp+var_230], r14^^^jnb     short loc_4664D3^^^mov     r12, r14^^^mov     [rbp+var_268], r13^^^mov     [rbp+var_2B8], r14^^^mov     rcx, rdx^^^mov     r15, [rbp+var_230]^^^mov     r13, rdx^^^mov     [rbp+var_288], r9^^^mov     r14d, r11d^^^jmp     short loc_46648D^^^mov     rcx, r12^^^mov     r12, rax^^^movzx   esi, byte ptr [rcx-1]^^^mov     rdi, rbx^^^call    _IO_sputbackc^^^lea     rax, [r12-1]^^^cmp     rax, r15^^^jnz     short loc_466487^^^mov     rax, [rbp+var_230]^^^mov     r11d, r14d^^^mov     r14, [rbp+var_2B8]^^^mov     rdx, r13^^^mov     r9, [rbp+var_288]^^^mov     r13, [rbp+var_268]^^^sub     r12, rdx^^^sub     rax, rdx^^^lea     rdx, [rax+r14+2]^^^add     r9, r12^^^test    r13, r13^^^movzx   r12d, byte ptr [rdx-1]^^^jnz     loc_4658AE^^^cmp     r12d, 28h^^^jnz     loc_467481^^^test    dword ptr [rbp+var_250], 1000h^^^jz      loc_467481^^^mov     rax, [rbp+var_260]^^^mov     r13, [rax+70h]^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469CC8^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, r12b^^^add     r9, 1^^^shl     rax, 2^^^cmp     dword ptr [r13+rax+0], 6Eh^^^jnz     loc_467481^^^mov     rdx, [rbp+var_260]^^^cmp     r12d, 0FFFFFFFFh^^^mov     r13, [rdx+70h]^^^jz      loc_4679D2^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A284^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, r12b^^^add     r9, 1^^^shl     rax, 2^^^cmp     dword ptr [r13+rax+0], 69h^^^jnz     loc_467481^^^mov     rsi, [rbp+var_260]^^^cmp     r12d, 0FFFFFFFFh^^^mov     r13, [rsi+70h]^^^jz      loc_4679B8^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A213^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, r12b^^^add     r9, 1^^^shl     rax, 2^^^cmp     dword ptr [r13+rax+0], 6Ch^^^jnz     loc_467481^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_467454^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A164^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^cmp     r12d, 29h^^^jnz     loc_46748B^^^cmp     [rbp+var_258], 0^^^jz      loc_46E016^^^mov     rdi, [rbp+var_240]^^^lea     r14, [r9+1]^^^mov     r13d, 1^^^mov     byte ptr [rdi], 30h^^^jmp     loc_4658DF^^^cmp     rax, 1^^^jnz     loc_46A1FA^^^sub     dword ptr [rbp+var_228], 1^^^add     r15, 4^^^mov     eax, dword ptr [rbp+var_228]^^^test    eax, eax^^^jle     loc_468705^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469C98^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^sub     [rbp+var_250], 1^^^jmp     loc_465BD8^^^call    __strtoull_internal^^^mov     r11d, [rbp+var_358]^^^jmp     loc_465938^^^test    byte ptr [rbp+var_250], 1^^^jz      loc_46696A^^^test    r11d, r11d^^^jz      loc_46693E^^^mov     rsi, [rbp+var_270]^^^mov     rdx, [rsi]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rsi+8]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rsi+10h]^^^mov     rcx, [rbp+var_B8]^^^mov     [rbp+var_B0], rdx^^^mov     edx, dword ptr [rbp+var_C0]^^^sub     r11d, 1^^^jz      short loc_4666E1^^^cmp     edx, 2Fh^^^ja      loc_46744B^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_4666CF^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rcx^^^ja      loc_468024^^^mov     ecx, edx^^^add     rcx, [rbp+var_B0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_C0], edx^^^mov     rdx, [rcx]^^^jmp     loc_466962^^^lea     rdi, [rbp+var_100]^^^mov     rdx, rbx^^^mov     esi, offset funlockfile^^^call    near ptr 0^^^mov     eax, [rbx]^^^jmp     loc_464F23^^^test    al, al^^^mov     rdx, [rbp+var_230]^^^jz      loc_466208^^^jmp     loc_4663E8^^^lea     rcx, [rbp+var_70]^^^mov     edx, 1^^^mov     rsi, r13^^^mov     rdi, r15^^^call    mbrtowc^^^cmp     rax, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_467000^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469276^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     byte ptr [rbp+var_C0], r12b^^^jmp     short loc_466740^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_467C08^^^test    r11d, r11d^^^jnz     loc_468A49^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_46827F^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46E2C9^^^mov     edi, 190h^^^mov     dword ptr [rbp+var_350], r8d^^^call    malloc^^^mov     rcx, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_298], rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rcx], rax^^^jz      loc_46903D^^^cmp     [rbp+var_2B0], 0^^^jz      loc_468A14^^^mov     rsi, [rbp+var_2B0]^^^mov     rax, [rsi]^^^cmp     rax, 20h^^^lea     rdx, [rax+1]^^^jz      loc_468A14^^^mov     rcx, [rbp+var_2B0]^^^mov     rsi, [rbp+var_278]^^^mov     [rbp+var_290], 64h^^^mov     [rcx+rax*8+10h], rsi^^^mov     [rcx], rdx^^^jmp     loc_465A75^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_467BB8^^^test    r11d, r11d^^^jnz     loc_468866^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_468268^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46B2EB^^^cmp     r8d, 400h^^^mov     eax, 400h^^^mov     dword ptr [rbp+var_350], r8d^^^cmovle  eax, r8d^^^cdqe^^^mov     rdi, rax^^^mov     [rbp+var_290], rax^^^shl     rdi, 2^^^call    malloc^^^mov     rcx, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_298], rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rcx], rax^^^jz      loc_4695A0^^^cmp     [rbp+var_2B0], 0^^^jz      loc_4688E1^^^mov     rsi, [rbp+var_2B0]^^^mov     rax, [rsi]^^^cmp     rax, 20h^^^lea     rdx, [rax+1]^^^jz      loc_4688E1^^^mov     rcx, [rbp+var_2B0]^^^mov     rsi, [rbp+var_278]^^^mov     [rcx], rdx^^^mov     [rcx+rax*8+10h], rsi^^^jmp     loc_465B73^^^test    r11d, r11d^^^jnz     loc_4681C8^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_4674CA^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^mov     [rdx], rax^^^jmp     loc_4659AC^^^test    byte ptr [rbp+var_250], 4^^^jz      loc_467A76^^^test    r11d, r11d^^^jz      loc_465985^^^mov     rdi, [rbp+var_270]^^^mov     rdx, [rdi]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rdi+8]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rdi+10h]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4669CC^^^cmp     ecx, 2Fh^^^ja      loc_4685D4^^^add     ecx, 8^^^sub     r11d, 1^^^jnz     short loc_4669BA^^^cmp     ecx, 2Fh^^^mov     dword ptr [rbp+var_C0], ecx^^^mov     [rbp+var_B8], rdx^^^ja      loc_468856^^^mov     edx, ecx^^^add     ecx, 8^^^add     rdx, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], ecx^^^jmp     loc_4659A6^^^or      dword ptr [rbp+var_250], 100h^^^mov     r13d, edx^^^jmp     loc_4652B0^^^mov     r13d, dword ptr [rbp+var_250]^^^and     r13d, 8^^^jnz     loc_466AE7^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_4683D8^^^test    r11d, r11d^^^jnz     loc_468FAD^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_468F96^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46E27F^^^mov     edi, 64h^^^mov     dword ptr [rbp+var_350], r8d^^^call    malloc^^^mov     rcx, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_2A0], rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rcx], rax^^^jz      loc_46E251^^^cmp     [rbp+var_2B0], 0^^^jz      loc_468D28^^^mov     rsi, [rbp+var_2B0]^^^mov     rax, [rsi]^^^cmp     rax, 20h^^^lea     rdx, [rax+1]^^^jz      loc_468D28^^^mov     rcx, [rbp+var_2B0]^^^mov     rsi, [rbp+var_278]^^^mov     [rbp+var_290], 64h^^^mov     [rcx+rax*8+10h], rsi^^^mov     [rcx], rdx^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_468CB9^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B43A^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rsi, [rbp+var_260]^^^movsxd  rdx, r12d^^^add     r14, 1^^^mov     rax, [rsi+68h]^^^test    byte ptr [rax+rdx*2+1], 20h^^^jnz     loc_466BEC^^^mov     r15d, dword ptr [rbp+var_250]^^^mov     rsi, [rbp+var_2A0]^^^mov     edx, r13d^^^mov     r13d, r12d^^^mov     r12, rbx^^^mov     ebx, r8d^^^and     r15d, 2100h^^^mov     dword ptr [rbp+var_268], r15d^^^mov     r15, r14^^^mov     r14, [rbp+var_290]^^^test    edx, edx^^^jnz     short loc_466B8F^^^mov     r11d, dword ptr [rbp+var_268]^^^mov     [rsi], r13b^^^add     rsi, 1^^^test    r11d, r11d^^^jz      short loc_466B8F^^^mov     rax, [rbp+var_278]^^^mov     [rbp+var_228], r14^^^mov     rdi, [rax]^^^lea     rax, [rdi+r14]^^^cmp     rsi, rax^^^jz      loc_469185^^^test    ebx, ebx^^^jle     short loc_466B9C^^^sub     ebx, 1^^^jz      loc_469166^^^mov     rax, [r12+8]^^^cmp     rax, [r12+10h]^^^jnb     loc_46C917^^^movzx   r13d, byte ptr [rax]^^^add     rax, 1^^^mov     [r12+8], rax^^^mov     rdi, [rbp+var_260]^^^movsxd  rcx, r13d^^^add     r15, 1^^^mov     rax, [rdi+68h]^^^test    byte ptr [rax+rcx*2+1], 20h^^^jz      short loc_466B5A^^^mov     [rbp+var_290], r14^^^mov     rbx, r12^^^mov     [rbp+var_2A0], rsi^^^mov     r12d, r13d^^^mov     r14, r15^^^mov     r13d, edx^^^movzx   esi, r12b^^^mov     rdi, rbx^^^sub     r14, 1^^^call    _IO_sputbackc^^^xor     r15d, r15d^^^test    r13d, r13d^^^jnz     loc_465087^^^mov     rax, [rbp+var_2A0]^^^mov     byte ptr [rax], 0^^^add     rax, 1^^^test    dword ptr [rbp+var_250], 2100h^^^mov     [rbp+var_2A0], rax^^^jz      loc_467119^^^mov     rdx, [rbp+var_278]^^^mov     rsi, rax^^^mov     rdi, [rdx]^^^sub     rsi, rdi^^^cmp     rsi, [rbp+var_290]^^^jnz     loc_467105^^^jmp     loc_467119^^^mov     r15d, dword ptr [rbp+var_250]^^^cmp     r8d, 0FFFFFFFFh^^^mov     eax, 1^^^cmovz   r8d, eax^^^and     r15d, 8^^^jnz     loc_466D44^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_468387^^^test    r11d, r11d^^^jnz     loc_468DB4^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_468D9D^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46CED6^^^cmp     r8d, 400h^^^mov     eax, 400h^^^mov     dword ptr [rbp+var_350], r8d^^^cmovle  eax, r8d^^^cdqe^^^mov     rdi, rax^^^mov     [rbp+var_290], rax^^^call    malloc^^^mov     rcx, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_2A0], rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rcx], rax^^^jz      loc_46CE19^^^cmp     [rbp+var_2B0], 0^^^jz      loc_468EB7^^^mov     rsi, [rbp+var_2B0]^^^mov     rax, [rsi]^^^cmp     rax, 20h^^^lea     rdx, [rax+1]^^^jz      loc_468EB7^^^mov     rcx, [rbp+var_2B0]^^^mov     rsi, [rbp+var_278]^^^mov     [rcx], rdx^^^mov     [rcx+rax*8+10h], rsi^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_468B8D^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B0F1^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^test    r15d, r15d^^^lea     r13, [r14+1]^^^jnz     loc_4674E1^^^mov     esi, dword ptr [rbp+var_250]^^^movsxd  rax, r8d^^^lea     r14, [rax-1]^^^and     esi, 2100h^^^mov     dword ptr [rbp+var_250], esi^^^jz      loc_4685F5^^^mov     rcx, [rbp+var_2A0]^^^mov     r15, [rbp+var_290]^^^mov     [rbp+var_228], r13^^^mov     r13d, r8d^^^mov     rax, [rbp+var_278]^^^mov     [rbp+var_268], r15^^^mov     rdi, [rax]^^^lea     rax, [rdi+r15]^^^cmp     rcx, rax^^^jz      loc_4693B7^^^sub     r13d, 1^^^mov     [rcx], r12b^^^add     rcx, 1^^^test    r13d, r13d^^^jle     loc_4695E9^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B22F^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     [rbp+var_228], 1^^^sub     r14, 1^^^jmp     short loc_466DAC^^^and     esi, 8^^^mov     dword ptr [rbp+var_228], esi^^^jnz     loc_465DB6^^^test    dword ptr [rbp+var_250], 2100h^^^jz      loc_468478^^^test    r11d, r11d^^^jnz     loc_4690E2^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4690CB^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_278], rax^^^cmp     [rbp+var_278], 0^^^jz      loc_46E2B3^^^mov     edi, 64h^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^call    malloc^^^mov     rsi, [rbp+var_278]^^^test    rax, rax^^^mov     [rbp+var_2A0], rax^^^mov     rcx, [rbp+var_348]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     [rsi], rax^^^jnz     loc_465D6F^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edi, [rbp+var_234]^^^mov     fs:[rax], edi^^^jmp     loc_465F1C^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^mov     ecx, [rbp+var_238]^^^mov     r13d, 1^^^test    ecx, ecx^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_258], 0^^^jz      loc_46E193^^^mov     rdi, [rbp+var_240]^^^mov     byte ptr [rdi], 30h^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46E1C3^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^xor     eax, eax^^^test    r8d, r8d^^^mov     r15d, 1^^^setnle  al^^^mov     byte ptr [rbp+var_2B8], 65h^^^sub     r8d, eax^^^jz      loc_465FBE^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 78h^^^jnz     loc_465FBE^^^cmp     [rbp+var_258], 1^^^jz      loc_469B94^^^mov     rdi, [rbp+var_240]^^^or      dword ptr [rbp+var_250], 800h^^^and     dword ptr [rbp+var_250], 0FFFFFF7Fh^^^cmp     r12d, 0FFFFFFFFh^^^mov     [rdi+1], r12b^^^jz      loc_469B7F^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_469BEB^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^xor     eax, eax^^^test    r8d, r8d^^^mov     r15d, 2^^^setnle  al^^^mov     byte ptr [rbp+var_2B8], 70h^^^sub     r8d, eax^^^jmp     loc_465FBE^^^cmp     rax, 1^^^jnz     loc_46E118^^^mov     r8d, dword ptr [rbp+var_268]^^^add     r15, 4^^^test    r8d, r8d^^^jnz     short loc_467049^^^mov     edi, dword ptr [rbp+var_288]^^^test    edi, edi^^^jz      short loc_467049^^^mov     rax, [rbp+var_278]^^^mov     rcx, [rbp+var_290]^^^mov     rdi, [rax]^^^mov     rdx, rcx^^^shl     rdx, 2^^^lea     rax, [rdi+rdx]^^^cmp     r15, rax^^^jz      loc_468C75^^^mov     esi, dword ptr [rbp+var_228]^^^test    esi, esi^^^jle     short loc_467060^^^sub     dword ptr [rbp+var_228], 1^^^jz      loc_468C69^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B13D^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rdi, [rbp+var_260]^^^movsxd  rdx, r12d^^^add     r14, 1^^^mov     rax, [rdi+68h]^^^test    byte ptr [rax+rdx*2+1], 20h^^^jz      loc_465AE8^^^mov     [rbp+var_298], r15^^^movzx   esi, r12b^^^mov     rdi, rbx^^^sub     r14, 1^^^call    _IO_sputbackc^^^mov     ecx, dword ptr [rbp+var_268]^^^xor     r15d, r15d^^^test    ecx, ecx^^^jnz     loc_465087^^^mov     rax, [rbp+var_298]^^^mov     dword ptr [rax], 0^^^add     rax, 4^^^test    dword ptr [rbp+var_250], 2100h^^^mov     [rbp+var_298], rax^^^jz      short loc_467119^^^mov     rdx, [rbp+var_278]^^^mov     rdi, [rdx]^^^sub     rax, rdi^^^sar     rax, 2^^^cmp     rax, [rbp+var_290]^^^jz      short loc_467119^^^lea     rsi, ds:0[rax*4]^^^call    realloc^^^test    rax, rax^^^jz      short loc_467119^^^mov     rcx, [rbp+var_278]^^^mov     [rcx], rax^^^add     [rbp+var_238], 1^^^xor     r15d, r15d^^^mov     [rbp+var_278], 0^^^jmp     loc_465087^^^mov     rdi, [rbp+var_2A8]^^^movzx   eax, byte ptr [rdi]^^^mov     r13, rdi^^^movzx   ecx, al^^^cmp     r12d, ecx^^^jnz     loc_4660BA^^^add     r13, 1^^^cmp     byte ptr [rdi+1], 0^^^jz      loc_4660C2^^^mov     r12, [rbp+var_228]^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46DEF2^^^movzx   ecx, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, byte ptr [r13+0]^^^add     r12, 1^^^sub     r8d, 1^^^movzx   esi, al^^^cmp     esi, ecx^^^jnz     loc_468644^^^add     r13, 1^^^cmp     byte ptr [r13+0], 0^^^jz      loc_468635^^^test    r8d, r8d^^^jnz     short loc_467161^^^mov     [rbp+var_228], r12^^^mov     r12d, ecx^^^cmp     byte ptr [rbp+var_268], 0^^^jnz     loc_4674BE^^^mov     r10d, dword ptr [rbp+var_2D8]^^^test    r10d, r10d^^^jz      loc_4674BE^^^mov     rcx, r13^^^sub     rcx, [rbp+var_2A8]^^^mov     r13, [rbp+var_230]^^^test    rcx, rcx^^^jle     loc_4691CA^^^mov     rax, [rbp+var_2A8]^^^movzx   eax, byte ptr [rax]^^^cmp     [r13+0], al^^^jnz     loc_4672A9^^^mov     rsi, r13^^^mov     r10, rdx^^^mov     rdi, [rbp+var_2A8]^^^jmp     short loc_46721E^^^movzx   edx, byte ptr [rdi+rax]^^^cmp     [r13+0], dl^^^jnz     loc_467FB8^^^add     r13, 1^^^mov     rax, r13^^^sub     rax, rsi^^^cmp     rax, rcx^^^jl      short loc_467210^^^mov     rdx, r10^^^cmp     rax, rcx^^^jnz     short loc_4672A9^^^movzx   eax, byte ptr [r13+0]^^^cmp     r12d, eax^^^jnz     short loc_4672A9^^^test    r8d, r8d^^^js      short loc_4672A9^^^cmp     byte ptr [r13+1], 0^^^lea     rax, [r13+1]^^^mov     r13, rax^^^jz      short loc_4672A9^^^test    r8d, r8d^^^jz      short loc_4672A9^^^mov     r12, [rbp+var_228]^^^jmp     short loc_467265^^^test    r8d, r8d^^^jz      short loc_46729F^^^mov     rcx, [rbx+8]^^^cmp     rcx, [rbx+10h]^^^jnb     loc_46B1D5^^^movzx   eax, byte ptr [rcx]^^^add     rcx, 1^^^mov     [rbx+8], rcx^^^movzx   ecx, byte ptr [r13+0]^^^add     r12, 1^^^sub     r8d, 1^^^cmp     ecx, eax^^^jnz     short loc_46729F^^^test    r8d, r8d^^^js      short loc_46729F^^^add     r13, 1^^^cmp     byte ptr [r13+0], 0^^^jnz     short loc_467260^^^mov     [rbp+var_228], r12^^^mov     r12d, eax^^^test    r13, r13^^^jz      loc_469346^^^cmp     byte ptr [r13+0], 0^^^jnz     loc_469346^^^mov     rcx, [rbp+var_230]^^^cmp     byte ptr [rcx], 0^^^jz      short loc_46731E^^^mov     r13, rcx^^^mov     dword ptr [rbp+var_2D0], r9d^^^mov     [rbp+var_280], r8d^^^mov     [rbp+var_258], rbx^^^nop     dword ptr [rax+00000000h]^^^cmp     rdx, r15^^^jz      loc_46B70A^^^movzx   eax, byte ptr [r13+0]^^^add     r13, 1^^^mov     [r14+r15], al^^^add     r15, 1^^^cmp     byte ptr [r13+0], 0^^^jnz     short loc_4672E8^^^mov     r9d, dword ptr [rbp+var_2D0]^^^mov     r8d, [rbp+var_280]^^^mov     rbx, [rbp+var_258]^^^test    r9d, r9d^^^cmovg   r9d, r8d^^^jmp     loc_46602A^^^mov     r11d, [rbp+var_2DC]^^^test    r11d, r11d^^^jz      loc_4673F8^^^mov     rdi, [rbp+var_260]^^^movsxd  rcx, r12d^^^mov     rax, [rdi+68h]^^^test    byte ptr [rax+rcx*2+1], 10h^^^jz      loc_4673F8^^^cmp     rdx, r15^^^jnz     loc_466022^^^lea     r13, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, r14^^^cmp     r13, 100h^^^cmovb   r13, rax^^^cmp     [rbp+var_279], 0^^^jnz     short loc_4673B7^^^cmp     r13, 1000h^^^jbe     loc_46794F^^^mov     rdi, r13^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_340], r9d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46794F^^^xor     edi, edi^^^mov     rsi, r13^^^mov     dword ptr [rbp+var_340], r9d^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     r9d, dword ptr [rbp+var_340]^^^jz      loc_46B849^^^cmp     [rbp+var_279], 0^^^jz      loc_46B80D^^^mov     rdx, r13^^^mov     r14, rcx^^^jmp     loc_466022^^^test    r15, r15^^^jz      loc_466093^^^mov     rsi, [rbp+var_260]^^^movzx   ecx, r12b^^^movzx   eax, byte ptr [rbp+var_2B8]^^^mov     rdi, [rsi+70h]^^^cmp     al, [rdi+rcx*4]^^^jnz     loc_466093^^^cmp     rdx, r15^^^jz      loc_46B526^^^movzx   ecx, byte ptr [rbp+var_2B8]^^^mov     byte ptr [rbp+var_2C0], 1^^^mov     byte ptr [rbp+var_268], 1^^^mov     [r14+r15], cl^^^add     r15, 1^^^jmp     loc_46602A^^^add     rcx, 8^^^jmp     loc_4666C9^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     r13d, 2^^^mov     fs:[rax], edx^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^movzx   eax, byte ptr [rdi]^^^cmp     al, 2Dh^^^jnz     loc_467A19^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46B16D^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     r13d, 2^^^call    _IO_sputbackc^^^jmp     loc_465120^^^movzx   esi, al^^^mov     rdi, rbx^^^mov     r13d, 2^^^call    _IO_sputbackc^^^jmp     loc_465120^^^mov     r13, [rbp+var_230]^^^jmp     loc_4672A9^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_46695F^^^cmp     r8d, 1^^^jle     short loc_467513^^^sub     r8d, 2^^^lea     r14, [r14+r8+2]^^^mov     rdx, [rbx+8]^^^cmp     rdx, [rbx+10h]^^^jnb     loc_46E2FA^^^movzx   r12d, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^add     r13, 1^^^cmp     r13, r14^^^jnz     short loc_4674F0^^^mov     r14, r13^^^xor     r15d, r15d^^^jmp     loc_465087^^^test    r13d, r13d^^^mov     [rbp+var_248], rdx^^^jz      loc_46778E^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_468B1F^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46E333^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     ecx, dword ptr [rbp+var_250]^^^mov     rdi, [rbp+var_240]^^^movsxd  rax, r12d^^^mov     [rbp+var_40], 0^^^lea     r13, [r14+1]^^^mov     [rbp+var_288], r14^^^mov     [rbp+var_268], 0^^^and     ecx, 2100h^^^cmp     [rdi+rax], r15b^^^mov     r14, r13^^^mov     dword ptr [rbp+var_2C0], ecx^^^mov     r13d, r8d^^^jz      short loc_4675E4^^^mov     eax, dword ptr [rbp+var_228]^^^test    eax, eax^^^jz      short loc_467608^^^sub     r13d, 1^^^jz      loc_46902E^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4676D0^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46E37F^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rdi, [rbp+var_240]^^^movsxd  rax, r12d^^^add     r14, 1^^^cmp     [rdi+rax], r15b^^^jnz     short loc_467598^^^mov     r13, r14^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     r14, [rbp+var_288]^^^sub     r13, 1^^^call    _IO_sputbackc^^^jmp     loc_4676EA^^^mov     rdi, [rbp+var_298]^^^lea     rcx, [rbp+var_40]^^^lea     rsi, [rbp+var_A0]^^^mov     edx, 1^^^mov     byte ptr [rbp+var_A0], r12b^^^call    mbrtowc^^^cmp     rax, 0FFFFFFFFFFFFFFFEh^^^jz      loc_468180^^^mov     r11d, dword ptr [rbp+var_2C0]^^^add     [rbp+var_298], 4^^^mov     [rbp+var_268], 0^^^test    r11d, r11d^^^jz      loc_4675A2^^^mov     rax, [rbp+var_278]^^^mov     rdx, [rbp+var_290]^^^mov     rdi, [rax]^^^mov     rcx, rdx^^^mov     [rbp+var_2D0], rdx^^^shl     rcx, 2^^^mov     rax, rcx^^^mov     [rbp+var_2B8], rcx^^^add     rax, rdi^^^cmp     [rbp+var_298], rax^^^jnz     loc_4675A2^^^mov     rsi, rdx^^^shl     rsi, 3^^^call    realloc^^^test    rax, rax^^^jz      loc_46E40B^^^mov     rdi, [rbp+var_278]^^^shl     [rbp+var_290], 1^^^mov     [rdi], rax^^^add     rax, [rbp+var_2B8]^^^mov     [rbp+var_298], rax^^^jmp     loc_4675A2^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     r13, r14^^^mov     r14, [rbp+var_288]^^^mov     fs:[rax], edx^^^cmp     [rbp+var_268], 0^^^jnz     loc_46DD2A^^^cmp     r14, r13^^^jz      loc_46BDC1^^^mov     r10d, dword ptr [rbp+var_228]^^^xor     r15d, r15d^^^mov     r14, r13^^^test    r10d, r10d^^^jnz     loc_465087^^^mov     rax, [rbp+var_298]^^^mov     r9d, dword ptr [rbp+var_2C0]^^^mov     dword ptr [rax], 0^^^add     rax, 4^^^test    r9d, r9d^^^mov     [rbp+var_298], rax^^^jz      short loc_467771^^^mov     rdx, [rbp+var_278]^^^mov     rdi, [rdx]^^^sub     rax, rdi^^^sar     rax, 2^^^cmp     rax, [rbp+var_290]^^^jz      short loc_467771^^^lea     rsi, ds:0[rax*4]^^^call    realloc^^^test    rax, rax^^^jz      short loc_467771^^^mov     rcx, [rbp+var_278]^^^mov     [rcx], rax^^^add     [rbp+var_238], 1^^^mov     r14, r13^^^xor     r15d, r15d^^^mov     [rbp+var_278], 0^^^jmp     loc_465087^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_468CEE^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46BD9A^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rdi, [rbp+var_240]^^^movsxd  rax, r12d^^^lea     r13, [r14+1]^^^cmp     [rdi+rax], r15b^^^jz      loc_46787A^^^mov     eax, dword ptr [rbp+var_250]^^^mov     rdx, [rbp+var_2A0]^^^mov     ecx, r15d^^^mov     r9, r14^^^mov     r15, r13^^^mov     r13d, r12d^^^mov     r12, rbx^^^mov     ebx, r8d^^^and     eax, 2100h^^^mov     dword ptr [rbp+var_268], eax^^^mov     edi, dword ptr [rbp+var_228]^^^test    edi, edi^^^jnz     short loc_46782C^^^mov     esi, dword ptr [rbp+var_268]^^^mov     [rdx], r13b^^^add     rdx, 1^^^test    esi, esi^^^jz      short loc_46782C^^^mov     rsi, [rbp+var_278]^^^mov     rax, [rbp+var_290]^^^mov     rdi, [rsi]^^^add     rax, rdi^^^cmp     rdx, rax^^^jz      loc_468916^^^sub     ebx, 1^^^test    ebx, ebx^^^jle     loc_469561^^^mov     rax, [r12+8]^^^cmp     rax, [r12+10h]^^^jnb     loc_46E0B3^^^movzx   r13d, byte ptr [rax]^^^add     rax, 1^^^mov     [r12+8], rax^^^mov     rdi, [rbp+var_240]^^^movsxd  rax, r13d^^^add     r15, 1^^^cmp     [rdi+rax], cl^^^jnz     short loc_4677F4^^^mov     rbx, r12^^^mov     r14, r9^^^mov     r12d, r13d^^^mov     [rbp+var_2A0], rdx^^^mov     r13, r15^^^movzx   esi, r12b^^^mov     rdi, rbx^^^sub     r13, 1^^^call    _IO_sputbackc^^^cmp     r14, r13^^^jz      loc_46E2BE^^^mov     edx, dword ptr [rbp+var_228]^^^xor     r15d, r15d^^^mov     r14, r13^^^test    edx, edx^^^jnz     loc_465087^^^mov     rax, [rbp+var_2A0]^^^mov     byte ptr [rax], 0^^^add     rax, 1^^^test    dword ptr [rbp+var_250], 2100h^^^mov     [rbp+var_2A0], rax^^^jz      loc_467771^^^mov     rdx, [rbp+var_278]^^^mov     rsi, rax^^^mov     rdi, [rdx]^^^sub     rsi, rdi^^^cmp     rsi, [rbp+var_290]^^^jz      loc_467771^^^call    realloc^^^test    rax, rax^^^jnz     loc_467767^^^jmp     loc_467771^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     r12d, 2Bh^^^jnz     loc_467FC0^^^cmp     rdx, r15^^^jnz     loc_466022^^^lea     r13, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, r14^^^cmp     r13, 100h^^^cmovb   r13, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_46B967^^^cmp     r13, 1000h^^^ja      loc_46B939^^^add     r13, 0Fh^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+10h]^^^lea     rsi, [r13+rdx+0]^^^sub     rsp, rax^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+r13]^^^cmp     r14, rax^^^cmovz   r13, rsi^^^test    r14, r14^^^jz      loc_4673E6^^^mov     rsi, r14^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_340], r9d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, r13^^^mov     r9d, dword ptr [rbp+var_340]^^^mov     r14, rcx^^^jmp     loc_466022^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edi, [rbp+var_234]^^^mov     fs:[rax], edi^^^mov     eax, 3FCh^^^jmp     loc_4665BA^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, [rbp+var_234]^^^mov     fs:[rax], ecx^^^mov     eax, 3FCh^^^jmp     loc_466573^^^lea     rcx, [rax+2]^^^or      dword ptr [rbp+var_250], 200h^^^movzx   r13d, byte ptr [rax+2]^^^jmp     loc_4652B0^^^lea     rcx, [rax+2]^^^or      dword ptr [rbp+var_250], 3^^^movzx   r13d, byte ptr [rax+2]^^^jmp     loc_4652B0^^^cmp     al, 2Bh^^^jz      loc_467481^^^jmp     loc_4658B8^^^mov     eax, dword ptr [rbp+var_228]^^^test    eax, eax^^^jnz     loc_468832^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_468540^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B178^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r9, 1^^^mov     dword ptr [rbp+var_228], 10h^^^jmp     loc_465826^^^test    dword ptr [rbp+var_250], 200h^^^jnz     loc_468653^^^test    r11d, r11d^^^jnz     loc_4684E8^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_468370^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^mov     [rdx], eax^^^jmp     loc_4659AC^^^test    dword ptr [rbp+var_250], 200h^^^jnz     loc_468777^^^test    r11d, r11d^^^jz      short loc_467A8F^^^mov     rdi, [rbp+var_270]^^^mov     rdx, [rdi]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rdi+8]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rdi+10h]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_467B1B^^^cmp     ecx, 2Fh^^^ja      loc_4685EC^^^add     ecx, 8^^^sub     r11d, 1^^^jnz     short loc_467B09^^^cmp     ecx, 2Fh^^^mov     dword ptr [rbp+var_C0], ecx^^^mov     [rbp+var_B8], rdx^^^ja      loc_46E323^^^mov     edx, ecx^^^add     ecx, 8^^^add     rdx, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], ecx^^^jmp     loc_467AB0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, [rbp+var_234]^^^mov     fs:[rax], ecx^^^mov     eax, [rbp+var_238]^^^mov     r13d, 1^^^test    eax, eax^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, [rbp+var_234]^^^mov     fs:[rax], ecx^^^mov     r10d, [rbp+var_238]^^^mov     r13d, 1^^^test    r10d, r10d^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^test    r11d, r11d^^^jnz     loc_468999^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_468251^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_298], rax^^^cmp     [rbp+var_298], 0^^^jnz     loc_465B73^^^mov     r13d, 2^^^jmp     loc_465120^^^test    r11d, r11d^^^jnz     loc_468BD7^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_46823A^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_298], rax^^^cmp     [rbp+var_298], 0^^^jnz     loc_465A75^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     [rbp+var_258], 0^^^jz      loc_46B319^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi], r12b^^^jz      loc_4695DE^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4695CE^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46DC74^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 61h^^^jnz     loc_46DC69^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 1^^^jz      loc_46DC07^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+1], r12b^^^jz      loc_46DBFC^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46DBDA^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 6Eh^^^jnz     loc_46DC5E^^^cmp     [rbp+var_258], 2^^^jz      loc_46CA31^^^mov     rdi, [rbp+var_240]^^^add     r14, 2^^^mov     r15d, 3^^^mov     [rdi+2], r12b^^^cmp     [rbp+var_258], r15^^^jz      loc_46C974^^^mov     r13, [rbp+var_240]^^^mov     rdi, r13^^^mov     edx, dword ptr [rbp+var_250]^^^mov     byte ptr [rdi+r15], 0^^^lea     rsi, [rbp+var_80]^^^mov     rdi, r13^^^and     edx, 80h^^^test    byte ptr [rbp+var_250], 2^^^jnz     loc_467E92^^^test    byte ptr [rbp+var_250], 3^^^mov     [rbp+var_358], r11d^^^jz      loc_467E1D^^^call    __strtod_internal^^^mov     esi, dword ptr [rbp+var_250]^^^mov     rax, [rbp+var_80]^^^mov     r11d, [rbp+var_358]^^^and     esi, 8^^^jnz     short loc_467DFE^^^cmp     rax, [rbp+var_240]^^^mov     rcx, rax^^^jz      loc_46B68D^^^test    r11d, r11d^^^jnz     loc_468E36^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_4693A0^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^cmp     byte ptr [rbp+var_2FC], 0^^^jz      short loc_467DF6^^^movsd   xmm1, cs:qword_4B01B0^^^xorpd   xmm0, xmm1^^^movsd   qword ptr [rdx], xmm0^^^jmp     short loc_467DFE^^^fstp    st^^^cmp     [rbp+var_240], rax^^^jz      loc_46D9F4^^^xor     r15d, r15d^^^cmp     esi, 1^^^adc     [rbp+var_238], 0^^^jmp     loc_465087^^^call    __strtof_internal^^^mov     esi, dword ptr [rbp+var_250]^^^mov     rax, [rbp+var_80]^^^mov     r11d, [rbp+var_358]^^^and     esi, 8^^^jnz     short loc_467DFE^^^cmp     rax, [rbp+var_240]^^^mov     rcx, rax^^^jz      loc_46B68D^^^test    r11d, r11d^^^jnz     loc_4699B7^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_4699A0^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^cmp     byte ptr [rbp+var_2FC], 0^^^jz      short loc_467E89^^^movss   xmm1, cs:dword_4B01C0^^^xorps   xmm0, xmm1^^^movss   dword ptr [rdx], xmm0^^^jmp     loc_467DFE^^^mov     [rbp+var_358], r11d^^^call    __strtold_internal^^^mov     esi, dword ptr [rbp+var_250]^^^mov     rax, [rbp+var_80]^^^mov     r11d, [rbp+var_358]^^^and     esi, 8^^^jnz     loc_467DFC^^^cmp     rax, [rbp+var_240]^^^mov     rcx, rax^^^jz      loc_46B68B^^^test    r11d, r11d^^^jnz     loc_4694E0^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_469589^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^cmp     byte ptr [rbp+var_2FC], 0^^^jz      short loc_467F00^^^fchs^^^fstp    tbyte ptr [rdx]^^^jmp     loc_467DFE^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_465DE0^^^add     rcx, 2^^^mov     r15d, 1^^^mov     [rbp+var_248], rcx^^^jmp     loc_465DC3^^^mov     rax, [rbp+var_250]^^^mov     rcx, [rbp+var_250]^^^mov     [rbp+var_338], rdx^^^add     rax, 1^^^cmp     [rbp+var_290], rax^^^cmovle  rcx, [rbp+var_290]^^^add     rcx, [rbp+var_290]^^^lea     rsi, ds:0[rcx*4]^^^mov     [rbp+var_348], rcx^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^mov     rcx, [rbp+var_348]^^^jz      loc_46DA5C^^^mov     rdi, [rbp+var_278]^^^lea     r15, [rax+rdx]^^^mov     [rbp+var_290], rcx^^^mov     [rdi], rax^^^jmp     loc_465C20^^^mov     rdx, r10^^^jmp     loc_4672A9^^^cmp     r12d, 2Dh^^^jnz     loc_466093^^^jmp     loc_467915^^^test    byte ptr [rbp+var_250], 4^^^jnz     loc_468296^^^test    dword ptr [rbp+var_250], 200h^^^jnz     loc_468EEC^^^test    r11d, r11d^^^jnz     loc_46DAA1^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_46DB26^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^xor     r15d, r15d^^^mov     [rax], r14d^^^jmp     loc_465087^^^lea     rdx, [rcx+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_466709^^^cmp     [rbp+var_258], 0^^^jz      loc_46DCF6^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi], r12b^^^jz      loc_4684D8^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4684C8^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46BC0D^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 6Eh^^^jnz     loc_46BC02^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 1^^^jz      loc_46BBAB^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+1], r12b^^^jz      loc_46BBA0^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46BB70^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 66h^^^jnz     loc_46BC8F^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 2^^^jz      loc_46BC9A^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^lea     r13, [r14+2]^^^mov     [rdi+2], r12b^^^jz      loc_468848^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46D4F8^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 69h^^^jz      loc_46D354^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^mov     r14, r13^^^mov     r15d, 3^^^call    _IO_sputbackc^^^mov     r11d, [rbp+var_358]^^^jmp     loc_467D39^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^add     [rbp+var_268], 1^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     eax, [rax+0A8h]^^^cmp     [rbp+var_268], rax^^^jb      loc_4675AC^^^mov     ecx, offset __PRETTY_FUNCTION___13048^^^mov     edx, 0A1Dh^^^mov     esi, offset aVfscanf_c^^^mov     edi, offset aCntUint32_t_nl^^^call    __assert_fail^^^mov     rcx, [rbp+var_270]^^^mov     rdx, [rcx]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rcx+8]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rcx+10h]^^^mov     rcx, [rbp+var_B8]^^^mov     [rbp+var_B0], rdx^^^mov     edx, dword ptr [rbp+var_C0]^^^sub     r11d, 1^^^jz      loc_4666E1^^^cmp     edx, 2Fh^^^ja      short loc_46821D^^^add     edx, 8^^^sub     r11d, 1^^^jz      loc_4666E1^^^cmp     edx, 2Fh^^^jbe     short loc_46820B^^^add     rcx, 8^^^jmp     short loc_4681FC^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_4659A6^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_467C32^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_467BE2^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_46688F^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_4667BF^^^test    r11d, r11d^^^jnz     loc_4691E8^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4691D1^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^xor     r15d, r15d^^^mov     [rax], r14w^^^jmp     loc_465087^^^cmp     rcx, 1000h^^^ja      loc_46B620^^^add     rcx, 0Fh^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+10h]^^^sub     rsp, rax^^^lea     rax, [rsp+360h+var_351]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, rax^^^mov     [rbp+var_258], rax^^^lea     rax, [rcx+rsi]^^^add     rdx, rcx^^^cmp     r10, rdx^^^cmovz   rcx, rax^^^test    r10, r10^^^jz      loc_466395^^^mov     rdi, [rbp+var_258]^^^mov     rdx, rsi^^^mov     rsi, r10^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     r10, [rbp+var_258]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^mov     rsi, rcx^^^jmp     loc_4662AC^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_467AB0^^^test    r11d, r11d^^^jnz     loc_469A61^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_469A4A^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_2A0], rax^^^cmp     [rbp+var_2A0], 0^^^jnz     loc_466D44^^^mov     r13d, 2^^^jmp     loc_465120^^^test    r11d, r11d^^^jnz     loc_4692CA^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4692B3^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_2A0], rax^^^cmp     [rbp+var_2A0], 0^^^jnz     loc_466AE7^^^mov     r13d, 2^^^jmp     loc_465120^^^test    r11d, r11d^^^jnz     loc_469AE6^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4698C0^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_298], rax^^^cmp     [rbp+var_298], 0^^^jnz     loc_465DB6^^^mov     r13d, 2^^^jmp     loc_465120^^^test    r11d, r11d^^^jnz     loc_4698EE^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_4698D7^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^mov     [rbp+var_2A0], rax^^^cmp     [rbp+var_2A0], 0^^^jnz     loc_465DB6^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rcx, [rbp+var_270]^^^mov     rdx, [rcx]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rcx+8]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rcx+10h]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      loc_467B1B^^^cmp     ecx, 2Fh^^^ja      loc_4685E3^^^add     ecx, 8^^^sub     r11d, 1^^^jnz     short loc_468526^^^jmp     loc_467B1B^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, [rbp+var_234]^^^mov     dword ptr [rbp+var_228], 10h^^^mov     fs:[rax], esi^^^jmp     loc_465826^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4685A7^^^cmp     edx, 2Fh^^^ja      short loc_4685DD^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468599^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46996E^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_465ED0^^^add     rdx, 8^^^jmp     loc_4669B4^^^add     rax, 8^^^jmp     short loc_468593^^^add     rdx, 8^^^jmp     loc_46851C^^^add     rdx, 8^^^jmp     loc_467B03^^^mov     r14, [rbp+var_2A0]^^^lea     r15d, [r8+r14]^^^mov     [r14], r12b^^^mov     eax, r15d^^^add     r14, 1^^^sub     eax, r14d^^^test    eax, eax^^^jle     loc_4695FA^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46B2F6^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r13, 1^^^jmp     short loc_468600^^^mov     [rbp+var_228], r12^^^mov     r12d, ecx^^^jmp     loc_4660C2^^^mov     [rbp+var_228], r12^^^mov     r12d, ecx^^^jmp     loc_4660BA^^^test    r11d, r11d^^^jnz     loc_468F3F^^^mov     ecx, dword ptr [rbp+var_E0]^^^cmp     ecx, 30h^^^jnb     loc_468C52^^^mov     edx, ecx^^^add     rdx, [rbp+var_D0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_E0], ecx^^^mov     rdx, [rdx]^^^mov     [rdx], al^^^jmp     loc_4659AC^^^mov     [rbp+var_240], r14^^^mov     r11d, dword ptr [rbp+var_288]^^^mov     r8d, r9d^^^mov     r14, [rbp+var_228]^^^mov     [rbp+var_258], rdx^^^test    dword ptr [rbp+var_250], 400h^^^jnz     loc_46BDD7^^^test    r15, r15^^^jz      loc_46BDCC^^^cmp     r15, 2^^^jnz     loc_467D39^^^mov     eax, [rbp+var_2DC]^^^test    eax, eax^^^jz      loc_467D39^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_238], 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 9^^^jmp     loc_46517A^^^mov     [rbp+var_298], r15^^^mov     eax, dword ptr [rbp+var_268]^^^xor     r15d, r15d^^^test    eax, eax^^^jnz     loc_465087^^^mov     r13d, dword ptr [rbp+var_288]^^^test    r13d, r13d^^^jz      loc_467119^^^mov     rax, [rbp+var_278]^^^mov     rdi, [rax]^^^mov     rax, [rbp+var_298]^^^sub     rax, rdi^^^sar     rax, 2^^^cmp     rax, [rbp+var_290]^^^jz      loc_467119^^^lea     rsi, ds:0[rax*4]^^^call    realloc^^^test    rax, rax^^^jz      loc_467119^^^mov     rdx, [rbp+var_278]^^^mov     [rdx], rax^^^jmp     loc_467119^^^test    r11d, r11d^^^jz      loc_46865C^^^mov     rcx, [rbp+var_270]^^^mov     rdx, [rcx]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rcx+8]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rcx+10h]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4687C8^^^cmp     ecx, 2Fh^^^ja      short loc_4687F8^^^add     ecx, 8^^^sub     r11d, 1^^^jnz     short loc_4687BA^^^cmp     ecx, 2Fh^^^mov     dword ptr [rbp+var_C0], ecx^^^mov     [rbp+var_B8], rdx^^^ja      loc_46DDC0^^^mov     edx, ecx^^^add     ecx, 8^^^add     rdx, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], ecx^^^jmp     loc_46867D^^^add     rdx, 8^^^jmp     short loc_4687B4^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edi, [rbp+var_234]^^^mov     r8d, r9d^^^mov     [rbp+var_240], r14^^^mov     [rbp+var_258], rdx^^^mov     r14, [rbp+var_228]^^^mov     r11d, dword ptr [rbp+var_288]^^^mov     fs:[rax], edi^^^jmp     loc_4686A6^^^cmp     dword ptr [rbp+var_228], 10h^^^jnz     loc_465826^^^jmp     loc_467A34^^^mov     r14, r13^^^mov     r15d, 3^^^jmp     loc_467D39^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_B8], rcx^^^jmp     loc_4659A6^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4688AE^^^cmp     edx, 2Fh^^^ja      short loc_4688DB^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_4688A0^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_469579^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_46688F^^^add     rax, 8^^^jmp     short loc_46889A^^^sub     rsp, 120h^^^mov     rdi, [rbp+var_2B0]^^^mov     edx, 1^^^lea     rax, [rsp+480h+var_471]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rax], 0^^^mov     [rax+8], rdi^^^mov     [rbp+var_2B0], rax^^^xor     eax, eax^^^jmp     loc_46691A^^^mov     r14, [rbp+var_290]^^^mov     rdx, [rbp+var_290]^^^add     r14, r14^^^add     rdx, 1^^^jmp     short loc_468943^^^cmp     r14, rdx^^^jbe     loc_469496^^^mov     rax, [rbp+var_278]^^^mov     r14, rdx^^^mov     rdi, [rax]^^^mov     rsi, r14^^^mov     [rbp+var_338], rdx^^^mov     byte ptr [rbp+var_348], cl^^^mov     [rbp+var_340], r9^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^movzx   ecx, byte ptr [rbp+var_348]^^^mov     r9, [rbp+var_340]^^^jz      short loc_46892D^^^mov     rdx, [rbp+var_290]^^^mov     rsi, [rbp+var_278]^^^mov     [rbp+var_290], r14^^^mov     [rsi], rax^^^add     rdx, rax^^^jmp     loc_46782C^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4689E1^^^cmp     edx, 2Fh^^^ja      short loc_468A0E^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_4689D3^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_469266^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_467BE2^^^add     rax, 8^^^jmp     short loc_4689CD^^^sub     rsp, 120h^^^mov     rdi, [rbp+var_2B0]^^^mov     edx, 1^^^lea     rax, [rsp+480h+var_471]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rax], 0^^^mov     [rax+8], rdi^^^mov     [rbp+var_2B0], rax^^^xor     eax, eax^^^jmp     loc_46682F^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_468A91^^^cmp     edx, 2Fh^^^ja      short loc_468ABE^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468A83^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_4692A3^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_4667BF^^^add     rax, 8^^^jmp     short loc_468A7D^^^mov     rsi, [rbp+var_270]^^^mov     rdx, [rsi]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rsi+8]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rsi+10h]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      loc_4669CC^^^cmp     ecx, 2Fh^^^ja      short loc_468B19^^^add     ecx, 8^^^sub     r11d, 1^^^jz      loc_4669CC^^^cmp     ecx, 2Fh^^^jbe     short loc_468B07^^^add     rdx, 8^^^jmp     short loc_468AF8^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^mov     eax, [rbp+var_238]^^^mov     r13d, 1^^^test    eax, eax^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^sub     rsp, 120h^^^mov     rdx, [rbp+var_2B0]^^^lea     rax, [rsp+480h+var_471]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     [rax+8], rdx^^^mov     qword ptr [rax], 0^^^mov     edx, 1^^^mov     [rbp+var_2B0], rax^^^xor     eax, eax^^^jmp     loc_465D95^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, [rbp+var_234]^^^mov     fs:[rax], ecx^^^mov     edx, [rbp+var_238]^^^mov     r13d, 1^^^test    edx, edx^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_465ED0^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_468C1F^^^cmp     edx, 2Fh^^^ja      short loc_468C4C^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468C11^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_468F2F^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_467C32^^^add     rax, 8^^^jmp     short loc_468C0B^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_46867D^^^mov     [rbp+var_298], r15^^^jmp     loc_4670AE^^^mov     rsi, rcx^^^mov     [rbp+var_338], rdx^^^mov     [rbp+var_348], rcx^^^shl     rsi, 3^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46B461^^^mov     rsi, [rbp+var_278]^^^lea     r15, [rax+rdx]^^^shl     [rbp+var_290], 1^^^mov     [rsi], rax^^^jmp     loc_467049^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, [rbp+var_234]^^^mov     fs:[rax], ecx^^^mov     r12d, [rbp+var_238]^^^mov     r13d, 1^^^test    r12d, r12d^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, [rbp+var_234]^^^mov     fs:[rax], esi^^^mov     r8d, [rbp+var_238]^^^mov     r13d, 1^^^test    r8d, r8d^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^sub     rsp, 120h^^^mov     rdi, [rbp+var_2B0]^^^mov     edx, 1^^^lea     rax, [rsp+480h+var_471]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rax], 0^^^mov     [rax+8], rdi^^^mov     [rbp+var_2B0], rax^^^xor     eax, eax^^^jmp     loc_466AC6^^^mov     rdi, rbx^^^mov     byte ptr [rbp+var_338], dl^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^movzx   edx, byte ptr [rbp+var_338]^^^jnz     loc_46CBE4^^^mov     edi, [rbp+var_238]^^^test    edi, edi^^^jnz     loc_468F24^^^mov     r13d, 1^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_466CA7^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_468DFC^^^cmp     edx, 2Fh^^^ja      short loc_468E30^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468DEE^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46D9FF^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_466CA7^^^add     rax, 8^^^jmp     short loc_468DE8^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_468E7E^^^cmp     edx, 2Fh^^^ja      short loc_468EB1^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468E70^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46BCEF^^^mov     eax, edx^^^add     rax, [rbp+var_B0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_C0], edx^^^mov     rdx, [rax]^^^mov     rax, rcx^^^jmp     loc_467DE1^^^add     rax, 8^^^jmp     short loc_468E6A^^^sub     rsp, 120h^^^mov     rdi, [rbp+var_2B0]^^^mov     edx, 1^^^lea     rax, [rsp+480h+var_471]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     qword ptr [rax], 0^^^mov     [rax+8], rdi^^^mov     [rbp+var_2B0], rax^^^xor     eax, eax^^^jmp     loc_466D2E^^^test    r11d, r11d^^^jnz     loc_46CE5E^^^mov     edx, dword ptr [rbp+var_E0]^^^cmp     edx, 30h^^^jnb     loc_46CE47^^^mov     eax, edx^^^add     rax, [rbp+var_D0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_E0], edx^^^mov     rax, [rax]^^^xor     r15d, r15d^^^mov     [rax], r14b^^^jmp     loc_465087^^^mov     r13d, 1^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_467C32^^^mov     rsi, [rbp+var_270]^^^mov     rdx, [rsi]^^^mov     [rbp+var_C0], rdx^^^mov     rdx, [rsi+8]^^^mov     ecx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B8], rdx^^^mov     rdx, [rsi+10h]^^^mov     [rbp+var_B0], rdx^^^mov     rdx, [rbp+var_B8]^^^sub     r11d, 1^^^jz      loc_4687C8^^^cmp     ecx, 2Fh^^^ja      short loc_468F90^^^add     ecx, 8^^^sub     r11d, 1^^^jnz     short loc_468F7D^^^jmp     loc_4687C8^^^add     rdx, 8^^^jmp     short loc_468F73^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_466A56^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_468FF5^^^cmp     edx, 2Fh^^^ja      short loc_469028^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_468FE7^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46E3B2^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_466A56^^^add     rax, 8^^^jmp     short loc_468FE1^^^mov     r13, r14^^^mov     r14, [rbp+var_288]^^^jmp     loc_4676EA^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     rdi, [rbp+var_258]^^^mov     rsi, r10^^^mov     rdx, r13^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     r10, [rbp+var_258]^^^mov     [rbp+var_279], 1^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^mov     rsi, rcx^^^jmp     loc_4662AC^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_466E4F^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_46912A^^^cmp     edx, 2Fh^^^ja      short loc_469160^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_46911C^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46DF53^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_466E4F^^^add     rax, 8^^^jmp     short loc_469116^^^mov     [rbp+var_290], r14^^^mov     rbx, r12^^^mov     [rbp+var_2A0], rsi^^^mov     r12d, r13d^^^mov     r14, r15^^^mov     r13d, edx^^^jmp     loc_466BFC^^^lea     rcx, [r14+r14]^^^mov     dword ptr [rbp+var_338], edx^^^mov     rsi, rcx^^^mov     [rbp+var_348], rcx^^^call    realloc^^^test    rax, rax^^^mov     edx, dword ptr [rbp+var_338]^^^mov     rcx, [rbp+var_348]^^^jz      loc_46B4A9^^^mov     rsi, [rbp+var_278]^^^mov     [rsi], rax^^^lea     rsi, [rax+r14]^^^mov     r14, rcx^^^jmp     loc_466B8F^^^xor     eax, eax^^^jmp     loc_467230^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_4682C0^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469230^^^cmp     edx, 2Fh^^^ja      short loc_469260^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_469222^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46DEAA^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_4682C0^^^add     rax, 8^^^jmp     short loc_46921C^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_467BE2^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_466778^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 4^^^mov     dword ptr fs:[rax], 54h^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_4667BF^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_468402^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469312^^^cmp     edx, 2Fh^^^ja      short loc_469340^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_469304^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46B787^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_468402^^^add     rax, 8^^^jmp     short loc_4692FE^^^cmp     r12d, 0FFFFFFFFh^^^mov     [rbp+var_240], r14^^^mov     r8d, r9d^^^mov     r14, [rbp+var_228]^^^mov     [rbp+var_258], rdx^^^mov     r11d, dword ptr [rbp+var_288]^^^jz      loc_4686A6^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^mov     dword ptr [rbp+var_350], r9d^^^sub     r14, 1^^^call    _IO_sputbackc^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jmp     loc_4686A6^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_467DDE^^^lea     rax, [r14+1]^^^mov     rdx, r14^^^cmp     r15, rax^^^cmovl   rdx, r15^^^add     rdx, r15^^^mov     rsi, rdx^^^mov     [rbp+var_338], rdx^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46B349^^^mov     rsi, [rbp+var_278]^^^lea     rcx, [rax+r15]^^^mov     r15, rdx^^^mov     [rsi], rax^^^jmp     loc_466DCA^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_465D17^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_46945C^^^cmp     edx, 2Fh^^^ja      short loc_469490^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_46944E^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46E046^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_465D17^^^add     rax, 8^^^jmp     short loc_469448^^^test    dword ptr [rbp+var_250], 2000h^^^mov     rbx, r12^^^jnz     loc_469A38^^^mov     rdx, [rbp+var_278]^^^mov     rcx, [rbp+var_290]^^^mov     r13d, 2^^^add     [rbp+var_238], 1^^^mov     [rbp+var_278], 0^^^mov     rax, [rdx]^^^mov     byte ptr [rax+rcx-1], 0^^^jmp     loc_465120^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469528^^^cmp     edx, 2Fh^^^ja      short loc_46955B^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_46951A^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46E15A^^^mov     eax, edx^^^add     rax, [rbp+var_B0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_C0], edx^^^mov     rdx, [rax]^^^mov     rax, rcx^^^jmp     loc_467EF5^^^add     rax, 8^^^jmp     short loc_469514^^^mov     rbx, r12^^^mov     r14, r9^^^mov     r12d, r13d^^^mov     [rbp+var_2A0], rdx^^^mov     r13, r15^^^jmp     loc_46788A^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_46688F^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_467EF2^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r13, [rbp+var_228]^^^mov     [rbp+var_290], r15^^^mov     r14, rcx^^^mov     [rbp+var_2A0], r14^^^mov     r14, r13^^^mov     eax, dword ptr [rbp+var_250]^^^test    eax, eax^^^jz      loc_467119^^^mov     rax, [rbp+var_278]^^^mov     rsi, [rbp+var_2A0]^^^mov     rdi, [rax]^^^sub     rsi, rdi^^^cmp     rsi, [rbp+var_290]^^^jnz     loc_46875A^^^jmp     loc_467119^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_465C5B^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 4^^^mov     dword ptr fs:[rax], 54h^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     [rbp+var_328], rsi^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rsi, [rbp+var_328]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_466253^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_465860^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jz      loc_46964C^^^jmp     loc_465CAA^^^lea     r14, [r13+r13+0]^^^mov     eax, 100h^^^mov     rdi, r10^^^cmp     r14, 100h^^^cmovb   r14, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_469818^^^cmp     r14, 1000h^^^ja      loc_4697C0^^^add     r14, 0Fh^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r14+10h]^^^sub     rsp, rax^^^lea     rax, [r14+rsi]^^^lea     r15, [rsp+360h+var_351]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [r15+r14]^^^cmp     r10, rdx^^^cmovz   r14, rax^^^test    r10, r10^^^jz      short loc_4697B5^^^mov     rdx, rsi^^^mov     rdi, r15^^^mov     rsi, r10^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rsi, r14^^^mov     r10, r15^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jmp     loc_46621C^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_238], 0FFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_46517A^^^mov     rsi, r14^^^mov     r10, r15^^^jmp     loc_46621C^^^mov     rdi, r14^^^mov     [rbp+var_328], rsi^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rsi, [rbp+var_328]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_469722^^^xor     edi, edi^^^mov     rsi, r14^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r15, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46B6A8^^^cmp     [rbp+var_279], 0^^^jnz     loc_4697B5^^^mov     rsi, r10^^^mov     rdx, r13^^^mov     rdi, rax^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rsi, r14^^^mov     r10, r15^^^mov     [rbp+var_279], 1^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jmp     loc_46621C^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_468452^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_4684A2^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469936^^^cmp     edx, 2Fh^^^ja      short loc_469968^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_469928^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46E056^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_4684A2^^^add     rax, 8^^^jmp     short loc_469922^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_465ED0^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jz      loc_46928A^^^jmp     loc_465B37^^^mov     rdx, [rbp+var_D8]^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_D8], rcx^^^jmp     loc_467E72^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_4699FF^^^cmp     edx, 2Fh^^^ja      short loc_469A32^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_4699F1^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46B698^^^mov     eax, edx^^^add     rax, [rbp+var_B0]^^^add     edx, 8^^^mov     dword ptr [rbp+var_C0], edx^^^mov     rdx, [rax]^^^mov     rax, rcx^^^jmp     loc_467E75^^^add     rax, 8^^^jmp     short loc_4699EB^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_4683B1^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469AA9^^^cmp     edx, 2Fh^^^ja      short loc_469AE0^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_469A9B^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46B6D5^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_4683B1^^^add     rax, 8^^^jmp     short loc_469A95^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_469B2E^^^cmp     edx, 2Fh^^^ja      short loc_469B60^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_469B20^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_469C30^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_468452^^^add     rax, 8^^^jmp     short loc_469B1A^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jz      loc_466EFD^^^jmp     loc_46615E^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^jmp     loc_466FE2^^^cmp     [rbp+var_279], 0^^^jnz     loc_469C40^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cl^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^add     rdx, 100h^^^mov     [rbp+var_258], rdx^^^jmp     loc_466F9B^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_466FDE^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_466FE2^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_468452^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_469EDD^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_466F9B^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_46665D^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_298], r15^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_46870C^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_466520^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^mov     eax, 3FCh^^^jmp     loc_46652C^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     r13d, 2^^^call    _IO_sputbackc^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4657EA^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4657EE^^^lea     rcx, [r13+r13+0]^^^mov     eax, 100h^^^mov     rdi, [rbp+var_240]^^^cmp     rcx, 100h^^^cmovb   rcx, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_469F4A^^^cmp     rcx, 1000h^^^ja      loc_469F1C^^^add     rcx, 0Fh^^^mov     rdx, [rbp+var_258]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+10h]^^^add     rdx, rcx^^^sub     rsp, rax^^^lea     r15, [rsp+360h+var_351]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r15+rcx]^^^cmp     [rbp+var_240], rax^^^cmovz   rcx, rdx^^^cmp     [rbp+var_240], 0^^^jz      loc_469F06^^^mov     rdx, [rbp+var_258]^^^mov     rsi, [rbp+var_240]^^^mov     rdi, r15^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     [rbp+var_240], r15^^^mov     rdi, r15^^^mov     r11d, [rbp+var_358]^^^mov     [rbp+var_258], rcx^^^jmp     loc_4658F6^^^cmp     [rbp+var_279], 0^^^jnz     loc_469FE1^^^sub     rsp, 110h^^^mov     rdx, [rbp+var_258]^^^mov     r12d, 100h^^^lea     r15, [rsp+470h+var_461]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^add     rdx, 100h^^^lea     rax, [r15+100h]^^^cmp     [rbp+var_240], rax^^^cmovz   r12, rdx^^^cmp     [rbp+var_240], 0^^^jz      loc_469FCE^^^mov     rdx, [rbp+var_258]^^^mov     rsi, [rbp+var_240]^^^mov     rdi, r15^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     [rbp+var_258], r12^^^mov     [rbp+var_240], r15^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jmp     loc_4657C4^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     [rbp+var_258], rcx^^^mov     [rbp+var_240], r15^^^mov     rdi, r15^^^jmp     loc_4658F6^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_348]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_469DB2^^^xor     edi, edi^^^mov     rsi, rcx^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rcx, [rbp+var_348]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46A038^^^cmp     [rbp+var_279], 0^^^jnz     short loc_469F06^^^mov     rsi, [rbp+var_240]^^^mov     rdi, rax^^^mov     rdx, r13^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     [rbp+var_240], r15^^^mov     rdi, r15^^^mov     [rbp+var_279], 1^^^mov     r11d, [rbp+var_358]^^^mov     [rbp+var_258], rcx^^^jmp     loc_4658F6^^^mov     [rbp+var_258], r12^^^mov     [rbp+var_240], r15^^^jmp     loc_4657C4^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46A05E^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_4657C4^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46A087^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_467B60^^^jmp     loc_465B97^^^cmp     [rbp+var_279], 0^^^jnz     loc_46A19F^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_46575A^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_465789^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 1^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4659CE^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4665EA^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46A2CE^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46575A^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 4^^^mov     dword ptr fs:[rax], 54h^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4665AE^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^mov     eax, 3FCh^^^jmp     loc_4665BA^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_467B93^^^jmp     loc_465A99^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_466567^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^mov     eax, 3FCh^^^jmp     loc_466573^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     edi, offset aTo_inpunct^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    wctrans^^^mov     [rbp+var_2D0], rax^^^mov     rax, [rbp+var_2F0]^^^cmp     [rbp+var_2D0], 0^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^mov     r15d, [rax+0D8h]^^^lea     ecx, [r15-1]^^^mov     [rbp+var_280], ecx^^^jnz     loc_46AAB5^^^mov     edi, dword ptr [rbp+var_250]^^^mov     [rbp+var_228], r13^^^mov     r14d, r8d^^^mov     dword ptr [rbp+var_268], 0^^^mov     dword ptr [rbp+var_2D8], r11d^^^mov     r13, r9^^^and     edi, 80h^^^mov     [rbp+var_2FC], edi^^^test    r14d, r14d^^^jz      loc_46A96B^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46A96B^^^test    r14d, r14d^^^mov     ecx, 7FFFFFFFh^^^mov     edx, r12d^^^cmovg   ecx, r14d^^^xor     eax, eax^^^mov     dword ptr [rbp+var_288], r14d^^^mov     dword ptr [rbp+var_2B8], ecx^^^mov     r14, r13^^^mov     dword ptr [rbp+var_2C0], ecx^^^mov     r12, rax^^^mov     r13, rbx^^^cmp     [rbp+var_2D0], 0^^^mov     dword ptr [rbp+var_2E8], r12d^^^jnz     loc_46A95E^^^mov     rdi, [rbp+var_2F0]^^^mov     r15, [rdi+r12*8+0E0h]^^^mov     eax, dword ptr [rbp+var_268]^^^mov     [rbp+r12*8+var_220], r15^^^test    eax, eax^^^jz      short loc_46A430^^^mov     rdi, r15^^^xor     ebx, ebx^^^mov     r15, r13^^^mov     r13d, edx^^^xor     esi, esi^^^add     ebx, 1^^^call    sub_400350^^^cmp     ebx, dword ptr [rbp+var_268]^^^lea     rdi, [rax+1]^^^mov     [rbp+r12*8+var_220], rdi^^^jnz     short loc_46A409^^^mov     edx, r13d^^^mov     r13, r15^^^mov     r15, rdi^^^movzx   eax, byte ptr [r15]^^^movzx   ecx, al^^^cmp     ecx, edx^^^jnz     loc_46AC62^^^cmp     byte ptr [r15+1], 0^^^lea     rbx, [r15+1]^^^jz      loc_46AC4A^^^mov     ecx, dword ptr [rbp+var_2B8]^^^jmp     short loc_46A483^^^movzx   edx, byte ptr [rax]^^^add     rax, 1^^^mov     [r13+8], rax^^^movzx   eax, byte ptr [rbx]^^^add     r14, 1^^^sub     ecx, 1^^^movzx   esi, al^^^cmp     esi, edx^^^jnz     short loc_46A4BB^^^add     rbx, 1^^^cmp     byte ptr [rbx], 0^^^jz      loc_46A98B^^^test    ecx, ecx^^^jz      short loc_46A4C3^^^mov     rax, [r13+8]^^^cmp     rax, [r13+10h]^^^jb      short loc_46A456^^^mov     rdi, r13^^^mov     dword ptr [rbp+var_348], ecx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, eax^^^mov     ecx, dword ptr [rbp+var_348]^^^jnz     short loc_46A461^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^movzx   eax, byte ptr [rbx]^^^test    al, al^^^jz      loc_46A9B0^^^cmp     r15, rbx^^^jnb     short loc_46A540^^^cmp     edx, 0FFFFFFFFh^^^jz      short loc_46A4DC^^^movzx   esi, dl^^^mov     rdi, r13^^^sub     r14, 1^^^call    _IO_sputbackc^^^lea     rcx, [rbx-1]^^^mov     rax, rbx^^^cmp     rcx, r15^^^mov     rdx, rcx^^^ja      short loc_46A4F6^^^jmp     short loc_46A53C^^^mov     rax, rdx^^^mov     rdx, rsi^^^movzx   esi, byte ptr [rax-1]^^^mov     rdi, r13^^^mov     [rbp+var_338], rdx^^^mov     [rbp+var_348], rcx^^^call    _IO_sputbackc^^^mov     rdx, [rbp+var_338]^^^mov     rcx, [rbp+var_348]^^^lea     rsi, [rdx-1]^^^cmp     rsi, r15^^^jnz     short loc_46A4F0^^^lea     rax, [rbx-2]^^^mov     rbx, r15^^^sub     rdx, rax^^^sub     rbx, rax^^^lea     r14, [rdx+r14-2]^^^add     rbx, rcx^^^movzx   edx, byte ptr [rbx-1]^^^xor     esi, esi^^^mov     rdi, r15^^^mov     dword ptr [rbp+var_338], edx^^^call    sub_400350^^^add     rax, 1^^^mov     edx, dword ptr [rbp+var_338]^^^mov     [rbp+r12*8+var_220], rax^^^add     r12, 1^^^cmp     r12, 0Ah^^^jnz     loc_46A3C8^^^mov     ecx, dword ptr [rbp+var_268]^^^mov     rbx, r13^^^mov     r12d, edx^^^mov     r13, r14^^^mov     r14d, dword ptr [rbp+var_288]^^^add     ecx, 1^^^cmp     [rbp+var_280], ecx^^^mov     dword ptr [rbp+var_2C0], ecx^^^jl      loc_46A6FF^^^mov     [rbp+var_2DC], r14d^^^mov     r14d, r12d^^^mov     [rbp+var_288], 0^^^mov     rdx, [rbp+var_288]^^^mov     eax, dword ptr [rbp+var_288]^^^mov     r15, [rbp+rdx*8+var_220]^^^mov     dword ptr [rbp+var_2E8], eax^^^movzx   eax, byte ptr [r15]^^^movzx   edx, al^^^cmp     r14d, edx^^^jnz     loc_46A9BF^^^cmp     byte ptr [r15+1], 0^^^lea     r12, [r15+1]^^^jz      loc_46A912^^^mov     ecx, dword ptr [rbp+var_2B8]^^^jmp     short loc_46A605^^^add     r12, 1^^^cmp     byte ptr [r12], 0^^^jz      loc_46A870^^^test    ecx, ecx^^^jz      short loc_46A63B^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A924^^^movzx   r14d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, byte ptr [r12]^^^add     r13, 1^^^sub     ecx, 1^^^movzx   edx, al^^^cmp     edx, r14d^^^jz      short loc_46A5F2^^^test    al, al^^^jz      loc_46A870^^^cmp     r15, r12^^^jnb     short loc_46A6AA^^^cmp     r14d, 0FFFFFFFFh^^^jz      short loc_46A656^^^movzx   esi, r14b^^^mov     rdi, rbx^^^sub     r13, 1^^^call    _IO_sputbackc^^^lea     rdx, [r12-1]^^^cmp     rdx, r15^^^mov     [rbp+var_2E8], rdx^^^jbe     short loc_46A6A4^^^mov     r14, rdx^^^mov     rdx, r12^^^jmp     short loc_46A675^^^mov     rdx, r14^^^mov     r14, rax^^^movzx   esi, byte ptr [rdx-1]^^^mov     rdi, rbx^^^call    _IO_sputbackc^^^lea     rax, [r14-1]^^^cmp     rax, r15^^^jnz     short loc_46A66F^^^lea     rax, [r12-2]^^^mov     r12, r15^^^sub     r12, rax^^^add     r12, [rbp+var_2E8]^^^sub     r14, rax^^^lea     r13, [r14+r13-2]^^^movzx   r14d, byte ptr [r12-1]^^^xor     esi, esi^^^mov     rdi, r15^^^call    sub_400350^^^mov     rcx, [rbp+var_288]^^^add     rax, 1^^^mov     [rbp+rcx*8+var_220], rax^^^add     rcx, 1^^^cmp     rcx, 0Ah^^^mov     [rbp+var_288], rcx^^^jnz     loc_46A5B0^^^add     dword ptr [rbp+var_2C0], 1^^^mov     edx, dword ptr [rbp+var_2C0]^^^cmp     [rbp+var_280], edx^^^jge     loc_46A5A5^^^mov     r12d, r14d^^^mov     r14d, [rbp+var_2DC]^^^mov     eax, [rbp+var_2FC]^^^test    eax, eax^^^jz      loc_46A96B^^^mov     rsi, [rbp+var_230]^^^test    r14d, r14d^^^mov     ecx, 7FFFFFFFh^^^cmovg   ecx, r14d^^^mov     dword ptr [rbp+var_2B8], ecx^^^movzx   eax, byte ptr [rsi]^^^movzx   edx, al^^^cmp     r12d, edx^^^jnz     loc_46AE0A^^^mov     [rbp+var_2C0], rsi^^^mov     r15, [rbp+var_240]^^^mov     [rbp+var_2DC], r14d^^^mov     rcx, [rbp+var_258]^^^mov     [rbp+var_288], r13^^^jmp     loc_46A7E1^^^mov     rax, [rbp+var_228]^^^mov     r13, [rbp+var_2C0]^^^mov     rdx, [rbp+var_2C0]^^^mov     [r15+rax], r12b^^^add     r13, 1^^^add     rax, 1^^^cmp     byte ptr [rdx+1], 0^^^mov     [rbp+var_228], rax^^^jz      loc_46ADF0^^^mov     eax, dword ptr [rbp+var_2B8]^^^test    eax, eax^^^jz      loc_46ADC5^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46ACA4^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^movzx   eax, byte ptr [r13+0]^^^add     [rbp+var_288], 1^^^sub     dword ptr [rbp+var_2B8], 1^^^movzx   edx, al^^^cmp     edx, r12d^^^jnz     loc_46AC70^^^mov     [rbp+var_2C0], r13^^^cmp     rcx, [rbp+var_228]^^^jnz     loc_46A760^^^mov     r13, [rbp+var_228]^^^mov     edi, 100h^^^add     r13, r13^^^cmp     r13, 100h^^^cmovb   r13, rdi^^^cmp     [rbp+var_279], 0^^^mov     rdi, r15^^^jnz     loc_46AE44^^^cmp     r13, 1000h^^^ja      loc_46AE24^^^add     r13, 0Fh^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+10h]^^^sub     rsp, rax^^^lea     rax, [r13+rcx+0]^^^lea     r14, [rsp+360h+var_351]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [r14+r13]^^^cmp     r15, rdx^^^cmovz   r13, rax^^^test    r15, r15^^^jz      loc_46AE19^^^mov     rdx, rcx^^^mov     rsi, r15^^^mov     rdi, r14^^^call    memcpy^^^mov     r15, r14^^^mov     rcx, r13^^^jmp     loc_46A760^^^mov     r14d, [rbp+var_2DC]^^^test    r14d, r14d^^^cmovg   r14d, ecx^^^mov     ecx, dword ptr [rbp+var_2C0]^^^mov     dword ptr [rbp+var_268], ecx^^^mov     r12d, dword ptr [rbp+var_2E8]^^^mov     r15, [rbp+var_240]^^^mov     [rbp+var_280], ecx^^^add     r12d, 30h^^^mov     rcx, [rbp+var_228]^^^cmp     [rbp+var_258], rcx^^^jz      loc_46AA0B^^^mov     [rbp+var_240], r15^^^mov     rcx, [rbp+var_228]^^^mov     rdi, [rbp+var_240]^^^xor     eax, eax^^^mov     [rdi+rcx], r12b^^^add     rcx, 1^^^test    r14d, r14d^^^setnle  al^^^mov     [rbp+var_228], rcx^^^sub     r14d, eax^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46A9F6^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46A9CD^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r13, 1^^^jmp     loc_46A388^^^mov     r14d, [rbp+var_2DC]^^^mov     ecx, dword ptr [rbp+var_2B8]^^^jmp     loc_46A877^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_348], ecx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r14d, eax^^^mov     ecx, dword ptr [rbp+var_348]^^^jnz     loc_46A61F^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^movzx   eax, byte ptr [r12]^^^jmp     loc_46A633^^^mov     r15, [rbp+r12*8+var_150]^^^jmp     loc_46A3EC^^^mov     r9, r13^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     r13, [rbp+var_228]^^^mov     dword ptr [rbp+var_228], 0Ah^^^jmp     loc_4658A5^^^mov     rbx, r13^^^mov     r13, r14^^^mov     r14d, dword ptr [rbp+var_288]^^^mov     dword ptr [rbp+var_2C0], ecx^^^test    r14d, r14d^^^cmovg   r14d, ecx^^^mov     ecx, dword ptr [rbp+var_268]^^^jmp     loc_46A88A^^^mov     rbx, r13^^^mov     r13, r14^^^mov     r14d, dword ptr [rbp+var_288]^^^jmp     short loc_46A99E^^^mov     ecx, dword ptr [rbp+var_2B8]^^^mov     r12, r15^^^jmp     loc_46A633^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_46A909^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_46A388^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^jmp     loc_46A388^^^mov     rdx, rcx^^^mov     eax, 100h^^^mov     rdi, r15^^^add     rdx, rdx^^^cmp     rdx, 100h^^^cmovb   rdx, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_46B032^^^cmp     rdx, 1000h^^^ja      loc_46B012^^^add     rdx, 0Fh^^^mov     rcx, [rbp+var_258]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^add     rcx, rdx^^^sub     rsp, rax^^^lea     r8, [rsp+360h+var_351]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r8+rdx]^^^cmp     r15, rax^^^cmovnz  rcx, rdx^^^test    r15, r15^^^jz      loc_46B08A^^^mov     rdx, [rbp+var_258]^^^mov     rdi, r8^^^mov     rsi, r15^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_350], r8^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     r8, [rbp+var_350]^^^mov     [rbp+var_258], rcx^^^mov     [rbp+var_240], r8^^^jmp     loc_46A8BD^^^mov     [rbp+var_280], r15d^^^xor     r14d, r14d^^^mov     dword ptr [rbp+var_268], r12d^^^mov     dword ptr [rbp+var_288], r8d^^^mov     dword ptr [rbp+var_2B8], r11d^^^mov     [rbp+var_2C0], r9^^^mov     [rbp+var_2D8], rbx^^^mov     rsi, [rbp+var_2F0]^^^lea     edi, [r14+30h]^^^mov     rbx, [rsi+r14*8+0E0h]^^^mov     rsi, [rbp+var_2D0]^^^mov     [rbp+r14*8+var_220], rbx^^^call    towctrans^^^lea     rdx, [rbp+var_60]^^^lea     rdi, [rbp+var_A0]^^^mov     esi, eax^^^mov     [rbp+var_60], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_228], rax^^^jz      loc_46AC17^^^xor     r12d, r12d^^^xor     ecx, ecx^^^test    r15d, r15d^^^mov     rdi, rbx^^^jle     short loc_46AB5B^^^xor     esi, esi^^^add     r12d, 1^^^call    sub_400350^^^cmp     r12d, r15d^^^lea     rdi, [rax+1]^^^jnz     short loc_46AB41^^^mov     rcx, rdi^^^sub     rcx, rbx^^^mov     rdx, [rbp+var_228]^^^mov     esi, 10h^^^lea     rax, [rdx+rcx+1Fh]^^^xor     edx, edx^^^div     rsi^^^mov     rdx, rcx^^^mov     rsi, rbx^^^shl     rax, 4^^^sub     rsp, rax^^^lea     r12, [rsp+360h+var_351]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    mempcpy^^^mov     rdx, [rbp+var_228]^^^lea     rsi, [rbp+var_A0]^^^mov     rdi, rax^^^call    mempcpy^^^mov     byte ptr [rax], 0^^^mov     [rbp+r14*8+var_150], r12^^^add     r14, 1^^^cmp     r14, 0Ah^^^jnz     loc_46AAE2^^^mov     r12d, dword ptr [rbp+var_268]^^^mov     r8d, dword ptr [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2B8]^^^mov     r9, [rbp+var_2C0]^^^mov     rbx, [rbp+var_2D8]^^^jmp     loc_46A358^^^mov     rdi, rbx^^^mov     byte ptr [rbp+var_338], dl^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^movzx   edx, byte ptr [rbp+var_338]^^^jz      loc_46550B^^^jmp     loc_46502A^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r12d, dword ptr [rbp+var_268]^^^mov     r8d, dword ptr [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2B8]^^^mov     r9, [rbp+var_2C0]^^^mov     rbx, [rbp+var_2D8]^^^mov     [rbp+var_2D0], 0^^^jmp     loc_46A358^^^mov     rbx, r13^^^mov     ecx, dword ptr [rbp+var_2C0]^^^mov     r13, r14^^^mov     r14d, dword ptr [rbp+var_288]^^^jmp     loc_46A99E^^^mov     ecx, dword ptr [rbp+var_2B8]^^^mov     rbx, r15^^^jmp     loc_46A4BB^^^mov     rdx, r13^^^mov     r14d, [rbp+var_2DC]^^^mov     r13, [rbp+var_288]^^^mov     [rbp+var_258], rcx^^^test    al, al^^^jnz     short loc_46ACFB^^^test    r14d, r14d^^^cmovg   r14d, dword ptr [rbp+var_2B8]^^^sub     [rbp+var_228], 1^^^jmp     loc_46A8A2^^^mov     rdi, rbx^^^mov     [rbp+var_348], rcx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rcx, [rbp+var_348]^^^jnz     loc_46A7BA^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_258], rcx^^^mov     rdx, r13^^^mov     rcx, [rbp+var_2C0]^^^mov     r14d, [rbp+var_2DC]^^^mov     r13, [rbp+var_288]^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^movzx   eax, byte ptr [rcx+1]^^^jmp     short loc_46AC88^^^mov     r9, r13^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     r13, [rbp+var_228]^^^mov     r14, rdx^^^mov     [rbp+var_240], r15^^^cmp     [rbp+var_230], r14^^^mov     dword ptr [rbp+var_228], 0Ah^^^jnb     loc_4658A5^^^mov     rax, [rbp+var_230]^^^sub     rax, r14^^^add     r13, rax^^^cmp     r12d, 0FFFFFFFFh^^^jz      short loc_46AD6C^^^sub     r9, 1^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    _IO_sputbackc^^^mov     r11d, [rbp+var_358]^^^mov     r9, [rbp+var_340]^^^lea     r15, [r14-1]^^^cmp     [rbp+var_230], r15^^^mov     rax, r14^^^mov     r12, r15^^^jnb     loc_46AE96^^^movzx   esi, byte ptr [rax-1]^^^mov     rdi, rbx^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    _IO_sputbackc^^^lea     rdx, [r12-1]^^^cmp     rdx, [rbp+var_230]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46AE81^^^mov     rax, r12^^^mov     r12, rdx^^^jmp     short loc_46AD83^^^mov     r14, r13^^^mov     [rbp+var_258], rcx^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     r13, [rbp+var_228]^^^mov     r9, [rbp+var_288]^^^mov     [rbp+var_240], r15^^^jmp     loc_46AD16^^^mov     r14d, [rbp+var_2DC]^^^mov     [rbp+var_258], rcx^^^mov     r13, [rbp+var_288]^^^jmp     loc_46AC8C^^^mov     rdx, rsi^^^mov     r15, [rbp+var_240]^^^jmp     loc_46AC88^^^mov     rcx, r13^^^mov     r15, r14^^^jmp     loc_46A760^^^mov     rdi, r13^^^mov     [rbp+var_348], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_348]^^^jnz     loc_46A825^^^xor     edi, edi^^^mov     rsi, r13^^^call    realloc^^^test    rax, rax^^^mov     r14, rax^^^jz      short loc_46AEAA^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46AE19^^^mov     rdx, [rbp+var_228]^^^mov     rsi, r15^^^mov     rdi, rax^^^mov     r15, r14^^^call    memcpy^^^mov     rcx, r13^^^mov     [rbp+var_279], 1^^^jmp     loc_46A760^^^mov     rax, [rbp+var_230]^^^sub     r12, r14^^^add     r9, r12^^^sub     rax, r14^^^lea     r14, [rax+r15+2]^^^movzx   r12d, byte ptr [r14-1]^^^mov     dword ptr [rbp+var_228], 0Ah^^^jmp     loc_4658A5^^^xor     r13d, r13d^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jz      loc_465120^^^mov     rdi, r15^^^call    free^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_328], esi^^^mov     dword ptr [rbp+var_350], r8d^^^mov     dword ptr [rbp+var_340], r9d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rdx, [rbp+var_338]^^^mov     rcx, [rbp+var_348]^^^mov     esi, dword ptr [rbp+var_328]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9d, dword ptr [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46535C^^^mov     r9d, fs:[r15]^^^mov     eax, r9d^^^cmp     eax, 4^^^jz      short loc_46AF5B^^^mov     r12d, 0FFFFFFFFh^^^jmp     loc_465360^^^mov     eax, fs:[r15]^^^jmp     short loc_46AF45^^^mov     esi, [rbp+var_238]^^^mov     r13d, 1^^^test    esi, esi^^^jnz     loc_465120^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rsi, [rbp+var_278]^^^mov     rdi, [rsi]^^^call    free^^^mov     rdi, [rbp+var_278]^^^mov     qword ptr [rdi], 0^^^jmp     loc_46517A^^^cmp     [rbp+var_2B0], 0^^^jz      loc_46517A^^^mov     rbx, [rbp+var_2B0]^^^xor     r12d, r12d^^^cmp     qword ptr [rbx], 0^^^jz      short loc_46AFE0^^^mov     rax, [rbx+r12*8+10h]^^^mov     rdi, [rax]^^^call    free^^^mov     rax, [rbx+r12*8+10h]^^^add     r12, 1^^^cmp     [rbx], r12^^^mov     qword ptr [rax], 0^^^ja      short loc_46AFBE^^^mov     rbx, [rbx+8]^^^test    rbx, rbx^^^jnz     short loc_46AFB5^^^jmp     loc_46517A^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     rdx, [rbp+var_338]^^^jz      loc_465552^^^jmp     loc_4651E4^^^mov     rdi, rdx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46AA3E^^^xor     edi, edi^^^mov     rsi, rdx^^^mov     [rbp+var_338], rdx^^^call    realloc^^^test    rax, rax^^^mov     [rbp+var_240], rax^^^mov     rdx, [rbp+var_338]^^^jz      short loc_46B09D^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_258], rdx^^^jnz     loc_46A8BD^^^mov     rdx, [rbp+var_228]^^^mov     rdi, [rbp+var_240]^^^mov     rsi, r15^^^call    memcpy^^^mov     [rbp+var_279], 1^^^jmp     loc_46A8BD^^^mov     [rbp+var_258], rcx^^^mov     [rbp+var_240], r8^^^jmp     loc_46A8BD^^^xor     r13d, r13d^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jz      loc_465120^^^mov     rdi, r15^^^call    free^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r10^^^jnz     short loc_46B118^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_468B9D^^^jmp     loc_466D68^^^mov     rdi, r10^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_46707A^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_298], r15^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4670AE^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_467A63^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr [rbp+var_228], 10h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_465826^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     dword ptr [rbp+var_340], r9d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     rdx, [rbp+var_338]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46727E^^^mov     [rbp+var_228], r12^^^mov     r12d, eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4672A9^^^mov     rdi, rbx^^^mov     [rbp+var_348], rcx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rcx, [rbp+var_348]^^^jnz     loc_466DF8^^^mov     r13, [rbp+var_228]^^^mov     [rbp+var_2A0], rcx^^^mov     [rbp+var_290], r15^^^mov     r14, r13^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, 0FFFFFFFFh^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_469604^^^mov     r14d, [rbp+var_238]^^^mov     r13d, 1^^^test    r14d, r14d^^^jnz     loc_465120^^^mov     [rbp+var_238], r12d^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_465F18^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_465F1C^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_46862F^^^mov     [rbp+var_2A0], r14^^^mov     r14, r13^^^jmp     loc_46B269^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46B37D^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_467C66^^^mov     rdx, [rbp+var_278]^^^add     r15, 1^^^mov     rsi, r15^^^mov     rdi, [rdx]^^^call    realloc^^^test    rax, rax^^^jz      short loc_46B3C6^^^mov     rcx, [rbp+var_278]^^^mov     [rcx], rax^^^mov     rcx, [rbp+var_268]^^^add     rcx, rax^^^jmp     loc_466DCA^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46B3D8^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_467C66^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_468CC9^^^jmp     loc_466B0B^^^mov     rax, [rbp+var_278]^^^add     [rbp+var_290], 1^^^mov     rsi, [rbp+var_290]^^^mov     rdi, [rax]^^^shl     rsi, 2^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^mov     rcx, [rbp+var_348]^^^jz      short loc_46B4E7^^^mov     rcx, [rbp+var_278]^^^lea     r15, [rax+rdx]^^^mov     [rcx], rax^^^jmp     loc_467049^^^mov     rcx, [rbp+var_278]^^^add     r14, 1^^^mov     rsi, r14^^^mov     rdi, [rcx]^^^call    realloc^^^test    rax, rax^^^mov     edx, dword ptr [rbp+var_338]^^^jz      loc_46B876^^^mov     rcx, [rbp+var_278]^^^mov     rsi, [rbp+var_228]^^^mov     [rcx], rax^^^add     rsi, rax^^^jmp     loc_466B8F^^^test    dword ptr [rbp+var_250], 2000h^^^jnz     loc_46B8EF^^^mov     rdx, [rbp+var_278]^^^add     [rbp+var_238], 1^^^mov     r13d, 2^^^mov     [rbp+var_278], 0^^^mov     rax, [rdx]^^^mov     dword ptr [rax+rcx*4-4], 0^^^jmp     loc_465120^^^lea     r13, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, r14^^^cmp     r13, 100h^^^cmovb   r13, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_46BA44^^^cmp     r13, 1000h^^^ja      loc_46BA16^^^add     r13, 0Fh^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+10h]^^^lea     rsi, [r13+rdx+0]^^^sub     rsp, rax^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+r13]^^^cmp     r14, rax^^^cmovz   r13, rsi^^^test    r14, r14^^^jz      loc_46BA0B^^^mov     rsi, r14^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_340], r9d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, r13^^^mov     r9d, dword ptr [rbp+var_340]^^^mov     r14, rcx^^^jmp     loc_467429^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_465F72^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_4650CD^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r14d, fs:[rax]^^^mov     rax, 0FFFFFFFFFFFFFFFEh^^^jmp     loc_4650D3^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_328], rsi^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_330], r10^^^mov     [rbp+var_358], r11d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_348]^^^mov     rsi, [rbp+var_328]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9, [rbp+var_340]^^^mov     r10, [rbp+var_330]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4682DC^^^xor     edi, edi^^^jmp     loc_46632A^^^fstp    st^^^mov     r13d, 2^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_469A27^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r10^^^jnz     short loc_46B6E5^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_4683B1^^^mov     rdi, r10^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^lea     rbx, [r15+r15]^^^mov     esi, 100h^^^mov     rdi, r14^^^cmp     rbx, 100h^^^cmovb   rbx, rsi^^^cmp     [rbp+var_279], 0^^^jnz     loc_46B7C2^^^cmp     rbx, 1000h^^^ja      short loc_46B7A2^^^add     rbx, 0Fh^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rbx+10h]^^^sub     rsp, rax^^^lea     rax, [rbx+rdx]^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rsi, [rcx+rbx]^^^cmp     r14, rsi^^^cmovz   rbx, rax^^^test    r14, r14^^^jz      short loc_46B797^^^mov     rsi, r14^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, rbx^^^mov     r14, rcx^^^jmp     loc_4672F1^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_468402^^^mov     rdx, rbx^^^mov     r14, rcx^^^jmp     loc_4672F1^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46B737^^^xor     edi, edi^^^mov     rsi, rbx^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^jz      loc_46B901^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46B797^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, rax^^^mov     [rbp+var_348], rax^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, rbx^^^mov     [rbp+var_279], 1^^^mov     r14, rcx^^^jmp     loc_4672F1^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     dword ptr [rbp+var_340], r9d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, r13^^^mov     [rbp+var_279], 1^^^mov     r9d, dword ptr [rbp+var_340]^^^mov     r14, rcx^^^jmp     loc_466022^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^jnz     short loc_46B8B8^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^test    dword ptr [rbp+var_250], 2000h^^^mov     rbx, r12^^^jnz     short loc_46B8DD^^^mov     rsi, [rbp+var_278]^^^mov     rdx, [rbp+var_228]^^^mov     r13d, 2^^^add     [rbp+var_238], 1^^^mov     [rbp+var_278], 0^^^mov     rax, [rsi]^^^mov     byte ptr [rax+rdx-1], 0^^^jmp     loc_465120^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^mov     rbx, [rbp+var_258]^^^jnz     loc_46B9B6^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r13^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_340], r9d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46794F^^^xor     edi, edi^^^mov     rsi, r13^^^mov     dword ptr [rbp+var_340], r9d^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_4673D9^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^jnz     short loc_46B9DB^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdx, r13^^^mov     r14, rcx^^^jmp     loc_467429^^^mov     rdi, r13^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_340], r9d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46B557^^^xor     edi, edi^^^mov     rsi, r13^^^mov     dword ptr [rbp+var_340], r9d^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     r9d, dword ptr [rbp+var_340]^^^jz      loc_46DB3D^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46BA0B^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, rax^^^mov     dword ptr [rbp+var_340], r9d^^^mov     [rbp+var_348], rax^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, r13^^^mov     [rbp+var_279], 1^^^mov     r9d, dword ptr [rbp+var_340]^^^mov     r14, rcx^^^jmp     loc_467429^^^lea     r13, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, r14^^^cmp     r13, 100h^^^cmovb   r13, rax^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46BB06^^^cmp     r13, 1000h^^^jbe     loc_46794F^^^mov     rdi, r13^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_340], r9d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46794F^^^xor     edi, edi^^^mov     rsi, r13^^^mov     dword ptr [rbp+var_340], r9d^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_4673D9^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^jnz     loc_46E35A^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     r13d, 2^^^call    _IO_sputbackc^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_4680D9^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     loc_46BC42^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cl^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^add     rdx, 100h^^^mov     [rbp+var_258], rdx^^^jmp     loc_4680AB^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4684D8^^^jmp     loc_468079^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46BD48^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_4680AB^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46BCFF^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, word ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cx^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^lea     rdx, [rdx+rdx+100h]^^^mov     [rbp+var_258], rdx^^^jmp     loc_46810B^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_468EA6^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46BD71^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46810B^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_468CFE^^^jmp     loc_4677B2^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r9d, [rbp+var_2DC]^^^test    r9d, r9d^^^jnz     loc_4686B6^^^test    r15, r15^^^setz    byte ptr [rbp+var_228]^^^cmp     byte ptr [rbp+var_268], 0^^^jnz     short loc_46BE07^^^cmp     byte ptr [rbp+var_228], 0^^^jz      loc_467D39^^^mov     edi, offset aTo_inpunct^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    wctrans^^^test    rax, rax^^^mov     r13, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46CD8D^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46CD48^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^add     r14, 1^^^mov     rsi, r13^^^mov     edi, 2Eh^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^mov     rdi, [rbp+var_2F8]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46C479^^^movzx   ecx, byte ptr [rbp+var_228]^^^mov     rdi, [rbp+var_2A8]^^^mov     [rbp+rax+var_165], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^mov     dword ptr [rbp+var_228], ecx^^^call    strlen^^^mov     rdx, rax^^^xor     eax, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^cmp     rdx, r15^^^mov     r11d, [rbp+var_358]^^^jnz     short loc_46BF1E^^^mov     rsi, [rbp+var_2F8]^^^mov     rdi, [rbp+var_2A8]^^^call    sub_4003A0^^^mov     r11d, [rbp+var_358]^^^test    eax, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^setz    al^^^movzx   eax, al^^^movzx   ecx, byte ptr [rbp+var_228]^^^or      ecx, eax^^^test    cl, cl^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 30h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdx, [rbp+var_50]^^^lea     rdi, [rbp+var_220]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 31h^^^mov     byte ptr [rbp+rax+var_220], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 11h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 32h^^^mov     [rbp+rax+var_20F], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 22h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 33h^^^mov     [rbp+rax+var_1FE], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 33h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 34h^^^mov     [rbp+rax+var_1ED], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 44h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 35h^^^mov     [rbp+rax+var_1DC], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 55h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 36h^^^mov     [rbp+rax+var_1CB], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 66h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 37h^^^mov     [rbp+rax+var_1BA], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 77h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 38h^^^mov     [rbp+rax+var_1A9], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 88h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^mov     rsi, r13^^^mov     edi, 39h^^^mov     [rbp+rax+var_198], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 99h^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4686B6^^^test    byte ptr [rbp+var_250], 80h^^^mov     rsi, r13^^^mov     edi, 2Ch^^^mov     [rbp+rax+var_187], 0^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^setnz   [rbp+var_320]^^^call    towctrans^^^lea     rdi, [rbp+var_220]^^^lea     rdx, [rbp+var_50]^^^mov     esi, eax^^^mov     r13d, eax^^^mov     [rbp+var_50], 0^^^add     rdi, 0AAh^^^mov     [rbp+var_228], rdi^^^call    wcrtomb^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46CC4D^^^mov     [rbp+rax+var_176], 0^^^mov     [rbp+var_288], r14^^^mov     r13, [rbp+var_240]^^^mov     r14, [rbp+var_258]^^^mov     dword ptr [rbp+var_2D0], r8d^^^mov     dword ptr [rbp+var_2D8], r11d^^^mov     [rbp+var_228], rbx^^^cmp     byte ptr [rbp+var_2C0], 0^^^jz      loc_46CBF4^^^movzx   ecx, byte ptr [rbp+var_2B8]^^^cmp     [r13+r15-1], cl^^^jz      loc_46CF7C^^^mov     edi, dword ptr [rbp+var_2D0]^^^mov     edx, 7FFFFFFFh^^^mov     [rbp+var_240], r13^^^mov     r13, [rbp+var_228]^^^mov     eax, r12d^^^mov     [rbp+var_280], 0^^^mov     [rbp+var_258], r14^^^mov     [rbp+var_308], r15^^^test    edi, edi^^^cmovg   edx, dword ptr [rbp+var_2D0]^^^mov     dword ptr [rbp+var_2E8], edx^^^mov     [rbp+var_300], edx^^^lea     rdx, [rbp+var_220]^^^mov     r12, rdx^^^movzx   edx, byte ptr [r12]^^^movzx   ecx, dl^^^cmp     ecx, eax^^^jnz     loc_46CF6D^^^cmp     byte ptr [r12+1], 0^^^lea     rbx, [r12+1]^^^jz      loc_46CF4A^^^mov     r14d, dword ptr [rbp+var_2E8]^^^mov     rdx, [r13+8]^^^cmp     rdx, [r13+10h]^^^jnb     loc_46C62F^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [r13+8], rdx^^^movzx   edx, byte ptr [rbx]^^^add     [rbp+var_288], 1^^^sub     r14d, 1^^^movzx   ecx, dl^^^cmp     ecx, eax^^^jnz     loc_46C653^^^add     rbx, 1^^^cmp     byte ptr [rbx], 0^^^jz      loc_46C576^^^test    r14d, r14d^^^jnz     short loc_46C3E3^^^cmp     r12, rbx^^^jnb     loc_46C516^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_46C449^^^movzx   esi, al^^^mov     rdi, r13^^^sub     [rbp+var_288], 1^^^call    _IO_sputbackc^^^lea     r15, [rbx-1]^^^mov     rax, rbx^^^cmp     r15, r12^^^mov     r14, r15^^^jbe     loc_46C512^^^movzx   esi, byte ptr [rax-1]^^^mov     rdi, r13^^^call    _IO_sputbackc^^^lea     rdx, [r14-1]^^^cmp     rdx, r12^^^jz      short loc_46C4EF^^^mov     rax, r14^^^mov     r14, rdx^^^jmp     short loc_46C45C^^^mov     rdi, [rbp+var_2A8]^^^mov     [rbp+var_358], r11d^^^mov     dword ptr [rbp+var_350], r8d^^^call    strlen^^^cmp     rax, 10h^^^mov     rdx, rax^^^mov     r11d, [rbp+var_358]^^^ja      loc_4686B6^^^movzx   ecx, byte ptr [rbp+var_228]^^^xor     eax, eax^^^mov     rsi, [rbp+var_2A8]^^^cmp     r15, rdx^^^mov     rdi, [rbp+var_2F8]^^^setz    al^^^add     rdx, 1^^^or      ecx, eax^^^mov     byte ptr [rbp+var_348], cl^^^call    memcpy^^^mov     r11d, [rbp+var_358]^^^mov     r8d, dword ptr [rbp+var_350]^^^movzx   ecx, byte ptr [rbp+var_348]^^^jmp     loc_46BF27^^^lea     rax, [rbx-2]^^^mov     rcx, [rbp+var_288]^^^mov     rbx, r12^^^sub     r14, rax^^^sub     rbx, rax^^^lea     r14, [r14+rcx-2]^^^add     rbx, r15^^^mov     [rbp+var_288], r14^^^movzx   eax, byte ptr [rbx-1]^^^add     [rbp+var_280], 1^^^add     r12, 11h^^^cmp     [rbp+var_280], 0Ch^^^jnz     loc_46C3BB^^^mov     r14, [rbp+var_288]^^^mov     r15, [rbp+var_308]^^^mov     r12d, eax^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     rbx, r13^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_4686B6^^^movzx   esi, r12b^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^sub     r14, 1^^^call    _IO_sputbackc^^^mov     r11d, [rbp+var_358]^^^jmp     loc_4686B6^^^mov     ecx, r14d^^^mov     r13, [rbp+var_240]^^^mov     r14, [rbp+var_258]^^^mov     r15, [rbp+var_308]^^^mov     r12d, eax^^^mov     [rbp+var_300], ecx^^^mov     esi, dword ptr [rbp+var_2D0]^^^test    esi, esi^^^cmovle  ecx, dword ptr [rbp+var_2D0]^^^cmp     [rbp+var_280], 9^^^mov     dword ptr [rbp+var_2D0], ecx^^^jg      loc_46C7A8^^^cmp     r14, r15^^^jz      loc_46C720^^^mov     rbx, r13^^^movzx   eax, byte ptr [rbp+var_280]^^^mov     r13, rbx^^^add     eax, 30h^^^mov     [rbx+r15], al^^^add     r15, 1^^^mov     ecx, dword ptr [rbp+var_2D0]^^^test    ecx, ecx^^^jz      loc_46C6F8^^^cmp     r12d, 0FFFFFFFFh^^^jz      loc_46C6C0^^^mov     rdi, [rbp+var_228]^^^mov     rax, [rdi+8]^^^cmp     rax, [rdi+10h]^^^jnb     short loc_46C67B^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rdi+8], rax^^^mov     edx, dword ptr [rbp+var_2D0]^^^xor     eax, eax^^^add     [rbp+var_288], 1^^^test    edx, edx^^^setnle  al^^^sub     dword ptr [rbp+var_2D0], eax^^^jmp     loc_46C349^^^mov     rdi, r13^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_46C3FC^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     edx, fs:[rdx]^^^mov     [rbp+var_234], edx^^^movzx   edx, byte ptr [rbx]^^^test    dl, dl^^^jnz     loc_46C428^^^mov     ecx, r14d^^^mov     r12d, eax^^^mov     r13, [rbp+var_240]^^^mov     r14, [rbp+var_258]^^^mov     r15, [rbp+var_308]^^^jmp     loc_46C597^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     short loc_46C60F^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_258], r14^^^mov     [rbp+var_240], r13^^^mov     r14, [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     rbx, [rbp+var_228]^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4686B6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     esi, [rbp+var_234]^^^mov     [rbp+var_258], r14^^^mov     [rbp+var_240], r13^^^mov     r14, [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     rbx, [rbp+var_228]^^^mov     fs:[rax], esi^^^jmp     loc_4686B6^^^mov     [rbp+var_258], r14^^^mov     [rbp+var_240], r13^^^mov     r14, [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     rbx, [rbp+var_228]^^^jmp     loc_4686B6^^^lea     rdx, [r15+r15]^^^mov     esi, 100h^^^mov     rdi, r13^^^cmp     rdx, 100h^^^cmovb   rdx, rsi^^^cmp     [rbp+var_279], 0^^^jnz     loc_46C8CB^^^cmp     rdx, 1000h^^^ja      loc_46C8AB^^^add     rdx, 0Fh^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^lea     rbx, [rdx+r14]^^^sub     rsp, rax^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+rdx]^^^cmp     r13, rax^^^cmovnz  rbx, rdx^^^test    r13, r13^^^jz      loc_46C81B^^^mov     rdx, r14^^^mov     rdi, rcx^^^mov     rsi, r13^^^mov     [rbp+var_348], rcx^^^mov     r14, rbx^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rbx, rcx^^^jmp     loc_46C5C5^^^movzx   eax, byte ptr [rbp+var_268]^^^xor     eax, 1^^^cmp     [rbp+var_280], 0Bh^^^jnz     loc_46CFA8^^^test    al, al^^^jz      loc_46CFA8^^^mov     rdi, [rbp+var_2A8]^^^cmp     byte ptr [rdi], 0^^^jz      loc_46C89F^^^mov     rdx, r14^^^mov     rbx, r13^^^mov     dword ptr [rbp+var_258], r12d^^^mov     r14, rdi^^^cmp     rdx, r15^^^jz      short loc_46C826^^^movzx   eax, byte ptr [r14]^^^add     r14, 1^^^mov     [rbx+r15], al^^^add     r15, 1^^^cmp     byte ptr [r14], 0^^^jnz     short loc_46C7E7^^^mov     r12d, dword ptr [rbp+var_258]^^^mov     r14, rdx^^^mov     r13, rbx^^^mov     byte ptr [rbp+var_268], 1^^^jmp     loc_46C5DA^^^mov     r14, rbx^^^mov     rbx, rcx^^^jmp     loc_46C5C5^^^lea     r12, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, rbx^^^cmp     r12, 100h^^^cmovb   r12, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_46CFF9^^^cmp     r12, 1000h^^^ja      loc_46CFD9^^^add     r12, 0Fh^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r12+10h]^^^sub     rsp, rax^^^lea     rax, [r12+rdx]^^^lea     r13, [rsp+360h+var_351]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rcx, [r13+r12+0]^^^cmp     rbx, rcx^^^cmovz   r12, rax^^^test    rbx, rbx^^^jz      loc_46D01A^^^mov     rsi, rbx^^^mov     rdi, r13^^^mov     rbx, r13^^^call    memcpy^^^mov     rdx, r12^^^jmp     loc_46C7EC^^^mov     byte ptr [rbp+var_268], 1^^^jmp     loc_46C5DA^^^mov     rdi, rdx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46C751^^^xor     edi, edi^^^mov     rsi, rdx^^^mov     [rbp+var_338], rdx^^^call    realloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46DF63^^^cmp     [rbp+var_279], 0^^^mov     r14, rdx^^^jnz     loc_46C5C5^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     [rbp+var_279], 1^^^jmp     loc_46C5C5^^^mov     rdi, r12^^^mov     dword ptr [rbp+var_338], edx^^^mov     [rbp+var_328], rsi^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^mov     edx, dword ptr [rbp+var_338]^^^mov     rsi, [rbp+var_328]^^^jnz     loc_466BB9^^^mov     rbx, r12^^^mov     r12d, eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_290], r14^^^mov     [rbp+var_2A0], rsi^^^mov     r14, r15^^^mov     r13d, edx^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_466BFC^^^lea     rcx, [r15+r15]^^^mov     eax, 100h^^^mov     rdi, [rbp+var_240]^^^cmp     rcx, 100h^^^cmovb   rcx, rax^^^cmp     [rbp+var_279], 0^^^jnz     loc_46CB09^^^cmp     rcx, 1000h^^^ja      loc_46CADB^^^add     rcx, 0Fh^^^mov     rdx, [rbp+var_258]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+10h]^^^add     rdx, rcx^^^sub     rsp, rax^^^lea     r13, [rsp+360h+var_351]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+rcx+0]^^^cmp     [rbp+var_240], rax^^^cmovz   rcx, rdx^^^cmp     [rbp+var_240], 0^^^jz      loc_46CA86^^^mov     rdx, [rbp+var_258]^^^mov     rsi, [rbp+var_240]^^^mov     rdi, r13^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     [rbp+var_240], r13^^^mov     rdi, r13^^^mov     r11d, [rbp+var_358]^^^mov     [rbp+var_258], rcx^^^jmp     loc_467D50^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46CA9C^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, word ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cx^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^lea     rdx, [rdx+rdx+100h]^^^mov     [rbp+var_258], rdx^^^jmp     loc_467D24^^^mov     [rbp+var_258], rcx^^^mov     [rbp+var_240], r13^^^mov     rdi, r13^^^jmp     loc_467D50^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r11d, [rbp+var_358]^^^jz      loc_46CB91^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_467D24^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_348]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46C9A9^^^xor     edi, edi^^^mov     rsi, rcx^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rbp+var_348]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46CBBA^^^cmp     [rbp+var_279], 0^^^jnz     loc_46CA86^^^mov     rsi, [rbp+var_240]^^^mov     rdi, rax^^^mov     rdx, r15^^^mov     [rbp+var_348], rcx^^^mov     [rbp+var_358], r11d^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     [rbp+var_240], r13^^^mov     rdi, r13^^^mov     [rbp+var_279], 1^^^mov     r11d, [rbp+var_358]^^^mov     [rbp+var_258], rcx^^^jmp     loc_467D50^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     loc_46E2D4^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rsi, [rbp+var_260]^^^mov     rax, [rsi+68h]^^^jmp     loc_46506A^^^test    r15, r15^^^jz      loc_46C368^^^mov     rsi, [rbp+var_260]^^^movzx   edx, r12b^^^movzx   ecx, byte ptr [rbp+var_2B8]^^^mov     rax, [rsi+70h]^^^cmp     cl, [rax+rdx*4]^^^jnz     loc_46C368^^^cmp     r14, r15^^^jz      loc_46CCC0^^^mov     rbx, r13^^^movzx   ecx, byte ptr [rbp+var_2B8]^^^mov     r13, rbx^^^mov     byte ptr [rbp+var_2C0], 1^^^mov     byte ptr [rbp+var_268], 1^^^mov     [rbx+r15], cl^^^add     r15, 1^^^jmp     loc_46C5DA^^^movzx   ecx, [rbp+var_320]^^^xor     eax, eax^^^test    r13d, r13d^^^setnz   al^^^test    eax, ecx^^^jz      loc_46C31F^^^mov     rdi, [rbp+var_230]^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    strlen^^^cmp     rax, 10h^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^ja      loc_46C31F^^^mov     rsi, [rbp+var_230]^^^mov     rdi, [rbp+var_228]^^^lea     rdx, [rax+1]^^^call    memcpy^^^mov     r11d, [rbp+var_358]^^^mov     r8d, dword ptr [rbp+var_350]^^^jmp     loc_46C31F^^^lea     rdx, [r15+r15]^^^mov     esi, 100h^^^mov     rdi, r13^^^cmp     rdx, 100h^^^cmovb   rdx, rsi^^^cmp     [rbp+var_279], 0^^^jnz     loc_46CDCD^^^cmp     rdx, 1000h^^^ja      loc_46CDAD^^^add     rdx, 0Fh^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^lea     rbx, [rdx+r14]^^^sub     rsp, rax^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+rdx]^^^cmp     r13, rax^^^cmovnz  rbx, rdx^^^test    r13, r13^^^jz      loc_46CDA2^^^mov     rdx, r14^^^mov     rdi, rcx^^^mov     rsi, r13^^^mov     [rbp+var_348], rcx^^^mov     r14, rbx^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rbx, rcx^^^jmp     loc_46CC28^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46BE5D^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_46BE61^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     edx, [rbp+var_234]^^^mov     fs:[rax], edx^^^jmp     loc_46BE61^^^mov     r14, rbx^^^mov     rbx, rcx^^^jmp     loc_46CC28^^^mov     rdi, rdx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46CCF1^^^xor     edi, edi^^^mov     rsi, rdx^^^mov     [rbp+var_338], rdx^^^call    realloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46CEE1^^^cmp     [rbp+var_279], 0^^^mov     r14, rdx^^^jnz     loc_46CC28^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     [rbp+var_279], 1^^^jmp     loc_46CC28^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_468F16^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_46CEA6^^^cmp     edx, 2Fh^^^ja      short loc_46CED0^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_46CE98^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      short loc_46CF15^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_468F16^^^add     rax, 8^^^jmp     short loc_46CE92^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r13^^^mov     rbx, [rbp+var_228]^^^jnz     short loc_46CF25^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_468F16^^^mov     rdi, r13^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     r12d, eax^^^mov     r13, [rbp+var_240]^^^mov     r14, [rbp+var_258]^^^mov     r15, [rbp+var_308]^^^mov     ecx, [rbp+var_300]^^^jmp     loc_46C597^^^mov     r14d, dword ptr [rbp+var_2E8]^^^mov     rbx, r12^^^jmp     loc_46C653^^^cmp     r12d, 2Bh^^^jz      short loc_46CF8C^^^cmp     r12d, 2Dh^^^jnz     loc_46C368^^^cmp     r14, r15^^^jz      loc_46D091^^^mov     rbx, r13^^^mov     [rbx+r15], r12b^^^mov     r13, rbx^^^add     r15, 1^^^jmp     loc_46C5DA^^^cmp     [rbp+var_280], 0Ah^^^jz      short loc_46D025^^^mov     [rbp+var_258], r14^^^mov     [rbp+var_240], r13^^^mov     r14, [rbp+var_288]^^^mov     r11d, dword ptr [rbp+var_2D8]^^^mov     rbx, [rbp+var_228]^^^jmp     loc_46C549^^^mov     rdi, r12^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46C857^^^xor     edi, edi^^^mov     rsi, r12^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_46D261^^^cmp     [rbp+var_279], 0^^^jz      loc_46D1FD^^^mov     rdx, r12^^^mov     rbx, r13^^^jmp     loc_46C7EC^^^test    al, al^^^jz      short loc_46CFB1^^^cmp     [rbp+var_320], 0^^^jz      loc_46CFB1^^^mov     rdx, [rbp+var_230]^^^cmp     byte ptr [rdx], 0^^^jz      loc_46D21D^^^mov     rax, rdx^^^mov     rbx, r13^^^mov     rdx, r14^^^mov     dword ptr [rbp+var_258], r12d^^^mov     r14, rax^^^cmp     rdx, r15^^^jz      loc_46D184^^^movzx   eax, byte ptr [r14]^^^add     r14, 1^^^mov     [rbx+r15], al^^^add     r15, 1^^^cmp     byte ptr [r14], 0^^^jnz     short loc_46D059^^^mov     r12d, dword ptr [rbp+var_258]^^^mov     r14, rdx^^^mov     r13, rbx^^^mov     byte ptr [rbp+var_268], 0^^^jmp     loc_46C5DA^^^lea     rdx, [r15+r15]^^^mov     ecx, 100h^^^mov     rdi, r13^^^cmp     rdx, 100h^^^cmovb   rdx, rcx^^^cmp     [rbp+var_279], 0^^^jnz     loc_46D138^^^cmp     rdx, 1000h^^^ja      short loc_46D11C^^^add     rdx, 0Fh^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^lea     rbx, [rdx+r14]^^^sub     rsp, rax^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rcx+rdx]^^^cmp     r13, rax^^^cmovnz  rbx, rdx^^^test    r13, r13^^^jz      short loc_46D111^^^mov     rdx, r14^^^mov     rdi, rcx^^^mov     rsi, r13^^^mov     [rbp+var_348], rcx^^^mov     r14, rbx^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rbx, rcx^^^jmp     loc_46CF98^^^mov     r14, rbx^^^mov     rbx, rcx^^^jmp     loc_46CF98^^^mov     rdi, rdx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     short loc_46D0BE^^^xor     edi, edi^^^mov     rsi, rdx^^^mov     [rbp+var_338], rdx^^^call    realloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46D229^^^cmp     [rbp+var_279], 0^^^mov     r14, rdx^^^jnz     loc_46CF98^^^mov     rdx, r15^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     [rbp+var_279], 1^^^jmp     loc_46CF98^^^lea     r12, [r15+r15]^^^mov     ecx, 100h^^^mov     rdi, rbx^^^cmp     r12, 100h^^^cmovb   r12, rcx^^^cmp     [rbp+var_279], 0^^^jnz     loc_46D2B6^^^cmp     r12, 1000h^^^ja      loc_46D296^^^add     r12, 0Fh^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r12+10h]^^^sub     rsp, rax^^^lea     rax, [r12+rdx]^^^lea     r13, [rsp+360h+var_351]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rcx, [r13+r12+0]^^^cmp     rbx, rcx^^^cmovz   r12, rax^^^test    rbx, rbx^^^jz      loc_46D2CF^^^mov     rsi, rbx^^^mov     rdi, r13^^^mov     rbx, r13^^^call    memcpy^^^mov     rdx, r12^^^jmp     loc_46D062^^^mov     rdx, r15^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    memcpy^^^mov     rbx, r13^^^mov     rdx, r12^^^mov     [rbp+var_279], 1^^^jmp     loc_46C7EC^^^mov     byte ptr [rbp+var_268], 0^^^jmp     loc_46C5DA^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r13^^^mov     rbx, [rbp+var_228]^^^jnz     loc_46D2DA^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^mov     rcx, rbx^^^mov     [rbp+var_240], rax^^^mov     rbx, [rbp+var_228]^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jz      loc_465120^^^mov     rdi, rcx^^^call    free^^^jmp     loc_465120^^^mov     rdi, r12^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46D1B5^^^xor     edi, edi^^^mov     rsi, r12^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^jz      short loc_46D31F^^^cmp     [rbp+var_279], 0^^^jz      short loc_46D2FF^^^mov     rdx, r12^^^mov     rbx, r13^^^jmp     loc_46D062^^^mov     rdi, r13^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdx, r15^^^mov     rsi, rbx^^^mov     rdi, rax^^^call    memcpy^^^mov     rbx, r13^^^mov     rdx, r12^^^mov     [rbp+var_279], 1^^^jmp     loc_46D062^^^cmp     [rbp+var_279], 0^^^mov     rcx, rbx^^^mov     [rbp+var_240], rax^^^mov     rbx, [rbp+var_228]^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jz      loc_465120^^^mov     rdi, rcx^^^call    free^^^jmp     loc_465120^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 3^^^jz      loc_46D998^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+3], r12b^^^jz      loc_46D964^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46D934^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 6Eh^^^jnz     loc_46D929^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 4^^^jz      loc_46D864^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+4], r12b^^^jz      loc_46D810^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46D7E0^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 69h^^^jnz     loc_46D7D5^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 5^^^jz      loc_46D777^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+5], r12b^^^jz      loc_46D743^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46D713^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 74h^^^jnz     loc_46D708^^^xor     eax, eax^^^test    r8d, r8d^^^setnle  al^^^sub     r8d, eax^^^cmp     [rbp+var_258], 6^^^jz      loc_46D62D^^^mov     rdi, [rbp+var_240]^^^test    r8d, r8d^^^mov     [rdi+6], r12b^^^jz      loc_46D5E3^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jnb     loc_46D5C1^^^movzx   r12d, byte ptr [rax]^^^add     rax, 1^^^mov     [rbx+8], rax^^^mov     rcx, [rbp+var_260]^^^movzx   edx, r12b^^^mov     rax, [rcx+70h]^^^cmp     dword ptr [rax+rdx*4], 79h^^^jnz     loc_46D5B6^^^cmp     [rbp+var_258], 7^^^jz      short loc_46D546^^^mov     rdi, [rbp+var_240]^^^add     r14, 7^^^mov     r15d, 8^^^mov     [rdi+7], r12b^^^jmp     loc_467D39^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46813D^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r14, r13^^^mov     r15d, 3^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_467D39^^^cmp     [rbp+var_279], 0^^^jnz     loc_46D5EE^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^mov     [rbp+var_258], 100h^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     edx, [rdi]^^^mov     [rax], edx^^^movzx   edx, word ptr [rdi+4]^^^mov     [rax+4], dx^^^movzx   edx, byte ptr [rdi+6]^^^mov     [rax+6], dl^^^mov     edx, 107h^^^cmovnz  rdx, [rbp+var_258]^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], rdx^^^jmp     loc_46D4DE^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46D4BB^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r11d, [rbp+var_358]^^^jz      loc_46D696^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46D4DE^^^cmp     [rbp+var_279], 0^^^jnz     loc_46D6BF^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^mov     [rbp+var_258], 100h^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     edx, [rdi]^^^mov     [rax], edx^^^movzx   edx, word ptr [rdi+4]^^^mov     [rax+4], dx^^^mov     edx, 106h^^^cmovnz  rdx, [rbp+var_258]^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], rdx^^^jmp     loc_46D48D^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46D74E^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46D48D^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46D45B^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     loc_46D81B^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     ecx, [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], ecx^^^movzx   ecx, byte ptr [rdi+4]^^^setz    dl^^^movzx   edx, dl^^^lea     rdx, [rdx+rdx*4+100h]^^^mov     [rax+4], cl^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], rdx^^^jmp     loc_46D42D^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46D3FB^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46D8B7^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46D42D^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46D8E0^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     ecx, [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], ecx^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^lea     rdx, ds:100h[rdx*4]^^^mov     [rbp+var_258], rdx^^^jmp     loc_46D3CD^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46D96F^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46D3CD^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_46D39B^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46DA0F^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, word ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cx^^^movzx   ecx, byte ptr [rdi+2]^^^setz    dl^^^movzx   edx, dl^^^lea     rdx, [rdx+rdx*2+100h]^^^mov     [rax+2], cl^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], rdx^^^jmp     loc_46D36D^^^mov     r13d, 2^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_466CA7^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46DBA1^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_46D36D^^^mov     rcx, [rbp+var_278]^^^add     [rbp+var_290], 1^^^mov     rsi, [rbp+var_290]^^^mov     rdi, [rcx]^^^shl     rsi, 2^^^call    realloc^^^test    rax, rax^^^mov     rdx, [rbp+var_338]^^^jz      loc_46DB6A^^^mov     rsi, [rbp+var_278]^^^lea     r15, [rax+rdx]^^^mov     [rsi], rax^^^jmp     loc_465C20^^^mov     rdx, [rbp+var_270]^^^mov     rax, [rdx]^^^mov     [rbp+var_C0], rax^^^mov     rax, [rdx+8]^^^mov     [rbp+var_B8], rax^^^mov     rax, [rdx+10h]^^^mov     edx, dword ptr [rbp+var_C0]^^^mov     [rbp+var_B0], rax^^^mov     rax, [rbp+var_B8]^^^sub     r11d, 1^^^jz      short loc_46DAE9^^^cmp     edx, 2Fh^^^ja      short loc_46DB20^^^add     edx, 8^^^sub     r11d, 1^^^jnz     short loc_46DADB^^^cmp     edx, 2Fh^^^mov     dword ptr [rbp+var_C0], edx^^^mov     [rbp+var_B8], rax^^^ja      loc_46DBCA^^^mov     eax, edx^^^add     edx, 8^^^add     rax, [rbp+var_B0]^^^mov     dword ptr [rbp+var_C0], edx^^^jmp     loc_468016^^^add     rax, 8^^^jmp     short loc_46DAD5^^^mov     rax, [rbp+var_D8]^^^lea     rdx, [rax+8]^^^mov     [rbp+var_D8], rdx^^^jmp     loc_468016^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^jnz     short loc_46DB7C^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_468016^^^mov     rdi, rbx^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r11d, [rbp+var_358]^^^jnz     loc_467CFD^^^mov     r13d, 2^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     loc_46DCA9^^^sub     rsp, 110h^^^mov     rdi, [rbp+var_240]^^^lea     rax, [rsp+470h+var_461]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^movzx   ecx, byte ptr [rdi]^^^lea     rdx, [rax+100h]^^^cmp     [rbp+var_240], rdx^^^mov     [rax], cl^^^mov     [rbp+var_240], rax^^^setz    dl^^^movzx   edx, dl^^^add     rdx, 100h^^^mov     [rbp+var_258], rdx^^^jmp     loc_467CCF^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_4695DE^^^jmp     loc_467C9D^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46E131^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_467CCF^^^cmp     [rbp+var_279], 0^^^jnz     loc_46E3C2^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_468042^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 4^^^mov     dword ptr fs:[rax], 54h^^^jmp     loc_465120^^^lea     rbx, [r15+r15]^^^mov     esi, 100h^^^mov     rdi, r14^^^cmp     rbx, 100h^^^cmovb   rbx, rsi^^^cmp     [rbp+var_279], 0^^^jnz     loc_46DDFB^^^cmp     rbx, 1000h^^^ja      short loc_46DDDB^^^add     rbx, 0Fh^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rbx+10h]^^^sub     rsp, rax^^^lea     rax, [rbx+rdx]^^^lea     rcx, [rsp+360h+var_351]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^lea     rsi, [rcx+rbx]^^^cmp     r14, rsi^^^cmovz   rbx, rax^^^test    r14, r14^^^jz      short loc_46DDD0^^^mov     rsi, r14^^^mov     rdi, rcx^^^mov     [rbp+var_348], rcx^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, rbx^^^mov     r14, rcx^^^jmp     loc_4660F9^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_B8], rcx^^^jmp     loc_46867D^^^mov     rdx, rbx^^^mov     r14, rcx^^^jmp     loc_4660F9^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_338]^^^jnz     loc_46DD70^^^xor     edi, edi^^^mov     rsi, rbx^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^jz      loc_46DEBA^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46DDD0^^^mov     rdx, r15^^^mov     rsi, r14^^^mov     rdi, rax^^^mov     [rbp+var_348], rax^^^call    memcpy^^^mov     rcx, [rbp+var_348]^^^mov     rdx, rbx^^^mov     [rbp+var_279], 1^^^mov     r14, rcx^^^jmp     loc_4660F9^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_340], r9d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     rdx, [rbp+var_338]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_466057^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     [rbp+var_240], r14^^^mov     r8d, r9d^^^mov     r14, [rbp+var_228]^^^mov     [rbp+var_258], rdx^^^mov     r11d, dword ptr [rbp+var_288]^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4686A6^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_4682C0^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r14^^^mov     rbx, [rbp+var_258]^^^jnz     loc_46DF97^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     [rbp+var_338], rdx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     dword ptr [rbp+var_340], r9d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     ecx, eax^^^mov     rdx, [rbp+var_338]^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r9d, dword ptr [rbp+var_340]^^^jnz     loc_46717A^^^mov     [rbp+var_228], r12^^^mov     r12d, eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^movzx   eax, byte ptr [r13+0]^^^jmp     loc_4660BA^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_466E4F^^^cmp     [rbp+var_279], 0^^^mov     [rbp+var_240], r13^^^mov     rbx, [rbp+var_228]^^^jnz     short loc_46DFBC^^^mov     [rbp+var_240], 0^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, r13^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      loc_465A30^^^jmp     loc_465738^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46E066^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_466602^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_465D17^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_4684A2^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     [rbp+var_340], r9^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r9, [rbp+var_340]^^^mov     r11d, [rbp+var_358]^^^jz      loc_46E16A^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_466602^^^mov     rdi, r12^^^mov     [rbp+var_338], rdx^^^mov     byte ptr [rbp+var_348], cl^^^mov     [rbp+var_340], r9^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r13d, eax^^^mov     rdx, [rbp+var_338]^^^movzx   ecx, byte ptr [rbp+var_348]^^^mov     r9, [rbp+var_340]^^^jnz     loc_467854^^^mov     rbx, r12^^^mov     r12d, eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r14, r9^^^mov     [rbp+var_2A0], rdx^^^mov     r13, r15^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_46788A^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13d, 4^^^mov     dword ptr fs:[rax], 54h^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_469550^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^cmp     [rbp+var_279], 0^^^jnz     short loc_46E208^^^sub     rsp, 110h^^^mov     [rbp+var_258], 100h^^^lea     rdi, [rsp+470h+var_461]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_240], rdi^^^jmp     loc_466F2E^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jnz     loc_466F52^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_466F56^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46E28A^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_466F2E^^^mov     eax, dword ptr [rbp+var_250]^^^and     eax, 2000h^^^cmp     eax, 1^^^sbb     r13d, r13d^^^and     r13d, 2^^^test    eax, eax^^^mov     eax, 0FFFFFFFFh^^^cmovz   eax, [rbp+var_238]^^^mov     [rbp+var_238], eax^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     r13d, 2^^^jmp     loc_465120^^^mov     rdi, [rbp+var_240]^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_46750A^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_467513^^^lea     rcx, [rdx+8]^^^mov     [rbp+var_B8], rcx^^^jmp     loc_467AB0^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_350], r8d^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^mov     r8d, dword ptr [rbp+var_350]^^^jz      loc_468B2F^^^jmp     loc_467552^^^mov     rdi, r14^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^mov     rdi, rbx^^^call    __uflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r12d, eax^^^jnz     loc_4675D0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r13, r14^^^mov     r14, [rbp+var_288]^^^mov     eax, fs:[rax]^^^mov     [rbp+var_234], eax^^^jmp     loc_4676EA^^^lea     rdx, [rax+8]^^^mov     [rbp+var_B8], rdx^^^jmp     loc_466A56^^^mov     rdi, [rbp+var_240]^^^mov     esi, 100h^^^mov     dword ptr [rbp+var_350], r8d^^^mov     [rbp+var_358], r11d^^^call    realloc^^^test    rax, rax^^^mov     r8d, dword ptr [rbp+var_350]^^^mov     r11d, [rbp+var_358]^^^jz      short loc_46E44F^^^mov     [rbp+var_240], rax^^^mov     [rbp+var_258], 100h^^^jmp     loc_468042^^^mov     rax, [rbp+var_278]^^^add     [rbp+var_290], 1^^^mov     rsi, [rbp+var_290]^^^mov     rdi, [rax]^^^shl     rsi, 2^^^call    realloc^^^test    rax, rax^^^jz      short loc_46E478^^^mov     rsi, [rbp+var_278]^^^mov     [rsi], rax^^^add     rax, [rbp+var_2B8]^^^mov     [rbp+var_298], rax^^^jmp     loc_4675A2^^^mov     rdi, [rbp+var_240]^^^xor     r13d, r13d^^^call    free^^^mov     [rbp+var_240], 0^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^test    dword ptr [rbp+var_250], 2000h^^^jnz     short loc_46E4BA^^^mov     rdx, [rbp+var_278]^^^mov     rcx, [rbp+var_2D0]^^^mov     r13d, 2^^^add     [rbp+var_238], 1^^^mov     [rbp+var_278], 0^^^mov     rax, [rdx]^^^mov     dword ptr [rax+rcx*4-4], 0^^^jmp     loc_465120^^^xor     r13d, r13d^^^mov     [rbp+var_238], 0FFFFFFFFh^^^jmp     loc_465120^^^
_L_unlock_2008$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_447AE6^^^
__gconv_transform_ucs2reverse_internal$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rdx^^^mov     rdx, rsi^^^push    r14^^^add     rdx, 38h^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 98h^^^mov     ecx, [rsi+10h]^^^mov     [rsp+0C8h+var_A8], rsi^^^mov     [rsp+0C8h+var_88], r8^^^mov     [rsp+0C8h+var_80], r9^^^mov     ebx, [rsp+0C8h+arg_0]^^^test    cl, 1^^^mov     [rsp+0C8h+var_78], rax^^^mov     [rsp+0C8h+var_70], rdx^^^mov     [rsp+0C8h+var_A0], 0^^^jnz     short loc_45EB68^^^cmp     qword ptr [rdi+68h], 0^^^mov     rdx, [rdi+90h]^^^mov     [rsp+0C8h+var_A0], rdx^^^jz      short loc_45EB68^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     [rsp+0C8h+var_A0], rdx^^^test    ebx, ebx^^^jnz     loc_45F0A9^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     loc_45F10E^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r14, [rdx]^^^cmp     [rsp+0C8h+var_80], 0^^^mov     [rsp+0C8h+var_98], 0^^^lea     rax, [rsp+0C8h+var_68]^^^cmovz   rax, [rsp+0C8h+var_98]^^^mov     r13, [rdx+8]^^^mov     [rsp+0C8h+var_68], 0^^^mov     [rsp+0C8h+var_98], rax^^^mov     eax, [rsp+0C8h+arg_8]^^^test    eax, eax^^^jz      short loc_45EBCC^^^mov     rdi, [rdx+20h]^^^mov     r9d, [rdi]^^^test    r9b, 7^^^jnz     loc_45EF0B^^^mov     rax, [r15]^^^mov     [rsp+0C8h+var_B0], rax^^^cmp     rbp, [rsp+0C8h+var_B0]^^^jz      loc_45ED69^^^nop^^^mov     rax, [rsp+0C8h+var_B0]^^^add     rax, 2^^^cmp     rbp, rax^^^jb      loc_45EEF1^^^lea     rdx, [r14+4]^^^cmp     r13, rdx^^^jb      loc_45EEC3^^^and     ecx, 2^^^jnz     loc_45EDC8^^^cmp     [rsp+0C8h+var_98], 0^^^mov     rsi, r14^^^mov     rcx, [rsp+0C8h+var_B0]^^^mov     rbx, rdx^^^jnz     short loc_45EC46^^^jmp     loc_45ED9E^^^lea     rdx, [rax+2]^^^cmp     rbp, rdx^^^jb      loc_45EEF9^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      loc_45EECB^^^mov     rsi, rbx^^^mov     rbx, rcx^^^mov     rcx, rax^^^mov     rax, rdx^^^movzx   edx, word ptr [rcx]^^^ror     dx, 8^^^lea     edi, [rdx+2800h]^^^cmp     di, 7FFh^^^jbe     loc_45F059^^^movzx   edx, dx^^^cmp     rbp, rax^^^mov     [rsi], edx^^^jnz     short loc_45EC20^^^mov     [rsp+0C8h+var_89], 0^^^mov     [rsp+0C8h+var_90], 4^^^cmp     [rsp+0C8h+var_88], 0^^^mov     [r15], rax^^^jnz     loc_45EEE7^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r12, [rdx+30h]^^^test    r12, r12^^^jz      short loc_45ECC9^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45ECBF^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r14^^^mov     rdx, [r15]^^^mov     rsi, [rsp+0C8h+var_B0]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45EC98^^^mov     rax, [rsp+0C8h+var_A8]^^^add     dword ptr [rax+14h], 1^^^test    byte ptr [rax+10h], 1^^^jnz     loc_45F139^^^cmp     rbx, r14^^^jbe     loc_45EE3B^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rdi, [rsp+0C8h+var_A0]^^^mov     rax, [rdx]^^^mov     [rsp+0C8h+var_58], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0C8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0C8h+var_C8], 0^^^mov     r9, [rsp+0C8h+var_80]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0C8h+var_58]^^^mov     rsi, [rsp+0C8h+var_70]^^^mov     rdi, [rsp+0C8h+var_78]^^^mov     [rsp+0C8h+var_C0], eax^^^call    [rsp+0C8h+var_A0]^^^cmp     eax, 4^^^jz      loc_45EE30^^^mov     rdx, [rsp+0C8h+var_58]^^^cmp     rdx, rbx^^^jnz     loc_45F14E^^^test    eax, eax^^^jnz     loc_45F098^^^mov     rax, [r15]^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     [rsp+0C8h+var_B0], rax^^^cmp     rbp, [rsp+0C8h+var_B0]^^^mov     r14, [rdx]^^^mov     ecx, [rdx+10h]^^^jnz     loc_45EBE0^^^mov     rbx, r14^^^mov     rax, rbp^^^jmp     loc_45EC68^^^lea     rdx, [rax+2]^^^cmp     rbp, rdx^^^jb      loc_45EEF9^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      loc_45EECB^^^mov     rsi, rbx^^^mov     rbx, rcx^^^mov     rcx, rax^^^mov     rax, rdx^^^movzx   edx, word ptr [rcx]^^^ror     dx, 8^^^lea     edi, [rdx+2800h]^^^cmp     di, 7FFh^^^jbe     loc_45F059^^^movzx   edx, dx^^^cmp     rbp, rax^^^mov     [rsi], edx^^^jnz     short loc_45ED78^^^jmp     loc_45EC68^^^cmp     [rsp+0C8h+var_98], 0^^^jz      loc_45EFFA^^^mov     rbx, r14^^^mov     rsi, [rsp+0C8h+var_B0]^^^jmp     short loc_45EE00^^^lea     rcx, [rax+2]^^^cmp     rbp, rcx^^^jb      loc_45EEF9^^^lea     rdx, [rbx+4]^^^cmp     r13, rdx^^^jb      loc_45EECB^^^mov     rsi, rax^^^mov     rax, rcx^^^movzx   ecx, word ptr [rsi]^^^ror     cx, 8^^^lea     esi, [rcx+2800h]^^^cmp     si, 7FFh^^^jbe     loc_45F071^^^movzx   ecx, cx^^^mov     [rbx], ecx^^^mov     rbx, rdx^^^cmp     rbp, rax^^^jnz     short loc_45EDE0^^^jmp     loc_45EC68^^^cmp     [rsp+0C8h+var_90], 5^^^jz      loc_45ED4B^^^cmp     [rsp+0C8h+var_89], 0^^^jz      short loc_45EEAD^^^mov     r13d, [rsp+0C8h+arg_8]^^^test    r13d, r13d^^^jz      short loc_45EEAD^^^mov     rdx, [r15]^^^mov     rax, rbp^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45F166^^^xor     ecx, ecx^^^cmp     rbp, rdx^^^mov     rax, rdx^^^mov     r8, [rsp+0C8h+var_A8]^^^jbe     loc_45EFF3^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r8+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, rbp^^^mov     [r15], rax^^^jnz     short loc_45EE75^^^sub     eax, edx^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rcx, [rdx+20h]^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     [rsp+0C8h+var_90], 7^^^mov     eax, [rsp+0C8h+var_90]^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+0C8h+var_B0]^^^mov     rbx, r14^^^cmp     [rsp+0C8h+var_88], 0^^^mov     [rsp+0C8h+var_89], 0^^^mov     [rsp+0C8h+var_90], 5^^^mov     [r15], rax^^^jz      loc_45EC84^^^mov     rax, [rsp+0C8h+var_88]^^^mov     [rax], rbx^^^jmp     short loc_45EEAD^^^mov     rax, [rsp+0C8h+var_B0]^^^mov     rbx, r14^^^mov     [rsp+0C8h+var_89], 1^^^mov     [rsp+0C8h+var_90], 7^^^jmp     loc_45EC75^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     loc_45F07F^^^movsxd  r10, r9d^^^mov     rax, [r15]^^^mov     esi, 2^^^mov     rdx, r10^^^and     edx, 7^^^jz      short loc_45EF50^^^lea     rsi, [rsp+0C8h+var_48]^^^xor     r8d, r8d^^^movzx   r11d, byte ptr [rdi+r8+4]^^^mov     [rsi+r8], r11b^^^add     r8, 1^^^cmp     rdx, r8^^^ja      short loc_45EF35^^^mov     esi, 2^^^sub     rsi, rdx^^^add     rsi, rax^^^cmp     rbp, rsi^^^jb      loc_45F1C3^^^lea     r11, [r14+4]^^^mov     [rsp+0C8h+var_90], 5^^^cmp     r13, r11^^^jb      loc_45EEAD^^^lea     rsi, [rsp+0C8h+var_48]^^^mov     r8, rax^^^movzx   ebx, byte ptr [r8]^^^add     r8, 1^^^mov     [rsi+rdx], bl^^^add     rdx, 1^^^cmp     rbp, r8^^^jbe     short loc_45EF96^^^cmp     rdx, 1^^^jbe     short loc_45EF7C^^^movzx   edx, [rsp+0C8h+var_48]^^^ror     dx, 8^^^lea     esi, [rdx+2800h]^^^cmp     si, 7FFh^^^jbe     loc_45F198^^^movzx   edx, dx^^^mov     [r14], edx^^^mov     r9d, [rdi]^^^mov     r14, r11^^^movsxd  r10, r9d^^^and     r10d, 7^^^cmp     r10, 1^^^jg      loc_45F17F^^^sub     rax, r10^^^and     r9d, 0FFFFFFF8h^^^add     rax, 2^^^mov     [r15], rax^^^mov     [rsp+0C8h+var_B0], rax^^^mov     rax, [rsp+0C8h+var_A8]^^^mov     [rdi], r9d^^^mov     ecx, [rax+10h]^^^jmp     loc_45EBD4^^^xor     eax, eax^^^jmp     loc_45EE93^^^mov     rbx, rdx^^^mov     rsi, r14^^^mov     rcx, [rsp+0C8h+var_B0]^^^jmp     short loc_45F036^^^lea     rdx, [rax+2]^^^cmp     rbp, rdx^^^jb      loc_45EEF9^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      loc_45EECB^^^mov     rsi, rbx^^^mov     rbx, rcx^^^mov     rcx, rax^^^mov     rax, rdx^^^movzx   edx, word ptr [rcx]^^^ror     dx, 8^^^lea     edi, [rdx+2800h]^^^cmp     di, 7FFh^^^jbe     short loc_45F059^^^movzx   edx, dx^^^cmp     rbp, rax^^^mov     [rsi], edx^^^jnz     short loc_45F010^^^jmp     loc_45EC68^^^mov     rbx, rsi^^^mov     rax, rcx^^^mov     [rsp+0C8h+var_89], 0^^^mov     [rsp+0C8h+var_90], 6^^^jmp     loc_45EC75^^^mov     rdx, [rsp+0C8h+var_98]^^^add     qword ptr [rdx], 1^^^jmp     loc_45EE20^^^mov     ecx, offset __PRETTY_FUNCTION___12794^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^cmp     eax, 7^^^mov     [rsp+0C8h+var_90], eax^^^setz    [rsp+0C8h+var_89]^^^jmp     loc_45EE3B^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     short loc_45F120^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rax, [rdx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rdx+10h], 1^^^mov     [rsp+0C8h+var_90], 0^^^jnz     loc_45EEAD^^^mov     rdi, [rsp+0C8h+var_A0]^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0C8h+arg_8]^^^mov     [rsp+0C8h+var_C8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0C8h+var_80]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0C8h+var_70]^^^mov     rdi, [rsp+0C8h+var_78]^^^mov     [rsp+0C8h+var_C0], eax^^^call    [rsp+0C8h+var_A0]^^^mov     [rsp+0C8h+var_90], eax^^^jmp     loc_45EEAD^^^mov     rax, [rsp+0C8h+var_88]^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r14, [rax]^^^jmp     loc_45EB84^^^mov     ecx, offset __PRETTY_FUNCTION___12794^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0C8h+var_80]^^^mov     [rax], rbx^^^mov     rax, [rsp+0C8h+var_68]^^^add     [rdx], rax^^^jmp     loc_45EE3B^^^sub     rbx, rdx^^^mov     rdx, rbx^^^shr     rdx, 3Fh^^^add     rdx, rbx^^^sar     rdx, 1^^^sub     [r15], rdx^^^jmp     loc_45ED43^^^mov     ecx, offset __PRETTY_FUNCTION___12794^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12751^^^mov     edx, 1C0h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInptrBytebufSt^^^call    __assert_fail^^^cmp     [rsp+0C8h+var_98], 0^^^mov     [rsp+0C8h+var_90], 6^^^jz      loc_45EEAD^^^and     ecx, 2^^^jz      loc_45EEAD^^^mov     rdx, [rsp+0C8h+var_98]^^^add     qword ptr [rdx], 1^^^jmp     loc_45EFC2^^^cmp     rbp, rax^^^mov     [r15], rbp^^^mov     [rsp+0C8h+var_90], 7^^^jbe     loc_45EEAD^^^mov     r8, rbp^^^lea     rcx, [rax+1]^^^lea     r10, [rdi+rdx+4]^^^sub     r8, rax^^^mov     r11, r8^^^shr     r11, 4^^^mov     rsi, r11^^^shl     rsi, 4^^^test    rsi, rsi^^^jz      short loc_45F24E^^^lea     r9, [rax+10h]^^^cmp     r8, 0Fh^^^lea     r12, [r10+10h]^^^setnbe  bl^^^cmp     r10, r9^^^setnbe  r9b^^^cmp     rax, r12^^^setnbe  r12b^^^or      r9d, r12d^^^test    bl, r9b^^^jz      short loc_45F24E^^^xor     ecx, ecx^^^xor     r9d, r9d^^^movdqu  xmm0, xmmword ptr [rax+rcx]^^^add     r9, 1^^^movdqu  xmmword ptr [r10+rcx], xmm0^^^add     rcx, 10h^^^cmp     r11, r9^^^ja      short loc_45F223^^^add     rax, rsi^^^add     rdx, rsi^^^cmp     r8, rsi^^^jz      loc_45EEA5^^^lea     rcx, [rax+1]^^^movzx   eax, byte ptr [rax]^^^mov     [rdi+rdx+4], al^^^add     rdx, 1^^^cmp     rbp, rcx^^^mov     rax, rcx^^^jbe     loc_45EEA5^^^add     rcx, 1^^^jmp     short loc_45F24E^^^
sub_473200$$$mov     edi, [rbp-10CCh]^^^lea     rsi, [rbp-10C0h]^^^mov     edx, 0FA0h^^^call    strerror_r^^^mov     dword ptr [rbp-1120h], 0^^^mov     r8, rax^^^jmp     loc_470D01^^^
fflush$$$test    rdi, rdi^^^push    rbx^^^mov     rbx, rdi^^^jz      loc_425710^^^mov     eax, [rdi]^^^and     eax, 8000h^^^jnz     short loc_4256BE^^^mov     rdx, [rdi+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_4256BA^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4256A6^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_32^^^jmp     short loc_4256AF^^^cmpxchg [rdx], esi^^^jnz     _L_lock_32^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rax+60h]^^^cmp     eax, 1^^^mov     eax, [rbx]^^^sbb     edx, edx^^^not     edx^^^test    ah, 80h^^^jnz     short loc_425709^^^mov     rsi, [rbx+88h]^^^mov     eax, [rsi+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+4], eax^^^jnz     short loc_425709^^^mov     qword ptr [rsi+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425705^^^lock dec dword ptr [rsi]^^^jnz     short _L_unlock_80^^^jmp     short loc_425709^^^dec     dword ptr [rsi]^^^jnz     short _L_unlock_80^^^mov     eax, edx^^^pop     rbx^^^retn^^^pop     rbx^^^jmp     _IO_flush_all^^^
getegid$$$mov     eax, 6Ch        ^^^syscall^^^retn^^^
__libc_dlsym_private$$$sub     rsp, 58h^^^mov     ecx, offset do_dlsym_private^^^mov     [rsp+58h+var_48], rdi^^^mov     [rsp+58h+var_40], rsi^^^lea     r8, [rsp+58h+var_48]^^^lea     rdx, [rsp+58h+var_9]^^^lea     rsi, [rsp+58h+var_28]^^^lea     rdi, [rsp+58h+var_18]^^^mov     [rsp+58h+var_28], 0^^^call    _dl_catch_error^^^test    eax, eax^^^jnz     short loc_47AB80^^^cmp     [rsp+58h+var_28], 0^^^jnz     short loc_47AB80^^^mov     rdx, [rsp+58h+var_38]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_47AB70^^^mov     rax, [rdx]^^^mov     rdx, [rsp+58h+var_30]^^^add     rax, [rdx+8]^^^add     rsp, 58h^^^retn^^^xor     eax, eax^^^cmp     [rsp+58h+var_9], 0^^^jz      short loc_47AB79^^^mov     rdi, [rsp+58h+var_28]^^^mov     [rsp+58h+var_50], rax^^^call    free^^^mov     rax, [rsp+58h+var_50]^^^add     rsp, 58h^^^retn^^^
_L_lock_1156$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_418FBA^^^
_L_lock_4530$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42AF46^^^
mmap64$$$mov     r10, rcx        ^^^mov     eax, 9^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_IO_default_underflow$$$mov     eax, 0FFFFFFFFh^^^retn^^^
_IO_new_do_write$$$xor     eax, eax        ^^^test    rdx, rdx^^^push    rbx^^^mov     rbx, rdx^^^jnz     short loc_42AEA0^^^pop     rbx^^^retn^^^call    new_do_write^^^cmp     rbx, rax^^^setz    al^^^movzx   eax, al^^^sub     eax, 1^^^pop     rbx^^^retn^^^
vfwprintf$$$push    rbp             ^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     rbx, rdi^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     r13, rsi^^^mov     [rbp+var_8], r15^^^sub     rsp, 11D0h^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^mov     esi, 1^^^mov     r12, rdx^^^mov     r8d, fs:[r8]^^^mov     [rbp+var_10CC], r8d^^^call    _IO_fwide^^^cmp     eax, 1^^^jnz     loc_46E870^^^mov     eax, [rbx]^^^test    al, 8^^^jnz     loc_46E9F0^^^test    r13, r13^^^jz      loc_46EA10^^^mov     esi, 1^^^mov     rdi, rbx^^^call    _IO_fwide^^^cmp     eax, 1^^^jnz     loc_46E870^^^mov     r14d, [rbx]^^^test    r14b, 2^^^jnz     loc_46E808^^^mov     rax, [r12]^^^mov     esi, 25h^^^mov     rdi, r13^^^mov     [rbp+var_D0], rax^^^mov     rax, [r12+8]^^^mov     [rbp+var_C8], rax^^^mov     rax, [r12+10h]^^^mov     [rbp+var_C0], rax^^^call    wcschrnul^^^and     r14d, 8000h^^^mov     [rbp+var_10C8], rax^^^mov     [rbp+var_10D0], 0^^^jnz     short loc_46E757^^^mov     eax, 0^^^test    rax, rax^^^jnz     loc_46E838^^^mov     [rbp+var_F0], offset funlockfile^^^mov     [rbp+var_E8], rbx^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_46E753^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_46E73F^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_647^^^jmp     short loc_46E748^^^cmpxchg [rdx], esi^^^jnz     _L_lock_647^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^mov     r15, [rbp+var_10C8]^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     r14d, 0FFFFFFFFh^^^sub     r15, r13^^^sar     r15, 2^^^mov     rdx, r15^^^call    qword ptr [rax+38h]^^^cmp     r15, rax^^^jz      loc_46E880^^^mov     [rbp+var_10D8], 0^^^xor     r15d, r15d^^^mov     rdi, [rbp+var_10D8]^^^call    free^^^mov     rdi, r15^^^call    free^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_46E7E8^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_46E7E8^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_46E7E0^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_727^^^jmp     short loc_46E7E8^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_727^^^mov     edx, [rbp+var_10D0]^^^test    edx, edx^^^jz      short loc_46E819^^^lea     rdi, [rbp+var_F0]^^^xor     esi, esi^^^call    near ptr 0^^^jmp     short loc_46E819^^^mov     rdx, r12^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    buffered_vfprintf_0^^^mov     r14d, eax^^^mov     eax, r14d^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^lea     rdi, [rbp+var_F0]^^^mov     rdx, rbx^^^mov     esi, offset funlockfile^^^call    near ptr 0^^^mov     eax, [rbx]^^^mov     [rbp+var_10D0], 1^^^test    ah, 80h^^^jz      loc_46E70D^^^jmp     loc_46E757^^^mov     r14d, 0FFFFFFFFh^^^jmp     short loc_46E819^^^cmp     r15, 7FFFFFFFh^^^ja      loc_46E787^^^mov     rax, [rbp+var_10C8]^^^mov     r14d, r15d^^^mov     edi, [rax]^^^test    edi, edi^^^jz      loc_46E787^^^cmp     cs:__printf_function_table, 0^^^jnz     loc_46EA41^^^cmp     cs:__printf_modifier_table, 0^^^jnz     loc_46EA41^^^cmp     cs:__printf_va_arg_table, 0^^^jnz     loc_46EA41^^^mov     r15, [rbp+var_10C8]^^^mov     [rbp+var_1110], 0^^^mov     [rbp+var_10D8], 0^^^mov     [rbp+var_114C], 0^^^mov     [rbp+var_10F8], 0^^^mov     [rbp+var_1140], 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_1150], 0^^^lea     rdi, [r15+4]^^^mov     r15d, [r15+4]^^^lea     r9, [rbp+var_120]^^^mov     [rbp+var_1170], 0^^^mov     [rbp+var_116C], 0^^^mov     [rbp+var_1100], rdi^^^mov     [rbp+var_1158], 0^^^mov     eax, r15d^^^mov     [rbp+var_10F4], r15d^^^xor     r15d, r15d^^^sub     eax, 20h^^^mov     [rbp+var_1168], 0^^^mov     [rbp+var_1178], 0^^^cmp     eax, 5Ah^^^mov     [rbp+var_1144], 0^^^mov     [rbp+var_1154], 0^^^mov     [rbp+var_1138], 0^^^mov     [rbp+var_1184], 0^^^mov     [rbp+var_1148], 0^^^mov     [rbp+var_1130], 0FFFFFFFFh^^^mov     [rbp+var_1188], 0^^^mov     [rbp+var_1164], 20h^^^jbe     short loc_46EA30^^^cmp     [rbp+var_10F4], 0^^^jnz     loc_46EA7F^^^or      r14d, 0FFFFFFFFh^^^cmp     [rbp+var_1110], 0^^^jz      loc_46E795^^^mov     rdi, [rbp+var_10E0]^^^call    free^^^jmp     loc_46E795^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^or      eax, 20h^^^mov     r14d, 0FFFFFFFFh^^^mov     [rbx], eax^^^mov     dword ptr fs:[r8], 9^^^jmp     loc_46E819^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^mov     r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 16h^^^jmp     loc_46E819^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     rax^^^mov     [rbp+var_1110], 0^^^mov     [rbp+var_10D8], 0^^^xor     r15d, r15d^^^mov     [rbp+var_114C], 0^^^mov     [rbp+var_10F8], 0^^^mov     [rbp+var_1140], 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_1150], 0^^^sub     rsp, 910h^^^mov     [rbp+var_50], 0^^^lea     rdi, [rsp+1AE0h+var_1AD1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_10E0], rdi^^^mov     rdi, r15^^^call    free^^^cmp     [rbp+var_1140], 0FFFFFFFFFFFFFFFFh^^^jz      loc_46F262^^^mov     rax, [rbp+var_10C8]^^^mov     esi, [rax]^^^mov     [rbp+var_1100], rax^^^test    esi, esi^^^jz      loc_46F2CF^^^xor     r8d, r8d^^^xor     eax, eax^^^mov     edx, 900h^^^mov     dword ptr [rbp+var_10F0], r14d^^^mov     [rbp+var_1118], rbx^^^mov     r15d, 48h^^^mov     [rbp+var_1128], r13^^^mov     [rbp+var_1120], r12^^^mov     r14, rdx^^^mov     [rbp+var_10E8], 0^^^mov     rbx, rax^^^mov     r13, r8^^^mov     r12, [rbp+var_1100]^^^jmp     short loc_46EB33^^^cmp     r14, 1000h^^^ja      loc_470410^^^mov     [rbp+var_10E0], r13^^^mov     r13, r15^^^add     r15, 48h^^^add     r13, [rbp+var_10E0]^^^lea     rcx, [rbp+var_50]^^^mov     rsi, rbx^^^mov     rdi, r12^^^mov     rdx, r13^^^call    __parse_one_specwc^^^mov     r12, [r13+20h]^^^add     rbx, rax^^^add     [rbp+var_10E8], 1^^^mov     ecx, [r12]^^^test    ecx, ecx^^^jz      short loc_46EBD5^^^cmp     r14, r15^^^ja      short loc_46EB2C^^^lea     rdx, [r14+r14]^^^cmp     rdx, 1000h^^^ja      loc_4703D1^^^add     rdx, 0Fh^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^add     r14, rdx^^^sub     rsp, rax^^^lea     r13, [rsp+1AE0h+var_1AD1]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+rdx+0]^^^cmp     [rbp+var_10E0], rax^^^jz      short loc_46EBA5^^^mov     r14, rdx^^^mov     rsi, [rbp+var_10E0]^^^mov     rdx, r15^^^mov     rdi, r13^^^call    sub_400340^^^cmp     [rbp+var_1110], 0^^^jz      loc_46EB18^^^mov     rdi, [rbp+var_10E0]^^^call    free^^^jmp     loc_46EB18^^^mov     rax, rbx^^^mov     [rbp+var_1100], r12^^^mov     r14d, dword ptr [rbp+var_10F0]^^^mov     rbx, [rbp+var_1118]^^^mov     r13, [rbp+var_1128]^^^mov     r12, [rbp+var_1120]^^^mov     r11, [rbp+var_50]^^^cmp     rax, r11^^^cmovnb  r11, rax^^^mov     rax, 0AAAAAAAAAAAAAAAh^^^cmp     r11, rax^^^ja      loc_470C72^^^lea     r15, [r11+r11*2]^^^shl     r15, 3^^^cmp     r15, 1000h^^^ja      loc_470FFF^^^add     r15, 1Eh^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r15^^^lea     r8, [rsp+1AE0h+var_1AD1]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_1118], r8^^^mov     rax, r11^^^mov     esi, [rbx+74h]^^^lea     rdx, ds:0[r11*4]^^^shl     rax, 4^^^add     rax, [rbp+var_1118]^^^mov     [rbp+var_11B8], r11^^^shl     esi, 1Dh^^^sar     esi, 1Fh^^^mov     r8, rax^^^mov     [rbp+var_10F0], rax^^^add     r8, rdx^^^mov     rdi, r8^^^mov     [rbp+var_11D0], r8^^^call    sub_400390^^^cmp     [rbp+var_10E8], 0^^^mov     r8, [rbp+var_11D0]^^^mov     r11, [rbp+var_11B8]^^^jz      loc_46ED8C^^^xor     r9d, r9d^^^mov     dword ptr [rbp+var_1120], r14d^^^mov     [rbp+var_1180], rbx^^^mov     [rbp+var_1160], r13^^^mov     r14, r12^^^mov     r15, [rbp+var_10E0]^^^mov     [rbp+var_1128], r11^^^mov     rbx, r9^^^mov     r13, [rbp+var_10E8]^^^mov     r12, r8^^^jmp     short loc_46ED14^^^movsxd  rdx, dword ptr [r15+30h]^^^movsxd  r8, dword ptr [r15+8]^^^mov     rdi, r15^^^mov     rcx, [rbp+var_10F0]^^^mov     rax, cs:__printf_arginfo_table^^^shl     rdx, 2^^^add     rcx, rdx^^^add     rdx, r12^^^call    qword ptr [rax+r8*8]^^^add     rbx, 1^^^add     r15, 48h^^^cmp     rbx, r13^^^jz      short loc_46ED6A^^^mov     eax, [r15+2Ch]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_46ED27^^^cdqe^^^mov     dword ptr [r12+rax*4], 0^^^mov     eax, [r15+28h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_46ED3A^^^cdqe^^^mov     dword ptr [r12+rax*4], 0^^^mov     rsi, [r15+38h]^^^test    rsi, rsi^^^jz      short loc_46ED07^^^cmp     rsi, 1^^^jnz     short loc_46ECE0^^^movsxd  rax, dword ptr [r15+30h]^^^mov     edx, [r15+34h]^^^mov     r8, [rbp+var_10F0]^^^mov     [r12+rax*4], edx^^^movsxd  rax, dword ptr [r15+30h]^^^mov     edx, [r15+40h]^^^mov     [r8+rax*4], edx^^^jmp     short loc_46ED07^^^mov     r8, r12^^^mov     r11, [rbp+var_1128]^^^mov     r12, r14^^^mov     rbx, [rbp+var_1180]^^^mov     r13, [rbp+var_1160]^^^mov     r14d, dword ptr [rbp+var_1120]^^^test    r11, r11^^^jz      loc_46EE56^^^mov     rdx, [rbp+var_1118]^^^xor     r15d, r15d^^^jmp     short loc_46EDEC^^^cmp     eax, 3^^^jge     loc_46F160^^^cmp     eax, 1^^^jle     loc_46F228^^^mov     ecx, dword ptr [rbp+var_D0]^^^cmp     ecx, 30h^^^jnb     loc_46F211^^^mov     eax, ecx^^^add     rax, [rbp+var_C0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_D0], ecx^^^mov     eax, [rax]^^^mov     [rdx], eax^^^add     r15, 1^^^add     rdx, 10h^^^cmp     r15, r11^^^jz      short loc_46EE56^^^mov     eax, [r8+r15*4]^^^cmp     eax, 5^^^jle     short loc_46EDA8^^^cmp     eax, 100h^^^jz      loc_46F160^^^jg      loc_46F1A4^^^cmp     eax, 7^^^jle     loc_46F1EC^^^test    ah, 8^^^jnz     loc_46F160^^^mov     rcx, cs:__printf_va_arg_table^^^test    rcx, rcx^^^jnz     loc_47104F^^^mov     qword ptr [rdx], 0^^^mov     dword ptr [rdx+8], 0^^^jmp     short loc_46EDDF^^^movsxd  rax, r14d^^^mov     ecx, 7FFFFFFFh^^^sub     rcx, rax^^^cmp     rdx, rcx^^^ja      loc_46F599^^^add     [rbp+var_10F8], 1^^^add     r14d, edx^^^movsxd  rax, [rbp+var_10F8]^^^xor     r15d, r15d^^^cmp     [rbp+var_10E8], rax^^^jbe     loc_46E9CB^^^mov     rdi, [rbp+var_10E0]^^^lea     rax, [rax+rax*8]^^^lea     rsi, [rdi+rax*8]^^^movzx   edx, byte ptr [rsi+0Ch]^^^mov     eax, edx^^^shr     al, 3^^^mov     r8d, eax^^^mov     eax, edx^^^and     r8d, 1^^^shr     al, 4^^^mov     [rbp+var_11A4], r8d^^^mov     r8d, eax^^^mov     eax, edx^^^and     r8d, 1^^^shr     al, 5^^^mov     [rbp+var_1194], r8d^^^mov     r8d, eax^^^mov     eax, edx^^^and     r8d, 1^^^shr     al, 6^^^mov     [rbp+var_1198], r8d^^^mov     r8d, eax^^^mov     eax, edx^^^shr     al, 7^^^and     r8d, 1^^^movzx   eax, al^^^mov     [rbp+var_1190], r8d^^^mov     r8d, edx^^^mov     [rbp+var_11AC], eax^^^mov     eax, edx^^^and     r8d, 1^^^shr     al, 1^^^mov     dword ptr [rbp+var_1160], r8d^^^mov     r8d, eax^^^and     r8d, 1^^^mov     [rbp+var_118C], r8d^^^movzx   ecx, byte ptr [rsi+0Dh]^^^mov     eax, ecx^^^shr     cl, 3^^^shr     al, 1^^^mov     r8d, eax^^^mov     eax, edx^^^and     r8d, 1^^^shr     al, 2^^^mov     dword ptr [rbp+var_11A0], r8d^^^mov     r8d, eax^^^mov     eax, [rsi+8]^^^and     r8d, 1^^^mov     dword ptr [rbp+var_1120], r8d^^^mov     r8d, [rsi+4]^^^mov     dword ptr [rbp+var_1180], eax^^^mov     eax, [rsi+2Ch]^^^mov     dword ptr [rbp+var_10F0], r8d^^^mov     r8d, [rsi]^^^mov     dword ptr [rbp+var_1128], r8d^^^mov     r8d, ecx^^^and     r8d, 1^^^cmp     eax, 0FFFFFFFFh^^^mov     [rbp+var_11B0], r8d^^^movzx   r8d, byte ptr [rsi+10h]^^^mov     [rbp+var_11A5], r8b^^^jz      short loc_46EF8D^^^mov     r8, [rbp+var_1118]^^^cdqe^^^shl     rax, 4^^^mov     eax, [r8+rax]^^^test    eax, eax^^^mov     [rsi+4], eax^^^js      loc_46F2E1^^^mov     r8d, [rsi+4]^^^mov     dword ptr [rbp+var_10F0], r8d^^^mov     eax, [rsi+28h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_46EFB6^^^mov     r8, [rbp+var_1118]^^^cdqe^^^shl     rax, 4^^^mov     edx, [r8+rax]^^^or      eax, 0FFFFFFFFh^^^test    edx, edx^^^cmovns  eax, edx^^^mov     [rsi], eax^^^mov     dword ptr [rbp+var_1128], eax^^^mov     r8d, dword ptr [rbp+var_10F0]^^^cmp     dword ptr [rbp+var_1128], r8d^^^lea     r9, [rbp+var_120]^^^mov     eax, r8d^^^cmovge  eax, dword ptr [rbp+var_1128]^^^xor     r15d, r15d^^^cmp     eax, 3C8h^^^jle     short loc_46F032^^^add     eax, 20h^^^cdqe^^^lea     r15, ds:0[rax*4]^^^cmp     r15, 1000h^^^ja      loc_4710D0^^^add     r15, 1Eh^^^mov     r8d, dword ptr [rbp+var_1128]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r15^^^lea     r9, [rsp+1AE0h+var_1AD1]^^^and     r9, 0FFFFFFFFFFFFFFF0h^^^cmp     dword ptr [rbp+var_10F0], r8d^^^jge     loc_46F2FB^^^movsxd  rax, r8d^^^lea     rax, ds:80h[rax*4]^^^add     r9, rax^^^xor     r15d, r15d^^^cmp     dword ptr [rbp+var_1180], 0FFh^^^jg      loc_46F2A5^^^mov     rcx, cs:__printf_function_table^^^test    rcx, rcx^^^jz      loc_46F2A5^^^movsxd  r11, dword ptr [rbp+var_1180]^^^cmp     qword ptr [rcx+r11*8], 0^^^jz      loc_46F2A5^^^mov     r8, [rsi+38h]^^^lea     rax, ds:1Eh[r8*8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+1AE0h+var_1AD1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^test    r8, r8^^^jz      short loc_46F0B1^^^mov     r10d, [rsi+30h]^^^xor     ecx, ecx^^^xor     edx, edx^^^lea     eax, [rdx+r10]^^^add     edx, 1^^^shl     rax, 4^^^add     rax, [rbp+var_1118]^^^mov     [rdi+rcx*8], rax^^^mov     ecx, edx^^^cmp     rcx, r8^^^jb      short loc_46F08D^^^mov     rcx, cs:__printf_function_table^^^mov     rdx, rdi^^^mov     [rbp+var_11C0], r9^^^mov     rdi, rbx^^^call    qword ptr [rcx+r11*8]^^^cmp     eax, 0FFFFFFFEh^^^mov     r9, [rbp+var_11C0]^^^jz      loc_46F2A5^^^test    eax, eax^^^js      loc_46F30F^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_4703B8^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^ja      loc_470FD4^^^add     r14d, eax^^^mov     rdi, r15^^^call    free^^^test    r14d, r14d^^^js      loc_470FBB^^^movsxd  rax, [rbp+var_10F8]^^^mov     r15, [rbp+var_10E0]^^^mov     rdi, rbx^^^imul    rax, 48h^^^add     r15, rax^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [r15+18h]^^^mov     rdx, [r15+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    qword ptr [rax+38h]^^^mov     rdx, rax^^^mov     rax, [r15+20h]^^^sub     rax, [r15+18h]^^^sar     rax, 2^^^cmp     rdx, rax^^^jz      loc_46EE38^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, dword ptr [rbp+var_D0]^^^cmp     ecx, 30h^^^jnb     short loc_46F190^^^mov     eax, ecx^^^add     rax, [rbp+var_C0]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_D0], ecx^^^mov     rax, [rax]^^^mov     [rdx], rax^^^jmp     loc_46EDDF^^^mov     rax, [rbp+var_C8]^^^lea     rcx, [rax+8]^^^mov     [rbp+var_C8], rcx^^^jmp     short loc_46F17D^^^cmp     eax, 200h^^^jz      short loc_46F160^^^cmp     eax, 400h^^^jz      loc_46EDBA^^^cmp     eax, 107h^^^jnz     loc_46EE0F^^^mov     rax, [rbp+var_C8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rcx, [rax+10h]^^^mov     [rbp+var_C8], rcx^^^mov     rsi, [rax]^^^mov     edi, [rax+8]^^^mov     [rdx], rsi^^^mov     [rdx+8], edi^^^jmp     loc_46EDDF^^^mov     ecx, dword ptr [rbp+var_D0+4]^^^cmp     ecx, 0B0h^^^jnb     short loc_46F190^^^mov     eax, ecx^^^add     ecx, 10h^^^add     rax, [rbp+var_C0]^^^mov     dword ptr [rbp+var_D0+4], ecx^^^jmp     loc_46F17D^^^mov     rax, [rbp+var_C8]^^^lea     rcx, [rax+8]^^^mov     [rbp+var_C8], rcx^^^jmp     loc_46EDDB^^^test    eax, eax^^^jns     loc_46EDBA^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_46EE0F^^^test    byte ptr [rbx+74h], 4^^^jnz     short loc_46F258^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 752h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aS_flags24^^^call    __assert_fail^^^mov     edi, offset aInvalidNUseDet^^^call    __libc_fatal^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r8d, [rax+60h]^^^mov     rax, [rax+50h]^^^mov     [rbp+var_1140], rax^^^movzx   eax, byte ptr [rax]^^^mov     [rbp+var_1150], r8d^^^cmp     al, 7Fh^^^jz      short loc_46F295^^^test    al, al^^^jnz     loc_46EAB4^^^mov     [rbp+var_1140], 0^^^jmp     loc_46EAB4^^^mov     edx, dword ptr [rbp+var_1180]^^^mov     eax, offset sub_47116B^^^sub     edx, 20h^^^cmp     edx, 5Ah^^^ja      loc_46EA3F^^^mov     eax, edx^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     rax, ds:step4_jumps_13431[rax*8]^^^jmp     rax^^^xor     eax, eax^^^mov     [rbp+var_10E8], 0^^^jmp     loc_46EBFB^^^neg     eax^^^or      edx, 20h^^^mov     [rsi+0Ch], dl^^^mov     [rsi+4], eax^^^mov     [rbp+var_1198], 1^^^jmp     loc_46EF82^^^movsxd  rax, dword ptr [rbp+var_10F0]^^^lea     rax, ds:80h[rax*4]^^^jmp     loc_46F02C^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, [rbp+var_1148]^^^sub     ecx, 1^^^cmp     [rbp+var_1158], 0^^^jnz     short loc_46F36C^^^test    ecx, ecx^^^jle     short loc_46F36C^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11B8], ecx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     ecx, dword ptr [rbp+var_11B8]^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_470FDD^^^add     r14d, edx^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_470CBA^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rdx, [rbx+0A0h]^^^mov     esi, [rax]^^^test    rdx, rdx^^^jz      loc_470C95^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_470C95^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      loc_470C8D^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_46F5A5^^^add     r14d, 1^^^cmp     [rbp+var_1158], 0^^^jz      short loc_46F40A^^^test    ecx, ecx^^^jle     short loc_46F40A^^^movsxd  rdx, ecx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_470CCD^^^add     r14d, edx^^^test    r15, r15^^^jnz     loc_4731AC^^^mov     r8, [rbp+var_1100]^^^mov     esi, 25h^^^add     r8, 4^^^mov     rdi, r8^^^mov     [rbp+var_11D0], r8^^^call    wcschrnul^^^test    r14d, r14d^^^mov     r15, rax^^^mov     r8, [rbp+var_11D0]^^^js      loc_473193^^^mov     rcx, rax^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r8^^^sub     rcx, r8^^^mov     rdi, rbx^^^sar     rcx, 2^^^mov     rdx, rcx^^^mov     [rbp+var_11B8], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp+var_11B8]^^^cmp     rcx, rax^^^jz      loc_47295D^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r8d, dword ptr [rbp+var_10F0]^^^sub     r8d, 1^^^cmp     [rbp+var_1198], 0^^^mov     dword ptr [rbp+var_10F0], r8d^^^jnz     short loc_46F4D7^^^test    r8d, r8d^^^jle     short loc_46F4D7^^^movsxd  rdx, r8d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_471149^^^add     r14d, edx^^^movsxd  rax, [rbp+var_10F8]^^^imul    rax, 48h^^^add     rax, [rbp+var_10E0]^^^jz      loc_473017^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbx+0A0h]^^^mov     r8, [rbp+var_1118]^^^shl     rax, 4^^^test    rdx, rdx^^^mov     esi, [r8+rax]^^^jz      loc_472FFE^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_472FFE^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      loc_472FF6^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_472FED^^^add     r14d, 1^^^cmp     [rbp+var_1198], 0^^^jz      loc_46F0FA^^^cmp     dword ptr [rbp+var_10F0], 0^^^jle     loc_46F0FA^^^movsxd  rdx, dword ptr [rbp+var_10F0]^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_473100^^^add     r14d, edx^^^jmp     loc_46F0FA^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     dword ptr [rbp+var_1160], 0Ah^^^movsxd  rax, [rbp+var_10F8]^^^imul    rax, 48h^^^add     rax, [rbp+var_10E0]^^^jz      loc_46FF58^^^movsxd  rax, dword ptr [rax+30h]^^^shl     rax, 4^^^cmp     dword ptr [rbp+var_1120], 0^^^jz      loc_4702B9^^^mov     rdx, [rbp+var_1118]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^mov     r8, [rdx+rax]^^^cmp     dword ptr [rbp+var_1128], 0^^^jl      loc_46F818^^^mov     [rbp+var_11A5], 20h^^^jnz     loc_46F822^^^test    r8, r8^^^jnz     loc_46F822^^^cmp     [rbp+var_11A4], 0^^^jz      loc_46FBEC^^^cmp     dword ptr [rbp+var_1160], 8^^^jnz     loc_46FBEC^^^lea     rax, [r9-4]^^^mov     dword ptr [r9-4], 30h^^^mov     [rbp+var_1120], rax^^^mov     rax, r9^^^sub     rax, [rbp+var_1120]^^^movsxd  rdx, dword ptr [rbp+var_1128]^^^sar     rax, 2^^^cmp     rdx, rax^^^jg      short loc_46F6A1^^^cmp     [rbp+var_11A4], 0^^^jz      short loc_46F6A1^^^test    r8, r8^^^jz      short loc_46F6A1^^^cmp     dword ptr [rbp+var_1160], 8^^^jnz     short loc_46F6A1^^^mov     rax, [rbp+var_1120]^^^mov     dword ptr [rax-4], 30h^^^sub     rax, 4^^^mov     [rbp+var_1120], rax^^^sub     r9, [rbp+var_1120]^^^mov     rcx, r9^^^mov     [rbp+var_11A0], r9^^^sar     rcx, 2^^^neg     rcx^^^mov     rax, rcx^^^mov     [rbp+var_1128], rcx^^^add     rax, rdx^^^mov     edx, 0^^^cmovs   rax, rdx^^^cmp     [rbp+var_1198], 0^^^mov     [rbp+var_118C], eax^^^jnz     loc_46F8F4^^^mov     edx, dword ptr [rbp+var_10F0]^^^add     edx, ecx^^^sub     edx, eax^^^cmp     [rbp+var_11A4], 0^^^setnz   al^^^test    r8, r8^^^setnz   cl^^^and     al, cl^^^mov     byte ptr [rbp+var_10F0], al^^^jz      short loc_46F713^^^cmp     dword ptr [rbp+var_1160], 10h^^^lea     eax, [rdx-2]^^^cmovz   edx, eax^^^mov     eax, [rbp+var_1194]^^^or      eax, r10d^^^or      eax, [rbp+var_1190]^^^cmp     eax, 1^^^adc     edx, 0FFFFFFFFh^^^cmp     [rbp+var_11A5], 20h^^^jz      loc_46FCD4^^^test    r10d, r10d^^^jz      loc_46FC85^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_46FE44^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_46FE44^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_46FE3B^^^add     r14d, 1^^^cmp     byte ptr [rbp+var_10F0], 0^^^jz      short loc_46F791^^^cmp     dword ptr [rbp+var_1160], 10h^^^jz      loc_46FBFF^^^add     edx, [rbp+var_118C]^^^test    edx, edx^^^jle     short loc_46F7CD^^^movsxd  rdx, edx^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_46FE77^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_46FE6E^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_470298^^^mov     rcx, [rbp+var_11A0]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rsi, [rbp+var_1120]^^^sar     rcx, 2^^^mov     rdx, rcx^^^mov     [rbp+var_11B8], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp+var_11B8]^^^cmp     rcx, rax^^^jz      loc_47027F^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     dword ptr [rbp+var_1128], 1^^^cmp     dword ptr [rbp+var_1180], 58h^^^mov     ecx, offset _itowa_upper_digits^^^mov     eax, offset _itowa_lower_digits^^^cmovnz  rcx, rax^^^cmp     dword ptr [rbp+var_1160], 0Ah^^^jz      loc_46FF35^^^cmp     dword ptr [rbp+var_1160], 10h^^^jz      loc_46FF12^^^cmp     dword ptr [rbp+var_1160], 8^^^jz      loc_46FE90^^^mov     edi, dword ptr [rbp+var_1160]^^^mov     rsi, r9^^^mov     rax, r8^^^xor     edx, edx^^^sub     rsi, 4^^^div     rdi^^^mov     edx, [rcx+rdx*4]^^^test    rax, rax^^^mov     [rsi], edx^^^jnz     short loc_46F86A^^^cmp     [rbp+var_1140], 0^^^mov     [rbp+var_1120], rsi^^^jnz     loc_46FEB3^^^cmp     dword ptr [rbp+var_1160], 0Ah^^^jnz     loc_46F657^^^cmp     [rbp+var_11B0], 0^^^jz      loc_46F657^^^mov     rdi, [rbp+var_1120]^^^mov     rdx, r9^^^mov     rsi, r9^^^mov     [rbp+var_11D0], r8^^^mov     [rbp+var_11C0], r9^^^mov     dword ptr [rbp+var_11B8], r10d^^^call    _i18n_number_rewrite_1^^^mov     r8, [rbp+var_11D0]^^^mov     [rbp+var_1120], rax^^^mov     r9, [rbp+var_11C0]^^^mov     r10d, dword ptr [rbp+var_11B8]^^^jmp     loc_46F657^^^test    r10d, r10d^^^jz      loc_46FA20^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_46F9F4^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_46F9F4^^^mov     dword ptr [rax], 2Dh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_46F9EB^^^sub     dword ptr [rbp+var_10F0], 1^^^add     r14d, 1^^^cmp     [rbp+var_11A4], 0^^^jz      short loc_46F95C^^^test    r8, r8^^^jz      short loc_46F95C^^^cmp     dword ptr [rbp+var_1160], 10h^^^jz      loc_46FA6F^^^cmp     [rbp+var_118C], 0^^^jle     short loc_46F997^^^movsxd  rdx, [rbp+var_118C]^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_46FE77^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_46F9E2^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_470298^^^mov     rcx, [rbp+var_11A0]^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^mov     rsi, [rbp+var_1120]^^^sar     rcx, 2^^^mov     rdx, rcx^^^mov     [rbp+var_11B8], rcx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp+var_11B8]^^^cmp     rcx, rax^^^jz      loc_4702EE^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     [rbp+var_11D0], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp+var_11D0]^^^jnz     loc_46F929^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     [rbp+var_1190], 0^^^jz      loc_46FB28^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_46FAFC^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_46FAFC^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_46F936^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      loc_46FBCE^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_46FBCE^^^mov     dword ptr [rax], 30h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_46FBC5^^^mov     rdx, [rbx+0A0h]^^^mov     esi, dword ptr [rbp+var_1180]^^^test    rdx, rdx^^^jz      loc_46FBAC^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_46FBAC^^^mov     [rax], esi^^^add     rax, 4^^^add     esi, 1^^^mov     [rdx+20h], rax^^^jz      loc_46FBA0^^^cmp     r14d, 7FFFFFFEh^^^jz      loc_46FB6F^^^add     r14d, 2^^^sub     dword ptr [rbp+var_10F0], 2^^^jmp     loc_46F95C^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     [rbp+var_11D0], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp+var_11D0]^^^jnz     loc_46FA59^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     [rbp+var_1194], 0^^^jz      loc_46F941^^^mov     rdx, [rbx+0A0h]^^^test    rdx, rdx^^^jz      short loc_46FB78^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     short loc_46FB78^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rdx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_46F936^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp+var_11D0], r8^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     r8, [rbp+var_11D0]^^^jnz     short loc_46FB59^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     r14d, dword ptr [rbp+var_1180]^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_46FADF^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 30h^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_46FA9B^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     [rbp+var_1120], r9^^^mov     [rbp+var_11A5], 20h^^^jmp     loc_46F657^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_46FDC2^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_46FDC2^^^mov     dword ptr [rax], 30h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jz      loc_46FDB9^^^mov     rcx, [rbx+0A0h]^^^mov     esi, dword ptr [rbp+var_1180]^^^test    rcx, rcx^^^jz      loc_46FDEC^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_46FDEC^^^mov     [rax], esi^^^add     rax, 4^^^add     esi, 1^^^mov     [rcx+20h], rax^^^jz      loc_46FDAD^^^cmp     r14d, 7FFFFFFEh^^^jz      loc_46FD1B^^^add     r14d, 2^^^jmp     loc_46F791^^^cmp     [rbp+var_1190], 0^^^jz      loc_46FD5E^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_46FD34^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_46FD34^^^mov     dword ptr [rax], 2Bh^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_46F777^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^test    edx, edx^^^jle     short loc_46FD2D^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11B8], r10d^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     r10d, dword ptr [rbp+var_11B8]^^^ja      loc_46FE77^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_46FD24^^^add     r14d, edx^^^xor     edx, edx^^^jmp     loc_46F735^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^xor     edx, edx^^^jmp     loc_46F735^^^mov     esi, 2Bh^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C8], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_11C8]^^^jnz     loc_46FCBE^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     [rbp+var_1194], 0^^^jz      loc_46F77B^^^mov     rcx, [rbx+0A0h]^^^test    rcx, rcx^^^jz      loc_46FE11^^^mov     rax, [rcx+20h]^^^cmp     rax, [rcx+28h]^^^jnb     loc_46FE11^^^mov     dword ptr [rax], 20h^^^add     rax, 4^^^mov     [rcx+20h], rax^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_46F777^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, dword ptr [rbp+var_1180]^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 30h^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C8], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_11C8]^^^jnz     loc_46FC2B^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C8], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_11C8]^^^jnz     loc_46FC6F^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C8], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_11C8]^^^jnz     loc_46FD97^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     esi, 2Dh^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C8], edx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     edx, dword ptr [rbp+var_11C8]^^^jnz     loc_46F76A^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7D7h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     rsi, r9^^^mov     rdx, r8^^^mov     rax, rdx^^^shr     rdx, 3^^^sub     rsi, 4^^^and     eax, 7^^^test    rdx, rdx^^^mov     eax, [rcx+rax*4]^^^mov     [rsi], eax^^^jnz     short loc_46FE96^^^jmp     loc_46F87D^^^cmp     [rbp+var_11AC], 0^^^jz      loc_46F892^^^mov     ecx, [rbp+var_1150]^^^mov     rdx, [rbp+var_1140]^^^mov     rsi, r9^^^mov     rdi, [rbp+var_1120]^^^mov     [rbp+var_11D0], r8^^^mov     [rbp+var_11C0], r9^^^mov     dword ptr [rbp+var_11B8], r10d^^^call    group_number_0^^^mov     r10d, dword ptr [rbp+var_11B8]^^^mov     [rbp+var_1120], rax^^^mov     r9, [rbp+var_11C0]^^^mov     r8, [rbp+var_11D0]^^^jmp     loc_46F892^^^mov     rsi, r9^^^mov     rdx, r8^^^mov     rax, rdx^^^shr     rdx, 4^^^sub     rsi, 4^^^and     eax, 0Fh^^^test    rdx, rdx^^^mov     eax, [rcx+rax*4]^^^mov     [rsi], eax^^^jnz     short loc_46FF18^^^jmp     loc_46F87D^^^mov     rsi, r9^^^mov     rax, r8^^^mov     edi, 0Ah^^^xor     edx, edx^^^sub     rsi, 4^^^div     rdi^^^mov     edx, [rcx+rdx*4]^^^test    rax, rax^^^mov     [rsi], edx^^^jnz     short loc_46FF40^^^jmp     loc_46F87D^^^cmp     dword ptr [rbp+var_1120], 0^^^mov     edx, [r12]^^^jz      short loc_46FFB6^^^cmp     edx, 30h^^^jnb     short loc_46FFA6^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^jmp     loc_46F607^^^mov     dword ptr [rbp+var_1160], 8^^^jmp     loc_46F5B8^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_46FF78^^^cmp     dword ptr [rbp+var_11A0], 0^^^jz      loc_470080^^^cmp     edx, 30h^^^jnb     loc_47006D^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, byte ptr [rax]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^jmp     loc_46F607^^^mov     dword ptr [rbp+var_1160], 10h^^^jmp     loc_46F5B8^^^movsxd  rax, [rbp+var_10F8]^^^mov     rsi, [rbp+var_10E0]^^^imul    rax, 48h^^^add     rsi, rax^^^jz      loc_4700CC^^^movsxd  rax, dword ptr [rsi+30h]^^^lea     rdx, [rbp+var_70]^^^mov     rdi, rbx^^^shl     rax, 4^^^add     rax, [rbp+var_1118]^^^mov     [rbp+var_70], rax^^^call    __printf_fp^^^test    eax, eax^^^js      short loc_4700C3^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_46FE77^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_46F0F7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_46FFDA^^^cmp     [rbp+var_118C], 0^^^jnz     loc_470204^^^cmp     edx, 30h^^^jnb     loc_4701F1^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8d, [rax]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^jmp     loc_46F607^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^lea     rsi, [rbp+var_B0]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp+var_1120]^^^mov     r8d, dword ptr [rbp+var_1128]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, dword ptr [rbp+var_1180]^^^mov     [rbp+var_B0], r8d^^^and     edx, 1^^^mov     r8d, dword ptr [rbp+var_10F0]^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp+var_11A4]^^^mov     [rbp+var_A8], eax^^^movzx   eax, byte ptr [rbp+var_118C]^^^mov     [rbp+var_AC], r8d^^^and     edx, 1^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp+var_1160]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp+var_1194]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp+var_1198]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp+var_1190]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp+var_11AC]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^mov     [rbp+var_A4], al^^^movzx   eax, byte ptr [rbp+var_11B0]^^^and     eax, 1^^^shl     eax, 3^^^or      eax, 4^^^cmp     dword ptr [rbp+var_1160], 0^^^mov     [rbp+var_A3], al^^^movsx   eax, [rbp+var_11A5]^^^mov     [rbp+var_A0], eax^^^jz      loc_470237^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp+var_78], edx^^^mov     [rbp+var_80], rax^^^lea     rax, [rbp+var_80]^^^lea     rdx, [rbp+var_70]^^^mov     rdi, rbx^^^mov     [rbp+var_70], rax^^^call    __printf_fp^^^jmp     loc_470043^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_4700A4^^^cmp     edx, 30h^^^jnb     short loc_47025F^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^movzx   r8d, word ptr [rax]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^jmp     loc_46F607^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     short loc_47026F^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp+var_80], rax^^^jmp     loc_4701D8^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_470217^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_470253^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^jbe     short loc_4702B1^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7D7h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^add     r14d, ecx^^^jmp     loc_46F0FA^^^cmp     dword ptr [rbp+var_11A0], 0^^^jz      loc_470357^^^mov     rcx, [rbp+var_1118]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^movzx   r8d, byte ptr [rcx+rax]^^^jmp     loc_46F607^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      loc_470387^^^mov     edx, dword ptr [rbp+var_1128]^^^sub     edx, [rbp+var_118C]^^^add     r14d, ecx^^^add     edx, dword ptr [rbp+var_10F0]^^^test    edx, edx^^^jle     loc_46F0FA^^^movsxd  rdx, edx^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_46FE77^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^jbe     loc_46F591^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^cmp     [rbp+var_118C], 0^^^jnz     short loc_470390^^^mov     rsi, [rbp+var_1118]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^mov     r8d, [rsi+rax]^^^jmp     loc_46F607^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, [rbp+var_1118]^^^mov     [rbp+var_1190], 0^^^xor     r10d, r10d^^^mov     [rbp+var_1194], 0^^^movzx   r8d, word ptr [rdi+rax]^^^jmp     loc_46F607^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7D0h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     rdi, rdx^^^mov     [rbp+var_11C8], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_11C8]^^^jnz     loc_46EB79^^^mov     rdi, rdx^^^mov     [rbp+var_11C8], rdx^^^call    malloc^^^mov     rdx, [rbp+var_11C8]^^^mov     r13, rax^^^mov     r14, rdx^^^jmp     loc_46EBA5^^^mov     rdi, r14^^^call    __libc_alloca_cutoff^^^movzx   edx, [rbp+var_1110]^^^test    eax, eax^^^mov     r8d, 1^^^mov     [rbp+var_10E0], r13^^^cmovnz  r8d, edx^^^mov     [rbp+var_1110], r8b^^^jmp     loc_46EB2C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_4704C5^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_116C], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^mov     [rbp+var_1100], rdx^^^jmp     rax^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_4704D6^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1168], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     short loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_116C], 1^^^jmp     short loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1168], 1^^^jmp     short loc_47047C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_470577^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1164], 20h^^^mov     [rbp+var_1158], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     loc_47047C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_470595^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1170], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1164], 20h^^^mov     [rbp+var_1158], 1^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1170], 1^^^jmp     loc_47047C^^^mov     rdi, [rbp+var_1100]^^^cmp     [rbp+var_1158], 0^^^mov     eax, 30h^^^mov     rdx, [rbp+var_1100]^^^cmovnz  eax, [rbp+var_1164]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     [rbp+var_1164], eax^^^mov     eax, offset loc_46E9BA^^^mov     ecx, edi^^^mov     [rbp+var_10F4], edi^^^sub     ecx, 20h^^^cmp     ecx, 5Ah^^^ja      loc_47047C^^^mov     eax, ecx^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     loc_47047C^^^cmp     [rbp+var_1140], 0FFFFFFFFFFFFFFFFh^^^jz      loc_470847^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      loc_470833^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1178], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     loc_47047C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      loc_4707AC^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1188], 1^^^mov     rax, ds:step0_jumps_13254[rax*8]^^^jmp     loc_47047C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     eax, [rdi+4]^^^add     rdx, 4^^^mov     rcx, rdx^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_470788^^^mov     ecx, [r12]^^^cmp     ecx, 30h^^^jnb     loc_4707C0^^^mov     eax, ecx^^^add     rax, [r12+10h]^^^add     ecx, 8^^^mov     [r12], ecx^^^mov     eax, [rax]^^^test    eax, eax^^^mov     [rbp+var_1148], eax^^^jns     short loc_470709^^^neg     eax^^^mov     [rbp+var_1164], 20h^^^mov     [rbp+var_1158], 1^^^mov     [rbp+var_1148], eax^^^cmp     [rbp+var_1148], 3C7h^^^jbe     short loc_470748^^^movsxd  rax, [rbp+var_1148]^^^lea     r9, ds:80h[rax*4]^^^cmp     r9, 1000h^^^ja      loc_4707D3^^^lea     rax, [r9+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+1AE0h+var_1AD1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     r9, rax^^^mov     rdi, [rbp+var_1100]^^^mov     eax, offset loc_46E9BA^^^mov     edi, [rdi+4]^^^mov     ecx, edi^^^mov     [rbp+var_10F4], edi^^^sub     ecx, 20h^^^cmp     ecx, 5Ah^^^ja      loc_47047C^^^mov     eax, ecx^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     rax, ds:step1_jumps_13285[rax*8]^^^jmp     loc_47047C^^^imul    eax, 0Ah^^^lea     eax, [rsi+rax-30h]^^^add     rcx, 4^^^mov     esi, [rcx]^^^lea     edi, [rsi-30h]^^^cmp     edi, 9^^^jbe     short loc_470781^^^test    eax, eax^^^jz      loc_4706C6^^^cmp     esi, 24h^^^jnz     loc_4706C6^^^jmp     loc_46EA7F^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1188], 1^^^jmp     loc_47047C^^^mov     rax, [r12+8]^^^lea     rcx, [rax+8]^^^mov     [r12+8], rcx^^^jmp     loc_4706E1^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jnz     loc_470731^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jz      short loc_470895^^^add     r9, r15^^^jmp     loc_470748^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1178], 1^^^jmp     loc_47047C^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r8d, [rax+60h]^^^mov     rax, [rax+50h]^^^mov     [rbp+var_1150], r8d^^^mov     [rbp+var_1140], rax^^^mov     r8, rax^^^movzx   eax, byte ptr [rax]^^^cmp     al, 7Fh^^^jz      short loc_47089E^^^test    al, al^^^jz      short loc_47089E^^^cmp     [rbp+var_1150], 0^^^mov     eax, 0^^^cmovnz  rax, r8^^^mov     [rbp+var_1140], rax^^^jmp     loc_470614^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     [rbp+var_1140], 0^^^jmp     loc_470614^^^mov     rdi, [rbp+var_1100]^^^mov     eax, [rdi]^^^mov     rcx, rdi^^^sub     eax, 30h^^^mov     esi, [rcx+4]^^^lea     rdx, [rcx+4]^^^lea     edi, [rsi-30h]^^^cmp     edi, 9^^^ja      loc_470B83^^^imul    eax, 0Ah^^^mov     rcx, rdx^^^lea     eax, [rsi+rax-30h]^^^jmp     short loc_4708BD^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     eax, [rdi+4]^^^add     rdx, 4^^^cmp     eax, 2Ah^^^jz      short loc_470956^^^sub     eax, 30h^^^mov     [rbp+var_1130], 0^^^cmp     eax, 9^^^jbe     short loc_470940^^^mov     esi, [rdx]^^^mov     eax, offset loc_46E9BA^^^mov     ecx, esi^^^mov     [rbp+var_10F4], esi^^^sub     ecx, 20h^^^cmp     ecx, 5Ah^^^ja      loc_47047C^^^mov     eax, ecx^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     rax, ds:step2_jumps_13286[rax*8]^^^jmp     loc_47047C^^^imul    eax, 0Ah^^^lea     eax, [rcx+rax-30h]^^^add     rdx, 4^^^mov     ecx, [rdx]^^^lea     esi, [rcx-30h]^^^cmp     esi, 9^^^jbe     short loc_470939^^^mov     [rbp+var_1130], eax^^^jmp     short loc_47099F^^^mov     eax, [rdi+8]^^^mov     rdx, rdi^^^add     rdx, 8^^^mov     rcx, rdx^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_470A04^^^mov     ecx, [r12]^^^cmp     ecx, 30h^^^jnb     loc_470AAE^^^mov     eax, ecx^^^add     rax, [r12+10h]^^^add     ecx, 8^^^mov     [r12], ecx^^^mov     eax, [rax]^^^mov     r8d, 0FFFFFFFFh^^^test    eax, eax^^^cmovns  r8d, eax^^^mov     [rbp+var_1130], r8d^^^cmp     [rbp+var_1130], 3C8h^^^jbe     loc_470908^^^mov     r8d, [rbp+var_1148]^^^cmp     [rbp+var_1130], r8d^^^jle     loc_470908^^^cmp     [rbp+var_1130], 0^^^js      loc_470A96^^^movsxd  rax, [rbp+var_1130]^^^lea     r9, ds:80h[rax*4]^^^cmp     r9, 1000h^^^ja      short loc_470A1B^^^lea     rax, [r9+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+1AE0h+var_1AD1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     r9, rax^^^jmp     loc_470908^^^add     rcx, 4^^^mov     esi, [rcx]^^^lea     edi, [rsi-30h]^^^cmp     edi, 9^^^ja      short loc_470A77^^^imul    eax, 0Ah^^^lea     eax, [rsi+rax-30h]^^^jmp     short loc_470A04^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jnz     short loc_4709E8^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jz      short loc_470A8D^^^add     r9, r15^^^jmp     loc_470908^^^test    eax, eax^^^jz      loc_47096F^^^cmp     esi, 24h^^^jnz     loc_47096F^^^jmp     loc_46EA7F^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 22h^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rcx, [rax+8]^^^mov     [r12+8], rcx^^^jmp     loc_47098A^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_470B51^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1154], 1^^^mov     rax, ds:step3a_jumps_13287[rax*8]^^^jmp     loc_47047C^^^mov     rdi, [rbp+var_1100]^^^mov     rdx, [rbp+var_1100]^^^mov     edi, [rdi+4]^^^add     rdx, 4^^^mov     eax, edi^^^mov     [rbp+var_10F4], edi^^^sub     eax, 20h^^^cmp     eax, 5Ah^^^ja      short loc_470B65^^^movzx   eax, ds:jump_table_13236[rax]^^^mov     [rbp+var_1184], 1^^^mov     [rbp+var_1154], 0^^^mov     rax, ds:step4_jumps_13290[rax*8]^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1154], 1^^^jmp     loc_47047C^^^mov     eax, offset loc_46E9BA^^^mov     [rbp+var_1184], 1^^^mov     [rbp+var_1154], 0^^^jmp     loc_47047C^^^test    eax, eax^^^mov     [rbp+var_1100], rcx^^^mov     [rbp+var_1148], eax^^^js      short loc_470BF6^^^cmp     eax, 3C7h^^^jbe     short loc_470BC5^^^cdqe^^^lea     r9, ds:80h[rax*4]^^^cmp     r9, 1000h^^^ja      short loc_470C0E^^^lea     rax, [r9+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+1AE0h+var_1AD1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     r9, rax^^^mov     rdi, [rbp+var_1100]^^^mov     eax, [rdi+4]^^^cmp     eax, 24h^^^jz      loc_46EA7F^^^mov     ecx, eax^^^mov     [rbp+var_10F4], eax^^^mov     eax, offset loc_46E9BA^^^sub     ecx, 20h^^^cmp     ecx, 5Ah^^^ja      loc_47047C^^^jmp     loc_47076B^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 22h^^^jmp     loc_46E9CB^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jnz     loc_470BAE^^^mov     rdi, r9^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11C0], r9^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp+var_11C8]^^^mov     r9, [rbp+var_11C0]^^^jz      loc_471140^^^add     r9, r15^^^jmp     loc_470BC5^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 22h^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11B8], ecx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^mov     ecx, dword ptr [rbp+var_11B8]^^^jnz     loc_46F3BA^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_46F387^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^movsxd  rax, [rbp+var_10F8]^^^imul    rax, 48h^^^add     rax, [rbp+var_10E0]^^^jz      loc_471848^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbp+var_1118]^^^shl     rax, 4^^^mov     r8, [rdx+rax]^^^test    r8, r8^^^jz      loc_471797^^^cmp     dword ptr [rbp+var_1180], 53h^^^jnz     loc_470E26^^^cmp     dword ptr [rbp+var_1128], 0FFFFFFFFh^^^jz      loc_470F0A^^^movsxd  rsi, dword ptr [rbp+var_1128]^^^mov     rdi, r8^^^mov     [rbp+var_11D0], r8^^^call    wcsnlen^^^mov     r8, [rbp+var_11D0]^^^mov     rcx, rax^^^mov     dword ptr [rbp+var_1128], 0^^^mov     r9d, dword ptr [rbp+var_10F0]^^^mov     dword ptr [rbp+var_1120], ecx^^^sub     r9d, ecx^^^js      loc_470ED2^^^cmp     [rbp+var_1198], 0^^^jnz     short loc_470DCE^^^test    r9d, r9d^^^jz      short loc_470DCE^^^movsxd  rdx, r9d^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp+var_11B8], rcx^^^mov     [rbp+var_11D0], r8^^^mov     dword ptr [rbp+var_11C0], r9d^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     rcx, [rbp+var_11B8]^^^mov     r8, [rbp+var_11D0]^^^mov     r9d, dword ptr [rbp+var_11C0]^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_4711CA^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_47188E^^^mov     rax, [rbx+0D8h]^^^mov     rdx, rcx^^^mov     rsi, r8^^^mov     [rbp+var_11B8], rcx^^^mov     [rbp+var_11D0], r8^^^mov     rdi, rbx^^^mov     dword ptr [rbp+var_11C0], r9d^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp+var_11B8]^^^mov     r8, [rbp+var_11D0]^^^mov     r9d, dword ptr [rbp+var_11C0]^^^cmp     rcx, rax^^^jz      loc_4717C7^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^cmp     dword ptr [rbp+var_1120], 0^^^jnz     loc_470D17^^^cmp     dword ptr [rbp+var_1128], 0FFFFFFFFh^^^mov     [rbp+var_70], r8^^^jz      loc_470F8B^^^movsxd  rsi, dword ptr [rbp+var_1128]^^^mov     rdi, r8^^^call    sub_400330^^^mov     [rbp+var_1120], rax^^^mov     rdx, [rbp+var_1120]^^^shl     rdx, 2^^^cmp     rdx, 1000h^^^ja      loc_470F4E^^^add     rdx, 1Eh^^^mov     dword ptr [rbp+var_1128], 0^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^lea     r8, [rsp+1AE0h+var_1AD1]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, [rbp+var_1120]^^^lea     rcx, [rbp+var_40]^^^lea     rsi, [rbp+var_70]^^^mov     rdi, r8^^^mov     [rbp+var_11D0], r8^^^mov     [rbp+var_40], 0^^^call    mbsrtowcs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rcx, rax^^^mov     r8, [rbp+var_11D0]^^^jnz     loc_470D4E^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^test    r14d, r14d^^^js      loc_47188E^^^mov     rax, [rbx+0D8h]^^^mov     rdx, rcx^^^mov     [rbp+var_11B8], rcx^^^mov     rsi, r8^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp+var_11B8]^^^cmp     rcx, rax^^^jz      short loc_470F32^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, r8^^^mov     [rbp+var_11D0], r8^^^call    wcslen^^^mov     dword ptr [rbp+var_1128], 0^^^mov     rcx, rax^^^mov     r8, [rbp+var_11D0]^^^jmp     loc_470D4E^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_470FA9^^^add     r14d, dword ptr [rbp+var_1120]^^^jmp     loc_46F0FA^^^mov     rdi, rdx^^^mov     [rbp+var_11C8], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_11C8]^^^jnz     loc_470E72^^^mov     rdi, rdx^^^call    malloc^^^test    rax, rax^^^mov     r8, rax^^^jz      short loc_470FB2^^^mov     dword ptr [rbp+var_1128], 1^^^jmp     loc_470E90^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, r8^^^repne scasb^^^not     rcx^^^sub     rcx, 1^^^mov     [rbp+var_1120], rcx^^^jmp     loc_470E5A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7FDh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 65Eh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     rdi, r15^^^mov     [rbp+var_11B8], r11^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     r11, [rbp+var_11B8]^^^jnz     loc_46EC2E^^^mov     rdi, r15^^^mov     [rbp+var_11B8], r11^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_10D8], rax^^^mov     r11, [rbp+var_11B8]^^^jz      loc_4710C4^^^mov     [rbp+var_1118], rax^^^jmp     loc_46EC49^^^cdqe^^^cmp     qword ptr [rcx+rax*8-40h], 0^^^jz      loc_46EE28^^^mov     rcx, [rbp+var_10F0]^^^lea     rsi, [rbp+var_D0]^^^movsxd  rax, dword ptr [rcx+r15*4]^^^add     rax, 1Eh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+1AE0h+var_1AD1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rdx], rdi^^^movsxd  rcx, dword ptr [r8+r15*4]^^^mov     rax, cs:__printf_va_arg_table^^^mov     [rbp+var_11C8], rdx^^^mov     [rbp+var_11D0], r8^^^mov     [rbp+var_11B8], r11^^^call    qword ptr [rax+rcx*8-40h]^^^mov     rdx, [rbp+var_11C8]^^^mov     r8, [rbp+var_11D0]^^^mov     r11, [rbp+var_11B8]^^^jmp     loc_46EDDF^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, r15^^^mov     [rbp+var_11B8], rsi^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rsi, [rbp+var_11B8]^^^jnz     loc_46EFF9^^^mov     rdi, r15^^^mov     [rbp+var_11B8], rsi^^^call    malloc^^^mov     r8d, dword ptr [rbp+var_1128]^^^cmp     dword ptr [rbp+var_10F0], r8d^^^mov     r15, rax^^^mov     rsi, [rbp+var_11B8]^^^jge     short loc_47112F^^^movsxd  rax, dword ptr [rbp+var_1128]^^^lea     rax, ds:80h[rax*4]^^^lea     r9, [r15+rax]^^^jmp     loc_46F032^^^movsxd  rax, dword ptr [rbp+var_10F0]^^^lea     rax, ds:80h[rax*4]^^^jmp     short loc_471126^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7D8h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^cmp     dword ptr [rbp+var_1128], 5^^^jg      short loc_4717AD^^^cmp     dword ptr [rbp+var_1128], 0FFFFFFFFh^^^jnz     loc_471867^^^mov     dword ptr [rbp+var_1128], 0^^^mov     ecx, 6^^^mov     r8d, offset null_0^^^jmp     loc_470D4E^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_47183F^^^add     r14d, dword ptr [rbp+var_1120]^^^cmp     [rbp+var_1198], 0^^^jz      short loc_471825^^^test    r9d, r9d^^^jz      short loc_471825^^^movsxd  rdx, r9d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     r8, [rbp+var_11D0]^^^ja      loc_471152^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_4718A7^^^add     r14d, edx^^^cmp     dword ptr [rbp+var_1128], 0^^^jz      loc_46F0FA^^^mov     rdi, r8^^^call    free^^^jmp     loc_46F0FA^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_47187E^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_470D01^^^mov     dword ptr [rbp+var_1128], 0^^^xor     ecx, ecx^^^mov     r8d, offset unk_4B01F4^^^jmp     loc_470D4E^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_47185F^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 7D8h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_472992^^^add     r14d, ecx^^^add     [rbp+var_10F8], 1^^^cmp     dword ptr [r15], 0^^^jnz     loc_46E90D^^^xor     r15d, r15d^^^jmp     loc_46E9CB^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_46F533^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_47312A^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rdx, [rbx+0A0h]^^^mov     esi, [rax]^^^test    rdx, rdx^^^jz      loc_473111^^^mov     rax, [rdx+20h]^^^cmp     rax, [rdx+28h]^^^jnb     loc_473111^^^mov     [rax], esi^^^add     rax, 4^^^cmp     esi, 0FFFFFFFFh^^^mov     [rdx+20h], rax^^^jz      loc_473109^^^cmp     r14d, 7FFFFFFFh^^^jnz     loc_46F540^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     r14d, esi^^^jmp     loc_46E9CB^^^mov     rdi, rbx^^^call    __woverflow^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_473065^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_473032^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 67Ch^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^mov     rdi, r15^^^call    free^^^jmp     loc_46F413^^^
_nl_parse_alt_digit$$$push    r15^^^push    r14^^^mov     r14d, 0FFFFFFFFh^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 18h^^^mov     rax, [rdi]^^^mov     [rsp+48h+var_40], rdi^^^mov     [rsp+48h+var_48], rax^^^mov     rax, [rsi+350h]^^^mov     r8d, [rax]^^^test    r8d, r8d^^^jz      loc_44B909^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B87A^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rax, [rbx+28h]^^^test    rax, rax^^^jz      loc_44B91B^^^mov     edi, [rax+28h]^^^test    edi, edi^^^jz      loc_44B91B^^^mov     r15, [rax+18h]^^^xor     r13d, r13d^^^mov     r14d, 0FFFFFFFFh^^^test    r15, r15^^^jz      short loc_44B8E7^^^xor     ebx, ebx^^^nop     word ptr [rax+rax+00000000h]^^^mov     r12, [r15+rbx*8]^^^mov     rdi, r12^^^call    strlen^^^cmp     rax, r13^^^mov     rbp, rax^^^jbe     short loc_44B8DD^^^mov     rsi, [rsp+48h+var_48]^^^mov     rdx, rax^^^mov     rdi, r12^^^call    strncmp^^^test    eax, eax^^^cmovz   r14d, ebx^^^cmovz   r13, rbp^^^add     rbx, 1^^^cmp     rbx, 64h^^^jnz     short loc_44B8B0^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_44B8FB^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^cmp     r14d, 0FFFFFFFFh^^^jz      short loc_44B909^^^mov     rax, [rsp+48h+var_40]^^^add     [rax], r13^^^add     rsp, 18h^^^mov     eax, r14d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdi, rbx^^^xor     r13d, r13d^^^mov     r14d, 0FFFFFFFFh^^^call    _nl_init_alt_digit^^^mov     rax, [rbx+28h]^^^test    rax, rax^^^jnz     loc_44B892^^^jmp     short loc_44B8E7^^^
sub_40A683$$$mov     [rdi-4], edx^^^jmp     short sub_40A6AA^^^
sub_40A680$$$mov     [rdi-5], dl^^^
__strcasecmp_ssse3$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rdx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
_IO_iter_begin$$$mov     rax, cs:_IO_list_all^^^retn^^^
_dl_sort_fini.constprop.0$$$push    rbp^^^mov     rcx, rdi^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 48h^^^cmp     rsi, 1^^^mov     [rbp+var_38], rsi^^^mov     [rbp+var_48], rsp^^^jz      loc_48F14F^^^xor     r14d, r14d^^^mov     rax, rsi^^^test    rdx, rdx^^^setz    r14b^^^add     rax, 1Eh^^^mov     rdx, rsi^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^xor     esi, esi^^^mov     [rbp+var_68], rcx^^^sub     rsp, rax^^^mov     r15d, r14d^^^lea     r8, [rsp+70h+var_68+7]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r8^^^mov     [rbp+var_70], r8^^^call    sub_400390^^^mov     eax, dword ptr [rbp+var_38]^^^mov     rcx, [rbp+var_68]^^^mov     r8, [rbp+var_70]^^^sub     eax, 1^^^mov     [rbp+var_40], eax^^^jmp     short loc_48F0BB^^^add     r14d, 1^^^mov     r15d, r14d^^^cmp     [rbp+var_38], r15^^^jz      loc_48F14B^^^mov     rdx, [rbp+var_38]^^^lea     rdi, [r8+r15]^^^xor     esi, esi^^^mov     [rbp+var_68], rcx^^^mov     [rbp+var_70], r8^^^sub     rdx, r15^^^call    sub_400390^^^mov     rcx, [rbp+var_68]^^^mov     r8, [rbp+var_70]^^^lea     rdi, [rcx+r15*8]^^^movzx   r9d, byte ptr [r8+r15]^^^mov     rbx, [rdi]^^^add     r9d, 1^^^cmp     rbx, [rbx+28h]^^^mov     [r8+r15], r9b^^^jnz     short loc_48F088^^^cmp     dword ptr [rbx+3DCh], 0FFFFFFFFh^^^jz      short loc_48F088^^^mov     r11d, [rbp+var_40]^^^cmp     r14d, r11d^^^jnb     short loc_48F088^^^nop     word ptr [rax+rax+00000000h]^^^mov     r13d, r11d^^^lea     r12, [rcx+r13*8]^^^mov     rax, [r12]^^^mov     rdx, [rax+3B8h]^^^test    rdx, rdx^^^jnz     short loc_48F119^^^jmp     short loc_48F121^^^add     rdx, 8^^^cmp     rbx, rsi^^^jz      short loc_48F15E^^^mov     rsi, [rdx]^^^test    rsi, rsi^^^jnz     short loc_48F110^^^mov     rdx, [rax+3C0h]^^^test    rdx, rdx^^^jnz     loc_48F1DD^^^sub     r11d, 1^^^cmp     r14d, r11d^^^jb      short loc_48F0F0^^^add     r14d, 1^^^mov     r15d, r14d^^^cmp     [rbp+var_38], r15^^^jnz     loc_48F099^^^mov     rsp, [rbp+var_48]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^lea     eax, [r14+1]^^^sub     r11d, r14d^^^mov     [rbp+var_68], rcx^^^lea     rdx, ds:0[r11*8]^^^mov     [rbp+var_70], r8^^^mov     [rbp+var_50], r11^^^mov     r10d, eax^^^mov     [rbp+var_3C], eax^^^mov     [rbp+var_60], r9b^^^lea     rsi, [rcx+r10*8]^^^mov     [rbp+var_58], r10^^^call    sub_400340^^^mov     r8, [rbp+var_70]^^^mov     r10, [rbp+var_58]^^^mov     [r12], rbx^^^mov     rcx, [rbp+var_68]^^^mov     r11, [rbp+var_50]^^^cmp     byte ptr [r8+r10], 1^^^jle     short loc_48F1B7^^^mov     r14d, [rbp+var_3C]^^^mov     r15, r10^^^jmp     loc_48F099^^^lea     rsi, [r8+r10]^^^lea     rdi, [r8+r15]^^^mov     rdx, r11^^^call    sub_400340^^^movzx   r9d, [rbp+var_60]^^^mov     r8, [rbp+var_70]^^^mov     [r8+r13], r9b^^^mov     rcx, [rbp+var_68]^^^jmp     loc_48F0BB^^^mov     esi, [rdx]^^^test    esi, esi^^^jz      loc_48F131^^^sub     esi, 1^^^mov     r10d, esi^^^cmp     rbx, [rdx+r10*8+8]^^^jnz     short loc_48F1DF^^^mov     rdx, [rbx+3B8h]^^^test    rdx, rdx^^^jz      loc_48F15E^^^mov     rsi, [rdx]^^^test    rsi, rsi^^^jz      loc_48F15E^^^add     rdx, 8^^^cmp     rax, rsi^^^jnz     short loc_48F204^^^jmp     loc_48F131^^^
_L_unlock_80$$$lea     rdi, [rsi]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_425709^^^
memalign_check$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 8^^^cmp     rdi, 10h^^^jbe     loc_406910^^^cmp     rdi, 1Fh^^^jbe     loc_4068E0^^^mov     rax, 8000000000000000h^^^cmp     rdi, rax^^^ja      loc_406920^^^mov     rax, rdi^^^not     rax^^^sub     rax, 20h^^^cmp     rbx, rax^^^ja      loc_4068F5^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_406816^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_8950^^^jmp     short loc_406823^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_8950^^^call    top_check^^^xor     edx, edx^^^test    eax, eax^^^js      short loc_406842^^^lea     rdx, [rbx+1]^^^mov     rsi, rbp^^^mov     edi, offset main_arena^^^call    _int_memalign^^^mov     rdx, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40685A^^^lock dec cs:main_arena^^^jnz     _L_unlock_8968^^^jmp     short loc_406866^^^dec     cs:main_arena^^^jnz     _L_unlock_8968^^^test    rdx, rdx^^^jz      short loc_4068D6^^^mov     rcx, [rdx-8]^^^lea     rsi, [rdx-10h]^^^mov     rax, rcx^^^and     ecx, 2^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rcx, 1^^^sbb     rcx, rcx^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^add     rcx, 11h^^^sub     rax, rcx^^^cmp     rbx, rax^^^jb      short loc_4068AF^^^jmp     short loc_4068C5^^^mov     byte ptr [rdx+rax], 0FFh^^^sub     rax, 0FFh^^^cmp     rbx, rax^^^jnb     short loc_4068C5^^^mov     rcx, rax^^^sub     rcx, rbx^^^cmp     rcx, 0FFh^^^ja      short loc_4068A0^^^mov     ecx, eax^^^sub     cl, bl^^^mov     [rdx+rax], cl^^^mov     rax, rsi^^^shr     rsi, 3^^^shr     rax, 0Bh^^^xor     esi, eax^^^mov     [rdx+rbx], sil^^^add     rsp, 8^^^mov     rax, rdx^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFBFh^^^mov     ebp, 20h^^^cmp     rbx, rax^^^jbe     loc_4067F6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     edx, edx^^^mov     dword ptr fs:[rax], 0Ch^^^add     rsp, 8^^^mov     rax, rdx^^^pop     rbx^^^pop     rbp^^^retn^^^add     rsp, 8^^^mov     rdi, rbx^^^xor     esi, esi^^^pop     rbx^^^pop     rbp^^^jmp     malloc_check^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     edx, edx^^^mov     dword ptr fs:[rax], 16h^^^jmp     short loc_4068D6^^^
_IO_default_sync$$$xor     eax, eax^^^retn^^^
_IO_default_pbackfail$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     ebp, esi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_8], r15^^^mov     rbx, rdi^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_10], r14^^^sub     rsp, 48h^^^mov     rsi, [rdi+8]^^^mov     r15, [rdi+18h]^^^mov     r12d, [rdi]^^^cmp     rsi, r15^^^jbe     short loc_42D0D8^^^test    r12d, 100h^^^jz      short loc_42D118^^^lea     rax, [rsi-1]^^^mov     [rbx+8], rax^^^mov     [rsi-1], bpl^^^movzx   eax, bpl^^^mov     rbx, [rsp+48h+var_30]^^^mov     rbp, [rsp+48h+var_28]^^^mov     r12, [rsp+48h+var_20]^^^mov     r13, [rsp+48h+var_18]^^^mov     r14, [rsp+48h+var_10]^^^mov     r15, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^test    r12d, 100h^^^jnz     short loc_42D160^^^mov     rax, [rdi+48h]^^^test    rax, rax^^^jz      loc_42D1C8^^^mov     rcx, rsi^^^mov     rsi, [rdi+58h]^^^mov     rdx, [rbx+10h]^^^or      r12d, 100h^^^mov     [rbx+10h], rsi^^^mov     [rbx], r12d^^^mov     [rbx+18h], rax^^^mov     [rbx+48h], rcx^^^mov     [rbx+58h], rdx^^^jmp     short loc_42D0A0^^^movzx   eax, byte ptr [rsi-1]^^^cmp     eax, ebp^^^jz      loc_42D1B8^^^cmp     qword ptr [rdi+48h], 0^^^jz      loc_42D1C8^^^mov     rdi, rbx^^^call    save_for_backup^^^mov     edx, eax^^^mov     eax, 0FFFFFFFFh^^^test    edx, edx^^^jnz     loc_42D0B0^^^mov     rcx, [rbx+8]^^^mov     rsi, [rbx+58h]^^^mov     rax, [rbx+48h]^^^mov     r12d, [rbx]^^^jmp     short loc_42D0F5^^^mov     rdx, [rdi+10h]^^^sub     rdx, r15^^^lea     r13, [rdx+rdx]^^^mov     [rsp+48h+var_40], rdx^^^mov     rdi, r13^^^call    malloc^^^test    rax, rax^^^mov     r12, rax^^^mov     rdx, [rsp+48h+var_40]^^^jz      short loc_42D1F7^^^lea     r14, [rax+rdx]^^^mov     rsi, r15^^^mov     rdi, r14^^^call    memcpy^^^mov     rdi, [rbx+18h]^^^call    free^^^mov     [rbx+18h], r12^^^add     r12, r13^^^mov     rsi, r14^^^mov     [rbx+10h], r12^^^mov     [rbx+50h], r14^^^jmp     loc_42D0A0^^^sub     rsi, 1^^^mov     [rdi+8], rsi^^^jmp     loc_42D0AC^^^mov     edi, 80h^^^mov     [rsp+48h+var_40], rsi^^^call    malloc^^^test    rax, rax^^^mov     rsi, [rsp+48h+var_40]^^^jz      short loc_42D1F7^^^lea     rdx, [rax+80h]^^^mov     rcx, rsi^^^mov     [rbx+50h], rdx^^^mov     rsi, rdx^^^jmp     loc_42D0F5^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_42D0B0^^^
_nl_explode_name$$$push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^mov     qword ptr [rdx], 0^^^mov     qword ptr [rcx], 0^^^mov     qword ptr [r8], 0^^^mov     qword ptr [r9], 0^^^mov     [rsi], rdi^^^movzx   eax, byte ptr [rdi]^^^test    al, al^^^jz      loc_4165B8^^^cmp     al, 5Fh^^^jz      loc_4165B8^^^cmp     al, 40h^^^jz      loc_4165B8^^^cmp     al, 2Eh^^^jz      loc_4165B8^^^mov     rbx, rdi^^^nop^^^jmp     short loc_4163E1^^^test    sil, sil^^^jz      short loc_4163EE^^^cmp     sil, 40h^^^jz      loc_416460^^^cmp     sil, 2Eh^^^jz      loc_416470^^^add     rbx, 1^^^movzx   esi, byte ptr [rbx]^^^cmp     sil, 5Fh^^^jnz     short loc_4163C8^^^mov     r10d, esi^^^mov     r11, rbx^^^cmp     rdi, rbx^^^jz      loc_4165B8^^^cmp     sil, 40h^^^jz      loc_4164A0^^^xor     eax, eax^^^cmp     sil, 5Fh^^^mov     r12d, 2^^^jz      loc_4164B0^^^cmp     r10b, 2Eh^^^jz      loc_416500^^^cmp     r10b, 40h^^^jz      short loc_416483^^^mov     rdx, [rcx]^^^test    rdx, rdx^^^jz      short loc_41643C^^^mov     ecx, eax^^^and     ecx, 0FFFFFFFBh^^^cmp     byte ptr [rdx], 0^^^cmovz   eax, ecx^^^mov     rdx, [r8]^^^test    rdx, rdx^^^jz      short loc_41644F^^^mov     ecx, eax^^^and     ecx, 0FFFFFFFDh^^^cmp     byte ptr [rdx], 0^^^cmovz   eax, ecx^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^mov     r10d, 40h^^^mov     r11, rbx^^^jmp     short loc_4163F4^^^mov     r10d, 2Eh^^^mov     r11, rbx^^^jmp     loc_4163F4^^^mov     eax, 4^^^lea     rsi, [rbx+1]^^^mov     byte ptr [rbx], 0^^^mov     [rdx], rsi^^^mov     edx, eax^^^or      edx, 8^^^cmp     byte ptr [rbx+1], 0^^^cmovnz  eax, edx^^^jmp     short loc_416429^^^xor     eax, eax^^^jmp     loc_416423^^^mov     byte ptr [rbx], 0^^^add     rbx, 1^^^mov     [rcx], rbx^^^movzx   r10d, byte ptr [r11+1]^^^cmp     r10b, 2Eh^^^jnz     short loc_4164E4^^^jmp     short loc_4164E9^^^cmp     r10b, 40h^^^jz      short loc_41647E^^^add     rbx, 1^^^movzx   r10d, byte ptr [rbx]^^^cmp     r10b, 2Eh^^^jz      short loc_4164E9^^^test    r10b, r10b^^^jnz     short loc_4164D0^^^mov     r12d, 6^^^mov     eax, 4^^^jmp     loc_416419^^^lea     rdi, [rbx+1]^^^mov     byte ptr [rbx], 0^^^mov     [r8], rdi^^^movzx   r10d, byte ptr [rbx+1]^^^test    r10b, r10b^^^jz      loc_4165E9^^^cmp     r10b, 40h^^^mov     rbp, rdi^^^jnz     short loc_416538^^^jmp     loc_4165E9^^^test    r10b, r10b^^^jz      short loc_416547^^^mov     rbp, rbx^^^movzx   r10d, byte ptr [rbp+1]^^^lea     rbx, [rbp+1]^^^cmp     r10b, 40h^^^jnz     short loc_416530^^^cmp     rdi, rbx^^^jz      loc_416617^^^mov     rsi, rbx^^^mov     [rsp+48h+var_48], r8^^^mov     [rsp+48h+var_30], r9^^^sub     rsi, rdi^^^mov     [rsp+48h+var_38], rdx^^^mov     [rsp+48h+var_40], rcx^^^call    _nl_normalize_codeset^^^mov     r9, [rsp+48h+var_30]^^^test    rax, rax^^^mov     r13, rax^^^mov     r8, [rsp+48h+var_48]^^^mov     [r9], rax^^^jz      loc_41661F^^^mov     rdi, [r8]^^^mov     rsi, rax^^^call    sub_4003A0^^^test    eax, eax^^^mov     rdx, [rsp+48h+var_38]^^^mov     rcx, [rsp+48h+var_40]^^^mov     r8, [rsp+48h+var_48]^^^jz      short loc_4165F4^^^mov     eax, r12d^^^movzx   r10d, byte ptr [rbp+1]^^^or      eax, 1^^^jmp     loc_416423^^^xor     esi, esi^^^mov     [rsp+48h+var_38], rdx^^^mov     [rsp+48h+var_40], rcx^^^mov     [rsp+48h+var_48], r8^^^call    sub_400350^^^mov     rdx, [rsp+48h+var_38]^^^mov     rbx, rax^^^movzx   r10d, byte ptr [rax]^^^mov     rcx, [rsp+48h+var_40]^^^xor     eax, eax^^^mov     r8, [rsp+48h+var_48]^^^jmp     loc_416423^^^mov     eax, r12d^^^mov     rbx, rdi^^^jmp     loc_416423^^^mov     rdi, r13^^^call    free^^^movzx   r10d, byte ptr [rbp+1]^^^mov     eax, r12d^^^mov     rdx, [rsp+48h+var_38]^^^mov     rcx, [rsp+48h+var_40]^^^mov     r8, [rsp+48h+var_48]^^^jmp     loc_416423^^^mov     eax, r12d^^^jmp     loc_416423^^^mov     eax, 0FFFFFFFFh^^^jmp     loc_41644F^^^
_setjmp$$$xor     esi, esi^^^jmp     __sigsetjmp^^^
_L_unlock_101$$$lea     rdi, [rsi]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_425AB8^^^
_L_unlock_7$$$lea     rdi, syslog_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     locret_40F474^^^
_L_unlock_3403$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42CE0A^^^
get_phys_pages$$$mov     edi, offset aMemtotalLdKb^^^jmp     phys_pages_info^^^
_L_unlock_104$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_410D64^^^
malloc_hook_ini$$$sub     rsp, 18h^^^mov     r9d, cs:__libc_malloc_initialized^^^mov     cs:__malloc_hook, 0^^^test    r9d, r9d^^^jns     short loc_4079FA^^^mov     [rsp+18h+var_10], rdi^^^call    ptmalloc_init_part_8^^^mov     rdi, [rsp+18h+var_10]^^^add     rsp, 18h^^^jmp     malloc^^^
read$$$cmp     cs:__libc_multiple_threads, 0^^^jnz     short sub_40F09D^^^
btowc$$$mov     [rsp+var_8], r12^^^mov     r12d, edi^^^mov     [rsp+var_18], rbx^^^lea     edx, [r12+80h]^^^mov     [rsp+var_10], rbp^^^sub     rsp, 88h^^^mov     eax, edi^^^cmp     edx, 17Fh^^^jbe     short loc_476890^^^mov     eax, 0FFFFFFFFh^^^mov     rbx, [rsp+88h+var_18]^^^mov     rbp, [rsp+88h+var_10]^^^mov     r12, [rsp+88h+var_8]^^^add     rsp, 88h^^^retn^^^cmp     edi, 0FFFFFFFFh^^^jz      short loc_47686B^^^test    edi, 0FFFFFF80h^^^jz      short loc_476870^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rbp, [rax]^^^mov     rbx, [rbp+28h]^^^test    rbx, rbx^^^jz      loc_4769BB^^^cmp     qword ptr [rbx+8], 1^^^mov     rax, [rbx]^^^mov     rbp, [rax+30h]^^^jnz     short loc_4768F4^^^test    rbp, rbp^^^jz      short loc_4768F4^^^cmp     qword ptr [rax], 0^^^jz      short loc_4768DE^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^movzx   esi, r12b^^^mov     rdi, [rbx]^^^call    rbp^^^jmp     loc_476870^^^lea     rax, [rsp+88h+var_19]^^^mov     [rsp+88h+var_50], 0^^^mov     [rsp+88h+var_19], r12b^^^mov     [rsp+88h+var_64], 0^^^mov     [rsp+88h+var_60], 1^^^mov     [rsp+88h+var_38], rax^^^lea     rax, [rsp+88h+var_28]^^^mov     [rsp+88h+var_68], 1^^^mov     [rsp+88h+var_48], 0^^^mov     [rsp+88h+var_78], rax^^^lea     rax, [rsp+88h+var_24]^^^mov     [rsp+88h+var_70], rax^^^lea     rax, [rsp+88h+var_50]^^^mov     [rsp+88h+var_58], rax^^^mov     rax, [rbx]^^^cmp     qword ptr [rax], 0^^^mov     rbp, [rax+28h]^^^jz      short loc_476965^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^mov     rcx, [rsp+88h+var_38]^^^mov     [rsp+88h+var_80], 1^^^xor     r8d, r8d^^^mov     [rsp+88h+var_88], 0^^^lea     r9, [rsp+88h+var_30]^^^lea     rdx, [rsp+88h+var_38]^^^lea     rsi, [rsp+88h+var_78]^^^mov     rdi, [rbx]^^^add     rcx, 1^^^call    rbp^^^cmp     eax, 5^^^jz      short loc_4769B2^^^test    eax, eax^^^jz      short loc_4769B2^^^cmp     eax, 4^^^jz      short loc_4769B2^^^mov     [rsp+88h+var_28], 0FFFFFFFFh^^^mov     eax, [rsp+88h+var_28]^^^jmp     loc_476870^^^cmp     rbp, offset _nl_C_LC_CTYPE^^^mov     ebx, offset __wcsmbs_gconv_fcts_c^^^jz      loc_4768B8^^^mov     rdi, rbp^^^call    __wcsmbs_load_conv^^^mov     rbx, [rbp+28h]^^^jmp     loc_4768B8^^^
_IO_sgetn$$$mov     rax, [rdi+0D8h]^^^mov     rax, [rax+40h]^^^jmp     rax^^^
tsearch$$$push    r15             ^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 28h^^^test    rsi, rsi^^^mov     [rsp+58h+var_48], rdi^^^mov     [rsp+58h+var_40], rdx^^^jz      loc_44E050^^^mov     rax, [rsi]^^^xor     ebx, ebx^^^test    rax, rax^^^jz      short loc_44DF62^^^and     byte ptr [rax+18h], 0FEh^^^mov     rbx, [rsi]^^^mov     r13, rsi^^^xor     r8d, r8d^^^xor     r14d, r14d^^^xor     edx, edx^^^xor     r15d, r15d^^^jmp     short loc_44DF87^^^mov     r8d, r14d^^^mov     rdx, r15^^^mov     r14d, r12d^^^mov     r15, r13^^^mov     r13, rbp^^^test    rbx, rbx^^^jz      loc_44E048^^^mov     rsi, [rbx]^^^mov     rdi, [rsp+58h+var_48]^^^mov     [rsp+58h+var_50], rdx^^^mov     [rsp+58h+var_58], r8d^^^call    [rsp+58h+var_40]^^^test    eax, eax^^^mov     r12d, eax^^^mov     rdx, [rsp+58h+var_50]^^^mov     r8d, [rsp+58h+var_58]^^^jz      short loc_44E033^^^mov     rdi, [r13+0]^^^xor     r9d, r9d^^^lea     rbp, [rbx+8]^^^mov     ecx, r14d^^^mov     rsi, r15^^^add     rbx, 10h^^^call    maybe_split_for_insert_isra_0^^^test    r12d, r12d^^^cmovns  rbp, rbx^^^mov     rbx, [rbp+0]^^^test    rbx, rbx^^^jnz     short loc_44DF78^^^mov     edi, 20h^^^xor     ebx, ebx^^^call    malloc^^^test    rax, rax^^^jz      short loc_44E033^^^mov     rdx, [rsp+58h+var_48]^^^mov     [rbp+0], rax^^^mov     rbx, rax^^^or      byte ptr [rax+18h], 1^^^cmp     rbp, r13^^^mov     qword ptr [rax+10h], 0^^^mov     qword ptr [rax+8], 0^^^mov     [rax], rdx^^^jz      short loc_44E033^^^mov     rdi, [rbp+0]^^^mov     r9d, 1^^^mov     r8d, r14d^^^mov     ecx, r12d^^^mov     rdx, r15^^^mov     rsi, r13^^^call    maybe_split_for_insert_isra_0^^^add     rsp, 28h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     r12d, r14d^^^mov     rbp, r13^^^jmp     short loc_44DFDF^^^xor     ebx, ebx^^^jmp     short loc_44E033^^^
_L_lock_13170$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_408A71^^^
_L_unlock_2135$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_447C45^^^
__mpn_extract_double$$$movsd   [rsp+var_8], xmm0^^^mov     rsi, [rsp+var_8]^^^mov     rax, rsi^^^shr     rax, 3Fh^^^mov     [rcx], eax^^^mov     rax, rsi^^^shr     rax, 34h^^^and     eax, 7FFh^^^sub     eax, 3FFh^^^mov     [rdx], eax^^^mov     rax, 0FFFFFFFFFFFFFh^^^and     rax, rsi^^^shr     rsi, 30h^^^test    esi, 7FF0h^^^mov     [rdi], rax^^^jnz     short loc_464580^^^test    rax, rax^^^jz      short loc_4645A0^^^bsr     rsi, rax^^^xor     esi, 3Fh^^^lea     ecx, [rsi-0Bh]^^^shl     rax, cl^^^mov     [rdi], rax^^^mov     eax, 0FFFFFC0Dh^^^sub     eax, esi^^^mov     [rdx], eax^^^mov     eax, 1^^^retn^^^mov     rdx, 10000000000000h^^^or      rdx, rax^^^mov     eax, 1^^^mov     [rdi], rdx^^^retn^^^mov     dword ptr [rdx], 0^^^mov     eax, 1^^^retn^^^
__gconv_compare_alias_cache$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 38h^^^cmp     cs:gconv_cache, 0^^^mov     rbp, rsi^^^mov     r12, rdx^^^jz      short loc_460448^^^mov     rsi, rsp^^^call    find_module_idx^^^test    eax, eax^^^jz      short loc_460420^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    sub_4003A0^^^mov     [r12], eax^^^xor     eax, eax^^^mov     rbx, [rsp+38h+var_18]^^^mov     rbp, [rsp+38h+var_10]^^^mov     r12, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^lea     rsi, [rsp+38h+var_28]^^^mov     rdi, rbp^^^call    find_module_idx^^^test    eax, eax^^^jnz     short loc_4603F2^^^mov     rax, [rsp+38h+var_38]^^^sub     eax, [rsp+38h+var_28]^^^mov     [r12], eax^^^xor     eax, eax^^^jmp     short loc_460403^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_460403^^^
__lseek_nocancel$$$mov     eax, 8^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
str_to_mpn.isra.0_0$$$push    r15^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 18h^^^test    esi, esi^^^mov     qword ptr [rcx], 0^^^mov     r14, [rsp+48h+arg_0]^^^jle     loc_47DC9D^^^xor     r13d, r13d^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movzx   eax, byte ptr [rbx]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_47DA37^^^test    r14, r14^^^jz      short loc_47DA31^^^cmp     al, [r14]^^^jz      loc_47DAE0^^^add     rbx, r9^^^movzx   eax, byte ptr [rbx]^^^lea     rdx, [r13+r13*4+0]^^^movsx   rax, al^^^add     rbx, 1^^^sub     ebp, 1^^^lea     r13, [rax+rdx*2-30h]^^^lea     eax, [rcx+1]^^^jz      short loc_47DA88^^^cmp     eax, 13h^^^jz      short loc_47DA60^^^mov     ecx, eax^^^jmp     short loc_47DA18^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jnz     loc_47DB28^^^xor     al, al^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^xor     r13d, r13d^^^mov     ecx, eax^^^jmp     short loc_47DA18^^^mov     rdx, [r8]^^^test    rdx, rdx^^^jle     short loc_47DAA3^^^mov     esi, 12h^^^sub     esi, ecx^^^movsxd  rsi, esi^^^cmp     rdx, rsi^^^jle     loc_47DBC0^^^mov     rdx, [r12]^^^cdqe^^^mov     rcx, ds:_tens_in_limb[rax*8]^^^test    rdx, rdx^^^jnz     loc_47DBEA^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^add     rsp, 18h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jz      loc_47DC61^^^cmp     [rbx+1], al^^^jnz     loc_47DA31^^^mov     eax, 2^^^jmp     short loc_47DB0E^^^add     rax, 1^^^cmp     [rbx+rax-1], dl^^^jnz     loc_47DA31^^^movzx   edx, byte ptr [r14+rax]^^^test    dl, dl^^^jnz     short loc_47DB00^^^add     rbx, rax^^^movzx   eax, byte ptr [rbx]^^^jmp     loc_47DA37^^^mov     rcx, 8AC7230489E80000h^^^mov     rsi, r15^^^mov     rdi, r15^^^mov     [rsp+48h+var_40], r8^^^mov     [rsp+48h+var_48], r9^^^call    __mpn_mul_1^^^mov     rcx, rax^^^mov     rax, [r15]^^^xor     esi, esi^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^mov     r8, [rsp+48h+var_40]^^^mov     r9, [rsp+48h+var_48]^^^add     r13, rax^^^cmp     rax, r13^^^mov     [r15], r13^^^jbe     short loc_47DB8A^^^nop     word ptr [rax+rax+00h]^^^sub     rdx, 1^^^jz      loc_47DC50^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_47DB70^^^xor     esi, esi^^^xor     r13d, r13d^^^xor     eax, eax^^^add     rcx, rsi^^^jz      loc_47DA56^^^mov     rdx, [r12]^^^cmp     rdx, 13h^^^jg      loc_47DC6B^^^mov     [r15+rdx*8], rcx^^^mov     ecx, eax^^^add     qword ptr [r12], 1^^^jmp     loc_47DA18^^^cdqe^^^mov     qword ptr [r8], 0^^^imul    r13, ds:_tens_in_limb[rdx*8]^^^add     rdx, rax^^^mov     rcx, ds:_tens_in_limb[rdx*8]^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jz      loc_47DABA^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_mul_1^^^mov     rsi, [r15]^^^mov     rcx, rax^^^xor     eax, eax^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^add     r13, rsi^^^cmp     rsi, r13^^^mov     [r15], r13^^^ja      short loc_47DC38^^^add     rcx, rax^^^jz      loc_47DAC5^^^mov     rdx, [r12]^^^cmp     rdx, 13h^^^jg      short loc_47DC84^^^mov     [r15+rdx*8], rcx^^^add     rdx, 1^^^mov     [r12], rdx^^^jmp     loc_47DAC5^^^sub     rdx, 1^^^jz      short loc_47DC5A^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_47DC38^^^xor     eax, eax^^^jmp     short loc_47DC10^^^mov     esi, 1^^^jmp     loc_47DB8A^^^mov     eax, 1^^^jmp     short loc_47DC10^^^mov     eax, 1^^^jmp     loc_47DB17^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 137h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNsize102425364^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 16Fh^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aNsize102425364^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 126h^^^mov     esi, offset aStrtod_l_c^^^mov     edi, offset aDigcnt0^^^call    __assert_fail^^^
str_to_mpn.isra.0_1$$$push    r15^^^mov     r15, rdx^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 18h^^^test    esi, esi^^^mov     qword ptr [rcx], 0^^^mov     r14, [rsp+48h+arg_0]^^^jle     loc_4804A5^^^xor     r13d, r13d^^^xor     ecx, ecx^^^nop     word ptr [rax+rax+00h]^^^movzx   eax, byte ptr [rbx]^^^lea     edx, [rax-30h]^^^cmp     dl, 9^^^jbe     short loc_480237^^^test    r14, r14^^^jz      short loc_480231^^^cmp     al, [r14]^^^jz      loc_4802E0^^^add     rbx, r9^^^movzx   eax, byte ptr [rbx]^^^lea     rdx, [r13+r13*4+0]^^^movsx   rax, al^^^add     rbx, 1^^^sub     ebp, 1^^^lea     r13, [rax+rdx*2-30h]^^^lea     eax, [rcx+1]^^^jz      short loc_480288^^^cmp     eax, 13h^^^jz      short loc_480260^^^mov     ecx, eax^^^jmp     short loc_480218^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jnz     loc_480328^^^xor     al, al^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^xor     r13d, r13d^^^mov     ecx, eax^^^jmp     short loc_480218^^^mov     rdx, [r8]^^^test    rdx, rdx^^^jle     short loc_4802A3^^^mov     esi, 12h^^^sub     esi, ecx^^^movsxd  rsi, esi^^^cmp     rdx, rsi^^^jle     loc_4803C0^^^mov     rdx, [r12]^^^cdqe^^^mov     rcx, ds:_tens_in_limb[rax*8]^^^test    rdx, rdx^^^jnz     loc_4803EA^^^mov     [r15], r13^^^mov     qword ptr [r12], 1^^^add     rsp, 18h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^movzx   eax, byte ptr [r14+1]^^^test    al, al^^^jz      loc_480469^^^cmp     [rbx+1], al^^^jnz     loc_480231^^^mov     eax, 2^^^jmp     short loc_48030E^^^add     rax, 1^^^cmp     [rbx+rax-1], dl^^^jnz     loc_480231^^^movzx   edx, byte ptr [r14+rax]^^^test    dl, dl^^^jnz     short loc_480300^^^add     rbx, rax^^^movzx   eax, byte ptr [rbx]^^^jmp     loc_480237^^^mov     rcx, 8AC7230489E80000h^^^mov     rsi, r15^^^mov     rdi, r15^^^mov     [rsp+48h+var_40], r8^^^mov     [rsp+48h+var_48], r9^^^call    __mpn_mul_1^^^mov     rcx, rax^^^mov     rax, [r15]^^^xor     esi, esi^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^mov     r8, [rsp+48h+var_40]^^^mov     r9, [rsp+48h+var_48]^^^add     r13, rax^^^cmp     rax, r13^^^mov     [r15], r13^^^jbe     short loc_48038A^^^nop     word ptr [rax+rax+00h]^^^sub     rdx, 1^^^jz      loc_480458^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_480370^^^xor     esi, esi^^^xor     r13d, r13d^^^xor     eax, eax^^^add     rcx, rsi^^^jz      loc_480256^^^mov     rdx, [r12]^^^cmp     rdx, 103h^^^jg      loc_480473^^^mov     [r15+rdx*8], rcx^^^mov     ecx, eax^^^add     qword ptr [r12], 1^^^jmp     loc_480218^^^cdqe^^^mov     qword ptr [r8], 0^^^imul    r13, ds:_tens_in_limb[rdx*8]^^^add     rdx, rax^^^mov     rcx, ds:_tens_in_limb[rdx*8]^^^mov     rdx, [r12]^^^test    rdx, rdx^^^jz      loc_4802BA^^^mov     rsi, r15^^^mov     rdi, r15^^^call    __mpn_mul_1^^^mov     rsi, [r15]^^^mov     rcx, rax^^^xor     eax, eax^^^mov     rdx, [r12]^^^lea     rdi, [r15+8]^^^add     r13, rsi^^^cmp     rsi, r13^^^mov     [r15], r13^^^ja      short loc_480440^^^add     rcx, rax^^^jz      loc_4802C5^^^mov     rdx, [r12]^^^cmp     rdx, 103h^^^jg      short loc_48048C^^^mov     [r15+rdx*8], rcx^^^add     rdx, 1^^^mov     [r12], rdx^^^jmp     loc_4802C5^^^sub     rdx, 1^^^jz      short loc_480462^^^mov     rax, [rdi]^^^add     rax, 1^^^test    rax, rax^^^stosq^^^jz      short loc_480440^^^xor     eax, eax^^^jmp     short loc_480410^^^mov     esi, 1^^^jmp     loc_48038A^^^mov     eax, 1^^^jmp     short loc_480410^^^mov     eax, 1^^^jmp     loc_480317^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 137h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aNsize163842646^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 16Fh^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aNsize163842646^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12480^^^mov     edx, 126h^^^mov     esi, offset unk_4B29C0^^^mov     edi, offset aDigcnt0^^^call    __assert_fail^^^
_IO_file_underflow_maybe_mmap$$$push    rbx^^^mov     rbx, rdi^^^call    decide_maybe_mmap^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+20h]^^^jmp     rax^^^
_L_unlock_3968$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_458A3A^^^
__init_misc$$$mov     [rsp+var_8], rbp^^^mov     [rsp+var_10], rbx^^^sub     rsp, 18h^^^test    rsi, rsi^^^mov     rbp, rsi^^^jz      short loc_410828^^^mov     rbx, [rsi]^^^test    rbx, rbx^^^jz      short loc_410828^^^mov     rdi, rbx^^^mov     esi, 2Fh^^^call    strrchr^^^lea     rdx, [rax+1]^^^test    rax, rax^^^cmovnz  rbx, rdx^^^mov     cs:program_invocation_short_name, rbx^^^mov     rax, [rbp+0]^^^mov     cs:program_invocation_name, rax^^^mov     rbx, [rsp+18h+var_10]^^^mov     rbp, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^
do_release_shlib$$$cmp     esi, 3^^^push    rbx^^^mov     rbx, [rdi]^^^jnz     short loc_460960^^^cmp     rbx, cs:release_handle^^^mov     eax, [rbx+8]^^^jz      short loc_460970^^^lea     edx, [rax+2]^^^cmp     edx, 2^^^ja      short loc_46095E^^^sub     eax, 1^^^cmp     eax, 0FFFFFFFDh^^^mov     [rbx+8], eax^^^jnz     short loc_46095E^^^mov     rdi, [rbx+10h]^^^test    rdi, rdi^^^jz      short loc_46095E^^^call    __libc_dlclose^^^mov     qword ptr [rbx+10h], 0^^^pop     rbx^^^retn^^^test    esi, esi^^^jz      short loc_460929^^^pop     rbx^^^retn^^^test    eax, eax^^^jle     short loc_46097C^^^sub     eax, 1^^^mov     [rbx+8], eax^^^pop     rbx^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___11113^^^mov     edx, 0AFh^^^mov     esi, offset aGconv_dl_c^^^mov     edi, offset aObjCounter0^^^call    __assert_fail^^^
__mpn_rshift$$$mov     eax, edx^^^and     eax, 3^^^jnz     short loc_4632E9^^^mov     r10, [rsi]^^^mov     r11, [rsi+8]^^^xor     eax, eax^^^shrd    rax, r10, cl^^^mov     r8, [rsi+10h]^^^lea     rsi, [rsi+8]^^^lea     rdi, [rdi-18h]^^^sub     rdx, 4^^^jmp     loc_463392^^^cmp     eax, 2^^^jnb     short loc_463316^^^mov     r9, [rsi]^^^xor     eax, eax^^^shrd    rax, r9, cl^^^sub     rdx, 2^^^jb      short loc_46330F^^^mov     r10, [rsi+8]^^^mov     r11, [rsi+10h]^^^lea     rsi, [rsi+10h]^^^lea     rdi, [rdi-10h]^^^jmp     short loc_463386^^^shr     r9, cl^^^mov     [rdi], r9^^^retn^^^jnz     short loc_463350^^^mov     r8, [rsi]^^^mov     r9, [rsi+8]^^^xor     eax, eax^^^shrd    rax, r8, cl^^^sub     rdx, 3^^^jb      short loc_463339^^^mov     r10, [rsi+10h]^^^lea     rsi, [rsi+18h]^^^lea     rdi, [rdi-8]^^^jmp     short loc_46337B^^^shrd    r8, r9, cl^^^mov     [rdi], r8^^^shr     r9, cl^^^mov     [rdi+8], r9^^^retn^^^mov     r11, [rsi]^^^mov     r8, [rsi+8]^^^xor     eax, eax^^^shrd    rax, r11, cl^^^mov     r9, [rsi+10h]^^^lea     rsi, [rsi+20h]^^^sub     rdx, 4^^^jb      short loc_4633AC^^^nop     dword ptr [rax+rax+00h]^^^shrd    r11, r8, cl^^^mov     r10, [rsi-8]^^^mov     [rdi], r11^^^shrd    r8, r9, cl^^^mov     r11, [rsi]^^^mov     [rdi+8], r8^^^shrd    r9, r10, cl^^^mov     r8, [rsi+8]^^^mov     [rdi+10h], r9^^^shrd    r10, r11, cl^^^mov     r9, [rsi+10h]^^^mov     [rdi+18h], r10^^^add     rsi, 20h^^^lea     rdi, [rdi+20h]^^^sub     rdx, 4^^^jnb     short loc_463370^^^shrd    r11, r8, cl^^^mov     [rdi], r11^^^shrd    r8, r9, cl^^^mov     [rdi+8], r8^^^shr     r9, cl^^^mov     [rdi+10h], r9^^^retn^^^
arena_get2.isra.5.part.6$$$sub     rsp, 18h^^^cmp     cs:narenas_limit_12119, 0^^^jnz     short loc_403995^^^mov     rax, cs:qword_6C29A0^^^test    rax, rax^^^jz      loc_403A50^^^mov     cs:narenas_limit_12119, rax^^^mov     rdx, cs:narenas^^^cmp     rdx, cs:qword_6C2998^^^jbe     loc_403AAE^^^cmp     rdx, cs:narenas_limit_12119^^^jb      loc_403AAE^^^mov     rdx, cs:next_to_use_12103^^^test    rdx, rdx^^^jz      loc_403A80^^^mov     ecx, 1^^^xor     edi, edi^^^jmp     short loc_4039E0^^^mov     rdx, [rdx+868h]^^^cmp     rdx, cs:next_to_use_12103^^^jz      short loc_403A20^^^mov     eax, edi^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4039F1^^^lock cmpxchg [rdx], ecx^^^jmp     short loc_4039F4^^^cmpxchg [rdx], ecx^^^test    eax, eax^^^jnz     short loc_4039D0^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     fs:[rax], rdx^^^mov     rax, [rdx+868h]^^^mov     cs:next_to_use_12103, rax^^^mov     rax, rdx^^^add     rsp, 18h^^^retn^^^cmp     rsi, rdx^^^jz      short loc_403A95^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403A41^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_2463^^^jmp     short loc_403A4A^^^cmpxchg [rdx], esi^^^jnz     _L_lock_2463^^^jmp     short loc_4039F8^^^mov     [rsp+18h+var_18], rsi^^^mov     [rsp+18h+var_10], rdi^^^call    get_nprocs^^^test    eax, eax^^^mov     rsi, [rsp+18h+var_18]^^^mov     rdi, [rsp+18h+var_10]^^^jle     short loc_403A9E^^^shl     eax, 3^^^cdqe^^^mov     cs:narenas_limit_12119, rax^^^jmp     loc_403995^^^mov     cs:next_to_use_12103, offset main_arena^^^mov     edx, offset main_arena^^^jmp     loc_4039C6^^^mov     rdx, [rdx+868h]^^^jmp     short loc_403A25^^^mov     cs:narenas_limit_12119, 10h^^^jmp     loc_403995^^^lea     rcx, [rdx+1]^^^mov     rax, rdx^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_403AC1^^^lock^^^cmpxchg cs:narenas, rcx^^^cmp     rdx, rax^^^jnz     loc_403995^^^mov     rsi, cs:qword_6C2988^^^add     rdi, 8B8h^^^call    new_heap^^^test    rax, rax^^^mov     r8, rax^^^jz      loc_403C28^^^lea     rdx, [r8+20h]^^^mov     rax, 0FFFFFFFFFFFFFFFEh^^^mov     [r8], rdx^^^lea     rcx, [rdx+rax*8+68h]^^^add     rax, 2^^^cmp     rax, 0FCh^^^mov     [rcx+18h], rcx^^^mov     [rcx+10h], rcx^^^jnz     short loc_403AFF^^^cmp     rdx, offset main_arena^^^jz      loc_403C5F^^^mov     eax, [r8+24h]^^^or      eax, 2^^^mov     rcx, [r8+10h]^^^lea     rsi, [r8+8B8h]^^^or      eax, 1^^^add     cs:arena_mem, rcx^^^mov     [r8+24h], eax^^^lea     rax, [r8+8A8h]^^^and     esi, 0Fh^^^mov     [r8+8A0h], rcx^^^mov     [r8+898h], rcx^^^jz      short loc_403B66^^^sub     rax, rsi^^^add     rax, 10h^^^add     rcx, r8^^^mov     [r8+78h], rax^^^mov     r10d, 1^^^sub     rcx, rax^^^xor     r9d, r9d^^^mov     esi, r10d^^^or      rcx, 1^^^mov     [rax+8], rcx^^^mov     rax, 0FFFFFFFFFFFFFFD0h^^^mov     dword ptr [r8+20h], 0^^^mov     fs:[rax], rdx^^^mov     eax, r9d^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403BAF^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_2658^^^jmp     short loc_403BB8^^^cmpxchg [rdx], esi^^^jnz     _L_lock_2658^^^mov     esi, r10d^^^mov     eax, r9d^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403BD7^^^lock cmpxchg cs:list_lock, esi^^^jnz     _L_lock_2663^^^jmp     short loc_403BE4^^^cmpxchg cs:list_lock, esi^^^jnz     _L_lock_2663^^^mov     rax, cs:off_6C2948^^^mov     [r8+888h], rax^^^mov     cs:off_6C2948, rdx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_403C11^^^lock dec cs:list_lock^^^jnz     _L_unlock_2670^^^jmp     short loc_403C1D^^^dec     cs:list_lock^^^jnz     _L_unlock_2670^^^test    rdx, rdx^^^jnz     loc_403A11^^^jmp     short loc_403C45^^^mov     rsi, cs:qword_6C2988^^^mov     edi, 8B8h^^^call    new_heap^^^test    rax, rax^^^mov     r8, rax^^^jnz     loc_403AF1^^^cmp     dword ptr fs:18h, 0^^^jz      short loc_403C51^^^lock^^^dec     cs:narenas^^^xor     edx, edx^^^jmp     loc_403A11^^^mov     cs:global_max_fast, 80h^^^mov     eax, [r8+24h]^^^jmp     loc_403B2C^^^
_IO_init_marker$$$push    rbx^^^mov     rbx, rdi^^^sub     rsp, 10h^^^mov     eax, [rsi]^^^mov     [rdi+8], rsi^^^test    ah, 8^^^jnz     short loc_42CEA0^^^test    ah, 1^^^mov     rax, [rsi+8]^^^jnz     short loc_42CE98^^^sub     eax, [rsi+18h]^^^mov     [rbx+10h], eax^^^mov     rax, [rsi+60h]^^^mov     [rbx], rax^^^mov     [rsi+60h], rbx^^^add     rsp, 10h^^^pop     rbx^^^retn^^^sub     eax, [rsi+10h]^^^jmp     short loc_42CE7F^^^mov     rdi, rsi^^^mov     [rsp+18h+var_10], rsi^^^call    _IO_switch_to_get_mode^^^mov     rsi, [rsp+18h+var_10]^^^mov     eax, [rsi]^^^jmp     short loc_42CE73^^^
wcsrtombs$$$push    r15             ^^^mov     eax, offset state_0^^^push    r14^^^mov     r14, rsi^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^sub     rsp, 178h^^^test    rcx, rcx^^^cmovz   rcx, rax^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     [rsp+1A8h+var_68], 0^^^mov     [rsp+1A8h+var_78], rcx^^^mov     [rsp+1A8h+var_84], 0^^^mov     [rsp+1A8h+var_80], 1^^^mov     [rsp+1A8h+var_88], 1^^^mov     rax, fs:[rax]^^^mov     rbx, [rax]^^^mov     rax, [rbx+28h]^^^test    rax, rax^^^jz      loc_44622B^^^mov     r12, [rax+10h]^^^cmp     qword ptr [r12], 0^^^mov     rbx, [r12+28h]^^^jz      short loc_446023^^^ror     rbx, 11h^^^xor     rbx, fs:30h^^^test    r13, r13^^^jz      loc_446150^^^mov     r15, [r14]^^^mov     rsi, rbp^^^add     rbp, r13^^^mov     rdi, r15^^^call    wcsnlen^^^lea     r15, [r15+rax*4+4]^^^mov     rdi, rbx^^^mov     [rsp+1A8h+var_90], rbp^^^mov     [rsp+1A8h+var_98], r13^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rdx, r14^^^mov     [rsp+1A8h+var_1A0], 1^^^mov     [rsp+1A8h+var_1A8], 0^^^lea     r9, [rsp+1A8h+var_40]^^^mov     rcx, r15^^^lea     rsi, [rsp+1A8h+var_98]^^^mov     rdi, r12^^^call    rbx^^^mov     rdx, [rsp+1A8h+var_98]^^^mov     rbp, rdx^^^sub     rbp, r13^^^cmp     eax, 4^^^jnz     loc_446120^^^cmp     byte ptr [rdx-1], 0^^^jnz     short loc_4460CA^^^cmp     r13, rdx^^^jz      loc_446267^^^mov     rdx, [rsp+1A8h+var_78]^^^mov     edx, [rdx]^^^test    edx, edx^^^jnz     loc_44624E^^^mov     qword ptr [r14], 0^^^sub     rbp, 1^^^test    eax, eax^^^setnz   dl^^^cmp     eax, 4^^^setnz   cl^^^jz      short loc_4460E8^^^test    dl, dl^^^jz      short loc_4460E8^^^cmp     eax, 7^^^jz      short loc_4460E8^^^cmp     eax, 6^^^jnz     short loc_446130^^^nop     dword ptr [rax]^^^cmp     eax, 5^^^jz      short loc_44610B^^^test    dl, dl^^^nop^^^jz      short loc_44610B^^^test    cl, cl^^^jz      short loc_44610B^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 54h^^^add     rsp, 178h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    eax, eax^^^jnz     short loc_4460CA^^^cmp     byte ptr [rdx-1], 0^^^jnz     short loc_4460CA^^^jmp     loc_4460A4^^^cmp     eax, 5^^^jz      short loc_44610B^^^mov     ecx, offset __PRETTY_FUNCTION___11487^^^mov     edx, 8Ch^^^mov     esi, offset aWcsrtombs_c^^^mov     edi, offset aStatus__gconv_^^^call    __assert_fail^^^mov     rbp, [r14]^^^lea     r13, [rsp+1A8h+var_198]^^^lea     r14, [r13+100h]^^^mov     rdi, rbp^^^call    wcslen^^^lea     r15, [rbp+rax*4+4]^^^mov     rax, [rsp+1A8h+var_78]^^^mov     [rsp+1A8h+var_48], rbp^^^xor     ebp, ebp^^^mov     rax, [rax]^^^mov     [rsp+1A8h+var_90], r14^^^mov     [rsp+1A8h+var_58], rax^^^lea     rax, [rsp+1A8h+var_58]^^^mov     [rsp+1A8h+var_78], rax^^^nop     dword ptr [rax+00000000h]^^^mov     rdi, rbx^^^mov     [rsp+1A8h+var_98], r13^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rcx, r15^^^lea     rdx, [rsp+1A8h+var_48]^^^mov     [rsp+1A8h+var_1A0], 1^^^mov     [rsp+1A8h+var_1A8], 0^^^lea     r9, [rsp+1A8h+var_40]^^^mov     rsi, r14^^^mov     rdi, r12^^^call    rbx^^^mov     rdx, [rsp+1A8h+var_98]^^^mov     rcx, rdx^^^sub     rcx, r13^^^add     rbp, rcx^^^cmp     eax, 5^^^jz      short loc_4461A8^^^cmp     eax, 4^^^jz      short loc_446208^^^test    eax, eax^^^jnz     loc_4460CA^^^cmp     byte ptr [rdx-1], 0^^^jz      loc_4460C6^^^mov     ecx, offset __PRETTY_FUNCTION___11487^^^mov     edx, 64h^^^mov     esi, offset aWcsrtombs_c^^^mov     edi, offset aData___outbuf1^^^call    __assert_fail^^^cmp     rbx, offset _nl_C_LC_CTYPE^^^mov     eax, offset __wcsmbs_gconv_fcts_c^^^jz      loc_446006^^^mov     rdi, rbx^^^call    __wcsmbs_load_conv^^^mov     rax, [rbx+28h]^^^jmp     loc_446006^^^mov     ecx, offset __PRETTY_FUNCTION___11487^^^mov     edx, 81h^^^mov     esi, offset aWcsrtombs_c^^^mov     edi, offset aData___statep_^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11487^^^mov     edx, 80h^^^mov     esi, offset aWcsrtombs_c^^^mov     edi, offset aData___outbufU^^^call    __assert_fail^^^
sub_475199$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
realloc_hook_ini$$$sub     rsp, 18h^^^mov     r11d, cs:__libc_malloc_initialized^^^mov     cs:__malloc_hook, 0^^^mov     cs:__realloc_hook, 0^^^test    r11d, r11d^^^jns     short loc_4080DD^^^mov     [rsp+18h+var_18], rsi^^^mov     [rsp+18h+var_10], rdi^^^call    ptmalloc_init_part_8^^^mov     rdi, [rsp+18h+var_10]^^^mov     rsi, [rsp+18h+var_18]^^^add     rsp, 18h^^^jmp     realloc^^^
vfscanf$$$xor     ecx, ecx        ^^^jmp     _IO_vfscanf_internal^^^
_dl_try_allocate_static_tls$$$sub     rsp, 8^^^cmp     qword ptr [rdi+440h], 1^^^jz      loc_453EB0^^^mov     rcx, [rdi+430h]^^^cmp     rcx, cs:_dl_tls_static_align^^^mov     eax, 0FFFFFFFFh^^^ja      short loc_453E9A^^^mov     rsi, cs:_dl_tls_static_used^^^mov     rdx, cs:_dl_tls_static_size^^^sub     rdx, rsi^^^cmp     rdx, 8FFh^^^jbe     short loc_453E9A^^^mov     r9, [rdi+438h]^^^sub     rdx, 900h^^^mov     r8, r9^^^add     r8, [rdi+428h]^^^cmp     rdx, r8^^^jb      short loc_453E9A^^^sub     rsi, r9^^^mov     rax, rdx^^^add     rsi, rdx^^^sub     rax, r8^^^xor     edx, edx^^^div     rcx^^^imul    rax, rcx^^^sub     rsi, rax^^^mov     rax, [rdi+28h]^^^mov     cs:_dl_tls_static_used, rsi^^^mov     [rdi+440h], rsi^^^test    byte ptr [rax+314h], 4^^^jnz     short loc_453EA0^^^or      byte ptr [rdi+315h], 4^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^call    cs:_dl_init_static_tls^^^xor     eax, eax^^^add     rsp, 8^^^retn^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_453E9A^^^
sub_41B9D4$$$cmp     qword ptr [rbp-598h], 0FFFFFFFFFFFFFFFFh^^^jz      loc_41BC70^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      loc_41BC5C^^^movsx   eax, dil^^^mov     dword ptr [rbp-600h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     loc_41B826^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      loc_41BC48^^^movsx   eax, dil^^^mov     dword ptr [rbp-608h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     loc_41B826^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   eax, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     rcx, rdx^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_41BB81^^^mov     ecx, [r12]^^^cmp     ecx, 30h^^^jnb     loc_41BBAD^^^mov     eax, ecx^^^add     rax, [r12+10h]^^^add     ecx, 8^^^mov     [r12], ecx^^^mov     eax, [rax]^^^test    eax, eax^^^mov     [rbp-5A4h], eax^^^jns     short loc_41BAE9^^^neg     eax^^^mov     byte ptr [rbp-5F0h], 20h^^^mov     dword ptr [rbp-5C8h], 1^^^mov     [rbp-5A4h], eax^^^cmp     dword ptr [rbp-5A4h], 0FFFFFFDEh^^^ja      loc_41BC30^^^cmp     dword ptr [rbp-5A4h], 3C7h^^^jbe     short loc_41BB38^^^movsxd  rax, dword ptr [rbp-5A4h]^^^lea     rcx, [rax+20h]^^^cmp     rcx, 1000h^^^ja      loc_41BBC0^^^lea     rax, [rcx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+arg_7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     rax, rcx^^^mov     [rbp-548h], rax^^^mov     rdi, [rbp-560h]^^^mov     eax, offset loc_41ACA2^^^movzx   edi, byte ptr [rdi+1]^^^mov     ecx, edi^^^mov     [rbp-558h], dil^^^sub     ecx, 20h^^^cmp     cl, 5Ah^^^ja      loc_41B826^^^movsx   eax, dil^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step1_jumps_13259[rax*8]^^^jmp     loc_41B826^^^imul    eax, 0Ah^^^lea     eax, [rax+rsi-30h]^^^add     rcx, 1^^^movzx   edi, byte ptr [rcx]^^^movzx   esi, dil^^^lea     r8d, [rsi-30h]^^^cmp     r8d, 9^^^jbe     short loc_41BB7A^^^test    eax, eax^^^jz      loc_41BAA9^^^cmp     dil, 24h^^^jnz     loc_41BAA9^^^jmp     loc_41AD5C^^^mov     rax, [r12+8]^^^lea     rcx, [rax+8]^^^mov     [r12+8], rcx^^^jmp     loc_41BAC4^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jnz     loc_41BB1A^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jz      short loc_41BC27^^^add     rcx, r15^^^mov     [rbp-548h], rcx^^^jmp     loc_41BB38^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 22h^^^jmp     loc_41ACB3^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-608h], 1^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-600h], 1^^^jmp     loc_41B826^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r8, [rax+48h]^^^mov     rax, [rax+50h]^^^mov     [rbp-598h], rax^^^mov     rdx, rax^^^movzx   eax, byte ptr [rax]^^^mov     [rbp-5D0h], r8^^^cmp     al, 7Fh^^^jz      loc_41C020^^^test    al, al^^^jz      loc_41C020^^^cmp     byte ptr [r8], 0^^^mov     eax, 0^^^cmovnz  rax, rdx^^^mov     [rbp-598h], rax^^^jmp     loc_41B9E2^^^mov     rdi, [rbp-560h]^^^movzx   eax, byte ptr [rdi]^^^mov     rcx, rdi^^^sub     eax, 30h^^^jmp     short loc_41BCDF^^^imul    eax, 0Ah^^^mov     rcx, rdx^^^lea     eax, [rax+rsi-30h]^^^movzx   esi, byte ptr [rcx+1]^^^lea     rdx, [rcx+1]^^^lea     edi, [rsi-30h]^^^cmp     edi, 9^^^jbe     short loc_41BCD5^^^cmp     eax, 0FFFFFFDEh^^^mov     [rbp-560h], rcx^^^ja      loc_41C030^^^cmp     eax, 3C7h^^^mov     [rbp-5A4h], eax^^^jbe     short loc_41BD3D^^^cdqe^^^lea     rcx, [rax+20h]^^^cmp     rcx, 1000h^^^ja      loc_41C095^^^lea     rax, [rcx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+arg_7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     rax, rcx^^^mov     [rbp-548h], rax^^^mov     rdi, [rbp-560h]^^^movzx   eax, byte ptr [rdi+1]^^^cmp     al, 24h^^^jz      loc_41AD5C^^^mov     ecx, eax^^^mov     [rbp-558h], al^^^mov     eax, offset loc_41ACA2^^^sub     ecx, 20h^^^cmp     cl, 5Ah^^^ja      loc_41B826^^^movsx   eax, byte ptr [rbp-558h]^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step1_jumps_13259[rax*8]^^^jmp     loc_41B826^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      loc_41C048^^^movsx   eax, dil^^^mov     dword ptr [rbp-5C0h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step3a_jumps_13261[rax*8]^^^jmp     loc_41B826^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   eax, byte ptr [rdi+1]^^^add     rdx, 1^^^cmp     al, 2Ah^^^jz      short loc_41BE61^^^movzx   eax, al^^^mov     dword ptr [rbp-5A0h], 0^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     short loc_41BE4A^^^movzx   ecx, byte ptr [rdx]^^^mov     eax, offset loc_41ACA2^^^mov     [rbp-558h], cl^^^sub     ecx, 20h^^^cmp     cl, 5Ah^^^ja      loc_41B826^^^movsx   eax, byte ptr [rbp-558h]^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step2_jumps_13260[rax*8]^^^jmp     loc_41B826^^^imul    eax, 0Ah^^^lea     eax, [rax+rcx-30h]^^^add     rdx, 1^^^movzx   ecx, byte ptr [rdx]^^^lea     esi, [rcx-30h]^^^cmp     esi, 9^^^jbe     short loc_41BE43^^^mov     [rbp-5A0h], eax^^^jmp     short loc_41BEAB^^^movzx   eax, byte ptr [rdi+2]^^^mov     rdx, rdi^^^add     rdx, 2^^^mov     rcx, rdx^^^sub     eax, 30h^^^cmp     eax, 9^^^jbe     loc_41BFA7^^^mov     ecx, [r12]^^^cmp     ecx, 30h^^^jnb     loc_41BF94^^^mov     eax, ecx^^^add     rax, [r12+10h]^^^add     ecx, 8^^^mov     [r12], ecx^^^mov     eax, [rax]^^^mov     r8d, 0FFFFFFFFh^^^test    eax, eax^^^cmovns  r8d, eax^^^mov     [rbp-5A0h], r8d^^^cmp     dword ptr [rbp-5A0h], 3C8h^^^jbe     loc_41BE09^^^mov     eax, [rbp-5A4h]^^^cmp     [rbp-5A0h], eax^^^jle     loc_41BE09^^^cmp     dword ptr [rbp-5A0h], 0FFFFFFDEh^^^ja      loc_41BF74^^^movsxd  rax, dword ptr [rbp-5A0h]^^^lea     rcx, [rax+20h]^^^cmp     rcx, 1000h^^^ja      short loc_41BF11^^^lea     rax, [rcx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+arg_7]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^add     rax, rcx^^^mov     [rbp-548h], rax^^^jmp     loc_41BE09^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jnz     short loc_41BEEE^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jz      short loc_41BF8B^^^add     rcx, r15^^^mov     [rbp-548h], rcx^^^jmp     loc_41BE09^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[rdx], 22h^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rax, [r12+8]^^^lea     rcx, [rax+8]^^^mov     [r12+8], rcx^^^jmp     loc_41BE96^^^add     rcx, 1^^^movzx   edi, byte ptr [rcx]^^^movzx   esi, dil^^^lea     r8d, [rsi-30h]^^^cmp     r8d, 9^^^ja      loc_41C07A^^^imul    eax, 0Ah^^^lea     eax, [rax+rsi-30h]^^^jmp     short loc_41BFA7^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41C05C^^^movsx   eax, dil^^^mov     dword ptr [rbp-604h], 1^^^mov     dword ptr [rbp-5C0h], 0^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step4_jumps_13264[rax*8]^^^jmp     loc_41B826^^^mov     qword ptr [rbp-598h], 0^^^jmp     loc_41B9E2^^^mov     r8, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[r8], 22h^^^jmp     loc_41ACB3^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-5C0h], 1^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-604h], 1^^^mov     dword ptr [rbp-5C0h], 0^^^jmp     loc_41B826^^^test    eax, eax^^^jz      loc_41BE7B^^^cmp     dil, 24h^^^jnz     loc_41BE7B^^^nop     dword ptr [rax+00h]^^^jmp     loc_41AD5C^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jnz     loc_41BD1F^^^mov     rdi, rcx^^^mov     [rbp-658h], rdx^^^mov     [rbp-650h], rcx^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^mov     rdx, [rbp-658h]^^^mov     rcx, [rbp-650h]^^^jz      loc_41E345^^^add     rcx, r15^^^mov     [rbp-548h], rcx^^^jmp     loc_41BD3D^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^
__tzfile_compute$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, r8^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 18h^^^test    esi, esi^^^mov     [rsp+48h+var_40], rdi^^^jz      loc_4492E8^^^mov     r8, cs:num_transitions^^^mov     cs:tzname, 0^^^mov     cs:off_6C3298, 0^^^test    r8, r8^^^jz      loc_449531^^^mov     rdi, cs:transitions^^^mov     rsi, [rsp+48h+var_40]^^^cmp     [rdi], rsi^^^jg      loc_449531^^^lea     rdx, [r8-1]^^^mov     r9, [rdi+rdx*8]^^^cmp     rsi, r9^^^jge     loc_44948B^^^sub     r9, rsi^^^mov     rcx, rdx^^^mov     rdx, 881A22EEE5DAFD75h^^^mov     rax, r9^^^imul    rdx^^^add     rdx, r9^^^sar     r9, 3Fh^^^sar     rdx, 17h^^^sub     rdx, r9^^^xor     r9d, r9d^^^cmp     r8, rdx^^^jbe     short loc_44914B^^^mov     rax, r8^^^sub     rax, rdx^^^lea     r13, [rax-1]^^^cmp     rsi, [rdi+r13*8]^^^jge     loc_449410^^^cmp     r13, 9^^^jbe     short loc_449120^^^lea     rcx, [rax-0Bh]^^^cmp     rsi, [rdi+rcx*8]^^^jl      short loc_44914B^^^lea     rdx, [rax-2]^^^lea     rax, [r13-1]^^^cmp     rsi, [rdi+rdx*8]^^^jge     short loc_449170^^^xchg    ax, ax^^^mov     r13, rax^^^sub     rax, 1^^^cmp     rsi, [rdi+r13*8-8]^^^mov     rdx, rax^^^jl      short loc_449130^^^jmp     short loc_449170^^^mov     r9, rax^^^lea     rdx, [r9+1]^^^cmp     rcx, rdx^^^jbe     short loc_449169^^^lea     rax, [rcx+r9]^^^shr     rax, 1^^^cmp     rsi, [rdi+rax*8]^^^jge     short loc_449148^^^mov     rcx, rax^^^cmp     rcx, rdx^^^ja      short loc_449154^^^lea     rdx, [rcx-1]^^^mov     r13, rcx^^^mov     rax, cs:type_idxs^^^movzx   eax, byte ptr [rax+rdx]^^^shl     rax, 4^^^add     rax, cs:types^^^movzx   edi, byte ptr [rax+9]^^^movzx   r14d, byte ptr [rax+8]^^^add     rdi, cs:zone_names^^^mov     [rsp+48h+var_48], rdx^^^movsxd  r14, r14d^^^call    __tzstring^^^mov     rsi, cs:num_transitions^^^mov     tzname[r14*8], rax^^^mov     rcx, cs:type_idxs^^^mov     rdx, [rsp+48h+var_48]^^^cmp     r13, rsi^^^jb      short loc_4491D9^^^jmp     loc_449250^^^add     r13, 1^^^cmp     r13, rsi^^^jnb     short loc_449250^^^movzx   eax, byte ptr [rcx+r13]^^^shl     rax, 4^^^add     rax, cs:types^^^movzx   r14d, byte ptr [rax+8]^^^movzx   edi, byte ptr [rax+9]^^^movsxd  r15, r14d^^^cmp     tzname[r15*8], 0^^^jnz     short loc_4491D0^^^movzx   edi, dil^^^add     rdi, cs:zone_names^^^mov     [rsp+48h+var_48], rdx^^^call    __tzstring^^^mov     tzname[r15*8], rax^^^mov     eax, 1^^^mov     rcx, cs:type_idxs^^^sub     eax, r14d^^^mov     rdx, [rsp+48h+var_48]^^^cdqe^^^cmp     tzname[rax*8], 0^^^jnz     short loc_449250^^^mov     rsi, cs:num_transitions^^^add     r13, 1^^^cmp     r13, rsi^^^jb      short loc_4491D9^^^nop     dword ptr [rax+00h]^^^mov     rax, cs:tzname^^^test    rax, rax^^^jz      loc_4496B5^^^movzx   r13d, byte ptr [rcx+rdx]^^^shl     r13, 4^^^add     r13, cs:types^^^mov     rdx, cs:rule_stdoff^^^xor     ecx, ecx^^^cmp     rdx, cs:rule_dstoff^^^setnz   cl^^^neg     rdx^^^test    rax, rax^^^mov     cs:daylight, ecx^^^mov     cs:timezone, rdx^^^jz      loc_44943B^^^cmp     cs:off_6C3298, 0^^^jz      loc_44945D^^^movzx   eax, byte ptr [r13+8]^^^mov     [r12+20h], eax^^^cdqe^^^movzx   edi, byte ptr [r13+9]^^^mov     r14, tzname[rax*8]^^^add     rdi, cs:zone_names^^^mov     rsi, r14^^^call    sub_4003A0^^^test    eax, eax^^^jnz     loc_4496C8^^^mov     rax, [r13+0]^^^mov     [r12+30h], r14^^^mov     [r12+28h], rax^^^mov     rdx, cs:num_leaps^^^mov     rdi, cs:leaps^^^mov     rax, rdx^^^mov     rsi, [rsp+48h+var_40]^^^shl     rax, 4^^^mov     qword ptr [rbx], 0^^^mov     dword ptr [rbp+0], 0^^^lea     rax, [rdi+rax-10h]^^^nop     dword ptr [rax]^^^test    rdx, rdx^^^jz      short loc_44933D^^^mov     rcx, rax^^^sub     rax, 10h^^^sub     rdx, 1^^^cmp     [rax+10h], rsi^^^jg      short loc_449318^^^mov     rax, [rcx+8]^^^mov     [rbx], rax^^^mov     rax, [rcx]^^^cmp     rsi, rax^^^jz      short loc_449350^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    rdx, rdx^^^mov     rsi, [rcx+8]^^^jz      loc_4493F0^^^lea     rcx, [rdx-1]^^^mov     r9, rcx^^^shl     r9, 4^^^add     r9, rdi^^^mov     r8, [r9+8]^^^cmp     r8, rsi^^^jge     short loc_44933D^^^test    rdx, rdx^^^mov     dword ptr [rbp+0], 1^^^jz      short loc_44933D^^^mov     r9, [r9]^^^add     r9, 1^^^cmp     r9, rax^^^jnz     short loc_44933D^^^add     r8, 1^^^cmp     r8, rsi^^^jnz     short loc_44933D^^^shl     rdx, 4^^^lea     rax, [rdi+rdx-8]^^^mov     edx, 2^^^jmp     short loc_4493D5^^^mov     rdi, [rax-18h]^^^mov     rsi, rax^^^add     rdi, 1^^^cmp     [rax-8], rdi^^^jnz     short loc_4493DD^^^mov     rdi, [rsi-10h]^^^add     edx, 1^^^sub     rax, 10h^^^add     rdi, 1^^^cmp     [rsi], rdi^^^jnz     loc_449469^^^sub     rcx, 1^^^test    rcx, rcx^^^mov     r8d, edx^^^jnz     short loc_4493A8^^^mov     [rbp+0], edx^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^test    rsi, rsi^^^jle     loc_44935D^^^mov     dword ptr [rbp+0], 1^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^lea     r9, [rax+9]^^^cmp     r8, r9^^^jbe     short loc_449428^^^cmp     rsi, [rdi+r9*8]^^^jge     loc_44914B^^^nop     dword ptr [rax+rax+00h]^^^add     r13, 1^^^cmp     rsi, [rdi+r13*8]^^^jge     short loc_449428^^^lea     rdx, [r13-1]^^^jmp     loc_449170^^^cmp     cs:num_types, 1^^^jnz     short loc_449472^^^mov     rdi, cs:zone_names^^^call    __tzstring^^^mov     cs:tzname, rax^^^jmp     loc_44929C^^^mov     cs:off_6C3298, rax^^^jmp     loc_4492AA^^^mov     [rbp+0], r8d^^^jmp     loc_44933D^^^mov     ecx, offset __PRETTY_FUNCTION___5887^^^mov     edx, 316h^^^mov     esi, offset aTzfile_c^^^mov     edi, offset aNum_types1^^^call    __assert_fail^^^mov     rdi, cs:tzspec^^^test    rdi, rdi^^^jz      loc_4496AD^^^call    __tzset_parse_tz^^^lea     rdi, [rsp+48h+var_40]^^^xor     esi, esi^^^mov     rdx, r12^^^call    __offtime^^^test    eax, eax^^^jz      loc_4496A2^^^mov     rdi, [rsp+48h+var_40]^^^mov     edx, 1^^^mov     rsi, r12^^^call    __tz_compute^^^mov     rdx, cs:num_leaps^^^mov     rdi, rdx^^^shl     rdi, 4^^^add     rdi, cs:leaps^^^cmp     rdi, cs:zone_names^^^jnz     loc_4492EF^^^cmp     cs:num_types, 2^^^jnz     loc_4495A5^^^call    __tzstring^^^mov     r12, cs:zone_names^^^mov     cs:tzname, rax^^^mov     rdi, r12^^^call    strlen^^^lea     rdi, [r12+rax+1]^^^call    __tzstring^^^mov     rdx, cs:num_leaps^^^mov     cs:off_6C3298, rax^^^jmp     loc_4492EF^^^mov     rsi, cs:num_types^^^test    rsi, rsi^^^jz      loc_449690^^^mov     rdx, cs:types^^^cmp     byte ptr [rdx+8], 0^^^jz      loc_449685^^^mov     rcx, rdx^^^xor     eax, eax^^^xor     r14d, r14d^^^jmp     short loc_449579^^^add     r14, 1^^^cmp     r14, rsi^^^jnb     short loc_4495BE^^^mov     rdx, r14^^^shl     rdx, 4^^^add     rdx, rcx^^^cmp     byte ptr [rdx+8], 0^^^jz      short loc_4495BE^^^test    rax, rax^^^jnz     short loc_449560^^^movzx   edi, byte ptr [rdx+9]^^^add     rdi, cs:zone_names^^^call    __tzstring^^^mov     rsi, cs:num_types^^^mov     cs:off_6C3298, rax^^^mov     rcx, cs:types^^^jmp     short loc_449560^^^mov     ecx, offset __PRETTY_FUNCTION___5887^^^mov     edx, 2B8h^^^mov     esi, offset aTzfile_c^^^mov     edi, offset aNum_types2^^^call    __assert_fail^^^cmp     r14, rsi^^^jz      loc_44967A^^^mov     r15, r14^^^mov     rdx, rcx^^^shl     r15, 4^^^mov     rcx, rdx^^^movzx   edi, byte ptr [rcx+r15+9]^^^add     rdi, cs:zone_names^^^call    __tzstring^^^cmp     cs:off_6C3298, 0^^^mov     cs:tzname, rax^^^jz      short loc_449606^^^mov     r13, r15^^^add     r13, cs:types^^^jmp     loc_449270^^^mov     rsi, cs:num_types^^^cmp     r14, rsi^^^jnb     short loc_4495F7^^^mov     rcx, cs:types^^^lea     r13, [rcx+r15]^^^cmp     byte ptr [r13+8], 0^^^jnz     short loc_44964C^^^lea     rdx, [r14+1]^^^shl     rdx, 4^^^add     rdx, rcx^^^add     r14, 1^^^cmp     r14, rsi^^^jnb     loc_449270^^^mov     rcx, rdx^^^add     rdx, 10h^^^cmp     byte ptr [rdx-8], 0^^^jz      short loc_44962F^^^mov     r13, rcx^^^movzx   edi, byte ptr [r13+9]^^^mov     r13, r15^^^add     rdi, cs:zone_names^^^call    __tzstring^^^add     r13, cs:types^^^mov     cs:off_6C3298, rax^^^mov     rax, cs:tzname^^^jmp     loc_449270^^^xor     r15d, r15d^^^xor     r14d, r14d^^^jmp     loc_4495D4^^^xor     r15d, r15d^^^xor     r14d, r14d^^^jmp     loc_4495D1^^^mov     rcx, cs:types^^^xor     r15d, r15d^^^xor     r14d, r14d^^^jmp     loc_4495D4^^^mov     r8, cs:num_transitions^^^lea     rdx, [r8-1]^^^mov     r13, r8^^^jmp     loc_449170^^^mov     rax, cs:off_6C3298^^^mov     cs:tzname, rax^^^jmp     loc_449260^^^mov     ecx, offset __PRETTY_FUNCTION___5887^^^mov     edx, 31Dh^^^mov     esi, offset aTzfile_c^^^mov     edi, offset a__extension__S^^^call    __assert_fail^^^
_dl_unload_cache$$$sub     rsp, 8^^^mov     rdi, cs:cache^^^lea     rax, [rdi-1]^^^cmp     rax, 0FFFFFFFFFFFFFFFDh^^^ja      short loc_4523CC^^^mov     rsi, cs:cachesize^^^call    munmap^^^mov     cs:cache, 0^^^add     rsp, 8^^^retn^^^
sub_41E089$$$test    byte ptr [rbx+74h], 4^^^jz      short loc_41E098^^^cmp     dword ptr [rbp-5C4h], 0^^^jz      short loc_41E0D3^^^movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      short loc_41E11C^^^movsxd  rax, dword ptr [rax+30h]^^^shl     rax, 4^^^cmp     dword ptr [rbp-5B0h], 0^^^jz      short loc_41E100^^^mov     rcx, [rbp-578h]^^^movsxd  rdx, r14d^^^mov     rax, [rcx+rax]^^^mov     [rax], rdx^^^jmp     loc_41B3A7^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, r13^^^repne scasb^^^mov     rdi, r13^^^not     rcx^^^mov     rsi, rcx^^^call    __readonly_area^^^test    eax, eax^^^mov     [rbp-5C4h], eax^^^jns     short loc_41E098^^^cmp     dword ptr [rbp-630h], 0^^^jz      short loc_41E14E^^^mov     rsi, [rbp-578h]^^^mov     rax, [rsi+rax]^^^mov     [rax], r14b^^^jmp     loc_41B3A7^^^cmp     dword ptr [rbp-5B0h], 0^^^mov     edx, [r12]^^^jz      loc_41FA8A^^^cmp     edx, 30h^^^jnb     short loc_41E16E^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     rax, [rax]^^^movsxd  rdx, r14d^^^mov     [rax], rdx^^^jmp     loc_41B3A7^^^cmp     dword ptr [rbp-620h], 0^^^jnz     loc_41FAB1^^^mov     rdi, [rbp-578h]^^^mov     rax, [rdi+rax]^^^mov     [rax], r14d^^^jmp     loc_41B3A7^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41E140^^^
__strchr_sse2$$$movd    xmm1, esi       ^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^pxor    xmm2, xmm2^^^punpcklbw xmm1, xmm1^^^or      esi, 0FFFFFFFFh^^^movdqa  xmm0, xmmword ptr [rdi]^^^pshufd  xmm1, xmm1, 0^^^sub     rcx, rdi^^^movdqa  xmm3, xmm0^^^lea     rdi, [rdi+10h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^shl     esi, cl^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^and     edx, esi^^^and     ecx, esi^^^or      ecx, edx^^^jnz     short loc_42DEB8^^^movdqa  xmm0, xmmword ptr [rdi]^^^lea     rdi, [rdi+10h]^^^movdqa  xmm3, xmm0^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm3, xmm2^^^pmovmskb edx, xmm0^^^pmovmskb ecx, xmm3^^^or      ecx, edx^^^jz      short loc_42DE98^^^bsf     edx, edx^^^jz      short loc_42DEC9^^^bsf     ecx, ecx^^^lea     rax, [rdi+rdx-10h]^^^cmp     ecx, edx^^^jz      short locret_42DECB^^^xor     eax, eax^^^retn^^^
_L_unlock_561$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42B7E4^^^
lose$$$push    r15^^^mov     r15, r9^^^push    r14^^^push    r13^^^mov     r13, r8^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     ebx, edi^^^sub     rsp, 8^^^cmp     esi, 0FFFFFFFFh^^^mov     r14, [rsp+38h+arg_0]^^^jz      short loc_44ED9D^^^mov     edi, esi^^^call    close^^^test    r13, r13^^^jz      short loc_44EDB4^^^mov     rdi, [r13+338h]^^^cmp     rdi, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_44EDB4^^^call    free^^^mov     rdi, r13^^^call    free^^^mov     rdi, r12^^^call    free^^^test    r14, r14^^^jz      short loc_44EDD6^^^mov     dword ptr [r14+18h], 0^^^call    _dl_debug_state^^^mov     rcx, r15^^^xor     edx, edx^^^mov     rsi, rbp^^^mov     edi, ebx^^^call    _dl_signal_error^^^
do_dlclose$$$jmp     _dl_close^^^
_dl_relocate_object$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12d, edx^^^and     edx, 2000000h^^^and     r12d, 1^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 0D8h^^^mov     [rbp+var_C0], rsi^^^mov     [rbp+var_AC], ecx^^^mov     [rbp+var_B0], edx^^^test    byte ptr [rdi+314h], 4^^^jnz     loc_454327^^^test    ecx, ecx^^^jz      loc_4545B8^^^test    byte ptr cs:_dl_debug_mask, 20h^^^jnz     loc_455253^^^cmp     qword ptr [rbx+0F0h], 0^^^jnz     loc_45514B^^^mov     [rbp+var_E0], 0^^^mov     rax, [rbx+68h]^^^test    r12b, r12b^^^mov     r13d, r12d^^^mov     rax, [rax+8]^^^mov     [rbp+var_C8], rax^^^jnz     loc_454560^^^test    r13b, r13b^^^mov     rax, [rbx+288h]^^^jnz     loc_4545D0^^^lea     rsi, [rbp+var_80]^^^xor     eax, eax^^^mov     ecx, 8^^^mov     rdi, rsi^^^rep stosq^^^mov     rax, [rbx+78h]^^^xor     edi, edi^^^test    rax, rax^^^jz      short loc_4541B2^^^mov     rdi, [rax+8]^^^mov     rax, [rbx+80h]^^^mov     r8, [rbx+180h]^^^mov     rcx, [rax+8]^^^mov     [rbp+var_80], rdi^^^test    r8, r8^^^mov     [rbp+var_78], rcx^^^jz      short loc_4541AF^^^mov     rax, rcx^^^mov     rdx, 0AAAAAAAAAAAAAAABh^^^mul     rdx^^^mov     rax, [r8+8]^^^shr     rdx, 4^^^cmp     rdx, rax^^^cmovbe  rax, rdx^^^mov     [rbp+var_70], rax^^^add     rdi, rcx^^^cmp     qword ptr [rbx+0E0h], 0^^^jz      short loc_4541E5^^^mov     rax, [rbx+0F8h]^^^test    r12d, r12d^^^mov     rax, [rax+8]^^^jnz     loc_4545F0^^^cmp     rax, rdi^^^jnz     loc_4545F0^^^mov     rax, [rbx+50h]^^^add     rcx, [rax+8]^^^mov     [rbp+var_78], rcx^^^lea     rdx, [rbp+var_28]^^^add     rsi, 18h^^^mov     [rbp+var_90], rsi^^^mov     [rbp+var_88], rdx^^^mov     rcx, [rbp+var_90]^^^mov     r12, [rbx]^^^mov     rax, [rcx-18h]^^^mov     r13d, [rcx]^^^mov     rdx, [rcx-8]^^^mov     r10, rax^^^add     r10, [rcx-10h]^^^test    r13d, r13d^^^jz      loc_454340^^^cmp     rax, r10^^^jnb     loc_4542D8^^^xor     r14d, r14d^^^xor     r13d, r13d^^^jmp     short loc_454264^^^mov     rdx, r12^^^add     rdx, [rax]^^^cmp     rsi, 7^^^jnz     loc_454EF8^^^mov     rcx, [rbx+3E0h]^^^test    rcx, rcx^^^jnz     loc_454F1C^^^add     [rdx], r12^^^add     rax, 18h^^^cmp     r10, rax^^^jbe     short loc_454288^^^mov     esi, [rax+8]^^^cmp     rsi, 25h^^^jnz     short loc_454238^^^test    r13, r13^^^mov     r14, rax^^^jnz     short loc_45425B^^^mov     r14, rax^^^mov     r13, rax^^^add     rax, 18h^^^cmp     r10, rax^^^ja      short loc_454264^^^nop     dword ptr [rax+00h]^^^test    r13, r13^^^jz      short loc_4542D8^^^cmp     r14, r13^^^jb      short loc_4542D8^^^mov     r11d, [rbp+var_B0]^^^test    r11d, r11d^^^jz      short loc_4542B1^^^jmp     loc_4550DB^^^add     r13, 18h^^^cmp     r13, r14^^^ja      short loc_4542D8^^^cmp     dword ptr [r13+8], 25h^^^jnz     short loc_4542A8^^^mov     r15, r12^^^add     r15, [r13+0]^^^mov     rax, [r13+10h]^^^add     r13, 18h^^^add     rax, [rbx]^^^call    rax^^^cmp     r13, r14^^^mov     [r15], rax^^^jbe     short loc_4542B1^^^nop     dword ptr [rax+00h]^^^add     [rbp+var_90], 20h^^^mov     rax, [rbp+var_88]^^^cmp     [rbp+var_90], rax^^^jnz     loc_4541FB^^^mov     eax, [rbp+var_AC]^^^test    eax, eax^^^jnz     loc_454FEB^^^or      byte ptr [rbx+314h], 4^^^cmp     [rbp+var_E0], 0^^^jnz     loc_4550AD^^^mov     rax, [rbx+458h]^^^test    rax, rax^^^jnz     loc_454848^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rcx, [rbx+70h]^^^lea     rdx, [rdx+rdx*2]^^^cmp     rbx, 0^^^lea     r13, [rax+rdx*8]^^^mov     rcx, [rcx+8]^^^mov     [rbp+var_A0], rcx^^^jz      short loc_4543AD^^^test    r12, r12^^^jz      loc_454830^^^cmp     rax, r13^^^jnb     short loc_4543AD^^^cmp     dword ptr [rax+8], 8^^^mov     rdx, [rax]^^^jnz     loc_454F32^^^add     rdx, r12^^^mov     esi, 18h^^^jmp     short loc_45439A^^^mov     rdx, r12^^^add     rdx, [rax+rsi-18h]^^^cmp     dword ptr [rax+8], 8^^^jnz     loc_454F32^^^mov     rcx, r12^^^add     rcx, [rax+10h]^^^add     rax, 18h^^^cmp     r13, rax^^^mov     [rdx], rcx^^^ja      short loc_454388^^^mov     rax, [rbx+1C8h]^^^test    rax, rax^^^jz      loc_454A70^^^mov     rax, [rax+8]^^^cmp     r10, r13^^^mov     [rbp+var_A8], rax^^^jbe     loc_4542D8^^^xor     r11d, r11d^^^mov     [rbp+var_D8], 0^^^mov     [rbp+var_98], r10^^^mov     [rbp+var_B8], r12^^^mov     [rbp+var_D0], r11^^^nop     dword ptr [rax+00h]^^^mov     rax, [r13+8]^^^mov     r14, rax^^^and     r14d, 0FFFFFFFFh^^^cmp     r14, 25h^^^jz      loc_4547E0^^^mov     rdx, [rbp+var_A8]^^^shr     rax, 20h^^^mov     rcx, [rbp+var_A0]^^^mov     r15, [rbp+var_B8]^^^add     r15, [r13+0]^^^cmp     r14, 8^^^mov     rsi, [rbx+2E0h]^^^movzx   edi, word ptr [rdx+rax*2]^^^lea     rax, [rax+rax*2]^^^lea     r12, [rcx+rax*8]^^^mov     [rbp+var_40], r12^^^jz      loc_454F4B^^^test    r14, r14^^^jz      loc_454658^^^movzx   ecx, byte ptr [r12+4]^^^mov     rax, r12^^^mov     rdx, rbx^^^shr     cl, 4^^^test    cl, cl^^^jz      loc_454522^^^cmp     r12, [rbx+3F8h]^^^jz      loc_45504C^^^cmp     r14, 10h^^^jz      short loc_454498^^^cmp     r14, 7^^^jz      short loc_454498^^^cmp     r14, 12h^^^jz      short loc_454498^^^cmp     r14, 11h^^^jnz     loc_454610^^^nop     dword ptr [rax+00h]^^^mov     eax, 1^^^xor     r9d, r9d^^^cmp     r14, 5^^^mov     [rbx+3F8h], r12^^^setz    r9b^^^and     edi, 7FFFh^^^lea     rdx, [rdi+rdi*2]^^^add     r9d, r9d^^^or      r9d, eax^^^lea     r8, [rsi+rdx*8]^^^mov     [rbx+400h], r9d^^^test    r8, r8^^^jz      short loc_4544DF^^^mov     r10d, [r8+8]^^^mov     eax, 0^^^test    r10d, r10d^^^cmovz   r8, rax^^^mov     edi, [r12]^^^mov     rcx, [rbp+var_C0]^^^lea     rdx, [rbp+var_40]^^^add     rdi, [rbp+var_C8]^^^mov     rsi, rbx^^^mov     [rsp+100h+var_F8], 0^^^mov     [rsp+100h+var_100], 1^^^call    _dl_lookup_symbol_x^^^mov     rdx, rax^^^mov     rax, [rbp+var_40]^^^mov     [rbx+408h], rdx^^^mov     [rbx+410h], rax^^^xor     esi, esi^^^test    rax, rax^^^jz      short loc_454540^^^movzx   ecx, byte ptr [rax+4]^^^mov     rsi, [rax+8]^^^add     rsi, [rdx]^^^and     ecx, 0Fh^^^cmp     ecx, 0Ah^^^jz      loc_454F5A^^^cmp     r14, 25h        ^^^jbe     loc_4547B0^^^xor     edx, edx        ^^^mov     esi, r14d^^^mov     rdi, rbx^^^call    _dl_reloc_bad_type^^^cmp     qword ptr [rbx+0F8h], 0^^^jz      loc_45413D^^^mov     rax, [rbx+58h]^^^mov     rax, [rax+8]^^^mov     rdx, [rax+8]^^^test    rdx, rdx^^^jnz     loc_454810^^^mov     r14d, [rbp+var_AC]^^^mov     [rax+8], rbx^^^test    r14d, r14d^^^jnz     loc_454F8B^^^test    r13b, r13b^^^mov     qword ptr [rax+10h], offset _dl_runtime_resolve^^^mov     rax, [rbx+288h]^^^jz      loc_45414D^^^jmp     short loc_4545D0^^^cmp     qword ptr [rdi+100h], 0^^^cmovnz  r12d, ecx^^^jmp     loc_4540FC^^^test    rax, rax^^^jz      loc_45414D^^^mov     rdx, [rbx]^^^mov     rax, [rax+8]^^^mov     qword ptr [rdx+rax], offset _dl_tlsdesc_resolve_rela^^^jmp     loc_45414D^^^mov     [rbp+var_60], rax^^^mov     rax, [rbx+50h]^^^mov     rax, [rax+8]^^^mov     [rbp+var_48], r12d^^^mov     [rbp+var_58], rax^^^jmp     loc_4541E5^^^xor     eax, eax^^^cmp     r14, 24h^^^setz    al^^^jmp     loc_45449D^^^mov     rax, [rbp+var_40]^^^test    rax, rax^^^jz      loc_454EBD^^^mov     rcx, [rdx+440h]^^^cmp     rcx, 1^^^jbe     loc_45529A^^^mov     rdx, [r13+10h]^^^add     rdx, [rax+8]^^^sub     rdx, rcx^^^mov     [r15+8], rdx^^^mov     qword ptr [r15], offset _dl_tlsdesc_return^^^nop     dword ptr [rax+00h]^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^ja      loc_4543F8^^^mov     r11, [rbp+var_D0]^^^mov     r12, [rbp+var_B8]^^^test    r11, r11^^^jz      loc_4542D8^^^cmp     [rbp+var_D8], r11^^^jb      loc_4542D8^^^mov     r15, r12^^^mov     r13, [rbp+var_D8]^^^mov     r12, rbx^^^mov     rbx, r11^^^jmp     short loc_4546AD^^^add     rbx, 18h^^^cmp     rbx, r13^^^ja      loc_454A68^^^mov     rax, [rbx+8]^^^cmp     eax, 25h^^^jnz     short loc_4546A0^^^mov     rcx, [rbp+var_A8]^^^shr     rax, 20h^^^mov     r14, r15^^^add     r14, [rbx]^^^mov     rsi, [r12+2E0h]^^^movzx   edi, word ptr [rcx+rax*2]^^^mov     rcx, [rbp+var_A0]^^^lea     rax, [rax+rax*2]^^^lea     rdx, [rcx+rax*8]^^^mov     rax, r12^^^mov     [rbp+var_40], rdx^^^movzx   ecx, byte ptr [rdx+4]^^^shr     cl, 4^^^test    cl, cl^^^jz      loc_45477F^^^cmp     rdx, [r12+3F8h]^^^jz      loc_455123^^^and     edi, 7FFFh^^^mov     dword ptr [r12+400h], 0^^^mov     [r12+3F8h], rdx^^^lea     rax, [rdi+rdi*2]^^^lea     r8, [rsi+rax*8]^^^test    r8, r8^^^jz      short loc_45473C^^^mov     ecx, [r8+8]^^^mov     eax, 0^^^test    ecx, ecx^^^cmovz   r8, rax^^^mov     edi, [rdx]^^^mov     rcx, [rbp+var_C0]^^^lea     rdx, [rbp+var_40]^^^add     rdi, [rbp+var_C8]^^^xor     r9d, r9d^^^mov     rsi, r12^^^mov     [rsp+100h+var_F8], 0^^^mov     [rsp+100h+var_100], 1^^^call    _dl_lookup_symbol_x^^^mov     rdx, [rbp+var_40]^^^mov     [r12+408h], rax^^^mov     [r12+410h], rdx^^^test    rdx, rdx^^^jz      short loc_45479B^^^mov     rcx, [rax]^^^movzx   eax, byte ptr [rdx+4]^^^mov     rsi, [rdx+8]^^^and     eax, 0Fh^^^cmp     eax, 0Ah^^^jz      loc_454FC9^^^mov     rax, [rbx+10h]^^^add     rax, [r12]^^^call    rax^^^mov     [r14], rax^^^jmp     loc_4546A0^^^jmp     ds:off_4A0300[r14*8]^^^add     rsi, [r13+10h]  ^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^mov     [r15], rsi^^^ja      loc_4543F8^^^jmp     loc_454669^^^cmp     [rbp+var_D0], 0^^^jz      loc_454A40^^^mov     [rbp+var_D8], r13^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^ja      loc_4543F8^^^jmp     loc_454669^^^add     rdx, [rbx]^^^mov     [rbx+3E0h], rdx^^^lea     rdx, [rax+18h]^^^mov     [rbx+3E8h], rdx^^^jmp     loc_454583^^^cmp     qword ptr [rbx+238h], 0^^^jnz     loc_4543AD^^^jmp     loc_454369^^^mov     rdx, cs:_dl_pagesize^^^mov     rsi, [rbx+450h]^^^add     rsi, [rbx]^^^neg     rdx^^^mov     rdi, rdx^^^and     rdi, rsi^^^add     rsi, rax^^^and     rsi, rdx^^^cmp     rdi, rsi^^^jz      loc_454327^^^sub     rsi, rdi^^^mov     edx, 1^^^call    mprotect^^^test    eax, eax^^^jns     loc_454327^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rsi, [rbx+8]^^^mov     ecx, offset errstring_10964^^^xor     edx, edx^^^mov     edi, fs:[rax]^^^call    _dl_signal_error^^^sub     rsi, r15        ^^^add     rsi, [r13+10h]^^^movsxd  rax, esi^^^mov     [r15], esi^^^cmp     rsi, rax^^^jz      loc_454658^^^mov     esi, offset aSSymbolSCauses^^^jmp     short loc_454936^^^mov     rax, [r13+10h]  ^^^add     rax, [rbx]^^^add     r13, 18h^^^call    rax^^^cmp     [rbp+var_98], r13^^^mov     [r15], rax^^^ja      loc_4543F8^^^jmp     loc_454669^^^mov     rax, [rbp+var_40]^^^test    rax, rax^^^jz      loc_454658^^^mov     rdx, [r12+10h]^^^cmp     [rax+10h], rdx^^^mov     rdi, r15^^^cmovbe  rdx, [rax+10h]^^^call    memcpy^^^mov     rax, [rbp+var_40]^^^mov     rdx, [r12+10h]^^^cmp     [rax+10h], rdx^^^ja      loc_454FBF^^^jnb     loc_454658^^^cmp     cs:_dl_verbose, 0^^^mov     esi, offset aSSymbolSHasDif^^^jz      loc_454658^^^mov     rax, [rbx+68h]^^^mov     ecx, [r12]^^^mov     edi, 2^^^add     rcx, [rax+8]^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     eax, offset aProgramNameUnk^^^test    rdx, rdx^^^cmovz   rdx, rax^^^xor     eax, eax^^^call    _dl_dprintf^^^jmp     loc_454658^^^mov     rax, [rbp+var_40]^^^test    rax, rax^^^jz      loc_454658^^^mov     rcx, [rdx+440h]^^^cmp     rcx, 1^^^jbe     loc_455319^^^mov     rdx, [r13+10h]^^^add     rdx, [rax+8]^^^add     r13, 18h^^^sub     rdx, rcx^^^cmp     [rbp+var_98], r13^^^mov     [r15], rdx^^^ja      loc_4543F8^^^jmp     loc_454669^^^mov     rdx, [rbp+var_40]^^^test    rdx, rdx^^^jz      loc_454658^^^mov     rax, [r13+10h]^^^add     r13, 18h^^^add     rax, [rdx+8]^^^cmp     [rbp+var_98], r13^^^mov     [r15], rax^^^ja      loc_4543F8^^^jmp     loc_454669^^^test    rdx, rdx        ^^^jz      loc_454658^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^mov     rax, [rdx+448h]^^^mov     [r15], rax^^^ja      loc_4543F8^^^jmp     loc_454669^^^add     rsi, [r13+10h]  ^^^mov     eax, 0FFFFFFFFh^^^cmp     rsi, rax^^^mov     [r15], esi^^^jbe     loc_454658^^^mov     esi, offset aSSymbolSCaus_0^^^jmp     loc_454936^^^mov     [rbp+var_D8], r13^^^mov     [rbp+var_D0], r13^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^ja      loc_4543F8^^^jmp     loc_454669^^^mov     rbx, r12^^^jmp     loc_4542D8^^^xor     r11d, r11d^^^cmp     r10, r13^^^mov     [rbp+var_B8], 0^^^jbe     loc_4542D8^^^mov     [rbp+var_A8], r12^^^mov     [rbp+var_98], r10^^^mov     r12, rbx^^^mov     [rbp+var_D0], r11^^^nop^^^mov     rax, [r13+8]^^^mov     r14, rax^^^and     r14d, 0FFFFFFFFh^^^cmp     r14, 25h^^^jz      loc_454D58^^^shr     rax, 20h^^^mov     rdx, [rbp+var_A0]^^^mov     r15, [rbp+var_A8]^^^lea     rax, [rax+rax*2]^^^add     r15, [r13+0]^^^cmp     r14, 8^^^lea     rbx, [rdx+rax*8]^^^mov     [rbp+var_40], rbx^^^jz      loc_4553CE^^^test    r14, r14^^^jz      loc_454C10^^^movzx   ecx, byte ptr [rbx+4]^^^mov     rax, rbx^^^mov     rdx, r12^^^shr     cl, 4^^^test    cl, cl^^^jz      loc_454B89^^^cmp     rbx, [r12+3F8h]^^^jz      loc_455379^^^cmp     r14, 10h^^^jz      short loc_454B1D^^^cmp     r14, 7^^^jnz     loc_454BB9^^^mov     eax, 1^^^mov     edi, [rbx]^^^xor     r9d, r9d^^^cmp     r14, 5^^^setz    r9b^^^add     rdi, [rbp+var_C8]^^^mov     rcx, [rbp+var_C0]^^^add     r9d, r9d^^^lea     rdx, [rbp+var_40]^^^mov     [r12+3F8h], rbx^^^or      r9d, eax^^^xor     r8d, r8d^^^mov     rsi, r12^^^mov     [r12+400h], r9d^^^mov     [rsp+100h+var_F8], 0^^^mov     [rsp+100h+var_100], 1^^^call    _dl_lookup_symbol_x^^^mov     rdx, rax^^^mov     rax, [rbp+var_40]^^^mov     [r12+408h], rdx^^^mov     [r12+410h], rax^^^xor     esi, esi^^^test    rax, rax^^^jz      short loc_454BA7^^^movzx   ecx, byte ptr [rax+4]^^^mov     rsi, [rax+8]^^^add     rsi, [rdx]^^^and     ecx, 0Fh^^^cmp     ecx, 0Ah^^^jz      loc_45533F^^^cmp     r14, 25h        ^^^jbe     loc_454D40^^^mov     rbx, r12        ^^^jmp     loc_45454A      ^^^cmp     r14, 12h^^^jz      loc_454B1D^^^cmp     r14, 11h^^^jz      loc_454B1D^^^xor     eax, eax^^^cmp     r14, 24h^^^setz    al^^^jmp     loc_454B22^^^mov     rcx, [rbp+var_40]^^^test    rcx, rcx^^^jz      loc_454EE4^^^mov     rax, [rdx+440h]^^^cmp     rax, 1^^^jbe     loc_4552E6^^^mov     rdx, [r13+10h]^^^add     rdx, [rcx+8]^^^sub     rdx, rax^^^mov     [r15+8], rdx^^^mov     qword ptr [r15], offset _dl_tlsdesc_return^^^nop^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^ja      loc_454AA0^^^mov     r11, [rbp+var_D0]^^^mov     rbx, r12^^^mov     r12, [rbp+var_A8]^^^test    r11, r11^^^jz      loc_4542D8^^^cmp     [rbp+var_B8], r11^^^jb      loc_4542D8^^^mov     r15, r12^^^mov     r14, [rbp+var_B8]^^^mov     r12, rbx^^^mov     rbx, r11^^^jmp     short loc_454C6D^^^add     rbx, 18h^^^cmp     rbx, r14^^^ja      loc_454A68^^^mov     rax, [rbx+8]^^^cmp     eax, 25h^^^jnz     short loc_454C60^^^shr     rax, 20h^^^mov     rcx, [rbp+var_A0]^^^mov     r13, r15^^^lea     rax, [rax+rax*2]^^^add     r13, [rbx]^^^lea     rdx, [rcx+rax*8]^^^mov     rax, r12^^^mov     [rbp+var_40], rdx^^^movzx   ecx, byte ptr [rdx+4]^^^shr     cl, 4^^^test    cl, cl^^^jz      short loc_454D09^^^cmp     rdx, [r12+3F8h]^^^jz      loc_4553E5^^^mov     edi, [rdx]^^^mov     rcx, [rbp+var_C0]^^^xor     r9d, r9d^^^add     rdi, [rbp+var_C8]^^^mov     [r12+3F8h], rdx^^^lea     rdx, [rbp+var_40]^^^mov     dword ptr [r12+400h], 0^^^xor     r8d, r8d^^^mov     rsi, r12^^^mov     [rsp+100h+var_F8], 0^^^mov     [rsp+100h+var_100], 1^^^call    _dl_lookup_symbol_x^^^mov     rdx, [rbp+var_40]^^^mov     [r12+408h], rax^^^mov     [r12+410h], rdx^^^test    rdx, rdx^^^jz      short loc_454D25^^^mov     rcx, [rax]^^^movzx   eax, byte ptr [rdx+4]^^^mov     rsi, [rdx+8]^^^and     eax, 0Fh^^^cmp     eax, 0Ah^^^jz      loc_45540D^^^mov     rax, [rbx+10h]^^^add     rax, [r12]^^^call    rax^^^mov     [r13+0], rax^^^jmp     loc_454C60^^^jmp     ds:off_4A0430[r14*8]^^^add     rsi, [r13+10h]  ^^^mov     [r15], rsi^^^jmp     loc_454C10^^^cmp     [rbp+var_D0], 0^^^jz      loc_454ED1^^^mov     [rbp+var_B8], r13^^^add     r13, 18h^^^cmp     [rbp+var_98], r13^^^ja      loc_454AA0^^^jmp     loc_454C21^^^sub     rsi, r15        ^^^add     rsi, [r13+10h]^^^movsxd  rax, esi^^^mov     [r15], esi^^^cmp     rsi, rax^^^jz      loc_454C10^^^mov     esi, offset aSSymbolSCauses^^^mov     rax, [r12+68h]^^^mov     ecx, [rbx]^^^mov     edi, 2^^^add     rcx, [rax+8]^^^mov     rax, cs:_dl_argv^^^mov     rdx, [rax]^^^mov     eax, offset aProgramNameUnk^^^test    rdx, rdx^^^cmovz   rdx, rax^^^xor     eax, eax^^^call    _dl_dprintf^^^jmp     loc_454C10^^^mov     rax, [r13+10h]  ^^^add     rax, [r12]^^^call    rax^^^mov     [r15], rax^^^jmp     loc_454C10^^^mov     rax, [rbp+var_40]^^^test    rax, rax^^^jz      loc_454C10^^^mov     rdx, [rbx+10h]^^^cmp     [rax+10h], rdx^^^mov     rdi, r15^^^cmovbe  rdx, [rax+10h]^^^call    memcpy^^^mov     rax, [rbp+var_40]^^^mov     rdx, [rbx+10h]^^^cmp     [rax+10h], rdx^^^ja      loc_45536F^^^jnb     loc_454C10^^^cmp     cs:_dl_verbose, 0^^^mov     esi, offset aSSymbolSHasDif^^^jnz     loc_454D9E^^^jmp     loc_454C10^^^mov     rcx, [rbp+var_40]^^^test    rcx, rcx^^^jz      loc_454C10^^^mov     rax, [rdx+440h]^^^cmp     rax, 1^^^jbe     loc_4552C0^^^mov     rdx, [r13+10h]^^^add     rdx, [rcx+8]^^^sub     rdx, rax^^^mov     [r15], rdx^^^jmp     loc_454C10^^^test    rdx, rdx        ^^^jz      loc_454C10^^^mov     rax, [rdx+448h]^^^mov     [r15], rax^^^jmp     loc_454C10^^^add     rsi, [r13+10h]  ^^^mov     ecx, 0FFFFFFFFh^^^cmp     rsi, rcx^^^mov     [r15], esi^^^jbe     loc_454C10^^^mov     esi, offset aSSymbolSCaus_0^^^jmp     loc_454D9E^^^mov     rdx, [rbp+var_40]^^^test    rdx, rdx^^^jz      loc_454C10^^^mov     rax, [r13+10h]^^^add     rax, [rdx+8]^^^mov     [r15], rax^^^jmp     loc_454C10^^^mov     rax, [r13+10h]^^^mov     [r15+8], rax^^^mov     qword ptr [r15], offset _dl_tlsdesc_undefweak^^^jmp     loc_454658^^^mov     [rbp+var_B8], r13^^^mov     [rbp+var_D0], r13^^^jmp     loc_454C10^^^mov     rax, [r13+10h]^^^mov     [r15+8], rax^^^mov     qword ptr [r15], offset _dl_tlsdesc_undefweak^^^jmp     loc_454C10^^^cmp     rsi, 24h^^^jnz     loc_45530C^^^mov     rsi, [rbx+290h]^^^mov     [rdx+8], rax^^^mov     rcx, [rbx]^^^add     rcx, [rsi+8]^^^mov     [rdx], rcx^^^jmp     loc_45425B^^^mov     rsi, rdx^^^sub     rsi, [rbx+3E8h]^^^lea     rcx, [rcx+rsi*2]^^^mov     [rdx], rcx^^^jmp     loc_45425B^^^mov     ecx, offset __PRETTY_FUNCTION___10872^^^mov     edx, 1CCh^^^mov     esi, offset a__SysdepsX86_0^^^mov     edi, offset aRelocR_info0xf^^^call    __assert_fail^^^mov     rax, [r13+10h]^^^add     rax, [rbx]^^^mov     [r15], rax^^^jmp     loc_454658^^^cmp     word ptr [rax+6], 0^^^jz      loc_454540^^^mov     edi, [rbp+var_B0]^^^test    edi, edi^^^jnz     loc_454540^^^mov     [rbp+var_E8], rdx^^^call    rsi^^^mov     rdx, [rbp+var_E8]^^^mov     rsi, rax^^^jmp     loc_454540^^^mov     rdi, cs:_dl_profile^^^mov     qword ptr [rax+10h], offset _dl_runtime_profile^^^test    rdi, rdi^^^jz      loc_45413D^^^mov     rsi, rbx^^^call    _dl_name_match_p^^^test    eax, eax^^^jz      loc_45413D^^^mov     cs:_dl_profile_map, rbx^^^jmp     loc_45413D^^^mov     esi, offset aSSymbolSHasDif^^^jmp     loc_454936^^^cmp     word ptr [rdx+6], 0^^^jz      loc_45479B^^^cmp     [rbp+var_B0], 0^^^jnz     loc_45479B^^^add     rcx, rsi^^^call    rcx^^^jmp     loc_45479B^^^mov     rax, [rbx+50h]^^^mov     esi, offset aSNoPltrelFound^^^test    rax, rax^^^jz      short loc_45501C^^^mov     rsi, [rax+8]^^^mov     edi, 20h^^^call    calloc^^^test    rax, rax^^^mov     [rbx+328h], rax^^^jnz     loc_454302^^^mov     esi, offset aSOutOfMemoryTo^^^mov     rax, cs:_dl_argv^^^mov     rcx, [rbx+8]^^^mov     edi, 2^^^mov     rdx, [rax]^^^mov     eax, offset aProgramNameUnk^^^test    rdx, rdx^^^cmovz   rdx, rax^^^xor     eax, eax^^^call    _dl_dprintf^^^mov     edi, 7Fh        ^^^call    _exit^^^cmp     r14, 10h^^^jz      loc_4550FF^^^cmp     r14, 7^^^jz      loc_4550FF^^^cmp     r14, 12h^^^jz      loc_4550FF^^^cmp     r14, 11h^^^jz      loc_4550FF^^^xor     edx, edx^^^cmp     r14, 24h^^^setz    dl^^^xor     eax, eax^^^cmp     r14, 5^^^setz    al^^^add     eax, eax^^^or      eax, edx^^^cmp     eax, [rbx+400h]^^^jnz     loc_454478^^^mov     rax, [rbx+410h]^^^mov     rdx, [rbx+408h]^^^mov     [rbp+var_40], rax^^^jmp     loc_454522^^^mov     r12, [rbp+var_E0]^^^mov     edx, [r12+10h]^^^mov     rsi, [r12+8]^^^mov     rdi, [r12]^^^call    mprotect^^^test    eax, eax^^^js      short loc_455109^^^mov     r12, [r12+18h]^^^test    r12, r12^^^jz      loc_454317^^^jmp     short loc_4550B4^^^cmp     dword ptr [r13+8], 25h^^^jnz     short loc_4550F1^^^mov     rax, [r13+10h]^^^add     rax, [rbx]^^^mov     rdx, [r13+0]^^^mov     [rdx+r12], rax^^^add     r13, 18h^^^cmp     r13, r14^^^jbe     short loc_4550DB^^^jmp     loc_4542D8^^^mov     edx, 1^^^jmp     loc_45507D^^^mov     ecx, offset aCannotRestoreS^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rsi, [rbx+8]^^^xor     edx, edx^^^mov     edi, fs:[rax]^^^call    _dl_signal_error^^^cmp     dword ptr [r12+400h], 0^^^jnz     loc_454706^^^mov     rdx, [r12+410h]^^^mov     rax, [r12+408h]^^^mov     [rbp+var_40], rdx^^^jmp     loc_45477F^^^movzx   edx, word ptr [rbx+2B0h]^^^mov     rax, [rbx+2A0h]^^^imul    rcx, rdx, 38h^^^add     rcx, rax^^^cmp     rax, rcx^^^jnb     loc_454117^^^mov     r13, rax^^^mov     [rbp+var_E0], 0^^^mov     r15, 2FFFFFFFFh^^^mov     r14d, r12d^^^jmp     short loc_4551B2^^^lea     rsi, ds:0[rdx*8]^^^mov     rcx, rdx^^^add     r13, 38h^^^shl     rcx, 6^^^sub     rcx, rsi^^^add     rcx, rax^^^cmp     r13, rcx^^^jnb     loc_455288^^^mov     rcx, r15^^^and     rcx, [r13+0]^^^cmp     rcx, 1^^^jnz     short loc_455190^^^mov     rcx, [r13+10h]^^^mov     rdx, cs:_dl_pagesize^^^sub     rsp, 30h^^^lea     r12, [rsp+130h+var_111]^^^lea     rsi, [rcx+rdx-1]^^^add     rsi, [r13+28h]^^^mov     rax, rdx^^^neg     rax^^^mov     rdi, rcx^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^and     rdi, rax^^^mov     edx, 3^^^and     rsi, rax^^^sub     rsi, rdi^^^add     rdi, [rbx]^^^mov     [r12+8], rsi^^^mov     [r12], rdi^^^call    mprotect^^^test    eax, eax^^^js      loc_455290^^^mov     eax, [r13+4]^^^movzx   edx, word ptr [rbx+2B0h]^^^and     eax, 7^^^lea     ecx, ds:0[rax*4]^^^mov     eax, 73516240h^^^sar     eax, cl^^^and     eax, 0Fh^^^mov     [r12+10h], eax^^^mov     rax, [rbp+var_E0]^^^mov     [rbp+var_E0], r12^^^mov     [r12+18h], rax^^^mov     rax, [rbx+2A0h]^^^jmp     loc_455190^^^mov     rsi, [rbx+8]^^^test    r12d, r12d^^^mov     edx, offset aLazy^^^mov     eax, offset unk_49A0C9^^^cmovz   rdx, rax^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_455277^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^mov     edi, offset aRelocationProc^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_454109^^^mov     r12d, r14d^^^jmp     loc_454122^^^mov     ecx, offset aCannotMakeSegm^^^jmp     loc_45510E^^^mov     rdi, rdx^^^mov     [rbp+var_E8], rdx^^^call    _dl_allocate_static_tls^^^mov     rdx, [rbp+var_E8]^^^mov     rax, [rbp+var_40]^^^mov     rcx, [rdx+440h]^^^jmp     loc_45463E^^^mov     rdi, rdx^^^mov     [rbp+var_E8], rdx^^^call    _dl_allocate_static_tls^^^mov     rdx, [rbp+var_E8]^^^mov     rcx, [rbp+var_40]^^^mov     rax, [rdx+440h]^^^jmp     loc_454E56^^^mov     rdi, rdx^^^mov     [rbp+var_E8], rdx^^^call    _dl_allocate_static_tls^^^mov     rdx, [rbp+var_E8]^^^mov     rcx, [rbp+var_40]^^^mov     rax, [rdx+440h]^^^jmp     loc_454BF9^^^mov     edx, 1^^^mov     rdi, rbx^^^call    _dl_reloc_bad_type^^^mov     rdi, rdx^^^mov     [rbp+var_E8], rdx^^^call    _dl_allocate_static_tls^^^mov     rdx, [rbp+var_E8]^^^mov     rax, [rbp+var_40]^^^mov     rcx, [rdx+440h]^^^jmp     loc_45498E^^^cmp     word ptr [rax+6], 0^^^jz      loc_454BA7^^^cmp     [rbp+var_B0], 0^^^jnz     loc_454BA7^^^mov     [rbp+var_E8], rdx^^^call    rsi^^^mov     rdx, [rbp+var_E8]^^^mov     rsi, rax^^^jmp     loc_454BA7^^^mov     esi, offset aSSymbolSHasDif^^^jmp     loc_454D9E^^^cmp     r14, 10h^^^jz      short loc_4553DE^^^cmp     r14, 7^^^jz      short loc_4553DE^^^cmp     r14, 12h^^^jz      short loc_4553DE^^^cmp     r14, 11h^^^jz      short loc_4553DE^^^xor     edx, edx^^^cmp     r14, 24h^^^setz    dl^^^xor     eax, eax^^^cmp     r14, 5^^^setz    al^^^add     eax, eax^^^or      eax, edx^^^cmp     eax, [r12+400h]^^^jnz     loc_454B0D^^^mov     rax, [r12+410h]^^^mov     rdx, [r12+408h]^^^mov     [rbp+var_40], rax^^^jmp     loc_454B89^^^mov     rax, [r13+10h]^^^add     rax, [r12]^^^mov     [r15], rax^^^jmp     loc_454C10^^^mov     edx, 1^^^jmp     short loc_45539A^^^cmp     dword ptr [r12+400h], 0^^^jnz     loc_454CAF^^^mov     rdx, [r12+410h]^^^mov     rax, [r12+408h]^^^mov     [rbp+var_40], rdx^^^jmp     loc_454D09^^^cmp     word ptr [rdx+6], 0^^^jz      loc_454D25^^^cmp     [rbp+var_B0], 0^^^jnz     loc_454D25^^^add     rcx, rsi^^^call    rcx^^^jmp     loc_454D25^^^
_Unwind_Resume_or_Rethrow$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_20], r12^^^mov     [rbp+var_38], rax^^^mov     r12, rdi^^^mov     [rbp+var_30], rdx^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     [rbp+var_8], r15^^^sub     rsp, 220h^^^cmp     qword ptr [rdi+10h], 0^^^jnz     short loc_492C40^^^call    _Unwind_RaiseException^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^lea     rbx, [rbp+var_220]^^^mov     rdx, [rbp+8]^^^lea     rsi, [rbp+arg_0]^^^mov     rdi, rbx^^^call    uw_init_context_1^^^lea     rdi, [rbp+var_130]^^^mov     ecx, 1Eh^^^mov     rsi, rbx^^^rep movsq^^^lea     rsi, [rbp+var_130]^^^mov     rdi, r12^^^call    _Unwind_ForcedUnwind_Phase2^^^cmp     eax, 7^^^jz      short loc_492C88^^^call    abort^^^lea     rsi, [rbp+var_130]^^^mov     rdi, rbx^^^call    uw_install_context_1^^^mov     r12, [rbp+var_98]^^^mov     rdi, [rbp+var_A0]^^^mov     rbx, rax^^^mov     rsi, r12^^^call    _Unwind_DebugHook^^^mov     rcx, rbx^^^mov     [rbp+rbx+8], r12^^^mov     rax, [rbp+var_38]^^^lea     rcx, [rbp+rcx+8]^^^mov     rdx, [rbp+var_30]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^mov     rbp, [rbp+var_s0]^^^mov     rsp, rcx^^^retn^^^
_fxstat$$$cmp     edi, 1          ^^^mov     eax, esi^^^ja      short loc_40EFF0^^^movsxd  rdi, eax^^^mov     rsi, rdx^^^mov     eax, 5^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_40F004^^^rep retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[rdx], eax^^^or      rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_Unwind_RaiseException$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^lea     rsi, [rbp+arg_0]^^^push    r14^^^push    r13^^^lea     r13, [rbp+var_220]^^^push    r12^^^mov     r12, rdi^^^mov     rdi, r13^^^push    rbx^^^lea     rbx, [rbp+var_130]^^^push    rdx^^^push    rax^^^sub     rsp, 368h^^^mov     rdx, [rbp+8]^^^call    uw_init_context_1^^^mov     ecx, 1Eh^^^mov     rdi, rbx^^^mov     rsi, r13^^^rep movsq^^^jmp     short loc_49294F^^^test    eax, eax^^^jnz     short loc_492980^^^mov     rax, [rbp+var_250]^^^test    rax, rax^^^jz      short loc_492940^^^mov     r8, rbx^^^mov     rcx, r12^^^mov     rdx, [r12]^^^mov     esi, 1^^^mov     edi, 1^^^call    rax^^^cmp     eax, 6^^^jz      short loc_492990^^^cmp     eax, 8^^^jnz     short loc_492980^^^lea     rsi, [rbp+var_3A0]^^^mov     rdi, rbx^^^call    uw_update_context^^^lea     rsi, [rbp+var_3A0]^^^mov     rdi, rbx^^^call    uw_frame_state_for^^^cmp     eax, 5^^^jnz     short loc_492910^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     eax, 3^^^jmp     short loc_492963^^^mov     rdx, [rbx+0C0h]^^^mov     rax, [rbp+var_A0]^^^mov     ecx, 1Eh^^^mov     qword ptr [r12+10h], 0^^^mov     rdi, rbx^^^mov     rsi, r13^^^shr     rdx, 3Fh^^^sub     rax, rdx^^^mov     [r12+18h], rax^^^rep movsq^^^mov     rsi, rbx^^^mov     rdi, r12^^^call    _Unwind_RaiseException_Phase2^^^cmp     eax, 7^^^jnz     short loc_492963^^^mov     rsi, rbx^^^mov     rdi, r13^^^call    uw_install_context_1^^^mov     r12, [rbp+var_98]^^^mov     rdi, [rbp+var_A0]^^^mov     rbx, rax^^^mov     rsi, r12^^^call    _Unwind_DebugHook^^^mov     rcx, rbx^^^mov     [rbp+rbx+8], r12^^^mov     rax, [rbp+var_38]^^^lea     rcx, [rbp+rcx+8]^^^mov     rdx, [rbp+var_30]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^mov     rbp, [rbp+var_s0]^^^mov     rsp, rcx^^^retn^^^
_dl_show_scope$$$push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rsi, [rdi+8]^^^mov     rbx, rdi^^^mov     rdx, [rdi+30h]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48BB14^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^xor     eax, eax^^^mov     edi, offset aObjectSLu^^^call    _dl_debug_printf^^^mov     rdx, [rbx+380h]^^^test    rdx, rdx^^^jz      loc_48BBE2^^^movsxd  rax, ebp^^^cmp     qword ptr [rdx+rax*8], 0^^^lea     r13, ds:0[rax*8]^^^lea     r14, ds:8[rax*8]^^^jz      loc_48BBF0^^^xchg    ax, ax^^^xor     eax, eax^^^mov     esi, ebp^^^mov     edi, offset aScopeU^^^call    _dl_debug_printf^^^mov     rax, [rbx+380h]^^^mov     rax, [rax+r13]^^^mov     edx, [rax+8]^^^test    edx, edx^^^jz      short loc_48BBB6^^^xor     r12d, r12d^^^nop     dword ptr [rax+rax+00h]^^^mov     rax, [rax]^^^mov     edx, r12d^^^mov     rax, [rax+rdx*8]^^^mov     rsi, [rax+8]^^^cmp     byte ptr [rsi], 0^^^jnz     short loc_48BB95^^^mov     rax, cs:_dl_argv^^^mov     rsi, [rax]^^^xor     eax, eax^^^mov     edi, 4B2C2Eh^^^add     r12d, 1^^^call    _dl_debug_printf_c^^^mov     rax, [rbx+380h]^^^mov     rax, [rax+r13]^^^cmp     [rax+8], r12d^^^ja      short loc_48BB78^^^xor     eax, eax^^^mov     edi, (offset aCallingFiniSLu+18h)^^^add     ebp, 1^^^call    _dl_debug_printf_c^^^mov     rax, [rbx+380h]^^^lea     rdx, [r14+8]^^^cmp     qword ptr [rax+r14], 0^^^jz      short loc_48BBF0^^^mov     r13, r14^^^mov     r14, rdx^^^jmp     loc_48BB50^^^mov     edi, offset aNoScope^^^xor     eax, eax^^^call    _dl_debug_printf^^^xchg    ax, ax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^mov     edi, (offset aCallingFiniSLu+18h)^^^xor     eax, eax^^^jmp     _dl_debug_printf^^^
__deregister_frame_info_bases$$$push    r12^^^test    rdi, rdi^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^jz      loc_494680^^^mov     eax, [rdi]^^^test    eax, eax^^^jz      loc_494680^^^mov     r12, cs:qword_6C1FD0^^^test    r12, r12^^^jz      short loc_4945E2^^^lea     rdi, object_mutex^^^call    near ptr 0^^^mov     rbx, cs:unseen_objects^^^test    rbx, rbx^^^jz      short loc_494613^^^cmp     [rbx+18h], rbp^^^jnz     short loc_494606^^^jmp     loc_4946A2^^^cmp     [rbx+18h], rbp^^^jz      short loc_494652^^^lea     rax, [rbx+28h]^^^mov     rbx, [rbx+28h]^^^test    rbx, rbx^^^jnz     short loc_494600^^^mov     rbx, cs:seen_objects^^^test    rbx, rbx^^^jz      short loc_494659^^^lea     rax, seen_objects^^^jmp     short loc_494646^^^mov     rdx, [rbx+18h]^^^cmp     [rdx], rbp^^^jz      short loc_494690^^^lea     rax, [rbx+28h]^^^mov     rbx, [rbx+28h]^^^test    rbx, rbx^^^jz      short loc_494659^^^test    byte ptr [rbx+20h], 1^^^jnz     short loc_494630^^^cmp     [rbx+18h], rbp^^^jnz     short loc_494639^^^mov     rdx, [rbx+28h]^^^mov     [rax], rdx^^^test    r12, r12^^^jz      short loc_49466A^^^lea     rdi, object_mutex^^^call    near ptr 0^^^test    rbx, rbx^^^jz      short loc_4946AB^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^xor     ebx, ebx^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     rdx, [rbx+28h]^^^mov     [rax], rdx^^^mov     rdi, [rbx+18h]^^^call    free^^^jmp     short loc_494659^^^lea     rax, unseen_objects^^^jmp     short loc_494652^^^call    abort^^^
_L_lock_136$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40274D^^^
_L_lock_135$$$lea     rdi, lock_3^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4244A5^^^
malloc_stats$$$push    r15             ^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 48h^^^mov     edx, cs:__libc_malloc_initialized^^^mov     r12d, dword ptr cs:qword_6C29B8^^^test    edx, edx^^^js      loc_409328^^^mov     rax, cs:stderr^^^mov     r13d, r12d^^^mov     ebx, offset main_arena^^^xor     ebp, ebp^^^mov     r14d, 1^^^mov     edx, [rax+74h]^^^mov     [rsp+78h+var_6C], edx^^^or      edx, 2^^^mov     [rax+74h], edx^^^jmp     short loc_4091D3^^^add     ebp, 1^^^mov     esi, r14d^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4091ED^^^lock cmpxchg [rbx], esi^^^jnz     _L_lock_14224^^^jmp     short loc_4091F6^^^cmpxchg [rbx], esi^^^jnz     _L_lock_14224^^^lea     rdi, [rsp+78h+var_68]^^^mov     rsi, rbx^^^call    mALLINFo^^^mov     eax, [rsp+78h+var_68]^^^mov     rdi, cs:stderr^^^mov     edx, ebp^^^mov     esi, offset aArenaD^^^mov     r15d, [rsp+78h+var_4C]^^^mov     [rsp+78h+var_70], eax^^^xor     eax, eax^^^call    fprintf^^^mov     edx, [rsp+78h+var_70]^^^mov     rdi, cs:stderr^^^mov     esi, offset aSystemBytes10u^^^xor     eax, eax^^^add     r13d, r15d^^^call    fprintf^^^mov     rdi, cs:stderr^^^mov     edx, r15d^^^mov     esi, offset aInUseBytes10u^^^xor     eax, eax^^^call    fprintf^^^add     r12d, [rsp+78h+var_70]^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40926E^^^lock dec dword ptr [rbx]^^^jnz     _L_unlock_14260^^^jmp     short loc_409276^^^dec     dword ptr [rbx]^^^jnz     _L_unlock_14260^^^mov     rbx, [rbx+868h]^^^cmp     rbx, offset main_arena^^^jnz     loc_4091D0^^^mov     rcx, cs:stderr^^^mov     edx, 14h^^^mov     esi, 1^^^mov     edi, offset aTotalIncl_Mmap^^^call    fwrite^^^mov     rdi, cs:stderr^^^mov     edx, r12d^^^mov     esi, offset aSystemBytes10u^^^xor     eax, eax^^^call    fprintf^^^mov     rdi, cs:stderr^^^mov     edx, r13d^^^mov     esi, offset aInUseBytes10u^^^xor     eax, eax^^^call    fprintf^^^mov     edx, cs:dword_6C29B0^^^mov     rdi, cs:stderr^^^mov     esi, offset aMaxMmapRegions^^^xor     eax, eax^^^call    fprintf^^^mov     rdx, cs:qword_6C29C0^^^mov     rdi, cs:stderr^^^mov     esi, offset aMaxMmapBytes10^^^xor     eax, eax^^^call    fprintf^^^mov     rax, cs:stderr^^^mov     edx, [rsp+78h+var_6C]^^^or      [rax+74h], edx^^^add     rsp, 48h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^call    ptmalloc_init_part_8^^^jmp     loc_4091A3^^^
__mpn_sub_n$$$xor     r8, r8^^^mov     r10, [rsi]^^^mov     r11, [rdx]^^^lea     rsi, [rsi+rcx*8-8]^^^lea     rdx, [rdx+rcx*8-8]^^^lea     rdi, [rdi+rcx*8-10h]^^^mov     eax, ecx^^^neg     rcx^^^and     eax, 3^^^jz      short loc_4643A1^^^add     rcx, rax^^^cmp     eax, 2^^^jl      short loc_4643B0^^^jz      short loc_4643B5^^^shr     r8, 1^^^jmp     short loc_4643F4^^^shr     r8, 1^^^mov     r8, r10^^^mov     r9, r11^^^lea     rcx, [rcx+4]^^^jmp     short loc_4643E2^^^shr     r8, 1^^^jmp     short loc_464415^^^shr     r8, 1^^^mov     r8, r10^^^mov     r9, r11^^^jmp     short loc_464406^^^sbb     r10, r11^^^mov     [rdi+8], r10^^^mov     eax, ecx^^^adc     eax, eax^^^retn^^^mov     r8, [rsi+rcx*8-18h]^^^mov     r9, [rdx+rcx*8-18h]^^^sbb     r10, r11^^^mov     [rdi+rcx*8-18h], r10^^^mov     r10, [rsi+rcx*8-10h]^^^mov     r11, [rdx+rcx*8-10h]^^^sbb     r8, r9^^^mov     [rdi+rcx*8-10h], r8^^^mov     r8, [rsi+rcx*8-8]^^^mov     r9, [rdx+rcx*8-8]^^^sbb     r10, r11^^^mov     [rdi+rcx*8-8], r10^^^mov     r10, [rsi+rcx*8]^^^mov     r11, [rdx+rcx*8]^^^sbb     r8, r9^^^mov     [rdi+rcx*8], r8^^^jrcxz   loc_4643C0^^^lea     rcx, [rcx+4]^^^jmp     short loc_4643D0^^^
_IO_wdefault_doallocate$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^xor     r9d, r9d^^^mov     [rsp+var_8], r12^^^mov     rbx, rdi^^^sub     rsp, 18h^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^mov     esi, 2000h^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbp, rax^^^jz      short loc_4272C0^^^lea     r12, [rax+8000h]^^^mov     rax, [rbx+0A0h]^^^mov     edx, [rbx+74h]^^^mov     rdi, [rax+30h]^^^test    rdi, rdi^^^jz      short loc_4272AD^^^test    dl, 8^^^jz      short loc_4272D8^^^and     edx, 0FFFFFFF7h^^^mov     [rax+30h], rbp^^^mov     [rax+38h], r12^^^mov     [rbx+74h], edx^^^mov     eax, 1^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^mov     rax, [rax+38h]^^^sub     rax, rdi^^^sar     rax, 2^^^lea     rsi, ds:0FFFh[rax*4]^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^mov     rax, [rbx+0A0h]^^^mov     edx, [rbx+74h]^^^jmp     short loc_4272AD^^^
__lll_unlock_wake_private$$$push    rsi^^^push    rdx^^^mov     dword ptr [rdi], 0^^^mov     esi, 81h^^^mov     edx, 1^^^mov     eax, 0CAh^^^syscall^^^pop     rdx^^^pop     rsi^^^retn^^^
__strnlen_sse2$$$mov     rax, rsi        ^^^test    rsi, rsi^^^jz      short locret_43056B^^^pxor    xmm2, xmm2^^^mov     rcx, rdi^^^mov     r8, rdi^^^mov     r9, 10h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm1, xmm2^^^pcmpeqb xmm2, xmmword ptr [rdi]^^^or      r10d, 0FFFFFFFFh^^^sub     rcx, rdi^^^shl     r10d, cl^^^sub     r9, rcx^^^pmovmskb edx, xmm2^^^and     edx, r10d^^^jnz     short loc_43056C^^^sub     rsi, r9^^^jbe     short locret_43056B^^^movdqa  xmm0, xmmword ptr [rdi+10h]^^^lea     rdi, [rdi+10h]^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm0^^^test    edx, edx^^^jnz     short loc_43056C^^^sub     rsi, 10h^^^ja      short loc_430550^^^retn^^^sub     rdi, r8^^^bsf     edx, edx^^^add     rdx, rdi^^^cmp     rax, rdx^^^cmovnb  rax, rdx^^^retn^^^
printf$$$sub     rsp, 0D8h       ^^^test    al, al^^^mov     [rsp+0D8h+var_B0], rsi^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_4020BB^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^mov     rsi, rdi^^^mov     rdi, cs:stdout^^^lea     rdx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 8^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    vfprintf^^^add     rsp, 0D8h^^^retn^^^
_dl_debug_state$$$rep retn^^^
_L_unlock_613$$$lea     rdi, lock_0^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4157E7^^^
is_trusted_path_normalize$$$push    rbp^^^xor     eax, eax^^^test    rsi, rsi^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^push    rdx^^^jz      loc_400A0B^^^cmp     byte ptr [rdi], 3Ah^^^jnz     short loc_400945^^^inc     rdi^^^dec     rsi^^^add     rsi, 20h^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rsi^^^lea     r13, [rsp+30h+var_21]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     r15, r13^^^jmp     short loc_4009B4^^^cmp     al, 2Fh^^^jnz     short loc_4009AB^^^cmp     byte ptr [rdi+1], 2Eh^^^jnz     short loc_40099F^^^mov     dl, [rdi+2]^^^cmp     dl, 2Eh^^^jnz     short loc_400990^^^mov     cl, [rdi+3]^^^test    cl, cl^^^jz      short loc_40097C^^^cmp     cl, 2Fh^^^jnz     short loc_400990^^^cmp     r15, r13^^^jbe     short loc_40098A^^^dec     r15^^^cmp     byte ptr [r15], 2Fh^^^jnz     short loc_40097C^^^add     rdi, 3^^^jmp     short loc_4009B4^^^test    dl, dl^^^jz      short loc_400999^^^cmp     dl, 2Fh^^^jnz     short loc_40099F^^^add     rdi, 2^^^jmp     short loc_4009B4^^^cmp     r15, r13^^^jbe     short loc_4009AB^^^cmp     byte ptr [r15-1], 2Fh^^^jz      short loc_4009B1^^^mov     [r15], al^^^inc     r15^^^inc     rdi^^^mov     al, [rdi]^^^test    al, al^^^jnz     short loc_40095E^^^cmp     r15, r13^^^jz      short loc_4009C6^^^cmp     byte ptr [r15-1], 2Fh^^^jz      short loc_4009CD^^^mov     byte ptr [r15], 2Fh^^^inc     r15^^^xor     ebx, ebx^^^mov     r14d, offset system_dirs^^^sub     r15, r13^^^mov     r12, ds:system_dirs_len[rbx*8]^^^cmp     r15, r12^^^jb      short loc_4009F7^^^mov     rdx, r12^^^mov     rsi, r13^^^mov     rdi, r14^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_400A09^^^inc     rbx^^^lea     r14, [r14+r12+1]^^^cmp     rbx, 4^^^jnz     short loc_4009D8^^^xor     eax, eax^^^jmp     short loc_400A0B^^^mov     al, 1^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
_IO_file_xsgetn_maybe_mmap$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^mov     rbp, rsi^^^mov     r12, rdx^^^call    decide_maybe_mmap^^^mov     rax, [rbx+0D8h]^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^mov     rax, [rax+40h]^^^add     rsp, 18h^^^jmp     rax^^^
_IO_switch_to_get_mode$$$mov     rax, [rdi+28h]^^^cmp     rax, [rdi+20h]^^^push    rbx^^^mov     rbx, rdi^^^ja      short loc_42BAF0^^^mov     edx, [rbx]^^^test    dh, 1^^^jnz     short loc_42BAE0^^^cmp     [rbx+10h], rax^^^mov     rcx, [rbx+38h]^^^mov     [rbx+18h], rcx^^^jnb     short loc_42BAC7^^^mov     [rbx+10h], rax^^^and     dh, 0F7h^^^mov     [rbx+8], rax^^^mov     [rbx+30h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx], edx^^^xor     eax, eax^^^pop     rbx^^^retn^^^mov     rcx, [rbx+50h]^^^mov     [rbx+18h], rcx^^^jmp     short loc_42BAC7^^^mov     rax, [rdi+0D8h]^^^mov     esi, 0FFFFFFFFh^^^call    qword ptr [rax+18h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42BADA^^^mov     rax, [rbx+28h]^^^jmp     short loc_42BAAE^^^
call_dl_lookup$$$push    rbx^^^mov     rbx, rdi^^^xor     r9d, r9d^^^sub     rsp, 10h^^^mov     rsi, [rdi]^^^mov     r8, [rdi+10h]^^^mov     rdx, [rdi+28h]^^^mov     eax, [rbx+18h]^^^mov     rdi, [rdi+8]^^^mov     rcx, [rsi+380h]^^^mov     [rsp+18h+var_10], 0^^^mov     [rsp+18h+var_18], eax^^^call    _dl_lookup_symbol_x^^^mov     [rbx], rax^^^add     rsp, 10h^^^pop     rbx^^^retn^^^
__libc_csu_irel$$$push    r12^^^mov     r12d, offset _init_proc^^^mov     rax, 0AAAAAAAAAAAAAAABh^^^sub     r12, 4001D8h^^^sar     r12, 3^^^push    rbp^^^imul    r12, rax^^^push    rbx^^^test    r12, r12^^^jz      short loc_401A12^^^cmp     dword ptr cs:4001E0h, 25h^^^jnz     short loc_401A17^^^mov     eax, 4001D8h^^^mov     rbp, cs:4001D8h^^^xor     ebx, ebx^^^jmp     short loc_401A02^^^lea     rdx, [rbx+rbx*2]^^^lea     rax, ds:4001D8h[rdx*8]^^^mov     rbp, ds:4001D8h[rdx*8]^^^cmp     dword ptr [rax+8], 25h^^^jnz     short loc_401A17^^^add     rbx, 1^^^call    qword ptr [rax+10h]^^^cmp     rbx, r12^^^mov     [rbp+0], rax^^^jnz     short loc_4019E8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     edi, offset aUnexpectedRelo^^^call    __libc_fatal^^^
init_dwarf_reg_size_table$$$mov     cs:dwarf_reg_size_table, 8^^^mov     cs:byte_6C5C61, 8^^^mov     cs:byte_6C5C62, 8^^^mov     cs:byte_6C5C63, 8^^^mov     cs:byte_6C5C64, 8^^^mov     cs:byte_6C5C65, 8^^^mov     cs:byte_6C5C66, 8^^^mov     cs:byte_6C5C67, 8^^^mov     cs:byte_6C5C68, 8^^^mov     cs:byte_6C5C69, 8^^^mov     cs:byte_6C5C6A, 8^^^mov     cs:byte_6C5C6B, 8^^^mov     cs:byte_6C5C6C, 8^^^mov     cs:byte_6C5C6D, 8^^^mov     cs:byte_6C5C6E, 8^^^mov     cs:byte_6C5C6F, 8^^^mov     cs:byte_6C5C70, 8^^^retn^^^
getgid$$$mov     eax, 68h        ^^^syscall^^^retn^^^
_L_lock_5509$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_404FE6^^^
wmemmove$$$shl     rdx, 2^^^jmp     sub_400340^^^
_L_lock_4226$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_458C6D^^^
sub_40A6A0$$$mov     [rdi-7], dl^^^
sub_40A6A3$$$mov     [rdi-6], dx^^^mov     [rdi-4], edx^^^
_IO_mem_finish$$$push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     rbp, [rdi+0F0h]^^^mov     rsi, [rbx+28h]^^^mov     rdi, [rdi+20h]^^^sub     rsi, rdi^^^add     rsi, 1^^^call    realloc^^^mov     [rbp+0], rax^^^mov     rax, [rbx+0F0h]^^^mov     rdx, [rax]^^^test    rdx, rdx^^^jz      short loc_42635D^^^mov     rax, [rbx+28h]^^^sub     rax, [rbx+20h]^^^mov     byte ptr [rdx+rax], 0^^^mov     rax, [rbx+28h]^^^sub     rax, [rbx+20h]^^^mov     rdx, [rbx+0F8h]^^^mov     [rdx], rax^^^mov     qword ptr [rbx+38h], 0^^^add     rsp, 8^^^mov     rdi, rbx^^^xor     esi, esi^^^pop     rbx^^^pop     rbp^^^jmp     _IO_str_finish^^^
_L_lock_1263$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4190A1^^^
sub_425CA8$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
ptmalloc_lock_all$$$mov     eax, cs:__libc_malloc_initialized^^^test    eax, eax^^^jle     locret_402660^^^xor     edx, edx^^^mov     esi, 1^^^mov     eax, edx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_40258A^^^lock cmpxchg cs:list_lock, esi^^^jmp     short loc_402591^^^cmpxchg cs:list_lock, esi^^^test    eax, eax^^^mov     r10, 0FFFFFFFFFFFFFFD0h^^^jz      short loc_4025CF^^^cmp     qword ptr fs:[r10], 0FFFFFFFFFFFFFFFFh^^^jz      loc_402659^^^mov     eax, edx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4025C2^^^lock cmpxchg cs:list_lock, esi^^^jnz     _L_lock_30^^^jmp     short loc_4025CF^^^cmpxchg cs:list_lock, esi^^^jnz     _L_lock_30^^^mov     edx, offset main_arena^^^mov     r9d, 1^^^xor     r8d, r8d^^^nop     dword ptr [rax]^^^mov     esi, r9d^^^mov     eax, r8d^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4025FB^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_48^^^jmp     short loc_402604^^^cmpxchg [rdx], esi^^^jnz     _L_lock_48^^^mov     rdx, [rdx+868h]^^^cmp     rdx, offset main_arena^^^jnz     short loc_4025E0^^^mov     rax, cs:__malloc_hook^^^mov     cs:__malloc_hook, offset malloc_atfork^^^mov     cs:save_malloc_hook, rax^^^mov     rax, cs:__free_hook^^^mov     cs:__free_hook, offset free_atfork^^^mov     cs:save_free_hook, rax^^^mov     rax, fs:[r10]^^^mov     qword ptr fs:[r10], 0FFFFFFFFFFFFFFFFh^^^mov     cs:save_arena, rax^^^add     cs:atfork_recursive_cntr, 1^^^rep retn^^^
_dl_load_cache_lookup$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 48h^^^test    byte ptr cs:_dl_debug_mask, 1^^^jnz     loc_452369^^^mov     rbp, cs:cache^^^test    rbp, rbp^^^jz      loc_451F24^^^cmp     rbp, 0FFFFFFFFFFFFFFFFh^^^jz      loc_451E78^^^mov     r12, cs:cachesize^^^mov     r15, cs:cache_new^^^cmp     r15, 0FFFFFFFFFFFFFFFFh^^^jz      loc_451E90^^^xor     esi, esi^^^mov     edi, offset aEtcLd_so_nohwc^^^call    access^^^mov     rdx, cs:_dl_hwcap_mask^^^mov     rcx, cs:_dl_hwcap^^^mov     [rsp+78h+var_40], eax^^^mov     rax, 8000000000000000h^^^and     rdx, rcx^^^or      rdx, rax^^^not     rdx^^^mov     [rsp+78h+var_48], rdx^^^mov     rdx, cs:cache_new^^^mov     r14d, [rdx+14h]^^^mov     [rsp+78h+var_50], rdx^^^xor     edx, edx^^^sub     r14d, 1^^^js      short loc_451E7A^^^mov     r13d, r14d^^^add     rbp, r12^^^mov     rcx, [rsp+78h+var_50]^^^sar     r13d, 1^^^sub     ebp, r15d^^^movsxd  r12, r13d^^^lea     rax, [r12+r12*2]^^^xor     r12d, r12d^^^mov     esi, [rcx+rax*8+34h]^^^cmp     ebp, esi^^^ja      short loc_451E56^^^jmp     short loc_451E7A^^^lea     r14d, [r13-1]^^^cmp     r14d, r12d^^^jl      short loc_451E78^^^lea     eax, [r14+r12]^^^mov     rdx, [rsp+78h+var_50]^^^mov     r13d, eax^^^shr     r13d, 1Fh^^^add     r13d, eax^^^sar     r13d, 1^^^movsxd  rax, r13d^^^lea     rax, [rax+rax*2]^^^mov     esi, [rdx+rax*8+34h]^^^cmp     ebp, esi^^^jbe     short loc_451E78^^^add     rsi, r15^^^mov     rdi, rbx^^^call    _dl_cache_libcmp^^^cmp     eax, 0^^^jz      loc_452029^^^jge     short loc_451E28^^^lea     r12d, [r13+1]^^^cmp     r14d, r12d^^^jge     short loc_451E31^^^nop     dword ptr [rax]^^^xor     edx, edx^^^add     rsp, 48h^^^mov     rax, rdx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     eax, [rbp+0Ch]^^^xor     edx, edx^^^mov     r14d, eax^^^sub     r14d, 1^^^js      short loc_451E7A^^^mov     r13d, r14d^^^lea     rax, [rax+rax*2]^^^add     r12, rbp^^^sar     r13d, 1^^^movsxd  rcx, r13d^^^lea     r15, [rbp+rax*4+10h]^^^lea     rax, [rcx+rcx*2]^^^sub     r12d, r15d^^^mov     esi, [rbp+rax*4+14h]^^^cmp     r12d, esi^^^jbe     short loc_451E7A^^^mov     dword ptr [rsp+78h+var_50], 0^^^jmp     short loc_451F03^^^lea     r14d, [r13-1]^^^cmp     r14d, dword ptr [rsp+78h+var_50]^^^jl      short loc_451E78^^^mov     eax, dword ptr [rsp+78h+var_50]^^^add     eax, r14d^^^mov     r13d, eax^^^shr     r13d, 1Fh^^^add     r13d, eax^^^sar     r13d, 1^^^movsxd  rax, r13d^^^lea     rax, [rax+rax*2]^^^mov     esi, [rbp+rax*4+14h]^^^cmp     r12d, esi^^^jbe     loc_451E78^^^add     rsi, r15^^^mov     rdi, rbx^^^call    _dl_cache_libcmp^^^cmp     eax, 0^^^jz      loc_45225F^^^jge     short loc_451ED0^^^add     r13d, 1^^^mov     dword ptr [rsp+78h+var_50], r13d^^^jmp     short loc_451ED4^^^mov     edx, 1^^^mov     esi, offset cachesize^^^mov     edi, offset aEtcLd_so_cache^^^call    _dl_sysdep_read_whole_file^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbp, rax^^^jz      loc_451FEB^^^mov     r12, cs:cachesize^^^cmp     r12, 10h^^^jbe     loc_451FE0^^^mov     edx, 0Bh^^^mov     esi, offset aLd_so1_7_0^^^mov     rdi, rax^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_451FFD^^^mov     eax, [rbp+0Ch]^^^mov     cs:cache, rbp^^^lea     rax, [rax+rax*2]^^^lea     rax, ds:17h[rax*4]^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^lea     rdi, [rbp+rax+0]^^^add     rax, 30h^^^cmp     r12, rax^^^mov     cs:cache_new, rdi^^^jb      short loc_451FB2^^^mov     edx, 14h^^^mov     esi, offset aGlibcLd_so_cac^^^call    sub_400370^^^test    eax, eax^^^jz      short loc_451FBD^^^mov     cs:cache_new, 0FFFFFFFFFFFFFFFFh^^^test    rbp, rbp^^^jnz     loc_451D9F^^^mov     ecx, offset __PRETTY_FUNCTION___10588^^^mov     edx, 0ECh^^^mov     esi, offset aDlCache_c^^^mov     edi, offset aCacheVoid0^^^call    __assert_fail^^^mov     rsi, r12^^^mov     rdi, rbp^^^call    munmap^^^mov     cs:cache, 0FFFFFFFFFFFFFFFFh^^^xor     edx, edx^^^jmp     loc_451E7A^^^cmp     r12, 30h^^^jbe     short loc_451FE0^^^mov     edx, 14h^^^mov     esi, offset aGlibcLd_so_cac^^^mov     rdi, rbp^^^call    sub_400370^^^test    eax, eax^^^jnz     short loc_451FE0^^^mov     cs:cache_new, rbp^^^mov     cs:cache, rbp^^^jmp     short loc_451FBD^^^test    r13d, r13d^^^mov     [rsp+78h+var_3C], r13d^^^jle     short loc_45207D^^^lea     eax, [r13-1]^^^mov     rcx, [rsp+78h+var_50]^^^cdqe^^^lea     rax, [rax+rax*2]^^^mov     eax, [rcx+rax*8+34h]^^^cmp     ebp, eax^^^ja      short loc_45206D^^^jmp     short loc_45207D^^^sub     r13d, 1^^^jz      short loc_45207D^^^lea     eax, [r13-1]^^^mov     rdx, [rsp+78h+var_50]^^^cdqe^^^lea     rax, [rax+rax*2]^^^mov     eax, [rdx+rax*8+34h]^^^cmp     ebp, eax^^^jbe     short loc_45207D^^^lea     rsi, [r15+rax]^^^mov     rdi, rbx^^^call    _dl_cache_libcmp^^^test    eax, eax^^^jz      short loc_452050^^^mov     eax, [rsp+78h+var_40]^^^xor     r8d, r8d^^^xor     edx, edx^^^movsxd  r12, r13d^^^test    eax, eax^^^jz      loc_452172^^^jmp     short loc_4520A5^^^add     r8, 1^^^lea     eax, [r13+r8+0]^^^cmp     r14d, eax^^^jl      loc_45222B^^^lea     rax, [r8+r12]^^^mov     rsi, [rsp+78h+var_50]^^^lea     rax, [rax+rax*2]^^^lea     rcx, [rsi+rax*8+30h]^^^lea     eax, [r13+r8+0]^^^cmp     [rsp+78h+var_3C], eax^^^jge     short loc_4520FF^^^mov     eax, [rcx+4]^^^cmp     ebp, eax^^^jbe     loc_45222B^^^lea     rsi, [r15+rax]^^^mov     rdi, rbx^^^mov     [rsp+78h+var_70], rdx^^^mov     [rsp+78h+var_60], rcx^^^mov     [rsp+78h+var_68], r8^^^call    _dl_cache_libcmp^^^test    eax, eax^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, [rsp+78h+var_60]^^^mov     r8, [rsp+78h+var_68]^^^jnz     loc_45222B^^^cmp     dword ptr [rcx], 303h^^^jnz     short loc_452093^^^mov     eax, [rcx+8]^^^cmp     ebp, eax^^^jbe     short loc_452093^^^test    rdx, rdx^^^jz      short loc_452123^^^cmp     cs:_dl_correct_cache_id, 303h^^^jnz     loc_452093^^^mov     rsi, [rsp+78h+var_48]^^^test    [rcx+10h], rsi^^^jnz     loc_452093^^^mov     esi, cs:_dl_osversion^^^test    esi, esi^^^jnz     loc_45237F^^^cmp     cs:_dl_correct_cache_id, 303h^^^lea     rdx, [r15+rax]^^^jnz     loc_452093^^^jmp     loc_45222B^^^add     r8, 1^^^lea     eax, [r13+r8+0]^^^cmp     r14d, eax^^^jl      loc_45222B^^^lea     rax, [r8+r12]^^^mov     rsi, [rsp+78h+var_50]^^^lea     rax, [rax+rax*2]^^^lea     rcx, [rsi+rax*8+30h]^^^lea     eax, [r13+r8+0]^^^cmp     [rsp+78h+var_3C], eax^^^jge     short loc_4521C8^^^mov     eax, [rcx+4]^^^cmp     ebp, eax^^^jbe     loc_45222B^^^lea     rsi, [r15+rax]^^^mov     rdi, rbx^^^mov     [rsp+78h+var_70], rdx^^^mov     [rsp+78h+var_60], rcx^^^mov     [rsp+78h+var_68], r8^^^call    _dl_cache_libcmp^^^test    eax, eax^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, [rsp+78h+var_60]^^^mov     r8, [rsp+78h+var_68]^^^jnz     short loc_45222B^^^cmp     dword ptr [rcx], 303h^^^jnz     short loc_452160^^^mov     eax, [rcx+8]^^^cmp     ebp, eax^^^jbe     short loc_452160^^^test    rdx, rdx^^^jz      short loc_4521EC^^^cmp     cs:_dl_correct_cache_id, 303h^^^jnz     loc_452160^^^mov     rsi, [rcx+10h]^^^test    [rsp+78h+var_48], rsi^^^jnz     loc_452160^^^mov     edi, cs:_dl_osversion^^^test    edi, edi^^^jz      short loc_45220E^^^cmp     edi, [rcx+0Ch]^^^jb      loc_452160^^^test    rsi, rsi^^^jnz     loc_452160^^^cmp     cs:_dl_correct_cache_id, 303h^^^lea     rdx, [r15+rax]^^^jnz     loc_452160^^^test    rdx, rdx^^^jz      loc_451E7A^^^test    byte ptr cs:_dl_debug_mask, 1^^^jz      loc_451E7A^^^mov     rsi, rdx^^^mov     edi, offset aTryingFileS^^^xor     eax, eax^^^mov     [rsp+78h+var_70], rdx^^^call    _dl_debug_printf^^^mov     rdx, [rsp+78h+var_70]^^^jmp     loc_451E7A^^^test    r13d, r13d^^^mov     dword ptr [rsp+78h+var_50], r13d^^^jg      short loc_452286^^^jmp     short loc_452299^^^lea     rsi, [r15+rax]^^^mov     rdi, rbx^^^call    _dl_cache_libcmp^^^test    eax, eax^^^jnz     short loc_452299^^^sub     r13d, 1^^^jz      short loc_452299^^^lea     eax, [r13-1]^^^cdqe^^^lea     rax, [rax+rax*2]^^^mov     eax, [rbp+rax*4+14h]^^^cmp     r12d, eax^^^ja      short loc_452270^^^xor     r8d, r8d^^^xor     edx, edx^^^movsxd  rcx, r13d^^^jmp     short loc_4522B5^^^add     r8, 1^^^lea     eax, [r13+r8+0]^^^cmp     r14d, eax^^^jl      loc_45222B^^^lea     rax, [r8+rcx]^^^lea     rax, [rax+rax*2]^^^lea     r9, [rbp+rax*4+10h]^^^lea     eax, [r13+r8+0]^^^cmp     dword ptr [rsp+78h+var_50], eax^^^jge     short loc_452316^^^mov     eax, [r9+4]^^^cmp     r12d, eax^^^jbe     loc_45222B^^^lea     rsi, [r15+rax]^^^mov     rdi, rbx^^^mov     [rsp+78h+var_70], rdx^^^mov     [rsp+78h+var_60], rcx^^^mov     [rsp+78h+var_68], r8^^^mov     [rsp+78h+var_58], r9^^^call    _dl_cache_libcmp^^^test    eax, eax^^^mov     rdx, [rsp+78h+var_70]^^^mov     rcx, [rsp+78h+var_60]^^^mov     r8, [rsp+78h+var_68]^^^mov     r9, [rsp+78h+var_58]^^^jnz     loc_45222B^^^cmp     dword ptr [r9], 303h^^^jnz     short loc_4522A3^^^mov     eax, [r9+8]^^^cmp     r12d, eax^^^jbe     loc_4522A3^^^test    rdx, rdx^^^jz      short loc_452350^^^cmp     cs:_dl_correct_cache_id, 303h^^^jnz     loc_4522A3^^^lea     rdx, [r15+rax]^^^jmp     loc_45222B^^^cmp     cs:_dl_correct_cache_id, 303h^^^lea     rdx, [r15+rax]^^^jnz     loc_4522A3^^^jmp     loc_45222B^^^mov     esi, offset aEtcLd_so_cache^^^mov     edi, offset aSearchCacheS^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_451D7E^^^cmp     esi, [rcx+0Ch]^^^jb      loc_452093^^^nop     dword ptr [rax+rax+00000000h]^^^jmp     loc_452140^^^
_L_unlock_668$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_418BCF^^^
__init_cpu_features$$$xor     eax, eax^^^push    rbx^^^cpuid^^^cmp     ecx, 6C65746Eh^^^mov     cs:dword_6C60A4, eax^^^jnz     short loc_411D17^^^cmp     ebx, 756E6547h^^^jnz     short loc_411D17^^^cmp     edx, 49656E69h^^^jz      loc_411E40^^^cmp     ecx, 444D4163h^^^jz      short loc_411D60^^^mov     r8d, cs:dword_6C60B0^^^xor     edi, edi^^^xor     esi, esi^^^mov     r9d, 3^^^test    r8d, 8000000h^^^jz      short loc_411D4A^^^xor     ecx, ecx^^^xgetbv^^^and     eax, 6^^^cmp     eax, 6^^^jz      loc_411DF8^^^mov     cs:dword_6C60C8, esi^^^mov     cs:dword_6C60CC, edi^^^mov     cs:__cpu_features, r9d^^^pop     rbx^^^retn^^^cmp     ebx, 68747541h^^^jnz     short loc_411D1F^^^cmp     edx, 69746E65h^^^jnz     short loc_411D1F^^^mov     eax, 1^^^cpuid^^^mov     esi, eax^^^mov     edi, eax^^^mov     cs:dword_6C60A8, eax^^^shr     esi, 8^^^shr     edi, 4^^^mov     cs:dword_6C60AC, ebx^^^and     esi, 0Fh^^^and     edi, 0Fh^^^test    ch, 2^^^mov     cs:dword_6C60B0, ecx^^^mov     cs:dword_6C60B4, edx^^^mov     r8d, ecx^^^jz      short loc_411DAE^^^or      cs:dword_6C60D0, 8^^^mov     eax, 80000000h^^^mov     r9d, 2^^^cpuid^^^cmp     eax, 80000000h^^^jbe     loc_411D30^^^mov     eax, 80000001h^^^mov     r8d, cs:dword_6C60B0^^^cpuid^^^mov     cs:dword_6C60B8, eax^^^mov     cs:dword_6C60BC, ebx^^^mov     cs:dword_6C60C0, ecx^^^mov     cs:dword_6C60C4, edx^^^jmp     loc_411D30^^^test    r8d, 10000000h^^^jz      short loc_411E08^^^or      cs:dword_6C60D0, 40h^^^and     r8d, 1000h^^^jz      short loc_411E1B^^^or      cs:dword_6C60D0, 80h^^^test    byte ptr cs:dword_6C60C0+2, 1^^^jz      loc_411D4A^^^or      cs:dword_6C60D0, 100h^^^jmp     loc_411D4A^^^mov     r9d, cs:dword_6C60D0^^^mov     eax, 1^^^cpuid^^^mov     esi, eax^^^mov     r10d, ecx^^^mov     cs:dword_6C60B0, ecx^^^shr     esi, 8^^^mov     edi, eax^^^mov     ecx, eax^^^shr     edi, 4^^^shr     ecx, 0Ch^^^mov     cs:dword_6C60B4, edx^^^and     esi, 0Fh^^^mov     edx, r9d^^^and     edi, 0Fh^^^or      edx, 8^^^and     ecx, 0F0h^^^cmp     esi, 0Fh^^^mov     cs:dword_6C60A8, eax^^^mov     cs:dword_6C60AC, ebx^^^mov     cs:dword_6C60D0, edx^^^jz      short loc_411EB0^^^cmp     esi, 6^^^mov     r8d, r10d^^^jz      short loc_411ED0^^^mov     r9d, 1^^^jmp     loc_411D30^^^shr     eax, 14h^^^add     edi, ecx^^^mov     r8d, r10d^^^movzx   esi, al^^^mov     r9d, 1^^^add     esi, 0Fh^^^jmp     loc_411D30^^^add     edi, ecx^^^cmp     edi, 2Fh^^^jbe     short loc_411EF8^^^and     r10d, 10000000h^^^mov     r9d, 1^^^jz      loc_411D30^^^or      edx, 33h^^^mov     cs:dword_6C60D0, edx^^^jmp     short loc_411E9D^^^mov     ecx, edi^^^mov     eax, 1^^^shl     rax, cl^^^mov     rcx, 0D020C4000000h^^^test    rax, rcx^^^jnz     short loc_411EEA^^^mov     rcx, 4010000000h^^^test    rax, rcx^^^jz      short loc_411ED7^^^or      r9d, 0Ch^^^mov     cs:dword_6C60D0, r9d^^^mov     r9d, 1^^^jmp     loc_411D30^^^
ftell$$$push    rbx^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^and     eax, 8000h^^^jnz     short loc_425BC5^^^mov     rdx, [rdi+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_425BC1^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425BAD^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_31^^^jmp     short loc_425BB6^^^cmpxchg [rdx], esi^^^jnz     _L_lock_31^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^xor     ecx, ecx^^^mov     edx, 1^^^xor     esi, esi^^^mov     rdi, rbx^^^call    _IO_seekoff_unlocked^^^mov     rdx, rax^^^mov     eax, [rbx]^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_425BE6^^^test    ah, 1^^^jnz     short loc_425C10^^^test    ah, 80h^^^jnz     short loc_425C00^^^mov     rsi, [rbx+88h]^^^mov     eax, [rsi+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+4], eax^^^jz      short loc_425C50^^^nop^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_425C30^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     esi, [rbx+0C0h]^^^test    esi, esi^^^jg      short loc_425BE6^^^mov     rcx, [rbx+48h]^^^sub     rcx, [rbx+58h]^^^add     rdx, rcx^^^jmp     short loc_425BE6^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, fs:[rax]^^^test    ecx, ecx^^^jnz     short loc_425C06^^^mov     dword ptr fs:[rax], 5^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     qword ptr [rsi+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_425C68^^^lock dec dword ptr [rsi]^^^jnz     short _L_unlock_157^^^jmp     short loc_425C6C^^^dec     dword ptr [rsi]^^^jnz     short _L_unlock_157^^^jmp     short loc_425C00^^^
_IO_wfile_underflow_maybe_mmap$$$push    rbx^^^mov     rbx, rdi^^^call    _IO_file_underflow_maybe_mmap^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_428660^^^pop     rbx^^^retn^^^mov     rax, [rbx+0A0h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+140h]^^^mov     rax, [rax+20h]^^^jmp     rax^^^
exit$$$sub     rsp, 8^^^mov     edx, 1^^^mov     esi, offset __exit_funcs^^^call    __run_exit_handlers^^^
_IO_file_sync_mmap$$$push    rbx^^^mov     rsi, [rdi+8]^^^mov     rbx, rdi^^^cmp     rsi, [rdi+10h]^^^jz      short loc_428FD0^^^sub     rsi, [rdi+38h]^^^mov     edi, [rdi+70h]^^^xor     edx, edx^^^call    lseek64^^^mov     rsi, [rbx+8]^^^sub     rsi, [rbx+38h]^^^cmp     rax, rsi^^^jnz     short loc_428FE0^^^mov     rax, [rbx+18h]^^^mov     [rbx+90h], rsi^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^xor     eax, eax^^^pop     rbx^^^retn^^^sub     rsi, [rdi+38h]^^^jmp     short loc_428FB9^^^or      dword ptr [rbx], 20h^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^
_dl_addr$$$push    r15^^^mov     eax, 0^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    rax, rax^^^mov     [rsp+58h+var_50], rdx^^^mov     [rsp+58h+var_48], rcx^^^jz      short loc_411722^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     r10, cs:_dl_nns^^^xor     r12d, r12d^^^test    r10, r10^^^jz      loc_411923^^^mov     r9d, offset _dl_ns^^^xor     r11d, r11d^^^mov     rax, [r9]^^^test    rax, rax^^^jz      loc_41195D^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, [rax+340h]^^^cmp     rbx, rdi^^^jb      loc_411950^^^cmp     rbx, [rax+348h]^^^jnb     loc_411950^^^test    byte ptr [rax+315h], 40h^^^jnz     short loc_4117CA^^^movzx   edx, word ptr [rax+2B0h]^^^mov     r8, rbx^^^sub     r8, [rax]^^^lea     rcx, ds:0[rdx*8]^^^shl     rdx, 6^^^sub     rdx, rcx^^^sub     rdx, 38h^^^jmp     short loc_4117A4^^^sub     rdx, 38h^^^cmp     rdx, 0FFFFFFFFFFFFFFC8h^^^jz      loc_411950^^^mov     rcx, rdx^^^add     rcx, [rax+2A0h]^^^cmp     dword ptr [rcx], 1^^^jnz     short loc_4117A0^^^mov     rsi, r8^^^sub     rsi, [rcx+10h]^^^cmp     rsi, [rcx+28h]^^^jnb     short loc_4117A0^^^mov     rdx, [rax+8]^^^mov     [rbp+8], rdi^^^mov     [rbp+0], rdx^^^cmp     byte ptr [rdx], 0^^^jz      loc_411A34^^^mov     rdx, [rax+70h]^^^cmp     qword ptr [rax+298h], 0^^^mov     r9, [rdx+8]^^^mov     rdx, [rax+68h]^^^mov     rdx, [rdx+8]^^^mov     [rsp+58h+var_40], rdx^^^mov     rdx, [rax+90h]^^^mov     r15d, [rdx+8]^^^jz      loc_411976^^^mov     r13d, [rax+2ECh]^^^xor     r12d, r12d^^^test    r13d, r13d^^^jz      loc_4118DB^^^mov     r14, [rax+300h]^^^xor     r11d, r11d^^^nop     word ptr [rax+rax+00h]^^^mov     ecx, [r14+r11*4]^^^test    ecx, ecx^^^jz      loc_4118CE^^^mov     edx, ecx^^^lea     rsi, ds:0[rdx*4]^^^add     rsi, [rax+308h]^^^jmp     short loc_411852^^^mov     edx, ecx^^^lea     rdx, [rdx+rdx*2]^^^lea     rdx, [r9+rdx*8]^^^movzx   edi, word ptr [rdx+6]^^^test    di, di^^^jnz     short loc_41186A^^^cmp     qword ptr [rdx+8], 0^^^jz      short loc_4118C0^^^movzx   r8d, byte ptr [rdx+4]^^^and     r8d, 0Fh^^^cmp     r8d, 6^^^jz      short loc_4118C0^^^mov     r10, [rdx+8]^^^mov     r8, r10^^^add     r8, [rax]^^^cmp     rbx, r8^^^jb      short loc_4118C0^^^test    di, di^^^jz      short loc_411896^^^mov     rdi, [rdx+10h]^^^test    rdi, rdi^^^jnz     short loc_41189F^^^cmp     rbx, r8^^^jz      short loc_4118A7^^^mov     rdi, [rdx+10h]^^^add     rdi, r8^^^cmp     rbx, rdi^^^jnb     short loc_4118C0^^^test    r12, r12^^^jz      short loc_4118B3^^^cmp     r10, [r12+8]^^^jbe     short loc_4118C0^^^cmp     r15d, [rdx]^^^cmova   r12, rdx^^^nop     word ptr [rax+rax+00h]^^^mov     edx, [rsi]^^^add     ecx, 1^^^add     rsi, 4^^^and     edx, 1^^^jz      short loc_411850^^^add     r11, 1^^^cmp     r13d, r11d^^^ja      loc_411830^^^cmp     [rsp+58h+var_50], 0^^^jz      short loc_4118EB^^^mov     rdx, [rsp+58h+var_50]^^^mov     [rdx], rax^^^cmp     [rsp+58h+var_48], 0^^^jz      short loc_4118FB^^^mov     rdx, [rsp+58h+var_48]^^^mov     [rdx], r12^^^test    r12, r12^^^jz      loc_411A19^^^mov     edx, [r12]^^^add     rdx, [rsp+58h+var_40]^^^mov     [rbp+10h], rdx^^^mov     rdx, [r12+8]^^^mov     r12d, 1^^^add     rdx, [rax]^^^mov     [rbp+18h], rdx^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_411937^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^add     rsp, 28h^^^mov     eax, r12d^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rax+18h]^^^test    rax, rax^^^jnz     loc_411750^^^add     r11, 1^^^add     r9, 90h^^^cmp     r11, r10^^^jnz     loc_41173E^^^xor     r12d, r12d^^^jmp     short loc_411923^^^mov     rdx, [rax+60h]^^^mov     rsi, [rsp+58h+var_40]^^^test    rdx, rdx^^^jz      short loc_411993^^^mov     rdx, [rdx+8]^^^mov     edx, [rdx+4]^^^lea     rdx, [rdx+rdx*2]^^^lea     rsi, [r9+rdx*8]^^^xor     r12d, r12d^^^cmp     r9, rsi^^^jb      short loc_4119AD^^^jmp     loc_4118DB^^^add     r9, 18h^^^cmp     r9, rsi^^^jnb     loc_4118DB^^^movzx   edx, byte ptr [r9+4]^^^mov     ecx, edx^^^shr     cl, 4^^^sub     ecx, 1^^^cmp     cl, 1^^^ja      short loc_4119A0^^^and     edx, 0Fh^^^cmp     edx, 6^^^jz      short loc_4119A0^^^movzx   edi, word ptr [r9+6]^^^mov     rdx, [r9+8]^^^test    di, di^^^jnz     short loc_4119DA^^^test    rdx, rdx^^^jz      short loc_4119A0^^^mov     rcx, rdx^^^add     rcx, [rax]^^^cmp     rbx, rcx^^^jb      short loc_4119A0^^^test    di, di^^^jz      short loc_4119F3^^^mov     rdi, [r9+10h]^^^test    rdi, rdi^^^jnz     short loc_4119FC^^^cmp     rbx, rcx^^^jz      short loc_411A04^^^mov     rdi, [r9+10h]^^^add     rcx, rdi^^^cmp     rbx, rcx^^^jnb     short loc_4119A0^^^test    r12, r12^^^jz      short loc_411A10^^^cmp     [r12+8], rdx^^^jnb     short loc_4119A0^^^cmp     r15d, [r9]^^^cmova   r12, r9^^^jmp     short loc_4119A0^^^mov     qword ptr [rbp+10h], 0^^^mov     qword ptr [rbp+18h], 0^^^mov     r12d, 1^^^jmp     loc_411923^^^test    byte ptr [rax+314h], 3^^^jnz     loc_4117DF^^^mov     rdx, cs:_dl_argv^^^mov     rdx, [rdx]^^^mov     [rbp+0], rdx^^^jmp     loc_4117DF^^^
_L_lock_559$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_418AE3^^^
rewinddir$$$push    rbx^^^mov     esi, 1^^^mov     rbx, rdi^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_47985D^^^lock cmpxchg [rbx+4], esi^^^jnz     short _L_lock_13^^^jmp     short loc_479863^^^cmpxchg [rbx+4], esi^^^jnz     short _L_lock_13^^^mov     edi, [rbx]^^^xor     edx, edx^^^xor     esi, esi^^^call    lseek64^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+10h], 0^^^mov     dword ptr [rbx+28h], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_47989E^^^lock dec dword ptr [rbx+4]^^^jnz     short _L_unlock_25^^^jmp     short loc_4798A3^^^dec     dword ptr [rbx+4]^^^jnz     short _L_unlock_25^^^pop     rbx^^^retn^^^
_dl_receive_error$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rsi^^^mov     rbp, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 38h^^^mov     r15, rdx^^^call    cs:_dl_error_catch_tsd^^^mov     r13, cs:receiver^^^mov     r14, [rax]^^^mov     r12, rax^^^mov     cs:receiver, rbp^^^mov     rdi, r15^^^mov     qword ptr [rax], 0^^^call    rbx^^^mov     [r12], r14^^^mov     cs:receiver, r13^^^mov     rbx, [rsp+38h+var_30]^^^mov     rbp, [rsp+38h+var_28]^^^mov     r12, [rsp+38h+var_20]^^^mov     r13, [rsp+38h+var_18]^^^mov     r14, [rsp+38h+var_10]^^^mov     r15, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^
fde_mixed_encoding_compare$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdx^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_10], r13^^^mov     r13, rdi^^^mov     [rsp+var_8], r14^^^sub     rsp, 38h^^^movsxd  rax, dword ptr [rsi+4]^^^lea     rdi, [rsi+4]^^^lea     r12, [r13+8]^^^mov     r14, rsi^^^add     r13, 10h^^^sub     rdi, rax^^^call    get_cie_encoding^^^movzx   ebp, al^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     edi, ebp^^^call    base_from_object_isra_3^^^lea     rdx, [r14+8]^^^mov     rcx, rsp^^^mov     rsi, rax^^^mov     edi, ebp^^^call    read_encoded_value_with_base_0^^^movsxd  rax, dword ptr [rbx+4]^^^lea     rdi, [rbx+4]^^^sub     rdi, rax^^^call    get_cie_encoding^^^movzx   ebp, al^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     edi, ebp^^^call    base_from_object_isra_3^^^lea     rdx, [rbx+8]^^^lea     rcx, [rsp+38h+var_30]^^^mov     edi, ebp^^^mov     rsi, rax^^^call    read_encoded_value_with_base_0^^^mov     rdx, [rsp+38h+var_30]^^^cmp     [rsp+38h+var_38], rdx^^^mov     eax, 1^^^mov     rcx, [rsp+38h+var_30]^^^mov     rbx, [rsp+38h+var_28]^^^mov     rbp, [rsp+38h+var_20]^^^mov     r12, [rsp+38h+var_18]^^^mov     r13, [rsp+38h+var_10]^^^mov     r14, [rsp+38h+var_8]^^^sbb     edx, edx^^^cmp     [rsp+38h+var_38], rcx^^^cmovbe  eax, edx^^^add     rsp, 38h^^^retn^^^
transcmp$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^lea     rsi, [rsi+38h]^^^sub     rsp, 8^^^cmp     qword ptr [rbx+20h], 0^^^jz      short loc_412410^^^cmp     qword ptr [rbp+20h], 0^^^lea     rdi, [rbp+38h]^^^jz      short loc_412400^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_4123F2^^^mov     rsi, [rbx]^^^mov     rdi, [rbp+0]^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_4123F2^^^mov     rsi, [rbx+10h]^^^mov     rdi, [rbp+10h]^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_4123F2^^^mov     eax, [rbp+8]^^^sub     eax, [rbx+8]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rdi, [rbp+38h]^^^jmp     short loc_4123C2^^^mov     rsi, [rbx+38h]^^^jmp     short loc_4123B7^^^
_dl_get_origin$$$push    r12^^^mov     edx, 1000h^^^mov     edi, offset aProcSelfExe^^^mov     eax, 59h^^^push    rbp^^^push    rbx^^^sub     rsp, 1000h^^^mov     rsi, rsp^^^syscall^^^cmp     eax, 0FFFFF000h^^^mov     ebp, eax^^^ja      short loc_4568CC^^^test    eax, eax^^^jg      short loc_456948^^^mov     rbp, cs:_dl_origin_path^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^test    rbp, rbp^^^jz      short loc_456932^^^mov     rdi, rbp^^^call    strlen^^^lea     rdi, [rax+1]^^^mov     r12, rax^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4569D8^^^mov     rdx, r12^^^mov     rsi, rbp^^^mov     rdi, rax^^^call    mempcpy^^^lea     rdx, [rbx+1]^^^cmp     rax, rdx^^^ja      short loc_456929^^^jmp     short loc_45692F^^^sub     rax, 1^^^cmp     rax, rdx^^^jbe     short loc_45692F^^^cmp     byte ptr [rax-1], 2Fh^^^jz      short loc_456920^^^mov     byte ptr [rax], 0^^^add     rsp, 1000h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^movzx   edx, [rsp+1018h+var_1018]^^^cmp     dl, 5Bh^^^jz      loc_4568CC^^^cmp     dl, 2Fh^^^jnz     loc_456A0A^^^xor     r12d, r12d^^^cmp     eax, 1^^^mov     edi, 2^^^jz      short loc_45699F^^^lea     r12d, [rbp-1]^^^movsxd  rdx, r12d^^^mov     eax, r12d^^^cmp     [rsp+rdx+1018h+var_1018], 2Fh^^^jnz     short loc_456990^^^jmp     short loc_4569F0^^^lea     r12d, [rbp-1]^^^movsxd  rdx, r12d^^^mov     eax, r12d^^^cmp     [rsp+rdx+1018h+var_1018], 2Fh^^^jz      short loc_4569F0^^^cmp     eax, 1^^^mov     ebp, eax^^^jnz     short loc_456980^^^xor     r12d, r12d^^^mov     edi, 2^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_4569D8^^^cmp     ebp, 1^^^jz      short loc_456A00^^^movsxd  rdx, r12d^^^mov     rsi, rsp^^^mov     rdi, rax^^^call    mempcpy^^^mov     byte ptr [rax], 0^^^add     rsp, 1000h^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^add     rsp, 1000h^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^mov     rax, rbx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^lea     edi, [rbp+1]^^^movsxd  rdi, edi^^^jmp     short loc_45699F^^^mov     word ptr [rax], 2Fh^^^jmp     loc_456932^^^mov     ecx, offset __PRETTY_FUNCTION___10548^^^mov     edx, 30h^^^mov     esi, offset a__SysdepsUni_2^^^mov     edi, offset aLinkval0^^^call    __assert_fail^^^
getpagesize$$$sub     rsp, 8          ^^^mov     rax, cs:_dl_pagesize^^^test    rax, rax^^^jz      short loc_44D785^^^add     rsp, 8^^^retn^^^mov     ecx, offset __PRETTY_FUNCTION___10536^^^mov     edx, 1Fh^^^mov     esi, offset a__SysdepsUni_1^^^mov     edi, offset a_dl_pagesize0^^^call    __assert_fail^^^
_Unwind_RaiseException_Phase2$$$push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 180h^^^jmp     short loc_4923E4^^^mov     rax, [rsp+198h+var_48]^^^test    rax, rax^^^jz      short loc_4923D5^^^mov     esi, ebp^^^mov     r8, rbx^^^mov     rcx, r12^^^or      esi, 2^^^mov     rdx, [r12]^^^mov     edi, 1^^^call    rax^^^cmp     eax, 7^^^jz      short loc_49241B^^^cmp     eax, 8^^^jnz     short loc_492416^^^test    ebp, ebp^^^jnz     short loc_492427^^^mov     rsi, rsp^^^mov     rdi, rbx^^^call    uw_update_context^^^mov     rsi, rsp^^^mov     rdi, rbx^^^xor     ebp, ebp^^^call    uw_frame_state_for^^^mov     rcx, [rbx+0C0h]^^^mov     rdx, [rbx+90h]^^^shr     rcx, 3Fh^^^sub     rdx, rcx^^^cmp     [r12+18h], rdx^^^setz    bpl^^^shl     ebp, 2^^^test    eax, eax^^^jz      short loc_4923A8^^^mov     eax, 2^^^add     rsp, 180h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^call    abort^^^
__vfprintf_chk$$$push    rbp^^^mov     r8, rdx^^^mov     ebp, esi^^^mov     rdx, rcx^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     eax, [rdi]^^^and     eax, 8000h^^^jnz     short loc_410D05^^^mov     r9, [rdi+88h]^^^mov     r10, fs:10h^^^cmp     r10, [r9+8]^^^jz      short loc_410D00^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_410CEB^^^lock cmpxchg [r9], esi^^^jnz     _L_lock_41^^^jmp     short loc_410CF5^^^cmpxchg [r9], esi^^^jnz     _L_lock_41^^^mov     r9, [rbx+88h]^^^mov     [r9+8], r10^^^add     dword ptr [r9+4], 1^^^test    ebp, ebp^^^jle     short loc_410D0D^^^or      dword ptr [rbx+74h], 4^^^mov     rsi, r8^^^mov     rdi, rbx^^^call    vfprintf^^^test    ebp, ebp^^^mov     esi, eax^^^mov     eax, [rbx+74h]^^^jle     short loc_410D27^^^and     eax, 0FFFFFFFBh^^^mov     [rbx+74h], eax^^^and     eax, 0FFFFFFEBh^^^mov     [rbx+74h], eax^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_410D64^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jnz     short loc_410D64^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_410D60^^^lock dec dword ptr [rdx]^^^jnz     short _L_unlock_104^^^jmp     short loc_410D64^^^dec     dword ptr [rdx]^^^jnz     short _L_unlock_104^^^add     rsp, 8^^^mov     eax, esi^^^pop     rbx^^^pop     rbp^^^retn^^^
__alloc_dir.constprop.1$$$push    rbx^^^mov     ebx, edi^^^mov     edi, 8030h^^^call    malloc^^^mov     rdx, rax^^^mov     eax, 8000h^^^test    rdx, rdx^^^jz      short loc_44BDC0^^^mov     [rdx], ebx^^^mov     dword ptr [rdx+4], 0^^^mov     [rdx+8], rax^^^mov     qword ptr [rdx+10h], 0^^^mov     qword ptr [rdx+18h], 0^^^mov     qword ptr [rdx+20h], 0^^^mov     dword ptr [rdx+28h], 0^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     edi, 2030h^^^call    malloc^^^mov     rdx, rax^^^mov     eax, 2000h^^^test    rdx, rdx^^^jnz     short loc_44BD8A^^^mov     rsi, 0FFFFFFFFFFFFFFC0h^^^movsxd  rdi, ebx^^^mov     ax, 3^^^mov     r8d, fs:[rsi]^^^syscall^^^mov     fs:[rsi], r8d^^^jmp     short loc_44BDB6^^^
__strchr_sse42$$$test    sil, sil^^^jz      __strend_sse4^^^pxor    xmm2, xmm2^^^movd    xmm1, esi^^^mov     ecx, edi^^^pshufb  xmm1, xmm2^^^and     ecx, 0Fh^^^mov     r8, rdi^^^jz      short loc_42DF38^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm0, xmmword ptr [r8]^^^pcmpeqb xmm2, xmm0^^^pcmpeqb xmm0, xmm1^^^pmovmskb edx, xmm2^^^pmovmskb esi, xmm0^^^sar     edx, cl^^^sar     esi, cl^^^test    esi, esi^^^jz      short loc_42DF30^^^bsf     eax, esi^^^test    edx, edx^^^jz      short loc_42DF1F^^^bsf     esi, edx^^^cmp     eax, esi^^^ja      short loc_42DF6C^^^add     rax, rdi^^^retn^^^test    edx, edx^^^jnz     short loc_42DF6C^^^add     r8, 10h^^^pcmpistri xmm1, xmmword ptr [r8], 2^^^jbe     short loc_42DF6A^^^add     r8, 10h^^^pcmpistri xmm1, xmmword ptr [r8], 2^^^jbe     short loc_42DF6A^^^add     r8, 10h^^^pcmpistri xmm1, xmmword ptr [r8], 2^^^jbe     short loc_42DF6A^^^add     r8, 10h^^^pcmpistri xmm1, xmmword ptr [r8], 2^^^jbe     short loc_42DF6A^^^jmp     short loc_42DF34^^^jb      short loc_42DF70^^^xor     eax, eax^^^retn^^^lea     rax, [r8+rcx]^^^retn^^^
sub_40A633$$$mov     [rdi-0Ch], edx^^^
_IO_new_file_close_it$$$push    r12             ^^^push    rbp^^^push    rbx^^^cmp     dword ptr [rdi+70h], 0FFFFFFFFh^^^mov     rbx, rdi^^^jz      loc_42A400^^^mov     eax, [rdi]^^^xor     ebp, ebp^^^and     eax, 808h^^^cmp     eax, 800h^^^jz      loc_42A3A0^^^mov     rdi, rbx^^^xor     r12d, r12d^^^call    _IO_unsave_markers^^^test    byte ptr [rbx+74h], 20h^^^jz      loc_42A380^^^mov     r10d, [rbx+0C0h]^^^test    r10d, r10d^^^jle     short loc_42A310^^^mov     rax, [rbx+0A0h]^^^cmp     qword ptr [rax+40h], 0^^^jz      short loc_42A2CC^^^mov     rdi, rbx^^^call    _IO_free_wbackup_area^^^xor     ecx, ecx^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^call    _IO_wsetb^^^mov     rax, [rbx+0A0h]^^^mov     qword ptr [rax+10h], 0^^^mov     qword ptr [rax], 0^^^mov     qword ptr [rax+8], 0^^^mov     qword ptr [rax+20h], 0^^^mov     qword ptr [rax+18h], 0^^^mov     qword ptr [rax+28h], 0^^^xor     ecx, ecx^^^xor     edx, edx^^^xor     esi, esi^^^mov     rdi, rbx^^^call    _IO_setb^^^mov     qword ptr [rbx+18h], 0^^^mov     qword ptr [rbx+8], 0^^^mov     rdi, rbx^^^mov     qword ptr [rbx+10h], 0^^^mov     qword ptr [rbx+28h], 0^^^mov     qword ptr [rbx+20h], 0^^^mov     qword ptr [rbx+30h], 0^^^call    _IO_un_link^^^test    r12d, r12d^^^mov     dword ptr [rbx], 0FBAD240Ch^^^mov     dword ptr [rbx+70h], 0FFFFFFFFh^^^mov     qword ptr [rbx+90h], 0FFFFFFFFFFFFFFFFh^^^cmovz   r12d, ebp^^^pop     rbx^^^pop     rbp^^^mov     eax, r12d^^^pop     r12^^^retn^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rax+88h]^^^mov     r12d, eax^^^jmp     loc_42A2AA^^^mov     r11d, [rdi+0C0h]^^^test    r11d, r11d^^^jle     short loc_42A3D0^^^mov     rax, [rdi+0A0h]^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^mov     ebp, eax^^^jmp     loc_42A295^^^mov     rsi, [rdi+20h]^^^mov     r12, [rdi+28h]^^^sub     r12, rsi^^^jz      loc_42A295^^^mov     rdx, r12^^^xor     ebp, ebp^^^call    new_do_write^^^cmp     r12, rax^^^setz    bpl^^^sub     ebp, 1^^^jmp     loc_42A295^^^mov     r12d, 0FFFFFFFFh^^^jmp     loc_42A375^^^
sub_40A630$$$mov     [rdi-0Dh], dl^^^
sub_40A636$$$mov     [rdi-8], rdx^^^jmp     short sub_40A6AA^^^
sub_40A6AA$$$movq    xmm0, rdx^^^punpcklqdq xmm0, xmm0^^^cmp     r8, 0B0h^^^jge     loc_40AB80^^^add     rdi, r8^^^lea     r9, off_498620^^^jmp     qword ptr [r9+r8*8]^^^movdqa  xmmword ptr [rdi-0B0h], xmm0^^^movdqa  xmmword ptr [rdi-0A0h], xmm0^^^movdqa  xmmword ptr [rdi-90h], xmm0^^^movdqa  xmmword ptr [rdi-80h], xmm0^^^movdqa  xmmword ptr [rdi-70h], xmm0^^^movdqa  xmmword ptr [rdi-60h], xmm0^^^movdqa  xmmword ptr [rdi-50h], xmm0^^^movdqa  xmmword ptr [rdi-40h], xmm0^^^movdqa  xmmword ptr [rdi-30h], xmm0^^^movdqa  xmmword ptr [rdi-20h], xmm0^^^movdqa  xmmword ptr [rdi-10h], xmm0^^^retn^^^movdqa  xmmword ptr [rdi-0B1h], xmm0^^^movdqa  xmmword ptr [rdi-0A1h], xmm0^^^movdqa  xmmword ptr [rdi-91h], xmm0^^^movdqa  xmmword ptr [rdi-81h], xmm0^^^movdqa  xmmword ptr [rdi-71h], xmm0^^^movdqa  xmmword ptr [rdi-61h], xmm0^^^movdqa  xmmword ptr [rdi-51h], xmm0^^^movdqa  xmmword ptr [rdi-41h], xmm0^^^movdqa  xmmword ptr [rdi-31h], xmm0^^^movdqa  xmmword ptr [rdi-21h], xmm0^^^movdqa  xmmword ptr [rdi-11h], xmm0^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0B2h], xmm0^^^movdqa  xmmword ptr [rdi-0A2h], xmm0^^^movdqa  xmmword ptr [rdi-92h], xmm0^^^movdqa  xmmword ptr [rdi-82h], xmm0^^^movdqa  xmmword ptr [rdi-72h], xmm0^^^movdqa  xmmword ptr [rdi-62h], xmm0^^^movdqa  xmmword ptr [rdi-52h], xmm0^^^movdqa  xmmword ptr [rdi-42h], xmm0^^^movdqa  xmmword ptr [rdi-32h], xmm0^^^movdqa  xmmword ptr [rdi-22h], xmm0^^^movdqa  xmmword ptr [rdi-12h], xmm0^^^mov     [rdi-2], dx^^^retn^^^movdqa  xmmword ptr [rdi-0B3h], xmm0^^^movdqa  xmmword ptr [rdi-0A3h], xmm0^^^movdqa  xmmword ptr [rdi-93h], xmm0^^^movdqa  xmmword ptr [rdi-83h], xmm0^^^movdqa  xmmword ptr [rdi-73h], xmm0^^^movdqa  xmmword ptr [rdi-63h], xmm0^^^movdqa  xmmword ptr [rdi-53h], xmm0^^^movdqa  xmmword ptr [rdi-43h], xmm0^^^movdqa  xmmword ptr [rdi-33h], xmm0^^^movdqa  xmmword ptr [rdi-23h], xmm0^^^movdqa  xmmword ptr [rdi-13h], xmm0^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0B4h], xmm0^^^movdqa  xmmword ptr [rdi-0A4h], xmm0^^^movdqa  xmmword ptr [rdi-94h], xmm0^^^movdqa  xmmword ptr [rdi-84h], xmm0^^^movdqa  xmmword ptr [rdi-74h], xmm0^^^movdqa  xmmword ptr [rdi-64h], xmm0^^^movdqa  xmmword ptr [rdi-54h], xmm0^^^movdqa  xmmword ptr [rdi-44h], xmm0^^^movdqa  xmmword ptr [rdi-34h], xmm0^^^movdqa  xmmword ptr [rdi-24h], xmm0^^^movdqa  xmmword ptr [rdi-14h], xmm0^^^mov     [rdi-4], edx^^^retn^^^movdqa  xmmword ptr [rdi-0B5h], xmm0^^^movdqa  xmmword ptr [rdi-0A5h], xmm0^^^movdqa  xmmword ptr [rdi-95h], xmm0^^^movdqa  xmmword ptr [rdi-85h], xmm0^^^movdqa  xmmword ptr [rdi-75h], xmm0^^^movdqa  xmmword ptr [rdi-65h], xmm0^^^movdqa  xmmword ptr [rdi-55h], xmm0^^^movdqa  xmmword ptr [rdi-45h], xmm0^^^movdqa  xmmword ptr [rdi-35h], xmm0^^^movdqa  xmmword ptr [rdi-25h], xmm0^^^movdqa  xmmword ptr [rdi-15h], xmm0^^^mov     [rdi-5], edx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0B6h], xmm0^^^movdqa  xmmword ptr [rdi-0A6h], xmm0^^^movdqa  xmmword ptr [rdi-96h], xmm0^^^movdqa  xmmword ptr [rdi-86h], xmm0^^^movdqa  xmmword ptr [rdi-76h], xmm0^^^movdqa  xmmword ptr [rdi-66h], xmm0^^^movdqa  xmmword ptr [rdi-56h], xmm0^^^movdqa  xmmword ptr [rdi-46h], xmm0^^^movdqa  xmmword ptr [rdi-36h], xmm0^^^movdqa  xmmword ptr [rdi-26h], xmm0^^^movdqa  xmmword ptr [rdi-16h], xmm0^^^mov     [rdi-6], edx^^^mov     [rdi-2], dx^^^retn^^^movdqa  xmmword ptr [rdi-0B7h], xmm0^^^movdqa  xmmword ptr [rdi-0A7h], xmm0^^^movdqa  xmmword ptr [rdi-97h], xmm0^^^movdqa  xmmword ptr [rdi-87h], xmm0^^^movdqa  xmmword ptr [rdi-77h], xmm0^^^movdqa  xmmword ptr [rdi-67h], xmm0^^^movdqa  xmmword ptr [rdi-57h], xmm0^^^movdqa  xmmword ptr [rdi-47h], xmm0^^^movdqa  xmmword ptr [rdi-37h], xmm0^^^movdqa  xmmword ptr [rdi-27h], xmm0^^^movdqa  xmmword ptr [rdi-17h], xmm0^^^mov     [rdi-7], edx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0B8h], xmm0^^^movdqa  xmmword ptr [rdi-0A8h], xmm0^^^movdqa  xmmword ptr [rdi-98h], xmm0^^^movdqa  xmmword ptr [rdi-88h], xmm0^^^movdqa  xmmword ptr [rdi-78h], xmm0^^^movdqa  xmmword ptr [rdi-68h], xmm0^^^movdqa  xmmword ptr [rdi-58h], xmm0^^^movdqa  xmmword ptr [rdi-48h], xmm0^^^movdqa  xmmword ptr [rdi-38h], xmm0^^^movdqa  xmmword ptr [rdi-28h], xmm0^^^movdqa  xmmword ptr [rdi-18h], xmm0^^^mov     [rdi-8], rdx^^^retn^^^movdqa  xmmword ptr [rdi-0B9h], xmm0^^^movdqa  xmmword ptr [rdi-0A9h], xmm0^^^movdqa  xmmword ptr [rdi-99h], xmm0^^^movdqa  xmmword ptr [rdi-89h], xmm0^^^movdqa  xmmword ptr [rdi-79h], xmm0^^^movdqa  xmmword ptr [rdi-69h], xmm0^^^movdqa  xmmword ptr [rdi-59h], xmm0^^^movdqa  xmmword ptr [rdi-49h], xmm0^^^movdqa  xmmword ptr [rdi-39h], xmm0^^^movdqa  xmmword ptr [rdi-29h], xmm0^^^movdqa  xmmword ptr [rdi-19h], xmm0^^^mov     [rdi-9], rdx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0BAh], xmm0^^^movdqa  xmmword ptr [rdi-0AAh], xmm0^^^movdqa  xmmword ptr [rdi-9Ah], xmm0^^^movdqa  xmmword ptr [rdi-8Ah], xmm0^^^movdqa  xmmword ptr [rdi-7Ah], xmm0^^^movdqa  xmmword ptr [rdi-6Ah], xmm0^^^movdqa  xmmword ptr [rdi-5Ah], xmm0^^^movdqa  xmmword ptr [rdi-4Ah], xmm0^^^movdqa  xmmword ptr [rdi-3Ah], xmm0^^^movdqa  xmmword ptr [rdi-2Ah], xmm0^^^movdqa  xmmword ptr [rdi-1Ah], xmm0^^^mov     [rdi-0Ah], rdx^^^mov     [rdi-2], dx^^^retn^^^movdqa  xmmword ptr [rdi-0BBh], xmm0^^^movdqa  xmmword ptr [rdi-0ABh], xmm0^^^movdqa  xmmword ptr [rdi-9Bh], xmm0^^^movdqa  xmmword ptr [rdi-8Bh], xmm0^^^movdqa  xmmword ptr [rdi-7Bh], xmm0^^^movdqa  xmmword ptr [rdi-6Bh], xmm0^^^movdqa  xmmword ptr [rdi-5Bh], xmm0^^^movdqa  xmmword ptr [rdi-4Bh], xmm0^^^movdqa  xmmword ptr [rdi-3Bh], xmm0^^^movdqa  xmmword ptr [rdi-2Bh], xmm0^^^movdqa  xmmword ptr [rdi-1Bh], xmm0^^^mov     [rdi-0Bh], rdx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0BCh], xmm0^^^movdqa  xmmword ptr [rdi-0ACh], xmm0^^^movdqa  xmmword ptr [rdi-9Ch], xmm0^^^movdqa  xmmword ptr [rdi-8Ch], xmm0^^^movdqa  xmmword ptr [rdi-7Ch], xmm0^^^movdqa  xmmword ptr [rdi-6Ch], xmm0^^^movdqa  xmmword ptr [rdi-5Ch], xmm0^^^movdqa  xmmword ptr [rdi-4Ch], xmm0^^^movdqa  xmmword ptr [rdi-3Ch], xmm0^^^movdqa  xmmword ptr [rdi-2Ch], xmm0^^^movdqa  xmmword ptr [rdi-1Ch], xmm0^^^mov     [rdi-0Ch], rdx^^^mov     [rdi-4], edx^^^retn^^^movdqa  xmmword ptr [rdi-0BDh], xmm0^^^movdqa  xmmword ptr [rdi-0ADh], xmm0^^^movdqa  xmmword ptr [rdi-9Dh], xmm0^^^movdqa  xmmword ptr [rdi-8Dh], xmm0^^^movdqa  xmmword ptr [rdi-7Dh], xmm0^^^movdqa  xmmword ptr [rdi-6Dh], xmm0^^^movdqa  xmmword ptr [rdi-5Dh], xmm0^^^movdqa  xmmword ptr [rdi-4Dh], xmm0^^^movdqa  xmmword ptr [rdi-3Dh], xmm0^^^movdqa  xmmword ptr [rdi-2Dh], xmm0^^^movdqa  xmmword ptr [rdi-1Dh], xmm0^^^mov     [rdi-0Dh], rdx^^^mov     [rdi-5], edx^^^mov     [rdi-1], dl^^^retn^^^movdqa  xmmword ptr [rdi-0BEh], xmm0^^^movdqa  xmmword ptr [rdi-0AEh], xmm0^^^movdqa  xmmword ptr [rdi-9Eh], xmm0^^^movdqa  xmmword ptr [rdi-8Eh], xmm0^^^movdqa  xmmword ptr [rdi-7Eh], xmm0^^^movdqa  xmmword ptr [rdi-6Eh], xmm0^^^movdqa  xmmword ptr [rdi-5Eh], xmm0^^^movdqa  xmmword ptr [rdi-4Eh], xmm0^^^movdqa  xmmword ptr [rdi-3Eh], xmm0^^^movdqa  xmmword ptr [rdi-2Eh], xmm0^^^movdqa  xmmword ptr [rdi-1Eh], xmm0^^^mov     [rdi-0Eh], rdx^^^mov     [rdi-6], edx^^^mov     [rdi-2], dx^^^retn^^^movdqa  xmmword ptr [rdi-0BFh], xmm0^^^movdqa  xmmword ptr [rdi-0AFh], xmm0^^^movdqa  xmmword ptr [rdi-9Fh], xmm0^^^movdqa  xmmword ptr [rdi-8Fh], xmm0^^^movdqa  xmmword ptr [rdi-7Fh], xmm0^^^movdqa  xmmword ptr [rdi-6Fh], xmm0^^^movdqa  xmmword ptr [rdi-5Fh], xmm0^^^movdqa  xmmword ptr [rdi-4Fh], xmm0^^^movdqa  xmmword ptr [rdi-3Fh], xmm0^^^movdqa  xmmword ptr [rdi-2Fh], xmm0^^^movdqa  xmmword ptr [rdi-1Fh], xmm0^^^mov     [rdi-0Fh], rdx^^^mov     [rdi-7], edx^^^mov     [rdi-3], dx^^^mov     [rdi-1], dl^^^retn^^^mov     r9d, dword ptr cs:__x86_64_shared_cache_size^^^cmp     r8, r9^^^jg      short loc_40ABE0^^^nop     dword ptr [rax+00h]^^^lea     r8, [r8-80h]^^^cmp     r8, 80h^^^movdqa  xmmword ptr [rdi], xmm0^^^movdqa  xmmword ptr [rdi+10h], xmm0^^^movdqa  xmmword ptr [rdi+20h], xmm0^^^movdqa  xmmword ptr [rdi+30h], xmm0^^^movdqa  xmmword ptr [rdi+40h], xmm0^^^movdqa  xmmword ptr [rdi+50h], xmm0^^^movdqa  xmmword ptr [rdi+60h], xmm0^^^movdqa  xmmword ptr [rdi+70h], xmm0^^^lea     rdi, [rdi+80h]^^^jge     short loc_40AB90^^^add     rdi, r8^^^lea     r11, off_498620^^^jmp     qword ptr [r11+r8*8]^^^cmp     r9, 0^^^jz      short loc_40AB90^^^jmp     short loc_40ABF0^^^lea     r8, [r8-80h]^^^cmp     r8, 80h^^^movntdq xmmword ptr [rdi], xmm0^^^movntdq xmmword ptr [rdi+10h], xmm0^^^movntdq xmmword ptr [rdi+20h], xmm0^^^movntdq xmmword ptr [rdi+30h], xmm0^^^movntdq xmmword ptr [rdi+40h], xmm0^^^movntdq xmmword ptr [rdi+50h], xmm0^^^movntdq xmmword ptr [rdi+60h], xmm0^^^movntdq xmmword ptr [rdi+70h], xmm0^^^lea     rdi, [rdi+80h]^^^jge     short loc_40ABF0^^^sfence^^^add     rdi, r8^^^lea     r11, off_498620^^^jmp     qword ptr [r11+r8*8]^^^
_L_lock_1991$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_447AB1^^^
fcloseall$$$jmp     _IO_cleanup^^^
_Unwind_Backtrace$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^lea     rdi, [rbp+var_120]^^^push    rbx^^^mov     rbx, rsi^^^lea     rsi, [rbp+arg_0]^^^sub     rsp, 278h^^^mov     rdx, [rbp+8]^^^call    uw_init_context_1^^^jmp     short loc_492D6A^^^mov     rsi, rbx^^^lea     rdi, [rbp+var_120]^^^call    r12^^^test    eax, eax^^^jnz     short loc_492D90^^^cmp     r13d, 5^^^jz      short loc_492D96^^^lea     rsi, [rbp+var_2A0]^^^lea     rdi, [rbp+var_120]^^^call    uw_update_context^^^lea     rsi, [rbp+var_2A0]^^^lea     rdi, [rbp+var_120]^^^call    uw_frame_state_for^^^cmp     eax, 5^^^mov     r13d, eax^^^jz      short loc_492D40^^^test    eax, eax^^^jz      short loc_492D40^^^nop     dword ptr [rax+00000000h]^^^mov     r13d, 3^^^add     rsp, 278h^^^mov     eax, r13d^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
register_printf_function$$$jmp     register_printf_specifier^^^
_IO_str_finish$$$push    rbx^^^mov     rbx, rdi^^^mov     rdi, [rdi+38h]^^^test    rdi, rdi^^^jz      short loc_42D648^^^test    byte ptr [rbx], 1^^^jnz     short loc_42D648^^^call    qword ptr [rbx+0E8h]^^^mov     qword ptr [rbx+38h], 0^^^mov     rdi, rbx^^^xor     esi, esi^^^pop     rbx^^^jmp     _IO_default_finish^^^
__frame_state_for$$$push    rbx^^^xor     eax, eax^^^mov     r8, rdi^^^mov     ecx, 1Eh^^^add     r8, 1^^^mov     rbx, rsi^^^sub     rsp, 270h^^^lea     rdx, [rsp+278h+var_F8]^^^mov     rsi, rsp^^^mov     rdi, rdx^^^rep stosq^^^mov     rcx, 4000000000000000h^^^mov     rdi, rdx^^^mov     [rsp+278h+var_60], r8^^^mov     [rsp+278h+var_38], rcx^^^call    uw_frame_state_for^^^test    eax, eax^^^jnz     loc_49289F^^^cmp     [rsp+278h+var_138], 2^^^jz      loc_49289F^^^lea     rdx, [rsp+278h+var_270]^^^xor     eax, eax^^^jmp     short loc_49282C^^^cmp     cl, 2^^^jz      short loc_49283A^^^mov     qword ptr [rbx+rax*8+20h], 0^^^add     rax, 1^^^add     rdx, 10h^^^cmp     rax, 12h^^^jz      short loc_492851^^^mov     ecx, [rdx]^^^cmp     cl, 1^^^mov     [rbx+rax+0B4h], cl^^^jnz     short loc_492810^^^mov     rcx, [rdx-8]^^^add     rdx, 10h^^^mov     [rbx+rax*8+20h], rcx^^^add     rax, 1^^^cmp     rax, 12h^^^jnz     short loc_49282C^^^mov     rax, [rsp+278h+var_150]^^^mov     [rbx+10h], rax^^^mov     rax, [rsp+278h+var_148]^^^mov     [rbx+0B0h], ax^^^mov     rax, [rsp+278h+var_110]^^^mov     [rbx+0B2h], ax^^^mov     rax, [rsp+278h+var_28]^^^mov     [rbx+18h], rax^^^mov     rax, [rsp+278h+var_100]^^^mov     [rbx+8], rax^^^add     rsp, 270h^^^mov     rax, rbx^^^pop     rbx^^^retn^^^xor     ebx, ebx^^^add     rsp, 270h^^^mov     rax, rbx^^^pop     rbx^^^retn^^^
sub_44E5BD$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 8^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
socket$$$mov     eax, 29h        ^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_IO_default_seekoff$$$mov     rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
_dl_setup_hash$$$sub     rsp, 8^^^mov     rax, [rdi+298h]^^^test    rax, rax^^^jz      short loc_4539FB^^^mov     rax, [rax+8]^^^mov     ecx, [rax]^^^mov     [rdi+2ECh], ecx^^^mov     edx, [rax+8]^^^mov     r8d, [rax+4]^^^lea     esi, [rdx-1]^^^test    esi, edx^^^jnz     short loc_453A28^^^add     edx, edx^^^mov     [rdi+2F0h], esi^^^mov     esi, [rax+0Ch]^^^add     rax, 10h^^^mov     [rdi+2F8h], rax^^^lea     rax, [rax+rdx*4]^^^mov     edx, r8d^^^shl     rdx, 2^^^mov     [rdi+2F4h], esi^^^mov     [rdi+300h], rax^^^lea     rax, [rax+rcx*4]^^^sub     rax, rdx^^^mov     [rdi+308h], rax^^^add     rsp, 8^^^retn^^^mov     rax, [rdi+60h]^^^test    rax, rax^^^jz      short loc_4539F6^^^mov     rax, [rax+8]^^^mov     edx, [rax]^^^add     rax, 8^^^mov     [rdi+308h], rax^^^lea     rax, [rax+rdx*4]^^^mov     [rdi+2ECh], edx^^^mov     [rdi+300h], rax^^^jmp     short loc_4539F6^^^mov     ecx, offset __PRETTY_FUNCTION___11360^^^mov     edx, 36Ch^^^mov     esi, offset aDlLookup_c^^^mov     edi, offset aBitmask_nwords^^^call    __assert_fail^^^
_nl_remove_locale$$$mov     eax, [rsi+30h]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+30h], eax^^^jnz     short locret_461CE0^^^cmp     dword ptr [rsi+18h], 2^^^jz      short loc_461CD1^^^movsxd  rdi, edi^^^mov     rax, ds:_nl_locale_file_list[rdi*8]^^^cmp     [rax+10h], rsi^^^jz      short loc_461CC2^^^nop     dword ptr [rax+00h]^^^mov     rax, [rax+18h]^^^cmp     [rax+10h], rsi^^^jnz     short loc_461CB8^^^mov     dword ptr [rax+8], 0^^^mov     qword ptr [rax+10h], 0^^^mov     rdi, rsi^^^jmp     _nl_unload_locale^^^rep retn^^^
__strstr_sse2$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rsi^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^push    rbx^^^sub     rsp, 48h^^^movzx   eax, byte ptr [rdi]^^^test    al, al^^^jz      loc_445C17^^^movzx   edx, byte ptr [rsi]^^^test    dl, dl^^^jz      loc_445999^^^mov     rbx, rsi^^^mov     rcx, rdi^^^mov     esi, 1^^^jmp     short loc_44591B^^^movzx   edx, byte ptr [rbx]^^^add     rcx, 1^^^test    dl, dl^^^jz      short loc_445936^^^cmp     al, dl^^^setz    al^^^add     rbx, 1^^^movzx   eax, al^^^and     esi, eax^^^movzx   eax, byte ptr [rcx+1]^^^test    al, al^^^jnz     short loc_445910^^^cmp     byte ptr [rbx], 0^^^jnz     short loc_4459B0^^^test    sil, sil^^^jnz     short loc_445999^^^movsx   esi, byte ptr [r13+0]^^^lea     rdi, [r12+1]^^^call    sub_4003C0^^^test    rax, rax^^^mov     rbp, rax^^^jz      short loc_4459B0^^^mov     rax, rbx^^^sub     rax, r13^^^cmp     rax, 1^^^mov     r13, rax^^^jz      loc_445C36^^^lea     rcx, [r12+rax]^^^sub     rbx, rax^^^mov     r8d, 1^^^mov     r12, rcx^^^sub     r12, rbp^^^cmp     rbp, rcx^^^cmova   r12, r8^^^cmp     rax, 1Fh^^^jbe     short loc_4459B8^^^mov     rsi, r12^^^mov     rcx, rax^^^mov     rdx, rbx^^^mov     rdi, rbp^^^call    two_way_long_needle^^^mov     r12, rax^^^add     rsp, 48h^^^mov     rax, r12^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^xor     r12d, r12d^^^jmp     short loc_445999^^^lea     rdx, [rsp+78h+var_48]^^^mov     rsi, rax^^^mov     rdi, rbx^^^mov     [rsp+78h+var_78], r8^^^xor     r14d, r14d^^^call    critical_factorization^^^mov     rcx, [rsp+78h+var_48]^^^mov     rdx, rax^^^mov     rdi, rbx^^^mov     r15, rax^^^mov     rsi, rcx^^^mov     [rsp+78h+var_60], rcx^^^add     rsi, rbx^^^call    sub_400370^^^xor     r9d, r9d^^^test    eax, eax^^^mov     r8, [rsp+78h+var_78]^^^jnz     loc_445B01^^^mov     rcx, r13^^^sub     rcx, [rsp+78h+var_60]^^^sub     r8, r15^^^mov     [rsp+78h+var_50], r8^^^mov     [rsp+78h+var_58], rcx^^^lea     rcx, [r15-1]^^^mov     [rsp+78h+var_68], rcx^^^nop     word ptr [rax+rax+00h]^^^lea     r8, [r9+r13]^^^lea     rdi, [rbp+r12+0]^^^xor     esi, esi^^^mov     [rsp+78h+var_70], r9^^^mov     rdx, r8^^^mov     [rsp+78h+var_78], r8^^^sub     rdx, r12^^^call    memchr^^^test    rax, rax^^^mov     r8, [rsp+78h+var_78]^^^mov     r9, [rsp+78h+var_70]^^^jnz     loc_4459B0^^^test    r8, r8^^^jz      loc_4459B0^^^cmp     r14, r15^^^mov     rax, r15^^^cmovnb  rax, r14^^^cmp     r13, rax^^^jbe     short loc_445A92^^^lea     rcx, [rbp+rax+0]^^^movzx   edx, byte ptr [rcx+r9]^^^cmp     [rbx+rax], dl^^^jnz     short loc_445AF0^^^lea     rdx, [rbp+r9+0]^^^jmp     short loc_445A89^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_445AF0^^^add     rax, 1^^^cmp     r13, rax^^^ja      short loc_445A80^^^cmp     r15, r14^^^mov     rax, r15^^^jbe     short loc_445ACF^^^mov     rax, [rsp+78h+var_68]^^^lea     rsi, [rbp+r9+0]^^^movzx   edx, byte ptr [rsi+rax]^^^cmp     [rbx+rax], dl^^^jz      short loc_445ACA^^^jmp     loc_445C24^^^movzx   ecx, byte ptr [rax+rsi-1]^^^lea     rdx, [rax-1]^^^cmp     [rbx+rax-1], cl^^^jnz     short loc_445ACF^^^mov     rax, rdx^^^cmp     rax, r14^^^jnz     short loc_445AB8^^^add     r14, 1^^^cmp     r14, rax^^^ja      loc_445C2C^^^add     r9, [rsp+78h+var_60]^^^mov     r14, [rsp+78h+var_58]^^^mov     r12, r8^^^jmp     loc_445A20^^^mov     rcx, [rsp+78h+var_50]^^^xor     r14d, r14d^^^add     rcx, r9^^^lea     r9, [rcx+rax]^^^jmp     short loc_445AE6^^^mov     rax, r13^^^lea     rcx, [r15-1]^^^sub     rax, r15^^^cmp     rax, r15^^^mov     [rsp+78h+var_68], rcx^^^lea     rcx, [rbp+r15+0]^^^cmovb   rax, r15^^^sub     r8, r15^^^xor     r14d, r14d^^^add     rax, 1^^^mov     [rsp+78h+var_60], rcx^^^mov     [rsp+78h+var_58], r8^^^mov     [rsp+78h+var_50], rax^^^mov     [rsp+78h+var_48], rax^^^nop     word ptr [rax+rax+00h]^^^lea     rcx, [r14+r13]^^^lea     rdi, [rbp+r12+0]^^^xor     esi, esi^^^mov     rdx, rcx^^^mov     [rsp+78h+var_70], rcx^^^sub     rdx, r12^^^call    memchr^^^test    rax, rax^^^mov     rcx, [rsp+78h+var_70]^^^jnz     loc_4459B0^^^test    rcx, rcx^^^jz      loc_4459B0^^^cmp     r13, r15^^^lea     r12, [rbp+r14+0]^^^jbe     short loc_445BB3^^^mov     rdx, [rsp+78h+var_60]^^^mov     rax, r15^^^lea     r12, [rbp+r14+0]^^^movzx   edx, byte ptr [rdx+r14]^^^cmp     [rbx+r15], dl^^^jz      short loc_445BAA^^^jmp     short loc_445C00^^^movzx   edx, byte ptr [r12+rax]^^^cmp     [rbx+rax], dl^^^jnz     short loc_445C00^^^add     rax, 1^^^cmp     r13, rax^^^ja      short loc_445BA0^^^cmp     [rsp+78h+var_68], 0FFFFFFFFFFFFFFFFh^^^jz      loc_445999^^^mov     rax, [rsp+78h+var_68]^^^mov     rdx, [rsp+78h+var_68]^^^movzx   eax, byte ptr [r12+rax]^^^cmp     [rbx+rdx], al^^^jnz     short loc_445C10^^^mov     rax, rdx^^^jmp     short loc_445BEA^^^movzx   edx, byte ptr [r12+rax]^^^cmp     [rbx+rax], dl^^^jnz     short loc_445C10^^^sub     rax, 1^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_445BE0^^^jmp     loc_445999^^^add     r14, [rsp+78h+var_58]^^^add     r14, rax^^^mov     r12, rcx^^^jmp     loc_445B40^^^add     r14, [rsp+78h+var_50]^^^jmp     short loc_445C08^^^mov     rbx, rsi^^^mov     esi, 1^^^jmp     loc_445931^^^mov     rax, r15^^^jmp     loc_445ACF^^^lea     r12, [rbp+r9+0]^^^jmp     loc_445999^^^mov     r12, rbp^^^jmp     loc_445999^^^
__strncasecmp_ssse3$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
_L_unlock_9698$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_406DEB^^^
_L_lock_11872$$$lea     rdi, [rbp+0]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_408193^^^
bsearch$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rcx^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 18h^^^test    rdx, rdx^^^mov     [rsp+48h+var_40], r8^^^mov     [rsp+48h+var_48], 0^^^jz      short loc_417BC7^^^mov     r15, rdx^^^xor     r14d, r14d^^^jmp     short loc_417B93^^^jz      short loc_417BC7^^^lea     r14, [r13+1]^^^cmp     r14, r15^^^jnb     short loc_417BBF^^^lea     r13, [r15+r14]^^^mov     rdi, rbx^^^shr     r13, 1^^^mov     rax, r13^^^imul    rax, r12^^^add     rax, rbp^^^mov     [rsp+48h+var_48], rax^^^mov     rsi, rax^^^call    [rsp+48h+var_40]^^^cmp     eax, 0^^^jge     short loc_417B88^^^mov     r15, r13^^^cmp     r14, r15^^^jb      short loc_417B93^^^mov     [rsp+48h+var_48], 0^^^mov     rax, [rsp+48h+var_48]^^^add     rsp, 18h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
_itoa_word$$$test    ecx, ecx^^^mov     r8d, offset _itoa_upper_digits^^^mov     eax, offset _itoa_lower_digits^^^cmovz   r8, rax^^^cmp     edx, 0Ah^^^jz      short loc_41A4E0^^^cmp     edx, 10h^^^jz      short loc_41A4A0^^^cmp     edx, 8^^^mov     ecx, edx^^^jz      short loc_41A4C0^^^nop     word ptr [rax+rax+00h]^^^mov     rax, rdi^^^xor     edx, edx^^^sub     rsi, 1^^^div     rcx^^^mov     rdi, rax^^^movzx   eax, byte ptr [r8+rdx]^^^test    rdi, rdi^^^mov     [rsi], al^^^jnz     short loc_41A478^^^mov     rax, rsi^^^retn^^^mov     rax, rdi^^^shr     rdi, 4^^^sub     rsi, 1^^^and     eax, 0Fh^^^test    rdi, rdi^^^movzx   eax, byte ptr [r8+rax]^^^mov     [rsi], al^^^jnz     short loc_41A4A0^^^jmp     short loc_41A493^^^mov     rax, rdi^^^shr     rdi, 3^^^sub     rsi, 1^^^and     eax, 7^^^test    rdi, rdi^^^movzx   eax, byte ptr [r8+rax]^^^mov     [rsi], al^^^jnz     short loc_41A4C0^^^jmp     short loc_41A493^^^mov     rcx, 0CCCCCCCCCCCCCCCDh^^^nop     word ptr [rax+rax+00h]^^^mov     rax, rdi^^^sub     rsi, 1^^^mul     rcx^^^shr     rdx, 3^^^lea     rax, [rdx+rdx*4]^^^add     rax, rax^^^sub     rdi, rax^^^test    rdx, rdx^^^movzx   eax, byte ptr [r8+rdi]^^^mov     rdi, rdx^^^mov     [rsi], al^^^jnz     short loc_41A4F0^^^mov     rax, rsi^^^retn^^^
_exit$$$movsxd  rdx, edi^^^mov     r9, 0FFFFFFFFFFFFFFC0h^^^mov     r8d, 0E7h^^^mov     esi, 3Ch^^^jmp     short loc_40EF90^^^mov     rdi, rdx^^^mov     eax, esi^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_40EFA8^^^hlt^^^mov     rdi, rdx^^^mov     eax, r8d^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^jbe     short loc_40EF80^^^neg     eax^^^mov     fs:[r9], eax^^^jmp     short loc_40EF80^^^neg     eax^^^mov     fs:[r9], eax^^^jmp     short loc_40EF8F^^^
_L_lock_10652$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_40779A^^^
_dl_allocate_tls$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^test    rdi, rdi^^^jz      short loc_4565C0^^^mov     rbp, cs:_dl_tls_max_dtv_idx^^^mov     esi, 10h^^^lea     rdi, [rbp+10h]^^^call    calloc^^^test    rax, rax^^^jz      loc_456670^^^add     rbp, 0Eh^^^mov     [rax], rbp^^^add     rax, 10h^^^mov     [rbx+8], rax^^^mov     rdi, rbx^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^jmp     _dl_allocate_tls_init^^^mov     rbp, cs:_dl_tls_static_size^^^mov     rdi, cs:_dl_tls_static_align^^^mov     rsi, rbp^^^call    memalign^^^test    rax, rax^^^mov     r12, rax^^^jz      short loc_45659D^^^lea     rbp, [rax+rbp-900h]^^^mov     edx, 900h^^^test    bpl, 1^^^mov     rdi, rbp^^^jnz     loc_4566B8^^^test    dil, 2^^^jnz     loc_4566A0^^^test    dil, 4^^^jnz     loc_456688^^^mov     ecx, edx^^^xor     eax, eax^^^shr     ecx, 3^^^test    dl, 4^^^rep stosq^^^jz      short loc_456625^^^mov     dword ptr [rdi], 0^^^add     rdi, 4^^^test    dl, 2^^^jz      short loc_456633^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^and     edx, 1^^^jz      short loc_45663B^^^mov     byte ptr [rdi], 0^^^mov     r13, cs:_dl_tls_max_dtv_idx^^^mov     esi, 10h^^^lea     rdi, [r13+10h]^^^call    calloc^^^test    rax, rax^^^jz      short loc_456677^^^add     r13, 0Eh^^^mov     rbx, rbp^^^mov     [rax], r13^^^add     rax, 10h^^^mov     [rbp+8], rax^^^jmp     loc_45659D^^^xor     ebx, ebx^^^jmp     loc_45659D^^^mov     rdi, r12^^^call    free^^^nop^^^jmp     loc_45659D^^^mov     dword ptr [rdi], 0^^^sub     edx, 4^^^add     rdi, 4^^^jmp     loc_45660C^^^mov     word ptr [rdi], 0^^^sub     edx, 2^^^add     rdi, 2^^^jmp     loc_456602^^^mov     byte ptr [rbp+0], 0^^^lea     rdi, [rbp+1]^^^mov     dx, 8FFh^^^jmp     loc_4565F8^^^
__rawmemchr_sse2$$$movq    xmm1, rsi       ^^^mov     rcx, rdi^^^punpcklbw xmm1, xmm1^^^punpcklbw xmm1, xmm1^^^and     rcx, 3Fh^^^pshufd  xmm1, xmm1, 0^^^cmp     rcx, 30h^^^ja      short loc_437F60^^^movdqu  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_4380F0^^^add     rdi, 10h^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_437FA0^^^and     rcx, 0Fh^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^sar     eax, cl^^^test    eax, eax^^^jz      short loc_437F90^^^bsf     eax, eax^^^add     rax, rdi^^^add     rax, rcx^^^retn^^^add     rdi, 10h^^^nop     word ptr [rax+rax+00000000h]^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_4380F0^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pcmpeqb xmm2, xmm1^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_438100^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_438110^^^movdqa  xmm4, xmmword ptr [rdi+30h]^^^pcmpeqb xmm4, xmm1^^^add     rdi, 40h^^^pmovmskb eax, xmm4^^^test    eax, eax^^^jnz     loc_4380E0^^^test    rdi, 3Fh^^^jz      short loc_438060^^^movdqa  xmm0, xmmword ptr [rdi]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     loc_4380F0^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^pcmpeqb xmm2, xmm1^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     loc_438100^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     loc_438110^^^movdqa  xmm3, xmmword ptr [rdi+30h]^^^pcmpeqb xmm3, xmm1^^^pmovmskb eax, xmm3^^^add     rdi, 40h^^^test    eax, eax^^^jnz     loc_4380E0^^^and     rdi, 0FFFFFFFFFFFFFFC0h^^^nop     dword ptr [rax+rax+00h]^^^movdqa  xmm0, xmmword ptr [rdi]^^^movdqa  xmm2, xmmword ptr [rdi+10h]^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^movdqa  xmm4, xmmword ptr [rdi+30h]^^^pcmpeqb xmm0, xmm1^^^pcmpeqb xmm2, xmm1^^^pcmpeqb xmm3, xmm1^^^pcmpeqb xmm4, xmm1^^^pmaxub  xmm3, xmm0^^^pmaxub  xmm4, xmm2^^^pmaxub  xmm4, xmm3^^^pmovmskb eax, xmm4^^^add     rdi, 40h^^^test    eax, eax^^^jz      short loc_438060^^^sub     rdi, 40h^^^pmovmskb eax, xmm0^^^test    eax, eax^^^jnz     short loc_4380F0^^^pmovmskb eax, xmm2^^^test    eax, eax^^^jnz     short loc_438100^^^movdqa  xmm3, xmmword ptr [rdi+20h]^^^pcmpeqb xmm3, xmm1^^^pcmpeqb xmm1, xmmword ptr [rdi+30h]^^^pmovmskb eax, xmm3^^^test    eax, eax^^^jnz     short loc_438110^^^pmovmskb eax, xmm1^^^bsf     eax, eax^^^lea     rax, [rdi+rax+30h]^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi-10h]^^^retn^^^bsf     eax, eax^^^add     rax, rdi^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi+10h]^^^retn^^^bsf     eax, eax^^^lea     rax, [rax+rdi+20h]^^^retn^^^
_L_lock_13380$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_473B4A^^^
do_unshift$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r13^^^mov     [rsp+var_10], r12^^^sub     rsp, 48h^^^mov     r12, [rdi+90h]^^^mov     [rdi+98h], rdx^^^mov     r13, r8^^^mov     [rdi+0A0h], rcx^^^mov     [rdi+0B8h], rsi^^^cmp     qword ptr [r12], 0^^^mov     rbp, [r12+28h]^^^jz      short loc_474C43^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^xor     edx, edx^^^xor     r8d, r8d^^^xor     ecx, ecx^^^lea     rsi, [rbx+98h]^^^mov     [rsp+48h+var_40], 0^^^mov     [rsp+48h+var_48], 1^^^lea     r9, [rsp+48h+var_30]^^^mov     rdi, r12^^^call    rbp^^^mov     rdx, [rbx+98h]^^^cmp     eax, 7^^^mov     [r13+0], rdx^^^mov     edx, 2^^^ja      short loc_474C90^^^mov     eax, eax^^^mov     edx, ds:CSWTCH_13[rax*4]^^^mov     eax, edx^^^mov     rbx, [rsp+48h+var_20]^^^mov     rbp, [rsp+48h+var_18]^^^mov     r12, [rsp+48h+var_10]^^^mov     r13, [rsp+48h+var_8]^^^add     rsp, 48h^^^retn^^^
_nl_load_locale$$$push    rbp^^^xor     eax, eax^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     rbx, rdi^^^mov     [rbp+var_8], r15^^^mov     [rbp+var_18], r13^^^mov     r15d, esi^^^mov     [rbp+var_10], r14^^^sub     rsp, 0E0h^^^mov     dword ptr [rdi+8], 1^^^mov     qword ptr [rdi+10h], 0^^^mov     rdi, [rdi]^^^mov     esi, 80000h^^^call    __open_nocancel^^^test    eax, eax^^^mov     r12d, eax^^^js      loc_462120^^^lea     rdx, [rbp+var_C0]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^js      loc_462159^^^mov     eax, [rbp+var_A8]^^^and     eax, 0F000h^^^cmp     eax, 4000h^^^jz      loc_462217^^^mov     r14, 0FFFFFFFFFFFFFFC0h^^^mov     rsi, [rbp+var_90]^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, r12d^^^mov     ecx, 2^^^mov     edx, 1^^^mov     eax, fs:[r14]^^^mov     [rbp+var_C4], eax^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     r13, rax^^^jz      loc_46217F^^^mov     r14d, 1^^^mov     [rbp+var_C4], 1^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^test    r13, r13^^^jz      short loc_462120^^^mov     rdx, [rbp+var_90]^^^mov     rsi, r13^^^mov     edi, r15d^^^call    _nl_intern_locale_data^^^test    rax, rax^^^jz      short loc_462165^^^mov     qword ptr [rax], 0^^^mov     [rax+18h], r14d^^^mov     [rbx+10h], rax^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^mov     rdi, r13^^^mov     [rbp+var_D0], rax^^^call    free^^^mov     rax, [rbp+var_D0]^^^test    rax, rax^^^jnz     short loc_462159^^^mov     dword ptr fs:[r14], 16h^^^movsxd  rdi, r12d^^^mov     eax, 3^^^syscall^^^jmp     short loc_462120^^^cmp     [rbp+var_C4], 1^^^jnz     short loc_462120^^^mov     rsi, [rbp+var_90]^^^mov     rdi, r13^^^call    munmap^^^jmp     short loc_462120^^^cmp     dword ptr fs:[r14], 26h^^^jnz     loc_4622D9^^^mov     rcx, [rbp+var_90]^^^mov     rdi, rcx^^^mov     [rbp+var_D8], rcx^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rbp+var_D8]^^^jz      loc_4622C7^^^test    rcx, rcx^^^jle     short loc_4621FB^^^mov     r8, rax^^^mov     rdx, rcx^^^mov     rsi, r8^^^mov     edi, r12d^^^mov     [rbp+var_D8], rcx^^^mov     [rbp+var_D0], r8^^^call    __read_nocancel^^^cdqe^^^mov     rcx, [rbp+var_D8]^^^mov     r8, [rbp+var_D0]^^^test    rax, rax^^^jle     loc_462136^^^sub     rcx, rax^^^add     r8, rax^^^test    rcx, rcx^^^jg      short loc_4621BB^^^mov     eax, [rbp+var_C4]^^^mov     [rbp+var_C4], 0^^^mov     fs:[r14], eax^^^xor     r14d, r14d^^^jmp     loc_4620EB^^^movsxd  rdi, r12d^^^mov     ax, 3^^^syscall^^^mov     r8, [rbx]^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, r8^^^mov     rsi, r8^^^repne scasb^^^not     rcx^^^lea     rdx, [rcx-1]^^^movsxd  rcx, r15d^^^movzx   r13d, ds:_nl_category_name_sizes[rcx]^^^movzx   r14d, ds:_nl_category_name_idxs[rcx]^^^movzx   eax, r13b^^^add     r14, 4A17E0h^^^lea     rax, [rdx+rax+24h]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+0E0h+var_D8+7]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    mempcpy^^^lea     rdx, [r13+1]^^^lea     rdi, [rax+5]^^^mov     rsi, r14^^^mov     dword ptr [rax], 5359532Fh^^^mov     byte ptr [rax+4], 5Fh^^^call    memcpy^^^mov     rdi, r12^^^xor     eax, eax^^^mov     esi, 80000h^^^call    __open_nocancel^^^test    eax, eax^^^mov     r12d, eax^^^js      loc_462120^^^lea     rdx, [rbp+var_C0]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^jns     loc_46209F^^^jmp     loc_462159^^^xor     r14d, r14d^^^mov     [rbp+var_C4], 0^^^jmp     loc_4620EB^^^mov     r14d, 1^^^mov     [rbp+var_C4], 1^^^xor     r13d, r13d^^^jmp     loc_4620EB^^^
setlocale$$$mov     [rsp+var_28], rbp^^^movsxd  rbp, edi^^^mov     [rsp+var_30], rbx^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     r12d, edi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 158h^^^cmp     rbp, 0Ch^^^mov     rbx, rsi^^^ja      loc_4614E2^^^test    rsi, rsi^^^jz      short loc_460EA9^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_460E81^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rsi, off_6C35E0[rbp*8]^^^mov     rdi, rbx^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_460EF0^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_460EA9^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rbx, off_6C35E0[rbp*8]^^^mov     rax, rbx^^^mov     rbp, [rsp+158h+var_28]^^^mov     rbx, [rsp+158h+var_30]^^^mov     r12, [rsp+158h+var_20]^^^mov     r13, [rsp+158h+var_18]^^^mov     r14, [rsp+158h+var_10]^^^mov     r15, [rsp+158h+var_8]^^^add     rsp, 158h^^^retn^^^mov     edi, offset aLocpath^^^mov     [rsp+158h+var_48], 0^^^mov     [rsp+158h+var_40], 0^^^call    getenv^^^test    rax, rax^^^jz      short loc_460F20^^^cmp     byte ptr [rax], 0^^^jnz     loc_461060^^^cmp     r12d, 6^^^jz      loc_4610A8^^^mov     r13, ds:_nl_current_used[rbp*8]^^^mov     [rsp+158h+var_B8], rbx^^^test    r13, r13^^^jz      loc_461290^^^mov     rsi, [rsp+158h+var_40]^^^mov     rdi, [rsp+158h+var_48]^^^lea     rcx, [rsp+158h+var_B8]^^^mov     edx, r12d^^^call    _nl_find_locale^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_461276^^^cmp     dword ptr [rax+30h], 0FFFFFFFFh^^^jz      short loc_460F7C^^^mov     dword ptr [rax+30h], 0FFFFFFFFh^^^mov     rbx, [rsp+158h+var_B8]^^^cmp     rbx, offset _nl_C_name^^^jz      short loc_460FA6^^^mov     rdi, rbx^^^call    strdup^^^test    rax, rax^^^mov     [rsp+158h+var_B8], rax^^^jz      loc_461276^^^lea     rsi, [rsp+158h+var_B8]^^^mov     edi, r12d^^^call    new_composite_name^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_461260^^^test    r13, r13^^^jz      short loc_460FDE^^^mov     rax, ds:_nl_category_postload[rbp*8]^^^mov     _nl_global_locale[rbp*8], r14^^^test    rax, rax^^^jz      short loc_460FDE^^^call    rax ^^^mov     r12, [rsp+158h+var_B8]^^^mov     rdi, off_6C35E0[rbp*8]^^^cmp     r12, rdi^^^jz      short loc_461009^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_461001^^^call    free^^^mov     off_6C35E0[rbp*8], r12^^^mov     rdi, cs:off_6C3610^^^cmp     rbx, rdi^^^jz      short loc_46102A^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_461023^^^call    free^^^mov     cs:off_6C3610, rbx^^^add     cs:_nl_msg_cat_cntr, 1^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_461045^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rdi, [rsp+158h+var_48]^^^call    free^^^mov     rbx, [rsp+158h+var_B8]^^^jmp     loc_460EB1^^^lea     rcx, [rsp+158h+var_40]^^^lea     rdx, [rsp+158h+var_48]^^^mov     esi, 3Ah^^^mov     rdi, rax^^^call    argz_create_sep^^^test    eax, eax^^^jz      loc_4611F8^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_4614F7^^^mov     edi, offset __libc_setlocale_lock^^^xor     ebx, ebx^^^call    near ptr 0^^^jmp     loc_460EB1^^^mov     edx, 1^^^xor     eax, eax^^^jmp     short loc_4610BE^^^add     eax, 1^^^add     edx, 1^^^cmp     eax, 6^^^jz      short loc_4610B8^^^movsxd  rcx, eax^^^cmp     edx, 0Dh^^^mov     [rsp+rcx*8+158h+var_128], rbx^^^jnz     short loc_4610B8^^^mov     esi, 3Bh^^^mov     rdi, rbx^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_461376^^^xor     ebp, ebp^^^mov     ebx, 0Ch^^^mov     r13d, 0Dh^^^jmp     short loc_46116B^^^movsxd  r12, ebx^^^mov     rsi, [rsp+158h+var_40]^^^mov     rdi, [rsp+158h+var_48]^^^lea     rcx, [rsp+r12*8+158h+var_128]^^^mov     edx, ebx^^^call    _nl_find_locale^^^test    rax, rax^^^mov     [rsp+r12*8+158h+var_B8], rax^^^jz      loc_4612A0^^^cmp     dword ptr [rax+30h], 0FFFFFFFFh^^^jz      short loc_461135^^^mov     dword ptr [rax+30h], 0FFFFFFFFh^^^mov     r14, [rsp+r12*8+158h+var_128]^^^cmp     r14, offset _nl_C_name^^^jz      short loc_461192^^^mov     r15, off_6C35E0[r12*8]^^^mov     rdi, r14^^^mov     rsi, r15^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_461180^^^lea     eax, [rbx-1]^^^mov     [rsp+r12*8+158h+var_128], r15^^^test    ebx, ebx^^^jle     short loc_4611A0^^^mov     r13d, ebx^^^mov     ebx, eax^^^cmp     ebx, 6^^^jnz     short loc_4610F8^^^mov     eax, 5^^^jmp     short loc_461166^^^mov     rdi, r14^^^call    strdup^^^test    rax, rax^^^mov     [rsp+r12*8+158h+var_128], rax^^^jz      short loc_4611A5^^^lea     eax, [rbx-1]^^^jmp     short loc_461162^^^mov     r13d, ebx^^^mov     ebx, eax^^^test    ebx, ebx^^^js      loc_4612B4^^^cmp     r13d, 0Dh^^^lea     ebx, [r13+1]^^^jz      short loc_461224^^^nop     word ptr [rax+rax+00000000h]^^^cmp     r13d, 6^^^jz      short loc_4611EB^^^movsxd  rax, r13d^^^mov     rdi, [rsp+rax*8+158h+var_128]^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_4611E6^^^cmp     rdi, off_6C35E0[rax*8]^^^jz      short loc_4611E6^^^call    free^^^cmp     ebx, 0Dh^^^jz      short loc_461224^^^add     r13d, 1^^^add     ebx, 1^^^jmp     short loc_4611C0^^^lea     rsi, [rsp+158h+var_40]^^^lea     rdi, [rsp+158h+var_48]^^^mov     ecx, 3Ah^^^mov     edx, offset _nl_default_locale_path^^^call    argz_add_sep^^^test    eax, eax^^^jz      loc_460F20^^^jmp     loc_461085^^^xor     ebx, ebx^^^nop     word ptr [rax+rax+00000000h]^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_461244^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rdi, [rsp+158h+var_48]^^^call    free^^^mov     rdi, rbp^^^call    free^^^jmp     loc_460EB1^^^mov     rdi, [rsp+158h+var_B8]^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_461276^^^call    free^^^mov     [rsp+158h+var_B8], 0^^^jmp     loc_461031^^^xor     r14d, r14d^^^jmp     loc_460F84^^^cmp     [rsp+r12*8+158h+var_128], offset _nl_C_name^^^jnz     loc_4611A5^^^jmp     loc_461192^^^lea     rsi, [rsp+158h+var_128]^^^mov     edi, 6^^^call    new_composite_name^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_4611AD^^^mov     r14d, 1^^^xor     r13d, r13d^^^jmp     short loc_4612E8^^^add     r13d, 1^^^add     r14d, 1^^^cmp     r13d, 6^^^jz      short loc_4612E0^^^movsxd  r12, r13d^^^cmp     ds:_nl_current_used[r12*8], 0^^^mov     rax, [rsp+r12*8+158h+var_B8]^^^jz      short loc_46131B^^^mov     _nl_global_locale[r12*8], rax^^^mov     rax, ds:_nl_category_postload[r12*8]^^^test    rax, rax^^^jz      short loc_46131B^^^call    rax ^^^mov     r15, [rsp+r12*8+158h+var_128]^^^mov     rdi, off_6C35E0[r12*8]^^^cmp     r15, rdi^^^jz      short loc_461343^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_46133B^^^call    free^^^mov     off_6C35E0[r12*8], r15^^^cmp     r14d, 0Dh^^^jnz     short loc_4612E0^^^mov     rdi, cs:off_6C3610^^^cmp     rbx, rdi^^^jz      short loc_46136A^^^cmp     rdi, offset _nl_C_name^^^jz      short loc_461363^^^call    free^^^mov     cs:off_6C3610, rbx^^^add     cs:_nl_msg_cat_cntr, 1^^^jmp     loc_461230^^^mov     rdi, rbx^^^call    strdup^^^test    rax, rax^^^mov     rbp, rax^^^jz      loc_4615F5^^^mov     r13, rax^^^movzx   eax, cs:byte_4A17D9^^^add     rax, 4A17E0h^^^mov     [rsp+158h+var_150], rax^^^movzx   eax, cs:byte_4A17D8^^^add     rax, 4A17E0h^^^mov     [rsp+158h+var_148], rax^^^movzx   eax, cs:byte_4A17D7^^^add     rax, 4A17E0h^^^mov     [rsp+158h+var_140], rax^^^movzx   eax, cs:byte_4A17D6^^^add     rax, 4A17E0h^^^mov     [rsp+158h+var_138], rax^^^movzx   eax, cs:byte_4A17D5^^^add     rax, 4A17E0h^^^mov     [rsp+158h+var_130], rax^^^mov     esi, 3Dh^^^mov     rdi, r13^^^call    sub_4003C0^^^test    rax, rax^^^mov     r14, rax^^^jz      loc_4615C9^^^mov     r12, rax^^^movzx   eax, cs:_nl_category_name_sizes^^^sub     r12, r13^^^cmp     r12, rax^^^jz      loc_4615A1^^^movzx   eax, cs:byte_4A17C1^^^cmp     r12, rax^^^jz      loc_461579^^^movzx   eax, cs:byte_4A17C2^^^cmp     r12, rax^^^jz      loc_461551^^^movzx   eax, cs:byte_4A17C3^^^cmp     r12, rax^^^jz      loc_461501^^^movzx   eax, cs:byte_4A17C4^^^cmp     r12, rax^^^jz      loc_461708^^^movzx   eax, cs:byte_4A17C5^^^cmp     r12, rax^^^jz      loc_4616DD^^^movzx   eax, cs:byte_4A17C7^^^cmp     r12, rax^^^jz      loc_46166E^^^movzx   eax, cs:byte_4A17C8^^^cmp     r12, rax^^^jz      loc_46164C^^^movzx   eax, cs:byte_4A17C9^^^cmp     r12, rax^^^jz      loc_46162A^^^movzx   eax, cs:byte_4A17CA^^^cmp     r12, rax^^^jz      loc_461608^^^movzx   eax, cs:byte_4A17CB^^^cmp     r12, rax^^^jz      loc_4616BB^^^movzx   eax, cs:byte_4A17CC^^^cmp     r12, rax^^^jz      loc_461699^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_4614DA^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     rdi, rbp^^^call    free^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebx, ebx^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_460EB1^^^mov     ebx, 0^^^jmp     loc_460EB1^^^movzx   esi, cs:byte_4A17D0^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461446^^^mov     eax, 3^^^lea     rdi, [r14+1]^^^cdqe^^^mov     esi, 3Bh^^^mov     [rsp+rax*8+158h+var_128], rdi^^^call    sub_4003C0^^^test    rax, rax^^^jz      loc_4615C9^^^mov     byte ptr [rax], 0^^^lea     r13, [rax+1]^^^jmp     loc_4613E7^^^movzx   esi, cs:byte_4A17CF^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461436^^^mov     eax, 2^^^jmp     short loc_461527^^^movzx   esi, cs:byte_4A17CE^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461426^^^mov     eax, 1^^^jmp     short loc_461527^^^movzx   esi, cs:_nl_category_name_idxs^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461416^^^xor     eax, eax^^^jmp     loc_461527^^^mov     edx, 1^^^xor     eax, eax^^^jmp     short loc_4615E1^^^cmp     edx, 0Dh^^^jz      loc_4610E8^^^add     eax, 1^^^add     edx, 1^^^cmp     eax, 6^^^jz      short loc_4615DB^^^movsxd  rcx, eax^^^cmp     [rsp+rcx*8+158h+var_128], rbx^^^jnz     short loc_4615D2^^^jmp     loc_4614C6^^^mov     ebx, 0^^^test    rbx, rbx^^^jnz     loc_461093^^^jmp     loc_460EB1^^^mov     rsi, [rsp+158h+var_140]^^^mov     rdx, r12^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_4614A6^^^mov     eax, 0Ah^^^jmp     loc_461527^^^mov     rsi, [rsp+158h+var_138]^^^mov     rdx, r12^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461496^^^mov     eax, 9^^^jmp     loc_461527^^^mov     rsi, [rsp+158h+var_130]^^^mov     rdx, r12^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461486^^^mov     eax, 8^^^jmp     loc_461527^^^movzx   esi, cs:byte_4A17D4^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461476^^^mov     eax, 7^^^jmp     loc_461527^^^mov     rsi, [rsp+158h+var_150]^^^mov     rdx, r12^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_4614C6^^^mov     eax, 0Ch^^^jmp     loc_461527^^^mov     rsi, [rsp+158h+var_148]^^^mov     rdx, r12^^^mov     rdi, r13^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_4614B6^^^mov     eax, 0Bh^^^jmp     loc_461527^^^movzx   esi, cs:byte_4A17D2^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461466^^^mov     eax, 5^^^jmp     loc_461527^^^movzx   esi, cs:byte_4A17D1^^^mov     rdx, r12^^^mov     rdi, r13^^^add     rsi, 4A17E0h^^^call    sub_400370^^^test    eax, eax^^^jnz     loc_461456^^^mov     eax, 4^^^jmp     loc_461527^^^
_L_unlock_157_0$$$lea     rdi, [rsi]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_4752EC^^^
_L_unlock_2249$$$lea     rdi, tzset_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_447D59^^^
malloc_atfork$$$mov     rax, 0FFFFFFFFFFFFFFD0h^^^push    rbx^^^mov     rbx, rdi^^^cmp     qword ptr fs:[rax], 0FFFFFFFFFFFFFFFFh^^^jz      short loc_407920^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4078E2^^^lock cmpxchg cs:list_lock, esi^^^jnz     _L_lock_10843^^^jmp     short loc_4078EF^^^cmpxchg cs:list_lock, esi^^^jnz     _L_lock_10843^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_407907^^^lock dec cs:list_lock^^^jnz     _L_unlock_10846^^^jmp     short loc_407913^^^dec     cs:list_lock^^^jnz     _L_unlock_10846^^^mov     rdi, rbx^^^pop     rbx^^^jmp     malloc^^^cmp     cs:save_malloc_hook, offset malloc_check^^^jz      short loc_407940^^^pop     rbx^^^mov     rsi, rdi^^^mov     edi, offset main_arena^^^jmp     _int_malloc^^^call    top_check^^^mov     edx, eax^^^xor     eax, eax^^^test    edx, edx^^^js      short loc_4079C7^^^lea     rsi, [rbx+1]^^^mov     edi, offset main_arena^^^call    _int_malloc^^^test    rax, rax^^^jz      short loc_4079C7^^^mov     rcx, [rax-8]^^^lea     rsi, [rax-10h]^^^mov     rdx, rcx^^^and     ecx, 2^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^cmp     rcx, 1^^^sbb     rcx, rcx^^^and     rcx, 0FFFFFFFFFFFFFFF8h^^^add     rcx, 11h^^^sub     rdx, rcx^^^cmp     rbx, rdx^^^jb      short loc_4079A0^^^jmp     short loc_4079B6^^^mov     byte ptr [rax+rdx], 0FFh^^^sub     rdx, 0FFh^^^cmp     rbx, rdx^^^jnb     short loc_4079B6^^^mov     rcx, rdx^^^sub     rcx, rbx^^^cmp     rcx, 0FFh^^^ja      short loc_407990^^^mov     ecx, edx^^^sub     cl, bl^^^mov     [rax+rdx], cl^^^mov     rdx, rsi^^^shr     rsi, 3^^^shr     rdx, 0Bh^^^xor     esi, edx^^^mov     [rax+rbx], sil^^^pop     rbx^^^retn^^^
_IO_str_seekoff$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 38h^^^test    ecx, ecx^^^mov     rbp, rsi^^^mov     r12d, edx^^^jz      loc_42DAC0^^^mov     r13, [rdi+10h]^^^cmp     [rdi+28h], r13^^^cmovnb  r13, [rdi+28h]^^^mov     rax, [rdi+18h]^^^sub     r13, rax^^^test    cl, 1^^^jz      loc_42DB40^^^cmp     r12d, 1^^^jz      loc_42DB50^^^lea     rdx, [rbp+r13+0]^^^cmp     r12d, 2^^^cmovz   rbp, rdx^^^test    rbp, rbp^^^js      loc_42DBCB^^^cmp     rbp, r13^^^jle     short loc_42DA5C^^^mov     rdx, [rbx+40h]^^^sub     rdx, [rbx+38h]^^^cmp     rbp, rdx^^^jg      loc_42DB70^^^lea     rdx, [rax+rbp]^^^add     rax, r13^^^and     ecx, 2^^^mov     [rbx+10h], rax^^^mov     rax, rbp^^^mov     [rbx+8], rdx^^^test    ecx, ecx^^^jz      short loc_42DAEC^^^cmp     r12d, 1^^^jz      loc_42DB60^^^lea     rax, [rbp+r13+0]^^^cmp     r12d, 2^^^cmovz   rbp, rax^^^test    rbp, rbp^^^js      loc_42DBCB^^^cmp     rbp, r13^^^jle     short loc_42DAAB^^^mov     rax, [rbx+40h]^^^sub     rax, [rbx+38h]^^^cmp     rbp, rax^^^jg      loc_42DBA8^^^mov     rax, rbp^^^add     rax, [rbx+20h]^^^mov     [rbx+28h], rax^^^mov     rax, rbp^^^jmp     short loc_42DAEC^^^mov     eax, [rdi]^^^test    ah, 4^^^jz      short loc_42DAE0^^^test    ah, 8^^^jz      short loc_42DB18^^^mov     r13, [rdi+10h]^^^cmp     [rdi+28h], r13^^^cmovnb  r13, [rdi+28h]^^^sub     r13, [rdi+18h]^^^jmp     short loc_42DA75^^^test    al, 8^^^jnz     short loc_42DB08^^^mov     rax, [rbx+28h]^^^sub     rax, [rbx+20h]^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^mov     rax, [rbx+8]^^^sub     rax, [rbx+18h]^^^jmp     short loc_42DAEC^^^mov     r13, [rdi+10h]^^^cmp     [rdi+28h], r13^^^mov     ecx, 1^^^cmovnb  r13, [rdi+28h]^^^mov     rax, [rdi+18h]^^^sub     r13, rax^^^cmp     r12d, 1^^^jnz     loc_42DA30^^^jmp     short loc_42DB50^^^and     ecx, 2^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_42DA71^^^mov     rdx, [rbx+8]^^^sub     rdx, rax^^^add     rbp, rdx^^^jmp     loc_42DA3D^^^mov     rax, [rbx+28h]^^^sub     rax, [rbx+20h]^^^add     rbp, rax^^^jmp     loc_42DA8C^^^mov     edx, 1^^^mov     rsi, rbp^^^mov     rdi, rbx^^^mov     [rsp+38h+var_30], ecx^^^call    enlarge_userbuf_part_0^^^mov     edx, eax^^^mov     ecx, [rsp+38h+var_30]^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^test    edx, edx^^^jnz     loc_42DAEC^^^mov     rax, [rbx+18h]^^^jmp     loc_42DA5C^^^xor     edx, edx^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    enlarge_userbuf_part_0^^^mov     edx, eax^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^test    edx, edx^^^jz      loc_42DAAB^^^jmp     loc_42DAEC^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_42DAEC^^^
_L_lock_10577$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4076DF^^^
_L_unlock_2873$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42C923^^^
sub_482A50$$$xor     eax, eax^^^cmp     qword ptr [rdi+448h], 0^^^jnz     loc_482AE0^^^mov     rdx, [rbx+18h]^^^mov     [rdx], rax^^^pop     rbx^^^retn^^^call    _dl_tls_get_addr_soft^^^jmp     loc_482A60^^^
_nl_init_alt_digit$$$push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, [rdi+28h]^^^test    rbx, rbx^^^jz      short loc_44B620^^^mov     eax, [rbx+28h]^^^test    eax, eax^^^jnz     short loc_44B61B^^^mov     r12, [rbp+1B8h]^^^mov     dword ptr [rbx+28h], 1^^^test    r12, r12^^^jz      short loc_44B61B^^^mov     edi, 320h^^^call    malloc^^^test    rax, rax^^^mov     [rbx+18h], rax^^^jz      short loc_44B61B^^^xor     ebp, ebp^^^jmp     short loc_44B5FC^^^mov     rax, [rbx+18h]^^^mov     [rax+rbp], r12^^^xor     esi, esi^^^mov     rdi, r12^^^add     rbp, 8^^^call    sub_400350^^^cmp     rbp, 320h^^^lea     r12, [rax+1]^^^jnz     short loc_44B5F8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     edi, 30h^^^call    malloc^^^test    rax, rax^^^mov     rdx, rax^^^mov     [rbp+28h], rax^^^jz      short loc_44B61B^^^mov     rdi, rax^^^mov     ecx, 6^^^mov     rax, rbx^^^rep stosq^^^mov     rbx, rdx^^^mov     qword ptr [rbp+20h], offset _nl_cleanup_time^^^jmp     loc_44B5C0^^^
strip$$$mov     rcx, cs:off_499B08^^^mov     r8, cs:off_499B18^^^xor     r9d, r9d^^^jmp     short loc_400BC0^^^movsx   rdx, al^^^test    byte ptr [rcx+rdx*2], 8^^^jnz     short loc_400B9A^^^cmp     al, 5Fh^^^jz      short loc_400B9A^^^cmp     al, 2Dh^^^jz      short loc_400B9A^^^cmp     al, 2Eh^^^jz      short loc_400B9A^^^cmp     al, 2Ch^^^jz      short loc_400B9A^^^cmp     al, 3Ah^^^jnz     short loc_400BA5^^^mov     eax, [r8+rdx*4]^^^mov     [rdi], al^^^inc     rdi^^^jmp     short loc_400BBD^^^cmp     al, 2Fh^^^jnz     short loc_400BBD^^^inc     r9d^^^cmp     r9d, 3^^^jnz     short loc_400BB7^^^mov     eax, r9d^^^jmp     short loc_400BD0^^^mov     byte ptr [rdi], 2Fh^^^inc     rdi^^^inc     rsi^^^mov     al, [rsi]^^^test    al, al^^^jnz     short loc_400B7C^^^jmp     short loc_400BB2^^^mov     byte ptr [rdi], 2Fh^^^inc     eax^^^inc     rdi^^^cmp     eax, 1^^^jle     short loc_400BC8^^^mov     byte ptr [rdi], 0^^^retn^^^
_IO_default_uflow$$$mov     rax, [rdi+0D8h]^^^push    rbx^^^mov     rbx, rdi^^^call    qword ptr [rax+20h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_42BF42^^^mov     rdx, [rbx+8]^^^movzx   eax, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rbx+8], rdx^^^pop     rbx^^^retn^^^
__read_nocancel$$$mov     eax, 0^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
__close_nocancel$$$mov     eax, 3^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
__getdents64$$$push    r14^^^mov     r8, rsi^^^movsxd  rdi, edi^^^mov     eax, 4Eh^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      short loc_44C141^^^lea     r12, [r8+rax]^^^mov     r13, rax^^^cmp     r8, r12^^^jnb     short loc_44C135^^^mov     rbx, r8^^^nop     dword ptr [rax+00h]^^^movzx   eax, word ptr [rbx+10h]^^^lea     r14, [rbx+12h]^^^mov     rdi, r14^^^movzx   ebp, byte ptr [rbx+rax-1]^^^call    strlen^^^lea     rdi, [rbx+13h]^^^lea     rdx, [rax+1]^^^mov     rsi, r14^^^call    sub_400340^^^movzx   eax, word ptr [rbx+10h]^^^mov     [rbx+12h], bpl^^^add     rbx, rax^^^cmp     r12, rbx^^^ja      short loc_44C100^^^pop     rbx^^^pop     rbp^^^pop     r12^^^mov     rax, r13^^^pop     r13^^^pop     r14^^^retn^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^or      r13, 0FFFFFFFFFFFFFFFFh^^^mov     fs:[rdx], eax^^^jmp     short loc_44C135^^^
_L_unlock_4064$$$lea     rdi, __gconv_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_458B0E^^^
_L_unlock_44$$$lea     rdi, lock_2^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4229D0^^^
_IO_str_init_static$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     eax, 0FFFFFFFFh^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 28h^^^test    edx, edx^^^mov     rbx, rdi^^^mov     rbp, rsi^^^cmovns  eax, edx^^^mov     r12, rcx^^^cdqe^^^test    rax, rax^^^jnz     short loc_42DD20^^^xor     esi, esi^^^mov     rdi, rbp^^^call    sub_400350^^^mov     r13, rax^^^xor     ecx, ecx^^^mov     rdx, r13^^^mov     rsi, rbp^^^mov     rdi, rbx^^^call    _IO_setb^^^test    r12, r12^^^mov     [rbx+20h], rbp^^^mov     [rbx+18h], rbp^^^mov     [rbx+8], rbp^^^jz      short loc_42DD38^^^mov     [rbx+28h], r12^^^mov     [rbx+30h], r13^^^mov     [rbx+10h], r12^^^mov     qword ptr [rbx+0E0h], 0^^^mov     rbp, [rsp+28h+var_18]^^^mov     rbx, [rsp+28h+var_20]^^^mov     r12, [rsp+28h+var_10]^^^mov     r13, [rsp+28h+var_8]^^^add     rsp, 28h^^^retn^^^add     rax, rsi^^^mov     r13, 0FFFFFFFFFFFFFFFFh^^^cmp     rsi, rax^^^cmovb   r13, rax^^^jmp     short loc_42DCCF^^^mov     [rbx+28h], rbp^^^mov     [rbx+30h], rbp^^^mov     [rbx+10h], r13^^^jmp     short loc_42DCFC^^^
find_module$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     rbx, rdx^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     r13, rsi^^^mov     [rbp+var_8], r15^^^sub     rsp, 40h^^^mov     r15, rdi^^^call    strlen^^^mov     rdi, r13^^^mov     [rbp+var_38], rax^^^call    strlen^^^mov     rdx, [rbp+var_38]^^^lea     r14, [rax+1]^^^mov     rsi, r15^^^lea     rax, [r14+rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+40h+var_38+7]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    mempcpy^^^mov     rdx, r14^^^mov     rsi, r13^^^mov     rdi, rax^^^call    memcpy^^^mov     rdi, r12^^^call    __gconv_find_shlib^^^mov     rdx, rax^^^mov     [rbx], rax^^^mov     eax, 1^^^test    rdx, rdx^^^jz      short loc_4601C0^^^mov     rax, [rdx+18h]^^^mov     r12, [rdx+20h]^^^mov     qword ptr [rbx+8], 0^^^mov     [rbx+28h], rax^^^mov     rax, [rdx+28h]^^^mov     [rbx+38h], r12^^^mov     qword ptr [rbx+30h], 0^^^mov     qword ptr [rbx+60h], 0^^^mov     [rbx+40h], rax^^^xor     eax, eax^^^test    r12, r12^^^jz      short loc_4601C0^^^ror     r12, 11h^^^xor     r12, fs:30h^^^mov     rdi, r12^^^call    _dl_mcount_wrapper_check^^^mov     rdi, rbx^^^call    r12^^^mov     rdx, [rbx+30h]^^^test    rdx, rdx^^^jz      short loc_4601C0^^^xor     rdx, fs:30h^^^rol     rdx, 11h^^^mov     [rbx+30h], rdx^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^
_L_unlock_1194$$$lea     rdi, envlock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_419019^^^
vsyslog$$$mov     rcx, rdx^^^mov     rdx, rsi^^^mov     esi, 0FFFFFFFFh^^^jmp     __vsyslog_chk^^^
__libc_check_standard_fds$$$sub     rsp, 8^^^xor     edi, edi^^^xor     eax, eax^^^mov     esi, 1^^^call    fcntl^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_401428^^^xor     eax, eax^^^mov     esi, 1^^^mov     edi, 1^^^call    fcntl^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_401460^^^xor     eax, eax^^^mov     esi, 1^^^mov     edi, 2^^^call    fcntl^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_401443^^^add     rsp, 8^^^retn^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 9^^^jnz     short loc_4013F7^^^mov     esi, 20001h^^^xor     edi, edi^^^call    check_one_fd_part_0^^^jmp     short loc_4013F7^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 9^^^jnz     short loc_401423^^^pop     rax^^^mov     esi, 20000h^^^mov     edi, 2^^^jmp     check_one_fd_part_0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 9^^^jnz     short loc_40140D^^^mov     esi, 20000h^^^mov     edi, 1^^^call    check_one_fd_part_0^^^jmp     short loc_40140D^^^
_L_unlock_204$$$lea     rdi, [r8]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short loc_425E46^^^
_L_unlock_13432$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_473BCF^^^
wcslen$$$cmp     dword ptr [rdi], 0^^^jz      loc_4767C0^^^cmp     dword ptr [rdi+4], 0^^^jz      loc_4767D0^^^cmp     dword ptr [rdi+8], 0^^^jz      loc_4767E0^^^cmp     dword ptr [rdi+0Ch], 0^^^jz      loc_4767F0^^^cmp     dword ptr [rdi+10h], 0^^^jz      loc_476800^^^cmp     dword ptr [rdi+14h], 0^^^jz      loc_476810^^^cmp     dword ptr [rdi+18h], 0^^^jz      loc_476820^^^cmp     dword ptr [rdi+1Ch], 0^^^jz      loc_476830^^^pxor    xmm0, xmm0^^^lea     rax, [rdi+20h]^^^lea     rcx, [rdi+10h]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^pcmpeqd xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^pxor    xmm1, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^pxor    xmm2, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^pxor    xmm3, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm0, xmmword ptr [rax]^^^pmovmskb edx, xmm0^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm1, xmmword ptr [rax]^^^pmovmskb edx, xmm1^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm2, xmmword ptr [rax]^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     loc_476770^^^pcmpeqd xmm3, xmmword ptr [rax]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rax, [rax+10h]^^^jnz     short loc_476770^^^and     rax, 0FFFFFFFFFFFFFFC0h^^^nop     dword ptr [rax+rax+00h]^^^movaps  xmm0, xmmword ptr [rax]^^^movaps  xmm1, xmmword ptr [rax+10h]^^^movaps  xmm2, xmmword ptr [rax+20h]^^^movaps  xmm6, xmmword ptr [rax+30h]^^^pminub  xmm0, xmm1^^^pminub  xmm2, xmm6^^^pminub  xmm2, xmm0^^^pcmpeqd xmm2, xmm3^^^pmovmskb edx, xmm2^^^test    edx, edx^^^lea     rax, [rax+40h]^^^jz      short loc_476700^^^pcmpeqd xmm3, xmmword ptr [rax-40h]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rcx, [rcx+30h]^^^jnz     short loc_476770^^^pcmpeqd xmm3, xmm1^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rcx, [rcx-10h]^^^jnz     short loc_476770^^^pcmpeqd xmm3, xmmword ptr [rax-20h]^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rcx, [rcx-10h]^^^jnz     short loc_476770^^^pcmpeqd xmm3, xmm6^^^pmovmskb edx, xmm3^^^test    edx, edx^^^lea     rcx, [rcx-10h]^^^jnz     short loc_476770^^^jmp     short loc_476700^^^sub     rax, rcx^^^shr     rax, 2^^^test    dl, dl^^^jz      short loc_476790^^^mov     cl, dl^^^and     cl, 0Fh^^^jz      short loc_4767A0^^^retn^^^mov     ch, dh^^^and     ch, 0Fh^^^jz      short loc_4767B0^^^add     rax, 2^^^retn^^^add     rax, 1^^^retn^^^add     rax, 3^^^retn^^^xor     rax, rax^^^retn^^^mov     rax, 1^^^retn^^^mov     rax, 2^^^retn^^^mov     rax, 3^^^retn^^^mov     rax, 4^^^retn^^^mov     rax, 5^^^retn^^^mov     rax, 6^^^retn^^^mov     rax, 7^^^retn^^^
__restore_rt$$$mov     rax, 0Fh^^^syscall^^^nop     dword ptr [rax+00000000h]^^^
_wordcopy_bwd_aligned$$$mov     rax, rdx^^^and     eax, 7^^^jmp     ds:off_49CBB0[rax*8]^^^
sub_4261BF$$$mov     rdi, rsi^^^call    _Unwind_Resume^^^
new_exp$$$push    r13^^^mov     r13, rdx^^^push    r12^^^mov     r12d, edi^^^push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     ebx, edi^^^sub     rsp, 8^^^sub     r12d, 1^^^js      short loc_416DD8^^^movsxd  rsi, r12d^^^lea     rdx, [rdx+rsi*8]^^^cmp     qword ptr [rdx], 0^^^jz      short loc_416E20^^^mov     ecx, r12d^^^xor     eax, eax^^^neg     rcx^^^shl     rcx, 3^^^jmp     short loc_416DD3^^^sub     rax, 8^^^cmp     qword ptr [rdx+rax], 0^^^jz      short loc_416E20^^^cmp     rax, rcx^^^jnz     short loc_416DC8^^^mov     edi, 20h^^^call    malloc^^^test    rax, rax^^^jz      short loc_416E18^^^test    r12d, r12d^^^mov     [rax], ebx^^^mov     [rax+4], ebp^^^js      loc_416E82^^^movsxd  rsi, r12d^^^lea     rdx, [r13+rsi*8+0]^^^mov     rcx, [rdx]^^^sub     r12d, 1^^^sub     rdx, 8^^^cmp     r12d, 0FFFFFFFFh^^^mov     [rax+rsi*8+8], rcx^^^jz      short loc_416E82^^^movsxd  rsi, r12d^^^jmp     short loc_416DFD^^^test    r12d, r12d^^^movsxd  rsi, r12d^^^js      short loc_416E82^^^lea     rbp, [r13+rsi*8+0]^^^jmp     short loc_416E4C^^^cmp     eax, 3^^^jz      short loc_416E70^^^cmp     eax, 1^^^jz      short loc_416E65^^^mov     rdi, rbx^^^call    free^^^sub     rbp, 8^^^sub     r12d, 1^^^js      short loc_416E80^^^mov     rbx, [rbp+0]^^^test    rbx, rbx^^^jz      short loc_416E42^^^mov     eax, [rbx]^^^cmp     eax, 2^^^jnz     short loc_416E30^^^mov     rdi, [rbx+10h]^^^call    __gettext_free_exp^^^mov     rdi, [rbx+8]^^^call    __gettext_free_exp^^^jmp     short loc_416E3A^^^mov     rdi, [rbx+18h]^^^call    __gettext_free_exp^^^jmp     short loc_416E5C^^^xor     eax, eax^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^
__strtoll_internal$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     r8, fs:[rax]^^^jmp     ____strtoll_l_internal^^^
do_dlopen$$$push    rbx^^^mov     rbx, rdi^^^mov     rcx, 0FFFFFFFFFFFFFFFEh^^^sub     rsp, 10h^^^mov     rax, cs:environ^^^mov     rdx, [rdi+10h]^^^mov     esi, [rdi+8]^^^mov     r9, cs:__libc_argv^^^mov     r8d, cs:__libc_argc^^^mov     [rsp+18h+var_18], rax^^^mov     rdi, [rdi]^^^call    _dl_open^^^mov     [rbx+18h], rax^^^add     rsp, 10h^^^pop     rbx^^^retn^^^
sub_41CD46$$$lea     rsi, [rbp-0F0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-590h]^^^mov     rdi, rsi^^^rep stosd^^^movsx   eax, byte ptr [rbp-558h]^^^mov     ecx, [rbp-5A0h]^^^mov     edi, [rbp-5A4h]^^^and     edx, 1^^^mov     [rbp-0F0h], ecx^^^mov     [rbp-0E8h], eax^^^movzx   eax, byte ptr [rbp-5C0h]^^^mov     [rbp-0ECh], edi^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-5F8h]^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-5B8h]^^^and     edx, 1^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-5F4h]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-5C8h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-5D8h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-600h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^mov     [rbp-0E4h], al^^^movzx   eax, byte ptr [rbp-608h]^^^and     eax, 1^^^shl     eax, 3^^^cmp     dword ptr [rbp-5B8h], 0^^^mov     [rbp-0E3h], al^^^movzx   eax, byte ptr [rbp-5F0h]^^^mov     [rbp-0E0h], eax^^^jz      loc_41F07A^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-0C8h], edx^^^mov     [rbp-0D0h], rax^^^lea     rax, [rbp-0D0h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^mov     [rbp-0A0h], rax^^^call    __printf_fp^^^test    eax, eax^^^js      loc_41D01F^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41CA3C^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^ja      loc_41CFDE^^^add     r14d, eax^^^jmp     loc_41C308^^^lea     rsi, [rbp-0F0h]^^^xor     eax, eax^^^mov     ecx, 5^^^movzx   edx, byte ptr [rbp-590h]^^^mov     r8d, [rbp-5A0h]^^^mov     rdi, rsi^^^rep stosd^^^mov     eax, [rbp-5A4h]^^^mov     [rbp-0F0h], r8d^^^and     edx, 1^^^lea     edi, ds:0[rdx*4]^^^movzx   edx, byte ptr [rbp-5F8h]^^^mov     [rbp-0ECh], eax^^^movsx   eax, byte ptr [rbp-558h]^^^and     edx, 1^^^mov     [rbp-0E8h], eax^^^movzx   eax, byte ptr [rbp-5C0h]^^^and     eax, 1^^^lea     ecx, [rax+rax]^^^movzx   eax, byte ptr [rbp-5B8h]^^^and     eax, 1^^^or      eax, ecx^^^lea     ecx, ds:0[rdx*8]^^^movzx   edx, byte ptr [rbp-5F4h]^^^or      eax, edi^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-5C8h]^^^and     edx, 1^^^shl     edx, 4^^^or      eax, edx^^^and     ecx, 1^^^movzx   edx, byte ptr [rbp-5D8h]^^^shl     ecx, 5^^^or      eax, ecx^^^movzx   ecx, byte ptr [rbp-600h]^^^and     edx, 1^^^shl     edx, 6^^^shl     ecx, 7^^^or      eax, edx^^^or      eax, ecx^^^cmp     dword ptr [rbp-5B8h], 0^^^mov     [rbp-0E4h], al^^^movzx   eax, byte ptr [rbp-5F0h]^^^mov     [rbp-0E0h], eax^^^jz      loc_41CFF0^^^mov     rax, [r12+8]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rdx, [rax+10h]^^^mov     [r12+8], rdx^^^mov     edx, [rax+8]^^^mov     rax, [rax]^^^mov     [rbp-0C8h], edx^^^mov     [rbp-0D0h], rax^^^lea     rax, [rbp-0D0h]^^^lea     rdx, [rbp-0A0h]^^^mov     rdi, rbx^^^mov     [rbp-0A0h], rax^^^call    __printf_fphex^^^test    eax, eax^^^js      short loc_41CFE7^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41CA3C^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^jbe     loc_41CE94^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     loc_41F0A5^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-0D0h], rax^^^jmp     loc_41CF97^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     edx, [r12+4]^^^cmp     edx, 0B0h^^^jnb     short loc_41F0B8^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 10h^^^mov     [r12+4], edx^^^mov     rax, [rax]^^^mov     [rbp-0D0h], rax^^^jmp     loc_41CE52^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_41D010^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41F096^^^
do_max_length$$$mov     rax, [rdi+48h]^^^mov     eax, [rax+4Ch]^^^retn^^^
__memcmp_ssse3$$$mov     rcx, rdx^^^mov     rdx, rdi^^^cmp     rcx, 30h^^^jnb     short loc_40D250^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^movdqu  xmm3, xmmword ptr [rdi]^^^movdqu  xmm0, xmmword ptr [rsi]^^^pcmpeqb xmm3, xmm0^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+10h]^^^lea     rsi, [rsi+10h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E40C^^^mov     edx, edi^^^and     edx, 0Fh^^^xor     rdi, rdx^^^sub     rsi, rdx^^^add     rcx, rdx^^^mov     edx, esi^^^and     edx, 0Fh^^^jz      loc_40D320^^^xor     rsi, rdx^^^cmp     edx, 8^^^jnb     short loc_40D2DC^^^cmp     edx, 0^^^jz      loc_40D320^^^cmp     edx, 1^^^jz      loc_40D400^^^cmp     edx, 2^^^jz      loc_40D510^^^cmp     edx, 3^^^jz      loc_40D620^^^cmp     edx, 4^^^jz      loc_40D730^^^cmp     edx, 5^^^jz      loc_40D840^^^cmp     edx, 6^^^jz      loc_40D950^^^jmp     loc_40DA60^^^cmp     edx, 8^^^jz      loc_40DB70^^^cmp     edx, 9^^^jz      loc_40DC80^^^cmp     edx, 0Ah^^^jz      loc_40DD90^^^cmp     edx, 0Bh^^^jz      loc_40DEA0^^^cmp     edx, 0Ch^^^jz      loc_40DFB0^^^cmp     edx, 0Dh^^^jz      loc_40E0C0^^^cmp     edx, 0Eh^^^jz      loc_40E1D0^^^jmp     loc_40E2E0^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^jnb     short loc_40D370^^^xor     eax, eax^^^movdqa  xmm1, xmmword ptr [rsi]^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm2, xmmword ptr [rsi+10h]^^^pcmpeqb xmm2, xmmword ptr [rdi+10h]^^^pand    xmm2, xmm1^^^pmovmskb edx, xmm2^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^movdqa  xmm0, xmmword ptr [rsi]^^^xor     eax, eax^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^sub     rcx, 20h^^^movdqa  xmm2, xmmword ptr [rsi+10h]^^^pcmpeqb xmm2, xmmword ptr [rdi+10h]^^^pand    xmm2, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm2^^^movdqa  xmm1, xmm0^^^movdqa  xmm0, xmmword ptr [rsi+20h]^^^movdqa  xmm2, xmmword ptr [rsi+30h]^^^sbb     edx, 0FFFFh^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^pcmpeqb xmm2, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^jz      short loc_40D388^^^pand    xmm2, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D3CC^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm2^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D460^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 1^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 1^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 1^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 1^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 1^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 1^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 1^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D484^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D4D6^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+1]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D570^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 2^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 2^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 2^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 2^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 2^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 2^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 2^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D594^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D5E6^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+2]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D680^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 3^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 3^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 3^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 3^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 3^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 3^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 3^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D6A4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D6F6^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+3]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D790^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 4^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 4^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 4^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 4^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 4^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 4^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 4^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D7B4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D806^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+4]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D8A0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 5^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 5^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 5^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 5^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 5^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 5^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 5^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D8C4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40D916^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+5]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40D9B0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 6^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 6^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 6^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 6^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 6^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 6^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 6^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40D9D4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DA26^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+6]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40DAC0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 7^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 7^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 7^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 7^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 7^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 7^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 7^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40DAE4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DB36^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+7]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40DBD0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 8^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 8^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 8^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 8^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 8^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 8^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 8^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40DBF4^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DC46^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+8]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40DCE0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 9^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 9^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 9^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 9^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 9^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 9^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 9^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40DD04^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DD56^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+9]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40DDF0^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Ah^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Ah^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Ah^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Ah^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Ah^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Ah^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Ah^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40DE14^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DE66^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+0Ah]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40DF00^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Bh^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Bh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Bh^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Bh^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Bh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Bh^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Bh^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40DF24^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40DF76^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+0Bh]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40E010^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Ch^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Ch^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Ch^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Ch^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Ch^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Ch^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Ch^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40E034^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40E086^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+0Ch]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40E120^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Dh^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Dh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Dh^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Dh^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Dh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Dh^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Dh^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40E144^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40E196^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+0Dh]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40E230^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Eh^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Eh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Eh^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Eh^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Eh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Eh^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Eh^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40E254^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40E2A6^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^lea     rsi, [rsi+0Eh]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^cmp     rcx, 50h^^^lea     rcx, [rcx-30h]^^^mov     eax, edx^^^jnb     short loc_40E340^^^movdqa  xmm1, xmmword ptr [rsi+10h]^^^movdqa  xmm2, xmm1^^^palignr xmm1, xmmword ptr [rsi], 0Fh^^^pcmpeqb xmm1, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmm2, 0Fh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm1^^^pmovmskb edx, xmm3^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     loc_40E3F0^^^add     rsi, 0Fh^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^sub     rcx, 20h^^^movdqa  xmm0, xmmword ptr [rsi+10h]^^^palignr xmm0, xmmword ptr [rsi], 0Fh^^^pcmpeqb xmm0, xmmword ptr [rdi]^^^movdqa  xmm3, xmmword ptr [rsi+20h]^^^palignr xmm3, xmmword ptr [rsi+10h], 0Fh^^^pcmpeqb xmm3, xmmword ptr [rdi+10h]^^^pand    xmm3, xmm0^^^sub     rcx, 20h^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^movdqa  xmm3, xmmword ptr [rsi+40h]^^^palignr xmm3, xmmword ptr [rsi+30h], 0Fh^^^sbb     edx, 0FFFFh^^^movdqa  xmm0, xmmword ptr [rsi+30h]^^^palignr xmm0, xmmword ptr [rsi+20h], 0Fh^^^pcmpeqb xmm0, xmmword ptr [rdi+20h]^^^lea     rsi, [rsi+20h]^^^pcmpeqb xmm3, xmmword ptr [rdi+30h]^^^lea     rdi, [rdi+20h]^^^jz      short loc_40E364^^^pand    xmm3, xmm0^^^cmp     rcx, 0^^^jge     short loc_40E3B6^^^inc     edx^^^add     rcx, 20h^^^test    edx, edx^^^jnz     short loc_40E3F0^^^pmovmskb edx, xmm3^^^movdqa  xmm1, xmm0^^^lea     rdi, [rdi+20h]^^^lea     rsi, [rsi+20h]^^^sub     edx, 0FFFFh^^^jnz     short loc_40E3F0^^^lea     rsi, [rsi+0Fh]^^^add     rsi, rcx^^^add     rdi, rcx^^^jmp     loc_40E500^^^pmovmskb r8d, xmm1^^^sub     r8d, 0FFFFh^^^jz      short loc_40E409^^^lea     rsi, [rsi-10h]^^^lea     rdi, [rdi-10h]^^^mov     edx, r8d^^^add     rsi, rax^^^test    dl, dl^^^jz      loc_40E4C0^^^test    dl, 1^^^jnz     short loc_40E450^^^test    dl, 2^^^jnz     short loc_40E460^^^test    dl, 4^^^jnz     short loc_40E470^^^test    dl, 8^^^jnz     short loc_40E480^^^test    dl, 10h^^^jnz     short loc_40E490^^^test    dl, 20h^^^jnz     short loc_40E4A0^^^test    dl, 40h^^^jnz     short loc_40E4B0^^^movzx   eax, byte ptr [rdi-9]^^^movzx   edx, byte ptr [rsi-9]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-10h]^^^movzx   edx, byte ptr [rsi-10h]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Fh]^^^movzx   edx, byte ptr [rsi-0Fh]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Eh]^^^movzx   edx, byte ptr [rsi-0Eh]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Dh]^^^movzx   edx, byte ptr [rsi-0Dh]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Ch]^^^movzx   edx, byte ptr [rsi-0Ch]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Bh]^^^movzx   edx, byte ptr [rsi-0Bh]^^^sub     eax, edx^^^retn^^^movzx   eax, byte ptr [rdi-0Ah]^^^movzx   edx, byte ptr [rsi-0Ah]^^^sub     eax, edx^^^retn^^^lea     rdi, [rdi+8]^^^lea     rsi, [rsi+8]^^^test    dh, 1^^^jnz     short loc_40E450^^^test    dh, 2^^^jnz     short loc_40E460^^^test    dh, 4^^^jnz     short loc_40E470^^^test    dh, 8^^^jnz     short loc_40E480^^^test    dh, 10h^^^jnz     short loc_40E490^^^test    dh, 20h^^^jnz     short loc_40E4A0^^^test    dh, 40h^^^jnz     short loc_40E4B0^^^mov     eax, [rdi-9]^^^and     eax, 0FFh^^^mov     edx, [rsi-9]^^^and     edx, 0FFh^^^sub     eax, edx^^^retn^^^cmp     ecx, 8^^^jnb     short loc_40E550^^^cmp     ecx, 0^^^jz      loc_40E76A^^^cmp     ecx, 1^^^jz      loc_40E80A^^^cmp     ecx, 2^^^jz      loc_40E8BA^^^cmp     ecx, 3^^^jz      loc_40E952^^^cmp     ecx, 4^^^jz      loc_40E75C^^^cmp     ecx, 5^^^jz      loc_40E7FC^^^cmp     ecx, 6^^^jz      loc_40E8AC^^^jmp     loc_40E948^^^cmp     ecx, 10h^^^jnb     short loc_40E5A0^^^cmp     ecx, 8^^^jz      loc_40E74E^^^cmp     ecx, 9^^^jz      loc_40E7EE^^^cmp     ecx, 0Ah^^^jz      loc_40E89E^^^cmp     ecx, 0Bh^^^jz      loc_40E93E^^^cmp     ecx, 0Ch^^^jz      loc_40E740^^^cmp     ecx, 0Dh^^^jz      loc_40E7E0^^^cmp     ecx, 0Eh^^^jz      loc_40E890^^^jmp     loc_40E934^^^cmp     ecx, 18h^^^jnb     short loc_40E5F0^^^cmp     ecx, 10h^^^jz      loc_40E732^^^cmp     ecx, 11h^^^jz      loc_40E7D2^^^cmp     ecx, 12h^^^jz      loc_40E882^^^cmp     ecx, 13h^^^jz      loc_40E92A^^^cmp     ecx, 14h^^^jz      loc_40E724^^^cmp     ecx, 15h^^^jz      loc_40E7C4^^^cmp     ecx, 16h^^^jz      loc_40E874^^^jmp     loc_40E920^^^cmp     ecx, 20h^^^jnb     short loc_40E640^^^cmp     ecx, 18h^^^jz      loc_40E716^^^cmp     ecx, 19h^^^jz      loc_40E7B6^^^cmp     ecx, 1Ah^^^jz      loc_40E866^^^cmp     ecx, 1Bh^^^jz      loc_40E916^^^cmp     ecx, 1Ch^^^jz      loc_40E708^^^cmp     ecx, 1Dh^^^jz      loc_40E7A8^^^cmp     ecx, 1Eh^^^jz      loc_40E858^^^jmp     loc_40E90C^^^cmp     ecx, 28h^^^jnb     short loc_40E690^^^cmp     ecx, 20h^^^jz      loc_40E6FA^^^cmp     ecx, 21h^^^jz      loc_40E79A^^^cmp     ecx, 22h^^^jz      loc_40E84A^^^cmp     ecx, 23h^^^jz      loc_40E902^^^cmp     ecx, 24h^^^jz      short loc_40E6EC^^^cmp     ecx, 25h^^^jz      loc_40E78C^^^cmp     ecx, 26h^^^jz      loc_40E83C^^^jmp     loc_40E8F8^^^cmp     ecx, 28h^^^jz      short loc_40E6DE^^^cmp     ecx, 29h^^^jz      loc_40E77E^^^cmp     ecx, 2Ah^^^jz      loc_40E82E^^^cmp     ecx, 2Bh^^^jz      loc_40E8EE^^^cmp     ecx, 2Ch^^^jz      short loc_40E6D0^^^cmp     ecx, 2Dh^^^jz      loc_40E770^^^cmp     ecx, 2Eh^^^jz      loc_40E820^^^jmp     loc_40E8E0^^^mov     eax, [rdi-2Ch]^^^mov     ecx, [rsi-2Ch]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-28h]^^^mov     ecx, [rsi-28h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-24h]^^^mov     ecx, [rsi-24h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-20h]^^^mov     ecx, [rsi-20h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-1Ch]^^^mov     ecx, [rsi-1Ch]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-18h]^^^mov     ecx, [rsi-18h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-14h]^^^mov     ecx, [rsi-14h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-10h]^^^mov     ecx, [rsi-10h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-0Ch]^^^mov     ecx, [rsi-0Ch]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-8]^^^mov     ecx, [rsi-8]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-4]^^^mov     ecx, [rsi-4]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-2Dh]^^^mov     ecx, [rsi-2Dh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-29h]^^^mov     ecx, [rsi-29h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-25h]^^^mov     ecx, [rsi-25h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-21h]^^^mov     ecx, [rsi-21h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-1Dh]^^^mov     ecx, [rsi-1Dh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-19h]^^^mov     ecx, [rsi-19h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-15h]^^^mov     ecx, [rsi-15h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-11h]^^^mov     ecx, [rsi-11h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-0Dh]^^^mov     ecx, [rsi-0Dh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-9]^^^mov     ecx, [rsi-9]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-5]^^^mov     ecx, [rsi-5]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^movzx   eax, byte ptr [rdi-1]^^^cmp     al, [rsi-1]^^^jnz     loc_40E985^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-2Eh]^^^mov     ecx, [rsi-2Eh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-2Ah]^^^mov     ecx, [rsi-2Ah]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-26h]^^^mov     ecx, [rsi-26h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-22h]^^^mov     ecx, [rsi-22h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-1Eh]^^^mov     ecx, [rsi-1Eh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-1Ah]^^^mov     ecx, [rsi-1Ah]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-16h]^^^mov     ecx, [rsi-16h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-12h]^^^mov     ecx, [rsi-12h]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-0Eh]^^^mov     ecx, [rsi-0Eh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-0Ah]^^^mov     ecx, [rsi-0Ah]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-6]^^^mov     ecx, [rsi-6]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^movzx   eax, word ptr [rdi-2]^^^movzx   ecx, word ptr [rsi-2]^^^cmp     al, cl^^^jnz     loc_40E985^^^cmp     eax, ecx^^^jnz     loc_40E985^^^xor     eax, eax^^^retn^^^mov     eax, [rdi-2Fh]^^^mov     ecx, [rsi-2Fh]^^^cmp     eax, ecx^^^jnz     loc_40E970^^^mov     eax, [rdi-2Bh]^^^mov     ecx, [rsi-2Bh]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-27h]^^^mov     ecx, [rsi-27h]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-23h]^^^mov     ecx, [rsi-23h]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-1Fh]^^^mov     ecx, [rsi-1Fh]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-1Bh]^^^mov     ecx, [rsi-1Bh]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-17h]^^^mov     ecx, [rsi-17h]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-13h]^^^mov     ecx, [rsi-13h]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-0Fh]^^^mov     ecx, [rsi-0Fh]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-0Bh]^^^mov     ecx, [rsi-0Bh]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^mov     eax, [rdi-7]^^^mov     ecx, [rsi-7]^^^cmp     eax, ecx^^^jnz     short loc_40E970^^^movzx   eax, word ptr [rdi-3]^^^movzx   ecx, word ptr [rsi-3]^^^cmp     al, cl^^^jnz     short loc_40E985^^^cmp     eax, ecx^^^jnz     short loc_40E985^^^movzx   eax, byte ptr [rdi-1]^^^cmp     al, [rsi-1]^^^jnz     short loc_40E985^^^xor     eax, eax^^^retn^^^cmp     al, cl^^^jnz     short loc_40E985^^^cmp     ax, cx^^^jnz     short loc_40E985^^^shr     eax, 10h^^^shr     ecx, 10h^^^cmp     al, cl^^^jnz     short loc_40E985^^^cmp     eax, ecx^^^sbb     eax, eax^^^sbb     eax, 0FFFFFFFFh^^^retn^^^
__syslog_chk$$$sub     rsp, 0D8h^^^test    al, al^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_40FED1^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rcx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 18h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    __vsyslog_chk^^^add     rsp, 0D8h^^^retn^^^
__strncasecmp_sse2$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^nop     dword ptr [rax+rax+00h]^^^
get_nprocs_conf$$$push    r12^^^mov     edi, offset aSysDevicesSy_0^^^push    rbp^^^xor     ebp, ebp^^^push    rbx^^^sub     rsp, 10h^^^call    opendir^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_4107B3^^^nop     dword ptr [rax+00h]^^^mov     rdi, rbx^^^call    readdir64^^^test    rax, rax^^^jz      short loc_4107A0^^^cmp     byte ptr [rax+12h], 4^^^jnz     short loc_410740^^^lea     rsi, [rax+13h]^^^mov     edi, 499718h^^^mov     ecx, 3^^^repe cmpsb^^^jnz     short loc_410740^^^lea     r12, [rax+16h]^^^mov     edx, 0Ah^^^mov     rsi, rsp^^^mov     rdi, r12^^^call    strtouq^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_410740^^^mov     rax, [rsp+28h+var_28]^^^cmp     r12, rax^^^jz      short loc_410740^^^cmp     byte ptr [rax], 1^^^mov     rdi, rbx^^^adc     ebp, 0^^^call    readdir64^^^test    rax, rax^^^jnz     short loc_41074D^^^nop     dword ptr [rax+rax+00h]^^^mov     rdi, rbx^^^call    closedir^^^add     rsp, 10h^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^call    get_nprocs^^^mov     ebp, eax^^^jmp     short loc_4107A8^^^
_i18n_number_rewrite_1$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15d, 1^^^push    r14^^^mov     r14, rsi^^^push    r13^^^push    r12^^^mov     r12, rdi^^^mov     edi, offset aTo_outpunct^^^sub     r14, r12^^^push    rbx^^^and     r14, 0FFFFFFFFFFFFFFFCh^^^sub     rsp, 18h^^^mov     [rbp+var_38], rdx^^^call    wctrans^^^mov     edi, 2Eh^^^mov     r13, rax^^^mov     rsi, rax^^^call    towctrans^^^mov     rsi, r13^^^mov     edi, 2Ch^^^mov     [rbp+var_3C], eax^^^call    towctrans^^^cmp     r14, 1000h^^^mov     [rbp+var_40], eax^^^jbe     short loc_400D12^^^mov     rdi, r14^^^xor     r15d, r15d^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^setnz   r15b^^^test    r15b, r15b^^^jz      short loc_400D2D^^^lea     rax, [r14+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rbx, [rsp+40h+var_38+7]^^^and     rbx, 0FFFFFFFFFFFFFFF0h^^^jmp     short loc_400D3D^^^mov     rdi, r14^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_400DB4^^^mov     rdx, r14^^^mov     rdi, rbx^^^mov     rsi, r12^^^call    mempcpy^^^mov     rdx, 0FFFFFFFFFFFFFFA8h^^^mov     rdi, fs:[rdx]^^^mov     rdx, [rbp+var_38]^^^sub     rdx, 4^^^jmp     short loc_400D9A^^^mov     ecx, [rax]^^^lea     esi, [rcx-30h]^^^cmp     esi, 9^^^ja      short loc_400D7B^^^mov     rsi, [rdi]^^^add     ecx, 3^^^movsxd  rcx, ecx^^^mov     ecx, [rsi+rcx*8+40h]^^^mov     [rdx], ecx^^^jmp     short loc_400D96^^^test    r13, r13^^^jz      short loc_400D94^^^cmp     ecx, 2Ch^^^jz      short loc_400D8A^^^cmp     ecx, 2Eh^^^jnz     short loc_400D94^^^cmp     ecx, 2Eh^^^mov     ecx, [rbp+var_3C]^^^cmovnz  ecx, [rbp+var_40]^^^mov     [rdx], ecx^^^sub     rdx, 4^^^sub     rax, 4^^^lea     r12, [rdx+4]^^^cmp     rax, rbx^^^jnb     short loc_400D60^^^test    r15b, r15b^^^jnz     short loc_400DB4^^^mov     rdi, rbx^^^call    free^^^lea     rsp, [rbp-28h]^^^mov     rax, r12^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
sub_41087D$$$sub     rsp, 8^^^call    __libc_enable_asynccancel^^^mov     [rsp+8+var_8], rax^^^mov     eax, 2Ah^^^syscall^^^mov     rdi, [rsp+8+var_8]^^^mov     rdx, rax^^^call    __libc_disable_asynccancel^^^mov     rax, rdx^^^add     rsp, 8^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^retn^^^
_L_lock_12402$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4085BA^^^
uw_install_context_1$$$push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 10h^^^test    byte ptr [rsi+0C7h], 40h^^^jz      short loc_491D54^^^cmp     byte ptr [rsi+0DFh], 0^^^lea     rax, [rsi+38h]^^^jnz     short loc_491D59^^^mov     rax, [r12+38h]^^^test    rax, rax^^^jz      loc_491E3B^^^xor     ebx, ebx^^^nop     dword ptr [rax+00h]^^^cmp     byte ptr [rbp+rbx+0D8h], 0^^^mov     rdi, [rbp+rbx*8+0]^^^mov     rsi, [r12+rbx*8]^^^jnz     short loc_491D9B^^^test    rdi, rdi^^^setnz   al^^^jz      short loc_491DA0^^^cmp     byte ptr [r12+rbx+0D8h], 0^^^jz      short loc_491DA0^^^lea     rax, dwarf_reg_size_table^^^cmp     byte ptr [rax+rbx], 8^^^jz      short loc_491DE8^^^call    abort^^^test    rsi, rsi^^^jz      short loc_491DBE^^^test    al, al^^^jz      short loc_491DBE^^^cmp     rsi, rdi^^^jz      short loc_491DBE^^^lea     rax, dwarf_reg_size_table^^^movzx   edx, byte ptr [rax+rbx]^^^call    memcpy^^^add     rbx, 1^^^cmp     rbx, 11h^^^jnz     short loc_491D68^^^test    byte ptr [rbp+0C7h], 40h^^^jnz     short loc_491DF8^^^mov     rdx, [rbp+38h]^^^xor     eax, eax^^^test    rdx, rdx^^^jz      short loc_491E0C^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     [rsp+28h+var_20], rsi^^^mov     [rdi], rsi^^^jmp     short loc_491DBE^^^cmp     byte ptr [rbp+0DFh], 0^^^lea     rdx, [rbp+38h]^^^jz      short loc_491DD1^^^xor     eax, eax^^^test    rdx, rdx^^^jnz     short loc_491DDC^^^test    byte ptr [r12+0C7h], 40h^^^movzx   eax, cs:byte_6C5C67^^^mov     rdx, [r12+38h]^^^jz      short loc_491E2E^^^cmp     byte ptr [r12+0DFh], 0^^^jnz     short loc_491E76^^^cmp     al, 8^^^jnz     loc_491D9B^^^mov     rax, [rdx]^^^jmp     short loc_491E79^^^cmp     cs:byte_6C5C67, 8^^^mov     rax, [r12+90h]^^^jnz     loc_491D9B^^^test    byte ptr [r12+0C7h], 40h^^^mov     [rsp+28h+var_28], rax^^^jz      short loc_491E68^^^mov     byte ptr [r12+0DFh], 0^^^lea     rax, [rsp+28h+var_28]^^^mov     [r12+38h], rax^^^jmp     loc_491D62^^^mov     rax, rdx^^^sub     rax, [rbp+90h]^^^add     rax, [r12+0D0h]^^^add     rsp, 10h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^
getenv$$$push    r15^^^push    r14^^^push    r13^^^mov     r13, rdi^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^call    strlen^^^mov     rbx, cs:environ^^^mov     r15, rax^^^test    rbx, rbx^^^jz      short loc_4185A1^^^movzx   ecx, byte ptr [r13+0]^^^xor     eax, eax^^^test    cl, cl^^^jz      short loc_4185A3^^^cmp     byte ptr [r13+1], 0^^^jnz     short loc_4185B8^^^mov     rdx, [rbx]^^^test    rdx, rdx^^^jz      short loc_4185A3^^^movzx   eax, cl^^^or      ah, 3Dh^^^cmp     ax, [rdx]^^^jnz     short loc_418595^^^jmp     short loc_418608^^^cmp     ax, [rdx]^^^jz      short loc_418608^^^add     rbx, 8^^^mov     rdx, [rbx]^^^test    rdx, rdx^^^jnz     short loc_418590^^^xor     eax, eax^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rbp, [rbx]^^^movzx   r12d, word ptr [r13+0]^^^add     r13, 2^^^lea     r14, [r15-2]^^^test    rbp, rbp^^^jnz     short loc_4185DC^^^jmp     short loc_4185A3^^^add     rbx, 8^^^mov     rbp, [rbx]^^^test    rbp, rbp^^^jz      short loc_4185A1^^^cmp     r12w, [rbp+0]^^^jnz     short loc_4185D0^^^lea     rdi, [rbp+2]^^^mov     rdx, r14^^^mov     rsi, r13^^^call    strncmp^^^test    eax, eax^^^jnz     short loc_4185D0^^^cmp     byte ptr [rbp+r15+0], 3Dh^^^jnz     short loc_4185D0^^^lea     rax, [rbp+r15+1]^^^jmp     short loc_4185A3^^^add     rsp, 8^^^lea     rax, [rdx+2]^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
known_compare$$$mov     rsi, [rsi]^^^mov     rdi, [rdi]^^^jmp     sub_4003A0^^^
_IO_str_underflow$$$mov     rdx, [rdi+28h]^^^mov     rcx, [rdi+10h]^^^cmp     rdx, rcx^^^jbe     short loc_42D5F4^^^mov     [rdi+10h], rdx^^^mov     rcx, rdx^^^mov     eax, [rdi]^^^and     eax, 0C00h^^^cmp     eax, 0C00h^^^jz      short loc_42D618^^^mov     rdx, [rdi+8]^^^cmp     rdx, rcx^^^mov     eax, 0FFFFFFFFh^^^jnb     short locret_42D613^^^movzx   eax, byte ptr [rdx]^^^rep retn^^^mov     rax, [rdi+30h]^^^and     dword ptr [rdi], 0FFFFF7FFh^^^mov     [rdi+8], rdx^^^mov     [rdi+28h], rax^^^jmp     short loc_42D606^^^
__strstr_sse42$$$push    r15^^^mov     r9, rdi^^^push    r14^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^movzx   edx, byte ptr [rsi]^^^test    dl, dl^^^jz      loc_47558A^^^movzx   eax, byte ptr [rdi]^^^test    al, al^^^jz      loc_4758B7^^^cmp     byte ptr [rdi+1], 0^^^jz      loc_475AE0^^^mov     eax, edi^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jg      loc_475AA8^^^movdqu  xmm1, xmmword ptr [r9]^^^cmp     byte ptr [rsi+1], 0^^^jnz     loc_475895^^^pxor    xmm2, xmm2^^^pinsrb  xmm2, byte ptr [rsi], 0^^^pcmpistri xmm2, xmm1, 0Ch^^^mov     edi, 0^^^mov     eax, 0^^^movdqa  xmm4, xmm2^^^sets    dil^^^setb    al^^^setz    dl^^^mov     r10d, edi^^^mov     r8d, ecx^^^movzx   edx, dl^^^test    r10d, eax^^^jz      short loc_4755A0^^^pxor    xmm1, xmm1^^^movsxd  rax, ecx^^^movdqa  xmm3, xmm2^^^add     r9, rax^^^pcmpeqb xmm3, xmm1^^^pmovmskb edi, xmm3^^^bsf     edi, edi^^^add     r8d, edi^^^cmp     r8d, 10h^^^jg      loc_4758C8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^mov     rax, r9^^^pop     r15^^^retn^^^test    r10d, r10d^^^jnz     loc_475800^^^lea     r10, [rsi+10h]^^^mov     r12, rsi^^^mov     rdi, rsi^^^and     r12d, 0Fh^^^mov     r11d, esi^^^xor     r8d, r8d^^^sub     rdi, r12^^^mov     rbp, r10^^^mov     ebx, r10d^^^and     ebp, 0Fh^^^mov     [rsp+30h+var_50], rdi^^^mov     rdi, r10^^^sub     rdi, rbp^^^and     ebx, 0FFFh^^^and     r11d, 0FFFh^^^test    eax, eax^^^pxor    xmm4, xmm4^^^mov     r13d, 3^^^mov     [rsp+30h+var_3A], r12b^^^mov     [rsp+30h+var_48], rdi^^^mov     [rsp+30h+var_39], bpl^^^jz      loc_4757AD^^^nop     word ptr [rax+rax+00h]^^^test    ecx, ecx^^^jnz     loc_475870^^^test    edx, edx^^^jnz     loc_47558A^^^cmp     ebx, 0FF0h^^^lea     rax, [r9+10h]^^^jg      loc_475AFA^^^movdqu  xmm2, xmmword ptr [r10]^^^mov     rdx, r10^^^mov     ecx, eax^^^and     ecx, 0FFFh^^^cmp     ecx, 0FF0h^^^jg      loc_475A6C^^^movdqu  xmm3, xmmword ptr [rax]^^^pcmpistri xmm2, xmm3, 0Ch^^^mov     r14d, 0^^^mov     edi, ecx^^^setz    r14b^^^mov     ecx, 0^^^mov     r15d, edi^^^sets    cl^^^or      r15d, r14d^^^or      r15d, ecx^^^jnz     short loc_4756CF^^^nop     dword ptr [rax]^^^add     rdx, 10h^^^add     rax, 10h^^^mov     ecx, edx^^^and     ecx, 0FFFh^^^cmp     ecx, 0FF0h^^^jg      loc_47594C^^^movdqu  xmm2, xmmword ptr [rdx]^^^mov     ecx, eax^^^and     ecx, 0FFFh^^^cmp     ecx, 0FF0h^^^jg      loc_475910^^^movdqu  xmm3, xmmword ptr [rax]^^^pcmpistri xmm2, xmm3, 0Ch^^^setz    r14b^^^sets    dil^^^mov     r15d, ecx^^^movzx   r14d, r14b^^^movzx   edi, dil^^^or      r15d, r14d^^^or      r15d, edi^^^jz      short loc_475670^^^mov     eax, edi^^^mov     edi, ecx^^^mov     ecx, eax^^^xor     eax, eax^^^test    edi, edi^^^setz    al^^^test    eax, ecx^^^jnz     loc_47558A^^^test    r14d, r14d^^^jz      loc_475888^^^test    ecx, ecx^^^jz      loc_4758B7^^^pcmpeqb xmm2, xmm4^^^pcmpeqb xmm3, xmm4^^^pmovmskb edx, xmm2^^^pmovmskb eax, xmm3^^^bsf     edx, edx^^^bsf     eax, eax^^^cmp     edx, eax^^^jge     loc_4758B7^^^cmp     r11d, 0FF0h^^^jg      loc_475988^^^movdqu  xmm2, xmmword ptr [rsi]^^^test    r8d, r8d^^^jnz     short loc_475768^^^movdqa  xmm0, xmm2^^^mov     r8b, 10h^^^movdqa  xmm1, xmm2^^^punpcklbw xmm0, xmm2^^^psrldq  xmm1, 1^^^punpcklbw xmm0, xmm0^^^pshufd  xmm0, xmm0, 0^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^bsf     edx, eax^^^test    eax, eax^^^jz      short loc_475768^^^cmp     eax, 7FFFh^^^mov     r8b, 1^^^jz      short loc_475768^^^lea     r8d, [rdx+1]^^^test    edx, edx^^^cmovz   r8d, r13d^^^nop     dword ptr [rax+rax+00h]^^^cmp     r8d, edi^^^cmovle  edi, r8d^^^movsxd  rdi, edi^^^add     r9, rdi^^^cmp     byte ptr [r9], 0^^^jz      loc_4758B7^^^mov     eax, r9d^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jg      short loc_4757C8^^^movdqu  xmm1, xmmword ptr [r9]^^^pcmpistri xmm2, xmm1, 0Ch^^^setb    al^^^setz    dl^^^movzx   eax, al^^^movzx   edx, dl^^^test    eax, eax^^^jnz     loc_475608^^^test    edx, edx^^^jnz     loc_4758B7^^^add     r9, 10h^^^mov     eax, r9d^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jle     short loc_47578E^^^mov     rcx, r9^^^mov     rax, r9^^^and     ecx, 0Fh^^^sub     rax, rcx^^^movdqa  xmm0, xmmword ptr [rax]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb eax, xmm1^^^sar     eax, cl^^^test    eax, eax^^^jz      short loc_47578E^^^movdqu  xmm1, ds:___m128i_shift_right[rcx]^^^pshufb  xmm0, xmm1^^^movdqa  xmm1, xmm0^^^jmp     short loc_475793^^^test    edx, edx^^^pxor    xmm2, xmm2^^^jz      short loc_475818^^^jmp     loc_4758B0^^^test    edx, edx^^^jnz     loc_4758B0^^^movsxd  rcx, ecx^^^add     r9, rcx^^^mov     eax, r9d^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jg      loc_475A34^^^movdqu  xmm1, xmmword ptr [r9]^^^pcmpistri xmm4, xmm1, 0Ch^^^mov     edx, 0^^^setb    al^^^setz    dl^^^xor     esi, esi^^^test    ecx, ecx^^^movzx   eax, al^^^setz    sil^^^test    esi, eax^^^jz      short loc_475810^^^xor     ecx, ecx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^add     r9, rcx^^^pop     r14^^^mov     rax, r9^^^pop     r15^^^retn^^^movsxd  rax, ecx^^^mov     rdx, rsi^^^add     rax, r9^^^mov     r9, rax^^^jmp     loc_475630^^^test    edi, edi^^^jnz     loc_47570D^^^jmp     loc_47558A^^^mov     eax, esi^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jg      loc_4759FC^^^movdqu  xmm2, xmmword ptr [rsi]^^^jmp     loc_475538^^^test    eax, eax^^^movsxd  rcx, ecx^^^jnz     short loc_475858^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^xor     r9d, r9d^^^pop     r14^^^mov     rax, r9^^^pop     r15^^^retn^^^mov     eax, r9d^^^and     eax, 0FFFh^^^cmp     eax, 0FF0h^^^jg      loc_4759C4^^^movdqu  xmm1, xmmword ptr [r9]^^^pcmpistri xmm4, xmm1, 0Ch^^^setb    al^^^sets    r10b^^^setz    dl^^^add     edi, ecx^^^movzx   eax, al^^^movzx   r10d, r10b^^^cmp     edi, 10h^^^movzx   edx, dl^^^jg      loc_4755A0^^^movsxd  r8, ecx^^^add     r9, r8^^^jmp     loc_47558A^^^mov     rcx, rax^^^mov     rdi, rax^^^and     ecx, 0Fh^^^sub     rdi, rcx^^^movdqa  xmm0, xmmword ptr [rdi]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb edi, xmm1^^^sar     edi, cl^^^test    edi, edi^^^jz      loc_4756A4^^^movdqu  xmm1, ds:___m128i_shift_right[rcx]^^^pshufb  xmm0, xmm1^^^movdqa  xmm3, xmm0^^^jmp     loc_4756A8^^^mov     rcx, rdx^^^mov     rdi, rdx^^^and     ecx, 0Fh^^^sub     rdi, rcx^^^movdqa  xmm0, xmmword ptr [rdi]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb edi, xmm1^^^sar     edi, cl^^^test    edi, edi^^^jz      loc_47568C^^^movdqu  xmm1, ds:___m128i_shift_right[rcx]^^^pshufb  xmm0, xmm1^^^movdqa  xmm2, xmm0^^^jmp     loc_475690^^^mov     rax, [rsp+30h+var_50]^^^movzx   ecx, [rsp+30h+var_3A]^^^movdqa  xmm0, xmmword ptr [rax]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb eax, xmm1^^^sar     eax, cl^^^test    eax, eax^^^jz      loc_47571A^^^movdqu  xmm1, ds:___m128i_shift_right[r12]^^^pshufb  xmm0, xmm1^^^movdqa  xmm2, xmm0^^^jmp     loc_47571E^^^mov     rcx, r9^^^mov     rax, r9^^^and     ecx, 0Fh^^^sub     rax, rcx^^^movdqa  xmm3, xmmword ptr [rax]^^^pcmpeqb xmm1, xmm3^^^pmovmskb eax, xmm1^^^sar     eax, cl^^^test    eax, eax^^^jz      loc_4758DB^^^movdqu  xmm1, ds:___m128i_shift_right[rcx]^^^pshufb  xmm3, xmm1^^^movdqa  xmm1, xmm3^^^jmp     loc_4758E0^^^mov     rcx, rsi^^^mov     rax, rsi^^^and     ecx, 0Fh^^^pxor    xmm0, xmm0^^^sub     rax, rcx^^^movdqa  xmm2, xmmword ptr [rax]^^^pcmpeqb xmm0, xmm2^^^pmovmskb eax, xmm0^^^sar     eax, cl^^^test    eax, eax^^^jz      loc_4758A7^^^movdqu  xmm0, ds:___m128i_shift_right[rcx]^^^pshufb  xmm2, xmm0^^^jmp     loc_475538^^^mov     rcx, r9^^^mov     rax, r9^^^and     ecx, 0Fh^^^sub     rax, rcx^^^movdqa  xmm1, xmmword ptr [rax]^^^movdqa  xmm3, xmm1^^^pcmpeqb xmm3, xmm2^^^pmovmskb eax, xmm3^^^sar     eax, cl^^^test    eax, eax^^^jz      loc_475831^^^movdqu  xmm3, ds:___m128i_shift_right[rcx]^^^pshufb  xmm1, xmm3^^^jmp     loc_475836^^^mov     rcx, rax^^^mov     rdi, rax^^^and     ecx, 0Fh^^^sub     rdi, rcx^^^movdqa  xmm0, xmmword ptr [rdi]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb edi, xmm1^^^sar     edi, cl^^^test    edi, edi^^^jz      loc_475644^^^movdqu  xmm1, ds:___m128i_shift_right[rcx]^^^pshufb  xmm0, xmm1^^^movdqa  xmm3, xmm0^^^jmp     loc_475648^^^mov     rcx, rdi^^^mov     rax, rdi^^^and     ecx, 0Fh^^^pxor    xmm0, xmm0^^^sub     rax, rcx^^^movdqa  xmm1, xmmword ptr [rax]^^^pcmpeqb xmm0, xmm1^^^pmovmskb eax, xmm0^^^sar     eax, cl^^^test    eax, eax^^^jz      loc_47551F^^^movdqu  xmm0, ds:___m128i_shift_right[rcx]^^^pshufb  xmm1, xmm0^^^jmp     loc_475524^^^cmp     byte ptr [rsi+1], 0^^^jnz     loc_4758B7^^^cmp     dl, al^^^mov     eax, 0^^^cmovnz  r9, rax^^^jmp     loc_47558A^^^mov     rdx, [rsp+30h+var_48]^^^movzx   ecx, [rsp+30h+var_39]^^^movdqa  xmm0, xmmword ptr [rdx]^^^movdqa  xmm1, xmm0^^^pcmpeqb xmm1, xmm4^^^pmovmskb edx, xmm1^^^sar     edx, cl^^^test    edx, edx^^^jz      loc_475628^^^movdqu  xmm1, ss:___m128i_shift_right[rbp]^^^pshufb  xmm0, xmm1^^^movdqa  xmm2, xmm0^^^jmp     loc_47562D^^^
sub_41D096$$$movsxd  rax, dword ptr [rbp-5A8h]^^^imul    rax, 48h^^^add     rax, [rbp-540h]^^^jz      loc_41DEF9^^^movsxd  rax, dword ptr [rax+30h]^^^mov     rdx, [rbp-578h]^^^shl     rax, 4^^^mov     r8, [rdx+rax]^^^test    r8, r8^^^jz      loc_41D67C^^^mov     byte ptr [rbp-621h], 78h^^^mov     dword ptr [rbp-638h], 0^^^xor     r9d, r9d^^^mov     dword ptr [rbp-62Ch], 1^^^mov     dword ptr [rbp-610h], 10h^^^cmp     dword ptr [rbp-580h], 4^^^jg      short loc_41D68F^^^mov     dword ptr [rbp-580h], 5^^^mov     dword ptr [rbp-5B0h], 0^^^mov     qword ptr [rbp-548h], offset aNil^^^mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_41DF31^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_41D0C1^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_41DF10^^^
vfprintf$$$push    rbp             ^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     rbx, rdi^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     r13, rsi^^^mov     [rbp+var_8], r15^^^sub     rsp, 660h^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12, rdx^^^mov     eax, fs:[rax]^^^mov     [rbp+var_52C], eax^^^mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jnz     loc_41AA58^^^mov     dword ptr [rdi+0C0h], 0FFFFFFFFh^^^mov     r14d, [rbx]^^^test    r14b, 8^^^jnz     loc_41ACD8^^^test    r13, r13^^^jz      loc_41B4C8^^^test    r14b, 2^^^jnz     loc_41AAE0^^^mov     rax, [r12]^^^mov     esi, 25h^^^mov     rdi, r13^^^mov     [rbp+var_110], rax^^^mov     rax, [r12+8]^^^mov     [rbp+var_108], rax^^^mov     rax, [r12+10h]^^^mov     [rbp+var_100], rax^^^call    strchrnul^^^and     r14d, 8000h^^^mov     [rbp+var_528], rax^^^mov     [rbp+var_530], 0^^^jz      loc_41AA70^^^mov     r15, [rbp+var_528]^^^mov     rax, [rbx+0D8h]^^^mov     rsi, r13^^^mov     rdi, rbx^^^mov     r14d, 0FFFFFFFFh^^^sub     r15, r13^^^mov     rdx, r15^^^call    qword ptr [rax+38h]^^^cmp     r15, rax^^^jz      loc_41AB60^^^mov     [rbp+var_538], 0^^^xor     r15d, r15d^^^mov     rdi, [rbp+var_538]^^^call    free^^^mov     rdi, r15^^^call    free^^^mov     eax, [rbx]^^^test    ah, 80h^^^jnz     short loc_41AA1B^^^mov     rdx, [rbx+88h]^^^mov     eax, [rdx+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rdx+4], eax^^^jz      loc_41AB00^^^mov     eax, [rbp+var_530]^^^test    eax, eax^^^jz      short loc_41AA38^^^lea     rdi, [rbp+var_130]^^^xor     esi, esi^^^call    near ptr 0^^^nop     dword ptr [rax+rax+00h]^^^mov     eax, r14d^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_41A940^^^mov     r14d, 0FFFFFFFFh^^^jmp     short loc_41AA38^^^mov     eax, 0^^^test    rax, rax^^^jnz     loc_41AB30^^^mov     [rbp+var_130], offset funlockfile^^^mov     [rbp+var_128], rbx^^^mov     rdx, [rbx+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_41AAD6^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41AAC2^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_1109^^^jmp     short loc_41AACB^^^cmpxchg [rdx], esi^^^jnz     _L_lock_1109^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^jmp     loc_41A9AE^^^mov     rdx, r12^^^mov     rsi, r13^^^mov     rdi, rbx^^^call    buffered_vfprintf^^^mov     r14d, eax^^^jmp     loc_41AA38^^^mov     qword ptr [rdx+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41AB1C^^^lock dec dword ptr [rdx]^^^jnz     _L_unlock_1164^^^jmp     short loc_41AB24^^^dec     dword ptr [rdx]^^^jnz     _L_unlock_1164^^^jmp     loc_41AA1B^^^lea     rdi, [rbp+var_130]^^^mov     rdx, rbx^^^mov     esi, offset funlockfile^^^call    near ptr 0^^^mov     eax, [rbx]^^^mov     [rbp+var_530], 1^^^test    ah, 80h^^^jz      loc_41AA90^^^jmp     loc_41A9AE^^^cmp     r15, 7FFFFFFFh^^^ja      loc_41A9DA^^^mov     rax, [rbp+var_528]^^^mov     r14d, r15d^^^cmp     byte ptr [rax], 0^^^jz      loc_41A9DA^^^cmp     cs:__printf_function_table, 0^^^jnz     loc_41AD1D^^^cmp     cs:__printf_modifier_table, 0^^^jnz     loc_41AD1D^^^cmp     cs:__printf_va_arg_table, 0^^^jnz     loc_41AD1D^^^mov     r15, [rbp+var_528]^^^mov     [rbp+var_570], 0^^^mov     [rbp+var_538], 0^^^mov     [rbp+var_5C4], 0^^^mov     [rbp+var_5A8], 0^^^mov     [rbp+var_598], 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_5D0], 0^^^lea     rdi, [r15+1]^^^movzx   r15d, byte ptr [r15+1]^^^lea     r8, [rbp+var_138]^^^mov     [rbp+var_5F8], 0^^^mov     [rbp+var_5F4], 0^^^mov     [rbp+var_560], rdi^^^mov     [rbp+var_548], r8^^^mov     [rbp+var_5C8], 0^^^mov     [rbp+var_5D8], 0^^^mov     [rbp+var_558], r15b^^^movzx   eax, [rbp+var_558]^^^xor     r15d, r15d^^^mov     [rbp+var_600], 0^^^mov     [rbp+var_5B8], 0^^^mov     [rbp+var_5C0], 0^^^mov     [rbp+var_590], 0^^^mov     [rbp+var_604], 0^^^mov     [rbp+var_5A4], 0^^^sub     eax, 20h^^^mov     [rbp+var_5A0], 0FFFFFFFFh^^^mov     [rbp+var_608], 0^^^cmp     al, 5Ah^^^mov     [rbp+var_5F0], 20h^^^jbe     short loc_41AD00^^^cmp     [rbp+var_558], 0^^^jnz     loc_41AD5C^^^or      r14d, 0FFFFFFFFh^^^cmp     [rbp+var_570], 0^^^jz      loc_41A9E8^^^mov     rdi, [rbp+var_540]^^^call    free^^^jmp     loc_41A9E8^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^or      r14d, 20h^^^mov     [rbx], r14d^^^mov     r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[rdx], 9^^^jmp     loc_41AA38^^^movsx   eax, [rbp+var_558]^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     rax^^^mov     [rbp+var_570], 0^^^mov     [rbp+var_538], 0^^^xor     r15d, r15d^^^mov     [rbp+var_5C4], 0^^^mov     [rbp+var_5A8], 0^^^mov     [rbp+var_598], 0FFFFFFFFFFFFFFFFh^^^mov     [rbp+var_5D0], 0^^^sub     rsp, 910h^^^mov     [rbp+var_70], 0^^^lea     rdi, [rsp+0F70h+var_F61]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_540], rdi^^^mov     rdi, r15^^^call    free^^^cmp     [rbp+var_598], 0FFFFFFFFFFFFFFFFh^^^jz      loc_41B51B^^^mov     rax, [rbp+var_528]^^^cmp     byte ptr [rax], 0^^^mov     [rbp+var_560], rax^^^jz      loc_41B55E^^^xor     edx, edx^^^xor     r8d, r8d^^^mov     eax, 900h^^^mov     dword ptr [rbp+var_548], r14d^^^mov     [rbp+var_578], rbx^^^mov     r15d, 48h^^^mov     [rbp+var_588], r13^^^mov     [rbp+var_580], r12^^^mov     r14, rax^^^mov     [rbp+var_550], 0^^^mov     rbx, [rbp+var_560]^^^mov     r13, r8^^^mov     r12, rdx^^^jmp     short loc_41AE13^^^cmp     r14, 1000h^^^ja      loc_41B774^^^mov     [rbp+var_540], r13^^^mov     r13, r15^^^add     r15, 48h^^^add     r13, [rbp+var_540]^^^lea     rcx, [rbp+var_70]^^^mov     rsi, r12^^^mov     rdi, rbx^^^mov     rdx, r13^^^call    __parse_one_specmb^^^mov     rbx, [r13+20h]^^^add     r12, rax^^^add     [rbp+var_550], 1^^^cmp     byte ptr [rbx], 0^^^jz      short loc_41AEB2^^^cmp     r14, r15^^^ja      short loc_41AE0C^^^lea     rdx, [r14+r14]^^^cmp     rdx, 1000h^^^ja      loc_41B79F^^^add     rdx, 0Fh^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [rdx+10h]^^^add     r14, rdx^^^sub     rsp, rax^^^lea     r13, [rsp+0F70h+var_F61]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^lea     rax, [r13+rdx+0]^^^cmp     [rbp+var_540], rax^^^jz      short loc_41AE82^^^mov     r14, rdx^^^mov     rsi, [rbp+var_540]^^^mov     rdx, r15^^^mov     rdi, r13^^^call    sub_400340^^^cmp     [rbp+var_570], 0^^^jz      loc_41ADF8^^^mov     rdi, [rbp+var_540]^^^call    free^^^jmp     loc_41ADF8^^^mov     [rbp+var_560], rbx^^^mov     rdx, r12^^^mov     r14d, dword ptr [rbp+var_548]^^^mov     rbx, [rbp+var_578]^^^mov     r13, [rbp+var_588]^^^mov     r12, [rbp+var_580]^^^mov     r11, [rbp+var_70]^^^mov     rax, 0AAAAAAAAAAAAAAAh^^^cmp     rdx, r11^^^cmovnb  r11, rdx^^^cmp     r11, rax^^^ja      loc_41B74E^^^lea     r15, [r11+r11*2]^^^shl     r15, 3^^^cmp     r15, 1000h^^^ja      loc_41B702^^^add     r15, 1Eh^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r15^^^lea     rcx, [rsp+0F70h+var_F61]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     [rbp+var_578], rcx^^^mov     rax, r11^^^mov     esi, [rbx+74h]^^^lea     rdx, ds:0[r11*4]^^^shl     rax, 4^^^add     rax, [rbp+var_578]^^^mov     [rbp+var_648], r11^^^shl     esi, 1Dh^^^sar     esi, 1Fh^^^mov     r8, rax^^^mov     [rbp+var_548], rax^^^add     r8, rdx^^^mov     rdi, r8^^^mov     [rbp+var_660], r8^^^call    sub_400390^^^cmp     [rbp+var_550], 0^^^mov     r8, [rbp+var_660]^^^mov     r11, [rbp+var_648]^^^jz      loc_41B06C^^^xor     r9d, r9d^^^mov     dword ptr [rbp+var_580], r14d^^^mov     [rbp+var_5B0], rbx^^^mov     [rbp+var_5E0], r13^^^mov     r14, r12^^^mov     r15, [rbp+var_540]^^^mov     [rbp+var_588], r11^^^mov     rbx, r9^^^mov     r13, [rbp+var_550]^^^mov     r12, r8^^^jmp     short loc_41AFF4^^^movsxd  rdx, dword ptr [r15+30h]^^^movsxd  r8, dword ptr [r15+8]^^^mov     rdi, r15^^^mov     rcx, [rbp+var_548]^^^mov     rax, cs:__printf_arginfo_table^^^shl     rdx, 2^^^add     rcx, rdx^^^add     rdx, r12^^^call    qword ptr [rax+r8*8]^^^add     rbx, 1^^^add     r15, 48h^^^cmp     rbx, r13^^^jz      short loc_41B04A^^^mov     eax, [r15+2Ch]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_41B007^^^cdqe^^^mov     dword ptr [r12+rax*4], 0^^^mov     eax, [r15+28h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_41B01A^^^cdqe^^^mov     dword ptr [r12+rax*4], 0^^^mov     rsi, [r15+38h]^^^test    rsi, rsi^^^jz      short loc_41AFE7^^^cmp     rsi, 1^^^jnz     short loc_41AFC0^^^movsxd  rax, dword ptr [r15+30h]^^^mov     edx, [r15+34h]^^^mov     r8, [rbp+var_548]^^^mov     [r12+rax*4], edx^^^movsxd  rax, dword ptr [r15+30h]^^^mov     edx, [r15+40h]^^^mov     [r8+rax*4], edx^^^jmp     short loc_41AFE7^^^mov     r8, r12^^^mov     r11, [rbp+var_588]^^^mov     r12, r14^^^mov     rbx, [rbp+var_5B0]^^^mov     r13, [rbp+var_5E0]^^^mov     r14d, dword ptr [rbp+var_580]^^^test    r11, r11^^^jz      loc_41B136^^^mov     rdx, [rbp+var_578]^^^xor     r15d, r15d^^^jmp     short loc_41B0CC^^^cmp     eax, 3^^^jge     loc_41B408^^^cmp     eax, 1^^^jle     loc_41B4E1^^^mov     ecx, dword ptr [rbp+var_110]^^^cmp     ecx, 30h^^^jnb     loc_41B4B1^^^mov     eax, ecx^^^add     rax, [rbp+var_100]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_110], ecx^^^mov     eax, [rax]^^^mov     [rdx], eax^^^add     r15, 1^^^add     rdx, 10h^^^cmp     r15, r11^^^jz      short loc_41B136^^^mov     eax, [r8+r15*4]^^^cmp     eax, 5^^^jle     short loc_41B088^^^cmp     eax, 100h^^^jz      loc_41B408^^^jg      loc_41B444^^^cmp     eax, 7^^^jle     loc_41B48C^^^test    ah, 8^^^jnz     loc_41B408^^^mov     rcx, cs:__printf_va_arg_table^^^test    rcx, rcx^^^jnz     loc_41B5E4^^^mov     qword ptr [rdx], 0^^^mov     dword ptr [rdx+8], 0^^^jmp     short loc_41B0BF^^^movsxd  rax, r14d^^^mov     ecx, 7FFFFFFFh^^^sub     rcx, rax^^^cmp     rdx, rcx^^^ja      loc_41B5D8^^^add     [rbp+var_5A8], 1^^^add     r14d, edx^^^movsxd  rax, [rbp+var_5A8]^^^xor     r15d, r15d^^^cmp     [rbp+var_550], rax^^^jbe     loc_41ACB3^^^mov     rdi, [rbp+var_540]^^^lea     rax, [rax+rax*8]^^^lea     rsi, [rdi+rax*8]^^^movzx   edx, byte ptr [rsi+0Ch]^^^mov     eax, edx^^^shr     al, 3^^^mov     r8d, eax^^^mov     eax, edx^^^shr     al, 4^^^and     r8d, 1^^^mov     ecx, eax^^^mov     eax, edx^^^mov     [rbp+var_62C], r8d^^^shr     al, 5^^^and     ecx, 1^^^mov     edi, eax^^^mov     eax, edx^^^mov     [rbp+var_618], ecx^^^shr     al, 6^^^and     edi, 1^^^mov     r8d, eax^^^mov     eax, edx^^^mov     [rbp+var_628], edi^^^shr     al, 7^^^and     r8d, 1^^^movzx   eax, al^^^mov     dword ptr [rbp+var_5E0], r8d^^^mov     [rbp+var_638], eax^^^mov     eax, edx^^^and     eax, 1^^^mov     [rbp+var_634], eax^^^mov     eax, edx^^^shr     al, 1^^^mov     ecx, eax^^^and     ecx, 1^^^mov     [rbp+var_620], ecx^^^movzx   ecx, byte ptr [rsi+0Dh]^^^mov     eax, ecx^^^shr     cl, 3^^^shr     al, 1^^^mov     edi, eax^^^mov     eax, edx^^^shr     al, 2^^^and     edi, 1^^^mov     r8d, eax^^^mov     eax, [rsi+4]^^^mov     [rbp+var_630], edi^^^and     r8d, 1^^^mov     edi, [rsi]^^^mov     dword ptr [rbp+var_5B0], r8d^^^mov     r8d, ecx^^^movzx   ecx, byte ptr [rsi+8]^^^mov     dword ptr [rbp+var_588], eax^^^movzx   eax, byte ptr [rsi+10h]^^^and     r8d, 1^^^mov     dword ptr [rbp+var_580], edi^^^mov     [rbp+var_63C], r8d^^^mov     [rbp+var_621], cl^^^mov     [rbp+var_622], al^^^mov     eax, [rsi+2Ch]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_41B258^^^mov     rdi, [rbp+var_578]^^^cdqe^^^shl     rax, 4^^^mov     eax, [rdi+rax]^^^test    eax, eax^^^mov     [rsi+4], eax^^^js      loc_41B5A5^^^mov     r8d, [rsi+4]^^^mov     dword ptr [rbp+var_588], r8d^^^mov     eax, [rsi+28h]^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_41B280^^^mov     rcx, [rbp+var_578]^^^cdqe^^^shl     rax, 4^^^mov     edx, [rcx+rax]^^^or      eax, 0FFFFFFFFh^^^test    edx, edx^^^cmovns  eax, edx^^^mov     [rsi], eax^^^mov     dword ptr [rbp+var_580], eax^^^mov     edi, dword ptr [rbp+var_588]^^^cmp     dword ptr [rbp+var_580], edi^^^lea     r8, [rbp+var_138]^^^mov     [rbp+var_548], r8^^^mov     eax, edi^^^cmovge  eax, dword ptr [rbp+var_580]^^^xor     r15d, r15d^^^cmp     eax, 3C8h^^^jle     short loc_41B2F9^^^add     eax, 20h^^^movsxd  r15, eax^^^cmp     r15, 1000h^^^ja      loc_41B659^^^add     r15, 1Eh^^^mov     eax, dword ptr [rbp+var_580]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, r15^^^lea     rdx, [rsp+0F70h+var_F61]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^cmp     dword ptr [rbp+var_588], eax^^^jge     loc_41B5BF^^^cdqe^^^add     rax, 20h^^^add     rdx, rax^^^xor     r15d, r15d^^^mov     [rbp+var_548], rdx^^^mov     rcx, cs:__printf_function_table^^^test    rcx, rcx^^^jz      loc_41B570^^^movsx   r10, [rbp+var_621]^^^cmp     qword ptr [rcx+r10*8], 0^^^jz      loc_41B570^^^mov     r8, [rsi+38h]^^^lea     rax, ds:1Eh[r8*8]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0F70h+var_F61]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^test    r8, r8^^^jz      short loc_41B36C^^^mov     r9d, [rsi+30h]^^^mov     r11, [rbp+var_578]^^^xor     ecx, ecx^^^xor     edx, edx^^^lea     eax, [rdx+r9]^^^add     edx, 1^^^shl     rax, 4^^^add     rax, r11^^^mov     [rdi+rcx*8], rax^^^mov     ecx, edx^^^cmp     rcx, r8^^^jb      short loc_41B34C^^^mov     rcx, cs:__printf_function_table^^^mov     rdx, rdi^^^mov     rdi, rbx^^^call    qword ptr [rcx+r10*8]^^^cmp     eax, 0FFFFFFFEh^^^jz      loc_41B570^^^test    eax, eax^^^js      loc_41B5CF^^^cmp     r14d, 7FFFFFFEh^^^ja      loc_41B6C7^^^mov     edx, 7FFFFFFFh^^^sub     edx, r14d^^^cmp     eax, edx^^^ja      loc_41B6F9^^^add     r14d, eax^^^mov     rdi, r15^^^call    free^^^test    r14d, r14d^^^js      loc_41B6E0^^^movsxd  rax, [rbp+var_5A8]^^^mov     r15, [rbp+var_540]^^^mov     rdi, rbx^^^imul    rax, 48h^^^add     r15, rax^^^mov     rax, [rbx+0D8h]^^^mov     rsi, [r15+18h]^^^mov     rdx, [r15+20h]^^^sub     rdx, rsi^^^call    qword ptr [rax+38h]^^^mov     rdx, rax^^^mov     rax, [r15+20h]^^^sub     rax, [r15+18h]^^^cmp     rdx, rax^^^jz      loc_41B118^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     ecx, dword ptr [rbp+var_110]^^^cmp     ecx, 30h^^^jnb     short loc_41B430^^^mov     eax, ecx^^^add     rax, [rbp+var_100]^^^add     ecx, 8^^^mov     dword ptr [rbp+var_110], ecx^^^mov     rax, [rax]^^^mov     [rdx], rax^^^jmp     loc_41B0BF^^^mov     rax, [rbp+var_108]^^^lea     rcx, [rax+8]^^^mov     [rbp+var_108], rcx^^^jmp     short loc_41B425^^^cmp     eax, 200h^^^jz      short loc_41B408^^^cmp     eax, 400h^^^jz      loc_41B09A^^^cmp     eax, 107h^^^jnz     loc_41B0EF^^^mov     rax, [rbp+var_108]^^^add     rax, 0Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^lea     rcx, [rax+10h]^^^mov     [rbp+var_108], rcx^^^mov     rsi, [rax]^^^mov     edi, [rax+8]^^^mov     [rdx], rsi^^^mov     [rdx+8], edi^^^jmp     loc_41B0BF^^^mov     ecx, dword ptr [rbp+var_110+4]^^^cmp     ecx, 0B0h^^^jnb     short loc_41B430^^^mov     eax, ecx^^^add     ecx, 10h^^^add     rax, [rbp+var_100]^^^mov     dword ptr [rbp+var_110+4], ecx^^^jmp     loc_41B425^^^mov     rax, [rbp+var_108]^^^lea     rcx, [rax+8]^^^mov     [rbp+var_108], rcx^^^jmp     loc_41B0BB^^^mov     rcx, 0FFFFFFFFFFFFFFC0h^^^mov     r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[rcx], 16h^^^jmp     loc_41AA38^^^test    eax, eax^^^jns     loc_41B09A^^^cmp     eax, 0FFFFFFFFh^^^jnz     loc_41B0EF^^^test    byte ptr [rbx+74h], 4^^^jnz     short loc_41B511^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 752h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aS_flags24^^^call    __assert_fail^^^mov     edi, offset aInvalidNUseDet^^^call    __libc_fatal^^^mov     rax, 0FFFFFFFFFFFFFFB8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r8, [rax+48h]^^^mov     rax, [rax+50h]^^^mov     [rbp+var_598], rax^^^movzx   eax, byte ptr [rax]^^^mov     [rbp+var_5D0], r8^^^cmp     al, 7Fh^^^jz      short loc_41B54E^^^test    al, al^^^jnz     loc_41AD91^^^mov     [rbp+var_598], 0^^^jmp     loc_41AD91^^^xor     edx, edx^^^mov     [rbp+var_550], 0^^^jmp     loc_41AED8^^^movzx   edx, [rbp+var_621]^^^mov     eax, offset sub_41F5E2^^^sub     edx, 20h^^^cmp     dl, 5Ah^^^ja      loc_41AD1B^^^movsx   eax, [rbp+var_621]^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step4_jumps_13414[rax*8]^^^jmp     rax^^^neg     eax^^^or      edx, 20h^^^mov     [rsi+0Ch], dl^^^mov     [rsi+4], eax^^^mov     [rbp+var_628], 1^^^jmp     loc_41B24D^^^movsxd  rax, dword ptr [rbp+var_588]^^^add     rax, 20h^^^jmp     loc_41B2EC^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^cdqe^^^cmp     qword ptr [rcx+rax*8-40h], 0^^^jz      loc_41B108^^^mov     rcx, [rbp+var_548]^^^lea     rsi, [rbp+var_110]^^^movsxd  rax, dword ptr [rcx+r15*4]^^^add     rax, 1Eh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0F70h+var_F61]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     [rdx], rdi^^^movsxd  rcx, dword ptr [r8+r15*4]^^^mov     rax, cs:__printf_va_arg_table^^^mov     [rbp+var_658], rdx^^^mov     [rbp+var_660], r8^^^mov     [rbp+var_648], r11^^^call    qword ptr [rax+rcx*8-40h]^^^mov     rdx, [rbp+var_658]^^^mov     r8, [rbp+var_660]^^^mov     r11, [rbp+var_648]^^^jmp     loc_41B0BF^^^mov     rdi, r15^^^mov     [rbp+var_648], rsi^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rsi, [rbp+var_648]^^^jnz     loc_41B2C0^^^mov     rdi, r15^^^mov     [rbp+var_648], rsi^^^call    malloc^^^mov     r8d, dword ptr [rbp+var_580]^^^cmp     dword ptr [rbp+var_588], r8d^^^mov     r15, rax^^^mov     rsi, [rbp+var_648]^^^jge     short loc_41B6BA^^^movsxd  rax, dword ptr [rbp+var_580]^^^add     rax, 20h^^^add     rax, r15^^^mov     [rbp+var_548], rax^^^jmp     loc_41B2F9^^^movsxd  rax, dword ptr [rbp+var_588]^^^add     rax, 20h^^^jmp     short loc_41B6AB^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7D0h^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aUnsignedIntDon^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___13225^^^mov     edx, 7FDh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, r15^^^mov     [rbp+var_648], r11^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     r11, [rbp+var_648]^^^jnz     loc_41AF0B^^^mov     rdi, r15^^^mov     [rbp+var_648], r11^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_538], rax^^^mov     r11, [rbp+var_648]^^^jz      short loc_41B768^^^mov     [rbp+var_578], rax^^^jmp     loc_41AF26^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^mov     dword ptr fs:[rdx], 22h^^^jmp     loc_41ACB3^^^xor     r15d, r15d^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_41ACB3^^^mov     rdi, r14^^^call    __libc_alloca_cutoff^^^movzx   edx, [rbp+var_570]^^^test    eax, eax^^^mov     ecx, 1^^^mov     [rbp+var_540], r13^^^cmovnz  ecx, edx^^^mov     [rbp+var_570], cl^^^jmp     loc_41AE0C^^^mov     rdi, rdx^^^mov     [rbp+var_658], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp+var_658]^^^jnz     loc_41AE56^^^mov     rdi, rdx^^^mov     [rbp+var_658], rdx^^^call    malloc^^^mov     rdx, [rbp+var_658]^^^mov     r13, rax^^^mov     r14, rdx^^^jmp     loc_41AE82^^^
_dl_map_object_from_fd$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^mov     r13d, r9d^^^push    r12^^^mov     r12, r8^^^push    rbx^^^sub     rsp, 148h^^^mov     [rbp+var_EC], esi^^^mov     rsi, [rbp+arg_10]^^^mov     [rbp+var_100], rdi^^^xor     edi, edi^^^mov     [rbp+var_E8], rdx^^^mov     [rbp+var_108], rcx^^^call    _dl_debug_initialize^^^mov     esi, [rbp+var_EC]^^^lea     rdx, [rbp+var_C0]^^^mov     edi, 1^^^mov     [rbp+var_F8], rax^^^call    _fxstat^^^test    eax, eax^^^js      loc_44FB58^^^mov     rsi, [rbp+arg_10]^^^lea     rax, [rsi+rsi*8]^^^shl     rax, 4^^^mov     rbx, ds:_dl_ns[rax]^^^test    rbx, rbx^^^jz      short loc_44EFB0^^^mov     rax, qword ptr [rbp+var_C0+8]^^^mov     rdx, qword ptr [rbp+var_C0]^^^jmp     short loc_44EF69^^^mov     rbx, [rbx+18h]^^^test    rbx, rbx^^^jz      short loc_44EFB0^^^test    byte ptr [rbx+315h], 20h^^^jnz     short loc_44EF60^^^cmp     [rbx+3A0h], rax^^^jnz     short loc_44EF60^^^cmp     [rbx+398h], rdx^^^jnz     short loc_44EF60^^^mov     edi, [rbp+var_EC]^^^call    close^^^mov     rdi, [rbp+var_108]^^^call    free^^^mov     rdi, [rbx+38h]^^^mov     rsi, [rbp+var_100]^^^call    add_name_to_object_isra_3^^^jmp     loc_44F7A6^^^test    byte ptr [rbp+arg_0], 4^^^jnz     loc_44F92F^^^test    byte ptr cs:_dl_debug_mask, 40h^^^jnz     loc_44FB6C^^^mov     r9, [rbp+var_F8]^^^mov     eax, [r9+18h]^^^test    eax, eax^^^jz      loc_44F7D1^^^cmp     eax, 1^^^jnz     loc_44FB88^^^mov     [rbp+var_111], 0^^^mov     r9, [rbp+arg_10]^^^mov     r8d, [rbp+arg_0]^^^mov     rcx, r12^^^mov     rsi, [rbp+var_100]^^^mov     rdi, [rbp+var_108]^^^mov     edx, r13d^^^call    _dl_new_object^^^test    rax, rax^^^mov     rbx, rax^^^jz      loc_44FBA1^^^mov     rdx, [rbp+var_E8]^^^movzx   r13d, word ptr [rdx+40h]^^^mov     rax, [rdx+20h]^^^mov     rsi, [rdx+28h]^^^movzx   r9d, word ptr [rdx+18h]^^^mov     [rbx+2A8h], rax^^^lea     rax, ds:0[r13*8]^^^mov     [rbx+2B0h], r13w^^^shl     r13, 6^^^mov     word ptr [rbp+var_E0], r9w^^^lea     r12, [rdx+rsi+8]^^^sub     r13, rax^^^lea     rax, [r13+rsi+0]^^^cmp     rax, [rdx]^^^ja      loc_44F7EA^^^movzx   eax, word ptr [rbx+2B0h]^^^movzx   esi, word ptr [rbx+2B0h]^^^mov     [rbp+var_110], rsp^^^lea     rax, [rax+rax*2]^^^shl     rax, 4^^^add     rax, 1Eh^^^and     eax, 0FFFFF0h^^^sub     rsp, rax^^^movzx   eax, si^^^lea     rcx, ds:0[rax*8]^^^mov     rdx, rax^^^lea     r15, [rsp+170h+var_129]^^^shl     rdx, 6^^^sub     rdx, rcx^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^add     rdx, r12^^^cmp     r12, rdx^^^jnb     loc_44F94D^^^mov     r14, r12^^^mov     [rbp+var_D0], 0^^^xor     r13d, r13d^^^mov     [rbp+var_D8], 7^^^jmp     short loc_44F12A^^^cmp     edx, 1^^^jz      loc_44F200^^^cmp     edx, 2^^^jnz     short loc_44F108^^^mov     rdx, [r14+10h]^^^mov     [rbx+10h], rdx^^^mov     rdx, [r14+28h]^^^shr     rdx, 4^^^mov     [rbx+2B2h], dx^^^nop     dword ptr [rax]^^^lea     rcx, ds:0[rax*8]^^^mov     rdx, rax^^^add     r14, 38h^^^shl     rdx, 6^^^sub     rdx, rcx^^^add     rdx, r12^^^cmp     r14, rdx^^^jnb     loc_44F2C0^^^mov     edx, [r14]^^^cmp     edx, 6^^^jz      loc_44F2B0^^^jbe     short loc_44F0E0^^^cmp     edx, 6474E551h^^^jz      loc_44F1F0^^^cmp     edx, 6474E552h^^^jz      short loc_44F1C8^^^cmp     edx, 7^^^jnz     short loc_44F108^^^mov     rdx, [r14+28h]^^^test    rdx, rdx^^^jz      short loc_44F108^^^mov     rax, [r14+30h]^^^mov     [rbx+428h], rdx^^^test    rax, rax^^^mov     [rbx+430h], rax^^^mov     rdx, [r14+10h]^^^jz      short loc_44F17C^^^sub     rax, 1^^^and     rax, rdx^^^mov     [rbx+438h], rax^^^mov     rax, [r14+20h]^^^mov     [rbx+418h], rdx^^^mov     [rbx+420h], rax^^^movzx   eax, byte ptr [rbx+314h]^^^and     eax, 3^^^cmp     al, 1^^^jnz     loc_44FA84^^^call    _dl_next_tls_modid^^^movzx   esi, word ptr [rbx+2B0h]^^^mov     [rbx+448h], rax^^^movzx   eax, si^^^jmp     loc_44F108^^^mov     rax, [r14+10h]^^^mov     [rbx+450h], rax^^^mov     rax, [r14+28h]^^^mov     [rbx+458h], rax^^^movzx   eax, si^^^jmp     loc_44F108^^^mov     r9d, [r14+4]^^^mov     [rbp+var_D8], r9^^^jmp     loc_44F108^^^mov     rdi, cs:_dl_pagesize^^^mov     r10, [r14+30h]^^^lea     r8, [rdi-1]^^^test    r10, r8^^^jnz     loc_44F9AC^^^mov     rcx, [r14+10h]^^^mov     r9, [r14+8]^^^sub     r10, 1^^^mov     rdx, rcx^^^sub     rdx, r9^^^test    r10, rdx^^^jnz     loc_44F9B7^^^mov     r10, rcx^^^add     r10, [r14+20h]^^^lea     rdx, [r13+r13*2+0]^^^mov     r11, rcx^^^add     rcx, [r14+28h]^^^neg     rdi^^^shl     rdx, 4^^^add     r13, 1^^^and     r11, rdi^^^add     rdx, r15^^^add     r8, r10^^^mov     [rdx], r11^^^mov     [rdx+10h], r10^^^and     r8, rdi^^^and     rdi, r9^^^cmp     r13, 1^^^mov     [rdx+8], r8^^^mov     [rdx+18h], rcx^^^mov     [rdx+20h], rdi^^^jbe     short loc_44F292^^^movzx   ecx, [rbp+var_D0]^^^cmp     r11, [rdx-28h]^^^mov     edi, 1^^^cmovnz  ecx, edi^^^mov     [rbp+var_D0], cl^^^mov     ecx, [r14+4]^^^mov     edi, 73516240h^^^and     ecx, 7^^^shl     ecx, 2^^^sar     edi, cl^^^and     edi, 0Fh^^^mov     [rdx+28h], edi^^^jmp     loc_44F108^^^mov     rdx, [r14+10h]^^^mov     [rbx+2A0h], rdx^^^jmp     loc_44F108^^^test    r13, r13^^^jz      loc_44F94D^^^lea     r10, [r13+r13*2-3]^^^movzx   eax, word ptr [rbp+var_E0]^^^mov     rdi, [r15]^^^mov     r14, r15^^^shl     r10, 4^^^add     r10, r15^^^mov     rdx, [r10+18h]^^^mov     [rbp+var_F0], eax^^^sub     rdx, rdi^^^cmp     eax, 3^^^mov     [rbp+var_E0], rdx^^^jnz     loc_44FA38^^^and     rdi, cs:_dl_use_load_bias^^^mov     rsi, rdx^^^mov     r9, [r15+20h]^^^mov     edx, [r15+28h]^^^mov     r8d, [rbp+var_EC]^^^mov     ecx, 802h^^^mov     [rbp-130h], r10^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rbx+340h], rax^^^mov     r10, [rbp-130h]^^^jz      loc_44F479^^^mov     rdx, [rbp+var_E0]^^^add     rdx, rax^^^sub     rax, [r15]^^^cmp     [rbp+var_D0], 0^^^mov     [rbx+348h], rdx^^^mov     [rbx], rax^^^jnz     loc_44F7B8^^^or      byte ptr [rbx+315h], 40h^^^mov     edx, [r14+28h]^^^test    dl, 4^^^jnz     loc_44F488^^^cmp     qword ptr [rbx+2A0h], 0^^^jz      loc_44F4A4^^^mov     r8, [r14+18h]^^^mov     rcx, [r14+10h]^^^cmp     r8, rcx^^^jbe     loc_44F41E^^^mov     rax, [rbx]^^^mov     rsi, cs:_dl_pagesize^^^add     rcx, rax^^^add     r8, rax^^^mov     rdi, rsi^^^lea     rax, [rcx+rsi-1]^^^neg     rdi^^^mov     r10, r8^^^and     rax, rdi^^^cmp     rax, r8^^^cmovbe  r10, rax^^^cmp     rcx, r10^^^jnb     short loc_44F415^^^test    dl, 2^^^jz      loc_44FCC6^^^mov     rdx, r10^^^xor     esi, esi^^^mov     rdi, rcx^^^sub     rdx, rcx^^^mov     [rbp+var_120], rcx^^^mov     [rbp+var_128], r8^^^mov     [rbp-130h], r10^^^call    sub_400390^^^mov     edx, [r14+28h]^^^mov     rcx, [rbp+var_120]^^^mov     r8, [rbp+var_128]^^^mov     r10, [rbp-130h]^^^test    dl, 2^^^jz      loc_44FD0E^^^cmp     r8, r10^^^ja      loc_44F830^^^add     r14, 30h^^^lea     rax, [r13+r13*2+0]^^^shl     rax, 4^^^add     rax, r15^^^cmp     r14, rax^^^jnb     loc_44F4FB^^^mov     rdx, [r14+8]^^^mov     rax, [r14]^^^cmp     rdx, rax^^^jbe     loc_44F36C^^^mov     r10d, [r14+28h]^^^mov     rdi, rax^^^add     rdi, [rbx]^^^mov     r9, [r14+20h]^^^mov     r8d, [rbp+var_EC]^^^mov     rsi, rdx^^^sub     rsi, rax^^^mov     ecx, 812h^^^mov     edx, r10d^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     loc_44F36C^^^mov     r13d, offset aFailedToMapSeg^^^jmp     loc_44F860^^^mov     rax, [r14+8]^^^add     rax, [rbx]^^^cmp     qword ptr [rbx+2A0h], 0^^^mov     [rbx+350h], rax^^^jnz     loc_44F387^^^mov     r9, [rbp+var_E8]^^^mov     rsi, [r14+20h]^^^mov     rcx, [r9+28h]^^^cmp     rsi, rcx^^^ja      loc_44F387^^^movzx   eax, word ptr [r9+40h]^^^mov     r8, [r14]^^^mov     rdi, rsi^^^sub     rdi, r8^^^add     rdi, [r14+8]^^^lea     r9, ds:0[rax*8]^^^shl     rax, 6^^^sub     rax, r9^^^add     rax, rcx^^^cmp     rdi, rax^^^jb      loc_44F387^^^add     rcx, r8^^^sub     rcx, rsi^^^mov     [rbx+2A0h], rcx^^^jmp     loc_44F387^^^mov     rdx, [rbx+10h]^^^mov     rsp, [rbp+var_110]^^^test    rdx, rdx^^^jz      loc_44F8DF^^^mov     rdi, [rbx]^^^add     rdx, rdi^^^test    rdx, rdx^^^mov     [rbx+10h], rdx^^^jz      loc_44F6BD^^^mov     rax, [rdx]^^^lea     r11, [rbx+40h]^^^test    rax, rax^^^jz      short loc_44F5A4^^^mov     r8d, 6FFFFFFFh^^^mov     r10d, 6FFFFDFFh^^^mov     r13d, 6FFFFEFFh^^^mov     r9d, 70000021h^^^mov     esi, 10h^^^jmp     short loc_44F56C^^^mov     rcx, r9^^^sub     rcx, rax^^^mov     rax, rcx^^^mov     [rbx+rax*8+40h], rdx^^^add     rdx, 10h^^^mov     rax, [rdx+rsi-10h]^^^test    rax, rax^^^jz      short loc_44F5A4^^^cmp     rax, 21h^^^jbe     short loc_44F559^^^mov     rcx, r8^^^sub     rcx, rax^^^cmp     rcx, 0Fh^^^jbe     short loc_44F550^^^lea     ecx, [rax+rax]^^^sar     ecx, 1^^^cmp     ecx, 0FFFFFFFCh^^^jbe     loc_44F89F^^^not     ecx^^^lea     eax, [rcx+32h]^^^mov     [rbx+rax*8+40h], rdx^^^add     rdx, 10h^^^mov     rax, [rdx+rsi-10h]^^^test    rax, rax^^^jnz     short loc_44F56C^^^test    rdi, rdi^^^jz      short loc_44F61A^^^mov     rax, [rbx+60h]^^^test    rax, rax^^^jz      short loc_44F5B6^^^add     [rax+8], rdi^^^mov     rax, [rbx+58h]^^^test    rax, rax^^^jz      short loc_44F5C3^^^add     [rax+8], rdi^^^mov     rax, [rbx+68h]^^^test    rax, rax^^^jz      short loc_44F5D0^^^add     [rax+8], rdi^^^mov     rax, [rbx+70h]^^^test    rax, rax^^^jz      short loc_44F5DD^^^add     [rax+8], rdi^^^mov     rax, [rbx+78h]^^^test    rax, rax^^^jz      short loc_44F5EA^^^add     [rax+8], rdi^^^mov     rax, [rbx+0F8h]^^^test    rax, rax^^^jz      short loc_44F5FA^^^add     [rax+8], rdi^^^mov     rax, [rbx+1C8h]^^^test    rax, rax^^^jz      short loc_44F60A^^^add     [rax+8], rdi^^^mov     rax, [rbx+298h]^^^test    rax, rax^^^jz      short loc_44F61A^^^add     [rax+8], rdi^^^mov     rax, [rbx+0E0h]^^^test    rax, rax^^^jz      short loc_44F631^^^cmp     qword ptr [rax+8], 7^^^jnz     loc_44FB26^^^cmp     qword ptr [rbx+78h], 0^^^jz      short loc_44F64A^^^mov     rax, [rbx+88h]^^^cmp     qword ptr [rax+8], 18h^^^jnz     loc_44FB3F^^^mov     rax, [rbx+130h]^^^test    rax, rax^^^jz      short loc_44F686^^^mov     rcx, [rax+8]^^^test    cl, 2^^^mov     edx, ecx^^^mov     [rbx+3D8h], ecx^^^jz      short loc_44F66E^^^mov     [rbx+0C0h], rax^^^test    dl, 4^^^jz      short loc_44F67A^^^mov     [rbx+0F0h], rax^^^and     edx, 8^^^jz      short loc_44F686^^^mov     [rbx+100h], rax^^^mov     rax, [rbx+170h]^^^test    rax, rax^^^jz      short loc_44F6A8^^^mov     rdx, [rax+8]^^^mov     [rbx+3D4h], edx^^^and     edx, 1^^^jz      short loc_44F6A8^^^mov     [rbx+100h], rax^^^cmp     qword ptr [rbx+128h], 0^^^jz      short loc_44F6BD^^^mov     qword ptr [rbx+0B8h], 0^^^mov     eax, [rbp+arg_0]^^^shr     eax, 1Fh^^^test    al, al^^^jnz     loc_44FC08^^^mov     rax, [rbx+2A0h]^^^test    rax, rax^^^jz      loc_44F95F^^^add     rax, [rbx]^^^mov     [rbx+2A0h], rax^^^mov     eax, cs:_dl_stack_flags^^^not     eax^^^and     rax, [rbp+var_D8]^^^test    al, 1^^^jnz     loc_44FBAC^^^mov     rax, [rbx+418h]^^^test    rax, rax^^^jz      short loc_44F712^^^add     rax, [rbx]^^^mov     [rbx+418h], rax^^^mov     edi, [rbp+var_EC]^^^call    close^^^test    eax, eax^^^jnz     loc_44FBD3^^^cmp     [rbp+var_F0], 2^^^jz      loc_44F87C^^^mov     r8, [rbx]^^^mov     rax, r8^^^add     rax, [rbx+2A8h]^^^test    byte ptr cs:_dl_debug_mask, 40h^^^mov     [rbx+2A8h], rax^^^jnz     loc_44FC62^^^mov     rdi, rbx^^^call    _dl_setup_hash^^^test    byte ptr [rbp+arg_0], 8^^^jnz     short loc_44F76F^^^cmp     qword ptr [rbx+0C0h], 0^^^jnz     loc_44F9C2^^^test    byte ptr [rbx+3D4h], 20h^^^jnz     loc_44F870^^^cmp     cs:_dl_profile, 0^^^movdqa  xmm0, [rbp+var_C0]^^^movdqu  xmmword ptr [rbx+398h], xmm0^^^jnz     loc_44FBDE^^^mov     rsi, [rbp+arg_10]^^^mov     rdi, rbx^^^call    _dl_add_to_namespace_list^^^lea     rsp, [rbp-28h]^^^mov     rax, rbx^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     rdi, [r15+8]^^^mov     rsi, [r10]^^^xor     edx, edx^^^sub     rsi, rdi^^^add     rdi, rax^^^call    mprotect^^^jmp     loc_44F365^^^mov     dword ptr [r9+18h], 1^^^call    _dl_debug_state^^^mov     [rbp+var_111], 1^^^jmp     loc_44EFEA^^^lea     rax, [r13+1Eh]^^^mov     edi, [rbp+var_EC]^^^xor     edx, edx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r12, [rsp+170h+var_129]^^^call    lseek64^^^mov     edi, [rbp+var_EC]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, r13^^^mov     rsi, r12^^^call    read^^^cmp     rax, r13^^^jz      loc_44F069^^^mov     r13d, offset aCannotReadFile^^^jmp     loc_44FA28^^^mov     edx, [r14+28h]^^^mov     rsi, r8^^^xor     r9d, r9d^^^sub     rsi, r10^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 32h^^^mov     rdi, r10^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     loc_44F41E^^^mov     r13d, offset aCannotMapZeroF^^^mov     rsp, [rbp+var_110]^^^jmp     loc_44FA28^^^mov     cs:_dl_initfirst, rbx^^^jmp     loc_44F77C^^^movzx   eax, byte ptr [rbx+314h]^^^mov     edx, eax^^^and     edx, 3^^^cmp     dl, 1^^^jnz     loc_44F732^^^and     eax, 0FFFFFFFCh^^^mov     [rbx+314h], al^^^jmp     loc_44F732^^^mov     rcx, r10^^^sub     rcx, rax^^^cmp     rcx, 0Bh^^^ja      short loc_44F8BD^^^sub     rax, 6FFFFE34h^^^neg     rax^^^mov     [r11+rax*8], rdx^^^jmp     loc_44F55E^^^mov     rcx, r13^^^sub     rcx, rax^^^cmp     rcx, 0Ah^^^ja      loc_44F55E^^^sub     rax, 6FFFFF40h^^^neg     rax^^^mov     [r11+rax*8], rdx^^^jmp     loc_44F55E^^^cmp     [rbp+var_F0], 3^^^jnz     loc_44F6BD^^^xor     r12d, r12d^^^mov     r13d, offset aObjectFileHasN^^^cmp     [rbp+var_111], 0^^^mov     eax, 0^^^mov     r9, r13^^^cmovnz  rax, [rbp+var_F8]^^^mov     r8, rbx^^^mov     edi, r12d^^^mov     [rsp+170h+var_170], rax^^^mov     rcx, [rbp+var_108]^^^mov     rdx, [rbp+var_100]^^^mov     esi, [rbp+var_EC]^^^call    lose^^^mov     rdi, [rbp+var_108]^^^xor     ebx, ebx^^^call    free^^^mov     edi, [rbp+var_EC]^^^call    close^^^jmp     loc_44F7A6^^^xor     r12d, r12d^^^mov     r13d, offset aObjectFileHa_0^^^mov     rsp, [rbp+var_110]^^^jmp     short loc_44F8F5^^^mov     rdx, [rbp+var_E8]^^^movzx   r13d, word ptr [rdx+40h]^^^lea     rax, ds:0[r13*8]^^^shl     r13, 6^^^sub     r13, rax^^^mov     rdi, r13^^^call    malloc^^^test    rax, rax^^^jz      loc_44FA22^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     rdi, rax^^^call    memcpy^^^or      byte ptr [rbx+314h], 80h^^^mov     [rbx+2A0h], rax^^^jmp     loc_44F6E5^^^xor     r12d, r12d^^^mov     r13d, offset aElfLoadCommand^^^jmp     short loc_44F956^^^xor     r12d, r12d^^^mov     r13d, offset aElfLoadComma_0^^^jmp     short loc_44F956^^^mov     rdx, [rbx+380h]^^^lea     rax, [rbx+2B8h]^^^cmp     [rdx], rax^^^jz      loc_44F76F^^^mov     rax, [rbx+2C8h]^^^mov     [rax], rbx^^^mov     rax, [rbx+378h]^^^mov     rsi, [rbx+380h]^^^mov     dword ptr [rbx+2D0h], 1^^^lea     rdx, ds:0FFFFFFFFFFFFFFF8h[rax*8]^^^lea     rdi, [rsi+8]^^^call    sub_400340^^^mov     rax, [rbx+380h]^^^lea     rdx, [rbx+2C8h]^^^mov     [rax], rdx^^^jmp     loc_44F76F^^^mov     r13d, offset aCannotAlloca_0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, fs:[rax]^^^jmp     loc_44F8F5^^^test    [rbp+arg_0], 20000000h^^^jz      loc_44FADF^^^add     rdi, [rbx]^^^movzx   edx, [rbp+var_D0]^^^movzx   eax, byte ptr [rbx+315h]^^^mov     [rbx+340h], rdi^^^xor     edx, 1^^^add     rdi, [rbp+var_E0]^^^and     edx, 1^^^and     eax, 0FFFFFFBFh^^^shl     edx, 6^^^or      eax, edx^^^mov     [rbx+348h], rdi^^^mov     [rbx+315h], al^^^jmp     loc_44F422^^^cmp     cs:_dl_tls_dtv_slotinfo_list, 0^^^jnz     loc_44F1A7^^^call    _dl_tls_setup^^^test    eax, eax^^^jnz     short loc_44FB15^^^xor     edi, edi^^^call    _dl_allocate_tls^^^test    rax, rax^^^mov     rdx, rax^^^jz      short loc_44FB15^^^mov     [rdx], rax^^^mov     [rdx+10h], rax^^^mov     edi, 1002h^^^mov     eax, 9Eh^^^mov     rsi, rdx^^^syscall^^^test    eax, eax^^^jz      short loc_44FAED^^^mov     esi, 1^^^mov     rdi, rdx^^^xor     r12d, r12d^^^call    _dl_deallocate_tls^^^mov     r13d, offset aCannotSetFsBas^^^jmp     loc_44F956^^^xor     r12d, r12d^^^mov     r13d, offset aCannotDynamica^^^jmp     loc_44F956^^^mov     rax, cs:_dl_tls_max_dtv_idx^^^movzx   esi, word ptr [rbx+2B0h]^^^add     rax, 1^^^mov     cs:_dl_tls_max_dtv_idx, rax^^^mov     [rbx+448h], rax^^^movzx   eax, si^^^jmp     loc_44F108^^^mov     r12d, 0Ch^^^mov     r13d, offset aCannotAlloca_1^^^jmp     loc_44F956^^^mov     ecx, offset __PRETTY_FUNCTION___10918^^^mov     edx, 0BDh^^^mov     esi, offset aDynamicLink_h^^^mov     edi, offset aInfo20D_un_d_v^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___10918^^^mov     edx, 0C5h^^^mov     esi, offset aDynamicLink_h^^^mov     edi, offset aInfo9D_un_d_va^^^call    __assert_fail^^^mov     [rbp+var_111], 0^^^mov     r13d, offset aCannotStatShar^^^xor     ebx, ebx^^^jmp     loc_44FA28^^^mov     rdx, [rbp+arg_10]^^^mov     rsi, [rbp+var_100]^^^mov     edi, offset aFileSLuGenerat^^^xor     eax, eax^^^call    _dl_debug_printf^^^jmp     loc_44EFC7^^^mov     ecx, offset __PRETTY_FUNCTION___11169^^^mov     edx, 418h^^^mov     esi, offset aDlLoad_c^^^mov     edi, offset aRR_stateRt_add^^^call    __assert_fail^^^mov     r13d, offset aCannotCreateSh^^^jmp     loc_44FA28^^^or      cs:__stack_prot, 7^^^mov     rdi, [rbp+arg_8]^^^call    cs:_dl_make_stack_executable_hook^^^test    eax, eax^^^mov     r12d, eax^^^jz      loc_44F6FC^^^mov     r13d, offset aCannotEnableEx^^^jmp     loc_44F8F5^^^mov     r13d, offset aCannotCloseFil^^^jmp     loc_44FA28^^^mov     rax, [rbx+0B0h]^^^test    rax, rax^^^jz      loc_44F79A^^^mov     rdx, [rbx+68h]^^^mov     rdi, [rbx+38h]^^^mov     rsi, [rdx+8]^^^add     rsi, [rax+8]^^^call    add_name_to_object_isra_3^^^jmp     loc_44F79A^^^test    byte ptr [rbx+3D4h], 40h^^^jz      loc_44F6CB^^^mov     rdi, [rbx+340h]^^^mov     rsi, [rbx+348h]^^^sub     rsi, rdi^^^call    munmap^^^mov     rdi, [rbx+38h]^^^mov     ecx, [rdi+10h]^^^test    ecx, ecx^^^jnz     short loc_44FC3B^^^call    free^^^xor     r12d, r12d^^^cmp     byte ptr [rbx+314h], 0^^^mov     r13d, offset aSharedObjectCa^^^jns     loc_44F8F5^^^mov     rdi, [rbx+2A0h]^^^call    free^^^jmp     loc_44F8F5^^^movzx   ecx, word ptr [rbx+2B0h]^^^mov     rdx, [rbx+10h]^^^mov     r9d, 10h^^^mov     [rsp+170h+var_148], 10h^^^mov     esi, 10h^^^mov     edi, offset aDynamic0x0LxBa^^^mov     [rsp+170h+var_140], ecx^^^mov     rcx, [rbx+2A0h]^^^mov     [rsp+170h+var_160], rax^^^mov     [rsp+170h+var_158], 10h^^^xor     eax, eax^^^mov     [rsp+170h+var_168], 10h^^^mov     [rsp+170h+var_150], rcx^^^mov     rcx, [rbp+var_E0]^^^mov     [rsp+170h+var_170], rcx^^^mov     ecx, 10h^^^call    _dl_debug_printf^^^jmp     loc_44F753^^^and     rdi, rcx^^^or      edx, 2^^^mov     [rbp+var_120], rcx^^^mov     [rbp+var_128], r8^^^mov     [rbp-130h], r10^^^call    mprotect^^^test    eax, eax^^^mov     rcx, [rbp+var_120]^^^mov     r8, [rbp+var_128]^^^mov     r10, [rbp-130h]^^^jns     loc_44F3CE^^^mov     r13d, offset aCannotChangeMe^^^jmp     loc_44F860^^^mov     rsi, cs:_dl_pagesize^^^mov     rdi, rsi^^^neg     rdi^^^and     rdi, rcx^^^call    mprotect^^^mov     r10, [rbp-130h]^^^mov     r8, [rbp+var_128]^^^jmp     loc_44F415^^^
_IO_wdo_write$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 28h^^^test    rdx, rdx^^^mov     r13, [rdi+98h]^^^jz      loc_42889C^^^mov     r9, [rdi+28h]^^^cmp     [rdi+30h], r9^^^lea     r14, [rdi+28h]^^^jnz     short loc_428827^^^mov     rsi, [rdi+20h]^^^cmp     r9, rsi^^^jz      short loc_428827^^^mov     rdx, r9^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^cmp     eax, 0FFFFFFFFh^^^jz      loc_4288CE^^^mov     r9, [rbx+28h]^^^jmp     short loc_428827^^^mov     r9, [rbx+28h]^^^mov     r12, rax^^^mov     rsi, [rbx+0A0h]^^^mov     rax, [rbx+40h]^^^lea     rcx, [r12+rbp*4]^^^lea     r8, [rsp+58h+var_48]^^^mov     rdx, r12^^^mov     rdi, r13^^^mov     [rsp+58h+var_50], r14^^^add     rsi, 58h^^^mov     [rsp+58h+var_58], rax^^^call    qword ptr [r13+8]^^^mov     rsi, [rbx+20h]^^^mov     rdx, [rbx+28h]^^^mov     rdi, rbx^^^mov     r15d, eax^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^cmp     eax, 0FFFFFFFFh^^^jz      short loc_4288CE^^^mov     rax, [rsp+58h+var_48]^^^mov     rdx, rax^^^sub     rdx, r12^^^mov     rcx, rdx^^^sar     rcx, 2^^^sub     rbp, rcx^^^test    r15d, r15d^^^jz      short loc_428897^^^cmp     r15d, 1^^^jnz     short loc_42889C^^^add     rdx, 3^^^cmp     rdx, 6^^^jbe     short loc_42889C^^^test    rbp, rbp^^^jnz     short loc_428820^^^mov     rax, [rbx+0A0h]^^^test    dword ptr [rbx], 202h^^^mov     rdx, [rax+30h]^^^mov     [rax+10h], rdx^^^mov     [rax], rdx^^^mov     [rax+8], rdx^^^mov     [rax+20h], rdx^^^mov     [rax+18h], rdx^^^jz      short loc_4288E0^^^cmp     rbp, 1^^^mov     [rax+28h], rdx^^^sbb     eax, eax^^^not     eax^^^add     rsp, 28h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdx, [rax+38h]^^^jmp     short loc_4288C2^^^
isinf$$$mov     rdx, 7FFFFFFFFFFFFFFFh^^^mov     rax, 7FF0000000000000h^^^movq    rcx, xmm0^^^and     rdx, rcx^^^sar     rcx, 3Eh^^^xor     rdx, rax^^^mov     rax, rdx^^^neg     rax^^^or      rax, rdx^^^sar     rax, 3Fh^^^not     eax^^^and     eax, ecx^^^retn^^^
_dl_discover_osversion$$$push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 1D0h^^^mov     rdi, rsp^^^call    uname^^^test    eax, eax^^^lea     rsi, [rsp+1E8h+var_166]^^^jnz     loc_411BC0^^^xor     edi, edi^^^xor     ebx, ebx^^^movzx   ecx, byte ptr [rsi]^^^lea     eax, [rcx-30h]^^^cmp     al, 9^^^ja      short loc_411BA2^^^movzx   eax, byte ptr [rsi+1]^^^lea     rdx, [rsi+1]^^^movsx   ecx, cl^^^sub     ecx, 30h^^^lea     esi, [rax-30h]^^^cmp     sil, 9^^^ja      short loc_411B7A^^^nop     dword ptr [rax+rax+00000000h]^^^lea     ecx, [rcx+rcx*4]^^^movsx   eax, al^^^add     rdx, 1^^^lea     ecx, [rax+rcx*2-30h]^^^movzx   eax, byte ptr [rdx]^^^lea     esi, [rax-30h]^^^cmp     sil, 9^^^jbe     short loc_411B60^^^shl     ebx, 8^^^add     edi, 1^^^lea     rsi, [rdx+1]^^^or      ebx, ecx^^^cmp     al, 2Eh^^^jnz     short loc_411B9D^^^cmp     edi, 3^^^jnz     short loc_411B37^^^add     rsp, 1D0h^^^mov     eax, ebx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^cmp     edi, 3^^^jz      short loc_411B8F^^^mov     ecx, 3^^^add     rsp, 1D0h^^^sub     ecx, edi^^^shl     ecx, 3^^^shl     ebx, cl^^^mov     eax, ebx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^xor     esi, esi^^^xor     eax, eax^^^mov     edi, offset aProcSysKernelO^^^call    open64^^^test    eax, eax^^^mov     ebp, eax^^^mov     ebx, 0FFFFFFFFh^^^js      short loc_411B8F^^^lea     rsi, [rsp+1E8h+var_58]^^^mov     edx, 40h^^^mov     edi, eax^^^call    read^^^mov     edi, ebp^^^mov     r12, rax^^^call    close^^^test    r12, r12^^^jle     short loc_411B8F^^^mov     eax, 3Fh^^^cmp     r12, 3Fh^^^lea     rsi, [rsp+1E8h+var_58]^^^cmovle  rax, r12^^^mov     [rsp+rax+1E8h+var_58], 0^^^jmp     loc_411B33^^^
__mpn_construct_float$$$add     esi, 7Fh^^^mov     rax, [rdi]^^^shl     edx, 1Fh^^^movzx   esi, sil^^^shl     esi, 17h^^^and     eax, 7FFFFFh^^^or      edx, esi^^^or      edx, eax^^^mov     [rsp+var_4], edx^^^movss   xmm0, [rsp+var_4]^^^retn^^^
_IO_seekwmark$$$mov     rdx, [rsi+8]^^^mov     eax, 0FFFFFFFFh^^^cmp     rdx, rdi^^^jnz     short locret_427A64^^^mov     ecx, [rsi+10h]^^^mov     eax, [rdx]^^^test    ecx, ecx^^^js      short loc_427A48^^^test    ah, 1^^^jnz     short loc_427A70^^^mov     rax, [rdx+0A0h]^^^mov     r8, [rax+10h]^^^movsxd  rcx, ecx^^^lea     rcx, [r8+rcx*4]^^^mov     [rax], rcx^^^xor     eax, eax^^^retn^^^test    ah, 1^^^jz      short loc_427AA8^^^mov     rax, [rdx+0A0h]^^^mov     rdi, [rax+8]^^^movsxd  rcx, ecx^^^lea     rcx, [rdi+rcx*4]^^^mov     [rax], rcx^^^xor     eax, eax^^^rep retn^^^and     ah, 0FEh^^^mov     [rdx], eax^^^mov     rax, [rdx+0A0h]^^^mov     rdx, [rax+8]^^^mov     rsi, [rax+50h]^^^mov     [rax+50h], rdx^^^mov     [rax+8], rsi^^^mov     rdx, [rax+40h]^^^mov     rsi, [rax+10h]^^^mov     [rax], rdx^^^mov     [rax+10h], rdx^^^mov     [rax+40h], rsi^^^jmp     short loc_427A33^^^or      ah, 1^^^mov     [rdx], eax^^^mov     rax, [rdx+0A0h]^^^mov     rsi, [rax+8]^^^mov     rdx, [rax+50h]^^^mov     rdi, [rax+40h]^^^mov     [rax+50h], rsi^^^mov     rsi, [rax+10h]^^^mov     [rax+8], rdx^^^mov     [rax+10h], rdi^^^mov     [rax], rdx^^^mov     [rax+40h], rsi^^^jmp     loc_427A54^^^
sbrk$$$mov     [rsp+var_10], rbx^^^mov     [rsp+var_8], rbp^^^sub     rsp, 18h^^^mov     rbx, cs:__curbrk^^^mov     rbp, rdi^^^test    rbx, rbx^^^jz      short loc_40F400^^^mov     eax, cs:__libc_multiple_libcs^^^test    eax, eax^^^jnz     short loc_40F400^^^cmp     rbp, 0^^^jz      short loc_40F3E9^^^jle     short loc_40F430^^^mov     rdi, rbx^^^add     rdi, rbp^^^jb      short loc_40F420^^^call    brk^^^test    eax, eax^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^cmovs   rbx, rax^^^mov     rax, rbx^^^mov     rbp, [rsp+18h+var_8]^^^mov     rbx, [rsp+18h+var_10]^^^add     rsp, 18h^^^retn^^^xor     edi, edi^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^call    brk^^^test    eax, eax^^^js      short loc_40F3E9^^^mov     rbx, cs:__curbrk^^^jmp     short loc_40F3C7^^^mov     rbx, 0FFFFFFFFFFFFFFFFh^^^jmp     short loc_40F3E9^^^mov     rax, rbp^^^neg     rax^^^cmp     rbx, rax^^^jb      short loc_40F420^^^lea     rdi, [rbx+rbp]^^^jmp     short loc_40F3D7^^^
__tzset_parse_tz$$$push    rbp^^^mov     edx, offset tz_rules^^^xor     eax, eax^^^mov     ecx, 0Ch^^^mov     rbp, rsp^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^mov     rdi, rdx^^^push    rbx^^^sub     rsp, 60h^^^rep stosq^^^mov     rdi, r12^^^mov     cs:qword_6C5730, offset unk_49A0C9^^^mov     cs:tz_rules, offset unk_49A0C9^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, r12^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+80h+var_68+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^lea     rcx, [rbp+var_60]^^^mov     rdx, rax^^^mov     rbx, rax^^^mov     esi, offset aAZaZN^^^xor     eax, eax^^^mov     rdi, r12^^^call    sscanf^^^cmp     eax, 1^^^jz      loc_447170^^^cmp     byte ptr [r12], 3Ch^^^jnz     loc_447477^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^add     r12, 1^^^mov     rdx, rbx^^^mov     rsi, fs:[rax]^^^jmp     short loc_446FD2^^^mov     [rdx], al^^^add     r12, 1^^^add     rdx, 1^^^movzx   eax, byte ptr [r12]^^^movsx   rcx, al^^^test    byte ptr [rsi+rcx*2], 8^^^jnz     short loc_446FC8^^^cmp     al, 2Bh^^^jz      short loc_446FC8^^^cmp     al, 2Dh^^^jz      short loc_446FC8^^^cmp     al, 3Eh^^^nop     dword ptr [rax+rax+00h]^^^jnz     loc_447477^^^mov     rax, rdx^^^sub     rax, rbx^^^cmp     rax, 2^^^jle     loc_447477^^^add     r12, 1^^^mov     byte ptr [rdx], 0^^^mov     rdi, rbx^^^call    __tzstring^^^mov     cs:tz_rules, rax^^^movzx   edx, byte ptr [r12]^^^test    dl, dl^^^jz      loc_4470F0^^^cmp     dl, 2Dh^^^jnz     loc_4470D0^^^cmp     dl, 2Dh^^^setz    al^^^cmp     dl, 2Bh^^^jz      short loc_447045^^^test    al, al^^^jz      loc_447186^^^add     r12, 1^^^cmp     al, 1^^^sbb     rax, rax^^^or      rax, 1^^^mov     cs:qword_6C5718, rax^^^lea     rax, [rbp+var_60]^^^lea     r13, [rbp+var_30]^^^lea     r8, [rbp+var_40]^^^lea     rdx, [rbp+var_50]^^^mov     esi, offset aHuNHuNHuN^^^mov     rdi, r12^^^mov     [rsp+80h+var_78], rax^^^mov     r9, rax^^^mov     rcx, rax^^^xor     eax, eax^^^mov     [rsp+80h+var_80], r13^^^call    sscanf^^^cmp     eax, 2^^^jz      loc_4471FD^^^cmp     eax, 3^^^jz      loc_4471F3^^^cmp     eax, 1^^^jz      loc_447196^^^xor     edx, edx^^^cmp     cs:qword_6C5748, 0^^^mov     cs:qword_6C5718, 0^^^mov     rax, cs:tz_rules^^^mov     rbx, cs:qword_6C5730^^^setnz   dl^^^xor     r14d, r14d^^^jmp     short loc_44710D^^^cmp     dl, 2Bh^^^jz      loc_447032^^^movsx   ecx, dl^^^sub     ecx, 30h^^^cmp     ecx, 9^^^jbe     loc_447032^^^nop     dword ptr [rax+rax+00000000h]^^^mov     r14, cs:qword_6C5718^^^xor     edx, edx^^^cmp     r14, cs:qword_6C5748^^^mov     rbx, cs:qword_6C5730^^^setnz   dl^^^neg     r14^^^mov     rdi, rax^^^mov     cs:daylight, edx^^^mov     cs:timezone, r14^^^mov     cs:tzname, rax^^^mov     cs:off_6C3298, rbx^^^call    strlen^^^mov     rdi, rbx^^^mov     r12, rax^^^call    strlen^^^mov     rdx, cs:__tzname_cur_max^^^cmp     r12, rdx^^^ja      short loc_447160^^^cmp     rax, rdx^^^jbe     short loc_447153^^^mov     cs:__tzname_cur_max, rax^^^lea     rsp, [rbp-20h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     rbp^^^retn^^^mov     cs:__tzname_cur_max, r12^^^mov     rdx, r12^^^jmp     short loc_447147^^^mov     eax, [rbp+var_60]^^^cmp     eax, 2^^^jle     loc_447477^^^cdqe^^^add     r12, rax^^^jmp     loc_44700D^^^mov     cs:qword_6C5718, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_447059^^^mov     [rbp+var_40], 0^^^xor     esi, esi^^^mov     [rbp+var_30], 0^^^xor     edi, edi^^^movzx   edx, [rbp+var_50]^^^mov     r14, cs:qword_6C5718^^^call    compute_offset^^^mov     eax, eax^^^imul    r14, rax^^^movsxd  rax, [rbp+var_60]^^^add     r12, rax^^^mov     cs:qword_6C5718, r14^^^cmp     byte ptr [r12], 0^^^jnz     short loc_447203^^^mov     rax, cs:tz_rules^^^mov     cs:qword_6C5748, r14^^^xor     edx, edx^^^neg     r14^^^mov     cs:qword_6C5730, rax^^^mov     rbx, rax^^^jmp     loc_44710D^^^movzx   edi, [rbp+var_30]^^^movzx   esi, [rbp+var_40]^^^jmp     short loc_4471A6^^^movzx   esi, [rbp+var_40]^^^jmp     short loc_44719E^^^lea     rcx, [rbp+var_60]^^^xor     eax, eax^^^mov     rdx, rbx^^^mov     esi, offset aAZaZN^^^mov     rdi, r12^^^call    sscanf^^^cmp     eax, 1^^^jz      loc_44763A^^^movzx   eax, byte ptr [r12]^^^cmp     al, 3Ch^^^jnz     loc_44735D^^^mov     rax, 0FFFFFFFFFFFFFFE8h^^^lea     rdx, [r12+1]^^^mov     rcx, rbx^^^mov     rdi, fs:[rax]^^^jmp     short loc_447252^^^mov     [rcx], al^^^add     rdx, 1^^^add     rcx, 1^^^movzx   eax, byte ptr [rdx]^^^movsx   rsi, al^^^test    byte ptr [rdi+rsi*2], 8^^^jnz     short loc_447248^^^cmp     al, 2Bh^^^jz      short loc_447248^^^cmp     al, 2Dh^^^jz      short loc_447248^^^cmp     al, 3Eh^^^jnz     loc_447358^^^mov     rax, rcx^^^sub     rax, rbx^^^cmp     rax, 2^^^jle     loc_447358^^^lea     r12, [rdx+1]^^^mov     byte ptr [rcx], 0^^^mov     rdi, rbx^^^call    __tzstring^^^mov     cs:qword_6C5730, rax^^^movzx   eax, byte ptr [r12]^^^cmp     al, 2Dh^^^setz    dl^^^cmp     al, 2Bh^^^jz      short loc_4472AB^^^test    dl, dl^^^jz      loc_4474E1^^^add     r12, 1^^^cmp     dl, 1^^^sbb     rax, rax^^^or      rax, 1^^^mov     cs:qword_6C5748, rax^^^lea     rax, [rbp+var_60]^^^lea     r8, [rbp+var_40]^^^lea     rdx, [rbp+var_50]^^^mov     esi, offset aHuNHuNHuN^^^mov     rdi, r12^^^mov     [rsp+80h+var_80], r13^^^mov     [rsp+80h+var_78], rax^^^mov     r9, rax^^^mov     rcx, rax^^^xor     eax, eax^^^call    sscanf^^^cmp     eax, 2^^^jz      loc_4476B8^^^cmp     eax, 3^^^jz      loc_4476AE^^^cmp     eax, 1^^^nop^^^jz      loc_447675^^^mov     rcx, cs:qword_6C5718^^^add     rcx, 0E10h^^^mov     cs:qword_6C5748, rcx^^^movzx   eax, byte ptr [r12]^^^test    al, al^^^jz      short loc_447330^^^cmp     al, 2Ch^^^jnz     short loc_44735D^^^cmp     byte ptr [r12+1], 0^^^jnz     short loc_44735D^^^mov     rdx, cs:qword_6C5718^^^mov     rsi, cs:qword_6C5730^^^mov     rdi, cs:tz_rules^^^call    __tzfile_default^^^mov     ebx, cs:__use_tzfile^^^test    ebx, ebx^^^jnz     loc_4476E1^^^movzx   eax, byte ptr [r12]^^^cmp     al, 2Ch^^^setz    al^^^movzx   eax, al^^^add     r12, rax^^^movzx   eax, byte ptr [r12]^^^cmp     al, 4Ah^^^jz      loc_447650^^^movsx   edx, al^^^sub     edx, 30h^^^cmp     edx, 9^^^jbe     loc_4474A0^^^cmp     al, 4Dh^^^jz      loc_4477D4^^^test    al, al^^^jnz     loc_447477^^^mov     cs:dword_6C5708, 2^^^mov     cs:word_6C570C, 4^^^mov     rbx, r12^^^mov     cs:word_6C570E, 1^^^mov     cs:word_6C5710, 0^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 2Fh^^^jz      loc_4474F1^^^test    al, al^^^jz      loc_4474F1^^^cmp     al, 2Ch^^^jnz     loc_447477^^^mov     cs:dword_6C5714, 1C20h^^^mov     cs:dword_6C5728, 0FFFFFFFFh^^^xor     eax, eax^^^cmp     byte ptr [rbx], 2Ch^^^setz    al^^^add     rbx, rax^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 4Ah^^^jz      loc_4476BE^^^movsx   edx, al^^^sub     edx, 30h^^^cmp     edx, 9^^^ja      loc_4475FD^^^mov     cs:dword_6C5738, 0^^^lea     rsi, [rbp+var_68]^^^mov     rdi, rbx^^^mov     edx, 0Ah^^^call    strtouq^^^cmp     rax, 16Dh^^^mov     rdi, [rbp+var_68]^^^ja      short loc_447477^^^cmp     rdi, rbx^^^jz      short loc_447477^^^test    rax, rax^^^jz      loc_4478BD^^^mov     cs:word_6C5740, ax^^^movzx   eax, byte ptr [rdi]^^^cmp     al, 2Fh^^^jz      loc_44757C^^^test    al, al^^^jz      loc_44757C^^^cmp     al, 2Ch^^^jnz     short loc_447477^^^mov     cs:dword_6C5744, 1C20h^^^mov     cs:dword_6C5758, 0FFFFFFFFh^^^mov     r14, cs:qword_6C5718^^^xor     edx, edx^^^cmp     r14, cs:qword_6C5748^^^mov     rax, cs:tz_rules^^^mov     rbx, cs:qword_6C5730^^^setnz   dl^^^neg     r14^^^jmp     loc_44710D^^^mov     cs:dword_6C5708, 0^^^lea     rsi, [rbp+var_68]^^^mov     edx, 0Ah^^^mov     rdi, r12^^^call    strtouq^^^cmp     rax, 16Dh^^^mov     rbx, [rbp+var_68]^^^ja      short loc_447477^^^cmp     rbx, r12^^^jz      short loc_447477^^^test    rax, rax^^^jz      loc_4478AB^^^mov     cs:word_6C5710, ax^^^jmp     loc_4473BC^^^mov     cs:qword_6C5748, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_4472C0^^^cmp     al, 2Fh^^^jnz     loc_4473D7^^^cmp     byte ptr [rbx+1], 0^^^jz      loc_447477^^^lea     rax, [rbp+var_60]^^^add     rbx, 1^^^lea     r8, [rbp+var_40]^^^lea     rdx, [rbp+var_50]^^^mov     esi, offset aHuNHuNHuN^^^mov     rdi, rbx^^^mov     [rsp+80h+var_78], rax^^^mov     r9, rax^^^mov     rcx, rax^^^xor     eax, eax^^^mov     [rbp+var_60], 0^^^mov     [rsp+80h+var_80], r13^^^call    sscanf^^^cmp     eax, 2^^^jz      loc_44788C^^^cmp     eax, 3^^^jz      loc_447867^^^cmp     eax, 1^^^jz      loc_447858^^^mov     [rbp+var_50], 2^^^mov     eax, 1C20h^^^mov     [rbp+var_40], 0^^^mov     [rbp+var_30], 0^^^movsxd  rdx, [rbp+var_60]^^^mov     cs:dword_6C5714, eax^^^add     rbx, rdx^^^jmp     loc_4473E1^^^cmp     al, 2Fh^^^jnz     loc_447463^^^cmp     byte ptr [rdi+1], 0^^^jz      loc_447477^^^lea     rax, [rbp+var_60]^^^lea     r8, [rbp+var_40]^^^lea     rdx, [rbp+var_50]^^^add     rdi, 1^^^mov     esi, offset aHuNHuNHuN^^^mov     [rbp+var_60], 0^^^mov     [rsp+80h+var_78], rax^^^mov     r9, rax^^^mov     rcx, rax^^^xor     eax, eax^^^mov     [rsp+80h+var_80], r13^^^call    sscanf^^^cmp     eax, 2^^^jz      loc_447722^^^cmp     eax, 3^^^jz      loc_4476FD^^^cmp     eax, 1^^^jz      loc_447741^^^mov     [rbp+var_50], 2^^^mov     eax, 1C20h^^^mov     [rbp+var_40], 0^^^mov     [rbp+var_30], 0^^^mov     cs:dword_6C5744, eax^^^jmp     loc_44746D^^^cmp     al, 4Dh^^^jz      loc_447750^^^test    al, al^^^jnz     loc_447477^^^mov     cs:dword_6C5738, 2^^^mov     cs:word_6C573C, 0Ah^^^mov     rdi, rbx^^^mov     cs:word_6C573E, 5^^^mov     cs:word_6C5740, 0^^^jmp     loc_44744C^^^mov     eax, [rbp+var_60]^^^cmp     eax, 2^^^jle     loc_447358^^^cdqe^^^add     r12, rax^^^jmp     loc_447286^^^mov     cs:dword_6C5708, 1^^^movsx   eax, byte ptr [r12+1]^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      loc_447477^^^add     r12, 1^^^jmp     loc_4474AA^^^mov     [rbp+var_40], 0^^^xor     esi, esi^^^mov     [rbp+var_30], 0^^^xor     edi, edi^^^movzx   edx, [rbp+var_50]^^^mov     rbx, cs:qword_6C5748^^^call    compute_offset^^^mov     ecx, eax^^^movsxd  rax, [rbp+var_60]^^^imul    rcx, rbx^^^add     r12, rax^^^mov     cs:qword_6C5748, rcx^^^jmp     loc_44731B^^^movzx   edi, [rbp+var_30]^^^movzx   esi, [rbp+var_40]^^^jmp     short loc_447685^^^movzx   esi, [rbp+var_40]^^^jmp     short loc_44767D^^^mov     cs:dword_6C5738, 1^^^movsx   eax, byte ptr [rbx+1]^^^sub     eax, 30h^^^cmp     eax, 9^^^ja      loc_447477^^^add     rbx, 1^^^jmp     loc_44741A^^^mov     rdi, cs:old_tz^^^call    free^^^mov     cs:old_tz, 0^^^jmp     loc_447153^^^movzx   edx, [rbp+var_40]^^^movzx   eax, [rbp+var_50]^^^mov     r11d, 3Ch^^^imul    edx, r11d^^^imul    eax, 0E10h^^^add     eax, edx^^^movzx   edx, [rbp+var_30]^^^add     eax, edx^^^jmp     loc_4475F2^^^movzx   edx, [rbp+var_40]^^^movzx   eax, [rbp+var_50]^^^mov     r10d, 3Ch^^^imul    eax, 0E10h^^^imul    edx, r10d^^^add     eax, edx^^^jmp     loc_4475EC^^^movzx   eax, [rbp+var_50]^^^imul    eax, 0E10h^^^jmp     loc_4475E6^^^lea     r9, [rbp+var_60]^^^xor     eax, eax^^^mov     r8d, offset word_6C5740^^^mov     ecx, offset word_6C573E^^^mov     edx, offset word_6C573C^^^mov     esi, offset aMHu_Hu_HuN^^^mov     rdi, rbx^^^mov     cs:dword_6C5738, 2^^^call    sscanf^^^cmp     eax, 3^^^jnz     loc_447477^^^movzx   eax, cs:word_6C573C^^^test    ax, ax^^^jz      loc_447477^^^cmp     ax, 0Ch^^^ja      loc_447477^^^movzx   eax, cs:word_6C573E^^^test    ax, ax^^^jz      loc_447477^^^cmp     ax, 5^^^ja      loc_447477^^^cmp     cs:word_6C5740, 6^^^ja      loc_447477^^^movsxd  rdi, [rbp+var_60]^^^add     rdi, rbx^^^jmp     loc_44744C^^^lea     r9, [rbp+var_60]^^^xor     eax, eax^^^mov     r8d, offset word_6C5710^^^mov     ecx, offset word_6C570E^^^mov     edx, offset word_6C570C^^^mov     esi, offset aMHu_Hu_HuN^^^mov     rdi, r12^^^mov     cs:dword_6C5708, 2^^^call    sscanf^^^cmp     eax, 3^^^jnz     loc_447477^^^movzx   eax, cs:word_6C570C^^^test    ax, ax^^^jz      loc_447477^^^cmp     ax, 0Ch^^^ja      loc_447477^^^movzx   eax, cs:word_6C570E^^^test    ax, ax^^^jz      loc_447477^^^cmp     ax, 5^^^ja      loc_447477^^^cmp     cs:word_6C5710, 6^^^ja      loc_447477^^^movsxd  rbx, [rbp+var_60]^^^add     rbx, r12^^^jmp     loc_4473BC^^^movzx   eax, [rbp+var_50]^^^imul    eax, 0E10h^^^jmp     loc_44755E^^^movzx   edx, [rbp+var_40]^^^movzx   eax, [rbp+var_50]^^^mov     r12d, 3Ch^^^imul    edx, r12d^^^imul    eax, 0E10h^^^add     eax, edx^^^movzx   edx, [rbp+var_30]^^^add     eax, edx^^^jmp     loc_44756A^^^movzx   edx, [rbp+var_40]^^^movzx   eax, [rbp+var_50]^^^mov     r14d, 3Ch^^^imul    eax, 0E10h^^^imul    edx, r14d^^^add     eax, edx^^^jmp     loc_447564^^^cmp     cs:dword_6C5708, 1^^^jnz     loc_4474D5^^^jmp     loc_447477^^^cmp     cs:dword_6C5738, 1^^^jnz     loc_447445^^^jmp     loc_447477^^^
__gconv_btwoc_ascii$$$movzx   edx, sil^^^test    sil, sil^^^mov     eax, 0FFFFFFFFh^^^cmovns  eax, edx^^^retn^^^
_L_unlock_2952$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42C9D7^^^
_IO_file_stat$$$mov     rdx, rsi^^^mov     esi, [rdi+70h]^^^mov     edi, 1^^^jmp     _fxstat^^^
__gettextparse$$$push    r15^^^mov     ecx, 0C7h^^^push    r14^^^mov     r14d, 0C8h^^^push    r13^^^xor     r13d, r13d^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 828h^^^lea     rax, [rsp+850h+var_1E0]^^^lea     rbp, [rsp+30h]^^^mov     [rsp+850h+var_830], rdi^^^mov     [rsp+850h+var_834], 0^^^mov     [rsp+850h+var_838], 0FFFFFFFEh^^^mov     [rsp+850h+var_840], rbp^^^mov     [rsp+850h+var_848], rax^^^mov     rbx, rax^^^mov     r12, rax^^^lea     rax, [r12+rcx*2]^^^mov     [rbx], r13w^^^cmp     rbx, rax^^^jb      loc_416F9E^^^cmp     r14, 270Fh^^^ja      loc_417599^^^add     r14, r14^^^mov     edx, 2710h^^^cmp     r14, 2710h^^^cmova   r14, rdx^^^lea     rax, [r14+r14*4]^^^lea     rdi, [rax+rax+7]^^^call    malloc^^^test    rax, rax^^^mov     r15, rax^^^jz      loc_417599^^^sub     rbx, r12^^^mov     rsi, r12^^^mov     rdi, rax^^^sar     rbx, 1^^^add     rbx, 1^^^lea     rdx, [rbx+rbx]^^^call    memcpy^^^lea     r8, [r15+r14*2]^^^mov     rsi, [rsp+850h+var_840]^^^lea     rdx, ds:0[rbx*8]^^^mov     rdi, r8^^^mov     [rsp+850h+var_850], r8^^^call    memcpy^^^cmp     r12, [rsp+850h+var_848]^^^mov     r8, [rsp+850h+var_850]^^^jz      short loc_416F79^^^mov     rdi, r12^^^call    free^^^mov     r8, [rsp+850h+var_850]^^^lea     rax, [rbx-1]^^^lea     rcx, [r14-1]^^^lea     rbx, [r15+rax*2]^^^lea     rdx, [r15+rcx*2]^^^cmp     rbx, rdx^^^jnb     loc_4175AA^^^lea     rbp, [r8+rax*8]^^^mov     [rsp+850h+var_840], r8^^^mov     r12, r15^^^cmp     r13d, 9^^^jz      loc_4175A3^^^movsxd  r13, r13d^^^movsx   eax, ds:yypact[r13]^^^cmp     eax, 0FFFFFFF6h^^^jz      short loc_417004^^^cmp     [rsp+850h+var_838], 0FFFFFFFEh^^^jz      loc_4171E8^^^mov     edx, [rsp+850h+var_838]^^^test    edx, edx^^^jle     loc_4171BA^^^cmp     [rsp+850h+var_838], 106h^^^mov     edx, 2^^^ja      short loc_416FEA^^^movsxd  rdx, [rsp+850h+var_838]^^^movzx   edx, ds:yytranslate[rdx]^^^lea     esi, [rax+rdx]^^^cmp     esi, 36h^^^ja      short loc_417004^^^movsxd  rsi, esi^^^movsx   edi, ds:yycheck[rsi]^^^cmp     edi, edx^^^jz      loc_4170C8^^^movzx   edx, ds:yydefact[r13]^^^movzx   r13d, dl^^^test    r13d, r13d^^^jz      loc_4170E0^^^movsxd  r13, r13d^^^mov     eax, 1^^^movzx   r15d, ds:yyr2[r13]^^^sub     eax, r15d^^^cmp     dl, 0Dh         ^^^cdqe^^^mov     rax, [rbp+rax*8+820h+var_820]^^^ja      short loc_417060^^^movzx   edx, dl^^^jmp     ds:off_49AAE0[rdx*8]^^^mov     rdx, [rbp+820h+var_820]^^^test    rdx, rdx^^^jz      loc_417150^^^mov     rdi, [rsp+850h+var_830]^^^mov     [rdi+8], rdx^^^nop     dword ptr [rax+rax+00000000h]^^^movsxd  r15, r15d       ^^^lea     rdx, ds:0[r15*8]^^^add     r15, r15^^^sub     rbx, r15^^^sub     rbp, rdx^^^mov     rdx, rbp^^^lea     rbp, [rbp+8]^^^mov     [rdx+8], rax^^^movzx   eax, ds:yyr1[r13]^^^movzx   edx, word ptr [rbx]^^^sub     eax, 10h^^^cdqe^^^movsx   esi, dx^^^movsx   edi, ds:yypgoto[rax]^^^add     esi, edi^^^cmp     esi, 36h^^^ja      short loc_4170B4^^^movsxd  rsi, esi^^^movsx   di, ds:yycheck[rsi]^^^cmp     dx, di^^^jz      loc_417267^^^movsx   r13d, ds:yydefgoto[rax]^^^add     rbx, 2^^^jmp     loc_416EE1^^^movzx   r13d, ds:yytable[rsi]^^^test    r13d, r13d^^^jnz     loc_417243^^^nop     dword ptr [rax+00000000h]^^^cmp     [rsp+850h+var_834], 3^^^jnz     short loc_417108^^^jmp     loc_4171C9^^^cmp     rbx, r12^^^jz      short loc_417150^^^sub     rbx, 2^^^sub     rbp, 8^^^movsx   rax, word ptr [rbx]^^^movsx   eax, ds:yypact[rax]^^^cmp     eax, 0FFFFFFF6h^^^jz      short loc_4170F0^^^add     eax, 1^^^cmp     eax, 36h^^^ja      short loc_4170F0^^^cdqe^^^cmp     ds:yycheck[rax], 1^^^jnz     short loc_4170F0^^^movzx   r13d, ds:yytable[rax]^^^test    r13d, r13d^^^jz      short loc_4170F0^^^mov     rdx, [rsp+850h+var_828]^^^mov     rax, rbp^^^mov     [rsp+850h+var_834], 3^^^add     rbp, 8^^^mov     [rax+8], rdx^^^jmp     loc_4170BC^^^jnz     short loc_417108^^^nop     dword ptr [rax+00h]^^^mov     ebx, 1^^^cmp     r12, [rsp+850h+var_848]^^^jz      short loc_417164^^^mov     rdi, r12^^^call    free^^^add     rsp, 828h^^^mov     eax, ebx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rdx, [rbp+820h+var_830]^^^mov     rax, [rbp+820h+var_820]^^^mov     edi, 2^^^mov     esi, dword ptr [rbp+820h+var_828]^^^mov     [rsp+850h+var_850], rcx^^^mov     [rsp+850h+var_50], rdx^^^lea     rdx, [rsp+850h+var_50]^^^mov     [rsp+850h+var_48], rax^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^mov     rdi, [rsp+850h+var_830]^^^mov     [rdi], rdx^^^xor     edx, edx^^^mov     [rsp+850h+var_838], 0^^^jmp     loc_416FEA^^^cmp     [rsp+850h+var_838], 0^^^jle     loc_41714A^^^mov     [rsp+850h+var_838], 0FFFFFFFEh^^^jmp     loc_417108^^^mov     rdi, [rsp+850h+var_830]^^^mov     rdx, [rdi]^^^movzx   esi, byte ptr [rdx]^^^test    sil, sil^^^jnz     short loc_41720C^^^jmp     short loc_4171B7^^^add     rdx, 1^^^movzx   esi, byte ptr [rdx]^^^test    sil, sil^^^jz      short loc_4171B2^^^cmp     sil, 9^^^jz      short loc_417200^^^cmp     sil, 20h^^^jz      short loc_417200^^^movsx   edi, sil^^^cmp     sil, 7Ch        ^^^mov     [rsp+850h+var_838], edi^^^lea     rdi, [rdx+1]^^^jbe     loc_4173B1^^^mov     [rsp+850h+var_838], 100h^^^mov     rsi, [rsp+850h+var_830]^^^mov     [rsi], rdi^^^jmp     loc_416FC3^^^mov     rdi, [rsp+850h+var_828]^^^cmp     [rsp+850h+var_834], 1^^^adc     [rsp+850h+var_834], 0FFFFFFFFh^^^mov     [rsp+850h+var_838], 0FFFFFFFEh^^^mov     [rbp+820h+var_818], rdi^^^add     rbp, 8^^^jmp     loc_4170BC^^^movzx   r13d, ds:yytable[rsi]^^^jmp     loc_4170BC^^^mov     rdx, [rbp+820h+var_830]^^^mov     rsi, [rbp+820h+var_840]^^^mov     edi, 3^^^mov     rax, [rbp+820h+var_820]^^^mov     [rsp+850h+var_850], rcx^^^mov     [rsp+850h+var_48], rdx^^^lea     rdx, [rsp+850h+var_50]^^^mov     [rsp+850h+var_50], rsi^^^mov     esi, 10h^^^mov     [rsp+850h+var_40], rax^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^mov     rdx, [rbp+820h+var_830]^^^mov     rax, [rbp+820h+var_820]^^^mov     esi, 0Fh^^^mov     edi, 2^^^mov     [rsp+850h+var_850], rcx^^^mov     [rsp+850h+var_50], rdx^^^lea     rdx, [rsp+850h+var_50]^^^mov     [rsp+850h+var_48], rax^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^mov     rdx, [rbp+820h+var_830]^^^mov     rax, [rbp+820h+var_820]^^^mov     esi, 0Eh^^^mov     edi, 2^^^mov     [rsp+850h+var_850], rcx^^^mov     [rsp+850h+var_50], rdx^^^lea     rdx, [rsp+850h+var_50]^^^mov     [rsp+850h+var_48], rax^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^mov     rax, [rbp+820h+var_828]^^^jmp     loc_417060      ^^^xor     edx, edx        ^^^xor     edi, edi^^^mov     esi, 1^^^mov     [rsp+850h+var_850], rcx^^^call    new_exp^^^test    rax, rax^^^mov     rcx, [rsp+850h+var_850]^^^jz      loc_417060      ^^^mov     rdx, [rbp+820h+var_820]^^^mov     [rax+8], rdx^^^jmp     loc_417060      ^^^mov     rax, [rbp+820h+var_820]^^^lea     rdx, [rsp+850h+var_50]^^^mov     esi, 2^^^mov     edi, 1^^^mov     [rsp+850h+var_850], rcx^^^mov     [rsp+850h+var_50], rax^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^xor     edx, edx        ^^^xor     esi, esi^^^xor     edi, edi^^^mov     [rsp+850h+var_850], rcx^^^call    new_exp^^^mov     rcx, [rsp+850h+var_850]^^^jmp     loc_417060      ^^^movzx   esi, sil^^^jmp     ds:off_49AB50[rsi*8]^^^cmp     byte ptr [rdx+1], 3Dh^^^jz      loc_4175B7^^^mov     rsi, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rsi^^^mov     [rsp+850h+var_838], 103h^^^or      [rsp+850h+var_828], 9^^^jmp     loc_417236      ^^^cmp     byte ptr [rdx+1], 3Dh^^^mov     [rsp+850h+var_838], 100h^^^jnz     loc_417236      ^^^lea     rdi, [rdx+2]^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^or      [rsp+850h+var_828], 0Ch^^^mov     [rsp+850h+var_838], 102h^^^jmp     loc_417236      ^^^cmp     byte ptr [rdx+1], 3Dh^^^jz      loc_4175DD^^^mov     rsi, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rsi^^^mov     [rsp+850h+var_838], 103h^^^or      [rsp+850h+var_828], 8^^^jmp     loc_417236      ^^^movzx   edx, byte ptr [rdx+1]^^^mov     esi, [rsp+850h+var_838]^^^sub     esi, 30h^^^lea     r8d, [rdx-30h]^^^movsxd  rsi, esi^^^cmp     r8b, 9^^^ja      short loc_417486^^^movsx   edx, dl^^^lea     rsi, [rsi+rsi*4]^^^add     rdi, 1^^^sub     edx, 30h^^^movsxd  rdx, edx^^^lea     rsi, [rdx+rsi*2]^^^movzx   edx, byte ptr [rdi]^^^lea     r8d, [rdx-30h]^^^cmp     r8b, 9^^^jbe     short loc_417464^^^mov     [rsp+850h+var_828], rsi^^^mov     [rsp+850h+var_838], 106h^^^jmp     loc_417236      ^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^mov     [rsp+850h+var_838], 104h^^^or      [rsp+850h+var_828], 7^^^jmp     loc_417236      ^^^mov     rsi, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rsi^^^mov     [rsp+850h+var_838], 104h^^^or      [rsp+850h+var_828], 6^^^jmp     loc_417236      ^^^mov     rsi, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rsi^^^mov     [rsp+850h+var_838], 105h^^^or      [rsp+850h+var_828], 4^^^jmp     loc_417236      ^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^mov     [rsp+850h+var_838], 105h^^^or      [rsp+850h+var_828], 3^^^jmp     loc_417236      ^^^movsx   esi, byte ptr [rdx+1]^^^cmp     [rsp+850h+var_838], esi^^^jnz     loc_41722E      ^^^lea     rdi, [rdx+2]^^^jmp     loc_417236      ^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^mov     [rsp+850h+var_838], 105h^^^or      [rsp+850h+var_828], 5^^^jmp     loc_417236      ^^^cmp     byte ptr [rdx+1], 3Dh^^^jnz     loc_417236      ^^^mov     rsi, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rsi^^^lea     rdi, [rdx+2]^^^or      [rsp+850h+var_828], 0Dh^^^mov     [rsp+850h+var_838], 102h^^^jmp     loc_417236      ^^^mov     rdi, rdx        ^^^mov     [rsp+850h+var_838], 0^^^jmp     loc_417236      ^^^mov     ebx, 2^^^jmp     loc_417155^^^xor     ebx, ebx^^^jmp     loc_417155^^^mov     r12, r15^^^mov     ebx, 1^^^jmp     loc_417155^^^lea     rdi, [rdx+2]^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^or      [rsp+850h+var_828], 0Bh^^^mov     [rsp+850h+var_838], 103h^^^jmp     loc_417236      ^^^lea     rdi, [rdx+2]^^^mov     rdx, 0FFFFFFFF00000000h^^^and     [rsp+850h+var_828], rdx^^^or      [rsp+850h+var_828], 0Ah^^^mov     [rsp+850h+var_838], 103h^^^jmp     loc_417236      ^^^
__assert_fail_base$$$push    r14^^^mov     eax, 0^^^mov     r14, r8^^^push    r13^^^mov     r13d, ecx^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdx^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 30h^^^test    rax, rax^^^jz      short loc_411F91^^^xor     esi, esi^^^mov     edi, 1^^^call    near ptr 0^^^test    r14, r14^^^mov     eax, offset asc_496B02^^^jz      loc_412094^^^mov     rdx, cs:program_invocation_short_name^^^mov     esi, offset unk_49A0C9^^^mov     ecx, offset asc_496B02^^^lea     rdi, [rsp+58h+var_38]^^^mov     r9d, r13d^^^mov     r8, rbp^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+58h+var_50], rax^^^mov     [rsp+58h+var_48], r12^^^mov     [rsp+58h+var_58], r14^^^cmovz   rcx, rsi^^^lea     rsi, [rsp+58h+var_2C]^^^xor     eax, eax^^^mov     [rsp+58h+var_40], rsi^^^mov     rsi, rbx^^^call    asprintf^^^test    eax, eax^^^js      loc_41207E^^^mov     rdx, [rsp+58h+var_38]^^^mov     esi, (offset aSSSS+8)^^^xor     edi, edi^^^xor     eax, eax^^^call    __fxprintf^^^mov     rdi, cs:stderr^^^call    fflush^^^mov     eax, dword ptr cs:_dl_pagesize^^^xor     r9d, r9d^^^xor     edi, edi^^^mov     r8d, 0FFFFFFFFh^^^mov     ecx, 22h^^^mov     edx, 3^^^mov     esi, eax^^^add     eax, [rsp+58h+var_2C]^^^neg     esi^^^and     esi, eax^^^mov     [rsp+58h+var_2C], esi^^^movsxd  rsi, esi^^^call    mmap64^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbx, rax^^^jz      short loc_41206F^^^mov     eax, [rsp+58h+var_2C]^^^mov     rsi, [rsp+58h+var_38]^^^lea     rdi, [rbx+4]^^^mov     [rbx], eax^^^call    sub_400320^^^mov     rdi, rbx^^^xchg    rdi, cs:__abort_msg^^^test    rdi, rdi^^^jz      short loc_41206F^^^mov     esi, [rdi]^^^call    munmap^^^mov     rdi, [rsp+58h+var_38]^^^call    free^^^call    abort^^^mov     edx, 12h^^^mov     esi, offset errstr_12278^^^mov     edi, 2^^^call    write^^^jmp     short loc_412079^^^mov     eax, offset unk_49A0C9^^^mov     r14, rax^^^jmp     loc_411F9F^^^
sub_40EB03$$$mov     eax, edx^^^movzx   ecx, dl^^^xor     edx, edx^^^and     eax, 3FFC0000h^^^add     eax, eax^^^div     ecx^^^pop     rbx^^^mov     eax, eax^^^retn^^^
_L_unlock_2081$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_412ED9^^^
_IO_doallocbuf$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^cmp     qword ptr [rdi+38h], 0^^^jz      short loc_42BE90^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^retn^^^test    byte ptr [rdi], 2^^^jz      short loc_42BE9F^^^mov     edx, [rdi+0C0h]^^^test    edx, edx^^^jle     short loc_42BEE0^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rax+68h]^^^cmp     eax, 0FFFFFFFFh^^^jnz     short loc_42BE7D^^^mov     rdi, [rbx+38h]^^^lea     r12, [rbx+84h]^^^lea     rbp, [rbx+83h]^^^test    rdi, rdi^^^jz      short loc_42BECD^^^test    byte ptr [rbx], 1^^^jz      short loc_42BEF0^^^mov     [rbx+38h], rbp^^^mov     [rbx+40h], r12^^^or      dword ptr [rbx], 1^^^jmp     short loc_42BE7D^^^lea     r12, [rdi+84h]^^^lea     rbp, [rdi+83h]^^^jmp     short loc_42BECD^^^mov     rsi, [rbx+40h]^^^sub     rsi, rdi^^^add     rsi, 0FFFh^^^and     rsi, 0FFFFFFFFFFFFF000h^^^call    munmap^^^jmp     short loc_42BECD^^^
realloc_check$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_18], r13^^^mov     rbx, rsi^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     r13, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 68h^^^cmp     rsi, 0FFFFFFFFFFFFFFFFh^^^jz      loc_407030^^^test    rdi, rdi^^^jz      loc_407081^^^test    rsi, rsi^^^jz      loc_407060^^^mov     r14d, 1^^^xor     ebp, ebp^^^mov     esi, r14d^^^mov     eax, ebp^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_406DAA^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_9688^^^jmp     short loc_406DB7^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_9688^^^lea     rsi, [rsp+68h+var_48]^^^mov     rdi, r13^^^call    mem2chunk_check^^^mov     r12, rax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_406DDF^^^lock dec cs:main_arena^^^jnz     _L_unlock_9698^^^jmp     short loc_406DEB^^^dec     cs:main_arena^^^jnz     _L_unlock_9698^^^test    r12, r12^^^jz      loc_40706E^^^lea     r8, [rbx+1]^^^mov     rax, [r12+8]^^^cmp     r8, 0FFFFFFFFFFFFFFBFh^^^ja      loc_407030^^^lea     r15, [rbx+18h]^^^mov     edx, 20h^^^mov     esi, r14d^^^mov     r10, rdx^^^mov     r9, r15^^^and     r9, 0FFFFFFFFFFFFFFF0h^^^cmp     r15, 20h^^^cmovnb  r10, r9^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^mov     [rsp+68h+var_50], rax^^^mov     eax, ebp^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_406E49^^^lock cmpxchg cs:main_arena, esi^^^jnz     _L_lock_9727^^^jmp     short loc_406E56^^^cmpxchg cs:main_arena, esi^^^jnz     _L_lock_9727^^^test    byte ptr [r12+8], 2^^^jnz     loc_406F60^^^mov     [rsp+68h+var_60], rdx^^^mov     [rsp+68h+var_58], r9^^^call    top_check^^^test    eax, eax^^^mov     rdx, [rsp+68h+var_60]^^^mov     r9, [rsp+68h+var_58]^^^js      loc_407048^^^mov     rcx, rdx^^^mov     rdx, [rsp+68h+var_50]^^^cmp     r15, 20h^^^cmovnb  rcx, r9^^^mov     rsi, r12^^^mov     edi, offset main_arena^^^call    _int_realloc^^^mov     rbp, rax^^^test    rbp, rbp^^^jz      loc_407048^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_406EC4^^^lock dec cs:main_arena^^^jnz     _L_unlock_9769^^^jmp     short loc_406ED0^^^dec     cs:main_arena^^^jnz     _L_unlock_9769^^^test    rbp, rbp^^^jz      short loc_406F38^^^mov     rdx, [rbp-8]^^^lea     rcx, [rbp-10h]^^^mov     rax, rdx^^^and     edx, 2^^^and     rax, 0FFFFFFFFFFFFFFF8h^^^cmp     rdx, 1^^^sbb     rdx, rdx^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^add     rdx, 11h^^^sub     rax, rdx^^^cmp     rbx, rax^^^jb      short loc_406F10^^^jmp     short loc_406F27^^^mov     byte ptr [rbp+rax+0], 0FFh^^^sub     rax, 0FFh^^^cmp     rbx, rax^^^jnb     short loc_406F27^^^mov     rdx, rax^^^sub     rdx, rbx^^^cmp     rdx, 0FFh^^^ja      short loc_406F00^^^mov     edx, eax^^^sub     dl, bl^^^mov     [rbp+rax+0], dl^^^mov     rax, rcx^^^shr     rcx, 3^^^shr     rax, 0Bh^^^xor     ecx, eax^^^mov     [rbp+rbx+0], cl^^^mov     rax, rbp^^^mov     rbx, [rsp+68h+var_30]^^^mov     rbp, [rsp+68h+var_28]^^^mov     r12, [rsp+68h+var_20]^^^mov     r13, [rsp+68h+var_18]^^^mov     r14, [rsp+68h+var_10]^^^mov     r15, [rsp+68h+var_8]^^^add     rsp, 68h^^^retn^^^mov     rsi, r10^^^mov     rdi, r12^^^mov     [rsp+68h+var_60], r8^^^mov     [rsp+68h+var_58], r10^^^call    mremap_chunk^^^test    rax, rax^^^lea     rbp, [rax+10h]^^^mov     r8, [rsp+68h+var_60]^^^mov     r10, [rsp+68h+var_58]^^^jnz     loc_406EA3^^^mov     rax, [rsp+68h+var_50]^^^mov     rbp, r13^^^sub     rax, 8^^^cmp     r10, rax^^^jbe     loc_406EAC^^^mov     [rsp+68h+var_60], r8^^^call    top_check^^^test    eax, eax^^^mov     r8, [rsp+68h+var_60]^^^js      loc_407048^^^mov     rsi, r8^^^mov     edi, offset main_arena^^^call    _int_malloc^^^test    rax, rax^^^mov     rbp, rax^^^jz      short loc_407048^^^mov     rdx, [rsp+68h+var_50]^^^mov     rsi, r13^^^mov     rdi, rax^^^sub     rdx, 10h^^^call    memcpy^^^mov     rdx, [r12+8]^^^test    dl, 2^^^jz      loc_4070A0^^^mov     rax, [r12]^^^and     rdx, 0FFFFFFFFFFFFFFF8h^^^mov     rdi, r12^^^sub     rdi, rax^^^lea     rsi, [rdx+rax]^^^mov     rax, cs:_dl_pagesize^^^mov     rdx, rdi^^^or      rdx, rsi^^^sub     rax, 1^^^test    rdx, rax^^^jnz     short loc_407093^^^sub     cs:dword_6C29A8, 1^^^sub     cs:qword_6C29B8, rsi^^^call    munmap^^^jmp     loc_406EAC^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     ebp, ebp^^^mov     dword ptr fs:[rax], 0Ch^^^jmp     loc_406F38^^^mov     rax, [rsp+68h+var_48]^^^xor     ebp, ebp^^^not     byte ptr [rax]^^^jmp     loc_406EAC^^^xor     esi, esi^^^xor     ebp, ebp^^^call    free_check^^^jmp     loc_406F38^^^mov     edi, cs:check_action^^^mov     rdx, r13^^^mov     esi, offset aReallocInval_1^^^call    malloc_printerr^^^xor     esi, esi^^^mov     rdi, rbx^^^call    malloc_check^^^mov     rbp, rax^^^jmp     loc_406F38^^^mov     rdi, r12^^^call    munmap_chunk_part_4^^^jmp     loc_406EAC^^^mov     ecx, offset __func___12372^^^mov     edx, 0B17h^^^mov     esi, offset aMalloc_c^^^mov     edi, offset aPSize0x2^^^call    __malloc_assert^^^
_Unwind_GetGR$$$sub     rsp, 8^^^cmp     esi, 11h^^^jg      short loc_492669^^^test    byte ptr [rdi+0C7h], 40h^^^lea     rax, dwarf_reg_size_table^^^movsxd  rsi, esi^^^movzx   edx, byte ptr [rax+rsi]^^^mov     rax, [rdi+rsi*8]^^^jnz     short loc_492670^^^cmp     dl, 8^^^jz      short loc_492680^^^call    abort^^^cmp     byte ptr [rdi+rsi+0D8h], 0^^^jz      short loc_492664^^^add     rsp, 8^^^retn^^^mov     rax, [rax]^^^add     rsp, 8^^^retn^^^
sub_41B89B$$$mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41B93C^^^movsx   eax, dil^^^mov     byte ptr [rbp-5F0h], 20h^^^mov     dword ptr [rbp-5C8h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     loc_41B826^^^mov     rdi, [rbp-560h]^^^mov     rdx, [rbp-560h]^^^movzx   edi, byte ptr [rdi+1]^^^add     rdx, 1^^^mov     eax, edi^^^mov     [rbp-558h], dil^^^sub     eax, 20h^^^cmp     al, 5Ah^^^ja      short loc_41B957^^^movsx   eax, dil^^^mov     dword ptr [rbp-5F8h], 1^^^sub     eax, 20h^^^cdqe^^^movzx   eax, ds:jump_table_13210[rax]^^^mov     rax, ds:step0_jumps_13228[rax*8]^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     byte ptr [rbp-5F0h], 20h^^^mov     dword ptr [rbp-5C8h], 1^^^jmp     loc_41B826^^^mov     eax, offset loc_41ACA2^^^mov     dword ptr [rbp-5F8h], 1^^^jmp     loc_41B826^^^
sub_47307B$$$mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     short loc_4730E0^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^jmp     loc_472AAF^^^test    r8, r8^^^jz      loc_472C80^^^cmp     dword ptr [rbp-10F4h], 53h^^^jnz     loc_472BD4^^^cmp     dword ptr [rbp-1130h], 0FFFFFFFFh^^^jz      loc_472EFD^^^movsxd  rsi, dword ptr [rbp-1130h]^^^mov     rdi, r8^^^mov     [rbp-11D0h], r8^^^call    wcsnlen^^^mov     r8, [rbp-11D0h]^^^mov     rcx, rax^^^mov     dword ptr [rbp-10F4h], 0^^^mov     r9d, [rbp-1148h]^^^mov     [rbp-1130h], ecx^^^sub     r9d, ecx^^^js      loc_472EC5^^^cmp     dword ptr [rbp-1158h], 0^^^jnz     short loc_472B7C^^^test    r9d, r9d^^^jz      short loc_472B7C^^^movsxd  rdx, r9d^^^mov     esi, 20h^^^mov     rdi, rbx^^^mov     [rbp-11B8h], rcx^^^mov     [rbp-11D0h], r8^^^mov     [rbp-11C0h], r9d^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     rcx, [rbp-11B8h]^^^mov     r8, [rbp-11D0h]^^^mov     r9d, [rbp-11C0h]^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      loc_472E76^^^add     r14d, edx^^^test    r14d, r14d^^^js      loc_472FCB^^^mov     rax, [rbx+0D8h]^^^mov     rdx, rcx^^^mov     rsi, r8^^^mov     [rbp-11B8h], rcx^^^mov     [rbp-11D0h], r8^^^mov     rdi, rbx^^^mov     [rbp-11C0h], r9d^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-11B8h]^^^mov     r8, [rbp-11D0h]^^^mov     r9d, [rbp-11C0h]^^^cmp     rcx, rax^^^jz      loc_472F45^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^cmp     dword ptr [rbp-1138h], 0^^^jnz     loc_472AC5^^^cmp     dword ptr [rbp-1130h], 0FFFFFFFFh^^^mov     [rbp-70h], r8^^^jz      loc_472D00^^^movsxd  rsi, dword ptr [rbp-1130h]^^^mov     rdi, r8^^^call    sub_400330^^^mov     [rbp-1130h], rax^^^mov     rdx, [rbp-1130h]^^^shl     rdx, 2^^^cmp     rdx, 1000h^^^ja      loc_472CC3^^^add     rdx, 1Eh^^^mov     dword ptr [rbp-10F4h], 0^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rdx^^^lea     r8, [rsp+arg_7]^^^and     r8, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, [rbp-1130h]^^^lea     rcx, [rbp-60h]^^^lea     rsi, [rbp-70h]^^^mov     rdi, r8^^^mov     [rbp-11D0h], r8^^^mov     qword ptr [rbp-60h], 0^^^call    mbsrtowcs^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rcx, rax^^^mov     r8, [rbp-11D0h]^^^jnz     loc_472AFC^^^mov     r14d, eax^^^jmp     loc_46E9CB^^^cmp     dword ptr [rbp-1130h], 5^^^jg      short loc_472C92^^^cmp     dword ptr [rbp-1130h], 0FFFFFFFFh^^^jnz     short loc_472CAC^^^mov     dword ptr [rbp-10F4h], 0^^^mov     ecx, 6^^^mov     r8d, offset null_0^^^jmp     loc_472AFC^^^mov     dword ptr [rbp-10F4h], 0^^^xor     ecx, ecx^^^mov     r8d, offset unk_4B01F4^^^jmp     loc_472AFC^^^mov     rdi, rdx^^^mov     [rbp-11C8h], rdx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rdx, [rbp-11C8h]^^^jnz     loc_472C20^^^mov     rdi, rdx^^^call    malloc^^^test    rax, rax^^^mov     r8, rax^^^jz      short loc_472D1E^^^mov     dword ptr [rbp-10F4h], 1^^^jmp     loc_472C3E^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, r8^^^repne scasb^^^not     rcx^^^sub     rcx, 1^^^mov     [rbp-1130h], rcx^^^jmp     loc_472C08^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^test    r14d, r14d^^^js      loc_472FCB^^^mov     rax, [rbx+0D8h]^^^mov     rdx, rcx^^^mov     [rbp-11B8h], rcx^^^mov     rsi, r8^^^mov     rdi, rbx^^^call    qword ptr [rax+38h]^^^mov     rcx, [rbp-11B8h]^^^cmp     rcx, rax^^^jz      short loc_472F25^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rdi, r8^^^mov     [rbp-11D0h], r8^^^call    wcslen^^^mov     dword ptr [rbp-10F4h], 0^^^mov     rcx, rax^^^mov     r8, [rbp-11D0h]^^^jmp     loc_472AFC^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      loc_472FE4^^^add     r14d, [rbp-1130h]^^^jmp     loc_46F40A^^^movsxd  rax, r14d^^^mov     edx, 7FFFFFFFh^^^sub     rdx, rax^^^cmp     rcx, rdx^^^ja      short loc_472FB9^^^add     r14d, [rbp-1130h]^^^cmp     dword ptr [rbp-1158h], 0^^^jz      short loc_472F9F^^^test    r9d, r9d^^^jz      short loc_472F9F^^^movsxd  rdx, r9d^^^mov     esi, 20h^^^mov     rdi, rbx^^^call    _IO_wpadn^^^cmp     r14d, 7FFFFFFEh^^^mov     r8, [rbp-11D0h]^^^ja      loc_470FE6^^^mov     edx, eax^^^mov     eax, 7FFFFFFFh^^^sub     eax, r14d^^^cmp     edx, eax^^^ja      short loc_472FC2^^^add     r14d, edx^^^cmp     dword ptr [rbp-10F4h], 0^^^jz      loc_46F40A^^^mov     rdi, r8^^^call    free^^^jmp     loc_46F40A^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     ecx, offset __PRETTY_FUNCTION___13251^^^mov     edx, 65Eh^^^mov     esi, offset aVfprintf_c^^^mov     edi, offset aSize_tDoneSize^^^call    __assert_fail^^^or      r14d, 0FFFFFFFFh^^^jmp     loc_46E9CB^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     short loc_473092^^^
_L_unlock_11890$$$lea     rdi, [rbp+0]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_4081C2^^^
tfind$$$push    r12             ^^^test    rsi, rsi^^^mov     r12, rdx^^^push    rbp^^^push    rbx^^^mov     rbx, rdi^^^jnz     short loc_44E094^^^jmp     short loc_44E0A4^^^mov     rsi, [rbp+0]^^^mov     rdi, rbx^^^call    r12^^^test    eax, eax^^^jz      short loc_44E09C^^^lea     rsi, [rbp+8]^^^add     rbp, 10h^^^test    eax, eax^^^cmovns  rsi, rbp^^^mov     rbp, [rsi]^^^test    rbp, rbp^^^jnz     short loc_44E078^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^pop     r12^^^retn^^^xor     ebp, ebp^^^jmp     short loc_44E09C^^^
_dl_add_to_namespace_list$$$push    rbp^^^mov     eax, 0^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^test    rax, rax^^^jz      short loc_453A70^^^mov     edi, offset _dl_load_write_lock^^^call    near ptr 0^^^lea     rax, [rbp+rbp*8+0]^^^shl     rax, 4^^^mov     rdx, ds:_dl_ns[rax]^^^test    rdx, rdx^^^jnz     short loc_453A93^^^jmp     short loc_453AE7^^^mov     rdx, rax^^^mov     rax, [rdx+18h]^^^test    rax, rax^^^jnz     short loc_453A90^^^mov     [rbx+20h], rdx^^^mov     [rdx+18h], rbx^^^lea     rax, [rbp+rbp*8+0]^^^shl     rax, 4^^^add     ds:dword_6C5FE8[rax], 1^^^mov     rax, cs:_dl_load_adds^^^mov     [rbx+460h], rax^^^add     rax, 1^^^mov     cs:_dl_load_adds, rax^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_453AF0^^^add     rsp, 8^^^mov     edi, offset _dl_load_write_lock^^^pop     rbx^^^pop     rbp^^^jmp     near ptr 0^^^mov     ds:_dl_ns[rax], rbx^^^jmp     short loc_453AA4^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^retn^^^
_L_unlock_727$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_46E7E8^^^
__gconv_transform_internal_ucs4$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rsi^^^push    r14^^^mov     r14, rdx^^^lea     rdx, [rsi+38h]^^^push    r13^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 78h^^^test    byte ptr [rsi+10h], 1^^^mov     [rsp+0A8h+var_78], rcx^^^mov     [rsp+0A8h+var_68], r8^^^mov     [rsp+0A8h+var_50], r9^^^mov     ebx, [rsp+0A8h+arg_0]^^^mov     [rsp+0A8h+var_60], rax^^^mov     [rsp+0A8h+var_58], rdx^^^mov     [rsp+0A8h+var_70], 0^^^jnz     short loc_45A020^^^cmp     qword ptr [rdi+68h], 0^^^mov     rax, [rdi+90h]^^^mov     [rsp+0A8h+var_70], rax^^^jz      short loc_45A020^^^ror     rax, 11h^^^xor     rax, fs:30h^^^mov     [rsp+0A8h+var_70], rax^^^test    ebx, ebx^^^jnz     loc_45A2E1^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45A2D4^^^mov     rbp, [r15]^^^mov     rdx, [r15+8]^^^mov     [rsp+0A8h+var_80], rdx^^^mov     edx, [rsp+0A8h+arg_8]^^^test    edx, edx^^^jz      loc_45A0D0^^^mov     rcx, [r15+20h]^^^mov     esi, [rcx]^^^test    sil, 7^^^jz      short loc_45A0D0^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45A394^^^mov     rax, rsi^^^mov     rdx, [r14]^^^and     eax, 7^^^cmp     [rsp+0A8h+var_78], rdx^^^jbe     short loc_45A09D^^^cmp     rax, 3^^^ja      short loc_45A09D^^^movzx   edi, byte ptr [rdx]^^^add     rdx, 1^^^mov     [rcx+rax+4], dil^^^add     rax, 1^^^mov     [r14], rdx^^^cmp     rax, 3^^^ja      short loc_45A09D^^^cmp     [rsp+0A8h+var_78], rdx^^^ja      short loc_45A07D^^^cmp     rax, 3^^^jbe     loc_45A2B9^^^movzx   eax, byte ptr [rcx+7]^^^mov     [rbp+0], al^^^movzx   eax, byte ptr [rcx+6]^^^mov     [rbp+1], al^^^movzx   eax, byte ptr [rcx+5]^^^mov     [rbp+2], al^^^movzx   eax, byte ptr [rcx+4]^^^mov     [rbp+3], al^^^and     dword ptr [rcx], 0FFFFFFF8h^^^add     rbp, 4^^^nop     word ptr [rax+rax+00h]^^^mov     r12, [r14]^^^mov     rdx, [rsp+0A8h+var_80]^^^mov     r13, rbp^^^mov     rax, [rsp+0A8h+var_78]^^^sub     rdx, rbp^^^sub     rax, r12^^^cmp     rdx, rax^^^cmovg   rdx, rax^^^lea     rax, [rdx+3]^^^test    rdx, rdx^^^cmovs   rdx, rax^^^mov     rax, r12^^^sar     rdx, 2^^^test    rdx, rdx^^^jz      short loc_45A133^^^xor     eax, eax^^^nop     word ptr [rax+rax+00000000h]^^^mov     ecx, [r12+rax*4]^^^bswap   ecx^^^mov     [rbp+rax*4+0], ecx^^^add     rax, 1^^^cmp     rdx, rax^^^jnz     short loc_45A110^^^lea     rax, ds:0[rdx*4]^^^lea     r13, [rbp+rax+0]^^^add     rax, r12^^^cmp     [rsp+0A8h+var_78], rax^^^mov     [r14], rax^^^mov     [rsp+0A8h+var_98], 0^^^mov     [rsp+0A8h+var_84], 4^^^jz      short loc_45A16D^^^lea     rax, [r13+4]^^^cmp     [rsp+0A8h+var_80], rax^^^sbb     edx, edx^^^add     edx, 1^^^cmp     [rsp+0A8h+var_80], rax^^^mov     [rsp+0A8h+var_98], dl^^^sbb     eax, eax^^^and     eax, 0FFFFFFFEh^^^add     eax, 7^^^mov     [rsp+0A8h+var_84], eax^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     loc_45A2CA^^^mov     rbx, [r15+30h]^^^test    rbx, rbx^^^jz      short loc_45A1B2^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, [rbx+8]^^^test    rdi, rdi^^^jz      short loc_45A1A9^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [rbx+18h]^^^mov     r8, r13^^^mov     rcx, rbp^^^mov     rdx, [r14]^^^mov     rsi, r12^^^call    qword ptr [rbx+8]^^^mov     rbx, [rbx+20h]^^^test    rbx, rbx^^^jnz     short loc_45A188^^^add     dword ptr [r15+14h], 1^^^test    byte ptr [r15+10h], 1^^^jnz     loc_45A38C^^^cmp     r13, rbp^^^jbe     short loc_45A237^^^mov     rax, [r15]^^^mov     rdi, [rsp+0A8h+var_70]^^^mov     [rsp+0A8h+var_48], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0A8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0A8h+var_A8], 0^^^mov     r9, [rsp+0A8h+var_50]^^^mov     rcx, r13^^^lea     rdx, [rsp+0A8h+var_48]^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_60]^^^mov     [rsp+0A8h+var_A0], eax^^^call    [rsp+0A8h+var_70]^^^cmp     eax, 4^^^jz      short loc_45A230^^^mov     rdx, [rsp+0A8h+var_48]^^^cmp     rdx, r13^^^jnz     loc_45A381^^^test    eax, eax^^^jnz     loc_45A370^^^mov     rbp, [r15]^^^jmp     loc_45A0D0^^^cmp     [rsp+0A8h+var_84], 5^^^jz      short loc_45A224^^^cmp     [rsp+0A8h+var_98], 0^^^jz      short loc_45A2A2^^^mov     eax, [rsp+0A8h+arg_8]^^^test    eax, eax^^^jz      short loc_45A2A2^^^mov     rdi, [r14]^^^mov     rax, [rsp+0A8h+var_78]^^^sub     rax, rdi^^^cmp     rax, 3^^^jg      loc_45A33E^^^xor     edx, edx^^^cmp     [rsp+0A8h+var_78], rdi^^^mov     rax, rdi^^^mov     r8, [rsp+0A8h+var_78]^^^jbe     short loc_45A2B5^^^movzx   esi, byte ptr [rax]^^^mov     rcx, [r15+20h]^^^add     rax, 1^^^mov     [rcx+rdx+4], sil^^^add     rdx, 1^^^cmp     rax, r8^^^mov     [r14], rax^^^jnz     short loc_45A26F^^^sub     eax, edi^^^mov     rcx, [r15+20h]^^^mov     [rsp+0A8h+var_84], 7^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     eax, [rsp+0A8h+var_84]^^^add     rsp, 78h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^xor     eax, eax^^^jmp     short loc_45A28D^^^and     esi, 0FFFFFFF8h^^^mov     [rsp+0A8h+var_84], 7^^^or      esi, eax^^^mov     [rcx], esi^^^jmp     short loc_45A2A2^^^mov     rdx, [rsp+0A8h+var_68]^^^mov     [rdx], r13^^^jmp     short loc_45A2A2^^^mov     rax, [rsp+0A8h+var_68]^^^mov     rbp, [rax]^^^jmp     loc_45A037^^^cmp     [rsp+0A8h+var_68], 0^^^jnz     short loc_45A357^^^mov     rax, [r15+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [r15+10h], 1^^^mov     [rsp+0A8h+var_84], 0^^^jnz     short loc_45A2A2^^^mov     rdi, [rsp+0A8h+var_70]^^^call    _dl_mcount_wrapper_check^^^mov     edx, [rsp+0A8h+arg_8]^^^mov     [rsp+0A8h+var_A8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0A8h+var_50]^^^xor     ecx, ecx^^^mov     rsi, [rsp+0A8h+var_58]^^^mov     rdi, [rsp+0A8h+var_60]^^^mov     [rsp+0A8h+var_A0], edx^^^xor     edx, edx^^^call    [rsp+0A8h+var_70]^^^mov     [rsp+0A8h+var_84], eax^^^jmp     loc_45A2A2^^^mov     ecx, offset __PRETTY_FUNCTION___11615^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11615^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^cmp     eax, 7^^^mov     [rsp+0A8h+var_84], eax^^^setz    [rsp+0A8h+var_98]^^^jmp     loc_45A237^^^sub     rdx, r13^^^add     [r14], rdx^^^jmp     loc_45A21C^^^mov     [r15], r13^^^jmp     loc_45A237^^^mov     ecx, offset __PRETTY_FUNCTION___11615^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^
_L_unlock_3369$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_42CDA2^^^
_L_unlock_650$$$lea     rdi, syslog_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40FB60^^^
__gconv_close$$$push    r15^^^push    r14^^^mov     r14, rdi^^^push    r13^^^lea     r13, [rdi+48h]^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 8^^^mov     rbx, [rdi+8]^^^mov     r15, [rdi]^^^nop     dword ptr [rax+00h]^^^mov     rbp, [r13-8]^^^test    rbp, rbp^^^jnz     short loc_457C73^^^jmp     short loc_457C8D^^^mov     rbp, r12^^^mov     rax, [rbp+10h]^^^mov     r12, [rbp+20h]^^^test    rax, rax^^^jnz     short loc_457CD3^^^mov     rdi, rbp^^^call    free^^^test    r12, r12^^^jnz     short loc_457C70^^^test    byte ptr [r13-28h], 1^^^jz      short loc_457CB8^^^mov     rdi, r14^^^call    free^^^add     rsp, 8^^^mov     rdi, rbx^^^mov     rsi, r15^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^jmp     __gconv_close_transform^^^mov     rdi, [r13-38h]^^^test    rdi, rdi^^^jz      short loc_457CCD^^^call    free^^^test    byte ptr [r13-28h], 1^^^jnz     short loc_457C94^^^add     r13, 38h^^^jmp     short loc_457C60^^^mov     rdi, [rbp+18h]^^^call    rax^^^jmp     short loc_457C80^^^
sscanf$$$sub     rsp, 0D8h       ^^^test    al, al^^^mov     [rsp+0D8h+var_A8], rdx^^^mov     [rsp+0D8h+var_A0], rcx^^^mov     [rsp+0D8h+var_98], r8^^^mov     [rsp+0D8h+var_90], r9^^^jz      short loc_424A76^^^movaps  [rsp+0D8h+var_88], xmm0^^^movaps  [rsp+0D8h+var_78], xmm1^^^movaps  [rsp+0D8h+var_68], xmm2^^^movaps  [rsp+0D8h+var_58], xmm3^^^movaps  [rsp+0D8h+var_48], xmm4^^^movaps  [rsp+0D8h+var_38], xmm5^^^movaps  [rsp+0D8h+var_28], xmm6^^^movaps  [rsp+0D8h+var_18], xmm7^^^lea     rax, [rsp+0D8h+arg_0]^^^lea     rdx, [rsp+0D8h+var_D0]^^^mov     [rsp+0D8h+var_D0], 10h^^^mov     [rsp+0D8h+var_CC], 30h^^^mov     [rsp+0D8h+var_C8], rax^^^lea     rax, [rsp+0D8h+var_B8]^^^mov     [rsp+0D8h+var_C0], rax^^^call    vsscanf^^^add     rsp, 0D8h^^^retn^^^
_IO_new_file_finish$$$push    rbx^^^cmp     dword ptr [rdi+70h], 0FFFFFFFFh^^^mov     rbx, rdi^^^jz      short loc_42A444^^^mov     eax, [rdi+0C0h]^^^test    eax, eax^^^jle     short loc_42A470^^^mov     rax, [rdi+0A0h]^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^test    byte ptr [rbx], 40h^^^jz      short loc_42A450^^^mov     rdi, rbx^^^xor     esi, esi^^^pop     rbx^^^jmp     _IO_default_finish^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^call    qword ptr [rax+88h]^^^mov     rdi, rbx^^^xor     esi, esi^^^pop     rbx^^^jmp     _IO_default_finish^^^mov     rsi, [rdi+20h]^^^mov     rdx, [rdi+28h]^^^sub     rdx, rsi^^^jz      short loc_42A43F^^^call    new_do_write^^^jmp     short loc_42A43F^^^
_L_unlock_10754$$$lea     rdi, [rbx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_407857^^^
get_cie_encoding$$$push    rbx^^^mov     rbx, rdi^^^lea     rdi, [rdi+9]^^^sub     rsp, 10h^^^call    strlen^^^movzx   esi, byte ptr [rbx+8]^^^lea     rcx, [rax+1]^^^lea     rdi, [rbx+rcx]^^^cmp     sil, 3^^^lea     rdx, [rdi+9]^^^ja      loc_4931F0^^^xor     eax, eax^^^cmp     byte ptr [rbx+9], 7Ah^^^jz      short loc_493133^^^add     rsp, 10h^^^pop     rbx^^^retn^^^mov     rdx, rax^^^cmp     byte ptr [rdx], 0^^^lea     rax, [rdx+1]^^^js      short loc_493130^^^cmp     byte ptr [rax], 0^^^lea     rcx, [rax+1]^^^jns     short loc_493154^^^nop     dword ptr [rax]^^^mov     rax, rcx^^^cmp     byte ptr [rax], 0^^^lea     rcx, [rax+1]^^^js      short loc_493148^^^cmp     sil, 1^^^lea     rdx, [rax+2]^^^jnz     short loc_493163^^^jmp     short loc_49317B^^^mov     rcx, rdx^^^cmp     byte ptr [rcx], 0^^^lea     rdx, [rcx+1]^^^js      short loc_493160^^^cmp     byte ptr [rdx], 0^^^lea     rax, [rdx+1]^^^jns     short loc_493184^^^nop     dword ptr [rax]^^^mov     rdx, rax^^^cmp     byte ptr [rdx], 0^^^lea     rax, [rdx+1]^^^js      short loc_493178^^^movzx   edx, byte ptr [rbx+0Ah]^^^add     rbx, 0Ah^^^cmp     dl, 52h^^^jnz     short loc_4931AD^^^jmp     short loc_4931D8^^^cmp     dl, 4Ch^^^jnz     short loc_4931E8^^^add     rbx, 1^^^add     rax, 1^^^movzx   edx, byte ptr [rbx]^^^cmp     dl, 52h^^^jz      short loc_4931D8^^^cmp     dl, 50h^^^jnz     short loc_493198^^^movzx   edi, byte ptr [rax]^^^lea     rdx, [rax+1]^^^lea     rcx, [rsp+18h+var_10]^^^xor     esi, esi^^^add     rbx, 1^^^and     edi, 7Fh^^^call    read_encoded_value_with_base_0^^^movzx   edx, byte ptr [rbx]^^^cmp     dl, 52h^^^jnz     short loc_4931AD^^^nop     dword ptr [rax+00h]^^^movzx   eax, byte ptr [rax]^^^add     rsp, 10h^^^pop     rbx^^^retn^^^add     rsp, 10h^^^xor     eax, eax^^^pop     rbx^^^retn^^^cmp     byte ptr [rbx+rcx+9], 8^^^mov     eax, 0FFh^^^jnz     loc_493123^^^cmp     byte ptr [rbx+rcx+0Ah], 0^^^jnz     loc_493123^^^lea     rdx, [rdi+0Bh]^^^jmp     loc_49311B^^^
__syscall_error$$$neg     rax^^^mov     fs:0FFFFFFFFFFFFFFC0h, eax^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^retn^^^
mbrtowc$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_10], r13^^^mov     r13, rsi^^^mov     [rsp+var_20], rbp^^^mov     [rsp+var_18], r12^^^mov     esi, offset state_2^^^mov     [rsp+var_8], r14^^^sub     rsp, 0A8h^^^test    rdi, rdi^^^lea     rax, [rsp+0A8h+var_38]^^^mov     [rsp+0A8h+var_74], 0^^^mov     [rsp+0A8h+var_70], 1^^^mov     [rsp+0A8h+var_78], 1^^^mov     [rsp+0A8h+var_58], 0^^^mov     rbx, rax^^^cmovnz  rbx, rdi^^^test    rcx, rcx^^^cmovz   rcx, rsi^^^test    r13, r13^^^mov     [rsp+0A8h+var_68], rcx^^^jz      loc_476BE0^^^lea     rax, [rbx+4]^^^mov     [rsp+0A8h+var_88], rbx^^^mov     [rsp+0A8h+var_80], rax^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rbp, [rax]^^^mov     r12, [rbp+28h]^^^test    r12, r12^^^jz      loc_476BF3^^^mov     r14, r13^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0A8h+var_48], r13^^^add     r14, rdx^^^cmovb   r14, rax^^^mov     rax, [r12]^^^cmp     qword ptr [rax], 0^^^mov     rbp, [rax+28h]^^^jz      short loc_476AC7^^^ror     rbp, 11h^^^xor     rbp, fs:30h^^^mov     rdi, rbp^^^call    _dl_mcount_wrapper_check^^^mov     [rsp+0A8h+var_A0], 1^^^mov     [rsp+0A8h+var_A8], 0^^^xor     r8d, r8d^^^lea     rdx, [rsp+0A8h+var_48]^^^lea     r9, [rsp+0A8h+var_40]^^^mov     rcx, r14^^^lea     rsi, [rsp+0A8h+var_88]^^^mov     rdi, [r12]^^^call    rbp^^^cmp     eax, 4^^^mov     edx, eax^^^jz      short loc_476B04^^^test    eax, eax^^^jnz     short loc_476B60^^^cmp     edx, 4^^^jnz     loc_476BA0^^^cmp     [rsp+0A8h+var_88], rbx^^^jz      short loc_476B90^^^mov     edx, [rbx]^^^test    edx, edx^^^jnz     short loc_476B90^^^mov     rax, [rsp+0A8h+var_68]^^^mov     eax, [rax]^^^test    eax, eax^^^jnz     loc_476C21^^^xor     eax, eax^^^mov     rbx, [rsp+0A8h+var_28]^^^mov     rbp, [rsp+0A8h+var_20]^^^mov     r12, [rsp+0A8h+var_18]^^^mov     r13, [rsp+0A8h+var_10]^^^mov     r14, [rsp+0A8h+var_8]^^^add     rsp, 0A8h^^^retn^^^cmp     eax, 7^^^jz      short loc_476B04^^^cmp     eax, 6^^^jz      short loc_476B04^^^cmp     eax, 5^^^jz      short loc_476B0D^^^mov     ecx, offset __PRETTY_FUNCTION___11484^^^mov     edx, 5Ch^^^mov     esi, offset aMbrtowc_c^^^mov     edi, offset aStatus__gconv_^^^call    __assert_fail^^^mov     rax, [rsp+0A8h+var_48]^^^sub     rax, r13^^^jmp     short loc_476B2B^^^test    edx, edx^^^jz      loc_476B0D^^^cmp     edx, 5^^^jz      loc_476B0D^^^cmp     edx, 7^^^mov     rax, 0FFFFFFFFFFFFFFFEh^^^jz      loc_476B2B^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 54h^^^mov     rax, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_476B2B^^^mov     rbx, rax^^^mov     edx, 1^^^mov     r13d, offset unk_49A0C9^^^jmp     loc_476A6D^^^cmp     rbp, offset _nl_C_LC_CTYPE^^^mov     r12d, offset __wcsmbs_gconv_fcts_c^^^jz      loc_476A96^^^mov     rdi, rbp^^^mov     [rsp+0A8h+var_90], rdx^^^call    __wcsmbs_load_conv^^^mov     r12, [rbp+28h]^^^mov     rdx, [rsp+0A8h+var_90]^^^jmp     loc_476A96^^^mov     ecx, offset __PRETTY_FUNCTION___11484^^^mov     edx, 65h^^^mov     esi, offset aMbrtowc_c^^^mov     edi, offset aData___statep_^^^call    __assert_fail^^^
_L_unlock_153$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     short sub_410DAB^^^
__gconv_transform_ucs2_internal$$$push    r15^^^lea     rax, [rdi+68h]^^^mov     r15, rdx^^^mov     rdx, rsi^^^push    r14^^^add     rdx, 38h^^^push    r13^^^push    r12^^^push    rbp^^^mov     rbp, rcx^^^push    rbx^^^sub     rsp, 98h^^^mov     ecx, [rsi+10h]^^^mov     [rsp+0C8h+var_A8], rsi^^^mov     [rsp+0C8h+var_88], r8^^^mov     [rsp+0C8h+var_80], r9^^^mov     ebx, [rsp+0C8h+arg_0]^^^test    cl, 1^^^mov     [rsp+0C8h+var_78], rax^^^mov     [rsp+0C8h+var_70], rdx^^^mov     [rsp+0C8h+var_A0], 0^^^jnz     short loc_45DAA8^^^cmp     qword ptr [rdi+68h], 0^^^mov     rdx, [rdi+90h]^^^mov     [rsp+0C8h+var_A0], rdx^^^jz      short loc_45DAA8^^^ror     rdx, 11h^^^xor     rdx, fs:30h^^^mov     [rsp+0C8h+var_A0], rdx^^^test    ebx, ebx^^^jnz     loc_45E013^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     loc_45E07C^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r14, [rdx]^^^cmp     [rsp+0C8h+var_80], 0^^^mov     [rsp+0C8h+var_90], 0^^^lea     rax, [rsp+0C8h+var_68]^^^mov     r9d, [rsp+0C8h+arg_8]^^^cmovz   rax, [rsp+0C8h+var_90]^^^mov     r13, [rdx+8]^^^mov     [rsp+0C8h+var_68], 0^^^test    r9d, r9d^^^mov     [rsp+0C8h+var_90], rax^^^jz      short loc_45DB0E^^^mov     rdi, [rdx+20h]^^^mov     r9d, [rdi]^^^test    r9b, 7^^^jnz     loc_45DE09^^^mov     rax, [r15]^^^mov     [rsp+0C8h+var_B0], rax^^^cmp     rbp, [rsp+0C8h+var_B0]^^^jz      loc_45DCB1^^^nop     dword ptr [rax+00000000h]^^^mov     rax, [rsp+0C8h+var_B0]^^^add     rax, 2^^^cmp     rbp, rax^^^jb      loc_45DDF4^^^lea     rdx, [r14+4]^^^cmp     r13, rdx^^^jb      loc_45DDCB^^^and     ecx, 2^^^jnz     loc_45DCC0^^^cmp     [rsp+0C8h+var_90], 0^^^jz      loc_45DF64^^^mov     rsi, r14^^^mov     rcx, [rsp+0C8h+var_B0]^^^mov     rbx, rdx^^^jmp     short loc_45DB96^^^lea     rdx, [rax+2]^^^cmp     rbp, rdx^^^jb      loc_45DDFC^^^lea     rcx, [rbx+4]^^^cmp     r13, rcx^^^jb      loc_45DDD3^^^mov     rsi, rbx^^^mov     rbx, rcx^^^mov     rcx, rax^^^mov     rax, rdx^^^movzx   edx, word ptr [rcx]^^^lea     edi, [rdx+2800h]^^^cmp     di, 7FFh^^^jbe     loc_45DF51^^^movzx   edx, dx^^^cmp     rbp, rax^^^mov     [rsi], edx^^^jnz     short loc_45DB70^^^mov     [rsp+0C8h+var_94], 4^^^cmp     [rsp+0C8h+var_88], 0^^^mov     [r15], rax^^^jnz     loc_45DDEA^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r12, [rdx+30h]^^^test    r12, r12^^^jz      short loc_45DC11^^^nop     dword ptr [rax+00000000h]^^^mov     rdi, [r12+8]^^^test    rdi, rdi^^^jz      short loc_45DC07^^^call    _dl_mcount_wrapper_check^^^mov     rdi, [r12+18h]^^^mov     r8, rbx^^^mov     rcx, r14^^^mov     rdx, [r15]^^^mov     rsi, [rsp+0C8h+var_B0]^^^call    qword ptr [r12+8]^^^mov     r12, [r12+20h]^^^test    r12, r12^^^jnz     short loc_45DBE0^^^mov     rax, [rsp+0C8h+var_A8]^^^add     dword ptr [rax+14h], 1^^^test    byte ptr [rax+10h], 1^^^jnz     loc_45DFDA^^^cmp     rbx, r14^^^jbe     loc_45DD43^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rdi, [rsp+0C8h+var_A0]^^^mov     rax, [rdx]^^^mov     [rsp+0C8h+var_58], rax^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0C8h+arg_8]^^^xor     r8d, r8d^^^mov     [rsp+0C8h+var_C8], 0^^^mov     r9, [rsp+0C8h+var_80]^^^mov     rcx, rbx^^^lea     rdx, [rsp+0C8h+var_58]^^^mov     rsi, [rsp+0C8h+var_70]^^^mov     rdi, [rsp+0C8h+var_78]^^^mov     [rsp+0C8h+var_C0], eax^^^call    [rsp+0C8h+var_A0]^^^cmp     eax, 4^^^jz      loc_45DD38^^^mov     rdx, [rsp+0C8h+var_58]^^^cmp     rdx, rbx^^^jnz     loc_45DFEF^^^test    eax, eax^^^jnz     loc_45E00A^^^mov     rax, [r15]^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     [rsp+0C8h+var_B0], rax^^^cmp     rbp, [rsp+0C8h+var_B0]^^^mov     r14, [rdx]^^^mov     ecx, [rdx+10h]^^^jnz     loc_45DB28^^^mov     rbx, r14^^^mov     rax, rbp^^^jmp     loc_45DBB4^^^cmp     [rsp+0C8h+var_90], 0^^^jz      loc_45DEF4^^^mov     rbx, r14^^^mov     rsi, [rsp+0C8h+var_B0]^^^mov     [rsp+0C8h+var_94], 4^^^jmp     short loc_45DD11^^^movzx   ecx, cx^^^mov     [rbx], ecx^^^mov     rbx, rdx^^^cmp     rbp, rax^^^jz      loc_45DBBC^^^lea     rcx, [rax+2]^^^cmp     rbp, rcx^^^jb      loc_45DDFC^^^lea     rdx, [rbx+4]^^^cmp     r13, rdx^^^jb      loc_45DDD3^^^mov     rsi, rax^^^mov     rax, rcx^^^movzx   ecx, word ptr [rsi]^^^lea     esi, [rcx+2800h]^^^cmp     si, 7FFh^^^ja      short loc_45DCE0^^^mov     rdx, [rsp+0C8h+var_90]^^^mov     [rsp+0C8h+var_94], 6^^^add     qword ptr [rdx], 1^^^jmp     short loc_45DCE8^^^cmp     [rsp+0C8h+var_94], 5^^^jz      loc_45DC93^^^cmp     [rsp+0C8h+var_94], 7^^^jnz     short loc_45DDB5^^^mov     r8d, [rsp+0C8h+arg_8]^^^test    r8d, r8d^^^jz      short loc_45DDB5^^^mov     rdx, [r15]^^^mov     rax, rbp^^^sub     rax, rdx^^^cmp     rax, 3^^^jg      loc_45E08E^^^xor     ecx, ecx^^^cmp     rbp, rdx^^^mov     rax, rdx^^^mov     r8, [rsp+0C8h+var_A8]^^^jbe     loc_45DEED^^^movzx   edi, byte ptr [rax]^^^mov     rsi, [r8+20h]^^^add     rax, 1^^^mov     [rsi+rcx+4], dil^^^add     rcx, 1^^^cmp     rax, rbp^^^mov     [r15], rax^^^jnz     short loc_45DD7D^^^sub     eax, edx^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rcx, [rdx+20h]^^^mov     edx, [rcx]^^^and     edx, 0FFFFFFF8h^^^or      edx, eax^^^mov     [rcx], edx^^^mov     [rsp+0C8h+var_94], 7^^^mov     eax, [rsp+0C8h+var_94]^^^add     rsp, 98h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+0C8h+var_B0]^^^mov     rbx, r14^^^cmp     [rsp+0C8h+var_88], 0^^^mov     [rsp+0C8h+var_94], 5^^^mov     [r15], rax^^^jz      loc_45DBCB^^^mov     rax, [rsp+0C8h+var_88]^^^mov     [rax], rbx^^^jmp     short loc_45DDB5^^^mov     rax, [rsp+0C8h+var_B0]^^^mov     rbx, r14^^^mov     [rsp+0C8h+var_94], 7^^^jmp     loc_45DBBC^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     loc_45DFC1^^^movsxd  r10, r9d^^^mov     rax, [r15]^^^mov     esi, 2^^^mov     rdx, r10^^^and     edx, 7^^^jz      short loc_45DE4E^^^lea     rsi, [rsp+0C8h+var_48]^^^xor     r8d, r8d^^^movzx   r11d, byte ptr [rdi+r8+4]^^^mov     [rsi+r8], r11b^^^add     r8, 1^^^cmp     rdx, r8^^^ja      short loc_45DE33^^^mov     esi, 2^^^sub     rsi, rdx^^^add     rsi, rax^^^cmp     rbp, rsi^^^jb      loc_45E117^^^lea     r11, [r14+4]^^^mov     [rsp+0C8h+var_94], 5^^^cmp     r13, r11^^^jb      loc_45DDB5^^^lea     rsi, [rsp+0C8h+var_48]^^^mov     r8, rax^^^movzx   ebx, byte ptr [r8]^^^add     r8, 1^^^mov     [rsi+rdx], bl^^^add     rdx, 1^^^cmp     rbp, r8^^^jbe     short loc_45DE94^^^cmp     rdx, 1^^^jbe     short loc_45DE7A^^^movzx   edx, [rsp+0C8h+var_48]^^^lea     esi, [rdx+2800h]^^^cmp     si, 7FFh^^^jbe     loc_45E0EC^^^movzx   edx, dx^^^mov     [r14], edx^^^mov     r9d, [rdi]^^^mov     r14, r11^^^movsxd  r10, r9d^^^and     r10d, 7^^^cmp     r10, 1^^^jg      loc_45E0D3^^^sub     rax, r10^^^and     r9d, 0FFFFFFF8h^^^add     rax, 2^^^mov     [r15], rax^^^mov     [rsp+0C8h+var_B0], rax^^^mov     rax, [rsp+0C8h+var_A8]^^^mov     [rdi], r9d^^^mov     ecx, [rax+10h]^^^jmp     loc_45DB16^^^xor     eax, eax^^^jmp     loc_45DD9B^^^mov     rbx, rdx^^^mov     rcx, r14^^^mov     rdx, [rsp+0C8h+var_B0]^^^jmp     short loc_45DF2E^^^lea     rsi, [rax+2]^^^cmp     rbp, rsi^^^jb      loc_45DDFC^^^lea     rdx, [rbx+4]^^^cmp     r13, rdx^^^jb      loc_45DDD3^^^mov     rcx, rbx^^^mov     rbx, rdx^^^mov     rdx, rax^^^mov     rax, rsi^^^movzx   esi, word ptr [rdx]^^^lea     edi, [rsi+2800h]^^^cmp     di, 7FFh^^^jbe     loc_45E0C0^^^movzx   esi, si^^^cmp     rbp, rax^^^mov     [rcx], esi^^^jnz     short loc_45DF08^^^jmp     loc_45DBB4^^^mov     rbx, rsi^^^mov     rax, rcx^^^mov     [rsp+0C8h+var_94], 6^^^jmp     loc_45DBBC^^^mov     rbx, rdx^^^mov     rcx, r14^^^mov     rdx, [rsp+0C8h+var_B0]^^^jmp     short loc_45DF9E^^^lea     rsi, [rax+2]^^^cmp     rbp, rsi^^^jb      loc_45DDFC^^^lea     rdx, [rbx+4]^^^cmp     r13, rdx^^^jb      loc_45DDD3^^^mov     rcx, rbx^^^mov     rbx, rdx^^^mov     rdx, rax^^^mov     rax, rsi^^^movzx   esi, word ptr [rdx]^^^lea     edi, [rsi+2800h]^^^cmp     di, 7FFh^^^jbe     loc_45E0C0^^^movzx   esi, si^^^cmp     rbp, rax^^^mov     [rcx], esi^^^jnz     short loc_45DF78^^^jmp     loc_45DBB4^^^mov     ecx, offset __PRETTY_FUNCTION___12536^^^mov     edx, 22Fh^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rdx, [rsp+0C8h+var_80]^^^mov     [rax], rbx^^^mov     rax, [rsp+0C8h+var_68]^^^add     [rdx], rax^^^jmp     loc_45DD43^^^sub     rbx, rdx^^^mov     rdx, rbx^^^shr     rdx, 3Fh^^^add     rdx, rbx^^^sar     rdx, 1^^^sub     [r15], rdx^^^test    eax, eax^^^jz      loc_45DC93^^^mov     [rsp+0C8h+var_94], eax^^^jmp     loc_45DD43^^^cmp     [rsp+0C8h+var_88], 0^^^jnz     loc_45E0A7^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     rax, [rdx+20h]^^^mov     qword ptr [rax], 0^^^test    byte ptr [rdx+10h], 1^^^mov     [rsp+0C8h+var_94], 0^^^jnz     loc_45DDB5^^^mov     rdi, [rsp+0C8h+var_A0]^^^call    _dl_mcount_wrapper_check^^^mov     eax, [rsp+0C8h+arg_8]^^^mov     [rsp+0C8h+var_C8], ebx^^^xor     r8d, r8d^^^mov     r9, [rsp+0C8h+var_80]^^^xor     ecx, ecx^^^xor     edx, edx^^^mov     rsi, [rsp+0C8h+var_70]^^^mov     rdi, [rsp+0C8h+var_78]^^^mov     [rsp+0C8h+var_C0], eax^^^call    [rsp+0C8h+var_A0]^^^mov     [rsp+0C8h+var_94], eax^^^jmp     loc_45DDB5^^^mov     rax, [rsp+0C8h+var_88]^^^mov     rdx, [rsp+0C8h+var_A8]^^^mov     r14, [rax]^^^jmp     loc_45DAC4^^^mov     ecx, offset __PRETTY_FUNCTION___12536^^^mov     edx, 312h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aInendInptrp4^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___12536^^^mov     edx, 1A0h^^^mov     esi, offset a__IconvSkeleto^^^mov     edi, offset aOutbufstartVoi^^^call    __assert_fail^^^mov     rbx, rcx^^^mov     rax, rdx^^^mov     [rsp+0C8h+var_94], 6^^^jmp     loc_45DBBC^^^mov     ecx, offset __PRETTY_FUNCTION___12493^^^mov     edx, 1C0h^^^mov     esi, offset a__IconvLoop_c^^^mov     edi, offset aInptrBytebufSt^^^call    __assert_fail^^^cmp     [rsp+0C8h+var_90], 0^^^mov     [rsp+0C8h+var_94], 6^^^jz      loc_45DDB5^^^and     ecx, 2^^^jz      loc_45DDB5^^^mov     rdx, [rsp+0C8h+var_90]^^^add     qword ptr [rdx], 1^^^jmp     loc_45DEBC^^^cmp     rbp, rax^^^mov     [r15], rbp^^^mov     [rsp+0C8h+var_94], 7^^^jbe     loc_45DDB5^^^mov     r8, rbp^^^lea     rcx, [rax+1]^^^lea     r10, [rdi+rdx+4]^^^sub     r8, rax^^^mov     r11, r8^^^shr     r11, 4^^^mov     rsi, r11^^^shl     rsi, 4^^^test    rsi, rsi^^^jz      short loc_45E1A1^^^lea     r9, [r10+10h]^^^lea     rbx, [rax+10h]^^^cmp     rax, r9^^^setnbe  r9b^^^cmp     r10, rbx^^^setnbe  bl^^^or      r9d, ebx^^^cmp     r8, 0Fh^^^setnbe  bl^^^test    r9b, bl^^^jz      short loc_45E1A1^^^xor     ecx, ecx^^^xor     r9d, r9d^^^movdqu  xmm0, xmmword ptr [rax+rcx]^^^add     r9, 1^^^movdqu  xmmword ptr [r10+rcx], xmm0^^^add     rcx, 10h^^^cmp     r11, r9^^^ja      short loc_45E176^^^add     rax, rsi^^^add     rdx, rsi^^^cmp     r8, rsi^^^jz      loc_45DDAD^^^lea     rcx, [rax+1]^^^movzx   eax, byte ptr [rax]^^^mov     [rdi+rdx+4], al^^^add     rdx, 1^^^cmp     rbp, rcx^^^mov     rax, rcx^^^jbe     loc_45DDAD^^^add     rcx, 1^^^jmp     short loc_45E1A1^^^
argz_stringify$$$push    r12             ^^^test    rsi, rsi^^^mov     r12d, edx^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^jnz     short loc_4381E3^^^jmp     short loc_4381FE^^^add     rbp, rax^^^mov     [rbp+0], r12b^^^add     rbp, 1^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    sub_400330^^^mov     rdx, rbx^^^sub     rdx, rax^^^cmp     rdx, 1^^^lea     rbx, [rdx-1]^^^ja      short loc_4381D8^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^
__dcigettext$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^sub     rsp, 0C8h^^^test    rsi, rsi^^^mov     [rbp+var_A8], rdi^^^mov     [rbp+var_88], rsi^^^mov     [rbp+var_C0], rdx^^^mov     [rbp+var_A0], ecx^^^mov     [rbp+var_B8], r8^^^mov     [rbp+var_9C], r9d^^^jz      loc_4133B0^^^cmp     r9d, 0Ch^^^ja      loc_4133FE^^^cmp     r9d, 6^^^jz      loc_4133FE^^^mov     ebx, 0^^^test    rbx, rbx^^^jz      short loc_412FC8^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     edi, offset _nl_state_lock^^^call    near ptr 0^^^cmp     [rbp+var_A8], 0^^^mov     rdx, [rbp+var_A8]^^^cmovz   rdx, cs:_nl_current_default_domain^^^mov     rax, [rbp+var_88]^^^mov     [rbp+var_60], 0^^^mov     [rbp+var_48], rax^^^mov     [rbp+var_A8], rdx^^^mov     [rbp+var_80], rdx^^^mov     edx, [rbp+var_9C]^^^mov     edi, edx^^^mov     [rbp+var_78], edx^^^call    __current_locale_name^^^mov     rdi, rax^^^mov     r12, rax^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, r12^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+0F0h+var_E1]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^test    rbx, rbx^^^mov     [rbp+var_C8], rax^^^mov     [rbp+var_70], rax^^^jz      short loc_413052^^^mov     edi, offset tree_lock_10916^^^call    near ptr 0^^^lea     rdi, [rbp+var_80]^^^mov     edx, offset transcmp^^^mov     esi, offset root^^^call    tfind^^^mov     [rbp+var_B0], rax^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_413080^^^mov     edi, offset tree_lock_10916^^^call    near ptr 0^^^cmp     [rbp+var_B0], 0^^^jz      short loc_4130A3^^^mov     rdx, [rbp+var_B0]^^^mov     rax, [rdx]^^^mov     edx, cs:_nl_msg_cat_cntr^^^cmp     [rax+18h], edx^^^jz      loc_41354F^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     r12, cs:_nl_domain_bindings^^^mov     edx, fs:[rdx]^^^test    r12, r12^^^mov     [rbp+var_DC], edx^^^jz      loc_41350A^^^mov     rbx, [rbp+var_A8]^^^jmp     short loc_4130E3^^^jl      loc_41353C^^^mov     r12, [r12]^^^test    r12, r12^^^jz      loc_41350A^^^lea     rsi, [r12+18h]^^^mov     rdi, rbx^^^call    sub_4003A0^^^cmp     eax, 0^^^jnz     short loc_4130D0^^^test    r12, r12^^^jz      loc_41350A^^^mov     rax, [r12+8]^^^cmp     byte ptr [rax], 2Fh^^^mov     [rbp+var_90], rax^^^jz      loc_4131AB^^^mov     rdi, rax^^^mov     ebx, 1002h^^^mov     r14d, 10h^^^call    strlen^^^lea     r13, [rax+1]^^^jmp     short loc_41314C^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^cmp     dword ptr fs:[rax], 22h^^^jnz     loc_4133D0^^^mov     rax, rbx^^^shr     rax, 1^^^lea     rbx, [rbx+rax+20h]^^^lea     rax, [rbx+r13+1Eh]^^^xor     edx, edx^^^mov     rsi, rbx^^^div     r14^^^mov     rdx, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rdx], 0^^^shl     rax, 4^^^sub     rsp, rax^^^lea     r15, [rsp+0F0h+var_E1]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r15^^^call    getcwd^^^test    rax, rax^^^jz      short loc_413130^^^mov     rbx, [r12+8]^^^xor     esi, esi^^^mov     rdi, r15^^^mov     [rbp+var_90], r15^^^call    sub_400350^^^lea     rdi, [rax+1]^^^mov     word ptr [rax], 2Fh^^^mov     rsi, rbx^^^call    sub_400320^^^movsxd  rax, [rbp+var_9C]^^^mov     edi, offset aLanguage^^^movzx   r14d, ds:_nl_category_name_idxs[rax]^^^call    getenv^^^mov     edi, [rbp+var_9C]^^^mov     r13, rax^^^add     r14, 4A17E0h^^^test    rax, rax^^^jz      short loc_4131E2^^^cmp     byte ptr [rax], 0^^^jnz     loc_41351A^^^call    __current_locale_name^^^mov     rbx, rax^^^mov     rdi, [rbp+var_A8]^^^call    strlen^^^mov     rdi, r14^^^mov     [rbp+var_D0], rax^^^call    strlen^^^mov     rdx, [rbp+var_D0]^^^mov     rsi, r14^^^lea     rax, [rdx+rax+23h]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rax, [rsp+0F0h+var_E1]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rax^^^mov     [rbp+var_98], rax^^^call    near ptr qword_400310^^^mov     word ptr [rax], 2Fh^^^mov     rdx, [rbp+var_D0]^^^lea     rdi, [rax+1]^^^mov     rsi, [rbp+var_A8]^^^call    mempcpy^^^mov     rdi, rbx^^^mov     dword ptr [rax], 6F6D2Eh^^^call    strlen^^^add     rax, 1Fh^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+0F0h+var_E1]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^nop     dword ptr [rax+00000000h]^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 3Ah^^^jz      loc_413488^^^test    al, al^^^mov     rdx, r13^^^jnz     loc_413434^^^mov     byte ptr [r13+0], 43h^^^mov     byte ptr [r13+1], 0^^^cmp     byte ptr [r13+1], 0^^^jz      loc_4133D0^^^mov     edi, offset _nl_POSIX_name^^^mov     ecx, 6^^^mov     rsi, r13^^^repe cmpsb^^^jz      loc_4133D0^^^mov     rdx, [rbp+var_98]^^^mov     rdi, [rbp+var_90]^^^mov     rcx, r12^^^mov     rsi, r13^^^call    _nl_find_domain^^^test    rax, rax^^^mov     r14, rax^^^jz      short loc_413278^^^mov     rdx, [rbp+var_88]^^^lea     r8, [rbp+var_40]^^^mov     ecx, 1^^^mov     rsi, r12^^^mov     rdi, rax^^^call    _nl_find_msg^^^test    rax, rax^^^jz      loc_413498^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_4133D0^^^test    rax, rax^^^jz      loc_413278^^^cmp     [rbp+var_B0], 0^^^mov     rcx, rax^^^jz      loc_41365A^^^mov     rdx, [rbp+var_B0]^^^mov     rax, [rdx]^^^mov     edx, cs:_nl_msg_cat_cntr^^^mov     [rax+18h], edx^^^mov     rdx, [rbp+var_B0]^^^mov     [rax+20h], r14^^^mov     rax, [rdx]^^^mov     [rax+28h], rcx^^^mov     rax, [rdx]^^^mov     rdx, [rbp+var_40]^^^mov     [rax+30h], rdx^^^mov     r11d, [rbp+var_A0]^^^mov     edx, [rbp+var_DC]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^test    r11d, r11d^^^mov     fs:[rax], edx^^^jnz     loc_4135EC^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_41379C^^^mov     edi, offset __libc_setlocale_lock^^^mov     [rbp-0E8h], rcx^^^call    near ptr 0^^^mov     edi, offset _nl_state_lock^^^call    near ptr 0^^^mov     rcx, [rbp-0E8h]^^^mov     [rbp+var_88], rcx^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rax, [rbp+var_88]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     edx, 0^^^test    rdx, rdx^^^jz      short loc_4133EE^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     edi, offset _nl_state_lock^^^call    near ptr 0^^^mov     edx, [rbp+var_DC]^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     fs:[rax], edx^^^mov     ebx, [rbp+var_A0]^^^test    ebx, ebx^^^jz      short loc_4133B0^^^cmp     [rbp+var_B8], 1^^^mov     rax, [rbp+var_C0]^^^cmovz   rax, [rbp+var_88]^^^mov     [rbp+var_88], rax^^^jmp     short loc_4133B0^^^test    al, al^^^jz      short loc_413445^^^add     rbx, 1^^^mov     [rdx], al^^^add     rdx, 1^^^movzx   eax, byte ptr [rbx]^^^cmp     al, 3Ah^^^jnz     short loc_413430^^^mov     r14d, cs:__libc_enable_secure^^^mov     byte ptr [rdx], 0^^^test    r14d, r14d^^^jz      short loc_413470^^^mov     esi, 2Fh^^^mov     rdi, r13^^^call    sub_4003C0^^^test    rax, rax^^^jnz     loc_413278^^^nop     word ptr [rax+rax+00h]^^^movzx   eax, byte ptr [r13+0]^^^cmp     al, 43h^^^jnz     loc_4132A3^^^jmp     loc_413298^^^add     rbx, 1^^^jmp     loc_413278^^^mov     rdi, [r14+20h]^^^test    rdi, rdi^^^jz      loc_413278^^^mov     [rbp+var_D8], rbx^^^xor     r15d, r15d^^^mov     rbx, [rbp+var_88]^^^jmp     short loc_4134D1^^^add     r15d, 1^^^movsxd  rax, r15d^^^mov     rdi, [r14+rax*8+20h]^^^test    rdi, rdi^^^jz      short loc_4134FE^^^lea     r8, [rbp+var_40]^^^mov     ecx, 1^^^mov     rdx, rbx^^^mov     rsi, r12^^^call    _nl_find_msg^^^test    rax, rax^^^jz      short loc_4134C0^^^movsxd  r15, r15d^^^mov     rbx, [rbp+var_D8]^^^mov     r14, [r14+r15*8+20h]^^^jmp     loc_4132FD^^^mov     rbx, [rbp+var_D8]^^^jmp     loc_413278^^^mov     [rbp+var_90], offset _nl_default_dirname^^^jmp     loc_4131AB^^^call    __current_locale_name^^^cmp     byte ptr [rax], 43h^^^mov     rbx, rax^^^jz      short loc_41352F^^^mov     rbx, r13^^^jmp     loc_4131EA^^^cmp     byte ptr [rbx+1], 0^^^cmovnz  rbx, r13^^^jmp     loc_4131EA^^^xor     r12d, r12d^^^mov     [rbp+var_90], offset _nl_default_dirname^^^jmp     loc_4131AB^^^mov     r15d, [rbp+var_A0]^^^test    r15d, r15d^^^jnz     short loc_41358D^^^mov     r12, [rax+28h]^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_4137A8^^^mov     edi, offset __libc_setlocale_lock^^^call    near ptr 0^^^mov     edi, offset _nl_state_lock^^^call    near ptr 0^^^mov     [rbp+var_88], r12^^^jmp     loc_4133B0^^^mov     r12, [rax+28h]^^^mov     r13, [rax+30h]^^^mov     rax, [rax+20h]^^^mov     rsi, [rbp+var_B8]^^^mov     r14, [rax+10h]^^^mov     rdi, [r14+0B8h]^^^call    plural_eval^^^cmp     rax, [r14+0C0h]^^^mov     rbx, rax^^^mov     eax, 0^^^mov     rdi, r12^^^cmovnb  rbx, rax^^^add     r13, r12^^^jmp     short loc_4135DF^^^xor     esi, esi^^^sub     rbx, 1^^^call    sub_400350^^^lea     rdi, [rax+1]^^^cmp     rdi, r13^^^jnb     short loc_41355F^^^test    rbx, rbx^^^jnz     short loc_4135CB^^^mov     r12, rdi^^^jmp     loc_41355F^^^mov     r13, [r14+10h]^^^mov     rsi, [rbp+var_B8]^^^mov     r12, [rbp+var_40]^^^mov     rdi, [r13+0B8h]^^^mov     [rbp-0E8h], rcx^^^call    plural_eval^^^cmp     rax, [r13+0C0h]^^^mov     rcx, [rbp-0E8h]^^^mov     rbx, rax^^^mov     eax, 0^^^mov     rdi, rcx^^^mov     r13, rcx^^^cmovnb  rbx, rax^^^add     r12, rcx^^^test    rbx, rbx^^^jz      short loc_413652^^^xor     esi, esi^^^sub     rbx, 1^^^call    sub_400350^^^lea     rdi, [rax+1]^^^cmp     rdi, r12^^^jb      short loc_413631^^^mov     rcx, r13^^^jmp     loc_413371^^^mov     rcx, rdi^^^jmp     loc_413371^^^mov     rdi, [rbp+var_88]^^^mov     [rbp-0E8h], rax^^^call    strlen^^^mov     rdi, [rbp+var_C8]^^^lea     r12, [rax+1]^^^call    strlen^^^mov     rdx, [rbp+var_D0]^^^lea     rdi, [rdx+rax+3Ah]^^^add     rdi, r12^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rcx, [rbp-0E8h]^^^jz      loc_413351^^^mov     rsi, [rbp+var_88]^^^lea     rdi, [rax+38h]^^^mov     rdx, r12^^^call    mempcpy^^^mov     r13, [rbp+var_D0]^^^mov     rsi, [rbp+var_A8]^^^mov     rdi, rax^^^mov     r12, rax^^^add     r13, 1^^^mov     rdx, r13^^^add     r13, r12^^^call    memcpy^^^mov     rsi, [rbp+var_C8]^^^mov     rdi, r13^^^call    sub_400320^^^mov     eax, [rbp+var_9C]^^^mov     rcx, [rbp-0E8h]^^^mov     [rbx], r12^^^mov     [rbx+10h], r13^^^mov     [rbx+20h], r14^^^mov     [rbx+8], eax^^^mov     eax, cs:_nl_msg_cat_cntr^^^mov     [rbx+28h], rcx^^^mov     [rbx+18h], eax^^^mov     rax, [rbp+var_40]^^^mov     [rbx+30h], rax^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_413734^^^mov     edi, offset tree_lock_10916^^^call    near ptr 0^^^mov     rcx, [rbp-0E8h]^^^mov     edx, offset transcmp^^^mov     esi, offset root^^^mov     rdi, rbx^^^mov     [rbp-0E8h], rcx^^^call    tsearch^^^mov     edx, 0^^^mov     r12, rax^^^mov     rcx, [rbp-0E8h]^^^test    rdx, rdx^^^jz      short loc_413772^^^mov     edi, offset tree_lock_10916^^^call    near ptr 0^^^mov     rcx, [rbp-0E8h]^^^test    r12, r12^^^jz      short loc_413781^^^cmp     rbx, [r12]^^^jz      loc_413351^^^mov     rdi, rbx^^^mov     [rbp-0E8h], rcx^^^call    free^^^mov     rcx, [rbp-0E8h]^^^jmp     loc_413351^^^mov     [rbp+var_88], rcx^^^jmp     loc_4133B0^^^mov     [rbp+var_88], r12^^^jmp     loc_4133B0^^^
__strcasecmp_l_nonascii$$$xor     eax, eax^^^cmp     rdi, rsi^^^jz      short locret_445CB0^^^mov     rcx, [rdx+70h]^^^xor     edx, edx^^^nop     dword ptr [rax]^^^movzx   r9d, byte ptr [rdi+rdx]^^^movzx   r8d, byte ptr [rsi+rdx]^^^movzx   eax, r9b^^^mov     eax, [rcx+rax*4]^^^sub     eax, [rcx+r8*4]^^^jnz     short locret_445CB0^^^add     rdx, 1^^^test    r9b, r9b^^^jnz     short loc_445C90^^^rep retn^^^
uw_init_context_1$$$push    r12^^^mov     r12, rdx^^^mov     edx, 0F0h^^^push    rbp^^^mov     rbp, rsi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 190h^^^test    bl, 1^^^mov     rsi, [rsp+1A8h]^^^jnz     loc_492608^^^test    dil, 2^^^jnz     loc_492620^^^test    dil, 4^^^jnz     loc_4925F0^^^mov     ecx, edx^^^xor     eax, eax^^^shr     ecx, 3^^^test    dl, 4^^^rep stosq^^^jz      short loc_492487^^^mov     dword ptr [rdi], 0^^^add     rdi, 4^^^test    dl, 2^^^jz      short loc_492495^^^mov     word ptr [rdi], 0^^^add     rdi, 2^^^and     edx, 1^^^jz      short loc_49249D^^^mov     byte ptr [rdi], 0^^^mov     rax, 4000000000000000h^^^mov     [rbx+98h], rsi^^^mov     rdi, rbx^^^mov     [rbx+0C0h], rax^^^mov     rsi, rsp^^^call    uw_frame_state_for^^^test    eax, eax^^^jnz     short loc_4924FB^^^cmp     cs:qword_6C1FD0, 0^^^jz      short loc_4924E5^^^lea     rsi, init_dwarf_reg_size_table^^^lea     rdi, once_regsizes_8575^^^call    near ptr 0^^^test    eax, eax^^^jz      short loc_4924EE^^^cmp     cs:dwarf_reg_size_table, 0^^^jz      short loc_492500^^^cmp     cs:byte_6C5C67, 8^^^jz      loc_492584^^^call    abort^^^mov     cs:byte_6C5C67, 8^^^cmp     cs:byte_6C5C67, 8^^^mov     cs:dwarf_reg_size_table, 8^^^mov     cs:byte_6C5C61, 8^^^mov     cs:byte_6C5C62, 8^^^mov     cs:byte_6C5C63, 8^^^mov     cs:byte_6C5C64, 8^^^mov     cs:byte_6C5C65, 8^^^mov     cs:byte_6C5C66, 8^^^mov     cs:byte_6C5C68, 8^^^mov     cs:byte_6C5C69, 8^^^mov     cs:byte_6C5C6A, 8^^^mov     cs:byte_6C5C6B, 8^^^mov     cs:byte_6C5C6C, 8^^^mov     cs:byte_6C5C6D, 8^^^mov     cs:byte_6C5C6E, 8^^^mov     cs:byte_6C5C6F, 8^^^mov     cs:byte_6C5C70, 8^^^jnz     loc_4924FB^^^test    byte ptr [rbx+0C7h], 40h^^^mov     [rsp+1A8h+var_28], rbp^^^jz      short loc_49259C^^^mov     byte ptr [rbx+0DFh], 0^^^lea     rax, [rsp+1A8h+var_28]^^^mov     rsi, rsp^^^mov     rdi, rbx^^^mov     [rsp+1A8h+var_68], 1^^^mov     [rsp+1A8h+var_78], 7^^^mov     [rbx+38h], rax^^^mov     [rsp+1A8h+var_80], 0^^^call    uw_update_context_1^^^mov     [rbx+98h], r12^^^add     rsp, 190h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^retn^^^mov     dword ptr [rdi], 0^^^sub     edx, 4^^^add     rdi, 4^^^jmp     loc_49246E^^^lea     rdi, [rbx+1]^^^mov     byte ptr [rbx], 0^^^mov     dl, 0EFh^^^test    dil, 2^^^jz      loc_492464^^^nop     dword ptr [rax+rax+00h]^^^mov     word ptr [rdi], 0^^^sub     edx, 2^^^add     rdi, 2^^^jmp     loc_492464^^^
ftello64$$$push    rbx             ^^^mov     eax, [rdi]^^^mov     rbx, rdi^^^and     eax, 8000h^^^jnz     short loc_475245^^^mov     rdx, [rdi+88h]^^^mov     r8, fs:10h^^^cmp     r8, [rdx+8]^^^jz      short loc_475241^^^mov     esi, 1^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_47522D^^^lock cmpxchg [rdx], esi^^^jnz     _L_lock_31_0^^^jmp     short loc_475236^^^cmpxchg [rdx], esi^^^jnz     _L_lock_31_0^^^mov     rdx, [rbx+88h]^^^mov     [rdx+8], r8^^^add     dword ptr [rdx+4], 1^^^xor     ecx, ecx^^^mov     edx, 1^^^xor     esi, esi^^^mov     rdi, rbx^^^call    _IO_seekoff_unlocked^^^mov     rdx, rax^^^mov     eax, [rbx]^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_475266^^^test    ah, 1^^^jnz     short loc_475290^^^test    ah, 80h^^^jnz     short loc_475280^^^mov     rsi, [rbx+88h]^^^mov     eax, [rsi+4]^^^sub     eax, 1^^^test    eax, eax^^^mov     [rsi+4], eax^^^jz      short loc_4752D0^^^nop^^^cmp     rdx, 0FFFFFFFFFFFFFFFFh^^^jz      short loc_4752B0^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     esi, [rbx+0C0h]^^^test    esi, esi^^^jg      short loc_475266^^^mov     rcx, [rbx+48h]^^^sub     rcx, [rbx+58h]^^^add     rdx, rcx^^^jmp     short loc_475266^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     ecx, fs:[rax]^^^test    ecx, ecx^^^jnz     short loc_475286^^^mov     dword ptr fs:[rax], 5^^^mov     rax, rdx^^^pop     rbx^^^retn^^^mov     qword ptr [rsi+8], 0^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4752E8^^^lock dec dword ptr [rsi]^^^jnz     short _L_unlock_157_0^^^jmp     short loc_4752EC^^^dec     dword ptr [rsi]^^^jnz     short _L_unlock_157_0^^^jmp     short loc_475280^^^
_L_lock_643$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_428148^^^
_fitoa_word$$$push    rbx^^^mov     rbx, rsi^^^sub     rsp, 20h^^^lea     rsi, [rsp+28h+var_8]^^^call    _itoa_word^^^lea     rdx, [rsp+28h+var_8]^^^cmp     rax, rdx^^^jnb     loc_41A5EF^^^lea     rdx, [rax+1]^^^lea     r8, [rsp+28h+var_8]^^^sub     r8, rdx^^^mov     r9, rdx^^^add     r8, 1^^^mov     rsi, r8^^^shr     rsi, 4^^^mov     rdi, rsi^^^shl     rdi, 4^^^test    rdi, rdi^^^jz      loc_41A5F8^^^lea     rcx, [rax+10h]^^^cmp     r8, 0Fh^^^lea     r11, [rbx+10h]^^^setnbe  r10b^^^cmp     rbx, rcx^^^setnbe  cl^^^cmp     rax, r11^^^setnbe  r11b^^^or      ecx, r11d^^^test    r10b, cl^^^jz      short loc_41A5F8^^^xor     edx, edx^^^xor     ecx, ecx^^^nop     dword ptr [rax+rax+00h]^^^movdqu  xmm0, xmmword ptr [rax+rdx]^^^add     rcx, 1^^^movdqu  xmmword ptr [rbx+rdx], xmm0^^^add     rdx, 10h^^^cmp     rsi, rcx^^^ja      short loc_41A598^^^add     rax, rdi^^^cmp     r8, rdi^^^lea     rcx, [rbx+rdi]^^^jz      short loc_41A5E2^^^lea     rdx, [rax+1]^^^jmp     short loc_41A5CC^^^add     rdx, 1^^^movzx   eax, byte ptr [rax]^^^lea     rsi, [rsp+28h+var_8]^^^mov     [rcx], al^^^add     rcx, 1^^^cmp     rdx, rsi^^^mov     rax, rdx^^^jb      short loc_41A5C8^^^lea     rax, [rsp+28h+var_8]^^^sub     rax, r9^^^lea     rbx, [rax+rbx+1]^^^add     rsp, 20h^^^mov     rax, rbx^^^pop     rbx^^^retn^^^mov     rcx, rbx^^^jmp     short loc_41A5CC^^^
__profile_frequency$$$mov     eax, cs:_dl_clktck^^^retn^^^
__libc_csu_init$$$push    r14^^^mov     r14d, offset __preinit_array_end^^^sub     r14, offset __preinit_array_end^^^push    r13^^^sar     r14, 3^^^mov     r13, rdx^^^test    r14, r14^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     ebp, edi^^^push    rbx^^^jz      short loc_401A78^^^xor     ebx, ebx^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     edi, ebp^^^call    ds:__preinit_array_end[rbx*8]^^^add     rbx, 1^^^cmp     rbx, r14^^^jnz     short loc_401A60^^^mov     r14d, offset __fini_array_start^^^sub     r14, offset __preinit_array_end^^^sar     r14, 3^^^call    _init_proc^^^test    r14, r14^^^jz      short loc_401AB0^^^xor     ebx, ebx^^^nop     dword ptr [rax]^^^mov     rdx, r13^^^mov     rsi, r12^^^mov     edi, ebp^^^call    ds:__preinit_array_end[rbx*8]^^^add     rbx, 1^^^cmp     rbx, r14^^^jnz     short loc_401A98^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^retn^^^
_IO_flush_all$$$mov     edi, 1^^^jmp     _IO_flush_all_lockp^^^
_L_lock_50$$$lea     rdi, lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_401C6B^^^
profil$$$mov     [rsp+var_28], rbx^^^mov     [rsp+var_20], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_18], r12^^^mov     [rsp+var_8], r14^^^mov     r12, rsi^^^mov     [rsp+var_10], r13^^^sub     rsp, 0E8h^^^test    rdi, rdi^^^mov     rbp, rdx^^^mov     r14d, ecx^^^jz      loc_48B5B0^^^cmp     cs:samples, 0^^^jz      short loc_48B437^^^xor     edx, edx^^^mov     esi, offset otimer_9614^^^mov     edi, 2^^^call    setitimer^^^test    eax, eax^^^mov     r13d, 0FFFFFFFFh^^^js      loc_48B573^^^xor     edx, edx^^^mov     esi, offset oact_9613^^^mov     edi, 1Bh^^^call    sigaction^^^test    eax, eax^^^js      loc_48B573^^^shr     r12, 1^^^mov     edx, offset oact_9613^^^mov     rsi, rsp^^^mov     edi, 1Bh^^^mov     cs:samples, rbx^^^mov     cs:nsamples, r12^^^mov     cs:pc_offset, rbp^^^mov     cs:pc_scale, r14d^^^mov     r13d, 0FFFFFFFFh^^^mov     [rsp+0E8h+var_E8], offset profil_counter^^^mov     [rsp+0E8h+var_60], 10000000h^^^mov     [rsp+0E8h+var_68], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_70], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_78], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_80], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_88], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_90], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_98], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_A0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_A8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_B0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_B8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_C0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_C8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_D0], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_D8], 0FFFFFFFFFFFFFFFFh^^^mov     [rsp+0E8h+var_E0], 0FFFFFFFFFFFFFFFFh^^^call    sigaction^^^test    eax, eax^^^js      short loc_48B573^^^mov     [rsp+0E8h+var_38], 0^^^call    __profile_frequency^^^mov     ecx, eax^^^mov     eax, 0F4240h^^^lea     rsi, [rsp+0E8h+var_48]^^^mov     edx, eax^^^mov     edi, 2^^^sar     edx, 1Fh^^^idiv    ecx^^^mov     rdx, [rsp+0E8h+var_38]^^^mov     [rsp+0E8h+var_48], rdx^^^mov     edx, offset otimer_9614^^^cdqe^^^mov     [rsp+0E8h+var_30], rax^^^mov     [rsp+0E8h+var_40], rax^^^call    setitimer^^^mov     r13d, eax^^^mov     eax, r13d^^^mov     rbx, [rsp+0E8h+var_28]^^^mov     rbp, [rsp+0E8h+var_20]^^^mov     r12, [rsp+0E8h+var_18]^^^mov     r13, [rsp+0E8h+var_10]^^^mov     r14, [rsp+0E8h+var_8]^^^add     rsp, 0E8h^^^retn^^^xor     r13d, r13d^^^cmp     cs:samples, 0^^^jz      short loc_48B573^^^xor     edx, edx^^^mov     esi, offset otimer_9614^^^mov     edi, 2^^^call    setitimer^^^test    eax, eax^^^mov     r13d, 0FFFFFFFFh^^^js      short loc_48B573^^^xor     edx, edx^^^mov     esi, offset oact_9613^^^mov     edi, 1Bh^^^mov     cs:samples, 0^^^call    sigaction^^^mov     r13d, eax^^^jmp     loc_48B573^^^
_dlerror_run$$$mov     eax, 0^^^mov     [rsp+var_10], rbp^^^mov     [rsp+var_8], r12^^^mov     [rsp+var_18], rbx^^^sub     rsp, 18h^^^test    rax, rax^^^mov     rbp, rdi^^^mov     r12, rsi^^^jz      loc_482993^^^mov     esi, offset init^^^mov     edi, offset once^^^call    near ptr 0^^^mov     rbx, cs:static_buf^^^test    rbx, rbx^^^jz      short loc_482930^^^mov     rdi, [rbx+18h]^^^test    rdi, rdi^^^jz      short loc_4828D9^^^cmp     byte ptr [rbx+8], 0^^^jnz     short loc_482920^^^mov     qword ptr [rbx+18h], 0^^^lea     rax, [rbx+18h]^^^lea     rdx, [rbx+8]^^^lea     rdi, [rbx+10h]^^^mov     r8, r12^^^mov     rcx, rbp^^^mov     rsi, rax^^^call    _dl_catch_error^^^mov     [rbx], eax^^^mov     rax, [rbx+18h]^^^xor     edx, edx^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^test    rax, rax^^^setz    dl^^^setnz   al^^^mov     [rbx+4], edx^^^movzx   eax, al^^^mov     rbx, [rsp+18h+var_18]^^^add     rsp, 18h^^^retn^^^call    free^^^jmp     short loc_4828D1^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_482951^^^mov     edi, cs:key^^^call    near ptr 0^^^test    rax, rax^^^mov     rbx, rax^^^jnz     loc_4828C2^^^mov     esi, 20h^^^mov     edi, 1^^^call    calloc^^^test    rax, rax^^^mov     rbx, rax^^^jz      short loc_482989^^^mov     eax, 0^^^test    rax, rax^^^jz      loc_4828C2^^^mov     edi, cs:key^^^mov     rsi, rbx^^^call    near ptr 0^^^jmp     loc_4828C2^^^mov     ebx, offset last_result^^^jmp     loc_4828C2^^^cmp     cs:once, 0^^^jnz     loc_4828B6^^^call    init^^^or      cs:once, 2^^^jmp     loc_4828B6^^^
__default_morecore$$$sub     rsp, 8^^^call    sbrk^^^mov     edx, 0^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^cmovz   rax, rdx^^^add     rsp, 8^^^retn^^^
__add_to_environ.constprop.0$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^push    r14^^^mov     r14, rsi^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbx^^^sub     rsp, 38h^^^mov     [rbp+var_3C], edx^^^call    strlen^^^test    r14, r14^^^mov     rbx, rax^^^mov     [rbp+var_38], 0^^^jz      short loc_41865F^^^mov     rdi, r14^^^call    strlen^^^add     rax, 1^^^mov     [rbp+var_38], rax^^^mov     esi, 1^^^xor     eax, eax^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41867F^^^lock cmpxchg cs:envlock, esi^^^jnz     _L_lock_44^^^jmp     short loc_41868C^^^cmpxchg cs:envlock, esi^^^jnz     _L_lock_44^^^mov     rcx, cs:environ^^^test    rcx, rcx^^^jz      loc_418870^^^mov     r13, [rcx]^^^xor     r15d, r15d^^^test    r13, r13^^^jz      short loc_4186F1^^^nop     word ptr [rax+rax+00000000h]^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     rdi, r13^^^mov     [rbp+var_58], rcx^^^call    strncmp^^^test    eax, eax^^^mov     rcx, [rbp+var_58]^^^jnz     short loc_4186D2^^^cmp     byte ptr [r13+rbx+0], 3Dh^^^jz      short loc_4186E2^^^add     rcx, 8^^^add     r15, 1^^^mov     r13, [rcx]^^^test    r13, r13^^^jnz     short loc_4186B0^^^test    rcx, rcx^^^jz      short loc_4186F1^^^cmp     qword ptr [rcx], 0^^^jnz     loc_41893F^^^lea     rsi, ds:10h[r15*8]^^^mov     rdi, cs:last_environ^^^call    realloc^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_41888A^^^mov     rax, [rbp+var_38]^^^lea     r8, [rax+rbx+1]^^^cmp     r8, 1000h^^^ja      loc_4188BE^^^lea     rax, [r8+1Eh]^^^mov     r9d, 1^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rcx, [rsp+60h+var_58+7]^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rcx^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     [rbp+var_50], r8^^^mov     [rbp+var_48], r9d^^^lea     rbx, ds:0[r15*8]^^^mov     [rbp+var_58], rcx^^^call    mempcpy^^^mov     byte ptr [rax], 3Dh^^^mov     rdx, [rbp+var_38]^^^lea     rdi, [rax+1]^^^mov     rsi, r14^^^lea     r12, [r13+rbx+0]^^^call    memcpy^^^mov     rcx, [rbp+var_58]^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, rcx^^^call    tfind^^^test    rax, rax^^^mov     rcx, [rbp+var_58]^^^mov     r8, [rbp+var_50]^^^mov     r9d, [rbp+var_48]^^^jz      loc_41887D^^^mov     rax, [rax]^^^test    rax, rax^^^mov     [r12], rax^^^jnz     short loc_418804^^^test    r9d, r9d^^^jz      loc_4188B5^^^mov     rdi, r8^^^mov     [rbp+var_58], rcx^^^mov     [rbp+var_50], r8^^^call    malloc^^^test    rax, rax^^^mov     [r12], rax^^^mov     rcx, [rbp+var_58]^^^mov     r8, [rbp+var_50]^^^jz      loc_41888A^^^mov     rsi, rcx^^^mov     rdx, r8^^^mov     rdi, rax^^^call    memcpy^^^mov     rcx, [r12]^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, rcx^^^call    tsearch^^^mov     rsi, cs:environ^^^cmp     rsi, cs:last_environ^^^jz      short loc_41881F^^^mov     rdx, rbx^^^mov     rdi, r13^^^call    memcpy^^^mov     qword ptr [r13+r15*8+8], 0^^^mov     cs:last_environ, r13^^^mov     cs:environ, r13^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41884E^^^lock dec cs:envlock^^^jnz     _L_unlock_238_0^^^jmp     short loc_41885A^^^dec     cs:envlock^^^jnz     _L_unlock_238_0^^^xor     eax, eax^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^mov     esi, 10h^^^xor     r15d, r15d^^^jmp     loc_4186F9^^^mov     qword ptr [r12], 0^^^jmp     loc_4187B2^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4188A2^^^lock dec cs:envlock^^^jnz     _L_unlock_294^^^jmp     short loc_4188AE^^^dec     cs:envlock^^^jnz     _L_unlock_294^^^mov     eax, 0FFFFFFFFh^^^jmp     short loc_41885C^^^mov     [r12], rcx^^^jmp     loc_4187F2^^^mov     rdi, r8^^^mov     [rbp+var_50], r8^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     r8, [rbp+var_50]^^^jnz     loc_418727^^^mov     rdi, r8^^^mov     [rbp+var_50], r8^^^call    malloc^^^xor     r9d, r9d^^^test    rax, rax^^^mov     rcx, rax^^^mov     r8, [rbp+var_50]^^^jnz     loc_418741^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_41890D^^^lock dec cs:envlock^^^jnz     _L_unlock_340^^^jmp     short loc_418919^^^dec     cs:envlock^^^jnz     _L_unlock_340^^^cmp     cs:last_environ, 0^^^mov     eax, 0FFFFFFFFh^^^jnz     loc_41885C^^^mov     rdi, r13^^^mov     [rbp+var_48], eax^^^call    free^^^mov     eax, [rbp+var_48]^^^jmp     loc_41885C^^^mov     eax, [rbp+var_3C]^^^test    eax, eax^^^jz      loc_418836^^^mov     rax, [rbp+var_38]^^^lea     r15, [rax+rbx+1]^^^cmp     r15, 1000h^^^ja      loc_418A29^^^lea     rax, [r15+1Eh]^^^mov     r8d, 1^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+60h+var_58+7]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdx, rbx^^^mov     rsi, r12^^^mov     rdi, r13^^^mov     [rbp+var_58], rcx^^^mov     dword ptr [rbp+var_50], r8d^^^call    mempcpy^^^mov     byte ptr [rax], 3Dh^^^mov     rdx, [rbp+var_38]^^^lea     rdi, [rax+1]^^^mov     rsi, r14^^^call    memcpy^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r13^^^call    tfind^^^test    rax, rax^^^mov     rcx, [rbp+var_58]^^^mov     r8d, dword ptr [rbp+var_50]^^^jz      short loc_4189CA^^^mov     rax, [rax]^^^test    rax, rax^^^jnz     short loc_418A21^^^test    r8d, r8d^^^jz      short loc_418A04^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    malloc^^^test    rax, rax^^^mov     rbx, rax^^^mov     rcx, [rbp+var_58]^^^jz      loc_41888A^^^mov     rsi, r13^^^mov     rdx, r15^^^mov     rdi, rax^^^mov     [rbp+var_58], rcx^^^mov     r13, rbx^^^call    memcpy^^^mov     rcx, [rbp+var_58]^^^mov     edx, offset sub_4003A0^^^mov     esi, offset known_values^^^mov     rdi, r13^^^mov     [rbp+var_58], rcx^^^call    tsearch^^^mov     rcx, [rbp+var_58]^^^mov     rax, r13^^^mov     [rcx], rax^^^jmp     loc_418836^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    __libc_alloca_cutoff^^^test    eax, eax^^^mov     rcx, [rbp+var_58]^^^jnz     loc_418960^^^mov     rdi, r15^^^mov     [rbp+var_58], rcx^^^call    malloc^^^test    rax, rax^^^mov     r13, rax^^^mov     rcx, [rbp+var_58]^^^jz      loc_41888A^^^xor     r8d, r8d^^^jmp     loc_41897A^^^
_IO_no_init$$$mov     rax, [rdi+88h]^^^or      esi, 0FBAD0000h^^^mov     dword ptr [rdi+74h], 0^^^mov     [rdi], esi^^^mov     qword ptr [rdi+38h], 0^^^mov     qword ptr [rdi+40h], 0^^^mov     qword ptr [rdi+18h], 0^^^test    rax, rax^^^mov     qword ptr [rdi+8], 0^^^mov     qword ptr [rdi+10h], 0^^^mov     qword ptr [rdi+20h], 0^^^mov     qword ptr [rdi+28h], 0^^^mov     qword ptr [rdi+30h], 0^^^mov     qword ptr [rdi+68h], 0^^^mov     qword ptr [rdi+48h], 0^^^mov     qword ptr [rdi+50h], 0^^^mov     qword ptr [rdi+58h], 0^^^mov     qword ptr [rdi+60h], 0^^^mov     word ptr [rdi+80h], 0^^^jz      short loc_42C5B1^^^mov     dword ptr [rax], 0^^^mov     dword ptr [rax+4], 0^^^mov     qword ptr [rax+8], 0^^^test    edx, edx^^^mov     [rdi+0C0h], edx^^^js      short loc_42C620^^^mov     [rdi+0A0h], rcx^^^mov     qword ptr [rcx+30h], 0^^^mov     qword ptr [rcx+38h], 0^^^mov     qword ptr [rcx+10h], 0^^^mov     qword ptr [rcx], 0^^^mov     qword ptr [rcx+8], 0^^^mov     qword ptr [rcx+18h], 0^^^mov     qword ptr [rcx+20h], 0^^^mov     qword ptr [rcx+28h], 0^^^mov     qword ptr [rcx+40h], 0^^^mov     qword ptr [rcx+48h], 0^^^mov     qword ptr [rcx+50h], 0^^^mov     [rcx+140h], r8^^^mov     qword ptr [rdi+0A8h], 0^^^retn^^^
_nl_expand_alias$$$push    rbx^^^mov     esi, 1^^^mov     rbx, rdi^^^xor     eax, eax^^^sub     rsp, 10h^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_415738^^^lock cmpxchg cs:lock_0, esi^^^jnz     _L_lock_532^^^jmp     short loc_415745^^^cmpxchg cs:lock_0, esi^^^jnz     _L_lock_532^^^mov     rdx, cs:nmap^^^mov     [rsp+18h+var_18], rbx^^^test    rdx, rdx^^^jnz     loc_41581C^^^nop     dword ptr [rax+00000000h]^^^mov     rdx, cs:locale_alias_path_11381^^^movzx   eax, byte ptr [rdx]^^^test    al, al^^^jz      short loc_4157C5^^^mov     rcx, rdx^^^nop     dword ptr [rax+00000000h]^^^cmp     al, 3Ah^^^mov     rdi, rdx^^^jnz     short loc_41578E^^^nop^^^add     rdi, 1^^^movzx   eax, byte ptr [rdi]^^^cmp     al, 3Ah^^^jz      short loc_415780^^^mov     rcx, rdi^^^test    al, al^^^mov     rsi, rdi^^^mov     rdx, rdi^^^jnz     short loc_4157A4^^^jmp     short loc_4157B5^^^test    al, al^^^jz      short loc_4157AF^^^add     rsi, 1^^^movzx   eax, byte ptr [rsi]^^^cmp     al, 3Ah^^^jnz     short loc_4157A0^^^mov     rcx, rsi^^^mov     rdx, rsi^^^cmp     rsi, rdi^^^ja      short loc_4157F0^^^test    al, al^^^jnz     short loc_415778^^^mov     cs:locale_alias_path_11381, rcx^^^xor     edx, edx^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_4157DF^^^lock dec cs:lock_0^^^jnz     _L_unlock_613^^^jmp     short loc_4157E7^^^dec     cs:lock_0^^^jnz     short _L_unlock_613^^^add     rsp, 10h^^^mov     rax, rdx^^^pop     rbx^^^retn^^^sub     rsi, rdi^^^mov     cs:locale_alias_path_11381, rcx^^^call    read_alias_file^^^test    rax, rax^^^jz      loc_415760^^^mov     rdx, cs:nmap^^^mov     [rsp+18h+var_18], rbx^^^test    rdx, rdx^^^jz      loc_415760^^^mov     rsi, cs:map^^^mov     r8d, offset alias_compare^^^mov     ecx, 10h^^^mov     rdi, rsp^^^call    bsearch^^^test    rax, rax^^^jz      loc_415760^^^mov     rdx, [rax+8]^^^jmp     short loc_4157C7^^^
__gconv_open$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15, rsi^^^mov     esi, 2Fh^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^xor     ebx, ebx^^^sub     rsp, 58h^^^mov     [rbp+var_58], rdi^^^mov     [rbp+var_78], rdx^^^mov     dword ptr [rbp+var_60], ecx^^^call    sub_4003C0^^^test    rax, rax^^^mov     [rbp+var_64], 0^^^jz      short loc_4572E4^^^lea     rdi, [rax+1]^^^mov     esi, 2Fh^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_4572E4^^^cmp     byte ptr [rax+1], 0^^^jnz     loc_457705^^^mov     esi, 2Fh^^^mov     rdi, r15^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_457313^^^lea     rdi, [rax+1]^^^mov     esi, 2Fh^^^call    sub_4003C0^^^test    rax, rax^^^jz      short loc_457313^^^cmp     byte ptr [rax+1], 0^^^jnz     loc_4577B0^^^mov     rax, [rbp+var_58]^^^cmp     byte ptr [rax], 2Fh^^^jnz     short loc_457374^^^cmp     byte ptr [rax+1], 2Fh^^^jnz     short loc_457374^^^cmp     byte ptr [rax+2], 0^^^jnz     short loc_457374^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r13, [rax+0B0h]^^^mov     rdi, r13^^^call    strlen^^^lea     rcx, [rax+21h]^^^mov     rdx, rax^^^mov     rsi, r13^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rcx^^^lea     r12, [rsp+80h+var_78+7]^^^and     r12, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r12^^^call    mempcpy^^^mov     word ptr [rax], 2F2Fh^^^mov     byte ptr [rax+2], 0^^^mov     [rbp+var_58], r12^^^cmp     byte ptr [r15], 2Fh^^^jnz     short loc_457385^^^cmp     byte ptr [r15+1], 2Fh^^^jz      loc_4575CA^^^mov     r8d, dword ptr [rbp+var_60]^^^mov     rdi, [rbp+var_58]^^^lea     rcx, [rbp+var_50]^^^lea     rdx, [rbp+var_38]^^^mov     rsi, r15^^^call    __gconv_find_transform^^^test    eax, eax^^^mov     [rbp+var_68], eax^^^mov     [rbp+var_60], 0^^^jnz     loc_4575AD^^^test    rbx, rbx^^^jz      short loc_4573E4^^^mov     r12, rbx^^^xor     r13d, r13d^^^nop     dword ptr [rax+rax+00h]^^^cmp     qword ptr [r12], 0^^^jz      short loc_4573D7^^^mov     rdi, r12^^^call    __gconv_translit_find^^^test    eax, eax^^^jnz     loc_4579FB^^^mov     r13, r12^^^mov     r12, [r12+8]^^^test    r12, r12^^^jnz     short loc_4573C0^^^mov     r13, [rbp+var_50]^^^lea     rax, ds:0[r13*8]^^^mov     r12, r13^^^shl     r12, 6^^^sub     r12, rax^^^lea     rdi, [r12+10h]^^^call    malloc^^^test    rax, rax^^^mov     [rbp+var_60], rax^^^jz      loc_457622^^^mov     rdx, rax^^^mov     rax, [rbp+var_38]^^^xor     esi, esi^^^mov     rdi, rdx^^^mov     [rdx], r13^^^add     rdi, 10h^^^mov     [rdx+8], rax^^^mov     rdx, r12^^^call    sub_400390^^^mov     r12, [rbp+var_50]^^^test    r12, r12^^^jz      loc_4575AD^^^mov     r15, [rbp+var_60]^^^xor     r14d, r14d^^^mov     [rbp+var_58], 0^^^mov     rdx, [rbp+var_58]^^^mov     rax, [rbp+var_58]^^^mov     r13, rbx^^^mov     rcx, [rbp+var_60]^^^shl     rdx, 3^^^shl     rax, 6^^^sub     rax, rdx^^^lea     rdx, [rcx+rax+38h]^^^add     rax, 40h^^^test    rbx, rbx^^^mov     [rbp+var_70], rax^^^mov     [r15+30h], rdx^^^jz      loc_457551^^^xor     r12d, r12d^^^cmp     qword ptr [r13+18h], 0^^^jnz     short loc_45749E^^^jmp     loc_457540^^^add     r12, 1^^^cmp     [r13+18h], r12^^^jbe     loc_457540^^^mov     rax, [r13+10h]^^^mov     edx, offset _nl_C_locobj^^^mov     rsi, [rax+r12*8]^^^mov     rax, [rbp+var_38]^^^mov     rdi, [rax+r14+18h]^^^call    sub_400380^^^test    eax, eax^^^jnz     short loc_457490^^^mov     rax, [r13+30h]^^^mov     [rbp+var_40], 0^^^test    rax, rax^^^jz      short loc_4574E1^^^mov     rdx, [rbp+var_38]^^^lea     rdi, [rbp+var_40]^^^mov     rsi, [rdx+r14+20h]^^^call    rax^^^test    eax, eax^^^jnz     short loc_457540^^^mov     edi, 28h^^^call    malloc^^^test    rax, rax^^^jz      loc_45765E^^^mov     rdx, [r13+20h]^^^mov     [rax], rdx^^^mov     rdx, [r13+28h]^^^mov     [rax+8], rdx^^^mov     rdx, [r13+38h]^^^mov     qword ptr [rax+20h], 0^^^mov     [rax+10h], rdx^^^mov     rdx, [rbp+var_40]^^^mov     [rax+18h], rdx^^^mov     rdx, [r15+40h]^^^test    rdx, rdx^^^jz      loc_457651^^^nop     dword ptr [rax+rax+00000000h]^^^lea     rcx, [rdx+20h]^^^mov     rdx, [rdx+20h]^^^test    rdx, rdx^^^jnz     short loc_457530^^^mov     [rcx], rax^^^mov     r13, [r13+8]^^^test    r13, r13^^^jnz     loc_457480^^^mov     r12, [rbp+var_50]^^^lea     rax, [r12-1]^^^cmp     rax, [rbp+var_58]^^^jbe     loc_4579CD^^^mov     eax, [rbp+var_64]^^^mov     [r15+20h], eax^^^mov     rax, [rbp+var_38]^^^mov     edx, [rax+r14+54h]^^^imul    r13d, edx, 1FE0h^^^movsxd  r13, r13d^^^mov     rdi, r13^^^call    malloc^^^test    rax, rax^^^mov     [r15+10h], rax^^^jz      loc_45765E^^^add     rax, r13^^^add     [rbp+var_58], 1^^^add     r14, 68h^^^mov     [r15+18h], rax^^^add     r15, 38h^^^cmp     [rbp+var_58], r12^^^jb      loc_45744C^^^mov     rax, [rbp+var_60]^^^mov     rdx, [rbp+var_78]^^^mov     [rdx], rax^^^mov     eax, [rbp+var_68]^^^lea     rsp, [rbp-28h]^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^cmp     byte ptr [r15+2], 0^^^jnz     loc_457385^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rax, [rax]^^^mov     r12, [rax+0B0h]^^^mov     rdi, r12^^^call    strlen^^^lea     rcx, [rax+21h]^^^mov     rdx, rax^^^mov     rsi, r12^^^and     rcx, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rcx^^^lea     r15, [rsp+80h+var_78+7]^^^and     r15, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r15^^^call    mempcpy^^^mov     word ptr [rax], 2F2Fh^^^mov     byte ptr [rax+2], 0^^^jmp     loc_457385^^^mov     rbx, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, fs:[rbx]^^^mov     rdi, [rbp+var_38]^^^mov     rsi, r13^^^call    __gconv_close_transform^^^mov     fs:[rbx], r12d^^^mov     [rbp+var_68], 3^^^mov     [rbp+var_60], 0^^^jmp     loc_4575AD^^^mov     rcx, [rbp+var_60]^^^add     rcx, [rbp+var_70]^^^jmp     loc_45753D^^^cmp     [rbp+var_58], 0^^^mov     rbx, 0FFFFFFFFFFFFFFC0h^^^mov     r12d, fs:[rbx]^^^jz      loc_4576F3^^^mov     rcx, [rbp+var_58]^^^sub     rcx, 1^^^mov     rdx, rcx^^^mov     rax, rcx^^^mov     [rbp+var_58], rcx^^^shl     rdx, 3^^^shl     rax, 6^^^sub     rax, rdx^^^mov     rdx, [rbp+var_60]^^^lea     r15, [rdx+rax+40h]^^^nop     word ptr [rax+rax+00h]^^^mov     r13, [r15]^^^test    r13, r13^^^jnz     short loc_4576B3^^^jmp     short loc_4576D1^^^mov     r13, r14^^^mov     rax, [r13+10h]^^^mov     r14, [r13+20h]^^^test    rax, rax^^^jnz     loc_4577DF^^^mov     rdi, r13^^^call    free^^^test    r14, r14^^^jnz     short loc_4576B0^^^mov     rdi, [r15-30h]^^^sub     r15, 38h^^^call    free^^^cmp     [rbp+var_58], 0^^^jz      short loc_4576F3^^^mov     rcx, [rbp+var_58]^^^sub     rcx, 1^^^mov     [rbp+var_58], rcx^^^jmp     short loc_4576A0^^^mov     rdi, [rbp+var_60]^^^call    free^^^mov     r13, [rbp+var_50]^^^jmp     loc_45762D^^^lea     rbx, [rax+1]^^^mov     rsi, [rbp+var_58]^^^mov     rdx, rbx^^^sub     rdx, [rbp+var_58]^^^lea     rax, [rdx+1Fh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+80h+var_78+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     byte ptr [rdi+rdx], 0^^^call    memcpy^^^mov     rdi, rbx^^^mov     [rbp+var_58], rax^^^call    strlen^^^lea     rdx, [rax+1]^^^add     rax, 1Fh^^^mov     rsi, rbx^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+80h+var_78+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^call    memcpy^^^mov     r12, rax^^^movzx   eax, byte ptr [rax]^^^cmp     al, 2Ch^^^jnz     short loc_457774^^^add     r12, 1^^^movzx   eax, byte ptr [r12]^^^cmp     al, 2Ch^^^jz      short loc_457767^^^xor     ebx, ebx^^^test    al, al^^^mov     [rbp+var_64], 0^^^lea     r14, [r12+1]^^^jz      loc_4572E4^^^movzx   edx, byte ptr [r14]^^^test    dl, dl^^^jz      short loc_4577F1^^^cmp     dl, 2Ch^^^lea     rax, [r14+1]^^^jz      short loc_4577EA^^^mov     r14, rax^^^movzx   edx, byte ptr [r14]^^^test    dl, dl^^^jnz     short loc_457792^^^jmp     short loc_4577F1^^^lea     rdx, [rax+1]^^^mov     rsi, r15^^^sub     rdx, r15^^^lea     rax, [rdx+1Fh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     rdi, [rsp+80h+var_78+7]^^^and     rdi, 0FFFFFFFFFFFFFFF0h^^^mov     byte ptr [rdi+rdx], 0^^^call    memcpy^^^mov     r15, rax^^^jmp     loc_457313^^^mov     rdi, [r13+18h]^^^call    rax^^^jmp     loc_4576C4^^^mov     byte ptr [r14], 0^^^mov     r14, rax^^^xor     ebx, ebx^^^mov     [rbp+var_64], 0^^^test    r12, r12^^^jz      loc_4572E4^^^mov     edx, offset _nl_C_locobj^^^mov     esi, offset aTranslit^^^mov     rdi, r12^^^call    sub_400380^^^test    eax, eax^^^jnz     loc_4578D1^^^test    rbx, rbx^^^jz      loc_457964^^^cmp     qword ptr [rbx+20h], offset __gconv_transliterate^^^mov     rdx, rbx^^^jnz     short loc_457845^^^jmp     short loc_45788B^^^cmp     qword ptr [rax+20h], offset __gconv_transliterate^^^jz      short loc_45788B^^^mov     rdx, rax^^^mov     rax, [rdx+8]^^^test    rax, rax^^^jnz     short loc_457838^^^sub     rsp, 50h^^^mov     ecx, 8^^^lea     rsi, [rsp+0D0h+var_C1]^^^and     rsi, 0FFFFFFFFFFFFFFF0h^^^test    rdx, rdx^^^mov     rdi, rsi^^^rep stosq^^^mov     qword ptr [rsi+10h], offset internal_trans_names_10469^^^mov     qword ptr [rsi+18h], 1^^^mov     qword ptr [rsi+20h], offset __gconv_transliterate^^^jz      loc_45799F^^^mov     [rdx+8], rsi^^^movzx   eax, byte ptr [r14]^^^mov     r12, r14^^^cmp     al, 2Ch^^^jnz     short loc_4578A3^^^add     r12, 1^^^movzx   eax, byte ptr [r12]^^^cmp     al, 2Ch^^^jz      short loc_457896^^^test    al, al^^^jz      loc_4572E4^^^lea     rax, [r12+1]^^^jmp     short loc_4578B5^^^mov     rax, r14^^^movzx   edx, byte ptr [rax]^^^test    dl, dl^^^jz      loc_45795C^^^cmp     dl, 2Ch^^^lea     r14, [rax+1]^^^jnz     short loc_4578B2^^^mov     byte ptr [rax], 0^^^jmp     loc_4577FA^^^mov     edx, offset _nl_C_locobj^^^mov     esi, offset aIgnore^^^mov     rdi, r12^^^call    sub_400380^^^test    eax, eax^^^jz      short loc_457950^^^test    rbx, rbx^^^mov     r13, rbx^^^jnz     short loc_4578FB^^^nop^^^jmp     loc_4579A7^^^mov     r13, rax^^^mov     rsi, [r13+0]^^^test    rsi, rsi^^^jz      short loc_457919^^^mov     edx, offset _nl_C_locobj^^^mov     rdi, r12^^^call    sub_400380^^^test    eax, eax^^^jz      loc_45788B^^^mov     rax, [r13+8]^^^test    rax, rax^^^jnz     short loc_4578F8^^^sub     rsp, 50h^^^mov     ecx, 8^^^lea     rdx, [rsp+0D0h+var_C1]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^test    r13, r13^^^mov     rdi, rdx^^^rep stosq^^^mov     [rdx], r12^^^jz      loc_4579F3^^^mov     [r13+8], rdx^^^jmp     loc_45788B^^^mov     [rbp+var_64], 2^^^jmp     loc_45788B^^^mov     r14, rax^^^jmp     loc_4577FA^^^sub     rsp, 50h^^^mov     rax, rbx^^^mov     ecx, 8^^^lea     rdx, [rsp+0D0h+var_C1]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rdx^^^mov     rbx, rdx^^^rep stosq^^^mov     qword ptr [rdx+10h], offset internal_trans_names_10469^^^mov     qword ptr [rdx+18h], 1^^^mov     qword ptr [rdx+20h], offset __gconv_transliterate^^^jmp     loc_45788B^^^mov     rbx, rsi^^^jmp     loc_45788B^^^sub     rsp, 50h^^^mov     rax, rbx^^^mov     ecx, 8^^^lea     rdx, [rsp+0D0h+var_C1]^^^and     rdx, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, rdx^^^mov     rbx, rdx^^^rep stosq^^^mov     [rdx], r12^^^jmp     loc_45788B^^^mov     rdx, [rbp+var_58]^^^mov     rax, [rbp+var_58]^^^mov     rcx, [rbp+var_60]^^^shl     rdx, 3^^^shl     rax, 6^^^sub     rax, rdx^^^mov     edx, [rbp+var_64]^^^or      edx, 1^^^mov     [rcx+rax+20h], edx^^^jmp     loc_4575AD^^^mov     rbx, rdx^^^jmp     loc_45788B^^^test    r13, r13^^^jz      short loc_457A13^^^mov     rax, [r12+8]^^^mov     [r13+8], rax^^^mov     r12, [r12+8]^^^jmp     loc_4573DF^^^mov     r12, [r12+8]^^^mov     rbx, r12^^^jmp     loc_4573DF^^^
_L_lock_189$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_41A7EE^^^
__wcsmbs_getfct$$$push    rbp^^^xor     r8d, r8d^^^xor     ebp, ebp^^^push    rbx^^^mov     rbx, rdx^^^sub     rsp, 28h^^^lea     rdx, [rsp+38h+var_28]^^^mov     rcx, rsp^^^call    __gconv_find_transform^^^test    eax, eax^^^jnz     short loc_446703^^^mov     rsi, [rsp+38h+var_38]^^^cmp     rsi, 1^^^jbe     short loc_446710^^^mov     rdi, [rsp+38h+var_28]^^^call    __gconv_close_transform^^^add     rsp, 28h^^^mov     rax, rbp^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rbp, [rsp+38h+var_28]^^^mov     [rbx], rsi^^^add     rsp, 28h^^^pop     rbx^^^mov     rax, rbp^^^pop     rbp^^^retn^^^
_IO_remove_marker$$$mov     rdx, [rdi+8]^^^mov     rax, [rdx+60h]^^^test    rax, rax^^^jz      short locret_42CEF0^^^add     rdx, 60h^^^cmp     rdi, rax^^^jnz     short loc_42CEE5^^^jmp     short loc_42CEF8^^^cmp     rdi, rax^^^jz      short loc_42CEF8^^^mov     rdx, rax^^^mov     rax, [rax]^^^test    rax, rax^^^jnz     short loc_42CEE0^^^rep retn^^^mov     rax, [rdi]^^^mov     [rdx], rax^^^retn^^^
setenv$$$mov     [rsp+var_18], rbx^^^mov     [rsp+var_10], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_8], r12^^^sub     rsp, 18h^^^test    rdi, rdi^^^mov     rbp, rsi^^^mov     r12d, edx^^^jz      short loc_418F28^^^cmp     byte ptr [rdi], 0^^^jz      short loc_418F28^^^mov     esi, 3Dh^^^call    sub_4003C0^^^test    rax, rax^^^jnz     short loc_418F28^^^mov     edx, r12d^^^mov     rsi, rbp^^^mov     rdi, rbx^^^mov     rbp, [rsp+18h+var_10]^^^mov     rbx, [rsp+18h+var_18]^^^mov     r12, [rsp+18h+var_8]^^^add     rsp, 18h^^^jmp     __add_to_environ_constprop_0^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbx, [rsp+18h+var_18]^^^mov     rbp, [rsp+18h+var_10]^^^mov     r12, [rsp+18h+var_8]^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^add     rsp, 18h^^^retn^^^
__mpn_submul_1$$$push    rbx^^^push    rbp^^^lea     rbx, [rdx]^^^neg     rbx^^^mov     rax, [rsi]^^^mov     r10, [rdi]^^^lea     rdi, [rdi+rdx*8-10h]^^^lea     rsi, [rsi+rdx*8]^^^mul     rcx^^^bt      ebx, 0^^^jb      short loc_464464^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^lea     rbp, [rdx]^^^mul     rcx^^^add     rbx, 2^^^jns     loc_4644E8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^lea     r9, [rdx]^^^jmp     short loc_4644B0^^^add     rbx, 1^^^jns     loc_4644F8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^lea     r9, [rdx]^^^mul     rcx^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^lea     rbp, [rdx]^^^jmp     short loc_4644D1^^^mul     rcx^^^sub     r10, r8^^^lea     r8, [rax]^^^mov     rax, [rsi+rbx*8]^^^adc     r11, r9^^^mov     [rdi+rbx*8-8], r10^^^mov     r10, [rdi+rbx*8]^^^lea     r9, [rdx]^^^adc     rbp, 0^^^mul     rcx^^^sub     r10, r11^^^lea     r11, [rax]^^^mov     rax, [rsi+rbx*8+8]^^^adc     r8, rbp^^^mov     [rdi+rbx*8], r10^^^mov     r10, [rdi+rbx*8+8]^^^lea     rbp, [rdx]^^^adc     r9, 0^^^add     rbx, 2^^^js      short loc_464490^^^mul     rcx^^^sub     r10, r8^^^adc     r11, r9^^^mov     [rdi-8], r10^^^adc     rbp, 0^^^mov     r10, [rdi]^^^sub     r10, r11^^^adc     rax, rbp^^^mov     [rdi], r10^^^adc     rdx, 0^^^mov     r10, [rdi+8]^^^sub     r10, rax^^^mov     [rdi+8], r10^^^mov     eax, ebx^^^adc     rax, rdx^^^pop     rbp^^^pop     rbx^^^retn^^^
_L_unlock_10434$$$lea     rdi, main_arena^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_40758B^^^
_L_lock_2463$$$lea     rdi, [rdx]^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_403A4A^^^
_IO_file_underflow_mmap$$$push    rbx^^^mov     rax, [rdi+8]^^^mov     rbx, rdi^^^cmp     rax, [rdi+10h]^^^jnb     short loc_429E28^^^movzx   eax, byte ptr [rax]^^^pop     rbx^^^retn^^^call    mmap_remap_check^^^test    eax, eax^^^nop^^^jnz     short loc_429E46^^^mov     rax, [rbx+8]^^^cmp     rax, [rbx+10h]^^^jb      short loc_429E1E^^^or      dword ptr [rbx], 10h^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^mov     rax, [rbx+0D8h]^^^mov     rdi, rbx^^^pop     rbx^^^mov     rax, [rax+20h]^^^jmp     rax^^^
_L_lock_619$$$lea     rdi, list_all_lock^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_42B88B^^^
group_number_0$$$push    rbp^^^mov     rbp, rsp^^^push    r15^^^mov     r15d, ecx^^^push    r14^^^push    r13^^^push    r12^^^push    rbx^^^mov     rbx, rsi^^^push    rax^^^mov     r12b, [rdx]^^^lea     eax, [r12-1]^^^cmp     al, 7Dh^^^ja      loc_400C91^^^lea     r14, [rdx+1]^^^mov     rdx, rsi^^^mov     rsi, rdi^^^sub     rdx, rdi^^^movsx   r12d, r12b^^^and     rdx, 0FFFFFFFFFFFFFFFCh^^^lea     rax, [rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r13, [rsp+30h+var_21]^^^and     r13, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r13^^^call    mempcpy^^^mov     rdi, rbx^^^jmp     short loc_400C8C^^^sub     rax, 4^^^dec     r12d^^^lea     rdx, [rdi-4]^^^mov     ecx, [rax]^^^mov     [rdi-4], ecx^^^jnz     short loc_400C89^^^cmp     rax, r13^^^jbe     short loc_400C89^^^mov     [rdi-8], r15d^^^mov     r12b, [r14]^^^lea     rdx, [rdi-8]^^^test    r12b, r12b^^^js      short loc_400C60^^^cmp     r12b, 7Fh^^^jnz     short loc_400C76^^^mov     rdi, rdx^^^sub     rax, 4^^^sub     rdi, 4^^^mov     edx, [rax]^^^cmp     rax, r13^^^mov     [rdi], edx^^^ja      short loc_400C63^^^jmp     short loc_400C91^^^test    r12b, r12b^^^jz      short loc_400C84^^^movsx   r12d, r12b^^^inc     r14^^^jmp     short loc_400C89^^^movsx   r12d, byte ptr [r14-1]^^^mov     rdi, rdx^^^cmp     rax, r13^^^ja      short loc_400C33^^^lea     rsp, [rbp-28h]^^^mov     rax, rdi^^^pop     rbx^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^pop     rbp^^^retn^^^
_dl_name_match_p$$$push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^sub     rsp, 8^^^mov     rsi, [rsi+8]^^^call    sub_4003A0^^^test    eax, eax^^^mov     edx, 1^^^jz      short loc_45606D^^^mov     rbx, [rbx+38h]^^^xor     dl, dl^^^test    rbx, rbx^^^jnz     short loc_456059^^^jmp     short loc_45606D^^^mov     rbx, [rbx+8]^^^test    rbx, rbx^^^jz      short loc_456080^^^mov     rsi, [rbx]^^^mov     rdi, rbp^^^call    sub_4003A0^^^test    eax, eax^^^jnz     short loc_456050^^^mov     edx, 1^^^add     rsp, 8^^^mov     eax, edx^^^pop     rbx^^^pop     rbp^^^retn^^^add     rsp, 8^^^xor     edx, edx^^^pop     rbx^^^mov     eax, edx^^^pop     rbp^^^retn^^^
_dl_open$$$push    rbp^^^mov     rbp, rsp^^^mov     [rbp+var_28], rbx^^^mov     [rbp+var_20], r12^^^mov     ebx, esi^^^mov     [rbp+var_18], r13^^^mov     [rbp+var_10], r14^^^mov     r12, rdi^^^mov     [rbp+var_8], r15^^^sub     rsp, 0B0h^^^test    sil, 3^^^mov     r13, rdx^^^mov     r14, rcx^^^mov     r15d, r8d^^^jz      loc_48BA86^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48B859^^^mov     edi, offset _dl_load_lock^^^mov     [rbp+var_A8], r9^^^call    near ptr 0^^^mov     r9, [rbp+var_A8]^^^cmp     r14, 0FFFFFFFFFFFFFFFFh^^^jz      loc_48BA5E^^^cmp     r14, 0FFFFFFFFFFFFFFFEh^^^jnz     loc_48BA1D^^^cmp     r14, 0FFFFFFFFFFFFFFFEh^^^jz      short loc_48B878^^^test    r14, r14^^^jnz     short loc_48B886^^^cmp     cs:_dl_ns, 0^^^jz      loc_48B938^^^mov     rax, [rbp+8]^^^lea     r8, [rbp+var_A0]^^^lea     rdx, [rbp+var_31]^^^lea     rsi, [rbp+var_40]^^^lea     rdi, [rbp+var_50]^^^mov     ecx, offset dl_open_worker^^^mov     [rbp+var_A0], r12^^^mov     [rbp+var_68], r9^^^mov     [rbp+var_88], rax^^^mov     rax, [rbp+arg_0]^^^mov     [rbp+var_98], ebx^^^mov     [rbp+var_90], r13^^^mov     [rbp+var_80], 0^^^mov     [rbp+var_78], r14^^^mov     [rbp+var_70], r15d^^^mov     [rbp+var_60], rax^^^call    _dl_catch_error^^^mov     r12d, eax^^^call    _dl_unload_cache^^^cmp     [rbp+var_40], 0^^^jnz     short loc_48B956^^^mov     rsi, [rbp+var_78]^^^xor     edi, edi^^^call    _dl_debug_initialize^^^mov     eax, [rax+18h]^^^test    eax, eax^^^jnz     loc_48BA04^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48B917^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     rax, [rbp+var_80]^^^mov     rbx, [rbp+var_28]^^^mov     r12, [rbp+var_20]^^^mov     r13, [rbp+var_18]^^^mov     r14, [rbp+var_10]^^^mov     r15, [rbp+var_8]^^^leave^^^retn^^^cmp     cs:_dl_nns, 0^^^jnz     loc_48B886^^^mov     cs:_dl_nns, 1^^^jmp     loc_48B886^^^mov     rdi, [rbp+var_80]^^^test    rdi, rdi^^^jz      short loc_48B973^^^and     ebx, 8000000h^^^jnz     short loc_48B96E^^^mov     cs:_dl_tls_dtv_gaps, 1^^^call    _dl_close_worker^^^mov     rsi, [rbp+var_78]^^^xor     edi, edi^^^call    _dl_debug_initialize^^^cmp     dword ptr [rax+18h], 0^^^jnz     loc_48BA9A^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48B99C^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     r13, [rbp+var_40]^^^or      rdx, 0FFFFFFFFFFFFFFFFh^^^xor     eax, eax^^^mov     rcx, rdx^^^mov     rdi, r13^^^repne scasb^^^mov     rbx, rcx^^^not     rbx^^^lea     rdi, [r13+rbx+0]^^^cmp     rdi, [rbp+var_50]^^^jz      loc_48BAB3^^^lea     rax, [rbx+1Eh]^^^mov     rdx, rbx^^^mov     rsi, r13^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+0B0h+var_A8+7]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r14^^^call    memcpy^^^cmp     [rbp+var_31], 0^^^jz      short loc_48B9F3^^^mov     rdi, r13^^^call    free^^^mov     rsi, [rbp+var_50]^^^mov     rcx, r14^^^xor     edx, edx^^^mov     edi, r12d^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___12060^^^mov     edx, 2B8h^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset a_dl_debug_init^^^call    __assert_fail^^^test    r14, r14^^^jz      loc_48B86D^^^imul    rax, r14, 90h^^^cmp     ds:dword_6C5FE8[rax], 0^^^jz      short loc_48BA4A^^^mov     rax, ds:_dl_ns[rax]^^^test    byte ptr [rax+315h], 8^^^jz      loc_48B86D^^^mov     ecx, offset aInvalidTargetN^^^xor     edx, edx^^^mov     rsi, r12^^^mov     edi, 16h^^^call    _dl_signal_error^^^mov     eax, 0^^^test    rax, rax^^^jz      short loc_48BA72^^^mov     edi, offset _dl_load_lock^^^call    near ptr 0^^^mov     ecx, offset aNoMoreNamespac^^^xor     edx, edx^^^mov     rsi, r12^^^mov     edi, 16h^^^call    _dl_signal_error^^^mov     rsi, rdi^^^mov     ecx, offset aInvalidModeFor^^^xor     edx, edx^^^mov     edi, 16h^^^call    _dl_signal_error^^^mov     ecx, offset __PRETTY_FUNCTION___12060^^^mov     edx, 29Bh^^^mov     esi, offset aDlOpen_c^^^mov     edi, offset a_dl_debug_init^^^call    __assert_fail^^^mov     rcx, rdx^^^mov     rsi, r13^^^repne scasb^^^mov     rdx, rcx^^^not     rdx^^^lea     rdx, [rbx+rdx]^^^lea     rax, [rdx+1Eh]^^^and     rax, 0FFFFFFFFFFFFFFF0h^^^sub     rsp, rax^^^lea     r14, [rsp+0B0h+var_A8+7]^^^and     r14, 0FFFFFFFFFFFFFFF0h^^^mov     rdi, r14^^^add     rbx, r14^^^call    memcpy^^^mov     [rbp+var_50], rbx^^^jmp     loc_48B9E5^^^
__mpn_construct_long_double$$$movzx   eax, byte ptr [rsp+var_18+9]^^^shl     edx, 7^^^add     si, 3FFFh^^^and     si, 7FFFh^^^and     eax, 7Fh^^^or      eax, edx^^^mov     byte ptr [rsp+var_18+9], al^^^movzx   eax, word ptr [rsp-10h]^^^and     ax, 8000h^^^or      eax, esi^^^mov     [rsp-10h], ax^^^mov     rax, [rdi]^^^mov     dword ptr [rsp+var_18], eax^^^shr     rax, 20h^^^mov     dword ptr [rsp+var_18+4], eax^^^fld     [rsp+var_18]^^^retn^^^
sub_40A673$$$mov     [rdi-2], dx^^^jmp     short sub_40A6AA^^^
sub_40A670$$$mov     [rdi-3], dl^^^
_L_lock_160$$$lea     rdi, lock_1^^^sub     rsp, 80h^^^call    __lll_lock_wait_private^^^add     rsp, 80h^^^jmp     loc_4179FA^^^
_L_unlock_2670$$$lea     rdi, list_lock^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_403C1D^^^
sub_40D070$$$mov     [rdi-1], dl^^^jmp     short loc_40D0CA^^^mov     [rdi-0Bh], dl^^^mov     [rdi-0Ah], dx^^^mov     [rdi-8], rdx^^^jmp     short loc_40D0CA^^^mov     [rdi-3], dl^^^mov     [rdi-2], dx^^^jmp     short loc_40D0CA^^^mov     [rdi-5], dl^^^mov     [rdi-4], edx^^^jmp     short loc_40D0CA^^^mov     [rdi-0Fh], dl^^^mov     [rdi-0Eh], dx^^^mov     [rdi-0Ch], edx^^^mov     [rdi-8], rdx^^^jmp     short loc_40D0CA^^^mov     [rdi-7], dl^^^mov     [rdi-6], dx^^^mov     [rdi-4], edx^^^nop     word ptr [rax+rax+00h]^^^cmp     r8, 2000h^^^jnb     short loc_40D150^^^nop     dword ptr [rax+00000000h]^^^mov     rcx, r8^^^shr     rcx, 7^^^jz      short loc_40D13B^^^nop     dword ptr [rax+00000000h]^^^dec     rcx^^^mov     [rdi], rdx^^^mov     [rdi+8], rdx^^^mov     [rdi+10h], rdx^^^mov     [rdi+18h], rdx^^^mov     [rdi+20h], rdx^^^mov     [rdi+28h], rdx^^^mov     [rdi+30h], rdx^^^mov     [rdi+38h], rdx^^^mov     [rdi+40h], rdx^^^mov     [rdi+48h], rdx^^^mov     [rdi+50h], rdx^^^mov     [rdi+58h], rdx^^^mov     [rdi+60h], rdx^^^mov     [rdi+68h], rdx^^^mov     [rdi+70h], rdx^^^mov     [rdi+78h], rdx^^^lea     rdi, [rdi+80h]^^^jnz     short loc_40D0F0^^^and     r8d, 7Fh^^^lea     rdi, [rdi+r8]^^^lea     r11, off_498D60^^^jmp     qword ptr [r11+r8*8]^^^mov     r9d, dword ptr cs:__x86_64_shared_cache_size^^^cmp     r9, r8^^^cmova   r9, r8^^^jbe     short loc_40D170^^^cmp     r8, 10000h^^^jnb     loc_40D0E0^^^nop     dword ptr [rax]^^^mov     rcx, r9^^^and     r9, 0FFFFFFFFFFFFFFF8h^^^shr     rcx, 3^^^jz      short loc_40D184^^^xchg    rax, rdx^^^rep stosq^^^xchg    rax, rdx^^^sub     r8, r9^^^ja      short loc_40D1A0^^^and     r8d, 7^^^lea     rdi, [rdi+r8]^^^lea     r11, off_498D60^^^jmp     qword ptr [r11+r8*8]^^^mov     rcx, r8^^^shr     rcx, 7^^^jz      short loc_40D20E^^^nop     dword ptr [rax+00000000h]^^^dec     rcx^^^movnti  qword ptr [rdi], rdx^^^movnti  qword ptr [rdi+8], rdx^^^movnti  qword ptr [rdi+10h], rdx^^^movnti  qword ptr [rdi+18h], rdx^^^movnti  qword ptr [rdi+20h], rdx^^^movnti  qword ptr [rdi+28h], rdx^^^movnti  qword ptr [rdi+30h], rdx^^^movnti  qword ptr [rdi+38h], rdx^^^movnti  qword ptr [rdi+40h], rdx^^^movnti  qword ptr [rdi+48h], rdx^^^movnti  qword ptr [rdi+50h], rdx^^^movnti  qword ptr [rdi+58h], rdx^^^movnti  qword ptr [rdi+60h], rdx^^^movnti  qword ptr [rdi+68h], rdx^^^movnti  qword ptr [rdi+70h], rdx^^^movnti  qword ptr [rdi+78h], rdx^^^lea     rdi, [rdi+80h]^^^jnz     short loc_40D1B0^^^sfence^^^and     r8d, 7Fh^^^lea     rdi, [rdi+r8]^^^lea     r11, off_498D60^^^jmp     qword ptr [r11+r8*8]^^^
sub_437A50$$$test    rdx, rdx^^^jz      short locret_437AD3^^^mov     rax, [rsi]^^^sub     rdi, 8^^^jmp     short loc_437A18^^^sub     rdx, 1^^^mov     rcx, [rsi]^^^jz      short loc_437AD0^^^add     rsi, 8^^^jmp     short loc_437A12^^^mov     rax, [rsi]^^^add     rdx, 6^^^sub     rsi, 30h^^^sub     rdi, 38h^^^jmp     loc_4379F8^^^mov     rcx, [rsi]^^^add     rdx, 5^^^sub     rsi, 28h^^^sub     rdi, 30h^^^jmp     loc_4379F0^^^mov     rax, [rsi]^^^add     rdx, 4^^^sub     rsi, 20h^^^sub     rdi, 28h^^^jmp     loc_4379E8^^^mov     rcx, [rsi]^^^add     rdx, 3^^^sub     rsi, 18h^^^sub     rdi, 20h^^^jmp     loc_4379E0^^^mov     [rdi], rcx^^^rep retn^^^mov     rax, [rsi+20h]^^^mov     [rdi+20h], rcx^^^mov     rcx, [rsi+28h]^^^mov     [rdi+28h], rax^^^mov     rax, [rsi+30h]^^^mov     [rdi+30h], rcx^^^mov     rcx, [rsi+38h]^^^mov     [rdi+38h], rax^^^add     rdi, 40h^^^sub     rdx, 8^^^jz      loc_437AD0^^^add     rsi, 40h^^^mov     rax, [rsi]^^^mov     [rdi], rcx^^^mov     rcx, [rsi+8]^^^mov     [rdi+8], rax^^^mov     rax, [rsi+10h]^^^mov     [rdi+10h], rcx^^^mov     rcx, [rsi+18h]^^^mov     [rdi+18h], rax^^^jmp     short loc_4379E0^^^
__strtold_internal$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^jmp     ____strtold_l_internal^^^
__ctype_toupper_loc$$$mov     rax, 0FFFFFFFFFFFFFFD8h^^^add     rax, fs:0^^^retn^^^
__strtod_internal$$$mov     rax, 0FFFFFFFFFFFFFFA0h^^^mov     rcx, fs:[rax]^^^jmp     ____strtod_l_internal^^^
two_way_long_needle$$$push    r15^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rdi^^^push    rbp^^^mov     rbp, rsi^^^mov     rsi, rcx^^^push    rbx^^^mov     rbx, rdx^^^mov     rdi, rbx^^^sub     rsp, 858h^^^lea     rdx, [rsp+888h+var_48]^^^mov     [rsp+888h+var_878], rcx^^^call    critical_factorization^^^movq    xmm1, [rsp+888h+var_878]^^^mov     [rsp+888h+var_870], rax^^^punpcklqdq xmm1, xmm1^^^lea     rax, [rsp+888h+var_848]^^^lea     rdx, [rsp+888h+var_48]^^^movdqa  xmm0, xmm1^^^nop     word ptr [rax+rax+00h]^^^movdqa  xmmword ptr [rax], xmm0^^^add     rax, 10h^^^cmp     rax, rdx^^^jnz     short loc_4455C8^^^cmp     [rsp+888h+var_878], 0^^^jz      short loc_44560A^^^mov     rsi, [rsp+888h+var_878]^^^xor     eax, eax^^^sub     rsi, 1^^^nop     dword ptr [rax+rax+00000000h]^^^mov     rcx, rsi^^^movzx   edx, byte ptr [rbx+rax]^^^sub     rcx, rax^^^add     rax, 1^^^cmp     rax, [rsp+888h+var_878]^^^mov     [rsp+rdx*8+888h+var_848], rcx^^^jnz     short loc_4455F0^^^mov     rcx, [rsp+888h+var_48]^^^mov     rdx, [rsp+888h+var_870]^^^mov     rdi, rbx^^^xor     r14d, r14d^^^mov     rsi, rcx^^^mov     [rsp+888h+var_868], rcx^^^add     rsi, rbx^^^call    sub_400370^^^xor     r8d, r8d^^^test    eax, eax^^^jnz     loc_44578F^^^mov     rcx, [rsp+888h+var_878]^^^mov     rsi, [rsp+888h+var_870]^^^sub     rcx, [rsp+888h+var_868]^^^mov     r13, [rsp+888h+var_878]^^^mov     [rsp+888h+var_850], 1^^^mov     rax, [rsp+888h+var_870]^^^sub     rsi, 1^^^sub     [rsp+888h+var_850], rax^^^sub     r13, 1^^^mov     [rsp+888h+var_860], rsi^^^mov     [rsp+888h+var_858], rcx^^^jmp     short loc_445691^^^test    r14, r14^^^jz      short loc_445688^^^cmp     [rsp+888h+var_868], rax^^^cmova   rax, [rsp+888h+var_858]^^^add     r8, rax^^^xor     r14d, r14d^^^mov     rbp, r15^^^mov     r15, [rsp+888h+var_878]^^^lea     rdi, [r12+rbp]^^^xor     esi, esi^^^mov     [rsp+888h+var_880], r8^^^add     r15, r8^^^mov     rdx, r15^^^sub     rdx, rbp^^^call    memchr^^^test    rax, rax^^^mov     r8, [rsp+888h+var_880]^^^jnz     loc_44577B^^^test    r15, r15^^^jz      loc_44577D^^^movzx   eax, byte ptr [r12+r15-1]^^^mov     rax, [rsp+rax*8+888h+var_848]^^^test    rax, rax^^^jnz     short loc_445678^^^cmp     r14, [rsp+888h+var_870]^^^mov     rax, [rsp+888h+var_870]^^^cmovnb  rax, r14^^^cmp     rax, r13^^^jnb     short loc_445720^^^lea     rdx, [r12+r8]^^^jmp     short loc_4456F9^^^add     rax, 1^^^cmp     rax, r13^^^jnb     short loc_445720^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jz      short loc_4456F0^^^mov     rcx, [rsp+888h+var_850]^^^xor     r14d, r14d^^^add     rcx, r8^^^lea     r8, [rcx+rax]^^^jmp     loc_44568E^^^mov     rax, [rsp+888h+var_870]^^^cmp     r14, rax^^^jnb     short loc_44575F^^^mov     rax, [rsp+888h+var_860]^^^lea     rdx, [r12+r8]^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jz      short loc_44575A^^^jmp     loc_4458AF^^^movzx   ecx, byte ptr [rax+rdx-1]^^^lea     rsi, [rax-1]^^^cmp     [rbx+rax-1], cl^^^jnz     short loc_44575F^^^mov     rax, rsi^^^cmp     rax, r14^^^jnz     short loc_445748^^^add     r14, 1^^^cmp     rax, r14^^^jb      loc_4458B9^^^add     r8, [rsp+888h+var_868]^^^mov     r14, [rsp+888h+var_858]^^^jmp     loc_44568E^^^xor     eax, eax^^^add     rsp, 858h^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^mov     rax, [rsp+888h+var_878]^^^sub     rax, [rsp+888h+var_870]^^^cmp     rax, [rsp+888h+var_870]^^^mov     rcx, [rsp+888h+var_870]^^^cmovb   rax, [rsp+888h+var_870]^^^mov     r13, [rsp+888h+var_878]^^^xor     r15d, r15d^^^mov     [rsp+888h+var_860], 1^^^sub     rcx, 1^^^sub     r13, 1^^^mov     [rsp+888h+var_868], rcx^^^add     rax, 1^^^mov     [rsp+888h+var_858], rax^^^mov     [rsp+888h+var_48], rax^^^mov     rax, [rsp+888h+var_870]^^^sub     [rsp+888h+var_860], rax^^^nop     word ptr [rax+rax+00h]^^^mov     r14, [rsp+888h+var_878]^^^lea     rdi, [r12+rbp]^^^xor     esi, esi^^^add     r14, r15^^^mov     rdx, r14^^^sub     rdx, rbp^^^call    memchr^^^test    rax, rax^^^jnz     loc_44577B^^^test    r14, r14^^^jz      loc_44577D^^^movzx   eax, byte ptr [r12+r14-1]^^^mov     rax, [rsp+rax*8+888h+var_848]^^^test    rax, rax^^^jnz     short loc_44589D^^^cmp     [rsp+888h+var_870], r13^^^lea     rdx, [r12+r15]^^^jnb     short loc_445852^^^mov     rax, [rsp+888h+var_870]^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jz      short loc_445849^^^jmp     short loc_445898^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_445898^^^add     rax, 1^^^cmp     rax, r13^^^jb      short loc_445840^^^cmp     [rsp+888h+var_868], 0FFFFFFFFFFFFFFFFh^^^jz      short loc_44588B^^^mov     rax, [rsp+888h+var_868]^^^mov     rcx, [rsp+888h+var_868]^^^movzx   eax, byte ptr [rdx+rax]^^^cmp     [rbx+rcx], al^^^jnz     short loc_4458A8^^^mov     rax, rcx^^^jmp     short loc_445881^^^movzx   ecx, byte ptr [rdx+rax]^^^cmp     [rbx+rax], cl^^^jnz     short loc_4458A8^^^sub     rax, 1^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jnz     short loc_445878^^^mov     rax, rdx^^^jmp     loc_44577D^^^add     r15, [rsp+888h+var_860]^^^add     r15, rax^^^mov     rbp, r14^^^jmp     loc_4457E8^^^add     r15, [rsp+888h+var_858]^^^jmp     short loc_4458A0^^^mov     rax, [rsp+888h+var_870]^^^jmp     loc_44575F^^^lea     rax, [r12+r8]^^^jmp     loc_44577D^^^
closedir$$$test    rdi, rdi^^^push    rbx^^^jz      short loc_44BFA8^^^mov     ebx, [rdi]^^^call    free^^^mov     edi, ebx^^^pop     rbx^^^jmp     __close_nocancel^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 16h^^^mov     eax, 0FFFFFFFFh^^^pop     rbx^^^retn^^^
is_dst$$$movzx   r9d, byte ptr [rsi]^^^xor     r10d, r10d^^^cmp     r9b, 7Bh^^^jz      short loc_44E968^^^xor     eax, eax^^^cmp     r9b, [rdx]^^^jz      short loc_44E91F^^^jmp     short loc_44E924^^^add     rax, 1^^^movzx   r9d, byte ptr [rsi+rax]^^^cmp     r9b, [rdx+rax]^^^jnz     short loc_44E924^^^test    r9b, r9b^^^jnz     short loc_44E910^^^test    r10b, r10b^^^jz      short loc_44E940^^^sub     rsi, 1^^^add     rax, 2^^^cmp     r9b, 7Dh^^^jz      short loc_44E946^^^xor     eax, eax^^^retn^^^cmp     r9b, 2Fh^^^jnz     short loc_44E950^^^test    r8d, r8d^^^jnz     short loc_44E979^^^rep retn^^^test    r9b, r9b^^^jz      short loc_44E946^^^test    ecx, ecx^^^jz      short loc_44E937^^^cmp     r9b, 3Ah^^^jnz     short loc_44E937^^^nop^^^jmp     short loc_44E946^^^movzx   r9d, byte ptr [rsi+1]^^^mov     r10d, 1^^^add     rsi, 1^^^jmp     short loc_44E8FD^^^movzx   edx, byte ptr [rsi+rax]^^^cmp     dl, 2Fh^^^jz      short loc_44E992^^^test    dl, dl^^^jz      short loc_44E992^^^test    ecx, ecx^^^jz      short loc_44E937^^^cmp     dl, 3Ah^^^nop     dword ptr [rax]^^^jnz     short loc_44E937^^^add     rdi, 1^^^cmp     rsi, rdi^^^jz      short locret_44E94B^^^test    ecx, ecx^^^jz      short loc_44E9AD^^^cmp     byte ptr [rsi-2], 3Ah^^^mov     edx, 0^^^cmovnz  rax, rdx^^^retn^^^xor     eax, eax^^^retn^^^
__exit_thread$$$mov     eax, 3Ch^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF001h^^^jnb     __syscall_error^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^nop^^^
__gconv_get_cache$$$mov     rax, cs:gconv_cache^^^retn^^^
__gconv_close_transform$$$push    r13^^^xor     eax, eax^^^push    r12^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^mov     rbx, rsi^^^mov     esi, 1^^^sub     rsp, 8^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458C60^^^lock cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_4226^^^jmp     short loc_458C6D^^^cmpxchg cs:__gconv_lock, esi^^^jnz     _L_lock_4226^^^test    rbx, rbx^^^jz      short loc_458C9A^^^lea     rax, [rbx+rbx*2]^^^mov     r12, rbx^^^lea     rax, [rbx+rax*4]^^^lea     r13, [rbp+rax*8-68h]^^^nop     word ptr [rax+rax+00h]^^^mov     rdi, r13^^^sub     r13, 68h^^^call    __gconv_release_step^^^sub     r12, 1^^^jnz     short loc_458C88^^^mov     rsi, rbx^^^mov     rdi, rbp^^^call    __gconv_release_cache^^^cmp     cs:__libc_multiple_threads, 0^^^jz      short loc_458CBD^^^lock dec cs:__gconv_lock^^^jnz     _L_unlock_4258^^^jmp     short loc_458CC9^^^dec     cs:__gconv_lock^^^jnz     _L_unlock_4258^^^add     rsp, 8^^^xor     eax, eax^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^retn^^^
__mpn_construct_double$$$mov     rax, [rdi]^^^add     si, 3FFh^^^shl     rdx, 3Fh^^^and     esi, 7FFh^^^shl     rsi, 34h^^^mov     ecx, eax^^^or      rdx, rsi^^^mov     rsi, 0FFFFF00000000h^^^and     rax, rsi^^^or      rdx, rcx^^^or      rdx, rax^^^mov     [rsp+var_8], rdx^^^movsd   xmm0, [rsp+var_8]^^^retn^^^
_dl_tlsdesc_return$$$mov     rax, [rax+8]^^^retn^^^
__gconv_get_modules_db$$$mov     rax, cs:__gconv_modules_db^^^retn^^^
__sigsetjmp$$$mov     [rdi], rbx^^^mov     rax, rbp^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rdi+8], rax^^^mov     [rdi+10h], r12^^^mov     [rdi+18h], r13^^^mov     [rdi+20h], r14^^^mov     [rdi+28h], r15^^^lea     rdx, [rsp+arg_0]^^^xor     rdx, fs:30h^^^rol     rdx, 11h^^^mov     [rdi+30h], rdx^^^mov     rax, [rsp+0]^^^xor     rax, fs:30h^^^rol     rax, 11h^^^mov     [rdi+38h], rax^^^jmp     __sigjmp_save^^^
round_and_return_0$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 38h^^^cmp     rsi, 0FFFFFFFFFFFFFC02h^^^mov     rbp, rdi^^^mov     r13d, edx^^^mov     r12, rcx^^^jge     loc_47D8A8^^^cmp     rsi, 0FFFFFFFFFFFFFBCDh^^^jl      loc_47D928^^^mov     edx, 1^^^mov     ecx, r8d^^^mov     rax, 0FFFFFFFFFFFFFC02h^^^shl     rdx, cl^^^sub     rax, rsi^^^sub     rdx, 1^^^test    rdx, r12^^^mov     r12, [rdi]^^^setnz   dl^^^movzx   edx, dl^^^or      r9d, edx^^^cmp     rax, 35h^^^jz      loc_47D960^^^mov     ecx, eax^^^mov     edx, 1^^^mov     rsi, rdi^^^mov     [rsp+38h+var_30], r9d^^^call    __mpn_rshift^^^mov     r9d, [rsp+38h+var_30]^^^mov     r8, 0FFFFFFFFFFFFFC01h^^^sub     r8d, ebx^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbx, 0FFFFFFFFFFFFFC01h^^^mov     dword ptr fs:[rax], 22h^^^bt      r12, r8^^^mov     esi, ebx^^^jb      short loc_47D8F0^^^mov     edx, r13d^^^mov     rdi, rbp^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     __mpn_construct_double^^^cmp     rsi, 400h^^^jle     short loc_47D878^^^test    r13d, r13d^^^movsd   xmm0, cs:qword_4B29A0^^^jnz     short loc_47D8E0^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^movsd   xmm0, cs:qword_4B29A8^^^jmp     short loc_47D8BE^^^test    r9d, r9d^^^mov     rax, [rbp+0]^^^jz      short loc_47D940^^^add     rax, 1^^^mov     rdx, 20000000000000h^^^test    rax, rdx^^^mov     [rbp+0], rax^^^jnz     short loc_47D980^^^cmp     rbx, 0FFFFFFFFFFFFFC01h^^^jz      loc_47D9C0^^^mov     esi, ebx^^^jmp     loc_47D880^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xorpd   xmm0, xmm0^^^mov     dword ptr fs:[rax], 22h^^^jmp     short loc_47D8BE^^^test    al, 1^^^jnz     short loc_47D8F9^^^mov     edx, 1^^^mov     ecx, r8d^^^shl     rdx, cl^^^sub     rdx, 1^^^test    rdx, r12^^^jz      loc_47D880^^^jmp     short loc_47D8F9^^^xor     eax, eax^^^test    r12, r12^^^mov     qword ptr [rdi], 0^^^setnz   al^^^mov     r8d, 34h^^^or      r9d, eax^^^jmp     loc_47D863^^^add     rbx, 1^^^mov     ecx, 1^^^mov     edx, 1^^^mov     rsi, rbp^^^mov     rdi, rbp^^^call    __mpn_rshift^^^mov     rax, 10000000000000h^^^or      [rbp+0], rax^^^cmp     rbx, 401h^^^jz      loc_47D8B1^^^jmp     loc_47D91D^^^mov     rdx, 10000000000000h^^^and     rax, rdx^^^cmp     rax, 1^^^sbb     esi, esi^^^sub     esi, 3FEh^^^jmp     loc_47D880^^^
_IO_wfile_overflow$$$push    rbp^^^mov     ebp, esi^^^push    rbx^^^mov     rbx, rdi^^^sub     rsp, 8^^^mov     eax, [rdi]^^^test    al, 8^^^jz      short loc_428CC8^^^or      eax, 20h^^^mov     ebp, 0FFFFFFFFh^^^mov     [rdi], eax^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     dword ptr fs:[rax], 9^^^add     rsp, 8^^^mov     eax, ebp^^^pop     rbx^^^pop     rbp^^^retn^^^test    ah, 8^^^jnz     short loc_428D36^^^mov     rdx, [rdi+0A0h]^^^cmp     qword ptr [rdx+18h], 0^^^jz      loc_428EA0^^^mov     rcx, [rdx]^^^mov     rsi, [rdx+38h]^^^cmp     rcx, rsi^^^jz      loc_428E68^^^mov     [rdx+28h], rsi^^^mov     rsi, [rdx+8]^^^or      ah, 8^^^mov     [rdx+20h], rcx^^^mov     [rdx+18h], rcx^^^test    eax, 202h^^^mov     [rdx], rsi^^^mov     [rdx+10h], rsi^^^mov     rsi, [rbx+8]^^^mov     [rbx], eax^^^mov     [rbx+28h], rsi^^^mov     [rbx+20h], rsi^^^mov     rsi, [rbx+40h]^^^mov     [rbx+30h], rsi^^^mov     rsi, [rbx+10h]^^^mov     [rbx+8], rsi^^^mov     [rbx+18h], rsi^^^jz      short loc_428D36^^^mov     [rdx+28h], rcx^^^cmp     ebp, 0FFFFFFFFh^^^jz      short loc_428DB8^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax+20h]^^^cmp     rdx, [rax+38h]^^^jz      loc_428E10^^^mov     [rdx], ebp^^^mov     ecx, [rbx]^^^add     rdx, 4^^^mov     [rax+20h], rdx^^^test    cl, 2^^^jz      short loc_428DA0^^^mov     ecx, [rbx+0C0h]^^^test    ecx, ecx^^^jle     loc_428DF0^^^mov     rsi, [rax+18h]^^^mov     rdi, rbx^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^test    al, al^^^mov     eax, 0FFFFFFFFh^^^cmovnz  ebp, eax^^^add     rsp, 8^^^pop     rbx^^^mov     eax, ebp^^^pop     rbp^^^retn^^^cmp     ebp, 0Ah^^^jnz     loc_428CB9^^^and     ch, 2^^^jz      loc_428CB9^^^jmp     short loc_428D61^^^mov     edi, [rbx+0C0h]^^^test    edi, edi^^^jle     loc_428E48^^^mov     rax, [rbx+0A0h]^^^mov     rdi, rbx^^^mov     rsi, [rax+18h]^^^mov     rdx, [rax+20h]^^^add     rsp, 8^^^pop     rbx^^^pop     rbp^^^sub     rdx, rsi^^^sar     rdx, 2^^^jmp     _IO_wdo_write^^^mov     rsi, [rbx+20h]^^^mov     rdx, [rbx+28h]^^^mov     rdi, rbx^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^jmp     loc_428D88^^^mov     esi, [rbx+0C0h]^^^test    esi, esi^^^jle     loc_428ECD^^^mov     rsi, [rax+18h]^^^mov     rdi, rbx^^^sub     rdx, rsi^^^sar     rdx, 2^^^call    _IO_wdo_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^test    al, al^^^jz      short loc_428E88^^^mov     ebp, 0FFFFFFFFh^^^jmp     loc_428CB9^^^mov     rsi, [rbx+20h]^^^mov     rdx, [rbx+28h]^^^add     rsp, 8^^^mov     rdi, rbx^^^pop     rbx^^^pop     rbp^^^sub     rdx, rsi^^^jmp     _IO_new_do_write^^^mov     rcx, [rdi+38h]^^^mov     [rdi+8], rcx^^^mov     [rdi+10h], rcx^^^mov     rcx, [rdx+30h]^^^mov     [rdx], rcx^^^mov     [rdx+8], rcx^^^jmp     loc_428CEF^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax+20h]^^^jmp     loc_428D50^^^call    _IO_wdoallocbuf^^^mov     rdx, [rbx+0A0h]^^^cmp     qword ptr [rbx+20h], 0^^^mov     rcx, [rdx+30h]^^^mov     [rdx+10h], rcx^^^mov     [rdx], rcx^^^mov     [rdx+8], rcx^^^jz      short loc_428EEB^^^mov     rsi, [rdx+38h]^^^mov     eax, [rbx]^^^jmp     loc_428CEF^^^mov     rsi, [rbx+20h]^^^mov     rdx, [rbx+28h]^^^mov     rdi, rbx^^^sub     rdx, rsi^^^call    _IO_new_do_write^^^cmp     eax, 0FFFFFFFFh^^^setz    al^^^jmp     loc_428E37^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     rax, [rbx+38h]^^^mov     rdx, [rbx+0A0h]^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     rcx, [rdx]^^^jmp     short loc_428EC2^^^
get_avphys_pages$$$mov     edi, offset aMemfreeLdKb^^^jmp     phys_pages_info^^^
getuid$$$mov     eax, 66h        ^^^syscall^^^retn^^^
_wordcopy_fwd_dest_aligned$$$mov     r8d, esi^^^mov     rcx, rdx^^^push    rbp^^^and     r8d, 7^^^mov     eax, 40h^^^and     ecx, 3^^^shl     r8d, 3^^^and     rsi, 0FFFFFFFFFFFFFFF8h^^^push    rbx^^^sub     eax, r8d^^^cmp     rcx, 2^^^jz      loc_437BE8^^^cmp     rcx, 3^^^jz      short loc_437B60^^^cmp     rcx, 1^^^jz      short loc_437B30^^^test    rdx, rdx^^^jz      short loc_437B5C^^^mov     r11, [rsi]^^^mov     rbp, [rsi+8]^^^sub     rdi, 8^^^add     rsi, 8^^^jmp     loc_437BC6^^^sub     rdx, 1^^^mov     r10, [rsi]^^^mov     r11, [rsi+8]^^^jnz     loc_437C00^^^nop     dword ptr [rax+00000000h]^^^mov     ecx, eax^^^shl     r11, cl^^^mov     ecx, r8d^^^mov     rax, r11^^^shr     r10, cl^^^or      rax, r10^^^mov     [rdi], rax^^^pop     rbx^^^pop     rbp^^^retn^^^mov     rbp, [rsi]^^^mov     rbx, [rsi+8]^^^add     rdx, 1^^^sub     rdi, 10h^^^mov     ecx, eax^^^mov     r9, rbx^^^mov     r10, [rsi+10h]^^^shl     r9, cl^^^mov     ecx, r8d^^^shr     rbp, cl^^^or      r9, rbp^^^mov     [rdi+10h], r9^^^mov     ecx, eax^^^mov     r9, r10^^^mov     r11, [rsi+18h]^^^shl     r9, cl^^^mov     ecx, r8d^^^shr     rbx, cl^^^or      r9, rbx^^^mov     [rdi+18h], r9^^^add     rdi, 20h^^^sub     rdx, 4^^^jz      short loc_437B48^^^add     rsi, 20h^^^mov     ecx, eax^^^mov     r9, r11^^^mov     rbp, [rsi]^^^shl     r9, cl^^^mov     ecx, r8d^^^shr     r10, cl^^^or      r9, r10^^^mov     [rdi], r9^^^mov     ecx, eax^^^mov     r9, rbp^^^mov     rbx, [rsi+8]^^^shl     r9, cl^^^mov     ecx, r8d^^^shr     r11, cl^^^or      r9, r11^^^mov     [rdi+8], r9^^^jmp     short loc_437B6F^^^mov     rbx, [rsi]^^^mov     r10, [rsi+8]^^^add     rdx, 2^^^sub     rsi, 8^^^sub     rdi, 18h^^^jmp     short loc_437B88^^^add     rsi, 10h^^^jmp     short loc_437BAF^^^
sub_472A34$$$mov     edx, [r12]^^^cmp     edx, 30h^^^jnb     loc_472D4F^^^mov     eax, edx^^^add     rax, [r12+10h]^^^add     edx, 8^^^mov     [r12], edx^^^mov     r8, [rax]^^^test    r8, r8^^^jz      loc_472D27^^^mov     dword ptr [rbp-10F4h], 78h^^^mov     dword ptr [rbp-1178h], 0^^^xor     r10d, r10d^^^mov     dword ptr [rbp-1170h], 1^^^mov     dword ptr [rbp-1144h], 10h^^^jmp     loc_471A0F^^^cmp     dword ptr [rbp-1130h], 4^^^jg      short loc_472D3A^^^mov     dword ptr [rbp-1130h], 5^^^mov     dword ptr [rbp-1138h], 0^^^mov     r8d, offset asc_4B01E0^^^jmp     loc_472AB8^^^mov     rax, [r12+8]^^^lea     rdx, [rax+8]^^^mov     [r12+8], rdx^^^jmp     loc_472A4F^^^
round_and_return_1$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^mov     rbx, rsi^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 38h^^^cmp     rsi, 0FFFFFFFFFFFFC002h^^^mov     rbp, rdi^^^mov     r13d, edx^^^mov     r12, rcx^^^jge     loc_4800D8^^^cmp     rsi, 0FFFFFFFFFFFFBFC2h^^^jl      loc_480160^^^mov     edx, 1^^^mov     ecx, r8d^^^mov     rax, 0FFFFFFFFFFFFC002h^^^shl     rdx, cl^^^sub     rax, rsi^^^sub     rdx, 1^^^test    rdx, r12^^^mov     r12, [rdi]^^^setnz   dl^^^movzx   edx, dl^^^or      r9d, edx^^^cmp     rax, 40h^^^jz      loc_4801C0^^^mov     ecx, eax^^^mov     edx, 1^^^mov     rsi, rdi^^^mov     [rsp+38h+var_30], r9d^^^call    __mpn_rshift^^^mov     r9d, [rsp+38h+var_30]^^^mov     r8, 0FFFFFFFFFFFFC001h^^^sub     r8d, ebx^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbx, 0FFFFFFFFFFFFC001h^^^mov     dword ptr fs:[rax], 22h^^^bt      r12, r8^^^jb      short loc_480110^^^mov     edx, r13d^^^mov     esi, ebx^^^mov     rdi, rbp^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^jmp     __mpn_construct_long_double^^^cmp     rsi, 4000h^^^jle     short loc_4800A8^^^test    r13d, r13d^^^jnz     short loc_480108^^^fld     cs:dword_4B27C0^^^mov     rbx, [rsp+38h+var_20]^^^mov     rbp, [rsp+38h+var_18]^^^mov     r12, [rsp+38h+var_10]^^^mov     r13, [rsp+38h+var_8]^^^add     rsp, 38h^^^retn^^^fld     cs:dword_4B27C4^^^jmp     short loc_4800EC^^^test    r9d, r9d^^^mov     rax, [rbp+0]^^^jz      short loc_480178^^^lea     rdx, [rax+1]^^^cmp     rax, rdx^^^mov     [rbp+0], rdx^^^jbe     short loc_4801A0^^^add     rbx, 1^^^mov     ecx, 1^^^mov     edx, 1^^^mov     rsi, rbp^^^mov     rdi, rbp^^^call    __mpn_rshift^^^mov     rax, 8000000000000000h^^^or      [rbp+0], rax^^^cmp     rbx, 4001h^^^jz      short loc_4800E1^^^jmp     loc_4800AE^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^fldz^^^mov     dword ptr fs:[rax], 22h^^^jmp     loc_4800EC^^^test    al, 1^^^jnz     short loc_480119^^^mov     edx, 1^^^mov     ecx, r8d^^^shl     rdx, cl^^^sub     rdx, 1^^^test    rdx, r12^^^jz      loc_4800AE^^^jmp     short loc_480119^^^cmp     rbx, 0FFFFFFFFFFFFC001h^^^jnz     loc_4800AE^^^sar     rdx, 3Fh^^^not     edx^^^lea     ebx, [rdx-3FFEh]^^^jmp     loc_4800AE^^^xor     eax, eax^^^test    r12, r12^^^mov     qword ptr [rdi], 0^^^setnz   al^^^mov     r8d, 3Fh^^^or      r9d, eax^^^jmp     loc_480093^^^
_dl_sysdep_read_whole_file$$$mov     [rsp+var_20], rbx^^^mov     [rsp+var_18], rbp^^^xor     eax, eax^^^mov     [rsp+var_10], r12^^^mov     [rsp+var_8], r13^^^sub     rsp, 0B8h^^^mov     r13, rsi^^^mov     esi, 80000h^^^mov     ebp, edx^^^call    open64^^^test    eax, eax^^^mov     ebx, eax^^^mov     r12, 0FFFFFFFFFFFFFFFFh^^^js      short loc_455DD1^^^mov     rdx, rsp^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^js      short loc_455DCA^^^mov     rax, [rsp+0B8h+var_88]^^^test    rax, rax^^^mov     [r13+0], rax^^^jnz     short loc_455E00^^^mov     edi, ebx^^^call    close^^^mov     rax, r12^^^mov     rbx, [rsp+0B8h+var_20]^^^mov     rbp, [rsp+0B8h+var_18]^^^mov     r12, [rsp+0B8h+var_10]^^^mov     r13, [rsp+0B8h+var_8]^^^add     rsp, 0B8h^^^retn^^^xor     r9d, r9d^^^mov     r8d, ebx^^^mov     ecx, 2^^^mov     edx, ebp^^^mov     rsi, rax^^^xor     edi, edi^^^call    mmap64^^^mov     r12, rax^^^jmp     short loc_455DCA^^^
__strftime_internal$$$push    r15^^^mov     r10, rsi^^^push    r14^^^push    r13^^^mov     r13, r9^^^push    r12^^^push    rbp^^^push    rbx^^^sub     rsp, 0D8h^^^mov     rax, [r9+10h]^^^mov     [rsp+108h+var_D8], rcx^^^mov     ecx, [rcx+8]^^^mov     [rsp+108h+var_C0], r8^^^mov     [rsp+108h+var_C8], rax^^^mov     [rsp+108h+var_CC], ecx^^^mov     rcx, [rsp+108h+var_D8]^^^cmp     [rsp+108h+var_CC], 0Ch^^^mov     rcx, [rcx+30h]^^^mov     [rsp+108h+var_B8], rcx^^^jle     loc_4499A8^^^sub     [rsp+108h+var_CC], 0Ch^^^movzx   eax, byte ptr [rdx]^^^test    al, al^^^jz      loc_44AEEB^^^mov     rbx, rdx^^^mov     rbp, rdi^^^xor     r14d, r14d^^^jmp     short loc_44978C^^^mov     rdx, r10^^^sub     rdx, r14^^^cmp     rdx, 1^^^jbe     loc_449950^^^test    rbp, rbp^^^jz      short loc_449774^^^mov     [rbp+0], al^^^add     rbp, 1^^^add     r14, 1^^^mov     r15, rbx^^^movzx   eax, byte ptr [r15+1]^^^lea     rbx, [r15+1]^^^test    al, al^^^jz      loc_449920^^^cmp     al, 25h^^^jnz     short loc_449758^^^xor     eax, eax^^^mov     [rsp+108h+var_D0], 0^^^xor     r11d, r11d^^^add     rbx, 1^^^movzx   ecx, byte ptr [rbx]^^^cmp     cl, 30h^^^jz      loc_449830^^^jg      short loc_449820^^^cmp     cl, 23h^^^jz      loc_449930^^^cmp     cl, 2Dh^^^nop     dword ptr [rax+rax+00h]^^^jz      short loc_449830^^^movsx   r8d, cl^^^mov     r12d, 0FFFFFFFFh^^^lea     edx, [r8-30h]^^^cmp     edx, 9^^^ja      short loc_449840^^^xor     r12d, r12d^^^jmp     short loc_449809^^^movzx   edx, byte ptr [rbx]^^^jz      loc_449970^^^lea     r12d, [r12+r12*4]^^^movsx   edx, dl^^^lea     r12d, [rdx+r12*2-30h]^^^add     rbx, 1^^^movzx   ecx, byte ptr [rbx]^^^movsx   r8d, cl^^^lea     edx, [r8-30h]^^^cmp     edx, 9^^^ja      short loc_449840^^^cmp     r12d, 0CCCCCCCh^^^jle     short loc_4497E0^^^mov     r12d, 7FFFFFFFh^^^jmp     short loc_4497F5^^^cmp     cl, 5Eh^^^jz      loc_449940^^^cmp     cl, 5Fh^^^jnz     short loc_4497C2^^^xchg    ax, ax^^^movsx   r11d, cl^^^jmp     loc_44979D^^^cmp     cl, 45h^^^jz      loc_449998^^^cmp     cl, 4Fh^^^jz      loc_449998^^^xor     r8d, r8d^^^cmp     cl, 7Ah         ^^^jbe     loc_449988^^^cmp     cl, 25h         ^^^mov     r15, rbx^^^jnz     loc_4499CB^^^mov     ecx, 1^^^xor     r8d, r8d^^^sub     r12d, ecx^^^mov     rax, r10^^^cmovns  r8d, r12d^^^sub     rax, r14^^^add     r8d, ecx^^^movsxd  r8, r8d^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_449909^^^test    r12d, r12d^^^jle     short loc_4498D4^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_4499F0^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     eax, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    eax, eax^^^jz      loc_449A28^^^test    r12, r12^^^jz      short loc_449906^^^mov     rax, r12^^^nop     dword ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [rbx+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_4498F0^^^add     rbp, r12^^^movzx   eax, byte ptr [r15+1]^^^add     r14, r8^^^lea     rbx, [r15+1]^^^test    al, al^^^jnz     loc_44978C^^^nop     dword ptr [rax]^^^test    rbp, rbp^^^jz      short loc_449953^^^test    r10, r10^^^jz      short loc_449953^^^mov     byte ptr [rbp+0], 0^^^jmp     short loc_449953^^^mov     eax, 1^^^jmp     loc_44979D^^^mov     [rsp+108h+var_D0], 1^^^jmp     loc_44979D^^^xor     r14d, r14d^^^add     rsp, 0D8h^^^mov     rax, r14^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^cmp     dl, 37h^^^jle     loc_4497E9^^^mov     r12d, 7FFFFFFFh^^^jmp     loc_4497F5^^^movzx   edx, cl^^^jmp     ds:off_49E310[rdx*8]^^^movzx   ecx, byte ptr [rbx+1]^^^add     rbx, 1^^^jmp     loc_449855^^^mov     eax, [rsp+108h+var_CC]^^^test    eax, eax^^^mov     eax, 0Ch^^^cmovnz  eax, [rsp+108h+var_CC]^^^mov     [rsp+108h+var_CC], eax^^^jmp     loc_44973F^^^mov     r15, rbx^^^lea     rax, [rbx-1]^^^mov     ecx, 1^^^mov     rbx, rax^^^sub     rax, 1^^^add     ecx, 1^^^cmp     byte ptr [rax+1], 25h^^^jnz     short loc_4499D4^^^jmp     loc_44986F^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_4498D4^^^mov     rdi, rbp^^^mov     rdx, r12^^^mov     rsi, rbx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    memcpy^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^jmp     loc_449909^^^mov     r15d, 1         ^^^mov     ecx, [rsp+108h+var_D0]^^^mov     rsi, [rsp+108h+var_D8]^^^xor     edx, edx^^^test    eax, eax^^^mov     eax, 1^^^cmovnz  r15d, eax^^^cmovnz  ecx, edx^^^xor     eax, eax^^^mov     [rsp+108h+var_D0], ecx^^^mov     ecx, [rsi+8]^^^mov     rsi, [rsp+108h+var_C8]^^^cmp     ecx, 0Bh^^^setnle  al^^^add     rax, 2Eh^^^mov     rdi, [rsi+rax*8]^^^mov     dword ptr [rsp+108h+var_E0], edx^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    strlen^^^mov     edx, dword ptr [rsp+108h+var_E0]^^^sub     r12d, eax^^^mov     r10, [rsp+108h+var_100]^^^mov     r8d, eax^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  edx, r12d^^^mov     rax, r10^^^lea     r9d, [rdx+r8]^^^sub     rax, r14^^^movsxd  r9, r9d^^^cmp     r9, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_449B71^^^test    r12d, r12d^^^jle     short loc_449B2A^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44AF88^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_E0], r9^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r9, [rsp+108h+var_E0]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     ecx, [rdx+8]^^^xor     eax, eax^^^cmp     ecx, 0Ch^^^movsxd  r12, r8d^^^setnl   al^^^add     rax, 2Eh^^^test    r15d, r15d^^^jz      loc_44AEA9^^^mov     rcx, [rsp+108h+var_C8]^^^test    r12, r12^^^mov     rsi, [rcx+rax*8]^^^jz      short loc_449B6E^^^mov     rax, r12^^^nop     dword ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [rsi+rax-1]^^^mov     rdx, [r13+70h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_449B58^^^add     rbp, r12^^^add     r14, r9^^^mov     r15, rbx^^^jmp     loc_44977B^^^xor     r15d, r15d      ^^^jmp     loc_449A58^^^mov     [rsp+108h+var_B0], offset aHMS^^^nop     dword ptr [rax]^^^mov     rdx, [rsp+108h+var_B0]^^^mov     r8, [rsp+108h+var_C0]^^^mov     rsi, 0FFFFFFFFFFFFFFFFh^^^mov     rcx, [rsp+108h+var_D8]^^^xor     edi, edi^^^mov     r9, r13^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    __strftime_internal^^^mov     edx, r12d^^^mov     r15d, eax^^^mov     r10, [rsp+108h+var_100]^^^xor     eax, eax^^^sub     edx, r15d^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  eax, edx^^^add     eax, r15d^^^mov     rsi, r10^^^cdqe^^^sub     rsi, r14^^^cmp     rax, rsi^^^mov     [rsp+108h+var_A8], rax^^^mov     [rsp+108h+var_A0], rsi^^^jnb     loc_449950^^^xor     eax, eax^^^test    rbp, rbp^^^jz      short loc_449C57^^^test    edx, edx^^^mov     r12, rbp^^^jle     short loc_449C28^^^movsxd  r12, edx^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44AE8F^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     [rsp+108h+var_100], r10^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^add     r12, rbp^^^mov     r8, [rsp+108h+var_C0]^^^mov     rcx, [rsp+108h+var_D8]^^^mov     r9, r13^^^mov     rdx, [rsp+108h+var_B0]^^^mov     rsi, [rsp+108h+var_A0]^^^mov     rdi, r12^^^mov     [rsp+108h+var_100], r10^^^call    __strftime_internal^^^mov     r10, [rsp+108h+var_100]^^^movsxd  rax, r15d^^^add     rax, r12^^^mov     r9d, [rsp+108h+var_D0]^^^add     r14, [rsp+108h+var_A8]^^^test    r9d, r9d^^^jz      loc_44ADD0^^^cmp     rax, rbp^^^jbe     loc_44ADD0^^^nop     dword ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [rbp+0]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+0], dl^^^add     rbp, 1^^^cmp     rbp, rax^^^jnz     short loc_449C78^^^mov     r15, rbx^^^jmp     loc_44977B^^^mov     [rsp+108h+var_B0], offset aHM^^^jmp     loc_449B90^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rdx, [rsp+108h+var_D8]^^^cmp     r12d, 2^^^mov     ecx, 2^^^cmovge  ecx, r12d^^^mov     r9d, 92492493h^^^mov     edi, [rdx+18h]^^^add     edi, 6^^^mov     eax, edi^^^imul    r9d^^^mov     eax, edi^^^sar     eax, 1Fh^^^add     edx, edi^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^mov     rdx, [rsp+108h+var_D8]^^^sub     eax, edi^^^mov     esi, [rdx+1Ch]^^^lea     esi, [rax+rsi+7]^^^mov     eax, esi^^^imul    r9d^^^lea     r15d, [rdx+rsi]^^^sar     esi, 1Fh^^^sar     r15d, 2^^^sub     r15d, esi^^^nop     dword ptr [rax+rax+00000000h]^^^test    r15d, r15d^^^jns     loc_44AC90^^^mov     edi, r15d^^^mov     esi, r15d^^^shr     edi, 1Fh^^^neg     esi^^^test    edi, edi^^^cmovz   esi, r15d^^^lea     r15, [rsp+108h+var_42]^^^nop     word ptr [rax+rax+00h]^^^mov     eax, 0CCCCCCCDh^^^sub     r15, 1^^^mul     esi^^^shr     edx, 3^^^lea     eax, [rdx+rdx*4]^^^add     eax, eax^^^sub     esi, eax^^^add     esi, 30h^^^test    edx, edx^^^mov     [r15], sil^^^mov     esi, edx^^^jnz     short loc_449D38^^^test    edi, edi^^^jz      short loc_449D66^^^mov     byte ptr [r15-1], 2Dh^^^sub     r15, 1^^^cmp     r11d, 2Dh^^^lea     r8, [rsp+108h+var_42]^^^jz      loc_449DFA^^^mov     r9, r15^^^sub     r9, r8^^^add     r9d, ecx^^^test    r9d, r9d^^^jle     short loc_449DFA^^^cmp     r11d, 5Fh^^^jz      loc_44AE18^^^mov     rax, r10^^^movsxd  rcx, ecx^^^sub     rax, r14^^^cmp     rcx, rax^^^jnb     loc_449950^^^test    edi, edi^^^jz      short loc_449DBB^^^add     r15, 1^^^test    rbp, rbp^^^jz      short loc_449DB7^^^mov     byte ptr [rbp+0], 2Dh^^^add     rbp, 1^^^add     r14, 1^^^test    rbp, rbp^^^movsxd  r12, r9d^^^jz      short loc_449DF4^^^mov     rdi, rbp^^^mov     rdx, r12^^^mov     esi, 30h^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     r11d, [rsp+108h+var_E8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^add     r14, r12^^^xor     r12d, r12d^^^mov     ecx, r8d^^^xor     r8d, r8d^^^mov     rax, r10^^^sub     ecx, r15d^^^sub     r12d, ecx^^^cmovns  r8d, r12d^^^sub     rax, r14^^^add     r8d, ecx^^^movsxd  r8, r8d^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_449E9A^^^test    r12d, r12d^^^jle     short loc_449E65^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44ADE0^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^movsxd  r12, ecx^^^mov     ecx, [rsp+108h+var_D0]^^^test    ecx, ecx^^^jz      loc_44ADA0^^^test    r12, r12^^^jz      short loc_449E97^^^mov     rax, r12^^^nop     dword ptr [rax+00h]^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_449E80^^^add     rbp, r12^^^add     r14, r8^^^mov     r15, rbx^^^jmp     loc_44977B^^^test    r8d, r8d        ^^^jnz     loc_4499C8^^^test    eax, eax^^^mov     eax, 1^^^cmovz   eax, [rsp+108h+var_D0]^^^mov     rcx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     [rsp+108h+var_D0], eax^^^movzx   eax, word ptr [rcx+18h]^^^mov     r15, [rsi+rax*8+40h]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^mov     rdi, r15^^^call    strlen^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^sub     r12d, eax^^^mov     ecx, eax^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  r8d, r12d^^^add     r8d, eax^^^mov     rax, r10^^^movsxd  r8, r8d^^^sub     rax, r14^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_449E9A^^^test    r12d, r12d^^^jle     short loc_449F6E^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B4C9^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^movzx   eax, word ptr [rdx+18h]^^^mov     r15, [rsi+rax*8+40h]^^^mov     eax, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    eax, eax^^^jz      loc_44ADA0^^^test    r12, r12^^^jz      loc_449E97^^^mov     rax, r12^^^nop     dword ptr [rax+00000000h]^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_449F90^^^jmp     loc_449E97^^^cmp     r8d, 45h        ^^^jz      loc_44B323^^^cmp     r8d, 4Fh^^^jz      loc_4499C8^^^mov     rsi, [rsp+108h+var_D8]^^^test    r12d, r12d^^^mov     ecx, 1^^^cmovg   ecx, r12d^^^mov     r15d, [rsi+14h]^^^add     r15d, 76Ch^^^jmp     loc_449D10^^^cmp     r8d, 4Fh        ^^^jz      loc_4499C8^^^cmp     r8d, 45h^^^jz      loc_44B06C^^^mov     rcx, [rsp+108h+var_C8]^^^mov     rcx, [rcx+190h]^^^mov     [rsp+108h+var_B0], rcx^^^jmp     loc_449B90^^^cmp     eax, 1          ^^^sbb     r15d, r15d^^^add     r15d, 1^^^test    eax, eax^^^mov     eax, 0^^^cmovz   eax, [rsp+108h+var_D0]^^^cmp     [rsp+108h+var_B8], 0^^^mov     [rsp+108h+var_D0], eax^^^jz      short loc_44A037^^^mov     rcx, [rsp+108h+var_B8]^^^cmp     byte ptr [rcx], 0^^^jnz     short loc_44A06C^^^mov     rcx, [rsp+108h+var_D8]^^^mov     eax, [rcx+20h]^^^test    eax, eax^^^js      short loc_44A060^^^mov     rsi, [rsp+108h+var_C0]^^^cmp     byte ptr [rsi], 0^^^jz      loc_44B377^^^cdqe^^^mov     rax, tzname[rax*8]^^^mov     [rsp+108h+var_B8], rax^^^cmp     [rsp+108h+var_B8], 0^^^jz      loc_44B367^^^mov     rdi, [rsp+108h+var_B8]^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    strlen^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^mov     ecx, eax^^^xor     eax, eax^^^sub     r12d, ecx^^^cmovns  eax, r12d^^^add     eax, ecx^^^movsxd  r8, eax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_449E9A^^^test    r12d, r12d^^^jle     short loc_44A0F3^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B19A^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^test    r15d, r15d^^^movsxd  r12, ecx^^^jz      loc_44AF1D^^^test    r12, r12^^^jz      loc_449E97^^^mov     rcx, [rsp+108h+var_B8]^^^mov     rax, r12^^^movzx   esi, byte ptr [rcx+rax-1]^^^mov     rdx, [r13+70h]^^^mov     edx, [rdx+rsi*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44A110^^^jmp     loc_449E97^^^mov     rsi, [rsp+108h+var_D8]^^^test    r12d, r12d^^^mov     ecx, 1^^^cmovg   ecx, r12d^^^mov     edx, 92492493h^^^mov     r15d, [rsi+18h]^^^add     r15d, 6^^^mov     eax, r15d^^^imul    edx^^^mov     eax, r15d^^^sar     eax, 1Fh^^^add     edx, r15d^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^sub     r15d, eax^^^add     r15d, 1^^^jmp     loc_449D10^^^test    r8d, r8d        ^^^mov     r15, rbx^^^jnz     loc_4499CB^^^mov     [rsp+108h+var_B0], offset aYMD^^^jmp     loc_449B90^^^test    r8d, r8d        ^^^mov     r15, rbx^^^jnz     loc_4499CB^^^mov     [rsp+108h+var_B0], offset aMDY^^^jmp     loc_449B90^^^cmp     r8d, 45h        ^^^jz      loc_44B228^^^mov     rcx, [rsp+108h+var_D8]^^^mov     edx, 51EB851Fh^^^mov     edi, 64h^^^mov     esi, [rcx+14h]^^^mov     ecx, 1^^^add     esi, 76Ch^^^test    r12d, r12d^^^mov     eax, esi^^^cmovg   ecx, r12d^^^imul    edx^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 5^^^sub     edx, eax^^^mov     eax, edx^^^mov     r15d, edx^^^imul    eax, edi^^^sub     esi, eax^^^shr     esi, 1Fh^^^sub     r15d, esi^^^jmp     loc_449D10^^^test    r8d, r8d        ^^^jnz     loc_4499C8^^^test    eax, eax^^^mov     eax, 1^^^cmovz   eax, [rsp+108h+var_D0]^^^mov     rcx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     [rsp+108h+var_D0], eax^^^mov     eax, [rcx+10h]^^^add     eax, 2001Ah^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^mov     rdi, r15^^^call    strlen^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^sub     r12d, eax^^^mov     ecx, eax^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  r8d, r12d^^^add     r8d, eax^^^mov     rax, r10^^^movsxd  r8, r8d^^^sub     rax, r14^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_449E9A^^^test    r12d, r12d^^^jle     short loc_44A2D1^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B3F7^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     eax, [rdx+10h]^^^add     eax, 2001Ah^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     r11d, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    r11d, r11d^^^jz      loc_44ADA0^^^test    r12, r12^^^jz      loc_449E97^^^mov     rax, r12^^^xchg    ax, ax^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44A2F0^^^jmp     loc_449E97^^^test    r8d, r8d        ^^^jnz     loc_4499C8^^^test    eax, eax^^^mov     eax, 1^^^cmovz   eax, [rsp+108h+var_D0]^^^mov     rcx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     [rsp+108h+var_D0], eax^^^mov     eax, [rcx+18h]^^^add     eax, 20007h^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^mov     rdi, r15^^^call    strlen^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^sub     r12d, eax^^^mov     ecx, eax^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  r8d, r12d^^^add     r8d, eax^^^mov     rax, r10^^^movsxd  r8, r8d^^^sub     rax, r14^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_449E9A^^^test    r12d, r12d^^^jle     short loc_44A3E7^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B43D^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     eax, [rdx+18h]^^^add     eax, 20007h^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     eax, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    eax, eax^^^jz      loc_44ADA0^^^test    r12, r12^^^jz      loc_449E97^^^mov     rax, r12^^^nop     word ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44A408^^^jmp     loc_449E97^^^movzx   ecx, byte ptr [rbx-1]^^^sub     rbx, 1^^^jmp     loc_44985E      ^^^xor     eax, eax        ^^^sub     r12d, 1^^^cmovns  eax, r12d^^^add     eax, 1^^^movsxd  r15, eax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     r15, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44A48D^^^test    r12d, r12d^^^jle     short loc_44A485^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     esi, 30h^^^mov     rdx, r12^^^jz      short loc_44A470^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     byte ptr [rbp+0], 0Ah^^^add     rbp, 1^^^add     r14, r15^^^mov     r15, rbx^^^jmp     loc_44977B^^^test    r8d, r8d        ^^^mov     r15, rbx^^^mov     ecx, 1^^^jnz     loc_44986F^^^sub     r12d, 1^^^mov     rax, r10^^^cmovns  r8d, r12d^^^sub     rax, r14^^^lea     r15d, [r8+1]^^^movsxd  r15, r15d^^^cmp     r15, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44A48D^^^test    r12d, r12d^^^mov     eax, 25h^^^jle     short loc_44A504^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     esi, 30h^^^mov     rdx, r12^^^jz      short loc_44A4EC^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^movzx   eax, byte ptr [rbx]^^^mov     r10, [rsp+108h+var_100]^^^mov     [rbp+0], al^^^add     rbp, 1^^^jmp     short loc_44A48D^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rsi, [rsp+108h+var_D8]^^^cmp     r12d, 2^^^mov     ecx, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rsi+10h]^^^add     r15d, 1^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     r15d, [rsp+108h+var_CC]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^cmp     r11d, 2Dh^^^jz      loc_449D10^^^cmp     r11d, 30h^^^mov     eax, 5Fh^^^cmovnz  r11d, eax^^^jmp     loc_449D10^^^mov     rsi, [rsp+108h+var_C8]^^^mov     eax, offset aIMSP^^^mov     rsi, [rsi+198h]^^^cmp     byte ptr [rsi], 0^^^cmovnz  rax, rsi^^^mov     [rsp+108h+var_B0], rax^^^jmp     loc_449B90^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rdx, [rsp+108h+var_D8]^^^cmp     r12d, 2^^^mov     ecx, 2^^^cmovge  ecx, r12d^^^mov     esi, [rdx+1Ch]^^^sub     esi, [rdx+18h]^^^mov     edx, 92492493h^^^add     esi, 7^^^mov     eax, esi^^^imul    edx^^^lea     r15d, [rdx+rsi]^^^sar     esi, 1Fh^^^sar     r15d, 2^^^sub     r15d, esi^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rax, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rax]^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rdx, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rdx+4]^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     ecx, 2^^^cmp     r12d, 2^^^mov     r15d, [rsp+108h+var_CC]^^^cmovge  ecx, r12d^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rdx, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rdx+8]^^^jmp     loc_449D10^^^mov     rcx, [rsp+108h+var_D8]^^^mov     r9d, [rcx+20h]^^^test    r9d, r9d^^^js      loc_449C8F^^^mov     ecx, [rcx+28h]^^^mov     r15d, r12d^^^xor     eax, eax^^^sub     r15d, 1^^^cmovns  eax, r15d^^^add     eax, 1^^^test    ecx, ecx^^^js      loc_44B08B^^^movsxd  r9, eax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     r9, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44A701^^^test    r15d, r15d^^^jle     short loc_44A6F9^^^movsxd  r15, r15d^^^cmp     r11d, 30h^^^mov     rdx, r15^^^jz      loc_44B3B2^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_E0], r9^^^add     rbp, r15^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     r11d, [rsp+108h+var_E8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r9, [rsp+108h+var_E0]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     byte ptr [rbp+0], 2Bh^^^add     rbp, 1^^^add     r14, r9^^^mov     edi, 88888889h^^^mov     eax, ecx^^^imul    edi^^^lea     esi, [rdx+rcx]^^^sar     ecx, 1Fh^^^sar     esi, 5^^^sub     esi, ecx^^^cmp     r12d, 4^^^mov     ecx, 4^^^mov     eax, esi^^^cmovge  ecx, r12d^^^imul    edi^^^mov     eax, esi^^^mov     edi, 28h^^^sar     eax, 1Fh^^^add     edx, esi^^^sar     edx, 5^^^sub     edx, eax^^^imul    edx, edi^^^lea     r15d, [rdx+rsi]^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_44B1CB^^^mov     rax, [rsp+108h+var_D8]^^^cmp     r12d, 2^^^mov     r15d, 51EB851Fh^^^mov     ecx, 2^^^cmovge  ecx, r12d^^^mov     esi, [rax+14h]^^^mov     eax, esi^^^imul    r15d^^^mov     eax, esi^^^sar     eax, 1Fh^^^sar     edx, 5^^^sub     edx, eax^^^mov     eax, 64h^^^imul    edx, eax^^^sub     esi, edx^^^add     esi, 64h^^^mov     eax, esi^^^imul    r15d^^^mov     eax, esi^^^mov     r15d, edx^^^sar     eax, 1Fh^^^sar     r15d, 5^^^sub     r15d, eax^^^mov     eax, 64h^^^imul    r15d, eax^^^sub     esi, r15d^^^mov     r15d, esi^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rsi, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rsi+8]^^^jmp     loc_44A552^^^cmp     r8d, 4Fh        ^^^jz      loc_4499C8^^^cmp     r8d, 45h^^^jz      loc_44B02E^^^mov     rcx, [rsp+108h+var_C8]^^^mov     rcx, [rcx+188h]^^^mov     [rsp+108h+var_B0], rcx^^^jmp     loc_449B90^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rdx, [rsp+108h+var_D8]^^^mov     ecx, 1^^^test    r12d, r12d^^^cmovg   ecx, r12d^^^mov     r15d, [rdx+18h]^^^jmp     loc_449D10^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rax, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rax+0Ch]^^^jmp     loc_44A552^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rsi, [rsp+108h+var_D8]^^^mov     ecx, 2^^^cmp     r12d, 2^^^cmovge  ecx, r12d^^^mov     r15d, [rsi+0Ch]^^^jmp     loc_449D10^^^cmp     r8d, 4Fh        ^^^jz      loc_4499C8^^^cmp     r8d, 45h^^^jz      loc_44B04D^^^mov     rdx, [rsp+108h+var_C8]^^^mov     rdx, [rdx+180h]^^^mov     [rsp+108h+var_B0], rdx^^^jmp     loc_449B90^^^test    eax, eax        ^^^mov     eax, 1^^^cmovz   eax, [rsp+108h+var_D0]^^^test    r8d, r8d^^^mov     [rsp+108h+var_D0], eax^^^jnz     loc_4499C8^^^mov     rcx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     eax, [rcx+10h]^^^add     eax, 2000Eh^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^mov     rdi, r15^^^call    strlen^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^sub     r12d, eax^^^mov     ecx, eax^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  r8d, r12d^^^add     r8d, eax^^^mov     rax, r10^^^movsxd  r8, r8d^^^sub     rax, r14^^^cmp     r8, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_449E9A^^^test    r12d, r12d^^^jle     short loc_44A971^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B483^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     eax, [rdx+10h]^^^add     eax, 2000Eh^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^mov     eax, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    eax, eax^^^jz      loc_44ADA0^^^test    r12, r12^^^jz      loc_449E97^^^mov     rax, r12^^^nop     dword ptr [rax+00h]^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44A990^^^jmp     loc_449E97^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rax, [rsp+108h+var_D8]^^^cmp     r12d, 3^^^mov     ecx, 3^^^cmovge  ecx, r12d^^^mov     r15d, [rax+1Ch]^^^add     r15d, 1^^^jmp     loc_449D10^^^mov     rcx, [rsp+108h+var_D8]^^^lea     rdi, [rsp+108h+var_98]^^^lea     r15, [rsp+108h+var_42]^^^mov     rax, [rcx]^^^mov     [rsp+108h+var_98], rax^^^mov     rax, [rcx+8]^^^mov     [rsp+108h+var_90], rax^^^mov     rax, [rcx+10h]^^^mov     [rsp+108h+var_88], rax^^^mov     rax, [rcx+18h]^^^mov     [rsp+108h+var_80], rax^^^mov     rax, [rcx+20h]^^^mov     [rsp+108h+var_78], rax^^^mov     rax, [rcx+28h]^^^mov     [rsp+108h+var_70], rax^^^mov     rax, [rcx+30h]^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^mov     [rsp+108h+var_68], rax^^^call    timelocal^^^mov     rdi, rax^^^mov     rcx, rax^^^mov     rsi, 6666666666666667h^^^shr     rdi, 3Fh^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^test    edi, edi^^^jnz     short loc_44AAA8^^^nop     dword ptr [rax]^^^mov     rax, rcx^^^sub     r15, 1^^^imul    rsi^^^mov     rax, rcx^^^sar     rax, 3Fh^^^sar     rdx, 2^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^add     rax, rax^^^sub     ecx, eax^^^mov     eax, ecx^^^mov     rcx, rdx^^^add     eax, 30h^^^test    rdx, rdx^^^mov     [r15], al^^^jnz     short loc_44AA68^^^mov     ecx, 1^^^jmp     loc_449D59^^^mov     rax, rcx^^^sub     r15, 1^^^imul    rsi^^^mov     rax, rcx^^^sar     rax, 3Fh^^^sar     rdx, 2^^^sub     rdx, rax^^^lea     rax, [rdx+rdx*4]^^^add     rax, rax^^^sub     ecx, eax^^^mov     eax, ecx^^^mov     rcx, rdx^^^neg     eax^^^add     eax, 30h^^^test    rdx, rdx^^^mov     [r15], al^^^jnz     short loc_44AAA8^^^jmp     short loc_44AA99^^^cmp     r8d, 45h        ^^^jz      loc_4499C8^^^mov     rax, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_D8]^^^mov     rdx, [rsp+108h+var_D8]^^^mov     r9d, [rax+1Ch]^^^mov     esi, [rsi+18h]^^^mov     edx, [rdx+14h]^^^mov     edi, r9d^^^mov     dword ptr [rsp+108h+var_B0], esi^^^sub     edi, esi^^^mov     dword ptr [rsp+108h+var_A8], edx^^^mov     edx, 92492493h^^^add     edi, 17Eh^^^mov     esi, r9d^^^mov     r15d, dword ptr [rsp+108h+var_A8]^^^mov     eax, edi^^^sub     esi, edi^^^imul    edx^^^mov     eax, edi^^^sar     eax, 1Fh^^^add     edx, edi^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^lea     esi, [rsi+rax+3]^^^test    esi, esi^^^js      loc_44B107^^^add     r15d, 76Ch^^^mov     eax, 0FFFFFE93h^^^test    r15b, 3^^^jnz     short loc_44ABA4^^^mov     edi, 51EB851Fh^^^mov     eax, r15d^^^imul    edi^^^mov     eax, r15d^^^sar     eax, 1Fh^^^mov     dword ptr [rsp+108h+var_A0], eax^^^mov     edi, edx^^^sar     edx, 5^^^sub     edx, eax^^^mov     eax, 64h^^^imul    edx, eax^^^mov     eax, 0FFFFFE92h^^^cmp     r15d, edx^^^jnz     short loc_44ABA4^^^mov     eax, edi^^^mov     edx, r15d^^^sar     eax, 7^^^sub     eax, dword ptr [rsp+108h+var_A0]^^^imul    eax, 190h^^^sub     edx, eax^^^cmp     edx, 1^^^sbb     eax, eax^^^sub     eax, 16Dh^^^add     r9d, eax^^^mov     edx, 92492493h^^^mov     edi, r9d^^^sub     edi, dword ptr [rsp+108h+var_B0]^^^add     edi, 17Eh^^^mov     eax, edi^^^sub     r9d, edi^^^imul    edx^^^mov     eax, edi^^^sar     eax, 1Fh^^^add     edx, edi^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^lea     eax, [r9+rax+3]^^^test    eax, eax^^^js      short loc_44ABEC^^^mov     r15d, dword ptr [rsp+108h+var_A8]^^^mov     esi, eax^^^add     r15d, 76Dh^^^cmp     cl, 47h^^^jz      loc_44B01D^^^cmp     cl, 67h^^^mov     ecx, 2^^^jz      loc_44AFE7^^^cmp     r12d, 2^^^mov     eax, esi^^^mov     edx, 92492493h^^^cmovge  ecx, r12d^^^imul    edx^^^add     edx, esi^^^sar     esi, 1Fh^^^sar     edx, 2^^^sub     edx, esi^^^lea     r15d, [rdx+1]^^^jmp     loc_449D10^^^xor     eax, eax        ^^^sub     r12d, 1^^^cmovns  eax, r12d^^^add     eax, 1^^^movsxd  r15, eax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     r15, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      loc_44A48D^^^test    r12d, r12d^^^jle     short loc_44AC7F^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     esi, 30h^^^mov     rdx, r12^^^jz      short loc_44AC6A^^^mov     esi, 20h^^^mov     rdi, rbp^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     byte ptr [rbp+0], 9^^^add     rbp, 1^^^jmp     loc_44A48D^^^cmp     r8d, 4Fh^^^jnz     loc_449D19^^^mov     rsi, [rsp+108h+var_C8]^^^mov     edi, r15d^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    _nl_get_alt_digit^^^test    rax, rax^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jz      loc_449D19^^^mov     rdi, rax^^^mov     [rsp+108h+var_F8], rax^^^call    strlen^^^test    rax, rax^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jz      loc_449D19^^^mov     r15d, eax^^^xor     eax, eax^^^sub     r12d, r15d^^^cmovns  eax, r12d^^^add     eax, r15d^^^movsxd  rcx, eax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     rcx, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44AD92^^^test    r12d, r12d^^^jle     short loc_44AD5E^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44AFBE^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     [rsp+108h+var_F0], rcx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^mov     rcx, [rsp+108h+var_F0]^^^mov     esi, [rsp+108h+var_D0]^^^movsxd  r15, r15d^^^test    esi, esi^^^jz      loc_44AEF6^^^test    r15, r15^^^jz      short loc_44AD8F^^^mov     rax, r15^^^nop     dword ptr [rax]^^^movzx   esi, byte ptr [r8+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rsi*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44AD78^^^add     rbp, r15^^^add     r14, rcx^^^mov     r15, rbx^^^jmp     loc_44977B^^^mov     rdx, r12^^^mov     rsi, r15^^^mov     rdi, rbp^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^call    memcpy^^^mov     r10, [rsp+108h+var_100]^^^mov     r8, [rsp+108h+var_F8]^^^jmp     loc_449E97^^^mov     r15, rbx^^^mov     rbp, rax^^^jmp     loc_44977B^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_449E65^^^mov     rax, r10^^^movsxd  rcx, r9d^^^sub     rax, r14^^^cmp     rcx, rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44AE74^^^mov     rdx, rcx^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     [rsp+108h+var_F0], rcx^^^mov     [rsp+108h+var_F8], r8^^^mov     dword ptr [rsp+108h+var_E0], r9d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     rcx, [rsp+108h+var_F0]^^^mov     r11d, [rsp+108h+var_E8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r9d, dword ptr [rsp+108h+var_E0]^^^mov     r8, [rsp+108h+var_F8]^^^add     rbp, rcx^^^mov     eax, r12d^^^add     r14, rcx^^^sub     eax, r9d^^^cmp     r12d, r9d^^^mov     r12d, 0^^^cmovg   r12d, eax^^^jmp     loc_449DFA^^^mov     esi, 30h^^^mov     rdi, rbp^^^add     r12, rbp^^^call    sub_400390^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_449C28^^^mov     edx, [rsp+108h+var_D0]^^^test    edx, edx^^^jz      loc_44AF5B^^^mov     rdx, [rsp+108h+var_C8]^^^test    r12, r12^^^mov     rsi, [rdx+rax*8]^^^jz      loc_449B6E^^^mov     rax, r12^^^nop     word ptr [rax+rax+00h]^^^movzx   ecx, byte ptr [rsi+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44AED0^^^jmp     loc_449B6E^^^mov     rbp, rdi^^^xor     r14d, r14d^^^jmp     loc_449920^^^mov     rdx, r15^^^mov     rsi, r8^^^mov     rdi, rbp^^^mov     [rsp+108h+var_F0], rcx^^^mov     [rsp+108h+var_100], r10^^^call    memcpy^^^mov     r10, [rsp+108h+var_100]^^^mov     rcx, [rsp+108h+var_F0]^^^jmp     loc_44AD8F^^^mov     r11d, [rsp+108h+var_D0]^^^test    r11d, r11d^^^jz      loc_44B3A5^^^test    r12, r12^^^jz      loc_449E97^^^mov     rcx, [rsp+108h+var_B8]^^^mov     rax, r12^^^nop     dword ptr [rax+00h]^^^movzx   esi, byte ptr [rcx+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rsi*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44AF40^^^jmp     loc_449E97^^^mov     rcx, [rsp+108h+var_C8]^^^mov     rdx, r12^^^mov     rdi, rbp^^^mov     rsi, [rcx+rax*8]^^^mov     [rsp+108h+var_E0], r9^^^mov     [rsp+108h+var_100], r10^^^call    memcpy^^^mov     r10, [rsp+108h+var_100]^^^mov     r9, [rsp+108h+var_E0]^^^jmp     loc_449B6E^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_E0], r9^^^add     rbp, r12^^^call    sub_400390^^^mov     rax, [rsp+108h+var_D8]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r9, [rsp+108h+var_E0]^^^mov     r10, [rsp+108h+var_100]^^^mov     ecx, [rax+8]^^^jmp     loc_449B2A^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     [rsp+108h+var_F0], rcx^^^add     rbp, r12^^^call    sub_400390^^^mov     rcx, [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_44AD5E^^^cmp     r12d, 2^^^mov     edi, 51EB851Fh^^^mov     eax, r15d^^^cmovge  ecx, r12d^^^mov     esi, r15d^^^imul    edi^^^mov     eax, r15d^^^sar     eax, 1Fh^^^sar     edx, 5^^^sub     edx, eax^^^mov     eax, 64h^^^imul    edx, eax^^^sub     esi, edx^^^add     esi, 64h^^^mov     eax, esi^^^imul    edi^^^jmp     loc_44A78C^^^mov     ecx, 1^^^test    r12d, r12d^^^cmovg   ecx, r12d^^^jmp     loc_449D10^^^mov     rdx, [rsp+108h+var_C8]^^^mov     rdx, [rdx+1B0h]^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+108h+var_B0], rdx^^^jnz     loc_449B90^^^jmp     loc_44A7E8^^^mov     rax, [rsp+108h+var_C8]^^^mov     rax, [rax+1C0h]^^^cmp     byte ptr [rax], 0^^^mov     [rsp+108h+var_B0], rax^^^jnz     loc_449B90^^^jmp     loc_44A880^^^mov     rdx, [rsp+108h+var_C8]^^^mov     rdx, [rdx+1C8h]^^^cmp     byte ptr [rdx], 0^^^mov     [rsp+108h+var_B0], rdx^^^jnz     loc_449B90^^^jmp     loc_449FF5^^^cdqe^^^mov     [rsp+108h+var_B0], rax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     [rsp+108h+var_B0], rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44B0FB^^^test    r15d, r15d^^^jle     short loc_44B0F3^^^movsxd  r15, r15d^^^cmp     r11d, 30h^^^mov     rdx, r15^^^jz      loc_44B508^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r15^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     r11d, [rsp+108h+var_E8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     byte ptr [rbp+0], 2Dh^^^add     rbp, 1^^^add     r14, [rsp+108h+var_B0]^^^neg     ecx^^^jmp     loc_44A704^^^add     r15d, 76Bh^^^mov     eax, 16Dh^^^test    r15b, 3^^^jnz     short loc_44B15E^^^mov     esi, 51EB851Fh^^^mov     eax, r15d^^^mov     edi, r15d^^^imul    esi^^^sar     edi, 1Fh^^^mov     eax, 64h^^^mov     esi, edx^^^sar     edx, 5^^^sub     edx, edi^^^imul    edx, eax^^^mov     eax, 16Eh^^^cmp     r15d, edx^^^jnz     short loc_44B15E^^^sar     esi, 7^^^mov     eax, r15d^^^sub     esi, edi^^^imul    esi, 190h^^^sub     eax, esi^^^cmp     eax, 1^^^sbb     eax, eax^^^not     eax^^^add     eax, 16Eh^^^add     r9d, eax^^^mov     edx, 92492493h^^^mov     edi, r9d^^^sub     edi, dword ptr [rsp+108h+var_B0]^^^mov     esi, r9d^^^add     edi, 17Eh^^^mov     eax, edi^^^sub     esi, edi^^^imul    edx^^^mov     eax, edi^^^sar     eax, 1Fh^^^add     edx, edi^^^sar     edx, 2^^^sub     edx, eax^^^lea     eax, ds:0[rdx*8]^^^sub     eax, edx^^^lea     esi, [rsi+rax+3]^^^jmp     loc_44ABEC^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_44A0F3^^^mov     rsi, [rsp+108h+var_C8]^^^mov     rdi, [rsp+108h+var_D8]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    _nl_get_era_entry^^^test    rax, rax^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jz      loc_44A750^^^mov     rdx, [rsp+108h+var_D8]^^^test    r12d, r12d^^^mov     ecx, 1^^^cmovg   ecx, r12d^^^mov     r15d, [rdx+14h]^^^sub     r15d, [rax+8]^^^imul    r15d, [rax+40h]^^^add     r15d, [rax+4]^^^jmp     loc_449D19^^^mov     rsi, [rsp+108h+var_C8]^^^mov     rdi, [rsp+108h+var_D8]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    _nl_get_era_entry^^^test    rax, rax^^^mov     [rsp+108h+var_B0], rax^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jz      loc_44A1AF^^^mov     r15, [rax+20h]^^^mov     rdi, r15^^^call    strlen^^^mov     ecx, eax^^^xor     eax, eax^^^mov     r10, [rsp+108h+var_100]^^^sub     r12d, ecx^^^mov     r11d, [rsp+108h+var_E8]^^^cmovns  eax, r12d^^^add     eax, ecx^^^cdqe^^^mov     [rsp+108h+var_A8], rax^^^mov     rax, r10^^^sub     rax, r14^^^cmp     [rsp+108h+var_A8], rax^^^jnb     loc_449950^^^test    rbp, rbp^^^jz      short loc_44B316^^^test    r12d, r12d^^^jle     short loc_44B2E3^^^movsxd  r12, r12d^^^cmp     r11d, 30h^^^mov     rdx, r12^^^jz      loc_44B560^^^mov     rdi, rbp^^^mov     esi, 20h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r12^^^call    sub_400390^^^mov     rax, [rsp+108h+var_B0]^^^mov     r10, [rsp+108h+var_100]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r15, [rax+20h]^^^mov     r8d, [rsp+108h+var_D0]^^^movsxd  r12, ecx^^^test    r8d, r8d^^^jz      loc_44B543^^^test    r12, r12^^^jz      short loc_44B313^^^mov     rax, r12^^^movzx   ecx, byte ptr [r15+rax-1]^^^mov     rdx, [r13+78h]^^^mov     edx, [rdx+rcx*4]^^^mov     [rbp+rax-1], dl^^^sub     rax, 1^^^jnz     short loc_44B2FC^^^add     rbp, r12^^^add     r14, [rsp+108h+var_A8]^^^mov     r15, rbx^^^jmp     loc_44977B^^^mov     rsi, [rsp+108h+var_C8]^^^mov     rdi, [rsp+108h+var_D8]^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    _nl_get_era_entry^^^test    rax, rax^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jz      loc_449FC0^^^mov     rax, [rax+28h]^^^mov     [rsp+108h+var_B0], rax^^^jmp     loc_449B90^^^xor     ecx, ecx^^^mov     [rsp+108h+var_B8], offset unk_49A0C9^^^jmp     loc_44A08C^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    tzset^^^mov     rax, [rsp+108h+var_C0]^^^mov     rcx, [rsp+108h+var_D8]^^^mov     r11d, [rsp+108h+var_E8]^^^mov     r10, [rsp+108h+var_100]^^^mov     byte ptr [rax], 1^^^mov     eax, [rcx+20h]^^^jmp     loc_44A051^^^mov     rdx, r12^^^mov     rsi, [rsp+108h+var_B8]^^^jmp     loc_44ADA6^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_E0], r9^^^add     rbp, r15^^^mov     [rsp+108h+var_100], r10^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r9, [rsp+108h+var_E0]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jmp     loc_44A6F9^^^mov     esi, 30h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     eax, [rdx+10h]^^^add     eax, 2001Ah^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^jmp     loc_44A2D1^^^mov     esi, 30h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     eax, [rdx+18h]^^^add     eax, 20007h^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^jmp     loc_44A3E7^^^mov     esi, 30h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     eax, [rdx+10h]^^^add     eax, 2000Eh^^^movzx   eax, ax^^^mov     r15, [rsi+rax*8+40h]^^^jmp     loc_44A971^^^mov     esi, 30h^^^mov     rdi, rbp^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     [rsp+108h+var_F8], r8^^^add     rbp, r12^^^call    sub_400390^^^mov     rdx, [rsp+108h+var_D8]^^^mov     rsi, [rsp+108h+var_C8]^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8, [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^movzx   eax, word ptr [rdx+18h]^^^mov     r15, [rsi+rax*8+40h]^^^jmp     loc_449F6E^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^mov     dword ptr [rsp+108h+var_F8], r8d^^^mov     [rsp+108h+var_100], r10^^^add     rbp, r15^^^mov     [rsp+108h+var_E8], r11d^^^call    sub_400390^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r8d, dword ptr [rsp+108h+var_F8]^^^mov     r10, [rsp+108h+var_100]^^^mov     r11d, [rsp+108h+var_E8]^^^jmp     loc_44B0F3^^^mov     rdx, r12^^^mov     rsi, r15^^^mov     rdi, rbp^^^mov     [rsp+108h+var_100], r10^^^call    memcpy^^^mov     r10, [rsp+108h+var_100]^^^jmp     loc_44B313^^^mov     rdi, rbp^^^mov     esi, 30h^^^mov     dword ptr [rsp+108h+var_F0], ecx^^^call    sub_400390^^^mov     rax, [rsp+108h+var_B0]^^^add     rbp, r12^^^mov     ecx, dword ptr [rsp+108h+var_F0]^^^mov     r10, [rsp+108h+var_100]^^^mov     r15, [rax+20h]^^^jmp     loc_44B2E3^^^
_dl_higher_prime_number$$$mov     ecx, offset aDlTls_c^^^mov     edx, offset primes_10803^^^jmp     short loc_4560A9^^^lea     rdx, [rax+4]^^^cmp     rdx, rcx^^^jz      short loc_4560FB^^^mov     rax, rcx^^^sub     rax, rdx^^^sar     rax, 2^^^mov     rsi, rax^^^shr     rsi, 3Fh^^^add     rax, rsi^^^sar     rax, 1^^^lea     rax, [rdx+rax*4]^^^mov     esi, [rax]^^^cmp     rdi, rsi^^^ja      short loc_4560A0^^^cmp     rdx, rax^^^mov     rcx, rax^^^jz      short loc_4560FB^^^sub     rax, rdx^^^sar     rax, 2^^^mov     rsi, rax^^^shr     rsi, 3Fh^^^add     rax, rsi^^^sar     rax, 1^^^lea     rax, [rdx+rax*4]^^^mov     esi, [rax]^^^cmp     rsi, rdi^^^jnb     short loc_4560CB^^^lea     rdx, [rax+4]^^^cmp     rdx, rcx^^^jnz     short loc_4560A9^^^mov     eax, [rdx]^^^retn^^^
_dl_nothread_init_static_tls$$$push    rbx^^^mov     rsi, [rdi+440h]^^^mov     rax, fs:10h^^^mov     rdx, fs:8^^^mov     rcx, [rdi+448h]^^^cmp     rcx, [rdx-10h]^^^ja      short loc_453F56^^^shl     rcx, 4^^^sub     rax, rsi^^^add     rdx, rcx^^^mov     [rdx], rax^^^mov     byte ptr [rdx+8], 1^^^mov     rdx, [rdi+420h]^^^mov     rbx, [rdi+428h]^^^mov     rsi, [rdi+418h]^^^mov     rdi, rax^^^sub     rbx, rdx^^^call    mempcpy^^^mov     rdx, rbx^^^xor     esi, esi^^^mov     rdi, rax^^^pop     rbx^^^jmp     sub_400390^^^mov     ecx, offset __PRETTY_FUNCTION___10772^^^mov     edx, 8Dh^^^mov     esi, offset aDlReloc_c^^^mov     edi, offset aMapL_tls_modid^^^call    __assert_fail^^^
_IO_wfile_seekoff$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_28], rbp^^^mov     rbx, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_18], r13^^^mov     r12d, edx^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 0C8h^^^mov     rax, [rdi+0A0h]^^^xor     r14d, r14d^^^mov     rbp, rsi^^^mov     r13d, ecx^^^mov     rdx, [rax+8]^^^cmp     [rax+10h], rdx^^^jz      loc_427FA0^^^test    r13d, r13d^^^jnz     short loc_427BE5^^^mov     ecx, [rbx]^^^xor     ebp, ebp^^^mov     r12d, 1^^^and     ch, 1^^^jz      short loc_427BE5^^^cmp     rdx, [rax]^^^ja      loc_428040^^^mov     rdi, rbx^^^call    _IO_switch_to_main_wget_area^^^mov     rax, [rbx+0A0h]^^^mov     rdi, [rax+18h]^^^cmp     [rax+20h], rdi^^^ja      short loc_427BF6^^^mov     edx, [rbx]^^^and     dh, 8^^^jz      short loc_427C4F^^^mov     rdi, rbx^^^call    _IO_switch_to_wget_mode^^^test    eax, eax^^^jz      short loc_427C48^^^mov     ebp, 0FFFFFFFFh^^^mov     rax, rbp^^^mov     rbx, [rsp+0C8h+var_30]^^^mov     rbp, [rsp+0C8h+var_28]^^^mov     r12, [rsp+0C8h+var_20]^^^mov     r13, [rsp+0C8h+var_18]^^^mov     r14, [rsp+0C8h+var_10]^^^mov     r15, [rsp+0C8h+var_8]^^^add     rsp, 0C8h^^^retn^^^mov     rax, [rbx+0A0h]^^^cmp     qword ptr [rax+30h], 0^^^jz      loc_427D80^^^cmp     r12d, 1^^^jz      loc_427D28^^^cmp     r12d, 2^^^jz      loc_427F60^^^test    r13d, r13d^^^jz      short loc_427C07^^^mov     rsi, [rbx+90h]^^^cmp     rsi, 0FFFFFFFFFFFFFFFFh^^^jz      loc_427DE0^^^cmp     qword ptr [rbx+18h], 0^^^mov     eax, [rbx]^^^jz      loc_427DE2^^^test    ah, 1^^^jnz     loc_427DE2^^^mov     rdx, [rbx+38h]^^^mov     rcx, rdx^^^sub     rcx, [rbx+10h]^^^add     rcx, rsi^^^cmp     rbp, rcx^^^jl      loc_427DE2^^^cmp     rbp, rsi^^^jge     loc_427DE2^^^mov     rdi, rbp^^^mov     [rbx+18h], rdx^^^mov     [rbx+28h], rdx^^^sub     rdi, rcx^^^mov     [rbx+20h], rdx^^^mov     [rbx+30h], rdx^^^mov     rcx, rdi^^^and     eax, 0FFFFFFEFh^^^add     rcx, rdx^^^mov     rdx, [rbx+0A0h]^^^test    rsi, rsi^^^mov     [rbx+8], rcx^^^mov     rcx, [rdx+30h]^^^mov     [rdx+10h], rcx^^^mov     [rdx], rcx^^^mov     [rdx+8], rcx^^^mov     [rdx+20h], rcx^^^mov     [rdx+18h], rcx^^^mov     [rdx+28h], rcx^^^mov     [rbx], eax^^^js      loc_427C07^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^jmp     loc_427C07^^^mov     r15, [rbx+98h]^^^mov     rdi, r15^^^call    qword ptr [r15+20h]^^^test    eax, eax^^^jle     loc_427FD8^^^mov     rcx, [rbx+0A0h]^^^cdqe^^^mov     rdx, [rcx+8]^^^sub     rdx, [rcx]^^^sar     rdx, 2^^^imul    rdx, rax^^^mov     rax, [rbx+8]^^^sub     rax, [rbx+10h]^^^sub     rbp, rdx^^^add     rbp, rax^^^mov     rax, [rbx+90h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^jz      loc_427E80^^^add     rbp, rax^^^xor     r12d, r12d^^^jmp     loc_427C6E^^^mov     rdi, [rax+10h]^^^test    rdi, rdi^^^jz      short loc_427D94^^^call    free^^^and     dword ptr [rbx], 0FFFFFEFFh^^^mov     rdi, rbx^^^call    _IO_doallocbuf^^^mov     rax, [rbx+38h]^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+30h], rax^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax+30h]^^^mov     [rax+20h], rdx^^^mov     [rax+18h], rdx^^^mov     [rax+28h], rdx^^^mov     [rax+10h], rdx^^^mov     [rax], rdx^^^mov     [rax+8], rdx^^^jmp     loc_427C5A^^^mov     eax, [rbx]^^^test    al, 4^^^jnz     loc_427E80^^^mov     rax, [rbx+38h]^^^mov     rdx, [rbx+40h]^^^mov     r12, rbp^^^mov     rsi, rax^^^sub     rsi, rdx^^^sub     rdx, rax^^^and     rsi, rbp^^^sub     r12, rsi^^^cmp     r12, rdx^^^jg      loc_427FB8^^^mov     rax, [rbx+0D8h]^^^xor     edx, edx^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^test    rax, rax^^^mov     r13, rax^^^js      loc_42805A^^^test    r12, r12^^^jz      loc_427F00^^^mov     rax, [rbx+0D8h]^^^test    r14d, r14d^^^mov     rsi, [rbx+38h]^^^mov     rdx, r12^^^mov     rax, [rax+70h]^^^jz      loc_427FC8^^^mov     rdi, rbx^^^call    rax^^^cmp     r12, rax^^^mov     rcx, rax^^^jle     loc_427F04^^^mov     rbp, r12^^^mov     r12d, 1^^^mov     rdx, rbp^^^sub     rdx, rax^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^cmovnz  rbp, rdx^^^nop     word ptr [rax+rax+00000000h]^^^mov     rdi, rbx^^^call    _IO_unsave_markers^^^mov     rax, [rbx+0D8h]^^^mov     rsi, rbp^^^mov     edx, r12d^^^mov     rdi, rbx^^^call    qword ptr [rax+80h]^^^cmp     rax, 0FFFFFFFFFFFFFFFFh^^^mov     rbp, rax^^^jz      loc_427C07^^^mov     [rbx+90h], rax^^^mov     rax, [rbx+38h]^^^and     dword ptr [rbx], 0FFFFFFEFh^^^mov     [rbx+18h], rax^^^mov     [rbx+8], rax^^^mov     [rbx+10h], rax^^^mov     [rbx+28h], rax^^^mov     [rbx+20h], rax^^^mov     [rbx+30h], rax^^^mov     rax, [rbx+0A0h]^^^mov     rdx, [rax+30h]^^^mov     [rax+10h], rdx^^^mov     [rax], rdx^^^mov     [rax+8], rdx^^^mov     [rax+20h], rdx^^^mov     [rax+18h], rdx^^^mov     [rax+28h], rdx^^^jmp     loc_427C07^^^xor     ecx, ecx^^^xor     eax, eax^^^mov     rdx, [rbx+38h]^^^add     rax, r13^^^mov     [rbx+18h], rdx^^^mov     [rbx+28h], rdx^^^add     rcx, rdx^^^mov     [rbx+20h], rdx^^^mov     [rbx+30h], rdx^^^add     r12, rdx^^^mov     rdx, [rbx+0A0h]^^^mov     [rbx+10h], rcx^^^mov     [rbx+8], r12^^^mov     rcx, [rdx+30h]^^^mov     [rdx+10h], rcx^^^mov     [rdx], rcx^^^mov     [rdx+8], rcx^^^mov     [rdx+20h], rcx^^^mov     [rdx+18h], rcx^^^mov     [rdx+28h], rcx^^^mov     [rbx+90h], rax^^^and     dword ptr [rbx], 0FFFFFFEFh^^^jmp     loc_427C07^^^mov     rax, [rbx+0D8h]^^^mov     rsi, rsp^^^mov     rdi, rbx^^^call    qword ptr [rax+90h]^^^test    eax, eax^^^jnz     loc_427E80^^^mov     eax, [rsp+0C8h+var_B0]^^^and     eax, 0F000h^^^cmp     eax, 8000h^^^jnz     loc_427E80^^^add     rbp, [rsp+0C8h+var_98]^^^xor     r12d, r12d^^^jmp     loc_427C6E^^^xor     r14d, r14d^^^mov     rcx, [rax+20h]^^^cmp     [rax+18h], rcx^^^setz    r14b^^^jmp     loc_427BB9^^^mov     rsi, rbp^^^xor     r12d, r12d^^^jmp     loc_427E0D^^^mov     rdx, [rbx+40h]^^^sub     rdx, rsi^^^jmp     loc_427E4F^^^mov     rax, [rbx+0A0h]^^^mov     rdi, r15^^^mov     rdx, [rax+60h]^^^mov     r8, [rax]^^^sub     r8, [rax+10h]^^^mov     [rax+58h], rdx^^^mov     rsi, [rbx+0A0h]^^^mov     rcx, [rbx+10h]^^^mov     rdx, [rbx+18h]^^^sar     r8, 2^^^add     rsi, 58h^^^call    qword ptr [r15+30h]^^^mov     rdx, [rbx+18h]^^^cdqe^^^lea     rcx, [rdx+rax]^^^sub     rdx, [rbx+10h]^^^mov     [rbx+8], rcx^^^mov     rcx, [rbx+0A0h]^^^add     rax, rdx^^^mov     rsi, [rcx]^^^add     rbp, rax^^^mov     [rcx+8], rsi^^^jmp     loc_427D64^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_427C07^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^jmp     loc_427C07^^^
_IO_adjust_wcolumn$$$movsxd  rax, edx^^^lea     r8, [rsi+rax*4]^^^cmp     rsi, r8^^^jnb     short loc_42792E^^^cmp     dword ptr [r8-4], 0Ah^^^lea     rcx, [r8-4]^^^jnz     short loc_427929^^^jmp     short loc_427938^^^sub     rcx, 4^^^cmp     dword ptr [rcx], 0Ah^^^jz      short loc_427938^^^cmp     rsi, rcx^^^jb      short loc_427920^^^lea     eax, [rdx+rdi]^^^retn^^^sub     r8, rcx^^^sar     r8, 2^^^lea     eax, [r8-1]^^^retn^^^
time$$$mov     eax, 0C9h^^^syscall^^^retn^^^
_Unwind_ForcedUnwind_Phase2$$$push    r15^^^mov     r15d, 1Ah^^^push    r14^^^push    r13^^^push    r12^^^mov     r12, rsi^^^push    rbp^^^mov     rbp, rdi^^^push    rbx^^^sub     rsp, 188h^^^mov     r13, [rdi+10h]^^^mov     r14, [rdi+18h]^^^jmp     short loc_492354^^^cmp     ebx, 5^^^mov     esi, 0Ah^^^mov     r9, r14^^^cmovz   esi, r15d^^^mov     r8, r12^^^mov     rcx, rbp^^^mov     rdx, [rbp+0]^^^mov     edi, 1^^^call    r13^^^test    eax, eax^^^jnz     short loc_492370^^^cmp     ebx, 5^^^jz      short loc_492375^^^mov     rax, [rsp+1B8h+var_68]^^^test    rax, rax^^^jz      short loc_492349^^^mov     r8, r12^^^mov     rcx, rbp^^^mov     rdx, [rbp+0]^^^mov     esi, 0Ah^^^mov     edi, 1^^^call    rax^^^cmp     eax, 7^^^mov     ebx, eax^^^jz      short loc_492375^^^cmp     eax, 8^^^jnz     short loc_492370^^^mov     rsi, rsp^^^mov     rdi, r12^^^call    uw_update_context^^^mov     rsi, rsp^^^mov     rdi, r12^^^call    uw_frame_state_for^^^cmp     eax, 5^^^mov     ebx, eax^^^jz      short loc_4922F0^^^test    eax, eax^^^jz      short loc_4922F0^^^nop     word ptr [rax+rax+00h]^^^mov     ebx, 2^^^add     rsp, 188h^^^mov     eax, ebx^^^pop     rbx^^^pop     rbp^^^pop     r12^^^pop     r13^^^pop     r14^^^pop     r15^^^retn^^^
_L_unlock_1405$$$lea     rdi, lock_11232^^^sub     rsp, 80h^^^call    __lll_unlock_wake_private^^^add     rsp, 80h^^^jmp     loc_412ADA^^^
mbsnrtowcs$$$mov     [rsp+var_28], rbp^^^mov     [rsp+var_18], r13^^^mov     eax, offset state_1^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_30], rbx^^^mov     r13, rdi^^^mov     [rsp+var_20], r12^^^mov     [rsp+var_8], r15^^^sub     rsp, 1A8h^^^test    r8, r8^^^mov     r14, rsi^^^mov     rbp, rcx^^^cmovz   r8, rax^^^test    rdx, rdx^^^mov     [rsp+1A8h+var_84], 0^^^mov     [rsp+1A8h+var_80], 1^^^mov     [rsp+1A8h+var_88], 1^^^mov     [rsp+1A8h+var_78], r8^^^mov     [rsp+1A8h+var_68], 0^^^jz      loc_4464A0^^^mov     rbx, [rsi]^^^lea     rsi, [rdx-1]^^^mov     rdi, rbx^^^call    sub_400330^^^lea     r15, [rbx+rax+1]^^^mov     rax, 0FFFFFFFFFFFFFFA8h^^^mov     rax, fs:[rax]^^^mov     rbx, [rax]^^^mov     rax, [rbx+28h]^^^test    rax, rax^^^jz      loc_446569^^^mov     r12, [rax]^^^cmp     qword ptr [r12], 0^^^mov     rbx, [r12+28h]^^^jz      short loc_446343^^^ror     rbx, 11h^^^xor     rbx, fs:30h^^^test    r13, r13^^^jz      loc_4464B0^^^lea     rax, [r13+rbp*4+0]^^^mov     rdi, rbx^^^mov     [rsp+1A8h+var_98], r13^^^mov     [rsp+1A8h+var_90], rax^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rdx, r14^^^mov     [rsp+1A8h+var_1A0], 1^^^mov     [rsp+1A8h+var_1A8], 0^^^lea     r9, [rsp+1A8h+var_48]^^^mov     rcx, r15^^^lea     rsi, [rsp+1A8h+var_98]^^^mov     rdi, r12^^^call    rbx^^^mov     rdx, [rsp+1A8h+var_98]^^^sub     rdx, r13^^^sar     rdx, 2^^^cmp     eax, 4^^^mov     rbp, rdx^^^jz      loc_446460^^^test    eax, eax^^^jz      loc_446460^^^test    eax, eax^^^setnz   dl^^^cmp     eax, 4^^^setnz   cl^^^jz      short loc_4463CA^^^test    dl, dl^^^jnz     short loc_446438^^^cmp     eax, 5^^^jz      short loc_4463F8^^^test    dl, dl^^^jz      short loc_4463F8^^^cmp     eax, 7^^^jz      short loc_4463F8^^^test    cl, cl^^^jz      short loc_4463F8^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^mov     rbp, 0FFFFFFFFFFFFFFFFh^^^mov     dword ptr fs:[rax], 54h^^^nop     dword ptr [rax+00000000h]^^^mov     rax, rbp^^^mov     rbx, [rsp+1A8h+var_30]^^^mov     rbp, [rsp+1A8h+var_28]^^^mov     r12, [rsp+1A8h+var_20]^^^mov     r13, [rsp+1A8h+var_18]^^^mov     r14, [rsp+1A8h+var_10]^^^mov     r15, [rsp+1A8h+var_8]^^^add     rsp, 1A8h^^^retn^^^cmp     eax, 7^^^jz      short loc_4463CA^^^cmp     eax, 6^^^jz      short loc_4463CA^^^cmp     eax, 5^^^jz      short loc_4463F8^^^mov     ecx, offset __PRETTY_FUNCTION___11488^^^mov     edx, 8Ah^^^mov     esi, offset aMbsnrtowcs_c^^^mov     edi, offset aStatus__gconv_^^^call    __assert_fail^^^test    rdx, rdx^^^jz      loc_44658C^^^sub     rdx, 1^^^mov     esi, [r13+rdx*4+0]^^^test    esi, esi^^^jnz     loc_4463B9^^^mov     rcx, [rsp+1A8h+var_78]^^^mov     ecx, [rcx]^^^test    ecx, ecx^^^jnz     loc_4465A2^^^mov     qword ptr [r14], 0^^^mov     rbp, rdx^^^jmp     loc_4463B9^^^xor     ebp, ebp^^^jmp     loc_4463F8^^^mov     rax, [r14]^^^lea     r13, [rsp+1A8h+var_198]^^^xor     ebp, ebp^^^lea     r14, [r13+100h]^^^mov     [rsp+1A8h+var_40], rax^^^mov     rax, [rsp+1A8h+var_78]^^^mov     rax, [rax]^^^mov     [rsp+1A8h+var_90], r14^^^mov     [rsp+1A8h+var_58], rax^^^lea     rax, [rsp+1A8h+var_58]^^^mov     [rsp+1A8h+var_78], rax^^^nop     dword ptr [rax+00h]^^^mov     rdi, rbx^^^mov     [rsp+1A8h+var_98], r13^^^call    _dl_mcount_wrapper_check^^^xor     r8d, r8d^^^mov     rcx, r15^^^lea     rdx, [rsp+1A8h+var_40]^^^mov     [rsp+1A8h+var_1A0], 1^^^mov     [rsp+1A8h+var_1A8], 0^^^lea     r9, [rsp+1A8h+var_48]^^^mov     rsi, r14^^^mov     rdi, r12^^^call    rbx^^^mov     rcx, [rsp+1A8h+var_98]^^^mov     rdx, rcx^^^sub     rdx, r13^^^sar     rdx, 2^^^add     rbp, rdx^^^cmp     eax, 5^^^jz      short loc_4464F8^^^cmp     eax, 4^^^jz      short loc_44655C^^^test    eax, eax^^^jnz     loc_4463B9^^^cmp     dword ptr [rcx-4], 1^^^sbb     rbp, 0^^^jmp     loc_4463B9^^^cmp     rbx, offset _nl_C_LC_CTYPE^^^mov     eax, offset __wcsmbs_gconv_fcts_c^^^jz      loc_446327^^^mov     rdi, rbx^^^call    __wcsmbs_load_conv^^^mov     rax, [rbx+28h]^^^jmp     loc_446327^^^mov     ecx, offset __PRETTY_FUNCTION___11488^^^mov     dl, 7Ch^^^mov     esi, offset aMbsnrtowcs_c^^^mov     edi, offset aResult0^^^call    __assert_fail^^^mov     ecx, offset __PRETTY_FUNCTION___11488^^^mov     edx, 7Fh^^^mov     esi, offset aMbsnrtowcs_c^^^mov     edi, offset aData___statep_^^^call    __assert_fail^^^
getcwd$$$mov     [rsp+var_30], rbx^^^mov     [rsp+var_18], r13^^^mov     rbx, rsi^^^mov     [rsp+var_28], rbp^^^mov     [rsp+var_20], r12^^^mov     r13, rdi^^^mov     [rsp+var_10], r14^^^mov     [rsp+var_8], r15^^^sub     rsp, 128h^^^test    rsi, rsi^^^jnz     short loc_44CFC0^^^test    rdi, rdi^^^jnz     loc_44D070^^^call    getpagesize^^^mov     esi, 1000h^^^cmp     eax, 1000h^^^cmovge  esi, eax^^^movsxd  rsi, esi^^^mov     rdi, rsi^^^mov     [rsp+128h+var_128], rsi^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^mov     rsi, [rsp+128h+var_128]^^^jnz     short loc_44CFC8^^^xor     r13d, r13d^^^jmp     short loc_44CFF2^^^test    rdi, rdi^^^jz      short loc_44CF9E^^^mov     rbp, rdi^^^mov     rdi, rbp^^^mov     eax, 4Fh^^^syscall^^^cmp     rax, 0FFFFFFFFFFFFF000h^^^ja      loc_44D580^^^test    eax, eax^^^js      short loc_44D030^^^test    rbx, rbx^^^jz      loc_44D090^^^test    r13, r13^^^cmovz   r13, rbp^^^mov     rax, r13^^^mov     rbx, [rsp+128h+var_30]^^^mov     rbp, [rsp+128h+var_28]^^^mov     r12, [rsp+128h+var_20]^^^mov     r13, [rsp+128h+var_18]^^^mov     r14, [rsp+128h+var_10]^^^mov     r15, [rsp+128h+var_8]^^^add     rsp, 128h^^^retn^^^mov     r12, 0FFFFFFFFFFFFFFC0h^^^mov     eax, fs:[r12]^^^cmp     eax, 24h^^^jz      short loc_44D0B0^^^test    r13, r13^^^mov     r13d, 0^^^jnz     short loc_44CFF2^^^cmp     eax, 22h^^^jnz     short loc_44D05A^^^test    rbx, rbx^^^jz      loc_44D5F1^^^mov     rdi, rbp^^^xor     r13d, r13d^^^call    free^^^jmp     short loc_44CFF2^^^mov     rax, 0FFFFFFFFFFFFFFC0h^^^xor     r13d, r13d^^^mov     dword ptr fs:[rax], 16h^^^jmp     loc_44CFF2^^^test    r13, r13^^^jnz     loc_44CFEB^^^movsxd  rsi, eax^^^mov     rdi, rbp^^^call    realloc^^^mov     r13, rax^^^jmp     loc_44CFEB^^^test    r13, r13^^^setz    [rsp+128h+var_DE]^^^test    rbx, rbx^^^setz    [rsp+128h+var_DD]^^^jz      loc_44D378^^^mov     [rsp+128h+var_110], rbp^^^mov     [rsp+128h+var_108], rbx^^^mov     r13, rbx^^^mov     [rsp+128h+var_DC], 24h^^^add     r13, rbp^^^lea     rdx, [rsp+128h+var_C8]^^^mov     esi, (offset a__+1)^^^mov     byte ptr [r13-1], 0^^^mov     edi, 1^^^call    _lxstat^^^test    eax, eax^^^js      loc_44D4B1^^^mov     rdx, [rsp+128h+var_C8]^^^mov     rax, [rsp+128h+var_C0]^^^mov     esi, offset unk_49D71B^^^mov     edi, 1^^^mov     [rsp+128h+var_120], rdx^^^lea     rdx, [rsp+128h+var_C8]^^^mov     [rsp+128h+var_118], rax^^^call    _lxstat^^^test    eax, eax^^^js      loc_44D4B1^^^lea     rax, [r13-1]^^^mov     rdx, [rsp+128h+var_C8]^^^mov     [rsp+128h+var_E8], rax^^^mov     rax, [rsp+128h+var_C0]^^^cmp     [rsp+128h+var_118], rax^^^mov     [rsp+128h+var_D8], rdx^^^mov     [rsp+128h+var_F0], rax^^^jz      loc_44D52B^^^mov     edx, 0FFFFFF9Ch^^^xor     r13d, r13d^^^mov     [rsp+128h+var_100], rbp^^^mov     r14d, edx^^^mov     [rsp+128h+var_F8], rbx^^^xor     ecx, ecx^^^mov     edi, r14d^^^mov     edx, 80000h^^^mov     esi, offset a__ ^^^call    __openat_nocancel^^^test    eax, eax^^^mov     r14d, eax^^^js      loc_44D51A^^^lea     rdx, [rsp+128h+var_C8]^^^mov     esi, eax^^^mov     edi, 1^^^call    _fxstat^^^test    eax, eax^^^js      loc_44D4F4^^^test    r13, r13^^^jz      short loc_44D1B9^^^mov     rdi, r13^^^call    closedir^^^test    eax, eax^^^jnz     loc_44D4DF^^^mov     rax, [rsp+128h+var_C0]^^^mov     edi, r14d^^^mov     r15, [rsp+128h+var_C8]^^^mov     [rsp+128h+var_D0], rax^^^call    fdopendir^^^test    rax, rax^^^mov     r13, rax^^^jz      loc_44D4DF^^^mov     ebx, 1^^^nop     dword ptr [rax+00000000h]^^^mov     dword ptr fs:[r12], 0^^^mov     rdi, r13^^^call    readdir64^^^test    rax, rax^^^jz      loc_44D3C0^^^movzx   edx, byte ptr [rax+12h]^^^test    dl, dl^^^jz      short loc_44D20F^^^cmp     dl, 4^^^jnz     short loc_44D1E8^^^cmp     byte ptr [rax+13h], 2Eh^^^jz      loc_44D3E8^^^test    bl, bl^^^jz      short loc_44D228^^^cmp     r15, [rsp+128h+var_120]^^^jz      loc_44D408^^^lea     rbp, [rax+13h]^^^lea     rcx, [rsp+128h+var_C8]^^^mov     r8d, 100h^^^mov     esi, r14d^^^mov     edi, 1^^^mov     rdx, rbp^^^call    __fxstatat64^^^test    eax, eax^^^js      short loc_44D1E8^^^mov     eax, [rsp+128h+var_B0]^^^and     eax, 0F000h^^^cmp     eax, 4000h^^^jnz     short loc_44D1E8^^^mov     rax, [rsp+128h+var_120]^^^cmp     rax, [rsp+128h+var_C8]^^^jnz     short loc_44D1E8^^^mov     rdx, [rsp+128h+var_118]^^^cmp     rdx, [rsp+128h+var_C0]^^^jnz     loc_44D1E8^^^xor     eax, eax^^^or      rcx, 0FFFFFFFFFFFFFFFFh^^^mov     rdi, rbp^^^repne scasb^^^mov     r8, [rsp+128h+var_E8]^^^sub     r8, [rsp+128h+var_100]^^^not     rcx^^^lea     rbx, [rcx-1]^^^cmp     rbx, r8^^^jb      loc_44D325^^^cmp     [rsp+128h+var_DD], 0^^^jz      loc_44D5D0^^^cmp     rbx, [rsp+128h+var_108]^^^mov     rax, [rsp+128h+var_108]^^^mov     rdi, [rsp+128h+var_100]^^^mov     [rsp+128h+var_128], r8^^^cmovnb  rax, rbx^^^add     rax, rax^^^mov     rsi, rax^^^mov     [rsp+128h+var_120], rax^^^call    realloc^^^test    rax, rax^^^mov     rcx, rax^^^mov     r8, [rsp+128h+var_128]^^^jz      loc_44D5B9^^^mov     rax, [rsp+128h+var_100]^^^add     rax, [rsp+128h+var_108]^^^lea     rsi, [rcx+r8]^^^mov     rdi, [rsp+128h+var_E8]^^^mov     [rsp+128h+var_128], rcx^^^sub     rdi, rax^^^add     rdi, [rsp+128h+var_120]^^^mov     rdx, rax^^^sub     rdx, [rsp+128h+var_E8]^^^add     rdi, rcx^^^call    memcpy^^^mov     rcx, [rsp+128h+var_128]^^^mov     [rsp+128h+var_E8], rax^^^mov     rax, [rsp+128h+var_120]^^^mov     [rsp+128h+var_100], rcx^^^mov     [rsp+128h+var_108], rax^^^mov     rcx, [rsp+128h+var_E8]^^^mov     rdx, rbx^^^mov     rsi, rbp^^^sub     rcx, rbx^^^mov     rdi, rcx^^^mov     [rsp+128h+var_128], rcx^^^call    memcpy^^^mov     rcx, [rsp+128h+var_128]^^^mov     rdx, [rsp+128h+var_D0]^^^cmp     [rsp+128h+var_F0], rdx^^^lea     rax, [rcx-1]^^^mov     byte ptr [rcx-1], 2Fh^^^mov     [rsp+128h+var_E8], rax^^^jz      loc_44D60A^^^mov     rdx, [rsp+128h+var_D0]^^^mov     [rsp+128h+var_120], r15^^^mov     [rsp+128h+var_118], rdx^^^jmp     loc_44D16C^^^cmp     [rsp+128h+var_DE], 0^^^jnz     loc_44D46E^^^mov     dword ptr fs:[r12], 16h^^^mov     [rsp+128h+var_110], rbp^^^nop     dword ptr [rax+00000000h]^^^xor     r13d, r13d^^^cmp     [rsp+128h+var_DE], 0^^^jz      loc_44CFF2^^^test    rbx, rbx^^^jz      loc_44CFF2^^^mov     rdi, [rsp+128h+var_110]^^^call    free^^^jmp     loc_44CFF2^^^mov     eax, fs:[r12]^^^test    eax, eax^^^jnz     loc_44D4C0^^^test    bl, bl^^^nop^^^jz      short loc_44D420^^^mov     rdi, r13^^^xor     ebx, ebx^^^call    rewinddir^^^jmp     loc_44D1E8^^^cmp     byte ptr [rax+14h], 0^^^jz      loc_44D1E8^^^cmp     word ptr [rax+14h], 2Eh^^^jnz     loc_44D219^^^jmp     loc_44D1E8^^^mov     rdx, [rsp+128h+var_118]^^^cmp     [rax], rdx^^^jnz     loc_44D1E8^^^jmp     loc_44D228^^^mov     rbp, [rsp+128h+var_100]^^^mov     rbx, [rsp+128h+var_F8]^^^mov     edx, r14d^^^mov     dword ptr fs:[r12], 2^^^mov     r15d, 2^^^xor     r14d, r14d^^^mov     rdi, r13^^^mov     dword ptr [rsp+128h+var_128], edx^^^call    closedir^^^mov     edx, dword ptr [rsp+128h+var_128]^^^test    r14b, r14b^^^jz      short loc_44D45C^^^movsxd  rdi, edx^^^mov     eax, 3^^^syscall^^^cmp     [rsp+128h+var_110], 0^^^jz      short loc_44D4D5^^^mov     fs:[r12], r15d^^^jmp     loc_44D398^^^mov     rdi, rbp^^^call    free^^^mov     eax, fs:[r12]^^^mov     edi, 1001h^^^mov     [rsp+128h+var_DC], eax^^^call    malloc^^^test    rax, rax^^^mov     rbp, rax^^^mov     [rsp+128h+var_110], 0^^^jz      loc_44D398^^^mov     [rsp+128h+var_108], 1001h^^^mov     r13, [rsp+128h+var_108]^^^jmp     loc_44D0DB^^^mov     edx, 0FFFFFF9Ch^^^xor     r14d, r14d^^^mov     r15d, fs:[r12]^^^jmp     short loc_44D44D^^^mov     rbp, [rsp+128h+var_100]^^^mov     edx, r14d^^^mov     r15d, eax^^^mov     rbx, [rsp+128h+var_F8]^^^jmp     loc_44D43C^^^mov     rdi, rbp^^^call    free^^^jmp     short loc_44D464^^^mov     edx, r14d^^^mov     rbp, [rsp+128h+var_100]^^^mov     rbx, [rsp+128h+var_F8]^^^mov     r14d, 1^^^jmp     short loc_44D4B9^^^mov     rbp, [rsp+128h+var_100]^^^mov     rbx, [rsp+128h+var_F8]^^^mov     edx, r14d^^^mov     r14d, 1^^^test    r13, r13^^^mov     r15d, fs:[r12]^^^jz      loc_44D44D^^^jmp     loc_44D43F^^^mov     rbp, [rsp+128h+var_100]^^^mov     edx, eax^^^mov     rbx, [rsp+128h+var_F8]^^^xor     r14d, r14d^^^jmp     short loc_44D507^^^cmp     [rsp+128h+var_120], rdx^^^jnz     loc_44D157^^^mov     rdx, [rsp+128h+var_108]^^^lea     rax, [rbp+rdx-1]^^^cmp     [rsp+128h+var_E8], rax^^^jz      short loc_44D5A5^^^sub     r13, [rsp+128h+var_E8]^^^mov     rsi, [rsp+128h+var_E8]^^^mov     rdi, rbp^^^mov     rdx, r13^^^call    sub_400340^^^cmp     [rsp+128h+var_DD], 0^^^jnz     short loc_44D593^^^cmp     [rsp+128h+var_110], 0^^^mov     edx, [rsp+128h+var_DC]^^^mov     r13, [rsp+128h+var_110]^^^mov     fs:[r12], edx^^^cmovz   r13, rbp^^^jmp     loc_44CFF2^^^mov     r12, 0FFFFFFFFFFFFFFC0h^^^neg     eax^^^mov     fs:[r12], eax^^^jmp     loc_44D03C^^^mov     rsi, r13^^^mov     rdi, rbp^^^call    realloc^^^mov     [rsp+128h+var_110], rax^^^jmp     short loc_44D563^^^mov     rax, [rsp+128h+var_E8]^^^mov     byte ptr [rax-1], 2Fh^^^sub     rax, 1^^^mov     [rsp+128h+var_E8], rax^^^jmp     short loc_44D547^^^mov     rbp, [rsp+128h+var_100]^^^mov     edx, r14d^^^mov     rbx, [rsp+128h+var_F8]^^^mov     r15d, fs:[r12]^^^jmp     loc_44D43C^^^mov     rbp, [rsp+128h+var_100]^^^mov     edx, r14d^^^mov     rbx, [rsp+128h+var_F8]^^^mov     dword ptr fs:[r12], 22h^^^mov     r15d, 22h^^^jmp     loc_44D43C^^^mov     ecx, offset __PRETTY_FUNCTION___9153^^^mov     edx, 9Bh^^^mov     esi, offset a__SysdepsUni_0^^^mov     edi, offset a__libc_errno34^^^call    __assert_fail^^^cmp     [rsp+128h+var_D8], r15^^^jnz     loc_44D360^^^mov     rdi, r13^^^mov     rbp, [rsp+128h+var_100]^^^mov     rbx, [rsp+128h+var_F8]^^^mov     dword ptr [rsp+128h+var_128], r14d^^^call    closedir^^^test    eax, eax^^^mov     edx, dword ptr [rsp+128h+var_128]^^^jnz     short loc_44D641^^^mov     rax, [rsp+128h+var_108]^^^lea     r13, [rbp+rax+0]^^^jmp     loc_44D536^^^xor     r14d, r14d^^^jmp     loc_44D4B9^^^
